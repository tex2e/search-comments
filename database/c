"#ifdef FAITH" part is local hack for supporting IPv4-v6 translator.
"*" at the end of the pattern matches
", " separated matches
"-" is a synonym for the default external encoding.
"-" is a synonym for the default internal encoding.
"-" is returned when the current file is STDIN.
"-1" is compareable to 0 but allows a non restrictive access which is fater.
"0" digits after the decimal point but before the first significant digit of the number
"Adobe Photoshop Document Data Block": 8BIM...
"Any newline" might match two characters, but it also might match just one.
"BMS" means "BitMask Size".
"Bounds for Some Functions Concerning Dynamic Storage Allocation".
"Color Image Quantization for Frame Buffer Display", Proc.
"Core" in the previous sentence does not include operating-system specific VFS implementation.
"DES will be Totally Insecure within Ten Years," M.E.
"E" and "O" are ignored.
"Expanding" means to do the following:  (1)  Make sure VDBE cursor numbers have been assigned to every element of the FROM clause.
"Frees" a bc_num NUM.
"Gaps" are set to -1 dynamically instead (this fixes a bug).
"I" is the direction the branch goes.
"LIMIT -1" always shows all rows.
"LogEst" is short for "Logarithmic Estimate".
"Managed" code needs this.
"Normal" properties can be printed from tables.
"PRAGMA index_list" includes the main PK b-tree
"Password Security: A Case History," R.
"RBU" stands for "Resumable Bulk Update".
"SELECT *" statement on zTbl
"Saving the cursor position" means that the location in the btree is remembered in such a way that it can be moved back to the same spot after the btree has been modified.
"a"  Write-only, each write call appends data at end of file.
"a" is the event type, one of TK_UPDATE, TK_INSERT, TK_DELETE, or TK_INSTEAD.
"a+" Read-write, each write call appends data at end of file.
"armenian code filter and converter"
"buf" is pointer to initial function name with "_" .
"copyKey" is true if the hash table should make its own private copy of keys and false if it should just use the supplied pointer.
"corresponding ASCII compatible encoding" is an ASCII compatible encoding which can represents exactly the same characters as the given ASCII incompatible encoding.
"crlf_newline" means newline converter from LF to CRLF.
"darkstar" is not a recognized authority.
"data" means the region of the current file that begins at _offset_ and extends for _len_ bytes.
"db" is a pointer to the database connection.
"encrypt" routine (for backwards compatibility)
"file exists" means that stat() or fstat() system call is successful.
"file" is module file name .
"fts5yymajor" is the symbol code, and "fts5yypminor" is a pointer to the value to be deleted.
"full" means "#scan with full parameters".
"getconf CLK_TCK" command shows the clock ticks per second.
"inf","nan" and maybe other weird ones
"int" is used otherwise.
"like" or "glob" or "regexp"
"long" formats are int formats for us
"m" is the number of vowel consonant pairs.
"new"-style: setting - underscore, 4 chars of count, 4 chars of salt key - unlimited characters
"new_size" must be a power of 2.
"old"-style, "reasonable" invalid salts, UFC-crypt behavior expected
"old"-style, valid salts
"old"-style: setting - 2 chars of salt key - up to 8 characters
"onOff" turns imposter mode on or off.
"p" is NULL if this is the first term of the FROM clause.
"p" stands for "positive".
"pNew" is a pointer to the hash table that is to be initialized.
"perm" must be all-zeroes on entry to this routine.
"prototype" may be undefined if "scope" isn't set
"r+" Read-write, starts at beginning of file.
"readonly" is not a valid option for the "mode" parameter.
"s" is a scaling factor (.LE.
"schema"."table" format
"setkey" routine (for backwards compatibility)
"stat" column of stat1 table
"sz" must be the number of bytes in the cell.
"t"  Text file mode  When the open mode of original IO is read only, the mode cannot be changed to be writable.
"temp.tmp" is not good temporary filename.
"the number of bits" means that the bit position of the highest bit which is different to the sign bit.
"titles" --- Allows the use of an additional key for the fields dictionary.(if these are strings or unicode objects) or this can also be meta-data to be passed around with the field description.
"tnum" is the root page of the b-tree to which the imposter table should connect.
"unsigned char" is used if there are fewer than 250 rules and states combined.
"unsigned char" is used if there are fewer than 250 terminals and nonterminals.
"unsigned char" is used if there are fewer than 256 symbols.
"view", "trigger", or "index"
"w"  Write-only, truncates existing file to zero length or creates a new file for writing.
"w+" Read-write, truncates existing file to zero length or creates a new file for reading and writing.
"write-version" value for main db files
"x IN (SELECT ...)":  TUNING: the SELECT returns 25 rows
"yymajor" is the symbol code, and "yypminor" is a pointer to the value to be deleted.
"yymajor" is the symbol code, and "yypminor" is a pointer to the value.
#  include "os_win.h"
# Array#map passes the array's elements to "yield" and collects the # results of "yield" as an array.
# Cancel is 7-th argument of BeforeNavigate, # so you can use 6 as key of hash instead of 'Cancel'.
# Following example shows that "next" returns the passed elements and # values passed to "feed" are collected as an array which can be # obtained by StopIteration#result.
# If invoked by inetd, STDIN/STDOUT/STDERR is a socket.
# Instead, you have to use WIN32OLE_VARIANT object to call the method.
# It also disables stripping lowest zeros.
# Since the byte is buffered in ec, it is dropped from src.
# The argument is counted from 0.
# The file "log" is opened just once.
# The problem is detected by 4th byte.
# `+' and space flag changes format of negative numbers.
# `+' and space flag disables complements for negative numbers.
# include "sqlite3ext.h"
# include "sqliteInt.h"
# include "vdbeInt.h"
# of codes output (for debugging)
# of color components per pixel
# of hist cells in update box
# of leaves on this trunk page
# record is prefixed by 32-bit length.
# set FOO as BAR and unset BAZ.
# set true to BeforeNavigate reference argument `Cancel'.
# stdout and stderr is redirected to log file.
# valgrind has --log-fd option for log destination.
### DE/QUEUE WATCH ELEMENTS ### to be used by watch element manager only
### LOW LEVEL WATCHPOINT HANDLING ###
### MANAGE WATCH COLLISIONS ### To be used only by watch element manager and memory differ ###
### MANAGE WATCH ELEMENTS ###
### PRINTING POINTER DIFFERENCES ###
### REGISTER WATCHPOINT ### To be used only by watch element and collision managers ###
### SET WATCHPOINT ADDR ### To be used only by watch element and collision managers ###
### WATCH ELEMENT DELETION ### only use phpdbg_remove_watch_element from the exterior
### WATCHING FOR CHANGES ###
##1  Recognize POSIX inf/nan representations on all platforms.
#/" that comment is used to determine the particular value of the opcode.
#49274, fatal error with object without a toString method Fails nicely instead of getting a recovarable fatal error.
#67167: doesn't return null on failure for objects
#N is the N-th register.
#define BIGDECIMAL_DEBUG 1
#define Bad_float_h if your system lacks a float.h or if it does not define some or all of DBL_DIG, DBL_MAX_10_EXP, DBL_MAX_EXP, FLT_RADIX, FLT_ROUNDS, and DBL_MAX.
#define Check_FLT_ROUNDS if FLT_ROUNDS can assume the values 2 or 3 and Honor_FLT_ROUNDS is not #defined.
#define DEBUGGING_ENVARS
#define DEBUG_FORCE_CONTROL_HEAD 1
#define DEBUG_FORCE_UNOPTIMIZED_CBRAS 2
#define DEBUG_MAIN_NETWORK 1
#define DEBUG_REDIRECT
#define DECL_SC_REG(r, reg) VALUE reg_##r
#define ENABLE_NUMERIC_STRING
#define GD2_DBG(s) (s)
#define GD_SS_DBG(s) (s)
#define Honor_FLT_ROUNDS if FLT_ROUNDS can assume the values 2 or 3 and strtod and dtoa should round accordingly.
#define IBM for IBM mainframe-style floating-point arithmetic.
#define IEEE_8087 for IEEE-arithmetic machines where the least significant byte has the lowest address.
#define IEEE_BIG_ENDIAN for IEEE-arithmetic machines where the most significant byte has the lowest address.
#define IEEE_LITTLE_ENDIAN for IEEE-arithmetic machines where the least significant byte has the lowest address.
#define IEEE_MC68k for IEEE-arithmetic machines where the most significant byte has the lowest address.
#define INFNAN_CHECK on IEEE systems to cause strtod to check for Infinity and NaN (case insensitively).
#define IO_DBG(s) (s)
#define Inaccurate_Divide for IEEE-format with correctly rounded products but inaccurate quotients, e.g., for Intel i860.
#define KR_headers for old-style C function headers.
#define LOG_SSA_RANGE #define LOG_NEG_RANGE
#define Long int on machines with 32-bit ints and 64-bit longs.
#define MALLOC your_malloc, where your_malloc(n) acts like malloc(n) if memory is available and otherwise does something you deem appropriate.
#define MULTIPLE_THREADS if the system offers preemptively scheduled multiple threads.
#define NATURAL to get hybrid natural merge.
#define NO_HEX_FP to omit recognition of hexadecimal floating-point values by strtod.
#define NO_IEEE_Scale to disable new (Feb.
#define NO_INFNAN_CHECK if you do not wish to have INFNAN_CHECK #defined automatically on IEEE systems.
#define NO_STRTOD_BIGCOMP (on IEEE-arithmetic systems only for now) to disable logic for "fast" testing of very long input strings to strtod.
#define No_leftright to omit left-right logic in fast floating-point computation of dtoa.
#define Omit_Private_Memory to omit logic (added Jan.
#define P DBL_MANT_DIG
#define RND_PRODQUOT to use rnd_prod and rnd_quot (assembly routines that use extended-precision instructions to compute rounded products and quotients) with IBM.
#define ROUND_BIASED for IEEE-format with biased rounding and arithmetic that rounds toward +Infinity.
#define ROUND_BIASED for IEEE-format with biased rounding.
#define ROUND_BIASED_without_Round_Up for IEEE-format with biased rounding when the underlying floating-point arithmetic uses unbiased rounding.
#define RUBY_MARK_FREE_DEBUG 1
#define SET_INEXACT if IEEE arithmetic is being used and extra computation should be done to set the inexact flag when the result is inexact and avoid setting inexact when the result is exact.
#define SQLITE_ABORT 4  // Also an error code
#define SQLITE_IGNORE 2 // Also used by sqlite3_authorizer() callback
#define STRUCT_WIDEVAL
#define TEST_DOCOMO #define TEST_KDDI
#define TRANSLATE_TRACE 1
#define USE_LOCALE to use the current locale's decimal_point value.
#define USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE
#define VAX for VAX-style floating-point arithmetic (D_floating).
#define WAL_HDRSIZE 24
#define YES_ALIAS to permit aliasing certain double values with arrays of ULongs.
#define yymore()     goto yymore_restart
#hostname is defined in lib/openssl/ssl.rb
#ifdef COMPILE_DL_READLINE This dlsym() is always used as even the CGI SAPI is linked against "CLI"-only extensions.
#ifndef PHAR_HAVE_OPENSSL
#ifndef SQLITE_OMIT_BUILTIN_TEST
#ifndef SQLITE_OMIT_FOREIGN_KEY
#ifndef SQLITE_OMIT_INCRBLOB
#ifndef SQLITE_OMIT_SUBQUERY
#ifndef SQLITE_OMIT_TRACE
#ifndef SQLITE_OMIT_TRIGGER
#ifndef SQLITE_OMIT_WAL
#ifndef for making compiler shutting up
#include "btreeInt.h"
#include "ext/com/php_COM.h" #include "ext/com/php_VARIANT.h"
#include "ext/odbc/php_odbc.h"
#include "ext/standard/php_crypt.h"
#include "ext/standard/php_ext_syslog.h"
#include "ext/xml/php_xml.h" #include "ext/wddx/php_wddx.h" #include "ext/mysql/php_mysql.h"
#include "fts3_hash.h"
#include "fts3_tokenizer.h"
#include "fts5parse.h"
#include "namespace.h"
#include "sqlite3.h"              ** Required for error code definitions **
#include "sqlite3ext.h"
#include "sqlite3session.h"
#include "sqliteInt.h"
#include "sqliteInt.h"   ** Requires access to internal data structures **
#include "whereInt.h"
#warning is not ANSI C #warning Invalidate resource if the param count is wrong, or other problems #warning occurred during functions.
'*error_message' has to be passed around from php_mail()
'--' indicates end of args if not followed by a known long option name
'.pubkey' for public key file
'/' should be placed before appending child entry's name to 'path'.
'Canadian_Aboriginal': Script
'Cc': General Category
'Cf': General Category
'Cn': General Category
'Co': General Category
'Converter' class for codepage conversions
'Cs': General Category
'Fix' the table name to this db before looking up the table.
'Ll': General Category
'Lm': General Category
'Lo': General Category
'Lt': General Category
'Lu': General Category
'Mc': General Category
'Me': General Category
'Mn': General Category
'Nd': General Category
'New_Tai_Lue': Script
'Nl': General Category
'No': General Category
'Not a Number' value.
'O', the contents of A are destroyed.
'Old_Persian': Script
'Pc': General Category
'Pd': General Category
'Pe': General Category
'Pf': General Category
'Pi': General Category
'Po': General Category
'Ps': General Category
'R' can be the recursive thing or the name 'R' (and similarly for 'R' followed by digits).
'Root' function to walk into a dtype.
'Sc': General Category
'Sk': General Category
'Sm': General Category
'So': General Category
'Syloti_Nagri': Script
'Y' is a consonant unless it follows another consonant, in which case it is a vowel.
'Z' iz not supported anymore and should be replaced with 'z'
'Zl': General Category
'Zp': General Category
'Zs': General Category
'_' in quoted stream is converted to space.
'ab' - 'a' and 'b' regexps are concatenated 'a+' - 'a' is the sub-expression of the '+' operator The condition checkers are boolean (true/false) checkers.
'base' restricts the output to that unit.
'callback' will be called several times (the number of heap page, at current implementation) with: vstart: a pointer to the first living object of the heap_page.
'casting' controls how the detected unit from the string is allowed to be cast to the 'unit' parameter.
'casting' controls whether data loss is allowed by truncating the data to a coarser unit.
'dir' must point to the directory containing executable program, 'p' must point to the executable program name relative to 'dir'.
'documents' values for current csr row
'fields' is reused because the ownership of the strings has been transferred above.
'internal', 'leaf' or 'overflow'
'maxdims' is the maximum recursion depth.
'metastr' is only used in the error message, and may be NULL.
'metastr' is used for the error message if the divisor doesn't work, and can be NULL if the metadata didn't come from a string.
'name' is a name for the array, used to give better error messages.
'name' is the attribute to search for.
'narrays' was set to how far we got in the conversion
'normal' can be overridden by any other state
'obj' is the object to be converted to an ndarray.
'obj' is the object to search for attribute.
'occurrences' values for current csr row
'op' is an array of at least NPY_MAXARGS PyArrayObject *.
'out' gets filled with the parsed date-time.
'out' must be a tuple of arrays and Nones
'out_bestunit' gives a suggested unit based on the amount of resolution provided in the string, or -1 for NaT.
'out_bestunit' gives a suggested unit based on whether the object was a datetime.date or datetime.datetime object.
'out_dtype' should be either NULL or a minimal starting dtype when the function is called.
'out_special' gets set to 1 if the parsed time was 'today', 'now', or ''/'NaT'.
'qh facet_list' contains the convex hull
'reloading' and 'finishing' can be overridden by 'terminating'
'reloading' can be overridden by 'finishing'
'ret' is a PyUString containing the datetime string, and this function appends the metadata string to it.
'sh' if -CIA- or -CH, but not SCH, except SCHW.
'sh' in -TIA- or -TIO- else 'th' before H else T
'ssHandle' is not a struct/union/class member
'str' must be a NULL-terminated string, and 'len' must be its length.
'type cast': pointer truncation from 'void*' to 'ptr_intT'
'tzoffset' is used if 'local' is enabled, and 'tzoffset' is set to a value other than -1.
'unit' should contain -1 if the unit is unknown, or the unit which will be used if it is.
'unsigned char' is promoted to 'int' when passed through '...'
'value' represents days, and seconds/useconds are filled.
'yyvs': related to semantic values.
(   x   )   (   0  ) where alpha and beta are scalars, and x is an (n-1)-element real vector.
(   x   )   (   0  ) where alpha and beta are scalars, with beta real, and x is an (n-1)-element complex vector.
(  0      0           T2   ) Information about the permutations P and the diagonal matrix D is returned in the vector SCALE.
( -s( k )  c( k ) ) A       (input/output) COMPLEX array, dimension (LDA,N) The m by n matrix A.
( -s( k )  c( k ) ) A       (input/output) COMPLEX*16 array, dimension (LDA,N) The m by n matrix A.
( -s( k )  c( k ) ) A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) The m by n matrix A.
( -s( k )  c( k ) ) A       (input/output) REAL array, dimension (LDA,N) The m by n matrix A.
("EOF" means "End Of File".
(**)  At one point restrictions (4) and (5) defined a subset of DISTINCT sub-queries that were excluded from this optimization.
(**)  Not implemented.
(**)  Restriction (10) was removed from the code on 2005-02-05 but we accidently carried the comment forward until 2014-09-15.
(*MARK) must have an argument
(*SKIP:arg) is found in the pattern.
(*THEN) is found in the pattern.
(*VERB) not recognized
(+0 for a, +1 for b, +2 for c, +3 for d.)  If the LHS of MATCH were "ex1"  indicating that all columns should be searched, then eSearch would be set to FTS3_FULLTEXT_SEARCH+4.
(-1) catches illegal zero case as unsigned underflows to positive large.
(-8..-15):: Enables raw deflate mode which will not generate a check value, and will not look for any check values for comparison at the end of the stream.
(-Float::MAX).prev_float and (-Float::INFINITY).prev_float is -Float::INFINITY.
(1) A page of the database file is never overwritten unless one of the following are true:  (a) The page and all other pages on the same sector are overwriteable.
(1) For each jump instruction with a negative P2 value (a label) resolve the P2 value to an actual address.
(1) START     At the beginning or end of an SQL statement.
(1) We never move from unlocked to anything higher than shared lock.
(1) the database must be locked.
(1+argn) is an upper bound for the number of links this trans connects to
(10)  The subquery does not use aggregates or the outer query does not use LIMIT.
(10) The pattern of bits in bytes 24 through 39 shall not repeat in less than one billion transactions.
(11)  The subquery and the outer query do not both have ORDER BY clauses.
(11) A database file is well-formed at the beginning and at the conclusion of every transaction.
(12) An EXCLUSIVE lock is held on the database file when writing to the database file.
(13)  The subquery and outer query do not both use LIMIT.
(13) A SHARED lock is held on the database file while reading any content out of the database file.
(14)  The subquery does not use OFFSET.
(15)  The outer query is not part of a compound select or the subquery does not have a LIMIT clause.
(16)  The outer query is not an aggregate or the subquery does not contain ORDER BY.
(18)  If the sub-query is a compound select, then all terms of the ORDER by clause of the parent must be simple references to  columns of the sub-query.
(19)  The subquery does not use LIMIT or the outer query does not have a WHERE clause.
(1972) Algorithms to reveal properties of floating-point arithmetic.
(1974) More on algorithms that reveal properties of floating point arithmetic units.
(2)  4 byte big-endian integer which is the number of valid page records in the journal.
(2)  An application crash or power loss can leave stale lock files sitting around that need to be cleared manually.
(2)  Bypass the creation of the sqlite_master table entry for the PRIMARY KEY as the the primary key index is now identified by the sqlite_master table entry of the table itself.
(2)  Convert the OP_CreateTable into an OP_CreateIndex.  There is no rowid btree for a WITHOUT ROWID.
(2)  Register to hold the maximum ROWID of pTab.
(2)  The subquery is not an aggregate or the outer query is not a join.
(2)  There is a single global PGroup that all PCaches are a member of.
(2)  They have the same iSortIdx.
(2) A constant pointer to this function named just "F".
(2) Compute the maximum number of arguments used by any SQL function and store that value in *pMaxFuncArgs.
(2) It is also compiled separately and linked with pcretest.c, which can be asked to print out a compiled regex for debugging purposes.
(2) NORMAL    We are in the middle of statement which ends with a single semicolon.
(2) SQLite never explicitly requests a pendig lock.
(2) call passed function `func'.
(2) tkOTHER     Any other SQL token.
(2-1) set_trace_func (old API)
(20)  If the sub-query is a compound select, then it must not use an ORDER BY clause.
(2006-02-16:)  The enc value can be or-ed with SQLITE_UTF16_ALIGNED.
(2007-08-30)  Frank van Vugt has studied this problem closely and has send his findings to the SQLite developers.
(2011-04-15) Do not do a full scan of an unordered index.  (2013-10-03) Do not count the entries in a partial index.  In practice the KeyInfo structure will not be used.
(21)  The subquery does not use LIMIT or the outer query is not DISTINCT.
(22)  The subquery is not a recursive CTE.
(23)  The parent is not a recursive CTE, or the sub-query is not a compound query.
(24)  The subquery is not an aggregate that uses the built-in min() or  or max() functions.
(3)  4 byte big-endian integer which is the initial value for the  sanity checksum.
(3)  Add terms to the WHERE clause to accommodate the NATURAL keyword on joins and the ON and USING clause of joins.
(3)  Add terms to the WHERE clause to accomodate the NATURAL keyword on joins and the ON and USING clause of joins.
(3)  Bypass the creation of the sqlite_master table entry for the PRIMARY KEY as the primary key index is now identified by the sqlite_master table entry of the table itself.
(3)  PCache-local bulk allocation.
(3)  Register to hold the rowid in sqlite_sequence of pTab  The 2nd register is the one that is returned.
(3)  Set the Index.tnum of the PRIMARY KEY Index object in the schema to the rootpage from the main table.
(3)  The subquery is not the right operand of a left outer join (Originally ticket #306.
(3)  The template has same or fewer dependencies than the current loop (4)  The template has the same or lower cost than the current loop
(3) A shared lock is always held when a reserve lock is requested.
(3) Apply back all the Householder tranformations to solve the original least squares problem.
(3) EXPLAIN   The keyword EXPLAIN has been seen at the beginning of  a statement.
(3) The inner query has a LIMIT clause (since the changes to the WHERE close would change the meaning of the LIMIT).
(3) Update the Vdbe.readOnly and Vdbe.bIsReader flags to accurately indicate what the prepared statement actually does.
(3) Writes to the database file are an integer multiple of the page size in length and are aligned on a page boundary.
(3) call func with data1 (4) acquire GVL.
(3) call func with data1 and a pointer to the flags.
(3) tkEXPLAIN   The "explain" keyword.
(32-bits for each page).
(3L) The left singular vector matrix of the remaining matrix.
(3R) The inverse transformation of (2L).
(4)  4 byte integer which is the number of pages to truncate the database to during a rollback.
(4)  Scan the list of columns in the result set (pEList) looking for instances of the "*" operator or the TABLE.* operator.
(4)  Set all columns of the PRIMARY KEY schema object to be NOT NULL.
(4)  Set the Index.tnum of the PRIMARY KEY Index object in the schema to the rootpage from the main table.
(4) Initialize the p4.xAdvance pointer on opcodes that use it.
(4) Reads from the database file are either aligned on a page boundary and an integer multiple of the page size in length or are taken from the first 100 bytes of the database file.
(4) The inner query is the right operand of a LEFT JOIN.
(4) return a value which is returned at (2).
(4) tkCREATE    The "create" keyword.
(4R) The inverse transformation of (1L).
(5)  4 byte big-endian integer which is the sector size.
(5) All writes to the database file are synced prior to the rollback journal being deleted, truncated, or zeroed.
(5) Check interrupts.
(5) Reclaim the memory allocated for storing labels.
(5) tkTEMP      The "temp" or "temporary" keyword.
(6)  4 byte big-endian integer which is the page size.
(6)  Replace the rowid tail on all automatically generated UNIQUE indices with the PRIMARY KEY columns.
(6)  The subquery does not use aggregates or the outer query is not DISTINCT.
(6) If a master journal file is used, then all writes to the database file are synced prior to the master journal being deleted.
(6) tkTRIGGER   The "trigger" keyword.
(7)  The subquery has a FROM clause.
(7)  zero padding out to the next sector size.
(8)  The subquery does not use LIMIT or the outer query is not a join.
(8)  Zero or more pages instances, each as follows: +  4 byte page number.
(8) When a transaction is rolled back, the xTruncate method of the VFS is called to restore the database file to the same size it was at the beginning of the transaction.
(8..15):: Overrides the window size of the inflate header in the compressed stream.
(9)  The subquery does not use LIMIT or the outer query does not use aggregates.
(Again, this is fixed "properly" in PCRE2.
(Also note that there is missing/memcmp.c.)
(Also published in Collected Algorithms from CACM, algorithm number 199).
(Also skip IN terms when doing WHERE_ORDERBY_LIMIT processing).
(An AUTONOMOUS_TRANSACTION in invoked PL/SQL must explicitly rollback/commit else the SELECT fails).
(And note that OP_EXACT uses more memory, which we cannot get at this stage.)
(And of course isn't safe on any arch that requires memory barriers.)
(Aside: The use of inode numbers as unique IDs does not work on VxWorks.
(B)  The revised rowid for the row.
(BTREE_BLOBKEY is used for SQL indices.)
(BTREE_INTKEY is used for SQL tables.)  With BTREE_BLOBKEY, the key is an arbitrary BLOB and no content is stored anywhere - the key is the content.
(Bit 0 is for main, bit 1 is for temp, and so forth.)  Bits are set for each database that is used.
(But leave references to the ROWID column  unchanged.)  This routine is part of the flattening procedure.
(C)  The content of every column in the row.
(CWorkspace: need 2*M+NRHS, prefer 2*M+NRHS*NB)
(CWorkspace: need 2*M, prefer M+M*NB)
(CWorkspace: need 2*N+NRHS, prefer 2*N+NRHS*NB)
(CWorkspace: need M*M+4*M+NRHS, prefer M*M+4*M+NRHS*NB)
(CWorkspace: need NRHS, prefer NRHS*NB)
(Can't trust DBL_MAX)
(DEFAULT) To see ISO8859-1 (Latin-1) -l is necessary.
(E.g., when converting to a read-write buffer.)
(EMAX is the exponent of the required number RMAX).
(Earlier releases may have the functions too.) 1991: Net/2 provides Berkeley DB.
(FREE or free is only called in pathological cases, e.g., in a dtoa call after a dtoa return in mode 3 with thousands of digits requested.) #define Omit_Private_Memory to omit logic (added Jan.
(FreeBSD uses clock_gettime(CLOCK_MONOTONIC) instead, though.) The resolution is the clock tick.
(G-w(ns)) where G is the Hessenberg submatrix H(L:I,L:I) and w is the vector of shifts (stored in W).
(G-w(ns)) where G is the Hessenberg submatrix H(L:I,L:I) and w is the vector of shifts (stored in WR and WI).
(Gets operands from the outer iterator, but iterates them independently)
(However, an EBCDIC equivalent has now been added.)
(I'm not a big fan of non-obvious flow control macros ).
(IDNA2003 always performs a BiDi check.)
(If it were larger, BASE**2 wouldn't fit in 32 bits, so you couldn't guarantee that two groups could always be multiplied together without overflow.)
(If the block special device really has zero length, the fact that it is empty will be detected and reported correctly when we read the file.)
(If there is no group 2, there is no problem, because offset_top will then be 2, indicating no capture.)
(If you do not have  the "sqlite3.h" header file at hand, you will find a copy embedded within the text of this file.
(If you do not have the "sqlite3.h" header file at hand, you will find a copy embedded within the text of this file.
(Implementation note: YY_SHIFT_USE_DFLT is chosen so that YY_SHIFT_USE_DFLT+X will be out of range for all possible lookaheads X.
(Implementation note: fts5YY_SHIFT_USE_DFLT is chosen so that fts5YY_SHIFT_USE_DFLT+X will be out of range for all possible lookaheads X.
(In other words, after a power-loss event, parts of the file that were never written might end up being altered.)  However, non-PSOW behavior is very, very rare.
(In other words, the "major" token.)  +  The semantic value stored at this level of the stack.
(In other words, the callback is invoked before visiting children.)  The return value from the callback should be one of the WRC_* constants to specify how to proceed with the walk.
(In other words, without this and -x option, nkf doesn't save some characters)  When nkf convert string which related to path, you should use this opion.
(In that case, we'd really want to copy the outer WHERE-clause terms onto the HAVING clause of the inner query.
(In this context 'database page' refers to any page that is not part of the pointer map itself.)  Each pointer map entry consists of a single byte 'type' and a 4 byte parent page number.
(Indeed, as far as I can tell, it was originally split out to support a fancy version of count_nonzero...
(It's not suggested you do that for production use, of course.)
(Legacy note:  When SQLite was first developed, Windows95 systems were still very common, and Widnows95 lacks a shared-lock capability.
(MacOSX only) Definitions of sqlite3_vfs objects for all locking methods plus implementations of sqlite3_os_init() and sqlite3_os_end().
(No checking for duplicate index names is done.)  The search order is TEMP first, then MAIN, then any auxiliary databases added using the ATTACH command.
(No checking for duplicate table names is done.)  The search order is TEMP first, then MAIN, then any auxiliary databases added using the ATTACH command.
(Not in POSIX.1-2001.)  LOG_PID:: Include the current process ID with each message.
(Note that IEEE arithmetic is disabled by gcc's -ffast-math flag.)  This strtod returns a nearest machine number to the input decimal string (or sets errno to ERANGE).
(Note that the comdb2 btree implementation does use this hint, however.)
(Note that this is not done by inclusion: the interpreter cheats).
(Note that two perm entries will never be equal)
(Note: Comments in the code beginning "Workspace:" describe the minimal amount of workspace needed at that point in the code, as well as the preferred amount for good performance.
(Notice that this variable is misnamed, but it's part of the public API so I'm not sure we can just change it.
(Number of root pages.)
(OE_Abort, OE_Ignore, etc)
(OOM errors excepted.)
(OSX only)  Styles 4, 5, and 7 are only available of SQLITE_ENABLE_LOCKING_STYLE is defined to 1.
(On machines with partial overflow, like the Cray, overflow may occur if the largest singular value is within a factor of 2 of overflow.) Underflow is harmless if underflow is gradual.
(One conditional branch based on password length remains.
(One should be an alias for the other)
(Only generated for UNION and UNION ALL.
(Only that one cell MUST be filled, but
(Only used when NATURAL is defined.
(Optimizes for example np.newaxis usage)
(Perhaps the function called sqlite3_exec() with a CREATE TABLE statement.)
(Quite possibly there is only one such image in existence.)
(R0+R1), R2, R3, R4 are the different operations (rounds) used in SHA1
(RWorkspace: need M) (CWorkspace: need 2*M+N, prefer 2*M+(M+N)*NB)
(RWorkspace: need M) (CWorkspace: need M*M+4*M, prefer M*M+4*M+2*M*NB)
(RWorkspace: need N) (CWorkspace: need 2*N+MM, prefer 2*N+(MM+N)*NB)
(RWorkspace: need N) (CWorkspace: need N, prefer N*NB)
(RWorkspace: need N) (CWorkspace: need NRHS, prefer NRHS*NB)
(Re)define some defines known by libjpeg
(Ruby uses F_DUPFD_CLOEXEC internally if available to avoid race condition.
(SCHW is handled in S) S if -CI-, -CE- or -CY- dropped if -SCI-, SCE-, -SCY- (handed in S) else K
(SQLite ticket #2172)
(SUSv4 obsoleted it, though.) The resolution is 1 microsecond.
(See BIGNUM and ULP.) CA      (input) DOUBLE PRECISION The coefficient c, which A is multiplied by.
(See BIGNUM and ULP.) CA      (input) REAL The coefficient c, which A is multiplied by.
(See jdmarker.c for a more complete list.)
(See the MakeRecord opcode for additional information about the format of the data.)  Extract the P2-th column from this record.
(See the file 'LICENCE'.)
(Some function, and in particular the date and time functions, are implemented separately.)
(Some simple cases are caught at compile time.)
(Sometime new memory has to be allocated on an INSERT.)  The cost of a TEST with a new batch number is O(NlogN) where N is the number of elements in the RowSet.
(Sometimes new memory has to be allocated on an INSERT.)  The cost of a TEST with a new batch number is O(NlogN) where N is the number of elements in the RowSet.
(Step3) Substituting base value into b of the polynomial z(b),
(Sub) Problem determined.
(That assignment requires a cast.)  Then we call the function that x points to.
(That is increment each of the four registers by the value it had before this block was started.)
(That is not a completely accurate description because WhereLoop costs are a vector, not a scalar, and because dependencies are many-to-one, not one-to-one as are graph nodes.
(That is, pretend that each branch is the only one.) In the real compile phase, insert an ALT node.
(The "_LIMIT_" in the name is changed to "_MAX_".)
(The CONTEXTJ check is new in IDNA2008.)
(The bit position of the bit 2**n is n+1.) If there is no such bit (zero or minus one), zero is returned.
(The caller enforces this restriction since this routine does not have enough information to know.)  (5) The WHERE clause expression originates in the ON or USING clause of a LEFT JOIN.
(The choice of 16 is arbitrary, but let's stick to it now.
(The clock ticks per second is defined by HZ macro in older systems.) If it is 100 and clock_t is 32 bits integer type, the resolution is 10 millisecond and cannot represent over 497 days.
(The clock ticks per second is defined by HZ macro in older systems.) If it is 100, the resolution is 10 millisecond.
(The default is pairwise merging.)
(The error only occurs in one place now, but we retain the subroutine to minimize code disruption.)
(The function will only free the JIT data if the bit remains set, as the bit indicates that the pointer to the data is valid.)
(The iLimit register is initialized with value of LIMIT+OFFSET.)  After the sorter fills up, delete the least entry in the sorter after each insert.
(The page number should have been put there by the sqliteOpenCb routine.)
(The page number should have been put there by the sqliteOpenCb routine.)  If the root page number is 1, that means this is the sqlite_master table itself.
(The stack grows from low addresses to high addresses.)  The initial part of the stack segment linkage control information is 0200 (octal) words.
(There is an immediate jump to ignoreDest.)  NOT NULL         REPLACE      The NULL value is replace by the default value for that column.
(This also works on machines of unknown byte order.)
(This defaults to 100 if the width can't be detected).
(This despite the fact that every last chip has oodles of memory these days, and techniques for extending the stack have been known for decades.) So....
(This flag is not used by OpenSSL 1.0.1g)
(This is largely to prevent certain holidays from occurring on the day before or after the Sabbath.)  2.
(This is only checked in the single-threaded case since checking in the multi-threaded case would be much more complicated.)
(This is so that it works from duplicated subpatterns.) The state of the capturing groups is preserved over recursion, and re-instated afterwards.
(This is the CONFIG_FPE_FASTFPE option.)  On such systems, floating point byte swapping becomes very complicated.
(This is the default.)  LOG_PERROR:: Print the message to stderr as well as sending it to syslog.
(This means that virtual tables cannot participate in the LIKE optimization.)  The collating sequence for the column on the LHS must be appropriate for the operator.
(This method is non-blocking flag insensitive as other methods.) If you need the behavior like single read(2) system call, consider readpartial, read_nonblock and sysread.
(This paragraph is written on 2008-11-28.) These days, all Linux kernels support large files, so you should probably leave LFS enabled.
(This will be either the table itself for rowid tables or to the primary key index for WITHOUT ROWID tables.)  2.
(This will be either the table itself, in the case of a rowid table, or the PRIMARY KEY index in the case of a WITHOUT ROWID table.)  2.
(This will only happen if zSql begins with "SELECT".) Take each row of result and call execSql() again recursively.
(Ticket #2942)  This used to not matter until we introduced the group_concat() function.
(To enable binary mode use +ARGF.binmode+.
(Trickery for forcing an array to do double duty as a linked list when objects do not align with word boundaries.
(U_BUFFER_OVERFLOW_ERROR means that *target buffer is not large enough).
(U_STRING_NOT_TERMINATED_WARNING usually means that the input string is empty).
(Version 2.1, February 1999) Please read the following detail of the licence (in japanese).
(WARNING/TODO: If P1 is a pseudo-cursor and P2 is dynamically allocated, then ownership of P2 is transferred to the pseudo-cursor and register P2 becomes ephemeral.
(We call the act of moving content from WAL to database "backfilling".)  The nBackfill number is never greater than WalIndexHdr.mxFrame.
(We could get a more accurate k by invoking log10, but this is probably not worthwhile.)
(We might add a JSONB type in the future which stores a binary encoding of JSON in a BLOB, but there is no support for JSONB in the current implementation.
(With the exception of the last token which does not have the separator.)
(Workspace: need 2*M, prefer M+M*NB)
(Workspace: need 2*N, prefer N+N*NB)
(Workspace: need 3*M+N, prefer 3*M+(M+N)*NB)
(Workspace: need 3*M+NRHS, prefer 3*M+NRHS*NB)
(Workspace: need 3*N+MM, prefer 3*N+(MM+N)*NB)
(Workspace: need 3*N+NRHS, prefer 3*N+NRHS*NB)
(Workspace: need M*M+4*M+NRHS, prefer M*M+4*M+NRHS*NB)
(Workspace: need M*M+5*M, prefer M*M+4*M+2*M*NB)
(Workspace: need M+NRHS, prefer M+NRHS*NB)
(Workspace: need N+NRHS, prefer N+NRHS*NB)
(Yes, believe it or not, there are still machines out there that use EBCDIC.)
(although the in-memory journal implementation may  return SQLITE_IOERR_NOMEM while the journal file is being written).
(autoconf AC_REPLACE_FUNCS detects only the function.) The macro is detected by following #ifndef.
(b)  The page was a freelist leaf page at the start of the transaction.
(b) +1000 points for the first occurrence of each matchable phrase in  the snippet for which the corresponding mCovered bit is not set.
(b) If the JavaScript compatibility flag is set, set the length to zero so that the back reference matches an empty string.
(b) Otherwise we must ensure that we skip an entire UTF-8 character if we are in UTF-8 mode.
(b) The atomic page write optimization is enabled, and the entire transaction other than the update of the transaction sequence number consists of a single page change.
(b) The index is unique Any WhereLoop with an WHERE_COLUMN_EQ constraint on the rowid is one-row.
(b) is important because if more than  one database file has an open write transaction, a master journal file is required for an atomic commit.
(b0 is memory location iBMem+0, b1 is iBMem+1, and so forth) Then compare the current GROUP BY terms against the GROUP BY terms from the previous row currently stored in a0, a1, a2...
(c)  The page number is greater than the largest page that existed in the database file at the start of the transaction.
(c) 1995 Microsoft Corporation.
(c) 2004-2007 Andrei Nigmatulin
(c) 2007,2008 Andrei Nigmatulin
(c) 2007,2008 Andrei Nigmatulin, Jerome Loyet
(c) 2009 Jerome Loyet
(c) UNIX System Laboratories, Inc.
(check also NPY_RELAXED_STRIDES_CHECKING)  For example, this can be used to remove the reduction axes from a reduction result once its computation is complete.
(d) if DELETEONCLOSE is set, then CREATE must also be set.
(dbm_pagfno() and dbm_dirfno() is not standardized.)  1986: 4.3BSD provides ndbm.
(default) ROUND_HALF_DOWN, :half_down:: round towards the nearest neighbor, unless both neighbors are equidistant, in which case round towards zero.
(double)0 In case of SQLITE_OMIT_FLOATING_POINT...
(e.g. Memcache) It must set number of records deleted(nrdels).
(e.g. Memcache) mod_data, *key, *val are guaranteed to have non-NULL values.
(e.g. they must look like integers.
(fills subspace dimensions too, but they are not unused)
(for special treatment).
(hole is NOT read as 0)
(iUnused might be less than iKey if there was wrap-around.) Because the hash table is never more than half full, the search is guaranteed to eventually hit an unused entry.
(if we neglect aberration, which amounts to 20 seconds of arc
(in case DLASQ2 is not called by DLASQ1)
(in case SLASQ2 is not called by SLASQ1)
(iterating) fancy index, store the iterator
(later):  It is reported to me that the mixed-endian problem on ARM7 is an issue with GCC, not with the ARM7 chip.
(note1) (C)  The content of every column in the row.
(note1) Actually, if we know in advance that (A) is always the same as (B) we only store (A), then duplicate (A) when pulling it out of the ephemeral table before calling VUpdate.
(off_t)-1 if not specified
(omit this argument when calling the function) The return type of the function is the declared type of the result.
(or arrays with object fields)
(or equivalently adding of one dimensions to the array being assigned to).
(overwrite previously computed value if there is one)
(pKey1/nKey1) is a blob
(pKey1/nKey1) is a number or a null
(phar://hi/there/.phar/oops is also invalid)
(re)bind the parameters
(re)initialize the parser, if necessary
(replaces npyiter error)
(returns an integer whose value is 0-int)
(schema name, not filename)
(see http://en.wikipedia.org/wiki/UTF-8) Therefore, the following pseudocode can detect UTF-8 leading bytes.
(set in setup_tree())
(setted in setup_tree())
(size + 1 because the size-th character might be the beginning of a grapheme cluster)
(step NUMTYPES+1 ) - In case of raw mode, we query only the requestd type instead of looping type by type before going with the additional info stuff.
(that numbers of decimal places are typed as ssize_t is somewhat confusing) nf is now position (in decimal places) of the digit from the start of the array.
(the "child" constraints)
(this means we're being called from rb_fiber_terminate,
(unaryfunc)array_abs,
(which *should be* the case for every user-accessible array and symbol tables)
(won't fix factors so don't use PyArray_ITER_GOTO1D with this iterator)
(zval **)input points to an element of argument stack the base pointer of which is subject to change.
)  The first form is used for rowid tables.
)  occurs in addition.
) FUNCTION Add (append) a series of existing XMLRPC_VALUE to a vector.
*  However, there is a complication concerned with newlines.
*  If the previous match WAS for an empty string, we can't do that, as it * would lead to an infinite loop.
*  Uncomment the line above, and comment line below to fully test  #ifdef HAVE_EMPRESS
* - does not expose SOAP-ENV:Header to application at all.
* - references (probably) do not work.
* 4 is for octal representation, + 1 is for NUL
* In UTF-8 mode, which can be set by (*UTF8) in the pattern, this may be * more than one byte.
* The rationale here is to assist users in finding help on commands.
** Assume IEEE arithmetic if we found denormalised  numbers abo ve, or if arithmetic seems to round in the  IEEE style,  determi ned in routine DLAMC1.
** Comment out this if block if EMIN is ok
***  Check to see if pBtree holds the required locks to read or write to the  table with root page iRoot.
******* Needs a general explanation of the how registered functions work
******** same issue about breakpoints in called frames
*********** Helpers *
*********** check oplog syntax
************* Check this local method scope
*************** Serializers *
****************** Cache Limiters *
******************* Storage Modules *
********************* Cookie Management *
************************ Upload hook handling *
************************* INI Settings/Handlers *
******************************** Module Setup and Destruction *
******************************** Userspace exported functions *
***********************************
********************************************************************* InitDynamic - Return a dynamically resizable void*
***********************************************************************
*dp contains only one bit set.
*pDifferntRow is the row the cursor was pointing to has been deleted, forcing the cursor to point to some nearby row.
*pHighwater is always set  to zero.
*pHighwater is set to zero.
*pIdx is set to the index of the new array entry in this case.
*pRc is *not* set if a parse error (failed to find close quote) occurs.
*pRc is SQLITE_OK when this function returns, and  2.
*pRoot is the list that i is a member of.
*paOut is then set to point to one byte after the last byte written before  returning.
*pazCol (if not NULL) is set to point to an array of pointers to column names.
*pbOpen is not modified in either case.
*piEndOffset should be set to the index of the first byte just past the end of the token in the input buffer.
*piMoved is set to the  page number that used to be the last root page in the file before the move.
*piPos contains the value of the previous entry in the list.
*piPrev is set to iPos before returning.
*piStartOffset should be set to the index of the first byte of the token in the input buffer.
*pnBytes should be set to the length of this buffer in bytes.
*pnIndex is set to the number of elements in the array.
*pnLog and *pnCkpt may be populated even if sqlite3_wal_checkpoint_v2() returns other than SQLITE_OK.
*pnWrite is set to the number of bytes written before returning.
*pp is set to point to the first byte past the last byte copied before this function returns.
*pp is then set to point 1 byte past the end of the read varint.
*pp will be set to NULL and SQLITE_OK returned.
*ppPage and *pPgno are undefined in the event of an error.
*ppPage is set to NULL in the event of an error.
*pzFile is set to point to a buffer containing the name of the file to open.
+       END WHILE Now compute the base.
+       WHILE( ( LEPS.GT.B ).AND.( B.GT.ZERO ) )LOOP
+       WHILE( C.EQ.ONE )LOOP
+  4 byte checksum  When we speak of the journal header, we mean the first 7 items above.
+  The value of the token stored at this level of the stack.
+ 1 byte for a "new column" byte, + 3 bytes for a new column number (16-bit max) as a varint, + 5 bytes for the new position offset (32-bit max).
+ 1 is for the command
+ 4 bytes: Master journal name checksum.
+ 4 bytes: N (length of master journal name in bytes, no nul-terminator).
+ Adds 'offset' business days to the valid business day found.
+ Doesn't (yet) handle the "YYYY-DDD" or "YYYY-Www" formats.
+ Doesn't handle 24:00:00 as synonym for midnight (00:00:00) tomorrow + Accepts special values "NaT" (not a time), "Today", (current day according to local time) and "Now" (current time in UTC).
+ Doesn't handle leap seconds (seconds value has 60 in these cases).
+ Either a 'T' as in ISO 8601 or a ' ' may be used to separate the date and the time.
+ If there is a tokenizer specification included in the arguments, initializes the tokenizer pTokenizer.
+ N bytes: Master journal filename in utf-8.
+ Only seconds may have a decimal point, with up to 18 digits after it (maximum attoseconds precision).
+ Sets the value in 'out' if provided, or the allocated output array otherwise.
+ The optimizer code in where.c (the thing that decides which index or indices to use) should place a different priority on  satisfying the 'ORDER BY' clause than it does in other cases.
+ total number of segments in level.
+-+-B-D    Or, one or both levels cut E and E is a boundary edge.
+-1 or +-imax as the zone is to right, left, below, or above the edge
+-B-D-+    Or, one or both levels cut E and E is a boundary edge.
+1 comes from the prefix IT instruction.
+1 for NULL terminator
+1 if csr dir matches index dir, else -1
+1 is to have empty marker at the end
+1 or -1 depending on direction
+2 for opening, closing quotes
+2 is 1 because of rest (probably unnecessary), 1 because of terminating 0
+2 the original and the last.
+3 is for skipping paddings
+:FREE+ means object slots which is not used now.
+:TOTAL+ means sum of above.
+:external_encoding+, +:internal_encoding+ and +:encoding+ may be set as in IO::new.
+:hertz+ can be used to obtain the exact value of the clock ticks per second for times() function and CLOCKS_PER_SEC for clock() function.
+:hertz+ means a the reciprocal of +:float_second+.
+ARGF+ assumes that any arguments that aren't filenames have been removed from +ARGV+.
+ARGF+ sets the line number automatically as you read data, so normally you will not need to set it explicitly.
+ARGF+ treats the files named on the command line as a single file created by concatenating their contents.
+EOFError+ is a subclass of +IOError+.
+Process.clock_getres(:CLOCK_BASED_CLOCK_PROCESS_CPUTIME_ID, :hertz)+ returns CLOCKS_PER_SEC.
+Process.clock_getres(:TIMES_BASED_CLOCK_PROCESS_CPUTIME_ID, :hertz)+ returns the clock ticks per second.
+Process.clock_getres+ accepts +unit+ as +Process.clock_gettime+.
+Process.clock_getres+ also accepts +:hertz+ as +unit+.
+alder1+ is the first Adler-32 value, +adler2+ is the second Adler-32 value.
+base+ should be greater than or equal to 2.
+bn2+ may be ommitted.
+bns+ must be an array of OpenSSL::BN.
+buffer+ will be resized automatically.
+build cgo +build darwin dragonfly freebsd linux netbsd openbsd solaris
+build cgo +build darwin dragonfly freebsd linux netbsd openbsd solaris windows
+build cgo +build darwin dragonfly freebsd linux netbsd solaris
+build cgo +build linux
+build cgo +build linux +build mips64 mips64le
+build darwin dragonfly freebsd linux netbsd openbsd solaris
+build lldb +build darwin +build arm arm64
+ca+ - An optional array of X509::Certificate's.
+cert+ - A X509::Certificate.
+certificates+ is an array of OpenSSL::X509::Certificate, +store+ is an OpenSSL::X509::Store.
+certs+ is an optional Array of additional certificates which are included in the request in addition to the signer certificate.
+certs+ will be ignored.
+chain+ can be an array of OpenSSL::X509::Certificate that is used to construct the certificate chain.
+chfunc+ must not raise any exceptions.
+cipher+ must be an OpenSSL::Cipher instance.
+clock_id+ can be a symbol as +Process.clock_gettime+.
+clock_id+ specifies a kind of clock.
+command+ and +command_line+ are the full commands to run, given a String.
+crc1+ is the first CRC-32 value, +crc2+ is the second CRC-32 value.
+decode_all+ on the contrary decodes a sequence of sequential BER/DER values lined up in +der+ and returns them as an array.
+der+ may be a +String+ or any object that features a +#to_der+ method transforming it into a BER-/DER-encoded +String+.
+digest+ is a Digest object that defaults to 'MD5'  A minimum of 1000 iterations is recommended.
+dup+ argument is obsolete and not used now.
+ec_method+ is a symbol that represents an EC_METHOD.
+encoding:+ will be ignored if +length+ is specified.
+exponent+ is an odd number normally 3, 17, or 65537.
+extensions+ is an Array of OpenSSL::X509::Extension to be included in the SingleResponse.
+facility+ describes the type of program opening the syslog, and is the logical OR of any of the following which are defined for the host OS:  LOG_AUTH:: Security or authorization.
+false+, +:numeric+:  hostname is same as numeric address.
+file+ can be an IO object.
+flag+ can be one of the following, other flags are available depending on your OS.
+flag+ consists of zero or more of the constants defined in with name V_FLAG_* or'ed together.
+flags+ can be a bitwise OR of the following constants:  OpenSSL::OCSP::NOCERTS:: Don't include any certificates in the request.
+flags+ can include: OpenSSL::OCSP::NOCERTS::    don't include certificates OpenSSL::OCSP::NOTIME::     don't set producedAt OpenSSL::OCSP::RESPID_KEY:: use signer's public key hash as responderID
+flags+ may be one of:  OpenSSL::X509::Name::COMPAT OpenSSL::X509::Name::RFC2253 OpenSSL::X509::Name::ONELINE OpenSSL::X509::Name::MULTILINE
+freefunc+ must be an address pointing to a function or an instance of Fiddle::Function
+freefunc+ will be called when the instance is garbage collected.
+generator+ must be an instance of EC::Point that is on the curve.
+ident+ is a String which identifies the calling program.
+infty, for this purpose
+integer+ must be greater than or equal to 0.
+io+ is an instance of +IO+ containing a DER- or PEM-encoded arbitrary private or public key.
+io+ must respond to the +write+ method that behaves the same as IO#write.
+iter+ - integer - should be greater than 1000.
+iterations+ is an integer with a default of 2048.
+key_pbe+ - string +cert_pbe+ - string +key_iter+ - integer +mac_iter+ - integer +keytype+ - An integer representing an MSIE specific extension.
+keylen+ - integer  This method is available in almost any version of OpenSSL.
+keylen+ - integer +digest+ - a string or OpenSSL::Digest object.
+len2+ is the length of the string used to generate +adler2+.
+len2+ is the length of the string used to generate +crc2+.
+level+ and +strategy+ should be the same as the arguments of Zlib::Deflate.new.
+lineno+ counts the number of times  +gets+ is called, rather than the number of newlines  encountered.
+long_name+: alias for +ln+.
+name+ must be a string.
+ndigits+ should be zero or positive integer.
+next_update+ is optional.
+nil+ if the iseq was evaluated from a string.
+nil+ is returned if the +other_ary+ is not an array or if the comparison of two elements returned +nil+.
+nil+ is returned if the two values are incomparable.
+nil+:              obey to the current +do_not_reverse_lookup+ flag.
+oid+: the object identifier as a +String+, e.g. "1.2.3.4.5" +short_name+: alias for +sn+.
+opt+ may be used to specify parts of +mode+ in a more readable fashion.
+options+ is the logical OR of any of the following:  LOG_CONS:: If there is an error while sending to the system logger, write directly to the console instead.
+options+, which can be +true+, +false+ or a +Hash+, is used to modify the default behavior of the Ruby iseq compiler.
+optname+ is an integer, usually one of the SO_ constants, such as Socket::SO_REUSEADDR.
+optval+ is the value of the option, it is passed to the underlying setsockopt() as a pointer to a certain number of bytes.
+order+ and +cofactor+ are integers.
+padding+ defaults to PKCS1_PADDING.
+pass+ is a string that contains an optional password.
+password+ is a string containing your password.
+pid+:: The process id of the process to check +raise+:: If +true+ and the process identified by +pid+ is no longer alive a PTY::ChildExited is raised.
+points+ must be an array of OpenSSL::PKey::EC::Point.
+preverify_ok+ indicates indicates if the verification was passed (true) or not (false).
+primitive_errinfo+ and +last_error+ methods returns the detail of the error.
+priv_key+ may be nil.
+ptr+ is a referenced function, of a Fiddle::Handle +args+ is an Array of arguments, passed to the +ptr+ function +ret_type+ is the return type of the function +abi+ is the ABI of the function
+pwd+ is an optional password in case +string+ or +file+ is an encrypted PEM resource.
+reason+ describes the reason for the revocation, and must be one of OpenSSL::OCSP::REVOKED_STATUS_* constants.
+revocation_time+ is the time when the certificate is revoked.
+sec+ may have fraction if it is a rational.
+sec_with_frac+ and +usec_with_frac+ can have a fractional part.
+seconds_with_frac+ and +microseconds_with_frac+ can be an Integer, Float, Rational, or other Numeric.
+self+ is traversed in order, and the first occurrence is kept.
+sig_name+ should be a known signal name.
+size+ is an integer representing the desired key size.
+slave_file+::   the slave of the pty, as a File.
+store_context+ is an OpenSSL::X509::StoreContext containing the context used for certificate verification.
+string+ contains a DER or PEM encoded key.
+string+ contains the DER or PEM encoded key.
+tag+: A +Number+ indicating the tag number.
+tag+: optional, may be specified for tagged values.
+tag_class+: A +Symbol+ indicating the tag class.
+tag_class+: if +tag+ and +tagging+ are +nil+ then this is set to +:UNIVERSAL+ by default.
+tagging+ is not set when a ASN.1 structure is parsed using OpenSSL::ASN1.decode.
+tagging+: may be used as an encoding hint to encode a value either explicitly or implicitly, see ASN1 for possible values.
+this_update+ and +next_update+ indicate the time at which ths status is verified to be correct and the time at or before which newer information will be available, respectively.
+true+ and +FALSE+ of _status_ means success and failure respectively.
+true+, +:hostname+:  hostname is obtained from numeric address using reverse lookup, which may take a time.
+unit+ specifies a type of the return value.
+utc_offset+ can be given as a human-readable string (eg.
+utc_offset+ is the offset from UTC.
+window_bits+ sets the size of the history buffer and can have the following values:  0:: Have inflate use the window size from the zlib header of the compressed stream.
- +:_alone+ specifies that the element should be chunked by itself.
- 4 bytes: Database page size.
- 4 bytes: Initial database page count.
- 4 bytes: Number of records in journal, or -1 no-sync mode is on.
- 4 bytes: Random number used for page hash.
- 4 bytes: Sector size used by the process that wrote this journal.
- :RDWR, :SHUT_RDWR, "RDWR" and "SHUT_RDWR" are accepted as Socket::SHUT_RDWR.
- :WR, :SHUT_WR, "WR" and "SHUT_WR" are accepted as Socket::SHUT_WR.
- Allocate slots if there are not enough slots.
- Because of this, the same XMLRPC data can be serialized into multiple xml vocabularies.
- Behave correctly when array is reshaped in-place, or it's dtype is altered.
- Berkeley DB 1.x, still found in 4.4BSD derivatives (FreeBSD, OpenBSD, etc).
- Calling this with NULL sets as a portable way to sleep with sub-second accuracy is not supported.
- Data size limits vary between implementations.
- Different versions of Berkeley DB use different file formats.
- Don't assume there isn't a lookahead just because this state is a consistent state with a default action.
- Each val is 4 bytes, with tag bit set to TAG_VAL.
- Even running the same OS and the same dbm implementation, the database file format may depend on the CPU architecture.
- Filter weight contribution results, after summing, are rounded to the nearest pixel color value instead of being casted to ILubyte (usually an int or char).
- If none of the src pixels within a sampling region differ, then the output pixel is forced to equal (any of) the source pixel.
- If the values are both signed zeros, equal.
- If the values are equal, equal.
- If this state is a consistent state with a default action, then the only way this function was invoked is if the default action is an error action.
- If you supply a mixture of handles and sockets, the system will interleave calls between select() and WaitForMultipleObjects().
- If you supply file handles, there is no way to distinguish between ready for read/write or OOB, so any set in which the handle is found will be marked as ready.
- If you supply only sockets, this simply passes through to winsock select().
- In case of PHP_DNS_ANY we use the directly fetch DNS_T_ANY.
- Last solution: average the colors
- NetWare doesn't require first parameter - Allowing LibC to choose the buffer size for now
- No guarantee to exist /sys/devices/system/cpu/online This is an issue especially when using Linux containers.
- One to One mapping between C structures and actual values, unlike ensor which forces one to understand the arcana of the xmlrpc vocab.
- PF_UNSPEC case would be handled in getipnodebyname() with the AI_ALL flag.
- Refer to PS_* macros in php_session.h for function/parameter definitions.
- Returning FAILURE state from PS_* function results in raising errors.
- Save handler _MUST_ use PS_GET_MOD_DATA()/PS_SET_MOD_DATA() macro to set/get save handler module data(mod_data).
- Socket::SOL_SOCKET, "SOL_SOCKET", "SOCKET", :SOL_SOCKET and :SOCKET - Socket::IPPROTO_IP, "IP" and :IP - Socket::IPPROTO_IPV6, "IPV6" and :IPV6 - Socket::IPPROTO_TCP, "TCP" and :TCP - etc.
- String: the string's data and length is passed to the socket.
- The additional xdigs argument should point to either the string "0123456789ABCDEF" or the string "0123456789abcdef", depending on which case is desired.
- The argument "all" determines if all numeric entities are decode or only those that correspond to quotes (depending on quote_style).
- The object is a ctypes type object, including array and structure types.
- The only way there can be no lookahead present (in yychar) is if this state is a consistent state with a default action.
- This routine does not repeat dtoa's mistake of setting decpt to 9999 in the case of an infinity or NaN.
- Two arrays with stride-incommensurate starting points.
- Various output options, including: xml escaping via CDATA or entity, case folding, vocab version, and character encoding.
- We emulate an or'ed type mask by querying type by type.
- When Zlib::GzipFile#close method is called after the object reaches the end of file.
- When Zlib::GzipReader#unused method is called after the object reaches the end of file.
- When an reading request is received beyond the end of file (the end of compressed data).
- Zlib::StreamEnd - Zlib::NeedDict - Zlib::DataError - Zlib::StreamError - Zlib::MemError - Zlib::BufError - Zlib::VersionError
- a function to release a userdata struct when it is no longer being managed by the cache  In the event of a cache miss the cache is allowed to grow up to a specified maximum size.
- active_p: return 1 if the queue should be checked.
- after some output is generated, before input is done (:after_output) this occur only when :after_output is specified.
- attached object: A singleton class knows its unique instance.
- character not representable in output encoding (:undefined_conversion) +primitive_errinfo+ and +last_error+ methods returns the detail of the error.
- clear: clear the queue.
- comprehensive API for manipulation of values
- days after 21st March
- deque: dequeue err object from queue.
- desc is never freed by the server.
- destination buffer is full (:destination_buffer_full) this occur only when destination_bytesize is non-nil.
- enque: enqueue err object into queue.
- first it tries to convert the string directly - if that fails, it tries o resolve it as a hostname  WARNING: gethostbyname() is a blocking function Author/Date:  jcar 20/9/96 History:
- format: The printf()-style format to use for the code to use for converting.
- if data dictionary changed between prepare and execute, for example a table used in the query was altered.
- if method or type already exists, it will be replaced.
- if this value is 0.0, then use RUBY_GC_HEAP_GROWTH_FACTOR directly.
- invalid byte sequence found in source buffer (:invalid_byte_sequence) +primitive_errinfo+ and +last_error+ methods returns the detail of the error.
- is synonymous with STDIN
- item 2  Tokens:  STREAM-START(utf-8) BLOCK-MAPPING-START KEY SCALAR("key",plain) VALUE BLOCK-ENTRY SCALAR("item 1",plain) BLOCK-ENTRY SCALAR("item 2",plain) BLOCK-END
- metametaclass: class of a metaclass.
- newline conversion disabled - encoding conversion disabled - content is treated as ASCII-8BIT
- output option for character encoding.
- output option for verbosity/readability.
- parses a comma-separated list of strings into a string suitable for SSL_CTX_set_next_protos_advertised outlen: (output) set to the length of the resulting buffer on success.
- quite speedy compared to implementations written in interpreted languages.
- source buffer is empty (:source_buffer_empty) this occur only when :partial_input is specified.
- support for mixed indexed/keyed vector types, making it more compatible with languages such as PHP.
- this last could be removed if a proper pickleable buffer was added to Python.
- true or false: 1 or 0 (respectively) is assigned to an int, and the int is passed as for an Integer.
- uglier and more complex than I like to see for API functions.
- unexpected end of source buffer (:incomplete_input) this occur only when :partial_input is not specified.
- use qh_freeqhull(qh_ALL) to free intermediate convex hulls see: user_eg.c for an example
-) Concurrent reads: SUPPORTED If interleaved with a concurrent write, the read will arbitrarily say that there is no data at that slot or return the entire new data written by the concurrent writer.
-) Concurrent removes: NOT SUPPORTED Only the master can remove, and can only do so if there are no other concurrent operations (reads or writes).
-***************** End server funcs *
-****************** Fault API funcs   *
-****************** Introspection API *
-****************** Utility API funcs *
-******************* Begin Server Funcs *
-******************* End Time Functions *
-******************* System Methods API *
-********************* Begin Time Functions *
-********************** End Introspection API *
-********************** End Utility API funcs *
-*********************** End System Methods API *
-************************ End Serialization Funcs *
-************************ Introspection Utilities *
-************************* End XMLRPC_REQUEST funcs *
-*************************** Begin Serializiation funcs *
-*************************** Begin XMLRPC_REQUEST funcs *
-**************************** End Introspection Utilities *
-********************************* End XMLRPC General Options funcs *
-********************************** Introspection Callbacks (methods) *
-*********************************** Begin XMLRPC General Options funcs *
-************************************** End Introspection Callbacks (methods) *
-- Allocate memory for our phoned_phrase --
-- LAPACK auxiliary routine (preliminary version) -- Univ.
-- LAPACK auxiliary routine (version 2.0) -- Univ.
-- LAPACK auxiliary routine (version 3.0) -- Univ.
-- LAPACK driver routine (version 3.0) -- Univ.
-- LAPACK routine (version 3.0) -- Univ.
-- Parameter checks --
-- The first phoneme has to be processed specially.
-- edge_walker is never called for single level case
-- slit_cutter is never called for single level case
-- this is special cased for exact ndarray so that no PyArray_Return is done in that case.
--- Warning (in finalizer) ---
-1 means always keep the entire statement journal in memory.
-1 means not transparent.
-1 means self is smaller than other.
-1 means the image is not transparent.
-1 required because we want the last run opcode, not the next to-be-run one.
-1, 0, +1 or nil depending on whether +time+ is less  than, equal to, or greater than +other_time+.
-1: Indicates that a value is -0.
-1: before desired location  +1: after
-1: unset, 0: case sensitive, 1: ignore case
-1::    Waits for any child process (the default if no _pid_ is given).
-2: Indicates that a value is negative and finite.
-3: Indicates that a value is negative and infinite.
-i turns on and off interlacing.
-ve means no antialias
-x specified implicitly
.* is not anchored unless DOTALL is set (which generates OP_ALLANY) and it isn't in brackets that are or may be referenced or inside an atomic group.
...Plus additional ranges in newer Unicode versions...
...but make sure it stays a NaN
...only first file examined
...then swap in place every item
...then swap in-place if needed
./rbox D4 is the test case
/ Iterate the loop again please.
/openbasedir/ and /openbasedir are the same directory
/x fill in key field of mydata1.
0     Do not allocate a new page.
0  use zeros for padding.
0 - flag not allowed 1 - flag allowed
0 :: nonces both present and not equal.
0 Means VpException() raised no exception
0 The max error for distance of V_1 is sqrt(3) u M_a M_d M_d / norm.
0 for bgColor, nothing gets outside anyway
0 for min() or 0xffffffff for max()
0 for no malloc usage
0 for slice_when and 1 for chunk_while.
0 has 0's in the diagonal, even with full pivoting.
0 if no error from qhull
0 if no number read, 1 if a number read, EOF if end-of-file met before reading anything.
0 if pPage is not a leaf.
0 is  returned in this case.
0 is default protocol for the domain.
0 is for the main database and 1 is for the file that holds temporary tables and indices.
0 is not a legal page number and page 1 cannot be an  overflow page.
0 is returned if the new WhereTerm could not be added due to a memory allocation error.
0 is the "halt" opcode and causes the test to end.
0 is used to represent "not a page".
0 means "unknown at compile-time"
0 means GCC is not being used
0 means do not allocate a new page.
0 means falls through.
0 means mutexes are permanently disable and the library is never threadsafe.
0 means self is equal to other.
0 means that statement journals are created and written to disk immediately (the default behavior for SQLite versions before 3.12.0).
0 means that the vector is too small to hold all the captured substring offsets
0 or -_bf._size, for inline putc
0-based execute iteration value
0-terminate resulting word.
0-terminate the destination buffer.
0.0.next_float returns the smallest positive floating point number including denormalized numbers.
0.gcd(x) and x.gcd(0) return abs(x).
0.lcm(x) and x.lcm(0) return zero.
06/2000 -- danda -- played with expat-ensor from www.ensor.org.
07/2000 -- danda -- wrote new implementation to be compatible with xmlrpc standard and incorporated some ideas from ensor, most notably the separation of xml dom from xmlrpc api.
0:   Operating system unknown.
0: 1 significant digit
0: 1 significant digits
0: Acquire a read or write lock
0: Indicates that a value is not a number.
0: disable estimation.
0: none,  1: sqlite3DbMalloc,  2: sqlite3_malloc
0: unestablished, EOF: MIXED
0: using st with debug information.
0::     Waits for any child whose process group ID equals that of the calling process.
0:localtime 1:utc 2:fixoff 3:init
0x0 at the end of the scramble and thus last byte in the packet in 5.1 and previous
0x0 filler sent by the server for 5.0+ clients
0x01: Determines what happens when a division by zero is performed.
0x01: Determines what happens when the result of a computation is an overflow (a result too large to be represented).
0x01: Determines what happens when the result of a computation is infinity.
0x01:: no major GC 0x02:: no immediate sweep 0x04:: full mark after malloc/calloc/realloc
0x02: Determines what happens when the result of a computation is not a number (NaN).
0x0400: default locale for the user or process.
0x04: Determines what happens when the result of a computation is an underflow (a result too small to be represented).
0x05: SQL NULL value.
0x0800: default locale for the operating system.
0x1000    not currently used
0x100: Determines what happens when a result must be rounded in order to fit in the appropriate number of significant digits.
0x2000    not currently used
0x7F would be called ASCII text, but many systems might reasonably consider some characters outside this range to be alphabetic, so the file command would call such characters ASCII.
0x7FFFFFFF is the hard limit for the number of pages in a database file.
0x8000    not currently used
0x87f7f is a mask of SQLITE_OPEN_ flags that are valid to be passed down into the VFS layer.
0x9F, which ISO-8859 considers to be control characters but the IBM PC and Macintosh consider to be printing characters.
0xFF SOSn SectLen(2) Bits(1) Height(2) Width(2) Channels(1)  3*Channels (1)
0xFF, or one of the following control characters: backspace, tab, line feed, vertical tab, form feed, carriage return, escape.
0xaa, 0xb5, 0xba are lower case letter, but can't convert.
0xdf, 0xaa, 0xb5, 0xba are lower case letter, but can't convert.
0xdf, 0xb5 are lower case letter, but can't convert.
0xf00 cc code for branches
0xff is legal padding, but if we get that many, something's wrong.
0xff means setting unknown
0xff: Determines whether overflow, underflow or zero divide result in an exception being thrown.
0xffffffff is never a valid page number
0xxxxxxx is plain ASCII
1 + 4 (id) + 2 (field_c) + 2 (param_c) + 1 (filler) + 2 (warnings )
1 - 31 last destination register
1 - Always have a control head.
1 - TSC (H/W Time Stamp Counter) 2 - getrusage
1 - The block is a block terminator.
1 - Use unoptimized capturing brackets.
1 0  When you #scan for a pattern (a regular expression), the match must occur at the character after the scan pointer.
1 :: nonces present and equal.
1 bit per page in the db (see above)
1 byte past EOF for this PmaReader
1 byte past EOF for this iterator
1 byte past end of aAll
1 byte: Either SQLITE_INSERT (0x12), UPDATE (0x17) or DELETE (0x09).
1 byte: The "indirect-change" flag.
1 for 'tokenchars', 0 for 'separators'
1 for DESC or 0 for ASC
1 for STAT3 or STAT4.
1 for UPDATE, 0 for DELETE
1 for WITHOUT ROWID table
1 for new.* ref mask, 0 for old.* ref mask
1 for tables and indices to be opened
1 if the conch is held, -1 if lockless
1 if there are not more files
1 if this is an exclusion set.
1 means IfOperStatusUp
1 means allocate a new page if space is easily available.
1 means branch is taken.
1 means self is bigger than other.
1 means the library is serialized which is the highest level of threadsafety.
1 to enable Thread#handle_interrupt, 0 to ignore it
1 to honor DESC in index.  0 to ignore.
1 uses minimum memory but is slow and reduces compression ratio while 9 uses maximum memory for optimal speed.
1) If the pager is currently in PAGER_OPEN state (no lock held on the database file), then an attempt is made to obtain a SHARED lock on the database file.
1) Use the prep function determined from the input arrays This is the default if the output array is not passed in.
1) Use the wrap function determined from the input arrays This is the default if the output array is not passed in.
1) prefix, if not empty, must match subject
1) read in Python pixbuf, get the underlying gdk_pixbuf
1), computed by DLALN2, which is so chosen that X can be computed without overflow.
1), computed by SLALN2, which is so chosen that X can be computed without overflow.
1, DELTA contains (D(j) - lambda_I) in its  j-th component.
1, DELTA contains (D(j) - sigma_I) in its  j-th component.
1, WORK contains (D(j) + sigma_I) in its  j-th component.
1-by-1 diagonal block
1-by-1 diagonal block Scale if necessary to avoid overflow when forming the right-hand side elements.
1-by-1 diagonal block Scale if necessary to avoid overflow when forming the right-hand side.
1-byte (or larger) unsigned integer
1-byte header, 16-byte host id, path
1-byte signed integer
1-byte unsigned integer
1-dimensional sequence
1.0, where fl denotes the computed value.
1.01 allows roundoff in the next few lines
1.0e+22 is the largest power of 10 than can be  represented exactly.
1.6 st.h doesn't define st_data_t type
1.8.1: remove dependency on jinclude.h
1.public_send(:puts, "hello")  # causes NoMethodError
10 is the size of gzip header
10ms is too small for user level thread scheduling on recent Linux (tested on 2.6.35)
10xxxxxx never 1st byte
11xxxxxx begins UTF-8
12/13/887605, greater value raises interger overflow
128 is safe here, the specifier in snprintf isn't longer than that
13: simple array, and use rb_id_serial_t instead of ID.
14: sorted array, and use rb_id_serial_t instead of ID.
15: sorted array, and use rb_id_serial_t instead of ID, linear small part.
16 bit (2 bytes) integer (VAX byte-order)
16 bit (2 bytes) integer (network byte-order)
16 bits should be enough
16 bits/cell is plenty for that too.) Since the JPEG code is intended to run in small memory model on 80x86 machines, we can't just allocate the histogram in one chunk.
16 for 16-decimal-digit precision in D1 and D2
16 seems to be somewhat of a sweet spot for insertion performance.
16 should be long enough to absorb any kind of single character length increase
16-bit is preferred because it uses less memory in the Expr object, which is a big memory user in systems with lots of prepared statements.
16-byte binary representation
1600 is the closest previous year divisible by 400
1900 is the closest previous year divisible by 100
191-230, 1994, and the present implementation is described in "An implementation of the dqds Algorithm (Positive Case)", LAPACK Working Note.
1968 is the closest leap year before 1970.
1972 is the closest later year after 1970.
1991: gdbm-1.5 provides them as functions.
1992: 4.4BSD Alpha provides Berkeley DB with dbm_dirfno() as a function.
1997) logic in strtod that avoids underflows on inputs whose result does not underflow.
1997: Berkeley DB 2.0 is released by Sleepycat Software, Inc.
1998) for making memory allocations from a private pool of memory when possible.
1999-10-18 lpd Fixed typo in header comment (ansi2knr rather than md5).
1999-11-04 lpd Edited comments slightly for automatic TOC extraction.
1:   Operating system is Win9x.
1: Acquire a read or write lock
1: Indicates that a value is +0.
1: Indicates that values should be rounded away from zero.
1: The operation is a write.
1: UTF8/16 conversion required and function takes any number of arguments.
1: enable estimation.
1: file 2: memory 0: default
1: is not POSIX bracket, but no error.
1: signature verified, 0: signature does not match, -1: failed signature operation
1: trimleft  2: trimright  3: trim
1MB is default stack size for 32-bit Windows.
1s timeout if none has been set
1st argument should be OLE program id or class id or moniker.
1st argument should be WIN32OLE_METHOD object.
1st argument to callback
1st argument to snippet()
1st argument to the access auth function
1st byte of argument is the escape character and following bytes are target characters.
1st facet in qh facet_list
1st passed in rcx, 2nd argument passed in rdx, 3rd in r8.
1st passed in rdi, 2nd argument passed in rsi, 3rd in rdx.
1st vertex in qh vertex_list
2  means to try really hard to allocate a new page.
2 - Enable capture_last_ptr (includes option 1).
2 :: nonces both absent.
2 by 2 block, handle separately
2 byte code first char
2 for centrum and distplane()
2 is NULL + main executable
2 means the library is multithreaded - multiple threads can use SQLite as long as no two threads try to use the same database connection at the same time.
2 means the second alternative branch is taken.
2)  The problem dimensions N1, N2, N3, N4 are specified in the order that they appear in the argument list for NAME.
2) All entries in the list that share a common value for  xUnlockNotify are grouped together.
2) All leaves of pSeg between iNoRowid and iLast (inclusive) exist and contain zero rowids.
2) By function vtabDisconnectAll(), when it adds a VTable entry to the sqlite3.pDisconnect list.
2) Registers any required virtual table modules with the database handle returned by sqlite3rbu_db().
2) Subject: Subject field of the message.
2) The current terms (if any) are compared using memcmp().
2) The pointer-map entries associated with the first overflow page in any overflow chains used by new divider cells.
2) Use the __array_prepare__ method of the output object.
2) Use the __array_wrap__ method of the output object passed in.
2) it is just a plain old inconsitency/typo/bug as in the case where alias is set.
2) same as pygtk/gtk/gdk.c _wrap_gdk_pixbuf_get_pixels_array() with 'self' changed to py_pixbuf
2) suffix must match 3) no .
2)void *data - A void pointer which helps to share scope with the callback function.
2-by-2 diagonal block
2-by-2 diagonal block Scale if necessary to avoid overflow when forming the right-hand side elements.
2-by-2 diagonal block Scale if necessary to avoid overflow when forming the right-hand side.
2-byte (or larger) signed integer
2-byte encoding for max
2-byte signed integer
2-byte unsigned integer
2.0.10: Nick Atty: clip to edges of drawing rectangle, return if no points need to be drawn
2.0.10: before the drawing routines, some code to clip points that are outside the drawing window.
2.0.10: needs a transparent-index check that is still valid if the source is not truecolor.
2.0.12: Brush palette, image truecolor (thanks to Thorben Kundinger for pointing out the issue)
2.0.12: Slaven Rezic: palette images are not the only images with a simple transparent color setting.
2.0.12: Steven Brown: support a single totally transparent color in the original.
2.0.12: a new adaptation from the same original, this time by Barend Gehrels.
2.0.12: detect bad truecolor .gd files created by pre-2.0.12.
2.0.12: support truecolor properly in .gd as well as in .gd2.
2.0.12: this is finally a parameter
2.0.13: Bob Ostermann: don't force autohint, that's just for testing freetype and doesn't look as good
2.0.16: Optimization by Ilia Chipitsine -- don't waste time offscreen
2.0.16: Paul den Dulk found an occasion where total can be 0
2.0.16: clip to clipping rectangle, Matt McNabb
2.0.16: clipping rectangle, not image bounds
2.0.16: thread safety (the font cache is shared)
2.0.18: space was a oor choice for this.
2.0.1: use gdImageSetPixel to do the alpha blending work, or to just store the alpha level.
2.0.1: work around a gcc bug by being verbose.
2.0.21: we don't reallocate memory we don't own
2.0.22: save the APP14 marker to check for Adobe Photoshop CMYK files with inverted components.
2.0.22: very basic support for reading CMYK colorspace files.
2.0.24: inptr must not be incremented until after transparency check, if any.
2.0.2: alpha blending is now on by default, and saving of alpha is off by default.
2.0.5: can't use gdTrueColorGetRed, etc with palette
2.0.5: mode_mono fix from Giuliano Pochini
2.0.5: we should actually return this
2.0.9, Thomas Winzig: apply simple full transparency
2.0.9: Thorben Kundinger: Maybe the source image is not a truecolor image
2.0.9: fixed by Thomas Winzig
2.05: remap to the palette available in the destination image.
2.0: much easier when the destination is truecolor.
2.1 Calculate how much space we need
2.1.0: specify the resolution
2.2 Enlarge the buffer, if needed
2.3 Store the actual data
2.6.1 xsi:type 2.6.2 xsi:nil 2.6.3 xsi:schemaLocation, xsi:noNamespaceSchemaLocation
2000 is also the closest later year divisible by 400
2000 is the closest later year divisible by 100
2002-Feb-14: This routine is extended to remove MS-Access style brackets from around identifers.
2002-Feb-14: This routine is extended to remove MS-Access style brackets from around identifiers.
2002/01/09 modified by Makoto Matsumoto
2007-01-16:  The wireshark project (www.wireshark.org) reports that without this code, their parser segfaults.
2007-06-25:  There is a bug in some versions of MSVC that cause the compiler to crash when getCellInfo() is implemented as a macro.
2008-04-14:  When attempting to vacuum a corrupt database file, it is possible to fail a statement on a database that does not yet exist.
2011: gdbm-1.9 creates a separate dir file.
2016-09-19, 1.12 Warn if the field names of the dst and src are not identical, since then behavior will change in 1.13.
2037 is not a leap year
28: Checksum-2 (second part of checksum for first 24 bytes of header).
2:   Operating system is WinNT.
2:   The cursor is no longer pointing to the row.
2: Indicates that a value is positive and finite.
2: Indicates that values should be rounded towards zero.
2: Open cursor 0 for reading
2: Table has an explicit IPK column.
2: The operation is a read.
2: UTF16 byte order change required and function takes any number of args.
2: the *-rbu file has been constructed, but not yet moved  to the *-wal path.
2MB is default stack size for 64-bit Windows.
2byte code first char: 0xc2-0xdf
2n BDIGITs are enough to avoid allocations in the recursively called functions.
2nd and subsequent times through the loop
2nd argument `n' is n-th parameter of the method specified by 1st argument.
2nd byte of 7 bit code or SJIS
2nd parameter to sqlite3_bind out of range
2nd try: fail if the mod time changed or host id is different, wait  10 sec and try again 3rd try: break the lock unless the mod time has changed.
2x number of WHEN terms
3 :: nonce present in response only.
3 integers per phrase instance
3 registers to hold a result row
3 unique points found, with indices 0, unique2 and i.
3)  The parameter value returned by ILAENV is checked for validity in the calling subroutine.
3) Calls the sqlite3rbu_step() function one or more times on the new handle.
3) IN NO EVENT SHALL EPINIONS, INC.
3) If the argument db is not NULL, then none of the entries in the blocked connections list have pUnlockConnection or pBlockingConnection set to db.
3) If the sibling pages are not leaves, then the child pages of cells stored on the sibling pages may need to be updated.
3) On Linux, localtime() works for negative "ts".
3) The new *-wal file is checkpointed.
3*nCol*nPhrase values
3-byte signed integer
3.2.4 deprecates folding support
32 and 64 show very similar performance numbers to 16 on insertion, though they're a tiny bit slower (perhaps due to more overhead in merge-time sorting).
32 bit (4 bytes) integer (VAX byte-order)
32 bit (4 bytes) integer (network byte-order)
32 bit magic FNV-1a prime
32 bits for filename length, length of filename, manifest + metadata, and add 1 for trailing / if a directory
32 bits of new offset
32-bit Rotate-right (used in SHA-256):
32-bit is the default
32-bit permutation function
32768: something big value
36-char hex string representation
3:  The database must be writable (not on read-only media)  4:  There must be an active transaction.
3: Indicates that a value is positive and infinite.
3: Open cursor 0 for read/write
3: Table has an external PK index. 4: Table is WITHOUT ROWID.
3: current thread ANSI code page.
3: sign + exponent chars
3byte code first char: 0xe0-0xef
3byte code first char: 0xf0-0xf4
3rd parameter must be allowed for compatibility
4 byte range: Unicode 16 planes
4 byte range: Unicode BMP
4 bytes UTF-8 (check combining character)
4 bytes or less and value is in the dir entry itself
4 if pPage is a leaf.
4 is from SSL_smart_shutdown() of mod_ssl.c (v2.2.19)
4 is the length of the longest indicators ('--- ' and '...
4 rounds of 20 operations each.
4) Calls sqlite3rbu_close() to close the RBU update handle.
4) If the sibling pages are not internal intkey nodes, then any overflow pages used by these cells may need to be updated (internal intkey nodes never contain pointers to overflow pages).
4-byte or 8-byte integer
4-byte signed integer
4-byte unsigned integer
4.1 sends 1 byte EOF packet after metadata of PREPARE/EXECUTE but 5 bytes after the result.
4.3BSD-Reno reject the padding for SCM_RIGHTS.
4.4BSD counts leap seconds only with localtime, not with gmtime.
40 Bytes should be more than enough for this format string.
414-424) by Dale Schumacher  Additional changes by Ray Gardener, Daylon Graphics Ltd.
42: symbol code page.
42P05 means that the prepared statement already existed.
4: For commit records, the size of the database image in pages  after the commit.
4: Push the rowid to the stack
4: the checkpoint is underway.
4E00-9FA5 CJK Ideographs.
4KB is the minimum commit size
4dview loads up multiple 4OFF objects slowly
4th argument to snippet()
4th element holds numeric form, don't resolve.
4x the size of current chunk in Mem3Block elements
5 chars needed for cast to 'True' or 'False'
5) If the sibling pages are not leaves, then the pointer-map entries for the right-child pages of each sibling may need to be updated.
5,6) headers of the message.
5-byte and 6-byte characters are not allowed by RFC 3629, and will be rejected by the length test below.
5.0 doesn't support it.
5.5.x reports 21 as scramble length because it needs to show the length of the data before the plugin name
50 seems like a decent # of loops.
5: Round towards +Infinity.
5: Table is a virtual table.
5: show other parameters 10: show every AST array
5: the rbu update has been checkpointed.
5th argument to snippet()
6 bytes UTF-8 (check combining character)
6 for name, 4 for param.
6-byte signed integer
64-bit Rotate-right (used in SHA-384 and SHA-512):
64-bit only if requested at compile-time
64-bit only: there is no lwau instruction.
64-bit position read from poslist
676 different possibilities with 7 or more X's, 26 with 6 or less.
6: Round towards -Infinity.
6th block parameter of Kernel#set_trace_func passes original class of attached by singleton class.
7) Append value if given 8) Append temporary stream
7) at least 4 bytes have already been read into the output buffer   then data can be read directly from the database file into the output buffer, bypassing the page-cache altogether.
7, 6 and 5 are not possible.
7: Round towards the even neighbor.
8 NULL means undefined and should be ASCII...
8 is the size of gzip footer
8 or 10 comparisons (on average) suffice to either locate a frame in the WAL or to establish that the frame does not exist in the WAL.
8-bit immediate (sign extended)
8-bit immediate - (no sign extension)
8-bit jump immediate (sign extended)
8-bit sign-extended immediate in jump or call
8-byte alignment of pageSize
8-byte signed integer
8-byte unsigned integer
8.0 or grater supports protorol version 3
82 u M_a and norm is usually about M_d M_d M_d
873-912, Sept 1990) and "Accurate singular values and differential qd algorithms," by B.
8: Salt-1 (copied from the header) 12: Salt-2 (copied from the header) 16: Checksum-1.
8: Salt-1 (copied from the wal-header) 12: Salt-2 (copied from the wal-header) 16: Checksum-1.
97 leap days in the 400 year cycle
: command name and one or more arguments (This form does not use the shell.
::GC::OPTS, which shows GC build options
::RubyVM::DEFAULT_PARAMS This constant variable shows VM's default parameters.
::RubyVM::INSTRUCTION_NAMES
::RubyVM::OPTS, which shows vm build options
::RubyVM::USAGE_ANALYSIS_*
:autoclose :: If the value is +false+, the +fd+ will be kept open after this IO instance gets finalized.
:binmode :: If the value is truth value, same as "b" in argument +mode+.
:close_others doesn't affect the standard descriptors which are closed only if :close is specified explicitly.
:close_others is true by default for spawn and IO.popen.
:dontneed::   The data will not be accessed in the near future.
:encoding :: Specifies external and internal encodings as "extern:intern".
:err, 2 and STDERR specifies the standard error stream (stderr).
:fallback :: Sets the replacement string by the given object for undefined character.
:include: doc/regexp.rdoc
:lithuanian :: Currently, just full Unicode case mapping.
:new_pgroup is false by default.
:nodoc:  private method to dup and clone the provided BigDecimal +other+
:noreuse::    The data will only be accessed once.
:out, 1 and STDOUT specifies the standard output stream (stdout).
:random::     The data will be accessed in random order.
:replace :: Sets the replacement string to the given value.
:sequential:: The data will be accessed sequentially with lower offsets read before higher ones.
:textmode :: If the value is truth value, same as "t" in argument +mode+.
:turkic :: Full Unicode case mapping, adapted for Turkic languages (Turkish, Aserbaijani,...).
:willneed::   The data will be accessed in the near future.
:xml :: The value must be +:text+ or +:attr+.
@(#)list.c 1.18 9/23/86 Public Domain - gnu  Comments changed and some code/comments reformatted for file command by Ian Darwin.
@note The caller is responsible for freeing the returned string.
@note This function is allowed to raise an exception if an error occurred.
@note This function name is not stable.
@note this macro creates a new eigenclass if necessary.
@param  zval* arg Sort's argument to normalize.
@param  zval* str String to convert.
@param  zval* utf16_zval String to convert.
@param  zval* utf8_zval String to convert.
@param Dtype for the extra operand, borrows the reference and must not be NULL (if extra_op_flags is not 0).
@param Extra operand.
@param Kind of index (gotten through preprare_index).
@param NpyIter flags for an extra array.
@param arr contiguous sorted array to be searched.
@param data a VALUE casted to void*
@param data pointer to a NULL-terminated string
@param ex Default value to the return value.
@param insn instruction number
@param isset 0: read, 1: write
@param key key value.
@param len length of the array.
@param n return value of ruby_options().
@param reg register id.
@param source      String to convert.
@param source_len  Length of the source string.
@param state Being set to zero if succeeded.
@param status      Conversion status.
@param status pointer to the exit status of this process.
@param str Ruby code to evaluate.
@param target      Where to place the result.
@param target_len  Result length.
@pre the calling context is in the timer thread.
@return A new MapIter (PyObject *) or NULL.
@return If an error occurred returns a non-zero.
@return Python unicode string
@return The evaluated result if succeeded, an undefined value if otherwise.
@return The evaluated result.
@return void       This function does not return anything.
@return zval* Converted string.
@return zval* Normalized copy of arg or unmodified arg if normalization is not needed.
@return zval* Number if str is numeric string.
@return zval* Number.
@retval 0 if succeeded.
@retval 0 if the given value is such a special value.
@retval non-zero an error occurred.
@retval non-zero if the given opaque pointer is actually a compiled source.
@sa ruby_executable_node().
@see http://researcher.watson.ibm.com/researcher/files/us-bacon/Bacon01Concurrent.pdf
@src: The affine transformation.
@throw Exception   Raises an exception on error.
@todo Find a method to determine why php_url_parse_ex() failed
A       (input) COMPLEX array, dimension (LDA, N) A contains the M by N matrix A.
A       (input) COMPLEX array, dimension (LDA,N) The hermitian matrix A.
A       (input) COMPLEX array, dimension (LDA,N) The m by n matrix A.
A       (input) COMPLEX array, dimension (LDA,N) The triangular matrix A.
A       (input) COMPLEX*16 array, dimension (LDA, N) A contains the M by N matrix A.
A       (input) COMPLEX*16 array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input) COMPLEX*16 array, dimension (LDA,N) The hermitian matrix A.
A       (input) COMPLEX*16 array, dimension (LDA,N) The m by n matrix A.
A       (input) COMPLEX*16 array, dimension (LDA,N) The triangular matrix A.
A       (input) DOUBLE PRECISION array, dimension (LDA, M) A contains the M by M matrix A.
A       (input) DOUBLE PRECISION array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input) DOUBLE PRECISION array, dimension (LDA,N) The m by n matrix A.
A       (input) DOUBLE PRECISION array, dimension (LDA,N) The symmetric matrix A.
A       (input) DOUBLE PRECISION array, dimension (LDA,NA) The NA x NA matrix A.
A       (input) REAL array, dimension (LDA, M) A contains the M by M matrix A.
A       (input) REAL array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input) REAL array, dimension (LDA,N) The m by n matrix A.
A       (input) REAL array, dimension (LDA,N) The symmetric matrix A.
A       (input) REAL array, dimension (LDA,NA) The NA x NA matrix A.
A       (input/output) COMPLEX array, dimension (LDA, N) On entry, the Hermitian matrix A.
A       (input/output) COMPLEX array, dimension (LDA,M) The matrix to be multiplied by CTO/CFROM.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the Hermitian matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the M-by-N general matrix to be reduced.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the M-by-N matrix to be factored.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the N-by-N coefficient matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the N-by-N general matrix to be reduced.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the N-by-N matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the input matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the m by n general matrix to be reduced.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the m by n matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the m by n matrix to be factored.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the matrix of column dimension N to which the row interchanges will be applied.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the n by n general matrix to be reduced.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the triangular factor U or L.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the triangular matrix A.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by CGEBRD.
A       (input/output) COMPLEX array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by CGEHRD.
A       (input/output) COMPLEX array, dimension (LDA,N-K+1) On entry, the n-by-(n-k+1) general matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA, N) On entry, the Hermitian matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,M) The matrix to be multiplied by CTO/CFROM.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the Hermitian matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the M-by-N general matrix to be reduced.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the M-by-N matrix to be factored.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the N-by-N coefficient matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the N-by-N general matrix to be reduced.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the N-by-N matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the input matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the m by n general matrix to be reduced.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the m by n matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the m by n matrix to be factored.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the matrix of column dimension N to which the row interchanges will be applied.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the n by n general matrix to be reduced.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the triangular factor U or L.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the triangular matrix A.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by ZGEBRD.
A       (input/output) COMPLEX*16 array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by ZGEHRD.
A       (input/output) COMPLEX*16 array, dimension (LDA,N-K+1) On entry, the n-by-(n-k+1) general matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA, N) On entry, the symmetric matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,M) The matrix to be multiplied by CTO/CFROM.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the M-by-N general matrix to be reduced.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the M-by-N matrix to be factored.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the N-by-N coefficient matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the N-by-N general matrix to be reduced.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the N-by-N matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the input matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the m by n general matrix to be reduced.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the m by n matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the m by n matrix to be factored.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the matrix of column dimension N to which the row interchanges will be applied.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the n by n general matrix to be reduced.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the symmetric matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the triangular factor U or L.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the triangular matrix A.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by DGEBRD.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by DGEHRD.
A       (input/output) DOUBLE PRECISION array, dimension (LDA,N-K+1) On entry, the n-by-(n-k+1) general matrix A.
A       (input/output) REAL array, dimension (LDA, N) On entry, the symmetric matrix A.
A       (input/output) REAL array, dimension (LDA,M) The matrix to be multiplied by CTO/CFROM.
A       (input/output) REAL array, dimension (LDA,N) On entry, the M-by-N general matrix to be reduced.
A       (input/output) REAL array, dimension (LDA,N) On entry, the M-by-N matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the M-by-N matrix to be factored.
A       (input/output) REAL array, dimension (LDA,N) On entry, the N-by-N coefficient matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the N-by-N general matrix to be reduced.
A       (input/output) REAL array, dimension (LDA,N) On entry, the N-by-N matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the input matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the m by n general matrix to be reduced.
A       (input/output) REAL array, dimension (LDA,N) On entry, the m by n matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the m by n matrix to be factored.
A       (input/output) REAL array, dimension (LDA,N) On entry, the matrix of column dimension N to which the row interchanges will be applied.
A       (input/output) REAL array, dimension (LDA,N) On entry, the n by n general matrix to be reduced.
A       (input/output) REAL array, dimension (LDA,N) On entry, the symmetric matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the triangular factor U or L.
A       (input/output) REAL array, dimension (LDA,N) On entry, the triangular matrix A.
A       (input/output) REAL array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by SGEBRD.
A       (input/output) REAL array, dimension (LDA,N) On entry, the vectors which define the elementary reflectors, as returned by SGEHRD.
A       (input/output) REAL array, dimension (LDA,N-K+1) On entry, the n-by-(n-k+1) general matrix A.
A      (input) DOUBLE PRECISION array, dimension (N1+N2) The first N1 elements of A contain a list of numbers which are sorted in either ascending or descending order.
A      (input) REAL array, dimension (N1+N2) The first N1 elements of A contain a list of numbers which are sorted in either ascending or descending order.
A      - DOUBLE PRECISION array of DIMENSION ( LDA, n ).
A  positive delta if the termless page contains at least one rowid,  or an 0x00 byte otherwise.
A  snapshot is like a read-transaction.
A "Collating Sequence" is defined by an instance of the following structure.
A "Mem" stores a single value in the VDBE.
A "NOT INDEXED" clause was supplied.
A "NOT NULL" constraint has been seen on a column.
A "column-list" is the set of positions for a single column.
A "normal" conditional group.
A "phrase" is a sequence of one or more tokens that must match in sequence.
A "position" is an index of a token in the token stream generated by the tokenizer.
A "position-list" is the list of positions for multiple columns for a single docid.
A "real" property test implies no starting bits, but the fake property PT_CLIST identifies a list of characters.
A "special" INSERT op.
A "thread" can be created using sqlite3ThreadCreate().
A "useful" side-effect is that the user's scripts can then make similar decisions using stream_get_meta_data.
A '-' character at the end is treated as a literal.
A 'table' record consists of:  A constant 'T' character, Number of columns in said table (a varint), An array of nCol bytes (sPK), A nul-terminated table name.
A +/- character is allowed.
A +Boolean+ indicating whether the encoding was infinite length (in the case of parsing) or whether an infinite length encoding shall be used (in the encoding case).
A +Number+ representing the tag number of this ASN1Data.
A +String+ object is passed as a pointer to the byte sequence.
A +Symbol+ representing the tag class of this ASN1Data.
A +length+ of +nil+ is equivalent to the length of the array.
A +nil+ value means coverage is disabled for this line (lines like +else+ and +end+).
A +pass_phrase+ can be used to decrypt the key.
A +selector+ may be either an Integer offset or a Range of offsets (as in Array#values_at).
A +start+ of +nil+ is equivalent to zero.
A -ve value if p1 is older than p2 and zero if p1 and p2 are the same snapshot.
A 0-d integer array is an array scalar and can be dealt with the HAS_SCALAR_ARRAY flag.
A 3-byte varint is sufficient, for example, to record the size of a 1048569-byte BLOB or string.
A 32-bit varint is used to store size information in btrees.
A 4-connected neighbor:  pixel above, below, left, or right of a pixel.
A BTREE_SINGLE database is always a temporary and/or ephemeral
A BasicResponse is more detailed than a Response.
A Bison parser, made by GNU Bison 3.0.4.
A Btree handle  A database connection contains a pointer to an instance of this object for every database file that it has open.
A C-function is stored here
A C-program for MT19937, with initialization improved 2002/2/10.
A COMMIT fails if there are active writing VMs or active VMs that use shared cache.
A CellArray object contains a cache of pointers and sizes for a consecutive sequence of cells that might be held on multiple pages.
A Cosine windowing function
A DEFINE group is never obeyed inline (the "condition" is always false).
A DELETE contains the original values of each field of a deleted database row.
A DISTINCT list is redundant if any subset of the columns in the DISTINCT list are collectively unique and individually non-null.
A DISTINCT list is redundant if the database contains some subset of columns that are unique and non-null.
A EngineError will be raised if the cipher is unavailable.
A Hash is a dictionary-like collection of unique keys and their values.
A JournalFile object is a subclass of sqlite3_file used by as an open file handle for journal files.
A KeyInfo object suitable for this index
A LIMIT of zero means to output no rows and a negative LIMIT means to output all rows.
A Lempel-Zim compression based on "compress".
A MACRO version, getVarint32, is provided which inlines the  single-byte case.
A MACRO version, putVarint32, is provided which inlines the single-byte case.
A MATCH constraint against the "rank" column.
A MATCH constraint against the special column.
A MEM_Null value will never be passed to this function.
A NOTFOUND or DATA error.
A NULL  lockPath means that the lockPath in the conch file will be used if the  host IDs match, or a new lock path will be generated automatically  and written to the conch file.
A NULL and false or two NULLs give a NULL output.
A NULL and true or two NULLs give a NULL output.
A NULL is placed in output_prep for outputs that should just have PyArray_Return called.
A NULL is placed in output_wrap for outputs that should just have PyArray_Return called.
A NULL pointer is put on the end of the list.
A NULL profile function means that no profiling is executes.
A NULL trace function means that no tracing is executes.
A NULL value is not changed by this routine.
A NaCl module's default condition is that it will not have focus.
A NameContext defines a context in which to resolve table and column names.
A PENDING lock is implemented by obtaining a write-lock on the 'pending byte'.
A PENDING lock is needed before acquiring a SHARED lock and before acquiring an EXCLUSIVE lock.
A PENDING_LOCK is obtained by locking a designated byte different from the RESERVED_LOCK byte.
A PGroup is a set  of one or more PCaches that are able to recycle each other's unpinned pages when they are under memory pressure.
A PGroup is a set  of one or more PCaches that are able to recycle each others unpinned pages when they are under memory pressure.
A PGroup is an instance of the following object.
A PKeyError is raised should errors occur.
A PMA created at this point is known as a "level-0 PMA".
A PWL file is personal word file one word per line.
A Pathname can be relative or absolute.
A Proc object generated by +proc+ ignores extra arguments.
A RESERVED lock is implemented by grabbing a write-lock on the 'reserved byte'.
A RESERVED or greater lock is held on the database file.
A RESERVED_LOCK is obtained by locking a single byte of the file that is designated as the reserved lock byte.
A Request can be created for a certificate or from a DER-encoded request created elsewhere.
A RowSet in an instance of the following structure.
A RuntimeError will be raised if a modification attempt is made.
A SELECT statement that supplies values
A SELECT statement that will become the new view
A SELECT statement to use as the data source
A SELECT statement used in place of a table name
A SHARED lock should be held on the database file when this function is called.
A SHARED or greater lock is held on the database file.
A SHARED_LOCK is obtained by locking a single randomly-chosen  byte out of a specific range of bytes.
A SQLITE_FUNC_CONSTANT or _SLOCHNG function
A SessionChange object never has a NULL value in a PK column
A SrcList is returned, or NULL if there is an OOM error.
A String is returned even if EOF is encountered before any data is read.
A Struct is a convenient way to bundle a number of attributes together, using accessor methods, without having to write an explicit class.
A Sub-term within the pOrWc
A TypeError is raised if +set+ is not boolean.
A TypeError is raised if the +numeric+ is not a Fixnum or Bignum type.
A TypeError is raised if the object does not have +succ+ method defined (like Float).
A VACUUM cannot change the pagesize of an encrypted database.
A VALUES clause is really just short-hand for a SELECT statement that omits the FROM clause and everything else that follows.
A VFS that fails to zero-fill short reads might seem to work.
A Vdbe sub-program that implements the body and WHEN clause of trigger TriggerPrg.pTrigger, assuming a default ON CONFLICT clause of TriggerPrg.orconf, is stored in the TriggerPrg.pProgram variable.
A WAL always grows from beginning toward the end.
A WAL connection is always in one of the first four states.
A WhereLoop is one-row if all of the following are true: (a) All index columns match with WHERE_COLUMN_EQ.
A WhereLoop that has no columns in the ORDER BY clause is not order-distinct.
A WhereOrTerm object is computed and attached to the term under analysis, regardless of the outcome of the analysis.
A WhereTerm under consideration
A Windows DLL is unable to call an arbitrary function in the main executable.
A b-tree rebalance will be required after deleting this entry.
A backreference to group n is returned as negative n.
A backreference within the group that it is referencing behaves in the same way.
A bare doclist omits the position information, becoming an  array of varint-encoded docids.
A bit hacky check this here, but saves a URL parse.
A bit of a hack, but not a bad one: we see if the handler of the function is actually one that displays "function is disabled" message.
A bit weird, but some servers require that Content-Length be sent prior to Content-Type for POST see bug #44603 for details.
A bitfield type for use inside of structures.
A bitmap is an instance of the following structure.
A bitmap is used to record which pages of a database file have been journalled during a transaction, or which pages have the "dont-write" property.
A block must be given, otherwise a ThreadError is raised.
A block must be provided with each of these methods, otherwise a ThreadError will be raised.
A block of WALINDEX_LOCK_RESERVED bytes beginning at WALINDEX_LOCK_OFFSET is reserved for locks.
A bound parameter in a CREATE statement that originates from sqlite3_prepare() causes an error
A bound parameter raises an error for new statements, but is silently converted to NULL for existing schemas.
A bracket expression starting with an unquoted circumflex character produces unspecified results (IEEE 1003.2-1992, 3.13.2).
A branch is also implicitly anchored if it starts with .* and DOTALL is set, because that will try the rest of the pattern at all possible matching points, so there is no point trying again....
A buffer of size 'src_itemsize + 1', for when the input string is exactly of length src_itemsize with no NULL terminator.
A buffer to hold the data for the new record
A buffer to hold the magic header
A bunch of assert() statements to check the transaction state variables of handle p (type Btree*) are internally consistent.
A byte is returned as an +Integer+ in the range 0..255.
A call to _listen_ only applies if the +socket+ is of type SOCK_STREAM or SOCK_SEQPACKET.
A call to sqlite3BtreeMoveto() is needed
A call to sqlite3EndBenignMalloc() indicates that subsequent malloc failures are non-benign.
A call to this routine is used to determine if the host is Win95/98/ME or WinNT/2K/XP so that we will know whether or not we can safely call the LockFileEx() API.
A call to this routine tells the pager that it is not necessary to write the information on page pPg back to the disk, even though that page might be marked as dirty.
A call to vdbePmaReaderNext() is still required to do that.
A callback for additional certificate verification.
A callback invoked on a server when a session is proposed by the client but the session could not be found in the server's internal cache.
A callback invoked on the client side when the client needs to select a protocol from the list sent by the server.
A callback invoked on the server side when the server needs to select a protocol from the list sent by the client.
A callback invoked when ECDH parameters are required.
A callback invoked when a client certificate is requested by a server and no certificate has been set.
A callback invoked when a new session was negotiated.
A callback invoked when a session is removed from the internal cache.
A callback invoked whenever a new handshake is initiated.
A callout item contains the length of the next item in the pattern, which we can't fill in till after we have reached the relevant point.
A cell with the same content as pCell has just been inserted into the node pNode.
A certificate or Array of certificates that will be sent to the client.
A change in the changeset is considered to apply to the same row as a change already present in the changegroup if the two rows have the same primary key.
A change to the OS may therefore break DBM access to existing files.
A changeset consists of zero or more INSERT, UPDATE and/or DELETE changes, each representing a change to a single row of an attached table.
A character may be followed by '-' to form a range.
A character outside of the ascii range.
A character with multiple other cases is returned on its own with a special return value.
A checkpoint should be set for operations that might fail (due to a constraint) part of the way through and which will need to undo some writes without having to rollback the whole transaction.
A checkpointer may have started to backfill the appended frames but crashed before it finished.
A chunk index of 0 means "no such chunk" and is the equivalent of a NULL pointer.
A chunk is two or more blocks that is either checked out or free.
A class that contains at least one abstract method automatically becomes an abstract class.
A closed queue cannot be re-opened.
A collating function must always return the same answer given the same inputs.
A column in the result set.
A column in the table
A column number within table iCur
A column-list is a list of non-negative delta-encoded varints, each  incremented by 2 before being stored.
A column-list is list of delta-encoded positions for a single column within a single document within a doclist.
A column-list is terminated by either a 0x01 or 0x00 byte that is not part of a multi-byte varint.
A column-list is terminated by either a 0x01 or 0x00.
A common example is the creation of a unique id for binary documents that are stored in a database.
A comparison has been done, so it's no longer ambiguous
A comparison is made against this value and the output is skipped if the next results would be the same as the previous.
A complete hash table is an instance of the following structure.
A complete page cache is an instance of this structure.
A completely parsed JSON string
A complex eigenvector corresponding to a complex eigenvalue is stored in two consecutive columns, the first holding the real part and the second the imaginary part.
A complex eigenvector corresponding to a complex eigenvalue is stored in two consecutive columns, the first holding the real part, and the second the imaginary part.
A complex statement machine used to detect the end of a CREATE TRIGGER statement.
A condition can be an assertion, a number (referring to a numbered group's having been set), a name (referring to a named group), or 'R', referring to recursion.
A conditional group with only one branch has an implicit empty alternative branch.
A connection to a fulltext index is an instance of the following structure.
A connection to shared-memory
A connection with the read-uncommitted flag set will never try to obtain a read-lock using this function.
A consecutive range of registers starting at regNewData contains the rowid and the content to be inserted.
A constraint has failed while inserting a row into an rtree table.
A container for a temp file handle and the current amount of data  stored in the file.
A control character, so write the buffer so far
A convenience macro that returns the number of elements in an array.
A coordinate can be either a floating point number or a integer.
A copy is made of the view's SELECT statement so that we can freely modify or delete that statement without worrying about messing up the persistent representation of the view.
A copy is made of the view's SELECT statement so that we can freely modify or delete that statement without worrying about messing up the presistent representation of the view.
A copy of pExpr is used instead of the original, as pExpr contains tokens that point to volatile memory.
A copy of the  error code is returned.
A copy of the following object occurs in the wal-index immediately following the second copy of the WalIndexHdr.
A copy of the key is made if the copyKey flag is set.
A copy of the key is made if the copyKey parameter to fts3HashInit is 1.
A copy of this structure is passed through the parser and down into all the parser action routine in order to carry around information that is global to the entire parse.
A core dump is actually more useful.
A correlated subquery has been seen
A corresponding iseq object is created by RubyVM::InstructionSequence.load_from_binary() method.
A cost of N indicates that the cost of the strategy is similar to a linear scan of an SQLite table with N rows.
A cost of log(N)  indicates that the expense of the operation is similar to that of a binary search on a unique indexed field of an SQLite table with N rows.
A count of rows changed
A counter increasing globally across all forks.
A coverage array gives, for each line, the number of line execution by the interpreter.
A cryptographic hash function is a procedure that takes data and returns a fixed bit string: the hash value, also known as _digest_.
A curried proc receives some arguments.
A cursor is a pointer into a single BTree within a database file.
A cursor is a pointer to a particular entry within a particular b-tree within a database file.
A cursor is opened, when more than zero columns returned
A cursor used to incrementally tokenize this string is returned in  ppCursor.
A custom data type requires that we use its copy/swap
A database can be accessed either by any number of readers or by exactly one writer at the same time.
A database containing an RBU update is an "RBU database".
A database is a file that stores key-value pairs.
A deferred-doclist is like any other doclist with position information included, except that it only contains entries for a single row of the table, not for all rows.
A delete marker is an entry with a 0 byte position-list.
A delete specifies a single argument - the rowid of the row to remove.
A deptbl_entry_t is one slot in the deptbl hash table.
A depth of 1 means the tree contains a single node taken from the head of *ppList.
A depth of 2 means a tree with three nodes.
A description of exactly when the conflict handler is invoked for  each type of change is below.
A description of some of the more important member variables follows:  eState  The current 'state' of the pager object.
A difference in length will leak
A different comparison function for SegReader structures.
A direct lookup on the rowid or docid column.
A dirty page may be in use if a database cursor created by an active SQL statement is reading from it, or if it is page 1 of a database file (page 1 is always "in use").
A dirty read is detected by verifying that both copies of the header are the same and also by a checksum on the header.
A docid is the unique integer identifier for a single document.
A dummy encoding is an encoding for which character handling is not properly implemented.
A dummy iterator is created to find the correct output shape and stride permutation.
A duplicate is made of any string or blob constant.
A duplicate rowid value, or 2.
A failure here could be okay given that the protocol might have been merely unregistered
A failure to match might occur after the group has succeeded, if something later on doesn't match.
A fake index object for the primary key
A fake table from which we get the result set
A false negative is harmless.
A false positive, however, can result in the wrong answer.
A fancier test would sometimes let us do this for larger i values.
A faster alternative is to write 0xFFFFFFFF to the nRec field.
A fatal error / die occurred during the generator execution.
A file is considered to be ISO-8859 text if its characters are all either ASCII, according to the above definition, or printing characters from the ISO-8859 8-bit extension, characters 0xA0 ...
A filename can be specified as a hash value.
A finder-function is used to locate the appropriate sqlite3_io_methods object for a particular database file.
A fixed amount of payload can be carried directly on the database page.
A flag byte tells whether the bitmap is present, and whether this is a negated class or not.
A flag is set so that the group can be made atomic.
A flag to indicate when processing is finished
A foreign key constraint
A foreign key constraint requires that the key columns in the parent table are collectively subject to a UNIQUE or PRIMARY KEY constraint.
A foreign key is associated with two tables.
A frame is only valid if a checksum of the WAL header, all prior frams, the first 16 bytes of this frame-header,  and the frame-data matches the checksum in the last 8  bytes of this frame-header.
A frame is only valid if the page number is creater than zero.
A frame is only valid if the salt values in the frame-header match the salt values in the wal-header.
A frame-header is made up of a series of  4-byte big-endian integers, as follows:  0: Page number.
A full integer index sees array scalars as part of itself
A function is valid if either xFunc or xStep is non-zero.
A function is valid if xSFunc is non-zero.
A function that loads a shared-library extension then returns NULL.
A gdbm database thus provides the same functionality as a hash.
A general purpose loop counter
A given callback will only ever be called once, the first time an introspection request is processed after the time of callback registration.
A global array of all winShmNode objects.
A global function must exist in order for name resolution to work properly.
A group of 3 or fewer free bytes is called a fragment.
A gzip file has the checksum of pre-compressed data in its footer.
A has a read lock and B has a reserved lock.
A has at least as many rows as columns.
A has more columns than rows.
A hash search begins with the last index block and moves toward the first index block, looking for entries corresponding to page P.
A hash table for built-in function definitions.
A hash table for function definitions.
A header written to the output file with the byte-order-mark and the number of property nodes.
A height of one means the children of the root node are the leaves, and so on.
A height of zero means all data is stored on the root node.
A helper function for traversing comma separated list of values.
A hidden column in a virtual table
A higher value indicates a better match.
A hint that reuse is unlikely
A hot journal is one that  needs to be played back.
A hyphen followed by a POSIX class is treated in the same way.
A is an M-by-N matrix which may be rank-deficient.
A is lower triangular.
A is modified by the routine but restored on exit.
A is non-unit triangular.
A is unit triangular.
A is upper triangular.
A join edge is one for which the predecessor does not immediately dominate the successor.
A journal header (JOURNAL_HDR_SZ bytes) is written into the journal file at the current location.
A journal header file (JOURNAL_HDR_SZ bytes) is read from the current location in the journal file.
A jump is made to P2 if the result set after filtering would be empty.
A jump to addrRepeat is made and the N+1 values are popped from the stack if the top N elements are not distinct.
A key and certificate are not required for the client socket.
A key can instead be loaded from an +encoded_key+ which must be PEM or DER encoded.
A key of the hash is a name of the named captures.
A kind + size like 'f8'
A large amount of number can be constructed from ORR and MOVx, but computing them is costly.
A larger block is obtained from malloc() unless the ultimate limit has been reached or the increase will be rather small.
A layout operation modifies the positions and dimensions for nodes in the subtree.
A library like OptionParser can be used to process command-line arguments.
A limit of 0, the default, means no upper limit.
A linked list of the following structures is stored at BtShared.pLock.
A list for this key already exists.
A list of BtShared objects that are eligible for participation in shared cache.
A list of all children for a table named Z (which might not even exist) is held in Schema.fkeyHash with a hash key of Z.
A list of all open cursors
A list of cipher names is available by calling OpenSSL::Cipher.ciphers.
A list of columns to be indexed
A list of delta-encoded varints - the first rowid on each subsequent child page.
A list of errata for this book has been posted to the sci.crypt newsgroup by the author and is available for FTP.
A list of expressions can also be used as the argument to a function, in which case the a.zName field is not used.
A list of expressions.
A list of varints, one for each subsequent termless page.
A lists of all unixInodeInfo objects.
A lock cannot be moved directly between shared and exclusive - it must go through the unlocked state first.
A log message has already been issued.
A lone identifier is the name of a column.
A long-standing parser bug is that this syntax was allowed:  CREATE TRIGGER attached.demo AFTER INSERT ON attached.tab ....
A macro to discover the encoding of a database.
A macro to hint to the compiler that a function should not be inlined.
A macro used for invoking the codec if there is one
A main database has just been opened.
A main database named zName has just been opened.
A malformed database page might cause us to read past the end of page when parsing a cell.
A malloc may have failed inside of the xFunc() call.
A malloc must have failed
A malloc() may have failed within the call to sqlite3_value_text16() above.
A mapping node is required.
A mask of which bits have predefined values for each pipeline.
A memory allocation (also called a "chunk") consists of two or  more blocks where each block is 8 bytes.
A memory allocation error has occurred
A memory allocation of a number of bytes which is near the maximum signed integer value might cause an integer overflow inside of the xMalloc().
A message is printed and execution stops.
A method LOG_UPTO is defined to make it easier to set mask values.
A minimal verification would be to check the CSR's signature.
A minimum allocation is an instance of the following structure.
A missing specifier is not considered an error.
A moment of convenience, a lifetime of compatibility.
A month always starts on or near a new moon and has either 29 or 30 days (a lunar cycle is about 29 1/2 days).
A more efficient technique is to cache the sort keys (modification times in this case) before the sort.
A mutex protected linked list of all main  db fds opened using a particular RBU VFS is maintained at  rbu_vfs.pMain to facilitate this.
A mutex will be acquired on VxWorks by the vxworksReleaseFileId() routine.
A name may be created from a DER encoded string +der+, an Array representing a +distinguished_name+ or a +distinguished_name+ along with a +template+.
A named index with an explicit CREATE INDEX statement
A negative  value means no limit.
A negative DMIN forces the shift to take that absolute value TTYPE records the type of shift.
A negative cache-size value C indicates that the cache is abs(C) KiB in size.
A negative index counts from the end of +self+.
A negative index is assumed to be relative to the end of the array---that is, an index of -1 indicates the last element of the array, -2 is the next to last element in the array, and so on.
A negative nCol is a special marker meaning that we are currently trying to compute the column names.
A negative number N translations means that a buffer of -1024*N bytes is allocated and used for as many pages as it will hold.
A nested group that is already marked as "could be empty" can just be skipped.
A new AutoincInfo structure is created if this is the first use of table pTab.
A new IdList is returned, or NULL if malloc() fails.
A new SS context does not need to be created with both a Source and a Sink.
A new and better score for a previously created equivalent path
A new axis is added, but at the same time no axis is "used".
A new change object is allocated and a pointer to it stored in *ppNew.
A new child page is allocated and the contents of the current root page, including overflow cells, are copied into the child.
A new context is allocated on the first call.
A new entry is created if it doesn't already exist or the data for an existing entry is overwritten.
A new entry is created in the SrcList even if pTable is NULL.
A new entry is made in iTab if the current N values are new.
A new lower limit does not shrink existing constructs.
A new month was started when the new moon was first observed.
A new savepoint cannot be created if there are active write  statements (i.e. open read/write incremental blob handles).
A new segment has just been written to level iLvl of index structure pStruct.
A new vxworksFileId object is created and added to the global list if necessary.
A new zero-terminator is added to the dequoted string.
A newly created session object is enabled.
A node MAY be added to possbile roots when ZEND_UNSET_VAR happens or zend_assign_to_variable is called only when possible garbage node is produced.
A node header is a single 0x00 byte for a leaf node, or a height varint followed by the left-hand-child varint for an internal node.
A non-NULL profile is a pointer to a function that is invoked at the conclusion of each SQL statement that is run.
A non-NULL trace is a pointer to a function that is invoked at the start of each SQL statement.
A non-zero positive integer causes the process to join the provided process group.
A non-zero result is something that can be returned immediately.
A nul-terminator byte is appended to the buffer following the master journal file name.
A null pathname is invalid -- POSIX 1003.1 sect.
A number of Perl escapes are not handled by PCRE.
A open page cache is an instance of struct Pager.
A page cache entry is "clean" if it exactly matches what is currently on disk.
A page is "dirty" if it has been modified and needs to be persisted to disk.
A page number of zero indicates "no such page".
A pager may be in any one of the seven states shown in the following state diagram.
A pair means an encoding conversion.
A pair of a 31-bit unsigned number and a tag bit.
A parameter used by the eDest disposal method
A parse of the cell we are pointing at
A partial index should be skipped if its WHERE clause evaluates to false or null.
A plain scalar could be a simple key.
A pointer to a structure of the following type is passed as the  argument to scored geometry callback registered using sqlite3_rtree_query_callback().
A pointer to a structure of the following type is passed as the first argument to callbacks registered using rtree_geometry_callback().
A pointer to an instance of the following structure can be used as a unique file ID in VxWorks.
A pointer to an instance of this structure is the first argument to the routines used implement the SQL functions.
A pointer to the F pointer is used as the pAppData value for VFS objects.
A pointer to the first element of the linked list is stored as the "pTrigger" member of the associated struct Table.
A pointer to the linked list of commands to run.
A pointer to the linked list of events to process.
A pointer to this string is stored in each collation sequence structure.
A pointer to this structure is passed into extensions when they are loaded so that the extension can make calls back into the SQLite library.
A pointer to this structure is stored in the sqlite.aFunc hash table.
A pointer to this structure is used to communicate information from sqlite3Init and OP_ParseSchema into the sqlite3InitCallback.
A pointer to this structure will be returned to ocaml and passed in whenever something needs to be done
A position is the index of a word within the document.
A position list is a list of unique integers, sorted from smallest to largest.
A position list is list of positions (delta encoded) and columns for  a single document record of a doclist.
A position-list blob begins with (nPhrase-1) varints, where nPhrase is the number of phrases in the query.
A position-list blob contains the current position-list for each phrase in the query associated with cursor pCsr.
A position-list is the part of a doclist that follows each document id.
A positive nCol means the columns names for this view are already known.
A positive number is the number of pages.
A power failure could lead to corruption in this case.
A preexisting transaction may not be upgraded to exclusive by calling this routine a second time - the exclusivity flag only works for a new transaction.
A prepared statement object  is the compiled object code.
A previous version used localtime_r, which is not available on Windows
A problem turned up with PCRE_PRERELEASE, which is defined empty for production releases.
A process can open a database as a "reader" or a "writer".
A process does not have to obtain a RESERVED lock on the way to a PENDING lock.
A process is allowed to open several different databases at the same time.
A process may only obtain a PENDING lock after it has obtained a SHARED lock.
A process may only obtain a RESERVED lock after it has a SHARED lock.
A program called dftables (which is distributed with PCRE) can be used to build alternative versions of this file.
A pseudo-table created by this opcode is used to hold a single row output from the sorter so that the row can be decomposed into individual columns using the OP_Column opcode.
A pseudo-table is a single-row table implemented by registers.
A range of characters can be specified using '-'.
A range of registers to hold previous output
A read lock allows other processes to read the database but prohibits any other process from modifying the database.
A read or a write lock can be taken depending on isWritelock.
A read or write transaction may or may not be active on database handle db.
A read transaction may be active (but a write-transaction cannot).
A read transaction must have already been started by a prior call to sqlite3WalBeginReadTransaction().
A read-lock must be held on the pager when this function is called.
A read-only or read-write transaction must be opened before calling this function.
A read/write cursor "iDataCur" must be open on the canonical storage btree for the table pTab.
A record being sorted
A record is an object that contains one or more fields of data.
A record to be insert into the new table
A recursion, however, causes an a flag to be set that causes the length of this branch to be ignored.
A reduction with no axes is still valid but trivial.
A region of shared-memory
A regular INSERT, UPDATE or DELETE statement.
A related subroutine DLASD7 handles the case in which the singular values (and the singular vectors in factored form) are desired.
A related subroutine SLASD7 handles the case in which the singular values (and the singular vectors in factored form) are desired.
A related subroutine, DLASD0, computes the singular values and the singular vectors in explicit form.
A related subroutine, DLASD1, handles the case in which all singular values and singular vectors of the bidiagonal matrix are desired.
A related subroutine, DLASDA, computes only the singular values, and optionally, the singular vectors in compact form.
A related subroutine, SLASD0, computes the singular values and the singular vectors in explicit form.
A related subroutine, SLASD1, handles the case in which all singular values and singular vectors of the bidiagonal matrix are desired.
A related subroutine, SLASDA, computes only the singular values, and optionally, the singular vectors in compact form.
A repeat minimum of 1 is optimized into some special cases.
A rescue clause without an explicit Exception class will rescue all StandardErrors (and only those).
A result table is an array of pointers to zero-terminated UTF-8 strings.
A result table might consist of one or more memory allocations.
A result table records the complete query results from one or more queries.
A return of MATCH_SKIP_ARG means that matching failed at SKIP with an argument, and we must check whether that argument matches this MARK's argument.
A return value of 1 indicates that the connection is to be destroyed
A rollback-mode pager changes to WRITER_FINISHED state from WRITER_DBMOD state after the entire transaction has been successfully written into the database file.
A routine to convert a binary TK_IS or TK_ISNOT expression into a unary TK_ISNULL or TK_NOTNULL expression.
A row is being added to the child table.
A row is being removed from the child table.
A rowid/docid conflict.
A running thread may or may not switch, it depends on OS and processor.
A second exception is when the .* appears inside an atomic group, because this prevents the number of characters it matches from being adjusted.
A second optional +length+ parameter can be used to limit how many entries are returned from the stack.
A second tracing pass can perform the actual final trace.
A second, no-op, version of this macro is provided when SQLITE_OMIT_EXPLAIN is defined.
A segment merge traverses all segments at a given level in parallel, performing a straightforward sorted merge.
A segment of size nByte bytes has just been written to absolute level iAbsLevel.
A separate function sqlite3LocateCollSeq() is a wrapper around this routine.
A separator of +nil+ reads the entire contents, and a zero-length separator reads the input one paragraph at a time, where paragraphs are divided by two consecutive newlines.
A sequence node is required.
A set of nth, jd, df and sf denote ajd + 1/2.
A shallow copy of a string or blob just copies a pointer to the string or blob, not the content.
A shared lock or greater must be held on the database file before this function is called.
A shared-cache write-lock is not required to write to the new table, as a schema-lock must have already been obtained to create it.
A short program which converts a .png file into a .gd file, for your convenience in creating images on the fly from a basis image that must be loaded quickly.
A significant reduction is made by putting all the names into a single, large string and then using offsets in the table itself.
A simple array of 32-bit masks for lookup.
A simple clamping of the error values to about +- MAXJSAMPLE/8 works pretty well, but the smoother transfer function used below is even better.
A simple key cannot follow a flow scalar.
A simple key cannot follow a tag.
A simple key cannot follow an anchor or an alias.
A simple key cannot follow another simple key.
A simple key is allowed at the beginning of the stream.
A simple key is required at the current position if the scanner is in the block context and the current column coincides with the indentation level.
A simple key may follow a block scalar.
A single  call to xUnpin() unpins the page regardless of the number of prior calls  to xFetch().
A single FTS4 table may have multiple full-text indexes.
A single POS_END (0) byte.
A single VDBE is an opaque structure named "Vdbe".
A single WAL can and usually does record  multiple transactions.
A single WAL file can be used multiple times.
A single WhereMaskSet structure translates cursor number into bits and the translated bit is stored in the prereq fields.
A single boolean index of matching dimensionality and size is a boolean index. If this is not the case, it is instead expanded into (multiple) integer array indices.
A single byte is required for the output string nul-terminator.
A single call to this function attempts to populates field iVal (leftmost  is 0 etc.) of the unpacked record with a value extracted from expression pExpr.
A single call to this function populates zero or more fields of the record starting with field iVal (fields are numbered from left to right starting with 0).
A single cell from a node, deserialized
A single changegroup object may combine changesets or patchsets, but not both.
A single character of affinity
A single column of result
A single constraint term
A single database file can be in use at the same time by two or more database connections.
A single database file can be shared by two more database connections, but cursors cannot be shared.
A single database handle may have at most a single write-ahead log callback  registered at one time.
A single doclist may span multiple pages.
A single ellipsis, so no need to decref
A single inode can have multiple file descriptors, so each unixFile structure contains a pointer to an instance of this object and this object keeps a count of the number of unixFile pointing to it.
A single instance of this is allocated for each  sorter cursor created by the VDBE.
A single instruction of the virtual machine has an opcode and as many as three operands.
A single journal file that referred to the master journal file has just been rolled back.
A single node of parsed JSON
A single object of this type is allocated when the FTS5 module is  registered with a database handle.
A single reader blocks all other connections from reading or writing the database.
A single step of an incremental checkpoint - frame iWalFrame of the wal file should be copied to page iDbPage of the database file.
A single subterm might be a set of AND-connected sub-subterms.
A single term of the WHERE clause
A single token is the base case and the most common case.
A single-threaded IncrMerger does not open any temporary files of its own.
A size one dimension does not matter
A slot for the record has already been allocated in the  SQLITE_MASTER table.
A small processing code
A smaller version of VdbeOp used for the VdbeAddOpList() function because it takes up less space.
A socket option contains the socket #family, protocol #level, option name #optname and option value #data.
A sort order can be either ASC or DESC.
A sorting index used to test for distinctness
A source cursor for SORTED_MATCH
A space at the start of s returns positive values with a leading space.
A special adder/subtractor for the recursive divide and conquer multiply algorithm.
A special output routine for "multi-character digits."  Exactly SIZE characters must be output for the value VAL.
A special query is identified as one with a MATCH expression that begins with a '*' character.
A specially optimized version of vdbeSorterCompare() that assumes that the first field of each key is a TEXT value and that the collation sequence to compare them with is BINARY.
A specially optimized version of vdbeSorterCompare() that assumes that the first field of each key is an INTEGER value.
A square bracket that doesn't match the syntax is treated as a literal.
A stack overflow can result if the number of terms is too large.
A stat() call may fail for various reasons.
A statement needs to be recompiled whenever the execution environment changes in a way that would alter the program that sqlite3_prepare() generates.
A statement sub-transaction is implemented as an anonymous savepoint.
A statement transaction allows the changes made by this VDBE to be rolled back after an error without having to roll back the entire transaction.
A status issued in the future must be rejected.
A straightforward value assignment
A straightforward where-masked assignment
A string means a decorator.
A string or symbol of the name, possibly without prefix, is also accepted.
A struct has key/val pairs.
A structure defining how to do GLOB-style comparisons.
A structure for holding a single date and time.
A structure to store a single record.
A structure to store values read from the rbu_state table in memory.
A sub-query in the FROM clause of a SELECT
A sub-routine used to implement a trigger program.
A sub-task in the sort process
A subproblem with E(NM1) small.
A subquery used in place of a table name
A subquery whose result set is defined by pEList appears as entry in the FROM clause of a SELECT such that the VDBE cursor assigned to that FORM clause entry is iTable.
A subsequent call to sqlite3DeferForeignKey() might change this to DEFERRED.
A subterm is also indexable if it is an AND of two or more subsubterms at least one of which is indexable.
A success code from the prior execution is returned.
A successful evaluation of this routine acquires the mutex on p.
A successful match means
A symetric argument may be made if the doclists are in descending  order.
A syntax error has occurred.
A table being constructed by CREATE TABLE
A table can have at most one primary key.
A table has a virtual root page when the actual root page contains no cells and a  single child page.
A table in the database
A table in the database is locked
A table interior node.
A table name and column name:     ID.ID Or a database, table and column:  ID.ID.ID
A table that describes the SELECT results
A tag bit distinguishes the two cases so that hash lookups never accidentally match linked list nodes.
A tag could be a simple key.
A temp table must be used if the table being updated is also one of the tables being read by the SELECT statement.
A term of the ORDER BY clause
A thread must be holding a mutex on the corresponding Btree in order to access Schema content.
A thread safe initialization.
A three-byte-character lead-byte not followed by two trail-bytes represents itself.
A timeout of -1 means to wait forever.
A tokenizer  is registered by providing fts5 with a populated instance of the  following structure.
A tokenizer instance is required to actually tokenize text.
A tolerance has been implemented using GD_EPSILON.
A total of "amt" bytes are read or written beginning at "offset".
A total of nLeaf leaf pages of data has just been flushed to a level-0 segment.
A transaction applied using this extension is hence refered to as an "RBU update".
A transaction is usually ended by  either a COMMIT or a ROLLBACK operation.
A transaction must be active for both files.
A transaction must be active when this routine is called.
A transaction must be open when this is called.
A transaction must be started before executing this opcode.
A transient duplicate expression
A tree of these objects forms the RHS of a MATCH operator.
A trick to cause a TK_SELECT pVector to be deleted together with the returned Expr object is to attach the pVector to the pRight field of the returned TK_SELECT_COLUMN Expr object.
A tries to promote to reserved but is blocked by B.
A trigger is either a BEFORE or an AFTER trigger.
A true recursion implies not fixed length, but a subroutine call may be OK.
A trunk page looks like this:  SIZE    DESCRIPTION 4     Page number of next trunk page 4     Number of leaf pointers on this page zero or more pages numbers of leaves
A tuple of which axes
A tuple to store the filed
A two-byte-character lead-byte not followed by trail-byte represents itself.
A type code from the record header
A type is possible that is not in the allowed types
A type that is properly aligned for any stack member.
A typedef of this structure if found in sqliteInt.h.
A ufunc has been registered for a struct dtype if ufunc's arg_dtypes array is not NULL.
A use case for this function is to match the shape and layout of the iterator and tack on one or more dimensions.
A user encountering the key can verify the signature by using the CA's public key.
A valid cursor is one that is currently pointing to a row in a (non-empty) table.
A valid tree is still generated without this branch, but the tree is wildly unbalanced and inefficient.
A value for VdbeCursor.cacheStatus that means the cache is always invalid.
A value for VdbeCursor.cacheValid that means the cache is always invalid.
A value of (Pager.nSavepoint-1) means operate on the most recently created savepoint.
A value of 0 means that no trigger programs at all  may be executed.
A value of 0 means to operate on the outermost savepoint (the first created).
A value of 0 used to mean that the limit was not enforced.
A value of 1 means that a trigger program will not be able to itself fire any triggers.
A value of 1 means that auto-possessification is OK.
A value of 1 sets the object to use the  compile time default.
A value of the hash is a string of last successful capture of corresponding group.
A value of the hash is an array which is list of indexes of corresponding named captures.
A value of zero turns off backtracing.
A value was pulled from the index
A variable length integer is 1 to 9 bytes where the lower 7 bits of each  byte are used.
A variable-length integer consists of the lower 7 bits of each byte for all bytes that have the 8th bit set and one byte with the 8th bit clear.
A variable-length integer may not be more than 9 bytes long.
A variety of strategies can be used to provide useful portions of the standard library to subclasses of BasicObject.
A vector is defined as any expression that results in two or more columns of result.
A verifying party may validate the signature by comparing the result of decrypting the signature with "public_decrypt" to the original data.
A version of vdbeSorterCompare() that assumes that it has already been determined that the first field of key1 is equal to the first field of  key2.
A very basic conversion approach, TBB
A very common application is the creation and validation of digital signatures.
A very long time ago php_module_startup() was refactored in a way which broke calling it with more than one additional module.
A virtual opcode for then traps.
A virtual root page is when the real root page is page 1 and we are the only child of that page.
A warning message is issued via the sqlite3_log() mechanism with the error code SQLITE_SCHEMA.
A way to specify the location of the php.ini dir in an apache directive
A weak function never be optimized away.
A width value was supplied.
A will strip any trailing whitespace
A wrapper around sqlite3_bind_value() that detects an extra problem.
A write operation on an r-tree table may return SQLITE_CONSTRAINT for two reasons:  1.
A write transaction is active.
A write-transaction is started if the second argument is nonzero, otherwise a read- transaction.
A write-transaction must be opened before calling this function.
A write-transaction must be started before attempting any  changes to the database.
A zero entry means there is no possessified version.
A zero value for this integer is interpreted as 65536.
A zero value means there is no possessified version - in those cases the item in question must be wrapped in ONCE brackets.
A(I,J) is computed without over/underflow if the final result CTO*A(I,J)/CFROM can be represented without over/underflow.
A-vs-B comparision jump
ABLEFTHENDEFERRABLELSEXCEPTRANSACTIONATURALTERAISEXCLUSIVE
ABORT processing means the operation in process fails and any prior changes from that one operation are backed out, but the transaction is not rolled back.
ABOVE:  Height enforcement enabled.
AC00-D7A3 Hangul Syllables.
ADD" statement has been parsed.
ADR --- I'm loathe to mess with ado's code ...
ADR: I reformatted this to my liking, and deleted some unneeded code.
ADR: This means if Jan 1 was Monday through Thursday, it was week 1, otherwise week 52 or 53.
AFP is a network filesystem found on Apple Macintosh computers - both OS9 and OSX.
AFP locking (OSX only), 6.
AFP locking uses the file path so it needs to be included in the afpLockingContext.
AFTER ALL ABOVE FAILED
AF_LINK is defined in 4.4BSD derivations since Net2.
AF_UNIX sockets via getaddrino are not implemented due to security problems
AGGREGATE(zName, nArg, iArg, bNC, xStep, xFinal) Used to create an aggregate function definition implemented by the C functions xStep and xFinal.
AIX 4.3.3 doesn't have AI_NUMERICHOST.
AIX doesn't have LOG_AUTHPRIV
AIX doesn't have LOG_PERROR
ALGORITHMS  SERIAL DAY NUMBER TO JEWISH DATE  The simplest approach would be to use the rules stated above to find the molad of Tishri before and after the given day number.
ALGORITHMS  The calculations are based on three different cycles: a 400 year cycle of leap years, a 4 year cycle of leap years and a 5 month cycle of month lengths.
ALGORITHMS  The calculations are based on two different cycles: a 4 year cycle of leap years and a 5 month cycle of month lengths.
ALLOCATE or VIRTUAL should be enabled
ALLOCATION NOTES:  Expr objects can use a lot of memory space in database schema.
ALNUM, 3rd and 4th values redundant
ALPHA   (input) COMPLEX All the offdiagonal array elements are set to ALPHA.
ALPHA   (input) COMPLEX*16 All the offdiagonal array elements are set to ALPHA.
ALPHA   (input) DOUBLE PRECISION The constant to which the offdiagonal elements are to be set.
ALPHA   (input) REAL The constant to which the offdiagonal elements are to be set.
ALPHA   (input/output) COMPLEX On entry, the value alpha.
ALPHA   (input/output) COMPLEX*16 On entry, the value alpha.
ALPHA   (input/output) DOUBLE PRECISION On entry, the value alpha.
ALPHA   (input/output) REAL On entry, the value alpha.
ALPHA  (input) DOUBLE PRECISION Contains the diagonal element associated with the added row.
ALPHA  (input) REAL Contains the diagonal element associated with the added row.
ALPHA  - DOUBLE PRECISION.
AM or PM based on 12-hour clock
AND (...)" expression
AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
AND old.colN IS new.colN)
ANSI STD 1003.1 (1996) section 6.5.2.2 lines 483 through 490 specify that when a process sets or clears a lock, that operation overrides any prior locks set by the same process.
ANY LAMP GC  PC  SC ALNUM SPACE PXSPACE WORD CLIST UCNC
API for registering GLOBAL filters
API for registering GLOBAL wrappers
API for registering VOLATILE wrappers
API oddity: If successful, SetFilePointer() returns a dword  containing the lower 32-bits of the new file-offset.
API oddity: If successful, SetFilePointer() returns a dword containing the lower 32-bits of the new file-offset.
API offered by current FTS version
APIs to grab new and old data with
ARCHITECTURE ASSUMPTIONS: This code used to have some nasty ones, but these have been removed by now.
ARGF is a stream designed for use in scripts that process files given as command-line arguments or passed in via STDIN.
ARGF#path and its alias ARGF#filename are provided to access the name of the file currently being read.
ARGV contains the command line arguments used to run ruby.
ARM_TP_ADDRESS is (ARM_VECTORS_HIGH + 0x1000) or 0xffff1000 and is known to runtime.read_tls_fallback.
ARRAY_INFO(0, arg, 0)
ARRAY_INFO(0, arg, 1)
ARRAY_INFO(0, arg1, 0)
ARRAY_INFO(0, arg2, 0)
ARRAY_INFO(0, args, 1)
ARRAY_INFO(0, descriptorspec, 1)
ARRAY_INFO(0, env, 1)
ARRAY_INFO(0, extrainfo, 0)
ARRAY_INFO(0, fields, 1)
ARRAY_INFO(0, haystack, 0)
ARRAY_INFO(0, keys, 0)
ARRAY_INFO(0, matrix3x3, 0)
ARRAY_INFO(0, options, 1)
ARRAY_INFO(0, opts, 1)
ARRAY_INFO(0, other_options, 1)
ARRAY_INFO(0, parameters, 1)
ARRAY_INFO(0, params, 1)
ARRAY_INFO(0, points, 0)
ARRAY_INFO(0, styles, 0)
ARRAY_INFO(0, values, 0)
ARRAY_INFO(1, arg, 0)
ARRAY_INFO(1, except_streams, 1)
ARRAY_INFO(1, info, 1)
ARRAY_INFO(1, mxhosts, 1)
ARRAY_INFO(1, output, 1)
ARRAY_INFO(1, pipes, 1)
ARRAY_INFO(1, read_streams, 1)
ARRAY_INFO(1, stack, 0)
ARRAY_INFO(1, weight, 1)
ARRAY_INFO(1, write_streams, 1)
AS SELECT ..." statement.
ASC or DESC for INTEGER PRIMARY KEY
ASC or DESC on the i-th expression
ASCII is assumed - ZCODE is the ASCII code of either lower or upper case 'Z'.
ASCII is assumed, on Prime machines - ZCODE is the ASCII code plus 128 of either lower or upper case 'Z'.
ASCII magic -- try to detect text encoding.
ASCII optimization: quick check to see if the string might be there I realize that 'offset' is 'grapheme count offset' but will work in spite of that
ASCII range token characters
ASCII-8BIT string never be broken.
ASN.1 data structures are very common in cryptographic applications, e.g. X.509 public key certificates or certificate revocation lists (CRLs) are all defined in ASN.1 and DER-encoded.
ASN.1, DER and BER are the building blocks of applied cryptography.
ASN1 for possible values.
ASN1Data offers attributes to read and set the +tag+, the +tag_class+ and finally the +value+ of a particular ASN.1 item.
ASN1_INTEGER conversions TODO: Make a decision what's the right way to do this.
ASN_UNSIGNED is the same as ASN_GAUGE
ASSERT NOTE: Some sanity checking code is included using assert().
ATTACH p AS pDbname KEY pKey
ATTN: key extraction must be the first thing to do...
AUTH TLS not supported try AUTH SSL
AUTHOR: Karl Vogel Control Data Systems, Inc.
Abandon the tree walk
Able to support an IN operator
Abort due to constraint violation
Abort early if the journal is empty.
Abort if the requested allocation size is larger than the largest power of two that we can represent using 32-bit signed integers.
Abort the SQL statement with an error
Abort with an error if BOTH options are defined
Above is constant between recursions.
Above requires no mutex.  Use mutex below for variable that follow.
Absolute accuracy desired Computing MAX
Absolute elements do not take part in that phase.
Absolute index of input segments
Absolute level containing segments
Absolute level just updated
Absolute level number to work on
Absolute level of input segments
Absolute level of segment to modify
Absolute level to delete from
Absolute level to open
Absolute level to repack
Absolute value of pad_size
Absolute-positioned children don't participate in flex layout.
Academic Press, 1991).
Accelerator statistics
Accept a client connection from a server socket, using an optional timeout.
Accept negative position if length of search string can be determined
Access authorization function
Access permission denied
Access the static variable through a macro for SQLITE_OMIT_WSD.
Access to Element node is implemented as a convience method
Access to mutexes used by sqlite3_status()
Access to the unixShmNode object is serialized by the caller
Access to the winShmNode object is serialized by the caller
Access to this variable is protected by SQLITE_MUTEX_STATIC_MASTER.
AccessCheck() requires an impersonation token.
According to PKCS#5, a salt should be at least 8 bytes long.
According to PKCS#5, security is limited by the output length of the underlying digest function, i.e. security is not improved if a key length strictly larger than the digest output length is chosen.
According to POSIX.1-2001
According to Pierre Joye, Windows in some environments per default creates text files, so force binary mode.
According to c-client docs (internal.txt) this shouldn't be used.
According to documentation the only way to get an error is to have out-of-memory on the server-side.
According to earlier standards
According to rfc2965, more specific paths are listed above the less specific ones.
According to spec, this is only recommended, not required.
According to the book "Jewish Calendar Mystery Dispelled" by George Zinberg, the patriarch Hillel II published these rules in 358 A.D.
According to the docs, this can only be one of the values in the first assert() below.
According to the information I was using, 2 measn meters.
According to the spec, if the main size is not definite and the child's inline axis is parallel to the main axis (i.e. it's horizontal), the child should be sized using "UNDEFINED" in the main size.
Account for a line which is too long to fit in the window.
Accumulate each channel
Accumulate results here
Accumulate the error message text here
Accumulate the length for use in the pre-compile phase.
Accumulate the output here
Accumulate the successive pointers with their offsets in the opposite order, starting from the original data pointers.
Accumulate transformations in the matrix Z
Accumulated cross dimensions of all lines so far.
Acquire a PENDING lock
Acquire a RESERVED lock
Acquire a cryptographic provider context handle.
Acquire a lock on the handle h
Acquire a page if it is already in the in-memory cache.
Acquire a reader lock.
Acquire a reference to page number pgno in pager pPager (a page reference has type DbPage*).
Acquire a shared lock
Acquire an EXCLUSIVE lock
Acquire the mutex before continuing
Across multiple iterations of outer loops, the output rows need not be sorted.
Activate assert() only if SQLITE_TEST is enabled.
Activate ini entries with values from the user config hash
Activate per-dir-system-configuration defined in php.ini and stored into configuration_hash during startup
Activate per-host-system-configuration defined in php.ini and stored into configuration_hash during startup
Activation is only possible before the first Read().
Actual allocated length
Actual effects are operating system dependent (see the beginning of this section).
Actual one takes and returned long.
Actual printf innards.
Actual recursions cannot be fixed length, but subroutine calls can.
Actual size of mapped region
Actual size of mapping at pMapRegion
Actually 0 or 1 as int is used.
Actually decreases reference count and only frees the storage if reference count is zero.
Actually do the update of the change counter
Actually it means "non-negative", though.
Actually set new attribute value.
Actually set the symbol.
Actually there are two issues of Scanning that might be called "clever", the rest is quite straightforward.
Actually we compute the coordinates of the center of the corner histogram cell, which are the lower bounds of the volume we care about.
Actually we compute the coordinates of the center of the upper-corner histogram cell, which are the upper bounds of the volume we care about.
Actually we don't need this context anymore after we have enabled SSL on the connection.
Actually, the way the column cache is currently used, we are guaranteed that the object will never already be in cache.
Actually, this is pretty much a NO-OP, since the identification system doesn't allow us to discriminate between a positive match, a possible match and a definite non-match.
Actualy, Fts3Cursor.eSearch can be greater than or equal to FTS3_FULLTEXT_SEARCH.
Adapted from NetBSB libc by Dieter Baron
Adapted from: apptype.c, Written by Eberhard Mattes and put into the public domain  Notes: 1.
Adar I, the month added for leap years, is sometimes referred to as the 13th month, but I have chosen to assign it the number 6 to keep the months in chronological order.
Add  entries from various fields of the obtained parsed_calendar
Add (match, offset) pair to the return value
Add (match, offset) to the return value
Add 1 to the reference count for page iPage.
Add FTS3_VARINT_MAX bytes of unused space to the end of the  allocation.
Add MARK, if available
Add MEM_Str to the set of representations for the given Mem.
Add N to the value of a status record.
Add OP_CursorHint opcodes
Add Response element in between.
Add WhereLoop entries to handle OR terms.
Add a FD from the fd set
Add a FD to the fd set
Add a FD to to kevent queue
Add a NULL terminator, and return
Add a WO_MATCH auxiliary term to the constraint set if the current expression is of the form:  column MATCH expr.
Add a character or range to a class     *
Add a character to the end of the current packet, and if it is 254 characters, flush the packet to disk.
Add a docid/column/position entry to a PendingList structure.
Add a field to the new.* record.
Add a field to the old.* record.
Add a flag to INIT_ARRAY if we know this array cannot be packed
Add a list of cells to a page.
Add a list of characters to a class     *
Add a lock on the table with root-page iTable to the shared-btree used by Btree handle p.
Add a mapping node to a document.
Add a new CHECK constraint to the table currently under construction.
Add a new column to the table currently being constructed.
Add a new element to the end of an expression list.
Add a new entry before the current location.
Add a new instruction to the list of instructions current in the VDBE.
Add a new subitem to the tree.
Add a record to the sorter.
Add a reference to new callback
Add a scalar node to a document.
Add a segment iterator for the current contents of the hash table.
Add a sequence node to a document.
Add a single OP_Explain instruction to the VDBE to explain a simple count(*) query ("SELECT count(*) FROM pTab").
Add a single new WhereTerm entry to the WhereClause object pWC.
Add a single new term to an ExprList that is used to store a list of identifiers.
Add a term to the segment being constructed by the SegmentWriter object ppWriter.
Add a whole list of operations to the operation stack.
Add additional columns needed to make the automatic index into a covering index
Add all SCC entry variables into worklist for narrowing
Add all WhereLoop objects for all tables
Add all changes in the changeset traversed by the iterator passed as the first argument to the changegroup hash tables.
Add all headers as HTTP_* variables
Add all table columns to the PRIMARY KEY index
Add all the subpatterns to it
Add an INDEXED BY or NOT INDEXED clause to the most recently added  element of the source-list passed as the second argument.
Add an OP_ParseSchema opcode.
Add an array of protocols
Add an entry in sqlite_master for this index
Add an entry to each output position list
Add an entry to one of the pending-terms hash tables.
Add an entry to the array of counters managed by sqlite3_stmt_scanstatus().
Add an entry to the in-memory hash table.
Add an entry to the name/number table      *
Add an opcode that includes the p4 value as a pointer.
Add an opcode that includes the p4 value as an integer.
Add an opcode that includes the p4 value with a P4_INT64 or P4_REAL type.
Add any overflow cells
Add byte for terminal null
Add cells to the start of the page
Add character for sign symbol
Add characters not in a list to a class     *
Add charset on content-type header if the MIME type starts with "text/", the default_charset directive is not empty and there is not already a charset option in there.
Add code that will check to make sure the N registers starting at iMem form a distinct entry.
Add code to implement the OFFSET
Add column type information to this table
Add condition to terminate at NULLs
Add connection db to the blocked connections list.
Add constraints to reduce the search space on a LIKE or GLOB operator.
Add copyswap, nonzero, getitem, setitem
Add cwd (not with CLI)
Add dlidx if this many empty pages
Add edition attribute to the hash
Add entropy to s2 by calling gettimeofday() again
Add entry to the chunk, preserving keys if necessary.
Add environment location
Add for any character in the key one byte of the alternate sum.
Add in the fixed length from the table
Add increments of 5 weekdays as a week, leaving the DOW unchanged.
Add it in this case too.
Add it to the set of best so far
Add items to the current line until it's full or we run out of items.
Add its contribution to iterindex
Add key for numbers not divisible by 7.
Add key or last result.
Add listening sockets to the read set
Add literal P3 to the value in register P1.
Add node pNode to the node hash table.
Add number of Cells freed to this counter
Add one day for each 100 years
Add one day for each 4 years
Add one day for each 400 years
Add one to significant_digit_cnt to copy the trailing 0 byte, thus setting the length
Add one to the old schema cookie
Add opcodes to the prepared statement
Add pPage to the dirty list
Add pSelect to the Expr.x.pSelect field.
Add pTab to the array if it is missing.
Add pVtab to the end of sqlite3.aVTrans
Add padding and return the message digest.
Add page pPage to the head of the dirty list (PCache1.pDirty is set to pPage).
Add predecessors of changed block to worklist
Add registry location
Add salt for numbers not divisible by 3.
Add seg-reader objects to the Fts3MultiSegReader object passed as the 8th argument.
Add separator if required
Add shape and descr itself to the list of object to hash
Add some symbolic constants to the module
Add space for two low level buffers
Add term zTerm to the SegmentNode.
Add terms to the ORDER BY clause as necessary.
Add the "COLLATE" clause to this expression
Add the "eNNN" suffix
Add the BLOCK-MAPPING-START token if needed.
Add the BLOCK-SEQUENCE-START token if needed.
Add the ON clause to the end of the WHERE clause, connected by an AND operator.
Add the PK key for this row to the temporary table
Add the POSIX table or its complement into the main table that is being built and we are done.
Add the REDUCE itflag if this creates a reduction situation.
Add the ability to override 'extern'
Add the arrays from the nonzero result to the index
Add the change to the hash-table
Add the changeset currently stored in buffer pData, size nData bytes, to changeset-group p.
Add the character to the temporary buffer.
Add the characters to the defined category.
Add the code if it not 0.
Add the code to the composite property.
Add the code to the defined category.
Add the current term to the interior node tree.
Add the current term to the parent node.
Add the default collation sequence BINARY.
Add the entries to the stat3 or stat4 table.
Add the entry to the main terms index.
Add the entry to the stat1 table.
Add the error propagated from the previous line to form the complete error correction term for this pixel, and round the error term (which is expressed * 16) to an integer.
Add the file descriptor used by file handle pFile to the corresponding pUnused list.
Add the final chunk if there is one.
Add the first rowid field to the hash-entry
Add the fraction part.
Add the freeblocks to the min-heap  EVIDENCE-OF: R-20690-50594 The second field of the b-tree page header is the offset of the first freeblock, or zero if there are no freeblocks on the page.
Add the function name to our signal table
Add the initial header varint and total the size
Add the last (match, offset) pair to the return value
Add the last piece to the return value
Add the list of function arguments to the SrcList entry for a table-valued-function.
Add the lower and title case mappings for the upper case character.
Add the match sets to the output array and clean up
Add the metadata if provided
Add the new BtShared object to the linked list sharable BtShareds.
Add the new entry to the end of the cache
Add the new range at the insertion point.
Add the new segment to the output level
Add the opcode to this VM
Add the output column list to the name-context before parsing the other expressions in the SELECT statement.
Add the page to the PGroup LRU list.
Add the piece to the return value
Add the rowid of the row to be deleted to the RowSet
Add the sentinel index which is used by the binary search as the upper bound for a search.
Add the sign if we've seen at least one digit
Add the smallest possible penalty  (equivalent to multiplying the cost by 1.07) to ensure that  this does not happen.
Add the space back into the linked list of freeblocks.
Add the starting values of the context according to FIPS 180-2:6.2.2 step 4.
Add the starting values of the context according to FIPS 180-2:6.3.2 step 4.
Add the table to the in-memory representation of the database.
Add the term to each of the prefix indexes that it is not too  short for.
Add the term to the terms index
Add the timezone offset
Add the upper and lower mappings for a title case character.
Add the upper and title case mappings for the lower case character.
Add the value of the varint to *pVal.
Add the whole weeks between date_begin and date_end
Add the zero terminator.
Add them to a list that we can process later.
Add these into the running sums, and simultaneously shift the next-line error sums left by 1 column.
Add this character to the class.
Add this many bytes to each in-memory page
Add this many extra columns to the end
Add this option / argument pair to the result hash.
Add to "recursing stack"
Add to l all the items which uniquely define a builtin type
Add two 0x00 bytes the end of the buffer.
Add type and collation information to a column list based on a SELECT statement.
Add user-specified variables
Add with a default set of properties.
Added 7/24/95: support transparent copies
Added by the optimizer.
Added hdpi and vdpi to support images at non-screen resolutions, i.e. 300 dpi TIFF, or 100h x 50v dpi FAX format.
Added support for reading as well as support for 'tell' and 'seek'.
Added to free constructor arguments
Added with non-blocking streams in mind, where this situation is frequent
Adding 0.25 to c is to ensure that it is truncated to beta and not ( beta - 1 ).
Adding 5 to the font index so we will never have font indices that overlap with the old fonts (with indices 1-5).
Adding a new char resets the search location
Adding a new return type is always valid.
Adding the two 0x00 bytes prevents this from causing a buffer overread.
Addison-Wesley Publishing Company, Reading, Massachusetts.
Additional 16 bits for server capabilities
Additional HTTP headers
Additional bit values that can be ORed with an affinity without changing the affinity.
Additional columns are used only as parameters to aggregate functions
Additional constants for use with loading html
Additional databases may be attached.
Additional delimiter argument
Additional entries are made on the AggInfo object as necessary.
Additional fields may be appended to this object when the iVersion value is increased.
Additional functions are available for simple rotation or up/downscaling.
Additional headers for NetWare
Additional information associated with pTerm
Additional information is available on the "dbstat.html" page of the official SQLite documentation.
Additional methods may be added in future releases
Additional per-array data required for providing the buffer interface
Additional records associated with authoritative name servers
Additional values that can be added to the sync_flags argument of sqlite3WalFrames():
Additionally to the index, we also store the variable, to ensure that it is not destroyed during serialization and its pointer reused.
Additionally, *pzErrmsg may be set to point to a buffer containing a utf-8 formatted English language error message.
Additionally, a macro named "winIoerrCanRetry2" may be defined.
Additionally, an empty array is returned when the starting index for an element range is at the end of the array.
Additionally, an empty string is returned when the starting index for a character range is at the end of the string.
Additionally, because the index updates are likely to be applied in random order, access to pages within the database is also likely to be in  random order, which is itself quite inefficient.
Additionally, if SQLITE_DEBUG is defined, an instance of the following structure is used to record the current transaction state.
Additionally, in auto-vacuum mode, the following events may invalidate an overflow page-list cache.
Additionally, set output variable *pzErrmsg to point to a buffer containing an error message.
Additionally, successful attempts to obtain exclusive xShmLock() WRITER, CHECKPOINTER and READ0 locks on the target  database file are recorded.
Additionally, the bits corresponding to pgno in Pager.pInJournal (bitvec of pages already written to the journal file) and the PagerSavepoint.pInSavepoint bitvecs of any open savepoints are set.
Additionally, the callback function is invoked for each frame written to the WAL since the start of the transaction.
Additionally, the result of the comparison is only valid if both of the snapshot handles were obtained by calling sqlite3_snapshot_get() since the last time the wal file was deleted.
Additionally, this extension allows the work involved in writing the  large transaction to be broken down into sub-transactions performed  sequentially by separate processes.
Additionally, xShmLock() calls are no-ops on target database files in RBU_STAGE_OAL mode.
Address at which row is visited
Address of "Goto addr_chng_0"
Address of "OP_Rewind iIdxCur"
Address of "loops" counter
Address of "next_row:"
Address of "rows visited" counter
Address of MustBeInt instruction
Address of OP_CreateTable opcode on CREATE TABLE
Address of OP_Explain (or 0)
Address of OP_FkIfZero
Address of OP_OpenEphemeral
Address of OP_OpenEphemeral instruction
Address of OP_OpenEphemeral opcode for tabTnct
Address of a i-th cell
Address of array containing child table row
Address of array containing old row
Address of first `dummy', once known.
Address of initial segment.
Address of instruction to skip PRIMARY KEY index
Address of jump instruction
Address of jump operation
Address of jump over the delete logic
Address of loop counter
Address of next cell body
Address of next cell pointer
Address of next instruction to return
Address of opcode that determines the IN is true
Address of ptr to next freeblock
Address of regReturn init
Address of rows visited counter
Address of subroutine to manifest a subquery
Address of test for empty pDest
Address of test for empty pSrc
Address of the OP_IfNot opcode
Address of the OP_Jump opcode
Address of the OP_SorterOpen or OP_OpenEphemeral
Address of the OpenEphemeral instruction
Address of the end of the query
Address of the i-th cell
Address of the initialization bypass jump
Address of the next freeblock
Address of the output-A subroutine
Address of the output-B subroutine
Address of the select-A coroutine
Address of the select-A-exhausted subroutine
Address of the select-B coroutine
Address of the select-B-exhausted subroutine
Address of this block.
Address of top of loop
Address of trailer block of previous segment.
Address register for select-A coroutine
Address register for select-B coroutine
Address register for the output-A subroutine
Address register for the output-B subroutine
Address size override
Address to jump to for next iteration
Address where integer counter is initialized
Address-sized immediate (no sign extension)
Addresss of jump instruction
Adds a key value to the hashtable.
Adds a number if it does not already exist and returns an index value multiplied by 2.
Adds another key for existing cached script
Adjacent freeblocks are coalesced.
Adjust INFO and the pivot indices.
Adjust OP_RECURSE items in repeated group   *
Adjust PC-relative scaled branch offsets.
Adjust ancestry of this node.
Adjust base and n to skip over SQLITE_AFF_BLOB entries at the beginning and end of the affinity string.
Adjust base and n to skip over SQLITE_AFF_NONE entries at the beginning and end of the affinity string.
Adjust based on the number of holidays we crossed
Adjust baseoffsets and resetbaseptr back to the start of this axis.
Adjust checksum to count the "chksum" field as blanks.
Adjust dimensionality and strides for index object iterators --- i.e. broadcast
Adjust downward, as appropriate
Adjust for backwards DST changeover
Adjust for forwards DST changeover
Adjust for leap years
Adjust for zero repeat
Adjust its  size parameters for check-out and return a pointer to the  user portion of the chunk.
Adjust memory usage statistics
Adjust nOut using stat3/stat4 data.
Adjust number of bytes to read.
Adjust numbers and allocate storage and initialize fields.
Adjust output estimates using WHERE
Adjust pTemplate cost downward so that it is cheaper than its  subset p
Adjust pTemplate cost downward so that it is cheaper than its  subset p.
Adjust pTemplate cost upward so that it is costlier than p since pTemplate is a proper subset of p
Adjust settings of the pager to those specified in the pgFlags parameter.
Adjust so it's relative to the year 2000 (divisible by 400)
Adjust sum and return.
Adjust the base pointers to start at the end
Adjust the cost C by the costMult facter T.
Adjust the denominator in case of integers and add the number.
Adjust the end of the holidays array
Adjust the exponent so that it is the multiple of BASE_FIG.
Adjust the final value according to the bit length - this means that the same lists of (e.g.) horizontal spaces can be used in all cases.
Adjust the highwater mark if necessary.
Adjust the iteration size and reset iterend
Adjust the permutation
Adjust the shape to only look at the first element along any of the reduction axes.
Adjust the start of the year.
Adjust the window dimensions for this array
Adjust to the B.C./A.D.
Adjusts a datetimestruct based on a minutes offset.
Adjusts a datetimestruct based on a seconds offset.
Advance *pz to point to the first character past the integer.
Advance Pager.journalOff to the start of the next sector.
Advance PmaReader pReadr to the next key in its PMA.
Advance YYPTR to a properly aligned location for the next stack.
Advance an iterator created by sqlite3changeset_start() to the next change in the changeset.
Advance at least as far as this
Advance each iterator that currently points to iRowid.
Advance each level to the last entry on the last page
Advance each of the segments to point to the first docid.
Advance each segment iterator until it points to the term zTerm/nTerm.
Advance ecode past the assertion to the start of the first branch, but adjust it so that the general choosing code below works.
Advance ecode past the callout, so it now points to the condition.
Advance it to the next matching document in the database and populate output variable *p with the details of the new entry.
Advance it to the next matching documnent in the database and populate the Fts3Doclist.pList and nList fields.
Advance iterator at least this far
Advance iterator ctx.iter so that it points to the first coalesced phrase instance at or following position iBestStart.
Advance iterator pIter to the next entry.
Advance iterator pIter to the next key in its PMA.
Advance iterator pIter until it points to a value equal to or laster than the initial value of *piLast.
Advance pChild until it points to iLast or laster
Advance past the POS_END terminator byte
Advance past the bit map, and act on what follows.
Advance past the item
Advance pixel pointers to next column
Advance pointer p until it points to pEnd or an 0x01 byte that is not part of a varint
Advance pointer p until it points to pEnd or an 0x01 byte that is not part of a varint.
Advance pointer to buffer to the next word.
Advance the 'head' iterator of each phrase to the first offset that is greater than or equal to (iNext+nSnippet).
Advance the LHS iterator to find the next row visited.
Advance the MergeEngine to its next entry.
Advance the RHS iterator to find the next row visited.
Advance the SegReader to point to the next docid in the doclist associated with the current term.
Advance the buffer pointer.
Advance the changeset iterator to the next change.
Advance the current PmaReader
Advance the cursor to the next element for json_tree()
Advance the cursor to the next entry in the database.
Advance the cursor to the next row in the table that matches the  search criteria.
Advance the cursor to the next row in the table.
Advance the first term iterator in the first phrase of pNear.
Advance the iterator for each token in the phrase once.
Advance the iterator object passed as the only argument.
Advance the iterator passed as an argument to the next position.
Advance the iterator passed as the only argument.
Advance the iterator passed as the second argument until it is at or  past rowid iFrom.
Advance the iterator to the next coalesced phrase instance.
Advance the iterator to the next position.
Advance the position list iterator specified by the first two  arguments so that it points to the first element with a value greater than or equal to parameter iNext.
Advance the snippet iterator to the next candidate snippet.
Advance to a unique first char if there is one.
Advance to new matching position
Advance to next branch
Advance to next items in outer reduce loop
Advance to the next WhereTerm that matches according to the criteria established when the pScan object was initialized by whereScanInit().
Advance to the next document
Advance to the next document that matches the FTS expression in Fts3Cursor.pExpr.
Advance to the next element in the sorter.
Advance to the next name context.
Advance to the next output block
Advance to the next piece.
Advance to the next row to process.
Advance to the next term of the compound
Advance to the position right after the last full match
Advance zCsr to the next token.
Advances the scan pointer if +advance_pointer_p+ is true.
Advances the scan pointer if +advance_pointer_p+, otherwise not.
Affects STR_PTR and TMP1.
Affinity aff is applied to the result of the function before returning.
Affinity for end of range constraint
Affinity for start of range constraint
Affinity must be the same on all columns
Affinity of the LHS of the IN
Affinity string for comparisons
Affinity string to modify
Affinity string to return
Affinity to use for comparison
After 5 RETRYs, we begin calling sqlite3OsSleep().
After SPLTMAX splits, we still cannot fit the key.
After a crash, the wal-index can (and should be) reconstructed from the original WAL file.
After a database is initialized, the DB_SchemaLoaded bit is set bit is set in the flags field of the Db structure.
After a file in +ARGV+ has been read +ARGF+ removes it from the Array.
After a type conversion, the value returned by sqlite3_column_type() is undefined.
After all decryption is performed, the tag is verified automatically in the call to Cipher#final.
After all inserts are finished, it is possible to extract the elements of the RowSet in sorted order.
After all, we're not really supposed to rework JPEGs and write them out again anyway.
After an error is returned by an OS function, SQLite calls this function with zBuf pointing to a buffer of nBuf bytes.
After being freed, memory should neither be read nor written.
After blocking operation, thread must check interrupt (RUBY_VM_CHECK_INTS).
After building, copy the resulting file to the folder where your database expects to find its UDFs.
After calling semget(), if a process finds that the usage count is 1, it will set the value of SYSVSEM_SEM to max_acquire.
After casting, decrement the source ref
After conversion, destination_buffer is resized to destination_byteoffset + actually produced number of bytes.
After counter exceeds 16 (the number of significant digits in a 64-bit float) '0' is always returned.
After doing this the directory is synced again before any individual transaction files are deleted.
After each checkpoint, the salt-1 value is incremented and the salt-2 value is randomized.
After each schema change, the cookie value changes.
After each token doclist is loaded, merge it with the others from the same phrase and count the number of documents that the merged doclist contains.
After eliminating duplicates from other WHERE clauses, the action for each sub-WHERE clause is to to invoke the main loop body as a subroutine.
After finishing execution of the fiber block this method will always return false.
After finishing the verification, the error information can be retrieved by #error, #error_string, and the resuting complete certificate chain can be retrieved by #chain.
After initialization, this table is read-only.
After invoking OLE methods with reference arguments, you can access the value of arguments by using ARGV.
After it has been retrieved using xFetch, the page is considered to be "pinned".
After it returns, *piPos contains the value of the next element of the list and *pp is advanced to the following varint.
After it returns, *ppPoslist points to the first byte after the position-list.
After it returns, *ppPoslist points to the to the terminator (POS_COLUMN or POS_END) byte of the column-list.
After pStmt has returned SQLITE_DONE
After passing the buffer and buffer size to the lookaside-reader init function, zero the phrase poslist buffer.
After processing each alternative, restore the offset data and the last captured value.
After reading the first page of the database assuming a page size of BtShared.pageSize, we have discovered that the page-size is actually pageSize.
After releasing GVL using rb_thread_call_without_gvl() you can not access Ruby values or invoke methods.
After removing the cell, adjust the r-tree data structure if required.
After returning the last character of the first file, it returns the first character of the second file, and so on.
After scanning the current FTS table row for the deferred tokens, it is determined that the row does *not* match the query.
After seeking the cursor, the vdbe executes an OP_ResultRow.
After that we require an 'm' or something else where 'm' stands for members and anything else should be an array.
After the "shift" half of a SHIFTREDUCE action, the stateno field actually contains the reduce action for the second half of the SHIFTREDUCE.
After the VDBE has be prepped, it can be executed by one or more calls to sqlite3VdbeExec().
After the application has finished with the result from sqlite3_get_table(), it must pass the result table pointer to sqlite3_free_table() in order to release the memory that was malloced.
After the deprecation the PyNumber_Check could be replaced by PyIndex_Check.
After the following block of preprocess macros, all of SQLITE_OS_UNIX, SQLITE_OS_WIN, and SQLITE_OS_OTHER will defined to either 1 or 0.
After the group has been scanned, all the offsets in the forward reference list for the group are adjusted.
After the journal is finalized, the pager moves to PAGER_READER state.
After the journal is safely on oxide, the changes to the database are written into the database file and flushed to oxide.
After the jump, register P1 becomes undefined.
After the last byte of the first file has been returned, the first byte of the second file is returned.
After the last character of the first file has been returned, the first character of the second file is returned.
After the last codepoint of the first file has been returned, the first codepoint of the second file is returned.
After the last line of the first file has been returned, the first line of the second file is returned.
After the loop is terminated we need to run the sorter and output the results.
After the maximum size is reached then the least-recently-used element is discarded to make room for the new.
After the merge, all segment blocks from the merged level are deleted.
After the options, we require exactly two arguments, which are the pattern, and the subject string.
After the records are added to the journal (and the journal synced,  if in full-sync mode), the zero is overwritten with the true number of records (see syncJournal()).
After the trigger actions have been parsed, the sqlite3FinishTrigger() function is called to complete the trigger construction process.
After they occur, SQLite abandons the current operation and returns an error code (usually SQLITE_NOMEM) to the user.
After this point we are allowed to free the result set, as we have cleaned the line
After this routine has been called, the sqlite3RowSetInsert() routine may not be called again.
After this routine is called the VM has been "packaged" and is ready to run.
After this routine is called, further calls to  sqlite3VdbeAddOp() functions are prohibited.
After this routine is called, futher calls to  sqlite3VdbeAddOp() functions are prohibited.
After this routine is called, the zArg3 argument to authorization callbacks will be zContext until popped.
After this routine is run, the VDBE should be ready to be executed again.
After this routine returns, the root page is empty, but still exists.
After this routine runs
Again, keep the UTF-8 and UCP stuff separate.
Again, not all CAs support a nonce.
Again, separate the UTF-8 case for speed, and also separate the UCP cases.
Again, set the column number so that sqlite3ResolveOrderGroupBy() will convert the order-by term to a copy of the result-set expression
Again, this structure is intended to be opaque, but it can't really be opaque because it is used by macros.
Again, we must remember to replicate entries on the forward reference list.
AggInfo.pGroupBy and AggInfo.aFunc.pExpr point to fields within the original Select structure that describes the SELECT statement.
Aggregate SQL function implementations
Aggregate column length array
Aggregate containing min() or max()
Aggregate function with DISTINCT keyword
Aggregate functions are allowed here
Algorithm (iterative): If x is rational, return x.
Algorithm description* A straightforward algorithm that excludes infeasible solutions using GCD-based pruning is outlined in Ref.
Algorithm does not use IV, even though mode supports it
Algorithm: Maintain a GIFBITS character long buffer (so that 8 codes will fit in it exactly).
Algorithmic Number Theory, Lecture Notes in Computer Science **4076**, 182-192 (2006).
Algorithmically based on Fortran-77 FFTPACK by Paul N.
Aliases for StringPrep
Aliases which have not been applied indicate typos/bugs.
Align limit and max_limit.
Align size to 64-byte boundary
Align to 64-byte boundary
Aligning ovector to even number of sljit words.
Alignment + 2 * 16 bytes.
All  fields of *pTask are zeroed before returning.
All (named) indices indexed by name
All ASCII code and control characters are intact.
All CHECK constraints
All Cells are moved to the end of the page and all free space is collected into one big FreeBlk that occurs in between the header and cell pointer array and the cell content area.
All OP_Destroy operations occur on the same btree
All SELECT results must be columns.
All SELECT statements should have been expanded using sqlite3SelectExpand() prior to invoking this routine.
All SQL must be converted into a prepared statement before it can be run.
All SQL text past the last semicolon parsed
All UTFs use the same flag bit
All WhereTerms are collected into a single WhereClause structure.
All above except SYNCHRONOUS
All added indices have 1 dimension
All allocations must be a power of two and must be expressed by a 32-bit signed integer.
All are destroyed when the VM is halted (if not before).
All are quite obscure.
All arguments are complex addressing modes, and it is a binary operator.
All ary members should be X509 Extensions
All ary members should be X509 Revoked
All ary's members should be X509Extension
All assertions used not to be repeatable, but this was changed for Perl compatibility.
All attributes must be set before creating an SSLSocket as the SSLContext will be frozen afterward.
All bits are clear when the bitmap is created.
All bits will be zero or one (since bit is zero or one).
All branches are non-empty
All branches in the assertion failed to match.
All but one delete operation on non-FORDELETE cursors is tagged with the AUXDELETE flag.
All but the final copy start a new nesting, maintaining the chain of brackets outstanding.
All bytes in the string up to (but not including) the nul-terminator are written to the buffer.
All calls obtain an exclusive "checkpoint" lock on the database file.
All can be handled by the same code.
All captured slots were filled in
All cells begin balanced
All centennial years are leap years in the Julian calendar.
All changes made by this function are enclosed in a savepoint transaction.
All changes to the database are recorded by writing frames into the WAL.
All characters are checked against the other side.
All characters are stored.
All code in this file should access the global structure above via the alias "pcache1".
All code referencing FILE * functions was eliminated, since it could never be called.
All code should use the MACRO version as  this function assumes the single-byte case has already been handled.
All code should use the MACRO version as this function assumes the single-byte case has already been handled.
All collating sequences
All colors within a histogram cell will be mapped to the same colormap entry, namely the one closest to the cell's center.
All column names will be unique.
All components of the pathname must exist when this method is called.
All coordinates within a single R-Tree are always of the same time.
All core dimensions must have their size specified by a passed in input or output argument.
All current savepoints are stored in a linked list starting at sqlite3.pSavepoint.
All cursors using the same cache must be tripped to prevent them from trying to use the btree after the rollback.
All cursors will be invalided by this operation.
All data in both input and output buffer are discarded.
All data is assumed aligned.
All data is stored on the current page.
All default VFSes for unix are contained in the following array.
All dimensions of the extra_op corresponding to the subspace must be equal to 1.
All duplicates are adjacent
All elements are stored on a single doubly-linked list.
All elements of the hash table are on a single doubly-linked list.
All elements of the list should belong to the same connection.
All enums used by the uchar APIs.
All errors are considered fatal except for SQLITE_BUSY and SQLITE_LOCKED.
All examples A through E above satisfy case 2.
All examples A through E above satisfy case 3.
All ext's members must be X509::Extension
All extensions can call any of the APIs above provided that the pointer is not NULL.
All fields above are zeroed when the cursor is allocated.
All files and directories have already been synced, so the following calls to sqlite3BtreeCommitPhaseTwo() are only closing files and deleting or truncating journals.
All filesystem writes are atomic
All foreign keys by referenced table name
All four zones sharing a bad point must be marked as not existing.
All functions that may be used in uncaught exception handlers must be final and must not throw exceptions.
All header files and necessary files are collapsed into one file, internal functions are declared static.
All in-memory records are connected together into a linked list headed at VdbeSorter.pRecord using the  SorterRecord.pNext pointer.
All indices got broadcast away, do *not* check as it always was
All individual term iterators in pNear are guaranteed to be valid when this function is called.
All individual term iterators in pPhrase are guaranteed to be valid and pointing to the same rowid when this function is called.
All information about this parse
All inner func will be short-circuited using throw.
All it does is declare the sqlite3Fts3Init() interface.
All it does is declare the sqlite3IcuInit() interface.
All it does is declare the sqlite3RtreeInit() interface.
All jumps have target.
All key sizes are valid
All keys are integers
All keys from this input segment have been transfered to the output.
All kinds can now be repeated except for assertions that are conditions (Perl also forbids these to be repeated).
All leaf  blocks have already been traversed.
All lists are dynamic.
All loads and stores begun before the barrier must complete before any load or store begun after the barrier.
All marker codes start with this
All memory allocation sizes are rounded up to a power of 2.
All memory allocations sizes are rounded up to a power of 2.
All metaclasses are instances of the class `Class'.
All mutexes are required for schema access.
All nFrom paths at the previous level
All names are legal except those that begin with the string "sqlite_" (in upper, lower or mixed case).
All non-degenerate affine transforms are invertible.
All of the above are free to ignore their ORDER BY clause.
All of the code in this file may be omitted by defining a single macro.
All of the data types have been settled, so it's time to check that data type conversions are following the casting rules.
All of the expression analysis must occur on both the outer query and the subquery before this routine runs.
All of the keys on Ptr(N) and its subpages have values greater than Key(N-1).
All of the keys on page Ptr(1) and its subpages have values greater than Key(0) and less than Key(1).
All of the static variables used by this module are collected into a single structure named "mem".
All of the static variables used by this module are collected into a single structure named "mem3".
All of the static variables used by this module are collected into a single structure named "mem5".
All of the usual printf() formatting options apply.
All of these are replaced by no-op macros if OMIT_FOREIGN_KEY is defined.
All of these dbm implementations have their own Ruby interfaces available, which provide richer (but varying) APIs.
All of this is no-op for a production build.
All of this would be completely automatic if SQLite were coded using C++ instead of plain old C.
All offsets for this column have been gathered.
All open cursors, etc are closed automatically.
All operations defined in this module are class methods, so that you can include the Etc module into your class.
All operations move the code pointer forward.
All operations on the closed stream will raise an exception.
All other VFS should return SQLITE_NOTFOUND for this opcode.
All other Windows platforms expect GetProcAddress() to take an ANSI string regardless of the _UNICODE setting
All other code has file scope.
All other entries are added into either configuration_hash or active ini section array
All other licensing and usage conditions are those of the PHP Group.
All other lock types (SHARED, RESERVED, PENDING) are mapped into EXCLUSIVE.
All other methods must be threadsafe in multithreaded applications.
All other methods receive a pointer to the structure as one of their arguments.
All other nodes in the table must be the same size as the root node.
All other pointer map entries have already been taken care of.
All other types, encode as normal
All other values are determined by inspecting the rbu handle passed as the first argument.
All output needs to be distinct
All outstanding pages are invalidated and their memory is freed.
All pages have been processed exactly once
All pages of the b-tree have been visited.
All parameters can be the same matrix (safe to call using the same array for all three arguments).
All phrases currently point to the same row.
All pointers are updated appropriately.
All pointers to WhereTerms should be invalidated after calling this routine.
All positions in the pPhrase position list that are not sufficiently close to a position in the *paPoslist position list are removed.
All possible file constants are listed in the documentation but they may not all be present on your platform.
All prior WhereLoops are order-distinct
All ram filesystem writes are atomic
All rb_threadptr_pending_interrupt_* functions are called by a GVL acquired thread, of course.
All reasonable formats wind up here.
All recursions were so wrapped in the past, but it no longer happens for non-repeated recursions.
All resources associated with the specified cache should be freed.
All set, let's do it.
All singular values converged, so make them positive
All space belongs to this allocation.
All states beyond this must be 'body' states.
All structure fields are set to zero before returning.
All structure methods must be defined, setting any member of the fts5_tokenizer struct to NULL leads to undefined behaviour.
All subsequent calls to sqlite3_blob_read(), blob_write() or blob_reopen() will  immediately return SQLITE_ABORT.
All subsequent changes  made to the table while the session object is enabled will be recorded.
All subsequent changes made to the table while the session object is enabled will be recorded.
All subsequent molads can be calculated from this starting point by adding the length of a lunar cycle.
All subsequent system locking operations become no-ops.
All such objects are stored as part of the Fts5Global.pAux list.
All such objects are stored as part of the Fts5Global.pTok list.
All such objects are stored in the linked list headed at Parse.pTriggerPrg and deleted once statement compilation has been completed.
All such structures associated with a single VM are stored in a linked list headed at Vdbe.pAuxData.
All symbols defined below should begin with yy or YY, to avoid infringing on user name space.
All table that pExpr might refer to
All tables in the FROM clause
All tables indexed by name
All that follows is private to pcache.c and should not be accessed by other modules.
All that is left to do here is free the sqlite3_backup  structure.
All that is left to do here is free the sqlite3_backup structure.
All the allocations succeeded.
All the arguments are concatenated in order.
All the arrays must have the same 'ndim'
All the encoding functions are set to NULL right now, since all the encoding is currently done internally by expat/xmltok.
All the fixes are in a self-contained C file and do not alter the multiarray C code.
All the individual journal files still have 'null' as the master journal pointer, so they will roll back independently if a failure occurs.
All the operands' op_axes are the same, except for allocated outputs.
All the operations are synchronous.
All the parser does is build the internal data structures that describe the table, index, or view.
All the reasons those functions might return SQLITE_ERROR - missing table, missing row, non-blob/text in block column - indicate  backing store corruption.
All the rest have the FLAG_INTERN bit set and are thus for internal use only
All the rest should always be initialized to zero
All the rest which don't fit in the same pattern
All the tables in mPrereq must be scanned before the current virtual  table.
All the two-letter units are variants of seconds
All the work is done in function fts3InitVtab().
All the work is done in function fts5InitVtab().
All the work is done in function fts5VocabInitVtab().
All this does is release the read-lock.
All this routine does is initialize the register given by rMayHaveNull to NULL.
All this routine has to do is delete or truncate or zero the header in the the rollback journal (which causes the transaction to commit) and drop locks.
All threads exited, no sync is needed.
All threads share a single random number generator.
All times may have fraction.
All token types in the generated fts5parse.h file are greater than 0.
All tokens in a cluster belong to phrases that are connected only by AND and NEAR operators (not OR or NOT).
All triggers associated with a single table form a linked list, using the pNext member of struct Trigger.
All triggers indexed by name
All unique filenames are held on a linked list headed by this variable:
All unixShm objects pointing to this
All updates required by each b-tree are completed before moving on to the next, and all updates are done in sorted key order.
All users of the database must be able to share memory.
All values are stored on disk as big-endian.
All variables must either be on the stack or dynamically allocated from the heap.
All warranties are disclaimed.
All we have to do here is incorporate our knowledge of the percentage of this pixel that is really "lit" by pushing the alpha value up toward transparency in edge regions.
All we have to do here is record the root page number for that index.
All we have to do is adjust our internal record of the lock level.
All we have to do is look for a semicolon that is not part of an string or comment.
All winShm objects pointing to this
All writing and syncing of journal and database data has finished.
All's well that ends well.
All* functionality from File, FileTest, and some from Dir and FileUtils is included, in an unsurprising way.
All-in-one: Since we use the JIT compiler only from here, we just include it.
All-ones exponent and a copy of the significand
All-scalar inputs will result in a 1-dimensional output with shape (2).
Alloc a power of two greater or equal to nExpr
Allocate  a cursor to use to search the unique index on the parent key columns  in the parent table.
Allocate 'Fsnotify.events'
Allocate Floyd-Steinberg workspace.
Allocate VdbeCursor number iCur.
Allocate a 7-element boolean array
Allocate a Expr node which joins as many as two subtrees.
Allocate a KeyInfo object sufficient for an index of N key columns and X extra columns.
Allocate a MultiSegReader for each token in the expression.
Allocate a bitvec to use to store the set of pages rolled back
Allocate a buffer for strings which fill the buffer completely
Allocate a buffer in which to accumulate data
Allocate a buffer large enough for an Fts3Cursor structure.
Allocate a cursors for the main database table and for all indices.
Allocate a date array (this steals the date_dtype reference)
Allocate a dynamic memory block.
Allocate a linked list node to prepend to the list.
Allocate a new  page that will become the new right-child of pPage.
Allocate a new Explain object
Allocate a new Fts5Iter object.
Allocate a new MergeEngine object capable of handling up to nReader PmaReader inputs.
Allocate a new RowSetEntry object that is associated with the given RowSet.
Allocate a new RtreeSearchPoint and return a pointer to it.
Allocate a new SegReader object.
Allocate a new Select structure and return a pointer to that structure.
Allocate a new SessionChange object.
Allocate a new WhereLoop to add to the end of the list
Allocate a new cache.
Allocate a new expression node from a zero-terminated token that has already been dequoted.
Allocate a new hash table.
Allocate a new measurement cache entry.
Allocate a new page from the database file.
Allocate a new page object initially associated with cache pCache.
Allocate a new porter tokenizer.
Allocate a new rowid.
Allocate a new segment-id for the structure pStruct.
Allocate a new simple tokenizer.
Allocate a new, empty, sqlite3_changegroup.
Allocate a private rbu VFS for the rbu handle passed as the only argument.
Allocate a range of temporary registers and the KeyInfo needed for the logic that removes duplicate result rows when the operator is UNION, EXCEPT, or INTERSECT (but not UNION ALL).
Allocate a single new register for use to hold some intermediate result.
Allocate a temporary buffer to store the fully qualified file name for the temporary file.
Allocate a temporary copy array.
Allocate a thread local storage slot for the thread "stack"
Allocate a two-slot MatchinfoBuffer object.
Allocate additional space if needed
Allocate an Expr node which joins as many as two subtrees.
Allocate an Fts3MultiSegReader for each token in the expression headed by pExpr.
Allocate an RbuState object and load the contents of the rbu_state  table into it.
Allocate an appendable output segment on absolute level iAbsLevel+1 with idx value iIdx.
Allocate an array and populate it with a copy of pCell and  all cells from node pLeft.
Allocate an array of metadata corresponding to the objects
Allocate an extra register for limit+offset
Allocate an instance of struct Wal to return.
Allocate an instance of the default tokenizer ("simple") at  Fts5Config.pTokenizer.
Allocate and fill in the error_limiter table
Allocate and initialize a new Pager object and put a pointer to it in *ppPager.
Allocate and initialize space for aTo and aFrom
Allocate and initialize the WhereInfo structure that will become the return value.
Allocate and initialize the hash-table used to store tokenizers.
Allocate and initialize the iterator structure.
Allocate and populate a new Parse context to use for coding the  trigger sub-program.
Allocate and populate an UnpackedRecord structure based on the serialized record in nKey/pKey.
Allocate and populate an sqlite3_index_info structure.
Allocate and populate the Fts3Table structure.
Allocate and populate the array of LcsIterator objects.
Allocate and populate the array to return.
Allocate and populate the context object.
Allocate and populate the new session object.
Allocate and return a buffer at least nByte bytes in size.
Allocate and return a new IncrMerger object to read data from pMerger.
Allocate and return a new expression object.
Allocate and return a pointer to a new sqlite3_value object.
Allocate and return a pointer to an expression to load the column iCol from datasource iSrc in SrcList pSrc.
Allocate and return an Fts5Colset object specifying the inverse of the colset passed as the second argument.
Allocate and return an RBU handle with all fields zeroed except for the error code, which is set to SQLITE_MISUSE.
Allocate and return new r-tree node.
Allocate and zero memory.
Allocate and zero the storage for the quotient.
Allocate buffers and make copies of the transfer data if necessary
Allocate cache slot to speed-up run-time class resolution
Allocate combined header + user data storage.
Allocate cursors for Current, Queue, and Distinct.
Allocate cursors for the pTab table and all its indices and generate code to open and initialized those cursors.
Allocate cursors numbers for Queue and Distinct.
Allocate directly 256 because it's easier to allocate a bit more than update max length even for text columns.
Allocate enough memory so that even if each character is quoted, we won't run out of room
Allocate exact page if possible
Allocate heap space to hold an Index object with nCol columns.
Allocate k new pages.
Allocate match sets array and initialize the values.
Allocate memory block
Allocate memory for it
Allocate memory for the Pager structure, PCache object, the three file descriptors, the database file name and the journal  file name.
Allocate memory for the destination buffer (it will be zero-terminated).
Allocate memory for the destination buffer for normalization
Allocate memory for the iterator
Allocate memory for the new iterator
Allocate memory for the ping
Allocate memory for the regex stack on the real machine stack.
Allocate memory from the gap in between the cell pointer array and the cell content area.
Allocate memory that is to be used and released right away.
Allocate memory, either lookaside (if possible) or heap.
Allocate nArg registers to martial the arguments to VUpdate.
Allocate nByte bytes of memory using sqlite3_malloc().
Allocate nByte bytes of memory.
Allocate nByte bytes of space from within the B-Tree page passed as the first argument.
Allocate nByte bytes of space using sqlite3Malloc().
Allocate nByte bytes of space using sqlite3_malloc().
Allocate nBytes of memory.
Allocate new Fts5HashEntry and add it to the hash table.
Allocate new SessionTable object.
Allocate or deallocate a block of nReg consecutive registers
Allocate or deallocate a block of nReg consecutive registers.
Allocate or grow the PendingList as required.
Allocate or return the aggregate context for a user function.
Allocate python arrays to return.
Allocate readers for this expression
Allocate registers for holding the rowid of the new row, the content of the new row, and the assembled row record.
Allocate registers for holding the rowid of the new row, the content of the new row, and the assemblied row record.
Allocate required output space
Allocate required registers.
Allocate sessionpool out of persistent memory
Allocate shared memory
Allocate space for a file-handle and open a temporary file.
Allocate space for a new decomposition.
Allocate space for a new sqlite3_backup object...
Allocate space for both the pJournal and pMaster file descriptors.
Allocate space for memory registers, SQL variables, VDBE cursors and  an array to marshal SQL function arguments in.
Allocate space for memory structures
Allocate space for storing pointers to input arrays and sort flags.
Allocate space for the WalIterator object.
Allocate space for the conch filename and initialize the name to the name of the original database file.
Allocate space for the cursor, filter and writer objects
Allocate space for the new multi-seg-iterator.
Allocate space for the new sqlite3_shm object.
Allocate space for the new unixShm object.
Allocate space for the output.
Allocate space for the previous row
Allocate space for the result objects.
Allocate space from a fixed size buffer and return a pointer to that space.
Allocate space to hold a new trigger step.
Allocate space to hold the change in document sizes
Allocate stack for the callback, which grows the stack.
Allocate storage for the temporary storage mval.
Allocate sufficient memory to store pointers to all dimension names
Allocate temporary space used by the merge-sort routine.
Allocate temporary storage.
Allocate temporary working space.
Allocate that sorting index now.
Allocate the Bitvec to be tested and a linear array of bits to act as the reference
Allocate the Fts5Bm25Data object
Allocate the Input buffer front-end.
Allocate the JPEG palette-storage
Allocate the Output buffer front-end.
Allocate the SegmentWriter structure
Allocate the TriggerPrg and SubProgram objects.
Allocate the array for the result.
Allocate the array of TermOffset iterators.
Allocate the buffers used by this operation.
Allocate the buffers.
Allocate the change object
Allocate the data and populate it
Allocate the data for the casting
Allocate the data for the copy swap
Allocate the data, and populate it
Allocate the destination buffer
Allocate the hash table if it has not already been allocated
Allocate the histogram/inverse colormap storage
Allocate the index structure.
Allocate the iterator
Allocate the iterator.
Allocate the machine stack for the timer thread at least 16KB (4 pages).
Allocate the memory for the dates
Allocate the mutex and register the new VFS (not as the default)
Allocate the new vtab object and parse the configuration
Allocate the output array
Allocate the output buffer --- it will be released when done with image
Allocate the output for when there's no outer iterator
Allocate the output of the boolean indexing
Allocate the parsing context
Allocate the pool handle
Allocate the result as a 2D array
Allocate the result now as it is needed for the reading of metadata
Allocate the result set array
Allocate the session pool error handle - This only for use in the destructor, as there is a generic bug which can free up the OCI_G(err) variable before destroying connections.
Allocate the space required for the Stat4Accum object
Allocate the sqlite data structure
Allocate the sqlite3_index_info structure
Allocate the sqlite3_value object using valueNew().
Allocate the sqlite3_vtab structure
Allocate the string memory.
Allocate the temporary array
Allocate the temporary array, if possible
Allocate thread-local storage slot for g.
Allocate working memory for whole recursion at once.
Allocate working variables
Allocate workspace for box list
Allocated but not connected or there was failure when trying to connect with pre-allocated connect.
Allocated enough for 2-characters per itemsize.
Allocated index object
Allocated size for registers must be divisible by 8.
Allocated size of aVTrans
Allocated size of apCell, szCell, aFrom.
Allocated size of buffer z in bytes
Allocated size of buffer zOut
Allocated size of zTerm buffer
Allocated space not yet assigned
Allocated stack size.
Allocates +size+ bytes of free space in the output buffer.
Allocates Vp constants.
Allocates a linked list node in deptbl holding the given value, and returns the slot number where it was stored.
Allocates a result array for a reduction operation, with dimensions matching 'arr' except set to 1 with 0 stride wherever axis_flags is True.
Allocates a struct RClass for a new class.
Allocates a temporary array which can be used to replace op in the iteration.
Allocates all the resources needed, establishes the connection and returns the result handle (or NULL)
Allocates an ocaml value in the shared heap.
Allocates in the shared heap.
Allocates the necessary number of zval slots to keep the rope
Allocating database file space in large chunks (say 1MB at a time), may reduce file-system fragmentation and improve performance on some systems.
Allocating stack, returns with PCRE_ERROR_JIT_STACKLIMIT if fails.
Allocation granularity on Windows is typically 64 KB.
Allocation inside RUNs implemented using linked list of free elements.
Allocator for "lage sizes" may easily find a free page (or a continuous number of pages) searching for zero bits.
Allow NaT (not-a-time) values to slip through any rule
Allow PHP 5.3 branch to be used in PECL for 5.x compatible builds
Allow a quick return when the thread is interrupted
Allow any zero-sized output array in this case
Allow anything with unsafe casting
Allow digits after R to specify a specific group number.
Allow escaping of  ``relations''
Allow for transparency
Allow infinity precision
Allow the BOM mark to start a line.
Allow the base to be set only once.
Allow this parameter to be None
Allow unicode format strings: convert to bytes
Allow unicode type strings
Allowable strides are 1 and -1.
Allowed equality operators
Allowed flags for the 2nd argument to sqlite3BtreeDelete()
Allowed flags for the 3rd parameter to sqlite3FindInIndex().
Allowed return values from sqlite3FindInIndex()
Allowed return values from sqlite3WhereIsDistinct()
Allowed values for BtShared.btsFlags
Allowed values for Column.colFlags:
Allowed values for Index.idxType
Allowed values for RowSet.rsFlags
Allowed values for Select.selFlags.
Allowed values for Table.tabFlags.
Allowed values for et_info.flags
Allowed values for second argument to pcacheManageDirtyList()
Allowed values for sqlite3_rtree_query.eWithin and .eParentWithin.
Allowed values for sqlite3_userauth.authLevel
Allowed values for the NameContext, ncFlags field.
Allowed values for the eMode parameter to vdbeMergeEngineInit() and vdbePmaReaderIncrMergeInit().
Allowed values for the flags parameter to sqlite3PagerOpen().
Allowed values for the unixFile.ctrlFlags bitmask:
Allowed values for winFile.ctrlFlags
Allowed values of VdbeOp.p4type
Allowed values of WhereTerm.wtFlags
Allowed values of unixFile.fsFlags
Allows a specific function inner loop to be selected
Allows the default output layout to be overridden
Allows us to safely look ahead an arbitrary # of letters
Almost the same as in php_fstat.
Almost the same as in php_if_fstat.
Alpha blending should result in compositing against red.
Alphabetic SQL variables
Already detected repeat.
Already know there are no Implicit Result Sets
Already setup for this key.
Already thrown the error if VDBE alloc failed
Also NDIG must be reasonable smaller than NUM_BUF_SIZE.
Also add a UTF-8 case-insensitive collation sequence.
Also add explicit collations to the ORDER BY clause terms so that when the subqueries to the right and the left are evaluated, they use the correct collation.
Also all getXY() methods are final because thy serve as read only access to their corresponding properties, no more, no less.
Also allocate a cursor number to use for scanning indexes (iIdxCur).
Also allow casting from lower to higher kinds, according to the ordering provided by dtype_kind_to_ordering.
Also append a value to the dlidx buffer, in case a doclist-index is required.
Also available as the operator **.
Also called as a fallback from fts5IterSetOutputs_Col100 if the column-list spans more than one page.
Also called associative arrays, they are similar to Arrays, but where an Array uses integers as its index, a Hash allows you to use any object type.
Also check that if there is also a rowid pointer within the leaf page header, it points to a location before the term.
Also check that the page number is in bounds.
Also consider the unlikely of possibility of a write block
Also contains the offset of control head.
Also could attempt to avoid copying the contents of the rowid register.
Also destination_buffer's encoding is set to destination_encoding.
Also do block compression with an adaptive reset, whereby the code table is cleared when the compression ratio decreases, but after the table fills.
Also fills in the ITERSIZE data member.
Also find a unique index  on the parent key columns in the parent table.
Also find the column index for each column to be updated in the pChanges array.
Also fix the pointer map entry for iPtrPage.
Also free the UnpackedRecord structure itself, using sqlite3DbFree().
Also free the page if freePage is true.
Also fsync the directory containing the file if the DIRSYNC flag is set.
Also initialize regReturn to contain the address of the instruction  immediately following the OP_Return at the bottom of the loop.
Also invoked by QhullQh().
Also locate the cells in pParent  that divide the siblings.
Also lowercases them.
Also make a copy of the expression results into another "cache" register and modify the expression so that the next time it is evaluated, the result is a copy of the cache register.
Also move the environment to make additional room.
Also mutex, for redundancy
Also not an assert for the same reason
Also note that entries are collated in alphabetic order on key.
Also obtain sufficient space (in zMasterPtr) to hold the names of master journal files extracted from regular rollback-journals.
Also propagate EP_Propagate flags up from Expr.x.pList to Expr.flags, if appropriate.
Also propagate all EP_Propagate flags from the Expr.x.pList into Expr.flags.
Also qh_qhstat in stat.c and qhmem in mem.c.
Also release any dynamic memory held by the VM in the Vdbe.aMem memory  cell array.
Also reset the TEMP schema.
Also return true if the function has no arguments or has only constant arguments.
Also returns true if _obj_ and _other_ are the same object.
Also run this branch if NULL is equivalent to FALSE for this particular IN operator.
Also see Kernel#throw for an alternative mechanism for unwinding a call stack.
Also see the library module Date.
Also separate the UCP code, which can be the same for both UTF-8 and single-bytes.
Also set define macro SQLITE_MALLOCSIZE to the appropriate function name, which is _msize() for MSVC and malloc_usable_size() for most other systems (e.g. Linux).
Also set iSysErrno (by calling sqlite3System) if the err_code indicates that would be appropriate.
Also set local pTab to a copy of p4.pTab.
Also set our internal flag for RDONLY.
Also sorry to break the enum principles here, BC...
Also speculatively allocate space for a new winShmNode and filename.
Also store the SQLite version number in bytes 96..99 and in bytes 92..95 store the change counter for which the version number is valid.
Also takes a void *user_data, and void **old_data.
Also that if there is no open transaction, then there cannot be any savepoints.
Also the Fts3Expr.bDeferred variable is set to true for any expressions for which all descendent tokens are deferred.
Also the initial delay before the first retry.
Also try to estimate the size of the returned value and return that result in *pEstWidth.
Also update the corresponding structure record.
Also use a  temp table in the case of row triggers.
Also use trailing slash if this is absolute
Also used by Apple systems if SQLITE_WITHOUT_ZONEMALLOC is defined.
Also used in P2 (not P5) of OP_Delete
Also we'd have to make that one argument passed by reference.
Also write an error message into memory obtained from malloc() and make *pzErrMsg point to that message.
Also write code to modify the sqlite_master table and internal schema if a root-page of another table is moved by the btree-layer whilst erasing iTable (this can happen with an auto-vacuum database).
Also, *ppMinMax is set to point to the  list of arguments passed to the aggregate before returning.
Also, +opt+ can have same keys in String#encode for controlling conversion between the external encoding and the internal encoding.
Also, N1 is assumed to be larger than N2.
Also, a boolean flag that, if set to true, causes the statement to update a row even if the non-PK values do not match.
Also, all characters are able to participate in upper-case-to-lower-case mappings in EBCDIC whereas only characters less than 0x80 do in ASCII.
Also, check that the index uses the default collation sequences for each column.
Also, collation destructor - CollSeq.xDel() - function may need to be called.
Also, do not write out any page that has the PGHDR_DONT_WRITE flag set (set by sqlite3PagerDontWrite()).
Also, do permutations in line
Also, each component of the sub-query must return the same number of result columns.
Also, given xmlrpc-epi API/architecture, it's likely that we don't have a methodname for the response, so we have to check that.
Also, if bOmitRowid is true and key1 contains even a single NULL value, it is considered to be less than key2.
Also, if pPage contains cells that point to overflow pages, set the pointer map entries for the overflow pages as well.
Also, if required, register the rbu_delta() implementation.
Also, if the PGHDR_NEED_SYNC flag was set for  page pgno before the 'move' operation, it needs to be retained  for the page moved there.
Also, if the requested dtype doesn't modify the interpretation of the input, out_dtype will still get the "innate" dtype of the object, not the dtype passed in 'requested_dtype'.
Also, if there are more than MIN_EXPONENT_DIGITS, remove as many zeros as possible until we get back to MIN_EXPONENT_DIGITS
Also, if this is a top-level parse (not a trigger), clear the multi-write flag so that the VM does not open a statement journal
Also, it always expected to obtain an exclusive lock.
Also, it can be specified to clear environment variables.
Also, it is possible/likely that optimizations to things like doclist merging will swing the sweet spot around.
Also, on reads, we may get this condition on an EOF.
Also, provde the Utf8Read() macro for fast reading of the next character in the common case where the next character is ASCII.
Also, separate the inner loop flags.
Also, set the cursor state to invalid.
Also, several symbols are accepted as +clock_id+.
Also, since both the master and memsys locks are currently being held by us, no other function (i.e. from another thread) should be able to even access the heap.
Also, since we always handle byte order conversions, this array should have native byte order.
Also, the _USE_32BIT_TIME_T macro must appear first for MinGW.
Also, the appearance of .* inside atomic brackets or in a pattern that contains *PRUNE or *SKIP does not count, because once again the assumption no longer holds.
Also, the beginning of a year varied from one culture to another - not all accepted January as the first month.
Also, the file may not have been opened yet, in which case the OsSectorSize() call will segfault.
Also, the format is bit different.
Also, the hard timeout needs to be respected.
Also, the remote side can request SSL renegotiation which forces the local SSL engine to write some data.
Also, the sqlite3.dfltLockMode variable is set so that any subsequently attached databases also use the specified locking mode.
Also, this function is implemented using reference counting.
Also, today's epoch, 1 A.D.
Also, unset the offsets for the matched string.
Also, unsetting a close-on-exec flag can cause file descriptor leak if another thread use fork() and exec() (via system() method for example).
Also, uses intelligent string handling, so not many strlen() calls, etc.
Also, when compiling for Virtual Pascal, things are done differently, and global variables are not used.
Also, whether or not P4 is set, check that this is not being called from within a callback to a virtual table xSync() method.
Also:  Provide four bytes of initialized space before the beginning of pTmpSpace as an area available to prepend the left-child pointer to the beginning of a cell.
AltB, AeqB, and AgtB jump to either L2 or to one of EofA or EofB.
Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
Alternate addrEofA if B is uninitialized
Alternately, it could walk the entire vector, but that could be quite slow for very large lists.
Alternative compound select code generator for cases when there is an ORDER BY clause.
Alternative data destination
Alternative datatype for the argument to the malloc() routine passed into sqlite3ParserAlloc().
Alternative implementations use flock(), dot-files, various proprietary locking schemas, or simply skip locking all together.
Alternatively, if a block is given it will only be executed when an invalid +index+ is referenced.
Alternatively, if bExtend is true, extend the file.
Alternatively, if isWrite is non-zero, use ftruncate() to allocate the requested memory region.
Alternatively, if maximizing, find the maximum number of characters and work backwards.
Although libicu offers iterator functions, they are not used here: libicu does iterate irrespective of array indices.
Although some clever things could be done here, "NOT IMM" does not worth the efforts.
Although the IV can be seen as public information, i.e. it may be transmitted in public once generated, it should still stay unpredictable to prevent certain kinds of attacks.
Although the NaCl toolchain contain eaccess() is it not yet overridden by nacl_io.
Although the instance methods of Object are defined by the Kernel module, we have chosen to document them here for clarity.
Although the maximum base in general in GMP is 62, mpz_get_str() is explicitly limited to -36 when dealing with negative bases.
Although the value is, strictly, in characters, we treat it as bytes to avoid spending too much time in this optimization.
Although there is Cipher#pkcs5_keyivgen, its use is deprecated and it should only be used in legacy applications because it does not use the newer PKCS#5 v2 algorithms.
Although this software can handle dates all the way back to 4713 B.C., such use may not be meaningful.
Although this software can handle dates all the way back to 4714 B.C., such use may not be meaningful.
Always RTREE_GEOMETRY_MAGIC
Always a simple operation.
Always add a new error instead.
Always call this function at some point before writing to an array.
Always cast the getpid() return type for compatibility with kernel modules in VxWorks.
Always check coplanar facets.
Always consume at least one character of the input string
Always consume at least one character of the input string in order to prevent infinite loops.
Always defragment highly fragmented pages
Always exactly one alternative.
Always extract the argument as a "char *" pointer.
Always fail if reference not set (and not JavaScript compatible - in that case the length is passed as zero).
Always follow with :N where N is the number of bits.
Always leave the database loaded
Always make a positive stride
Always make a positive stride for the first operand
Always map the code to itself.
Always null terminated
Always perform external lookups of sessions even if they are in the internal cache.
Always place pi if one predecessor (an if branch)
Always put directories on top
Always raises a TypeError.
Always restore the mark setting
Always return the value of the BTS_SECURE_DELETE setting after the change.
Always returns arrays
Always set in non-unicode case.
Always set the minlength value in the block, because the JIT compiler makes use of it.
Always set to avoid warning
Always so because of CursorMoveto() above
Always the first entry
Always update both, as its not trivial to guess one from the other
Always update the timestamp on the old file
Among the supported message digest algorithms are: SHA, SHA1, SHA224, SHA256, SHA384 and SHA512 MD2, MD4, MDC2 and MD5 RIPEMD160 DSS, DSS1 (Pseudo algorithms to be used for DSA signatures.
Amount of contiguous space which would be required to satisfy the maximum stack demand to date.
Amount of payload held locally
Amount of payload held locally, not on overflow
Amount of space allocated in zText
Amount of usable space on each page
Amount to increment deferred counter by
Amount to pop the stack
An  SQLITE_IOERR_XXX error code is returned if a call to sqlite3OsOpen()  fails.
An "etByte" is an 8-bit unsigned value.
An '*' is returned if the user cannot log in using a password.
An +EOFError+ is raised at the end of the file.
An +Integer+ object is passed as an integer whose bit size is same as a pointer.
An ACCEPT is effectively an ALT.
An Array of extra X509 certificates to be added to the certificate chain.
An EBADF error means that the shared library has not opened the descriptor yet.
An EXCLUSIVE lock may still be held on the database file  after a successful return.
An EXCLUSIVE lock, obtained after a PENDING lock is held, is implemented by obtaining a write-lock on the entire 'shared byte range'.
An EXCLUSIVE or greater lock is held on the database file.
An EXCLUSIVE_LOCK is obtained by locking all bytes in the range.
An Encoding instance represents a character encoding usable in Ruby.
An EngineError is raised of the OpenSSL::PKey is unavailable.
An Enumerable of Strings.
An Enumerator can be created by the following methods.
An Enumerator is returned if no block is given.
An Enumerator is returned if no block was given.
An Explain object accumulates indented output which is helpful in describing recursive data structures.
An FTS3_EVAL_XX constant
An FTS5_CONTENT value
An Fts3MultiSegReader uses multiple Fts3SegReader objects internally to provide an interface to seek or scan within the union of all segments of a b-tree.
An Fts3SegReader object is a cursor that can seek or scan a range of entries within a single segment b-tree.
An I/O method finder function called FINDER that returns a pointer to the METHOD object in the previous bullet.
An INDEXED BY clause specifies a particular index to use
An INSERT change contains the values of each field of a new database row.
An INTEGER PRIMARY KEY is used as the rowid for each row of the table.
An IPv6 enclosed by square brackets is a valid hostname
An IndexError is raised if a negative index points past the beginning of the array.
An OE_ code for handling a NOT NULL constraint
An OOM - finalize() below returns S_NOMEM
An OP_Column to retrieve this imaginary column will always return an SQL NULL.
An OR-ed combination of these values can be used when searching for particular WhereTerms within a WhereClause.
An ORDER BY (or GROUP BY) clause, or NULL
An ORDER BY or GROUP BY clause to resolve
An ORDER/GROUP BY clause of more than 63 terms cannot be optimized
An ORed combination of these flags appear as the first byte of on-disk image of every BTree page.
An OpenSSL::OCSP::BasicResponse contains the status of a certificate check which is created from an OpenSSL::OCSP::Request.
An OpenSSL::OCSP::CertificateId identifies a certificate to the CA so that a status check can be performed.
An OpenSSL::OCSP::Request contains the certificate information for determining if a certificate has been revoked or not.
An OpenSSL::OCSP::Response contains the status of a certificate check which is created from an OpenSSL::OCSP::Request.
An OpenSSL::OCSP::SingleResponse represents an OCSP SingleResponse structure, which contains the basic information of the status of the certificate.
An OpenSSL::X509::Store used for certificate verification.
An RBU target database may not be in wal mode already.
An RBU update is divided into two stages:  Stage 1, in which changes are accumulated in an oal/wal file, and Stage 2, in which the contents of the wal file are copied into the main database.
An RBU vacuum is similar to SQLite's built-in VACUUM command, except that it can be suspended and resumed like an RBU update.
An SQL NULL is  equivalent to an empty rowset.
An SQL parser context.
An SQL statement being run
An SQL table corresponding to zName
An SQL user-function registered to do the work of an ATTACH statement.
An SQL user-function registered to do the work of an DETACH statement.
An SQLITE_ status code is returned.
An SQLITE_MISUSE error occurred
An SQLITE_NOMEM error.
An SQLite error code is returned if an error occurs, or SQLITE_OK otherwise.
An SQLite error code is returned if an error occurs.
An SSLContext is used to set up an SSL session.
An UPDATE change contains the original values of each field of an updated database row along with the updated values for each updated non-primary-key column.
An UPDATE statement against pTab is currently being processed.
An abstract type for a pointer to a IO method finder function:
An abstract type for a pointer to an IO method finder function:
An additional grant of patent rights can be found in the PATENTS file in the same directory.
An additional method that can be provided by data source modules is the resync_to_restart method for error recovery in the presence of RST markers.
An aggregate function in the WHERE clause of a query means this must be a correlated sub-query, and expression pExpr is an aggregate from the parent context.
An aligned memory buffer large enough to hold any type
An anchor or an alias could be a simple key.
An another thread is processing GVL yield.
An appropriate implementation is selected automatically at compile-time.
An array assignment function for copying arrays, broadcasting 'src' into 'dst'.
An array has only index values.
An array of names of all compile-time options.
An array of root pages numbers for individual trees
An array of sets of matches for each subpattern after a global match
An array of strings of abbreviated day names in English.
An array of strings of abbreviated month names in English.
An array of strings of full month names in English.
An array of strings of the full names of days of the week in English.
An array of the following structures is assembled as part of the process of selecting tokens to defer before the query starts executing (as part of the xFilter() method).
An array to hold ranges for combining classes.
An array to map all upper-case characters into their corresponding lower-case character.
An ascii-range separator character.
An assert() will fail if a problem is detected.
An assertion fails if P2 is not an integer.
An assertion fails if the two counts do not match.
An assertion fault will occur if a file is updated without also updating the transaction counter.
An assertion fault will result if you try.
An assertion will fail if that is attempted.
An associated data is used where there is additional information, such as headers or some metadata, that must be also authenticated but not necessarily need to be encrypted.
An attempt is made  to coerce both inputs according to this affinity before the comparison is made.
An attempt is made store the result in iTarget but this is only guaranteed for TK_ISNULL and TK_IN constraints.
An attempt is made to find NN siblings on  either side of pPage.
An attempt to access them will result in a segfault or malfunction.
An attempt to read a column out of a subquery or other temporary table.
An attempt to set a limit smaller than -1 is a no-op.
An automatic index created by a PRIMARY KEY or UNIQUE constraint
An effort is made to store the column value in register iReg, but this is not guaranteed.
An effort is made to store the column value in register iReg.
An element of the array is an instance of Socket::Ifaddr.
An empty option name.
An empty string will also be returned when the period is the last character in +path+.
An engine for executing database bytecode
An entry in the input array
An ephemeral string value (signified by the MEM_Ephem flag) contains a pointer to a dynamically allocated string where some other entity is responsible for deallocating that string.
An eponymous virtual table instance is one that is named after its module, and more importantly, does not require a CREATE VIRTUAL TABLE statement in order to come into existance.
An error code is returned if something goes wrong, otherwise SQLITE_OK.
An error code is returned.
An error code will be returned in this case.
An error has occurred.
An error is returned if "offset+amt" is larger than the available payload.
An error message is left in pParse if anything is amiss.
An error occurs while attempting a rollback.
An error occurs while attempting to finalize a journal file following a commit in function sqlite3PagerCommitPhaseTwo().
An error occurs while attempting to write to the journal or database file in function pagerStress() in order to free up memory.
An example application might be a web browser that has its own databases for storing history and separate databases controlled by JavaScript applications downloaded off the Internet.
An example of non-essential memory is memory used to cache database pages that are not currently in use.
An example of this is 'echo', which is a built-in on Windows, but is a normal program on Linux and Mac OS X.
An example of where this might be useful is in a regular-expression matching function.
An example use for this interface is to keep a GUI updated during a large query.
An example using the GCM (Galois/Counter Mode).
An excellent reference on the underlying algorithm (and related algorithms) is:  B.
An exception is an INSERT statement that inserts a single row only (no triggers).
An exception is when the trigger is in TEMP in which case it can refer to any other database it wants.
An exception to the above rule: If the database is in no-sync mode and a page is moved during an incremental vacuum then the page may not be in the pager cache.
An exception was thrown in the lexer, don't throw another in the parser.
An exclusive process lock is held
An existing WhereLoop entry might be overwritten if the new template is better and has fewer dependencies.
An existing page in the cache
An expired statement fails with an error code of SQLITE_SCHEMA if it is ever executed  (via sqlite3_step()).
An expired statement means that recompilation of the statement is recommend.
An explicit document:  --- 'a scalar' ...
An exponent is allowed.
An exponent is not allowed until there has been at least one digit.
An expression being tested
An expression from the ON clause of a LEFT JOIN can use its Expr.iRightJoinTable value to find the bitmask of the right table of the join.
An expression from the ORDER BY clause
An expression is unsuitable if it might evaluate to non NULL even if a TK_COLUMN node that does affect the value of the expression is set to NULL.
An expression of the form ID or ID.ID refers to a column in a table.
An expression representing a value which is "not a number".
An expression representing positive infinity.
An expression with no children, Expr.pList or  Expr.pSelect member has a height of 1.
An extension does not necessarily have a version number
An extra 18  bytes of padding is allocated at the end of the buffer in case this happens.
An implementation of a min-heap.
An implementation of the LIKE operator that uses ICU to  provide case-independent matching.
An implementation of the LockFile() API of Windows for CE
An implementation of the UnlockFile API of Windows for CE
An implicit document:  'a scalar'  Tokens:  STREAM-START(utf-8) SCALAR("a scalar",single-quoted) STREAM-END  2.
An implied index of the table
An imposter table is required in all cases except RBU_PK_VTAB.
An in-memory database is the same as a temp-file that is never written out to disk and uses an in-memory rollback journal.
An in-memory journal file should only ever be appended to.
An in-memory list of objects to be sorted.
An index associated with pTab
An index being inserted or updated
An index covering an expression means that the expression can be evaluated using only the index and without having to lookup the corresponding table entry.
An index has an arbitrary key but no data.
An index of 13 (for the "extra" days at the end of the year) will return the string "Extra".
An index of zero will return a zero length string.
An index to being analyzed
An index we are evaluating
An input number that is greater than this value, if followed by a legal input character, is too big.
An instance of struct TriggerStep is used to store a single SQL statement that is a part of a trigger-program.
An instance of the BtreePayload object describes the content of a single entry in either an index or table btree.
An instance of the TreeView object is used for printing the content of data structures on sqlite3DebugPrintf() using a tree-like view.
An instance of the WhereScan object is used as an iterator for locating terms in the WHERE clause that are useful to the query planner.
An instance of the following data structure is used to build doclists incrementally.
An instance of the following object is used to read records out of a PMA, in sorted order.
An instance of the following object is used to record information about how to process the DISTINCT keyword, to simplify passing that information into the selectInnerLoop() routine.
An instance of the following object is used to record information about the ORDER BY (or GROUP BY) clause of query is being coded.
An instance of the following object records the location of each unused scratch buffer.
An instance of the following structure can be declared on a stack and used to save the Parse.zAuthContext value so that it can be restored later.
An instance of the following structure contains all information needed to generate code for a single SELECT statement.
An instance of the following structure describes the event of a TRIGGER.
An instance of the following structure encodes all information that can be gleaned from the CREATE VIRTUAL TABLE statement.
An instance of the following structure holds all information about a WHERE clause.
An instance of the following structure holds information about SQL functions arguments that are the parameters to the printf() function.
An instance of the following structure holds information about a single index record that has already been parsed out into individual values.
An instance of the following structure holds the context of a sum() or avg() aggregate computation.
An instance of the following structure is allocated for each active savepoint and statement transaction in the system.
An instance of the following structure is allocated for each open inode.
An instance of the following structure is passed as the first argument to sqlite3VdbeKeyCompare and is used to control the  comparison of the two index keys.
An instance of the following structure is passed as the first argument to sqlite3VdbeKeyCompare and is used to control the comparison of the two index keys.
An instance of the following structure is used as a dynamic buffer to build up nodes or other blobs of data in.
An instance of the following structure is used to accumulate those values while the functions are running.
An instance of the following structure is used to hold information about a cell.
An instance of the following structure is used to store the busy-handler callback for a given sqlite handle.
An instance of the following structure keeps track of a mapping between VDBE cursor numbers and bits of the bitmasks in WhereTerm.
An instance of the following structure represents a single search term or term prefix.
An instance of the following structure serves as the key used to locate a particular unixInodeInfo object.
An instance of the following structure stores a database schema.
An instance of the following type is used to iterate through the contents of a doclist-index record.
An instance of the virtual machine.
An instance of this function is used to merge together the (potentially large number of) doclists for each term that matches a prefix query.
An instance of this object describes bulk memory available for use by subcomponents of a prepared statement.
An instance of this object describes where to put of the results of a SELECT statement.
An instance of this object holds the complete state of the query planner.
An instance of this object is used for writing a PMA.
An instance of this object represents a JSON string under construction.
An instance of this object represents a single database file.
An instance of this object serves as a "key" for doing a search on an index b+tree.
An instance of this object serves as a cursor into the rollback journal.
An instance of this structure contains information needed to generate code for a SELECT that contains aggregate functions.
An instance of this structure holds information about the LIMIT clause of a SELECT statement.
An instance of this structure holds the ATTACH key and the key type.
An instance of this structure is returned by the first half and passed into the second half to give some continuity.
An instance of this structure is used by the parser to record both the parse tree for an expression and the span of input text for an expression.
An instance of this structure is used to create a segment b-tree in the database.
An instance of this structure is used to iterate through the terms on a contiguous set of segment b-tree leaf nodes.
An instance of this structure is used to manage a pair of buffers, each (nElem * sizeof(u32)) bytes in size.
An instance of this structure is used to organize the stream of records being written to files by the merge-sort code into aligned, page-sized blocks.
An instance of this structure is used to store the LIKE, GLOB, NOT LIKE, and NOT GLOB operators.
An instance of this structure represents a set of one or more CTEs (common table expressions) created by a single WITH clause.
An integer is written into *pRes which is the result of comparing the key with the entry to which the cursor is  pointing.
An integer primary key.
An interior node encodes n terms separating n+1 subtrees.
An internal mutex is held for a protected sqlite3_value object but no mutex is held for an unprotected sqlite3_value object.
An invalid journal file cannot be rolled back.
An iterative, worklist driven approach would be possible, but the state management more cumbersome to implement, so we don't bother for now.
An iterator is constructed and adjusted to walk over all but the desired sorting axis.
An iterator of this type is used to iterate through all objects in the target database that require updating.
An non-ascii-range character.
An object of the following type is used to read data from a single FTS segment node.
An object of this type contains the state required to create or append to an appendable b-tree segment.
An object of this type is created for each virtual table present in the database schema.
An object of this type is used internally as an abstraction for  input data.
An object of type Fts5SegWriter is used to write to segments.
An object pointed from an OLD object should be OLD.
An object representation of a stack frame, initialized by Kernel#caller_locations.
An objected used to accumulate the text of a string where we do not necessarily know how big the string will be in the end.
An obsolete alias of +false+
An obsolete alias of +nil+
An obsolete alias of +true+
An old Linux may return EINTR.
An older segment is considered larger.
An open page cache is an instance of struct Pager.
An open write-ahead log file is represented by an instance of the following object.
An operand of a comparison operator
An optimisation would be to use a non-journaled pager.
An option value of 1 removes vertical space and 2 removes underscore.
An optional argument the day of calendar reform (start) as a Julian day number, which should be 2298874 to 2426355 or -/+oo.
An ordinary table or view name in the FROM clause
An output_buf parameter is required by the method signature, but no data is actually output (in fact the buffer controller is probably passing a NULL pointer).
An oversized q is possible when quorem is called from bigcomp and
An rbu VFS is implemented using an instance of this structure.
An rtree cursor object.
An rtree structure node.
An rtree virtual-table object.
An sp-back edge: mark as irreducible.
An sqlite3_value object may be either "protected" or "unprotected".
An tokenizer for SQL  This file contains C code that implements the sqlite3_complete() API.
An tokenizer for SQL  This file contains C code that splits an SQL input string up into individual tokens and sends those tokens one-by-one over to the parser for analysis.
An unconstrained column that might be NULL means that this WhereLoop is not well-ordered
An undefined collation sequence exists when a database is loaded that contains references to collation sequences that have not been defined by sqlite3_create_collation() etc.
An unrecognized directive.
An unused file descriptor
Analogous to the ampersand operator in C.
Analogous to the star operator in C.
Analyze a term that consists of two or more OR-connected subterms.
Analyze a term that is composed of two or more subterms connected by an OR operator.
Analyze all of the subexpressions.
Analyze the ORDER BY clause in a compound SELECT statement.
Analyze the list of expressions that form the terms of the index and report any errors.
Analyze the min-heap looking for overlap between cells and/or  freeblocks, and counting the number of untracked bytes in nFrag.
Analyze the right-child page of internal pages
And *pabPK (again, if not NULL) is set to point to an array of booleans - true if the corresponding column is part of the primary key.
And *pnToken is set to the number of tokens in pPhrase.
And DIFR(I, 2) is the normalizing factor for the I-th right singular vector.
And RBU is not currently syncing the directory after renaming the file.
And SQLITE_FUNC_CONSTANT must be the same as SQLITE_DETERMINISTIC.
And XOR with the next 8 characters of the key.
And a length of the server scramble in one byte
And a power loss in between deleting the original and renaming the transient would cause the database file to appear to be deleted following reboot.
And add it to the output array
And all other dimensions are shifted left.
And also all headers.
And an in-memory journal.
And as sub-transactions are opened/closed:  xSavepoint(int S):  Open savepoint S.
And asserting PSOW makes a large reduction in the amount of required I/O for journaling, since a lot of padding is eliminated.
And because indices might  exist on the table t1, a complete scan of the data might be avoided.
And call its entry point to enable the matchinfo() demo.
And carry flag as well.
And check that its depth does not exceed SQLITE_FTS3_MAX_EXPR_DEPTH.
And discarded whenever xRollback() or xRollbackTo()  is called.
And do not RELEASE the statement transaction.
And do not close the OP_OpenWrite cursors created for the ONEPASS optimization.
And each index consists of multiple levels ("relative levels").
And equality constraints on the hidden "languageid" column.
And few applications need more than about 10 or 20 variables.
And for all other operations, we let things continue as normal.
And for both UPDATEs and DELETEs all fields are collected.
And for every TABLE.* insert the names of all columns in TABLE.
And for the sessions module, an  SQLITE_UPDATE where the PK columns do not change is handled in the  same way as an SQLITE_DELETE (the SQLITE_DELETE code is actually slightly more efficient).
And fortunately, for almost all special functions, the end result of this was a TypeError.
And generally no non-ascii chars
And give priority to built-in functions.
And if  alpha.eq.zero.
And if I'm about to cross a zone, I'll make the direction of the edge I'm sitting on be such that the zone I'm crossing is to its left.
And if an IO error occurs while doing so, then corruption may follow.
And if function succeeds, *pcur reaches end marker.
And if iSet is -1, assume that there is no  need to insert the key into the temp table, as it will never  be tested for.
And if that is the case, there is no point in having more than a few dozen values in any of the other situations described above.
And if the journal-mode is "OFF", the journal file must not be open.
And if this overflow cell is present, it must be the cell with  index iParentIdx.
And if we were originally supposed to be blocking, let's reset the socket to that.
And instead of referencing the variable directly, we use its constant as a key to lookup the run-time allocated buffer that holds real variable.
And it is very important that btreeInitPage() be called on every btree page so we make the call for every page that comes in for re-initing.
And lower the cost estimate to encourage the constrained version to be used.
And make sure list length does not exceed SQLITE_LIMIT_COMPOUND_SELECT.
And many do not understand the "LL" notation.
And never reduce the maximum page count below the current size of the database.
And never try to change the state of exceptions and never implement anything that gives the user anything to accomplish this.
And no memory allocations are required.
And none of the simple select queries that make up the compound SELECT are allowed to be aggregate or distinct queries.
And now, just to make sure things don't run too fast.
And of course this will affect backup programs
And other similarly odd results.
And page 1 is never written to the log until the transaction is committed.
And set the Expr.iRightJoinTable to iTable for every term in the expression.
And set-up for the last transform:
And sets external encoding to ASCII-8BIT unless explicitly specified.
And since AFP is only supported on MacOSX, the proxy locking is also restricted to MacOSX.
And since it can be determined whether the year is a leap year by simple division, the lengths of Adar I and II can be easily calculated.
And since the statement required here reads from this very virtual  table, saving it creates a circular reference.
And so forth until the length of WherePaths equals the number of nodes in the FROM clause.
And so long as the db is not a  temporary or in-memory database.
And so on up the tree.
And so on, for each cell in the array.
And so on, until the contents of pMerger are exhausted.
And so, we choose to ignore the compiler warnings and leave this variable uninitialized.
And some windows compilers complain if you try to use it without first doing some #defines that prevent SQLite from building on Win98.
And that error has been propagated ever since.
And that the final byte of the doclist is 0x00.
And that the required b-tree mutex is held to make the pager rollback and schema reset an atomic operation.
And that the sort order of the index column is the same as the sort order of the leftmost index column.
And that's what this function does.
And the BLOB type is first.
And the array itself.
And the chronological Julian day number is a variation of the Julian day number.
And the chronological modified Julian day number is a variation of the modified Julian day number.
And the code in SQLite itself  asserts that SQLITE_IOERR_BLOCKED is never returned.
And the contents of their  associated hash-tables.
And the largest supported cell size is 48 bytes (8 byte rowid + ten 4 byte coordinates).
And the last byte of the free-block must lie on the database page.
And the masses rejoiced.
And the offset immediately following the term data.
And the xSavepoint() method  flushes the pending terms table.
And then swap on the way out.
And then when enabling HAVE_RB_FD_INIT, it doesn't work correctly and makes program abort.
And this is not what users expect when they get SQLITE_LOCKED_SHAREDCACHE.
And this module never makes such a call.
And to delete index entries
And to reduce the number of memory allocations, sometimes two or more Expr objects will be stored in a single memory allocation, together with Expr.zToken strings.
And to the contents of all position lists that will be copied and merged from the input to the output.
And unfortunately, for comparisons, Python's default is *not* to raise an error.
And update the passed in ap flags apropriately.
And view is the subspace.
And we add the strings at the end.
And we apply the position
And we do not want the assert() containing the call to sqlite3_mutex_held() to fail, so a non-zero return is the appropriate thing to do.
And what is supposed to go as user interaction, error log, etc.
And when  alpha.eq.zero.
And when running a test binary via adb shell, it's easy to miss logcat.
And yet the library dlsym() routine returns a void* which is really a pointer to a function.
And, ensure that the referenced method is resolvable, too.
And, even if it is not, it should not be too much slower.
And, if currently processing a CTE expression, if it is a recursive reference to the current CTE.
And, in fact, this routine is never called in a working implementation.
And, obviously, for this to be so there  must be an open write transaction on the file itself.
And, on the platforms where +FD_CLOEXEC+ is available, +errno+ is propagated to the parent process, and this function returns -1 in the parent process.
Android-L and M bionic's pthread implementation differ significantly, and can change any time.
Annex B.2 of ISO 8601 gives examples where the decimal fractions are not preceded by a "0".
Anonymous memory is used for all backing pages of the file.
Another SELECT immediately to our left
Another approach to is to use files in /dev/shm or /dev/tmp or an some other tmpfs mount.
Another big comment (similar to this one) will mark the point in the code where we transition back to normal indentation.
Another branch follows.
Another built-in collating sequence: NOCASE.
Another complicating factor is that there may be logical holes in the mesh -- zones which do not exist.
Another example is when the database page size is smaller than the disk sector size.
Another opcode follows immediately after the last operand.
Another solution would be to change the OP_SCopy used to copy cached values to an OP_Copy.
Another thread is (in the process of) initializing the static mutexes
Another thread or process might be writing the header at the same time this procedure is trying to read it, which might result in inconsistency.
Another way to specify 'sig'
Answer will not fit into single packet
Any  pointer will work here as long as it is distinct from SQLITE_STATIC and SQLITE_TRANSIENT.
Any  preexisting limit is discarded in place of the new LIMIT 1.
Any B-Tree deeper than this will be declared corrupt.
Any ON or USING clauses associated with the join are also attached to the left entry.
Any OP_Column operations that occur while the cursor is on the null row will always write a NULL.
Any TK_COLUMN node in the expression tree refers to the Expr.iColumn-th column of the b-tree of the cursor.
Any active readers will get SQLITE_ABORT.
Any additional +arguments+ will be passed to the command.
Any arguments passed to the method will be passed to the block.
Any attempt to add a singleton method to an Integer object will raise a TypeError.
Any attempt to lock or unlock a file first checks the locking structure.
Any attempt to use a cursor that was open at the beginning of this operation will result in an error.
Any attempt to use a page associated with this page cache after this function returns will likely result in a coredump.
Any attempt to use a tripped cursor will result in an error.
Any attempt to use the cursor should return the error code stored in BtCursor.skip
Any attempt to use the cursor should return the error code stored in BtCursor.skipNext
Any attempt to use the destination database connection while a backup is in progress may cause a malfunction or a deadlock.
Any attempt to use this method on a Numeric will raise a TypeError.
Any available database can be used.
Any broadcasting of the three operands should have already been done before calling this function, as the ndim and shape is only specified once for all operands.
Any broadcasting of the two operands should have already been done before calling this function, as the ndim and shape is only specified once for both operands.
Any changes made to the database are reverted by SQLite.
Any corruption is detected in sqlite3BtreeParseCellPtr(), though, so this code can safely assume that nCellKey is 32-bits
Any cursors returned will have been opened for writing.
Any decent C compiler will add the constants at compile
Any deferred constraint violations have now been resolved.
Any digit sequences can be separated by an underscore.
Any encoding: Let the parser choose the encoding
Any equality other than WO_IN is captured by the previous "if".
Any errors cause an error message to be set in pParse.
Any errors you see here are probably due to a bug in ruby's OpenSSL implementation.
Any existing mapping is discarded.
Any existing value in pTo is freed.
Any feedback is very welcome.
Any file extensions needed will be supplied automatically by the dbm library.
Any hash value that exceeds the capacity of an Integer will be truncated before being used.
Any kind of inner or cross join
Any local variables created within this block are accessible to only this thread.
Any lock, or no lock at all, may be held on the database file.
Any more and we start to sacrifice performance.
Any multi-byte character that attempts to encode a value between 0x00 and 0x7f is rendered as 0xfffd.
Any new array elements are zeroed before returning.
Any new entries added added to the column cache after this call are removed when the corresponding pop occurs.
Any non-numeric characters that following zNum are ignored.
Any number of callbacks may be registered at any time.
Any ocaml value is valid, except closures.
Any of the WHERE_COLUMN_xxx values
Any optional arguments may be supplied as nil to preserve the OpenSSL defaults.
Any other VTable structures in the list are moved to the sqlite3.pDisconnect list of the associated  database connection.
Any other expression has a height equal to the maximum height of any other  referenced Expr plus one.
Any other return is an error.
Any other return is either a match, or some kind of error.
Any other return value indicates an error.
Any output core dimensions shape should be ignored
Any pages written as part of transaction rollback or database recovery operations are not included.
Any pinned pages that meet this  criteria are unpinned before they are discarded.
Any pinned pages with a page number equal to or greater than iLimit are implicitly unpinned.
Any pointer will work here as long as it is distinct from SQLITE_STATIC and SQLITE_TRANSIENT.
Any prepared statement that invokes this opcode will hold mutexes on every btree.
Any previous state of the +Digest+ instance is irrelevant to the signature outcome, the digest instance is reset to its initial state during the operation.
Any previous state of the +Digest+ instance is irrelevant to the validation outcome, the digest instance is reset to its initial state during the operation.
Any previous value is deleted by calling the delete function specified when it was set.
Any prior content is overwritten without being freed.
Any prior string or blob content in the pMem object may be discarded.
Any read-only or read-write transaction implies a read-lock on  page 1.
Any reqchar setting must remain unchanged after any kind of repeat.
Any result present can be used to return the correct field.
Any return code other than NOMATCH is an error.
Any strides which may change during iteration receive the value NPY_MAX_INTP.
Any subsequent calls to sqlite3rbu_step() will immediately return SQLITE_DONE.
Any subsequent calls to sqlite3rbu_step() will immediately return the SQLite error code associated with the error.
Any subsequent readers might report database corruption (due to the inconsistent cache), and if they upgrade to writers, they may inadvertently corrupt the database file.
Any such actions result in undefined behavior.
Any tables that the SrcList might point to are not duplicated.
Any terms specified as part of the ON(...) clause for any LEFT  JOIN for which the current table is not the rhs are omitted from the cursor-hint.
Any text not listed as a directive will be passed through to the output string.
Any threads not joined will be killed when the main program exits.
Any tokens larger than this (in bytes) are passed through without stemming.
Any unit can always divide into generic units.
Any unprocessed data is flushed before changing the params.
Any unrecognized conversion type
Any use of a prepared statement after it has been finalized can result in undefined and undesirable behavior such as segfaults and heap corruption.
Any value greater than 1 indicates that there is more than one character.
Any virtual table module for which xConnect and xCreate are the same method can have an eponymous virtual table instance.
Any writes to 'arr' will magically turn into writes to 'base', so we should warn if necessary.
Anything before the first 0x01 is col 0
Anything can be viewed as an object, unless it needs to be writeable
Anything else counts 1
Anything else does not or need not match a character.
Anything else is an error
Anything else is just an item with no data, but possibly a flag.
Anything else is some kind of error
Anything else is variable length
Anything else isn't a special value
Anything else, like datetime, is special cased to not fit in this hierarchy
Anything other than NOMATCH causes the entire assertion to fail, passing back the return code.
Anything other than NOMATCH is passed back.
Anything that is required as part of a commit that may fail is performed in the xSync() callback.
Anyway, we don't have that state info, thus we use Response as a heuristic.
Apache will generate REDIRECT_STATUS, Netscape and redirect.so will generate HTTP_REDIRECT_STATUS.
Apache will load, unload and then reload a DSO module.
Apart from sign issues, floats and their 64 bits integer have the same order, assuming they are represented as exponent followed by the mantissa.
Apart from that there seems no need for zend_ini_deactivate() yet.
Apart from that, there must be exactly two * arguments.
Apparently invariant, left over from compress
Apparently it takes more time to parse and run the PRAGMA to turn journalling off than it does to write the journal header file.
Apparently, implementations are supposed to know the type of action based on state, which strikes me as a bit lame.
Append "UPDATE tbl SET "
Append JSON content here
Append N bytes from zIn onto the end of the JsonString string.
Append N bytes of text from z to the StrAccum object.
Append N copies of character c to the given string buffer.
Append N space characters to the given string buffer.
Append NULL to the end of the string
Append a DELETE change to the buffer passed as the first argument.
Append a directive to the directives stack.
Append a doclist to buffer pBuf.
Append a function parameter value to the JSON string under  construction.
Append a message to the error message string.
Append a new column value, if necessary
Append a new element to the given IdList.
Append a new table name to the given SrcList.
Append a pair of a key and a value to a mapping node.
Append a pointer to the added string into the envp array
Append a record of the current state of page pPg to the sub-journal.
Append a rowid and position-list size field to the writers output.
Append a sequence number so that all entries are distinct.
Append a single character
Append a single varint to a PendingList buffer.
Append a string B to a string A.
Append a string to the string-buffer passed as the first argument.
Append a tag directive to the directives stack.
Append a term and (optionally) doclist to the FTS segment node currently stored in blob *pNode.
Append a term to the output segment.
Append an item to a sequence node.
Append any punctuation that occurred between the end of the previous token and the end of the document to the output.
Append buffer nData/pData to buffer pBuf.
Append cells to the end of the page
Append content to pParse that will complete zPath.
Append content to the JSON parse
Append formatted text (not to exceed N bytes) to the JsonString.
Append header to this buffer
Append length (before padding)
Append length in bits and transform
Append nodes to complete path if not NULL
Append position iPos to the output
Append position iPos to the position list being accumulated in buffer pBuf, which must be already be large enough to hold the new data.
Append term pTerm/nTerm to the segment being written by the writer passed as the second argument.
Append text to the indentation
Append the N-byte string in zIn to the end of the JsonString string under construction.
Append the PK part of the WHERE clause
Append the assignments
Append the current configuration cookie
Append the current string
Append the current term and doclist pointed to by cursor pCsr to the appendable b-tree segment opened for writing by pWriter.
Append the data to the string buffer.
Append the hash of the 64-bit integer passed as the second argument to the hash-key value passed as the first.
Append the hash of the blob passed via the second and third arguments to  the hash-key value passed as the first.
Append the hash of the data type passed as the second argument to the hash-key value passed as the first.
Append the name of the path for element i to pStr
Append the new position offset, if necessary
Append the new serialized varint to the end of the list.
Append the node to this object
Append the non-PK part of the WHERE clause
Append the nul-terminated string zStr to the buffer pBuf.
Append the number of bytes of new data, then the term data itself to the page.
Append the output of a printf() style formatting to an existing string.
Append the pgidx to the page buffer.
Append the position lists
Append the position-list data to the output
Append the prefix-compressed term and doclist to the buffer.
Append the remaining line breaks.
Append the rest of the pattern
Append the rest of the pattern after the closing brace
Append the rowid to the output
Append the token to the queue.
Append the value passed as the second argument to the buffer passed as the first.
Append to this JSON string
Append to this SrcList.
Append to this buffer
Append version, passes, digest length, and message length
Appended elements are not counted.
Appending to an existing hash-entry.
Appends any supported element to the end of the collection
Appends src to string dst of size dsize (unlike strncat, dsize is the full size of dst, not space left).
Appends src to string dst of size siz (unlike strncat, siz is the full size of dst, not space left).
Application writers should be aware that experimental interfaces are subject to change in point releases.
Applications are strongly discouraged from using this global variable.
Applications can substitute working mutex routines at start-time using the  sqlite3_config(SQLITE_CONFIG_MUTEX,...)  interface.
Applications must not attempt to access any of these methods if the iVersion of the VFS is less than 3.
Applications that care about shared cache setting should set it explicitly.
Applications that define a custom xFileControl method should use opcodes greater than 100 to avoid conflicts.
Applications that override the built-in mutex logic must be prepared to accommodate additional static mutexes.
Applications that use SQLite mutexes should use only the dynamic mutexes returned by SQLITE_MUTEX_FAST or SQLITE_MUTEX_RECURSIVE.
Applications that use these interfaces must be prepared for any or all of these interfaces to be NULL or for their behavior to change from one release to the next.
Applies a single business day count operation.
Applies a single business day offset.
Applies the 'roll' strategy to 'date', placing the result in 'out' and setting 'out_day_of_week' to the day of the week that results.
Applies the given offsets in business days to the dates provided.
Applies the type promotion rules between the two types, returning the promoted type.
Apply G from the left to transform the rows of the matrix in columns K to I2.
Apply G from the right to transform the columns of the matrix in rows I1 to min(K+2,I).
Apply G from the right to transform the columns of the matrix in rows I1 to min(K+3,I).
Apply G from the right to transform the columns of the matrix in rows I1 to min(K+NR,I).
Apply G' from the left to transform the rows of the matrix in columns K to I2.
Apply G(i) to A(i+1:m,i+1:n) from the right
Apply G(i) to A(i+1:m,i:n) from the right
Apply Givens at CURR and CURR+1
Apply H to A(i+ib:m,i:n) from the right
Apply H to A(i:m,i+ib:n) from the left
Apply H to rows i:m of current block
Apply H' to A(i+ib:m,i:n) from the right
Apply H' to A(i:m,i+ib:n) from the left
Apply H' to columns i:n of current block
Apply H(i) from both sides to A(1:i,1:i)
Apply H(i) from both sides to A(i+1:n,i+1:n)
Apply H(i) to A(1:ihi,i+1:ihi) from the right
Apply H(i) to A(i+1:ihi,i+1:n) from the left
Apply H(i) to A(i+1:m,i+1:n) from the left
Apply H(i) to A(i+1:m,i:n) from the right
Apply H(i) to A(i:m,i+1:n) from the left
Apply H(i) to A(i:m,i:n) from the left
Apply H(i) to A(i:m,i:n) from the right
Apply H(i)' to A(i+1:ihi,i+1:n) from the left
Apply H(i)' to A(i+1:m,i+1:n) from the left
Apply H(i)' to A(i:m,i+1:n) from the left
Apply H(i)' to A(i:m,i:n) from the right
Apply advisory locks for all n bytes beginning at ofst.
Apply back orthogonal transformations from the left.
Apply back the Givens rotation to the left and right singular vector matrices.
Apply back the right orthogonal transformations.
Apply change to "main" db of this handle
Apply convergence tests
Apply interchanges to columns 1:J-1.
Apply interchanges to columns J+JB:N.
Apply locks to this open shared-memory segment
Apply posix advisory locks for all bytes from ofst through ofst+n-1.
Apply row interchanges to the right hand sides.
Apply row interchanges to the solution vectors.
Apply rule 1 after the others because it can cause an additional delay of one day.
Apply the 'roll' if it's not a business day
Apply the SHA-256 compression function to update a..h
Apply the SHA-256 compression function to update a..h with copy
Apply the SHA-512 compression function to update a..h
Apply the SHA-512 compression function to update a..h with copy
Apply the block reflector H to A(i+1:ihi,i+ib:n) from the left
Apply the changeset passed via pChangeset/nChangeset to the main database attached to handle "db".
Apply the changeset passed via xInput/pIn to the main database attached to handle "db".
Apply the computed permutation to the AXISDATA array
Apply the interchange to columns 1:N.
Apply the perm to get the original axis
Apply the permutation by following the cycles
Apply the requested affinity to all inputs
Apply the singular values and treat the tiny ones as zero.
Apply the time zone offset
Apply the time zone offset if it exists
Apply the transformation to Z.
Apply the transformation to the rest of H.
Apply the unit multiplier (TODO: overflow treatment...)
Apply trans sid if sid cookie is not set
Applying an inverted changeset to a database reverses the effects of applying the uninverted changeset.
Applying the inverted matrix will restore the original values.
Appropriate implementations for sqlite3_os_init() and sqlite3_os_end() are built into SQLite when it is compiled for Unix, Windows, or OS/2.
Appropriate locking method
Approximate number of tokens in snippet
Arbitrary value to mark output is done.
Architectures which can shift addresses left by 2 bits with no extra cost
Architectures with no complicated addressing modes supported
Args are in reverse order
Argument  pSrc is the full-name of the table being altered.
Argument (nTerm/pTerm) is the split-key - a term that is larger than all terms written to earlier leaves, and equal to or smaller than the first term on the new leaf.
Argument *piPk is also of type (int*), and also points to an output parameter.
Argument aCol points to an array of integers containing one entry for each table column.
Argument aWalData must point to an array of WAL_SAVEPOINT_NDATA u32  values.
Argument apSegment is an array of nSegment elements.
Argument apVal is the same as the similarly named argument passed to fts3InsertData().
Argument checking features.
Argument eOp must be either SAVEPOINT_ROLLBACK or SAVEPOINT_RELEASE.
Argument eType must be either CHANGESET_DATA or CHANGESET_CONFLICT.
Argument eType must be one of RBU_INSERT, RBU_DELETE, RBU_IDX_INSERT or RBU_IDX_DELETE.
Argument extraction and printing.
Argument iVal must be greater than or equal to 0, and less than the number of columns in the table affected by the current change.
Argument is a pointer to an Fts5Data structure that contains a  leaf page.
Argument is a pointer to an Fts5Data structure that contains a leaf page.
Argument is forbidden
Argument is mandatory
Argument mPrereq is a mask of tables that must be scanned before the virtual table in question.
Argument p points to a buffer containing a varint to be interpreted as a position list size field.
Argument p points to a buffer containing utf-8 text that is n bytes in  size.
Argument pArg is cast to a (void *) and made available as the function user-data (sqlite3_user_data()).
Argument pCellptr points to the first entry in the cell-pointer array (part of page pPg) to populate.
Argument pColDef contains the text of the new column definition.
Argument pCsr must be a cursor opened for writing on an  INTKEY table currently pointing at a valid table entry.
Argument pCtx is actually a pointer to a struct of type MatchInfo.
Argument pIn points to a character that is part of a nul-terminated  string.
Argument pIn points to the first character in what is expected to be a comma-separated list of SQL literals followed by a ')' character.
Argument pIter is a changeset iterator that has been initialized, but not yet passed to sqlite3changeset_next().
Argument pKeyInfo supplies the collation functions used by the comparison.
Argument pLevel describes a strategy for scanning table pTab.
Argument pList points to a position list nList bytes in size.
Argument pNode is an FTS5_AND node.
Argument pRight (but not pLeft) may be a null pointer.
Argument pSrclist is a pointer to the FROM  clause that the scan reads data from.
Argument pStart points to the first byte of the doclist that the varint is part of.
Argument pTerm must be a synonym iterator.
Argument pVector points to a vector expression - either a TK_VECTOR or TK_SELECT that returns more than one column.
Argument pWith (which may be NULL) points to a linked list of nested  WITH contexts, from inner to outermost.
Argument parsing API -- andrei
Argument passed into xTask()
Argument passed to comparison function
Argument ppHead contains a pointer to the current head of a query  expression tree being parsed.
Argument rc is an SQLite error code.
Argument to SQLITE_FCNTL_PRAGMA
Argument to pass to function
Argument to pass to xBusyHandler
Argument to pass to xNotify
Argument to profile function
Argument to the deferred sqlite3BtreeMoveto()
Argument to the function
Argument to the progress callback
Argument to the thread
Argument to the trace function
Argument to xCommitCallback()
Argument to xInit() and xShutdown()
Argument to xRollbackCallback()
Argument to xUnlockNotify
Argument z points to a buffer containing n bytes of text to append.
Argument zArg contains the  format string passed as the second argument to matchinfo (or the default value "pcx" if no second argument was specified).
Argument zFmt is a printf() style format string.
Argument zFmt is a sqlite3_mprintf() style format string.
Argument zMaster may point to Pager.pTmpSpace.
Argument zName is the name of the table in the database schema at the time the generated code is executed.
Argument zRbu is the path to the RBU database.
Argument zTarget is the path to the target database.
Argument zWhere may be a pointer to a buffer containing a table name, or it may be a NULL pointer.
Argument:   the error number Returns:    pointer to the error string
Argument:   the result of a previous pcre_get_substring() Returns:    nothing
Argument:   the result of a previous pcre_get_substring_list() Returns:    nothing
Argument: pointer to the compile data block Returns:  0 if all went well, else an error number
Argument: the address of the base frame Returns:  nothing
ArgumentError:: If +initial+ is a Float, and the +digits+ is larger than Float::DIG + 1, this exception is raised.
ArgumentError:: If the +initial+ is a Float or Rational, and the +digits+ value is omitted, this exception is raised.
Arguments aIdx, aCell and aSpare all point to arrays of size nIdx.
Arguments aIdx, aDistance and aSpare all point to arrays of size nIdx.
Arguments aLeft and aRight are pointers to change records for table pTab.
Arguments aLeft and aRight both point to buffers containing change records with nCol columns.
Arguments and results are platform dependent.
Arguments are in their appropriate registers.
Arguments are not checked.
Arguments are passed as block parameters.
Arguments are swapped.
Arguments are the same as for open().
Arguments for SQLITE_PRINTF_SQLFUNC
Arguments for printf format string
Arguments for the function can follow _num_.
Arguments for the indexing scheme
Arguments nArg/azArg contain the string arguments passed to the xCreate or xConnect method of the virtual table.
Arguments of yyformat.
Arguments pBlob/nBlob contain a serialized Fts5Structure object.
Arguments pBlob/nBlob contain an "averages" record.
Arguments pLeft and pRight point to linked-lists of hash-entry objects, each sorted in key order.
Arguments pList/nList contain the doclist for token iToken of phrase p.
Arguments passed to transfer are treated like those passed to resume.
Arguments to agg function
Arguments to currently executing user function
Arguments to rank function
Arguments to table-valued-function
Arguments to the format string
Arguments to the unlock callback
Arguments to userland function
Arguments:   none Returns:     pointer to the contiguous block of data
Arguments:  c opcode Returns:    base opcode for the type
Arguments: c           the character data        points to the flag byte of the XCLASS data Returns:      TRUE if character matches, else FALSE
Arguments: cd           the compile data block name         the name to add length       the length of the name groupno      the group number Returns:       nothing
Arguments: code           current code pointer ptr            current pattern pointer cd             pointers to tables etc Returns:         new code pointer
Arguments: code         pointer to the start of the group skipassert   TRUE if certain assertions are to be skipped Returns:       pointer to the first significant opcode
Arguments: code        points to start of expression utf         TRUE in UTF-8 / UTF-16 / UTF-32 mode Returns:      pointer to the opcode for OP_RECURSE, or NULL if not found
Arguments: code        points to start of search endcode     points to where to stop utf         TRUE if in UTF-8 / UTF-16 / UTF-32 mode cd          contains pointers to tables etc.
Arguments: code        the compiled regex stringname  the name whose number is required Returns:      the number of the named parentheses, or a negative number (PCRE_ERROR_NOSUBSTRING) if not found
Arguments: cvalue     the character value buffer     pointer to buffer for result - at least 6 pcre_uchars long Returns:     number of characters placed in the buffer
Arguments: op1 - First operand to ufunc idx - Indices that are applied to first operand.
Arguments: previous_callout   points to previous callout item ptr                current pattern pointer cd                 pointers to tables etc Returns:             nothing
Arguments: ptr        points to the first letter len        the length of the name Returns:     a value representing the name, or -1 if unknown
Arguments: what             what information is required where            where to put the information Returns:           0 if data returned, negative on error
Arm v7 specific instructions.
Arrange for P1 to move so that it points to the rowid given by P2.
Arrange for convenient computation of quotients: shift left if necessary so divisor has 4 leading 0 bits.
Arranging for additional bytes to be discarded before reloading the input buffer is the application writer's problem.
Array Descr Objects for dynamic types
Array containing doclist (or NULL)
Array element to populate
Array evaluates as "TRUE" if any of the elements are non-zero
Array for converting from half-bytes (nybbles) into ASCII hex digits.
Array for holding numbers.
Array for named subpatterns
Array for subpatterns
Array index is integer size in bytes.
Array index starts from 0
Array indexing starts at 0, as in C or Java.
Array indicating UPDATEd columns (or 0)
Array indicating modified columns
Array of "seen instance" flags
Array of Fts3SegReader objects
Array of Fts5DlidxWriter objects
Array of OP_Once flags for parent frame
Array of PmaReaders to merge data from
Array of SegReader objects
Array of Vdbe cursors for parent frame
Array of WhereLoop objects implementing this path
Array of active savepoints
Array of arguments for Fts5Config
Array of cells and sizes
Array of characters to make exceptions
Array of collation sequence names for index
Array of column names
Array of column names for fts3 table
Array of expression tokens and costs
Array of first token in each sentence
Array of flags, set on NOT NULL columns
Array of flags, set on target PK columns
Array of indexes for this table
Array of integers that becomes the BLOB
Array of iterators to merge
Array of jump instruction addresses
Array of lists of free blocks according to the block size  for smaller chunks, or a hash on the block size for larger chunks.
Array of mapped shared-memory regions
Array of marks for PREG_PATTERN_ORDER
Array of memory cells for parent frame
Array of mmap'd *-shm regions
Array of mxSample Stat4Sample objects
Array of nArg CREATE VIRTUAL TABLE args
Array of nCol best samples
Array of nLevel level objects
Array of new.* values
Array of nodes containing the parse
Array of offset to rowid fields
Array of opcodes for sub-program
Array of overflow page numbers
Array of page numbers.
Array of parsed cells
Array of phrase freq.
Array of phrase pointers
Array of primary key flags
Array of primary key flags, or NULL
Array of registers where record is assembled
Array of remaining idx values
Array of replacement values
Array of rootpage numbers for tables to be checked
Array of segment iterators
Array of shared library handles
Array of size nPhrase
Array of subpattern offsets
Array of tables to search
Array of target column types
Array of term hash entries to scan
Array of time formats.
Array of trailing arguments
Array of unquoted target column names
Array of values to insert
Array storing tag names at the tag's index.
Array szCell  contains the size in bytes of each such cell.
Array szCell contains the size in bytes of each such cell.
Array to sort entries of
Array to write results into (see above)
Array used to calculate phrase freq.
Array used to collect a decomposition before adding it to the decomposition table.
Array used to collect case mappings before adding them to a list.
Array with one element per query phrase
ArrayIterator specific
Arrays and objects cannot be used as keys.
Arrays are misaligned, the CPU supports AVX, and we are running Mavericks.
Arrays are ordered, integer-indexed collections of any object.
Arrays as well as tables can however be accessed by numerical index, with table keys readable ex post.
Arrays can contain different types of objects.
Arrays don't have to be "broadcastable" Only requirement is they have the same number of elements.
Arrays to hold the mapping of codes to numbers.
Arrival here can only mean there is something seriously wrong in the code above or the OP_xxx definitions.
Artistic or GPL part end
Artistic or GPL part start
As Firebird and InterBase are developed independently, functionality might be different between the two branches in future versions.
As Integers are conceptually infinite length, the result acts as if it had an infinite number of one bits to the left.
As PCRE1 is now in maintenance only mode, we finesse the bug by allowing more memory always.
As PHP strings have length inside, this function makes not much sense in the context of PHP, to be called as separate function.
As a contributor, you agree to allow your code to be used under both.
As a general rule of thumb, exposing the key directly or indirectly should be avoided at all cost and exceptions only be made with good reason.
As a last resort, return a non-persistent connection.
As a result,  it is extended to two fields.
As a result, Marshal.load is not suitable as a general purpose serialization format and you should never unmarshal user supplied input or other untrusted data.
As a result, a sqlite3.pDisconnect cannot be accessed simultaneously  by multiple threads.
As a result, in this case it is ok to delete a record from within a Next loop.
As a result, only the day number of the start of the year is required.
As a result, the call to xUndo may not fail.
As a result, we need to allocate our own TLS space while preserving the existing TCB or TIB that has been setup via librthread.
As a safe fallback, we use `mkstemp/unlink`.
As a sanity check when loading from a file
As a special case for backwards compatibility, strip away unit dimensions from the left of 'src'
As a special case, all 8 bytes of the 9th byte are used as data.
As a special case, alloca(0) reclaims storage without allocating any.
As a special case, the top-level object that is the initial execution context of Ruby programs returns ``main''.
As a special exception, the "*" tag can be used as a language tag to declare a default ordering for any language that does not explicitly declare an ordering.
As all child key values are guaranteed to be NULL, it is not possible for adding this row to cause an FK violation.
As all the PCRE_ERROR_xxx values are negative, we can use 0 and 1.
As an important invariant, we need to ensure that a non-empty hash table slot can never legally be encoded as all zero bits, because that would look just like an empty slot.
As an optimization, SQLITE_AFF_BLOB entries (which are no-ops) at the beginning and end of zAff are ignored.
As an optimization, SQLITE_AFF_NONE entries (which are no-ops) at the beginning and end of zAff are ignored.
As an optimization, omit trailing SQLITE_AFF_BLOB affinities.
As an optimization, omit trailing SQLITE_AFF_NONE affinities.
As before, show substrings stored in the output vector by number, and then also any named substrings.
As before, subsequent error messages are suppressed until three input tokens have been successfully shifted.
As configured by CursorSetHints()
As disgusting as on the darwin/386, darwin/amd64.
As each equal eigenvalue is found, an elementary reflector is computed to rotate the corresponding eigensubspace so that the corresponding components of Z are zero in this new basis.
As each equal singular value is found, an elementary reflector is computed to rotate the corresponding singular subspace so that the corresponding components of Z are zero in this new basis.
As each page of the file is loaded into memory, an instance of the following structure is appended and initialized to zero.
As each term visited by the linear scans, a separate query for the same term is performed.
As follows:  0: Parsing file-name.
As follows:  pzImposterCols: ...
As follows: 1: the *-rbu file is currently under construction.
As for arr_interp but for complex fp values
As if it had just been returned by fts3tokOpenMethod().
As in a large database update transmitted via a wireless network to a mobile device.
As in the case of is_anchored() (see above), we have to take account of back references to capturing brackets that contain .* because in that case we can't make the assumption.
As it happens, the "NOT" versions of these opcodes are used at present only for ASCII characters, so they could be omitted from this list.
As it happens, the pending terms table is always empty here.
As it is passed to us, we should not clean it ourselves.
As long as LWORK is at least 2 * N + N * NRHS if M is greater than or equal to N or 2 * M + M * NRHS if M is less than N, the code will execute correctly.
As long as it's the case, it's just the constant limit.
As long as rows are sorted for just the innermost loop, this routine can return TRUE.
As long as you retain this notice you can do whatever you want with this stuff.
As many as MX_CLOSE_ATTEMPT attempts to close the handle are made before giving up and returning an error.
As more of the CREATE TABLE statement is parsed, additional action routines will be called to add more information to this record.
As of 7-31-97 FLOATING_POINT is NOT provided.
As of Ruby 1.8, returns ``UTC'' rather than ``GMT'' for UTC times.
As of SQLite version 3.7.7, URI filename interpretation is turned off by default, but future releases of SQLite might enable URI filename interpretation by default.
As of curl 7.11.1 this is no longer defined inside curl.h
As opposed to other stackless light weight concurrency models, each fiber comes with a small 4KB stack.
As originally  written the query must use a temp-table for at least one of the ORDER  BY and DISTINCT, and an index or separate temp-table for the other.
As part of the sorting process, it is converted to use the SorterRecord.u.pNext pointers.
As per the RFC, automatically redirected requests MUST NOT use other methods than GET and HEAD unless it can be confirmed by the user
As rb_str_modify(), but don't clear coderange
As said, precision could be lost.
As some of the text is of unknown length, we can't use a table of offsets.
As soon as the result of any such comparison is non zero (i.e. the two corresponding elements are not equal), that result is returned for the whole array comparison.
As such, it is a subclass of +SignalException+.
As the PDO emulation does not return it, we skip it as well
As the PTHREAD_STACK_MIN is undefined and no one touches the default stacksize, it is just fine to use the default.
As the bits take less space in the protocol than the numbers they represent, we don't have enough space in the packet buffer to overwrite inside.
As the buffers have been freed, we should go back to PREPARED
As the code stands, it will do the right thing for R,G,B and B,G,R orders.
As the integrity-check proceeds, for each page used in the database the corresponding bit is set.
As the main database will be committed before the RBU update database this will likely either just pass unnoticed, or result in SQLITE_CONSTRAINT errors (due to UNIQUE constraint violations).
As the security of DH demands relatively long "public keys" (i.e. the part that is overtly transmitted between participants) DH tends to be quite slow.
As the tile image can contain the same color as the color to fill.
As there exists an unusable MATCH constraint this is an  unusable plan.
As there is only one, we can use tail recursion to avoid using another stack frame, except when there is unlimited repeat of a possibly empty group.
As there may be shallow copies of this value, make it a soft-NULL
As these are otherwise illegal sequences, we don't break anything by recognizing them.
As they come as bit mask, we have to convert it to human-readable representation.
As this "NEAR" object is actually a single phrase that consists  of a single term only, grab pointers into the poslist managed by the fts5_index.c iterator object.
As time goes by, we may be able to get more clever at doing this.
As usual, return a negative , zero or positive value if *pMem1 is less than, equal to or greater than  pMem2, respectively.
As usual, the indexes in the position  lists are the offsets of the last token in each phrase (tokens "1" and "2"  in the example above).
As usual, the initial  "Length" field found in doclists stored on disk is omitted from this  buffer.
As we don't have a list of which groups are referenced, we cannot do this selectively.
As well as a fixed or exponential form of the +float+, the call may return +NaN+, +Infinity+, and +-Infinity+.
As well as logging the contents of the list of pages headed by pList (connected by pDirty), this function notifies any active backup processes that the pages have changed.
As well as the main term index, there may be up to 31 prefix indexes.
As well as these, one memory cell is required for each cursor used by the program.
As will all I/O modules, most functions are for local use only (called via function pointers in the I/O context).
As winMutexInit() and winMutexEnd() are called as part of the sqlite3_initialize and sqlite3_shutdown() processing, the "interlocked" magic is probably not strictly necessary.
As with all file-control actions, there is no guarantee that this will actually do anything.
As with other session APIs, tables without PRIMARY KEYs are simply ignored.
As with the output of the sqlite3session_changeset() and sqlite3session_patchset() functions, all changes related to a single table are grouped together in the output of this function.
As zend_multibyte_set_functions() gets called after ini settings were populated, we need to reinitialize script_encoding here.
Ascending order if Fts3Cursor.bDesc is zero, or descending if it is non-zero.
Ascii value 4 is actually EOT character which is not defined anywhere in the LibC or else we can use instead of hardcoded 4.
Assemble the new sibling page.
Assembled sorter record
Assert captures then.
Assert is successful.
Assert that P3 is a valid memory cell.
Assert that column iCol of statement pStmt is named zName.
Assert that operands are never NULL
Assert that the caller has been consistent.
Assert that the caller has opened the required transaction.
Assert that the mutex (if any) associated with the BtShared database  that contains table p is held by the caller.
Assert that the p1 parameter is valid.
Assert that the pointer X is aligned to an 8-byte boundary.
Assert that the upper layer has set one of the "file-type" flags.
Assert that we can verify this by comparing sums.
Assert the truth of VdbeCoverageAlwaysTaken() and  VdbeCoverageNeverTaken()
Assert()s in the code below verify that the numbers are aligned correctly.
Assert()s verify that the computation is correct.
AssertNot is successful.
Assertion failure occures if an invalid argument is passed.
Asserts such as the example above are placed on the non-lookaside free() routines to verify this constraint.
Assign VdbeCursor index numbers to all tables in a SrcList
Assign a bit from the bitmask to every term in the FROM clause.
Assign a cost of 1.0.
Assign a variable number to an expression that encodes a wildcard in the original SQL statement.
Assign argvIndex values to each constraint in use.
Assign cursor numbers to the table and all its indices.
Assign expression b to lvalue a.
Assign the next variable number
Assign the number and clean up.
Assign to prod and clean up the number.
Assigned value is never used
Assigning a structure class to a constant also gives the class the name of the constant.
Assigning to YYVAL unconditionally makes the parser a bit smaller, and it avoids a GCC warning that YYVAL may be used uninitialized.
Assigns a scalar value specified by 'src_dtype' and 'src_data' to elements of 'dst'.
Assigns the array from 'src' to 'dst'.
Assigns the array from 'src' to 'dst, wherever the 'wheremask' value is True.
Assigns the scalar value to every element of the destination raw array where the 'wheremask' value is True.
Assigns the scalar value to every element of the destination raw array.
Associated FTS5 index
Associated database connection
Associated database handle
Associated index cursor from which to read
Assume 32-bit assignment is atomic
Assume IEEE arithmetic if we found denormalised  numbers above, or if arithmetic seems to round in the  IEEE style,  determined in routine SLAMC1.
Assume an indexed expression can always yield a NULL
Assume content-length 0 - read the next
Assume it's a metadata dictionary
Assume largest possible
Assume shape as scalar otherwise
Assume single column records only
Assume some uncommitted DML occurred
Assume stack grows downward
Assume that the total number of output rows that will need to be sorted will be nRowEst (in the 10*log2 representation).
Assume the has table has nBucket buckets.
Assume the lock is already held.
Assume the stream is temporarily or permanently out of data
Assume they want to commit whatever is outstanding
Assume this many buckets in hash table
Assume we are on an IEEE machine which reserves one exponent for infinity and NaN.
Assumed in this encoding, mb-trail bytes don't mix with single bytes.
Assumed sector size during rollback
Assumes 'val' is not already in that list, a property guaranteed by the deptbl_bindings pre-check.
Assumes a reference to 'op' is owned, and that 'op' may be replaced.
Assumes len is a multiple of 4.
Assumes len is a multiple of 8.
Assumes qh.ferr is defined.
Assumes src_dtype and dst_dtype are both datetimes or both timedeltas
Assumes subok is already true if check_subok is false.
Assumes that the DLL will not be found
Assumes the current values are valid.
Assumes the recursion list is valid.
Assumes the replacement array is exactly the same shape as the original array used when npy_fill_axisdata was called.
Assumes valid UTF-8 for PCRE_UTF8.
Assuming mem5.zPool is divided up into an array of Mem5Link structures, return a pointer to the idx-th such link.
Assuming no  error occurs the xInput method should copy up to (*pnData) bytes of data  into the buffer and set (*pnData) to the actual number of bytes copied  before returning SQLITE_OK.
Assuming no  other error occurs, this function will return SQLITE_BUSY to the caller.
Assuming no error has occurred, run a "restart" checkpoint with the sqlite3rbu.eStage variable set to CAPTURE.
Assuming no error occurs or has occurred, It returns non-zero if the expression passed as the second argument matches the row that pCsr  currently points to, or zero if it does not.
Assuming no error occurs, *paChange is set to point to one byte after the end of the same record before this function returns.
Assuming no error occurs, both transactions are closed by this block - the main database transaction by sqlite3BtreeCopyFile() and the other by an explicit call to sqlite3BtreeCommit().
Assuming no error occurs, it is  set to the offset immediately following the last byte of the last PMA before returning.
Assuming no error occurs, output parameter (*ppVal) is set to point to a value  object containing the result before returning SQLITE_OK.
Assuming no errors have occurred, set up a merger structure to  incrementally read and merge all remaining PMAs.
Assuming that the separator is the next bit in the string (file), skip it.
Assuming the amount of memory used never exceeds a threshold, when Rewind() is called the set of records is sorted using an in-memory merge sort.
Assuming the changeset is not empty, the first call to this function advances the iterator to point to the first change in the changeset.
Assuming the current table columns are "a", "b" and "c", and the zObj paramter is passed "old", return a string of the form:  "old.a, old.b, old.b"  With the column names escaped.
Assuming the cursor iterates in ascending order of rowids, iFirstRowid is the lower limit of rowids to return, and iLastRowid the upper.
Assuming the wal-index file was successfully mapped, populate the page number array and hash table entry.
Assuming zIn points to the first byte of a UTF-8 character, advance zIn to point to the first byte of the next UTF-8 character.
Assumption: PSIZE is a power of 2.
Assumption: There is at most one transcoder for converting from ASCII incompatible encoding.
Assumption: When we save the dependency table, we do a fresh load aka there is saved state
Assumptions: Chars are 8 bits long.
Astronomical functions
Asymmetric algorithms offer a lot of nice features that are used in a lot of different areas.
At EOF, write the rest of the buffer.
At any parenthesis level, the length value can be used to test if anything has been compiled at that level.
At compile time, the class is simply eliminated.
At exit we'll try to fix the terminal to the initial conditions.
At first glance you would think we could optimize out the ORDER BY in this case since the order of entries in the set does not matter.
At first, the best we could do was to detect when .* was in capturing brackets and the highest back reference was greater than or equal to that level.
At first, the function bootstraps the class hierarchy.
At least 1 color must be allocated
At least by Perl 5.18 this changed so as not to insert the binary zero.
At least confirmed for: OSF1 V4.0 878
At least for glibc6.1
At least not while other file descriptors opened by the same process on the same file are working.
At least one character must be matched from this opcode.
At least one instance of the following structure is created for each  trigger that may be fired while parsing an INSERT, UPDATE or DELETE statement.
At least one instance of the following structure is created for each trigger that may be fired while parsing an INSERT, UPDATE or DELETE statement.
At least one non-EOL character following, so don't need to encode ws.
At least one of the two values is a number
At least one portion of this open_basedir is less restrictive than the prior one, FAIL
At least one single char sets the bit and stops
At least this one VM is active
At least three characters are required.
At least two bugs have slipped in because we changed the MEMORY_DEBUG macro to SQLITE_DEBUG and some older makefiles have not yet made the switch.
At least, Linux/ia64's getcontext(3) doesn't save register window.
At least, the standard provides no guarantee.
At maximum, only one thread can use cond_timedwait and watch deadlock periodically.
At most dsize-1 characters will be copied.
At most dsize-1 chars will be copied.
At most one ellipsis in an index
At most one of these may open a write transaction, but any number may have active read transactions.
At most one such warning is issued for each table in the changeset.
At most reg(P3) errors will be reported.
At most siz-1 characters will be copied.
At one point this code was not commented out.
At one point this function returned an error if the pager was in  PAGER_ERROR state.
At one time, code such as "SELECT new.x" within a trigger would cause this condition to run.
At present, PCRE supports only NLTYPE_FIXED, which gets handled without these functions, NLTYPE_ANYCRLF, and NLTYPE_ANY.
At present, for an UPDATE, both the new.* and old.* records are collected in the rbu_xyz table.
At present, just one of these tables is actually needed.
At present, there is only one option that may be configured using this function.
At query time, high MERGE_COUNT increases the number of segments which need to be scanned and merged.
At some point in the future (once everyone has upgraded to 3.6.0 or later) we should consider fixing the conditional above to read "usableSize/4-2" instead of "usableSize/4-8".
At that point the system has recovered  from the error.
At that time, both input and output buffer keep their conditions at the time when the error occurs.
At the conclusion of the test the linear array is compared against the Bitvec object.
At the end of compiling, code is still pointing to the start of the group, while tempcode has been updated to point past the end of the group.
At the end of the CREATE TABLE statement, the sqlite3EndTable() routine is called to complete the construction of the new table record.
At the end of this call, the rollback journal still exists on the disk and we are still holding all locks, so the transaction has not committed.
At the end the chain is reversed.
At the end we or the result into the bit map that is being built.
At the first match, the ORDER BY expression is transformed into the integer column number.
At the last, move a value defined in autoload to constant table
At the moment the pointer size is always equal to sljit_sw.
At the moment there is only a UTF-8 implementation.
At the moment, I am unsure.
At the moment, the size of pcre_study_data is fixed.
At the moment, we just drop it on the floor
At the outermost level, this function fails unless the result is SSB_DONE.
At the pager level, a statement transaction is a savepoint with an index greater than all savepoints created explicitly using SQL statements.
At the point this routine is called, we already know that the ORDER BY term is not an integer index into the result set.
At the same time, do error checking on function usage and set a flag if any aggregate functions are seen.
At the same time, make sure  the GROUP BY clause does not contain aggregate functions.
At the schema layer (and the SetCookie and ReadCookie opcodes) the number of free pages is not visible.
At the start of the loop, c contains the first byte of the character.
At this point all signals are blocked, so there is no race.
At this point argc can only be between 6 and PS_NUM_APIS
At this point curN contains the 7/16 error value to be propagated to the next pixel on the current line, and all the errors for the next line have been shifted over.
At this point each term within the ORDER BY clause has been transformed to an integer value.
At this point it is important that a RESERVED lock is not obtained on the way to the EXCLUSIVE lock.
At this point it would be dangerous to change back to READER state (as usually happens after a rollback).
At this point local variable rc holds the value that should be  returned if this statement was compiled using the legacy  sqlite3_prepare() interface.
At this point p points to that preceding byte without the 0x80 bit set.
At this point pParent may have at most one overflow cell.
At this point the cursor points to a row that matches the query expression, with the following caveats:  Up until this point, "NEAR" operators in the expression have been treated as "AND".
At this point the entry is saved into the manifest.
At this point the iterator is in its regular state - Fts5SegIter.iLeafOffset points to the first byte of the position list content associated with said rowid.
At this point the journal has been finalized and the transaction  successfully committed, but the EXCLUSIVE lock is still held on the file.
At this point the schema may or may not be initialized.
At this point the transaction is committed but the write lock  is still held on the file.
At this point there are two possibilities:  1.
At this point there should not be a Go signal handler installed for SIGIO.
At this point they see the new version of the database - including the updates made as part of the RBU update.
At this point this is probably a keyword.
At this point variable c contains the first character of the pattern string past the "*".
At this point variables should be set as follows:  nPayload           Total payload size in bytes pPayload           Begin writing payload here spaceLeft          Space available at pPayload.
At this point we can freely use all registers.
At this point we can freely use all temporary registers.
At this point we have established that the statement is of the correct syntactic form to participate in this optimization.
At this point we have the character's bytes in mcbuffer, and the length in mclength.
At this point, "diff" is zero iff the correct and buggy algorithms produced exactly the same result.
At this point, any non-zero iOrderByCol values indicate that the ORDER BY column expression is identical to the iOrderByCol'th expression returned by SELECT statement pSub.
At this point, both p1 and p2 point to the start of column-lists for the same column (the column with index iCol1 and iCol2).
At this point, if the literal was an integer, the parse is  finished.
At this point, nFree contains the sum of the offset to the start of the cell-content area plus the number of free bytes within the cell-content area.
At this point, okToChngToIN is true if original pTerm satisfies case 1.
At this point, pWLoop is a candidate to be the next loop.
At this point, rrc will be one of MATCH_ONCE or MATCH_NOMATCH.
At this point, the iteration order has been finalized.
At this point, the return is converted into MATCH_NOMATCH so that previous backup points can be taken.
At this point, the upper  layer must either commit or rollback the transaction.
At this point, there is a write transaction open on both the  vacuum database and the main database.
At this point, there should be no outstanding memory allocations on the heap.
At this point, variables are initialized as follows:  flag_alternateform          TRUE if a '#' is present.
At this point, we know the candidate directory exists and should be used.
At this point, we must have an index array (or array-like).
At this point, we will need additional characters from the string to proceed.
At this point, we're done if there is not more HDF name space to traverse
At this point: iFreeBlk:   First freeblock after iStart, or zero if none iPtr:       The address of a pointer to iFreeBlk  Check to see if iFreeBlk should be coalesced onto the end of iStart.
At this time, the facilitatation completion and the key bind like Emacs can be operated like GNU Readline.
At this time, there is no subthread.
Atomic sub-patterns and assertions can always auto-possessify their last iterator.
Attach PmaReader pReadr to file pFile (if it is not already attached to that file) and seek it to offset iOff within the file.
Attach a table to a session.
Attach subtrees pLeft and pRight to the Expr node pRoot.
Attach the KeyInfo structure to all temporary tables.
Attach the explanation to this Vdbe
Attach the hook to this database
Attach the hook to this db handle
Attach the temporary database as 'vacuum_db'.
Attempt a direct implementation of the built-in COALESCE() and IFNULL() functions.
Attempt an incremental merge that writes nMerge leaf blocks.
Attempt to add, substract, or multiply the 64-bit signed value iB against the other 64-bit signed integer at *pA and store the result in *pA.
Attempt to advance the node-reader object passed as the first argument to the next entry on the node.
Attempt to allocate and return a pointer to a zeroed block of nByte  bytes.
Attempt to allocate enough memory to hold all of the arguments and a trailing NULL
Attempt to apply the change that the iterator passed as the first argument currently points to to the database.
Attempt to automatically detect the operating system and setup the necessary pre-processor macros for it.
Attempt to compute the RHS.
Attempt to delete the file
Attempt to destroy and recreate our isolated Win32 native heap now.
Attempt to extend file to this size
Attempt to extract a value from expression pExpr using the methods as described for sqlite3Stat4ProbeSetValue() above.
Attempt to extract a value from pExpr and use it to construct *ppVal.
Attempt to leave results in this register
Attempt to load an SQLite extension library contained in the file zFile.
Attempt to locate an element of the hash table pH with a key that matches pKey,nKey.
Attempt to locate an element of the hash table pH with a key that matches pKey.
Attempt to locate an existing hash entry
Attempt to match pE against result set columns in the left-most SELECT statement.
Attempt to memory map file pFile.
Attempt to move the phrase iterator to point to the next matching docid.
Attempt to obtain the exclusive WAL lock defined by parameters lockIdx and n.
Attempt to omit tables from the join that do not effect the result
Attempt to parse the given string into a Julian Day Number.
Attempt to parse the given string into a julian day number.
Attempt to read the database schema and initialize internal data structures for a single database file.
Attempt to reallocate p.
Attempt to reduce exponent.
Attempt to release up to n bytes of non-essential memory currently held by SQLite.
Attempt to seek the file-descriptor passed as the first argument to absolute offset iOff, then attempt to write nBuf bytes of data from pBuf to it.
Attempt to set a meaningful exception.
Attempt to set a system-lock on the file pFile.
Attempt to set the maximum database page count if mxPage is positive.
Attempt to set the page size of the destination to match the page size of the source.
Attempt to set the size of the memory mapping maintained by file  descriptor pFd to nNew bytes.
Attempt to start a new transaction.
Attempt to start a read transaction.
Attempt to store the results in register "target".
Attempt to take an exclusive lock on the database file.
Attempt to write a readonly database
Attempting to  do so results in an SQLITE_MISMATCH error.
Attempting to deallocate a static mutex results in undefined behavior.
Attempting to do so is an error (SQLITE_ERROR).
Attempting to use RBU with a zipvfs VFS stack that does not include the RBU layer results in an error.
Attempting to xSync() the database file causes an SQLITE_INTERNAL  error.
Attempts to read from the *-wal file or write to the database file do not perform any IO.
Attempts to subscript an array using a field name or list of field names.
Attoseconds are the smallest base unit
Attribute referenced by (PyObject *)name
Attribute referenced by (char *)name
Attribute with no content in it's text node
Attribute-lookup-based field names merely has to query the fields dictionary of the data-descriptor.
Attributes are the same as for ASN1Data, with the addition of +tagging+.
Auth callback return code
Authenticated as a normal user
Authenticated as an administrator
Authentication Switch Response
Authentication not yet checked
Authorization context
Authorization to use the function
Authorize against the opened passwords file.
Authorize the subquery
Auto address (NULL) is the last option on the array
Autocommit is disabled by a BEGIN statement and reenabled by the next COMMIT or ROLLBACK.
Autocommit mode is on by default.
Automatic index names generated from within sqlite3_declare_vtab() must have names that are distinct from normal automatic index names.
Automatic indices must be a covering index because the index will not be updated if the original table changes and the index and table cannot both be used if they go out of sync.
Automatically detect SLJIT_MIPS_R1
Automatically detect a good unit
Automatically expire on reset
Automatically generated.
Auxiliary data storage
Auxiliary database format error
Auxiliary functions needed by objects of 'Collator' class
Auxiliary functions needed by objects of 'IntlDateFormatter' class
Auxiliary functions needed by objects of 'MessageFormatter' class
Auxiliary functions needed by objects of 'NumberFormatter' class
Auxiliary functions needed by objects of 'Spoofchecker' class
Auxiliary functions needed by objects of 'Transliterator' class
Available backtrace slots
Available by default.
Available fault injectors.
Available for future enhancements
Available memory locations begin here
Available only when -p/-n command line option specified.
Available since 7.10.6
Available since 7.10.7
Available since 7.10.8
Available since 7.11.0
Available since 7.11.2
Available since 7.12.0
Available since 7.12.2
Available since 7.12.3
Available since 7.13.0
Available since 7.14.1
Available since 7.15.0
Available since 7.15.1
Available since 7.15.2
Available since 7.15.3
Available since 7.15.4
Available since 7.15.5
Available since 7.16.0
Available since 7.16.1
Available since 7.16.2
Available since 7.16.3
Available since 7.16.4
Available since 7.17.0
Available since 7.17.1
Available since 7.18.0
Available since 7.18.2
Available since 7.19.0
Available since 7.19.1
Available since 7.19.3
Available since 7.19.4
Available since 7.19.6
Available since 7.20.0
Available since 7.21.0
Available since 7.21.2
Available since 7.21.3
Available since 7.21.4
Available since 7.21.6
Available since 7.22.0
Available since 7.24.0
Available since 7.25.0
Available since 7.25.1
Available since 7.28.0
Available since 7.30.0
Available since 7.31.0
Available since 7.32.1
Available since 7.33.0
Available since 7.34.0
Available since 7.36.0
Available since 7.37.0
Available since 7.38.0
Available since 7.39.0
Available since 7.40.0
Available since 7.41.0
Available since 7.42.0
Available since 7.43.0
Available since 7.44.0
Available since 7.45.0
Available since 7.46.0
Available since 7.47.0
Available since 7.48.0
Available since 7.49.0
Average nEq values for keys not in aSample
Average number of tokens in each row
Average size of database rows, in pages
Avoid ::getlogin for security-related purposes.
Avoid a warning indicating that sqlite3Fts5ParserTrace() is unused
Avoid compiler warning
Avoid confusion from exponents so large that e might overflow.
Avoid consuming stack as this module may be used from signal handler
Avoid division by zero
Avoid failure state as much as possible.
Avoid leaking memory if malloc has failed.
Avoid memory leak when malloc fails
Avoid possible harmful underflow if exponent range asymmetric (true SSMIN may not underflow even if AU underflows)
Avoid realloc() most cases
Avoid soft deadlock: do not read if there is nothing to read from sockets and pipes.
Avoid sprintf, as that infringes on the user's name space.
Avoid strict aliasing.
Avoid temporary copies for arrays in Fortran order
Avoid this possibility by unmapping the db here.
Avoid this problem by forcing a call to malloc here, before we ever call malloc.
Avoid unnecessary sorts by preserving the ROWSET_SORTED flags where possible
B       (input) DOUBLE PRECISION The (1,2) and (2,1) elements of the 2-by-2 matrix.
B       (input) DOUBLE PRECISION The (1,2) element and the conjugate of the (2,1) element of the 2-by-2 matrix.
B       (input) DOUBLE PRECISION array, dimension (LDB, N) B contains the M by N matrix B.
B       (input) DOUBLE PRECISION array, dimension (LDB, N) B contains the N by N matrix B.
B       (input) DOUBLE PRECISION array, dimension (LDB,NW) The NA x NW matrix B (right-hand side).
B       (input) REAL The (1,2) and (2,1) elements of the 2-by-2 matrix.
B       (input) REAL The (1,2) element and the conjugate of the (2,1) element of the 2-by-2 matrix.
B       (input) REAL array, dimension (LDB, N) B contains the M by N matrix B.
B       (input) REAL array, dimension (LDB, N) B contains the N by N matrix B.
B       (input) REAL array, dimension (LDB,NW) The NA x NW matrix B (right-hand side).
B       (input/output) COMPLEX array, dimension (LDB,NRHS) On entry, the M-by-NRHS right hand side matrix B.
B       (input/output) COMPLEX array, dimension (LDB,NRHS) On entry, the N-by-NRHS matrix of right hand side matrix B.
B       (input/output) COMPLEX array, dimension (LDB,NRHS) On entry, the right hand side matrix B.
B       (input/output) COMPLEX*16 array, dimension (LDB,NRHS) On entry, the M-by-NRHS right hand side matrix B.
B       (input/output) COMPLEX*16 array, dimension (LDB,NRHS) On entry, the N-by-NRHS matrix of right hand side matrix B.
B       (input/output) COMPLEX*16 array, dimension (LDB,NRHS) On entry, the right hand side matrix B.
B       (input/output) DOUBLE PRECISION array, dimension (LDB,NRHS) On entry, the M-by-NRHS right hand side matrix B.
B       (input/output) DOUBLE PRECISION array, dimension (LDB,NRHS) On entry, the N-by-NRHS matrix of right hand side matrix B.
B       (input/output) DOUBLE PRECISION array, dimension (LDB,NRHS) On entry, the right hand side matrix B.
B       (input/output) REAL array, dimension (LDB,NRHS) On entry, the M-by-NRHS right hand side matrix B.
B       (input/output) REAL array, dimension (LDB,NRHS) On entry, the N-by-NRHS matrix of right hand side matrix B.
B       (input/output) REAL array, dimension (LDB,NRHS) On entry, the right hand side matrix B.
B      (input) COMPLEX array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input) COMPLEX*16 array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input) DOUBLE PRECISION array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input) REAL array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input/output) COMPLEX array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input/output) COMPLEX array, dimension (LDB,NRHS) On input, B contains the right hand sides of the least squares problem.
B      (input/output) COMPLEX*16 array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input/output) COMPLEX*16 array, dimension (LDB,NRHS) On input, B contains the right hand sides of the least squares problem.
B      (input/output) DOUBLE PRECISION array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input/output) DOUBLE PRECISION array, dimension (LDB,NRHS) On input, B contains the right hand sides of the least squares problem.
B      (input/output) REAL array, dimension ( LDB, NRHS ) On input, B contains the right hand sides of the least squares problem in rows 1 through M.
B      (input/output) REAL array, dimension (LDB,NRHS) On input, B contains the right hand sides of the least squares problem.
B      - DOUBLE PRECISION array of DIMENSION ( LDB, n ).
B tries to promote to exclusive but is blocked because of A's read lock.
B/2 is half a unit in the last place of the two numbers A and SAVEC.
B67 also points to the stack segment linkage control area, which is what we are really interested in.
BASE    (input) INTEGER The base of the machine.
BC for clever users - Deprecate me
BC for prior to bug fix #53425
BEGIN difference between normal normal fetch and _c
BEGINNING OF THE SMALL OBJECTS PAGE We keep all the small objects in this page.
BEL BS HT LF VT FF CR
BELOW: Height enforcement off
BER compressed integer
BETA    (input) COMPLEX All the diagonal array elements are set to BETA.
BETA    (input) COMPLEX*16 All the diagonal array elements are set to BETA.
BETA    (input) DOUBLE PRECISION The constant to which the diagonal elements are to be set.
BETA    (input) REAL The constant to which the diagonal elements are to be set.
BETA   (input) DOUBLE PRECISION Contains the off-diagonal element associated with the added row.
BETA   (input) REAL Contains the off-diagonal element associated with the added row.
BETA   - DOUBLE PRECISION.
BETWEENOTNULLIKECASCADELETECASECOLLATECREATECURRENT_DATEDETACH
BEWARE, these `goto error' on error, and PAD uses `n'.
BIG NOTE : THIS EMITS AN COMPILATION WARNING UNDER ZE2 - handle_function_call deprecated.
BINARY works for both UTF-8 and UTF-16, so add a version for each to avoid any unnecessary conversions.
BIT fields are specially handled.
BITSPERDIG*2*n+2 bits but bary_mul needs u2n+v2n
BITSPERDIG*2*n+4 bits but bary_mul needs u1n+v1n
BITSPERDIG*2*n+5 bits
BITSPERDIG*2*n+6 bits
BITSPERDIG*2*n+6 bits but bary_mul needs u3n+v3n
BITSPERDIG*2*n+8 bits
BLOB returned by geometry function
BNPtr may raise, so we can't use here
BN_CTX - is used in more difficult math.
BOOL can convert to almost anything
BOOL can convert to anything except datetime/void
BRAPOSZERO occurs before a possessive bracket group.
BRAZERO does the bracket, but carries on.
BRAZERO, BRAMINZERO and SKIPZERO occur just before a bracket group, indicating that it may occur zero times.
BS2000 has only a few fields in the rusage struct
BS2000 uses the EBCDIC char set instead of ASCII
BSD-derived systems set errno correctly Solaris returns -1 from getsockopt in case of error
BTALLOC_EXACT, BTALLOC_LT, or BTALLOC_ANY
BTree containing table to open
BUG: This method takes any number of arguments but appears to ignore them.
BUG: an nid or asn1 object should be returned, maybe.
BUG: currently, this only prints something if there is a value...
BUG: if user is running in silent mode and hits an error at the driver level when they use the PDO methods to call up the error information, they may get bogus information
BUG: need a way to figure out the maximum string size
BUG: should also map here accented letters used in non
BUG: take KDF as a block
BUG: we determine request or response type using presence of "Response" in element name.
BUGS - horribly slow lookups.
BUGS Currently does little or no validation of xml.
BUGS See XMLRPC_SetValueDateTime_ISO8601 () SEE ALSO XMLRPC_GetValueDateTime_ISO8601 () XMLRPC_SetValueDateTime_ISO8601 () XMLRPC_CreateValueDateTime () XMLRPC_VALUE SOURCE
BUGS There is currently no way to cleanup the global server gracefully.
BUGS there must be some.
BUT, to get into this branch of code, the name is too long, so we don't care.
BX     (output) COMPLEX array, dimension ( LDBX, NRHS ) On exit, the result of applying the left or right singular vector matrix to B.
BX     (output) COMPLEX*16 array, dimension ( LDBX, NRHS ) On exit, the result of applying the left or right singular vector matrix to B.
BX     (output) DOUBLE PRECISION array, dimension ( LDBX, NRHS ) On exit, the result of applying the left or right singular vector matrix to B.
BX     (output) REAL array, dimension ( LDBX, NRHS ) On exit, the result of applying the left or right singular vector matrix to B.
BX     (workspace) COMPLEX array, dimension ( LDBX, NRHS ) LDBX   (input) INTEGER The leading dimension of BX.
BX     (workspace) COMPLEX*16 array, dimension ( LDBX, NRHS ) LDBX   (input) INTEGER The leading dimension of BX.
BX     (workspace) DOUBLE PRECISION array, dimension ( LDBX, NRHS ) LDBX   (input) INTEGER The leading dimension of BX.
BX     (workspace) REAL array, dimension ( LDBX, NRHS ) LDBX   (input) INTEGER The leading dimension of BX.
BYTE_ORDER NOTE:  Please make sure that your system defines BYTE_ORDER.
BZip2 Resource Pointer
Back it up so that it points to the start of the position-list size field.
Back out changes but do no rollback transaction
Back pointer of the same list
Back up hash position, as it may change
Background thread, if any
Background: A "minor type" is a semantic value associated with a terminal or non-terminal symbols.
Backing up through an atomic group
Backreferences and subroutine calls are treated in the same way: we find the minimum length for the subpattern.
Backslash may introduce a single character, or it may introduce one of the specials, which just set a flag.
Backtrack path: match failed.
Backtrack path: match is required.
Backtracking over an extended grapheme cluster involves inspecting the previous two characters (if present) to see if a break is permitted between them.
Backup executor globals
Backup is not possible if the number of bytes of reserve space differ between source and destination.
Backup is not possible if the page size of the destination is changing and a codec is in use.
Backup process error code
Backup to previous group
Backward compatibility only
Backward compatibility with Python 2 NumPy pickles
Backward search is used.
Backward/Forward bit is fixed
Backwards Compatibility Hack:  Historical versions of SQLite accepted strings as column names in indexes and PRIMARY KEY constraints and in UNIQUE constraints.
Bad UTF-8 sequences are converted to valid Tcl_UniChars and processing continues.
Bad character set, but the user wants us to press on.
Bad compressed data stream
Bad connection - remove from pool
Bail if the queue is empty or if we are already playing the queue
Bail out early in this case.
Bail out if Python would already have called the right-hand operation.
Bail out if an unexpected error occurred.
Bail out if it's not an object.
Bail out if we can't recover
Balance the matrix (CWorkspace: none) (RWorkspace: need N)
Balance the matrix (Workspace: need N)
Balance the submatrix in rows K to L.
Balancing consists of applying a diagonal similarity transformation inv(D) * B * D to make the 1-norms of each row of B and its corresponding column nearly equal.
Balancing may reduce the 1-norm of the matrix, and improve the accuracy of the computed eigenvalues and/or eigenvectors.
Balancing routines are:  balance_quick() balance_deeper() balance_nonroot()
Baldwin and James Gillogly.
Barring over/underflow and assuming a guard digit in subtraction, all output quantities are correct to within a few units in the last place (ulps).
Base class - must be first
Base class containing output vars
Base class used by SQLite core
Base opcode of repeated opcodes         *
Base points to the start of the element while ptr points to the character following the element.
Base reg of Mod R/M is literal 0x00
Base reg of Mod R/M is literal 0x01
Base register for data coming from SELECT
Base register holding constraint values
Base register of data during check constraints
Base register where results are written
Base value used in internal calculations.
Base64 is useful for transferring binary data, such as an image.
Based on "Hacker's Delight"
Based on GD.pm code by Lincoln Stein for interfacing to libgd.
Based on IANA registry at the time of writing this code
Based on conf.c from UCB sendmail 8.8.8
Based on ext/standard/image.c
Based on netpbm fixes by Alan Cox.
Based on setproctitle.c from openssh-5.6p1
Based on the primary key values stored in change aRecord, calculate a hash key.
Based on the public domain algorithm found at http://www.isthe.com/chongo/tech/comp/fnv/index.html
Based on the tutorial.
Basic Windows implementation for the nice() function.
Basic codeunit error handling
Basic functionality so children can call parent::toUCallback()
Basic ripemd function
Basically , T_ICLASS shares table with the module
Basically the ocaml headers and the mac headers are redefining the same types.
Basically they are a means of creating code blocks that can be paused and resumed, much like threads.
Basically, the class is instantiable.
Be a bit stricter and not allow bools.
Be aware of this fact when comparing times with each other -- times that are apparently equal when displayed may be different when compared.
Be careful to use rb_thread_call_without_gvl().
Be compatible with libmysql.
Be sure not to reuse the +key+ and +nonce+ pair.
Be sure to benchmark and use this mechanism when `func()' consumes enough time.
Be sure to handle the old versions in array_setstate.
Be sure to handle the old versions in arraydescr_setstate.
Because 'alignment' is a power of two and integers are twos-complement, it is possible to use some simple bit-fiddling to do this.
Because IO::advise is only hint.
Because IPK never has AFF_TEXT
Because P2 is always a static string, it is impossible for the sqlite3VdbeMemCopy() to fail
Because RSA_PKCS1_OAEP_PADDING is used there is a restriction on the passwd_len.
Because a freeblock must be at least 4 bytes in size, any group of 3 or fewer unused bytes in the cell content area cannot exist on the freeblock chain.
Because an EXCLUSIVE lock is held on the database file, the log and log-summary files will be deleted.
Because buffering is disabled in the iterator, the inner loop strides will be the same throughout the iteration loop.
Because context.uc_stack.ss_sp and context.uc_stack.ss_size are not necessarily valid after makecontext() or swapcontext(), they are saved in these variables for later use.
Because converting to double and back to long can lead to losing precision we need second variable.
Because for a non-constant expression we need to rerun this code each time.
Because free space is allocated automatically, you usually don't need to use this method.
Because in this case it is not possible  for garbage data to be appended to the file, the nRec field is populated with 0xFFFFFFFF when the journal header is written and never needs to be updated.
Because it has already been copied.
Because it is used within an expression that is an argument to another macro  (sqliteMallocRaw), it is not possible to use conditional compilation.
Because it only performs INSERT operations, this is not required for an rbu vacuum handle.
Because of OP_RECURSE, the data are not necessarly known in compile time, thus we need a dynamic restore mechanism.
Because of how reduce has historically behaved in NumPy, the return type could be different, and it is the return type on which the reduction occurs.
Because of isCandidateForInOpt(p)
Because of large use of BLAS of level 3, DSYEVD needs N**2 more workspace than DSYEVX.
Because of large use of BLAS of level 3, SSYEVD needs N**2 more workspace than SSYEVX.
Because of the FTS3_NODE_PADDING bytes of padding, the following is  safe (no risk of overread) even if the node data is corrupted.
Because of the atomic-write  property of the host file-system, this is safe.
Because of the reference counting the user can't delete the strings the variables point to.
Because of the way auto-callout works during compile, a callout item is inserted between OP_COND and an assertion condition.
Because only the bound variables can point to our internal buffers, then separate or free only them.
Because positions are delta-encoded, the value of the previous position is needed in order to compute the value of the next position.
Because someone thought this was a good place to put timeval.
Because the Select object originates from a VALUES clause: (1) It has no LIMIT or OFFSET (2) All terms are UNION ALL (3) There is no ORDER BY clause
Because the change-counter page was just modified, unless the atomic-update optimization is used it is almost certain that the journal requires a sync here.
Because the free space is allocated automatically, this method returns 0 normally.
Because the index is full integer, we do not need to decref
Because the non-primary key "old.*" fields are omitted, no  SQLITE_CHANGESET_DATA conflicts can be detected or reported if a patchset is passed to the sqlite3changeset_apply() API.
Because the parser constructs pTblName from a single identifier, sqlite3FixSrcList can never fail.
Because the register does not control the string, it might be deleted without the register knowing it.
Because the sets are unaligned, we need to perform byte comparison here.
Because the supported  syntax is relatively simple, the whole tokenizer/parser system is hand-coded.
Because the types of the inputs were already checked, we use the casting rule 'unsafe' which is faster to calculate.
Because there is no consistency, we will define our own.
Because this function only inspects interior segment nodes (and never loads leaf nodes into memory), it is not possible to be sure.
Because this intermediate value only needs 36 to 37 bits and the other numbers are constants, the process has been reduced to just a few steps.
Because this is called with all arrays, we need to change the output if the kind of the scalar is different than that of the input and inplace is not on --- (thus, the input should be up-cast)
Because this module is responsible for selecting indices, you might also think of this module as the "query optimizer".
Because this operates based on multiple input strides, the 'stride' member of the npy_stride_sort_item would be useless and we simply argsort a list of indices instead.
Because we are moving code along, we must ensure that any pending recursive references are updated.
Because we can use one of the bytes of the length after we shifted as NUL termination.
Because we're not doing buffering, the strides are fixed throughout the looping.
Because writing to any of these nPage pages may damage the others, the journal file must contain sync()ed copies of all of them before any of them can be written out to the database file.
Before OP_ACCEPT there may be any number of OP_CLOSE opcodes, to close any currently open capturing brackets.
Before PCRE 8.34, we had to preserve the VT bit if it was previously set by something earlier in the character class.
Before a background thread is launched, variable bDone is set to 0.
Before a virtual table xCreate() or xConnect() method is invoked, the sqlite3.pVtabCtx member variable is set to point to an instance of this struct allocated on the stack.
Before any PRIMARY KEY or UNIQUE keywords are parsed.
Before any value is appended to the record, the affinity of the  corresponding column within index pIdx is applied to it.
Before calling OLE method, some kind of the ActiveX controls created with MFC should be initialized by calling IPersistXXX::InitNew.
Before calling PyType_Ready, initialize the tp_hash slot in PyArray_Type to work around mingw32 not being able initialize static structure slots with functions from the Python C_API.
Before calling sqlite3ExprDelete(), set the EP_Static flag.
Before calling this routine *pi must be initialized to the value of the previous position, or zero if we are reading the first position in the position-list.
Before checking for a possessive quantifier, we must skip over whitespace and comments in extended mode because Perl allows white space at this point.
Before checking that the live wal-index header has not changed since it was read, set Wal.minFrame to the first frame in the wal file that has not yet been checkpointed.
Before closing the log file, this function attempts to take an  EXCLUSIVE lock on the database file.
Before deleting the journal file, obtain a RESERVED lock on the database file.
Before doing anything else, call the xSync() callback for any virtual module tables written in this transaction.
Before doing so, abort any other statements this handle currently has active.
Before doing so, figure out if there is an explicit column specifier for the token.
Before doing so, we have to insert the character for the previous code.
Before doing this the RBU module takes an EXCLUSIVE lock on the database file, ensuring that there are no other active readers.
Before doing this, remember the cursor number for the original outer query FROM element in iParent.
Before entry with BETA non-zero, the incremented array Y must contain the vector y.
Before entry,  the leading  m by n part of the array  B must contain  the  right-hand  side  matrix  B,  and  on exit  is overwritten by the solution matrix  X.
Before entry,  the leading  m by n part of the array  B must contain the matrix  B,  and  on exit  is overwritten  by the transformed matrix.
Before entry, the incremented array X must contain the m element vector x.
Before entry, the incremented array X must contain the n element right-hand side vector b.
Before entry, the incremented array X must contain the n element vector x.
Before entry, the incremented array X must contain the vector x.
Before entry, the incremented array Y must contain the n element vector y.
Before entry, the leading  m by n  part of the array  C must contain the matrix  C,  except when  beta  is zero, in which case C need not be set on entry.
Before entry, the leading m by n part of the array A must contain the matrix of coefficients.
Before it is called, the partially compiled regex must be temporarily terminated with OP_END.
Before it returns, both have been advanced so  as to point to the next value in the record.
Before populating the accumulator registers, clear the column cache.
Before returning, *paPoslist is set to point to the position lsit  associated with pPhrase.
Before returning, *pnOp is set to the number of entries in the returned array.
Before returning, *pnVal is incremented by the current cache hit or miss count, according to the value of eStat.
Before returning, *pp is set to point 1 byte past the end of the value written.
Before returning, *pzAff is set to point to a buffer containing a copy of the column affinity string of the index allocated using sqlite3DbMalloc().
Before returning, *pzBuffer is set to the first byte passed the portion of the buffer copied into by this function.
Before returning, *pzBuffer is set to the first byte past the portion of the buffer copied into by this function.
Before returning, all pointer-map entries corresponding to pages  that the new child-page now contains pointers to are updated.
Before returning, output parameter (*ppExpr) is set to point to the Expr object corresponding to element iElem of the vector.
Before returning, page pTo is reinitialized using btreeInitPage().
Before returning, set *piEof to the offset immediately following the last byte written to the file.
Before returning, set *pnSz to the number of bytes in the position list, and *pbDel to true if the delete flag is set, or false otherwise.
Before returning, set pzOut to point to a new buffer containing a nul-terminated, dequoted copy of the gobbled word.
Before returning, this function always sets *pbFirst to 1 and *piPrev to the value of parameter iVal.
Before running the loop, check for UTF-8 and whether CRLF is a valid newline sequence.
Before the comparison operation, affinity zAff is to be applied to the pRight values.
Before the first write, give the VFS a hint of what the final file size will be.
Before this function returns, it is updated to contain a copy of zTerm/nTerm.
Before this function returns, output parameter *pnExtract is set to the number of values appended to the record.
Before using MustBeInt, make a copy of the value.
Before using, initialize the state by using init_genrand(mt, seed) or init_by_array(mt, init_key, key_length).
Before using, initialize the state by using init_genrand(seed) or init_by_array(init_key, key_length).
Before we can access the substrings, we must extract the table for translating names to numbers, and the size of each entry in the table.
Before writing anything to the database file, this lock is upgraded to an EXCLUSIVE lock.
Before, it was just self for a single ellipsis.
Begin AFP Locking *********************************  AFP is the Apple Filing Protocol.
Begin Named Semaphore Locking ************************  Named semaphore locking is only supported on VxWorks.
Begin Proxy Locking ********************************  Proxy locking is a "uber-locking-method" in this sense:  It uses the other locking methods on secondary lock files.
Begin Unique File ID Utility Used By VxWorks ***************  On most versions of unix, we can get a unique ID for a file by concatenating the device number and the inode number.
Begin a loop that will extract all source rows in GROUP BY order.
Begin a read transaction on the WAL.
Begin a read transaction on the database.
Begin a transaction and increment the schema cookie.
Begin a transaction and take an exclusive lock on the main database file.
Begin a transaction for database iDb.
Begin a write-transaction on the specified pager object.
Begin accepting and shifting new tokens.
Begin aggregate queries without GROUP BY:
Begin by allocating the tables we will need.
Begin by generating some termination code at the end of the vdbe program
Begin by rolling back records from the main journal starting at PagerSavepoint.iOffset and continuing to the next journal header.
Begin constructing a new table representation in memory.
Begin control #defines
Begin destructor definitions
Begin dot-file Locking ******************************  The dotfile locking implementation uses the existence of separate lock files (really a directory) to control access to the database.
Begin file btreeInt.h
Begin file callback.c
Begin file complete.c
Begin file fts3_aux.c
Begin file fts3_expr.c
Begin file fts3_hash.c
Begin file fts3_hash.h
Begin file fts3_icu.c
Begin file fts3_porter.c
Begin file fts3_snippet.c
Begin file fts3_tokenize_vtab.c
Begin file fts3_tokenizer.c
Begin file fts3_tokenizer.h
Begin file fts3_tokenizer1.c
Begin file fts3_unicode.c
Begin file fts3_unicode2.c
Begin file fts3_write.c
Begin file keywordhash.h
Begin file memjournal.c
Begin file mutex_noop.c
Begin file mutex_unix.c
Begin file mutex_w32.c
Begin file os_common.h
Begin file os_setup.h
Begin file sqlite3ext.h
Begin file sqlite3rbu.c
Begin file sqlite3rbu.h
Begin file sqlite3rtree.h
Begin file sqlite3session.c
Begin file sqlite3session.h
Begin file sqliteInt.h
Begin file sqliteLimit.h
Begin file sqliteicu.h
Begin file tokenize.c
Begin file treeview.c
Begin file vdbeblob.c
Begin file vdbesort.c
Begin file vdbetrace.c
Begin file whereInt.h
Begin file wherecode.c
Begin file whereexpr.c
Begin filters function
Begin flattening the iFrom-th entry of the FROM clause  in the outer query.
Begin flock Locking ********************************  Use the flock() system call to do file locking.
Begin generating code.
Begin generating the code that will insert the table record into the SQLITE_MASTER table.
Begin iterating through the set of documents in index pIdx matched by the MATCH expression passed as the first argument.
Begin main iteration loop
Begin makeheaders token definitions
Begin padding with a 1 bit:
Begin popping the stack until we enter a state where it is legal to shift the error symbol, then shift the error symbol.
Begin reading at this offset
Begin reading this far into payload
Begin rotate function
Begin scanning through hash table entries.
Begin scannning through the ephemeral table.
Begin the database scan
Begin the database scan.
Begin the search at this node
Begin with this column of pList
Begin writing at this offset into the file
Beginning here are the reduction cases.
Beginning in 2.0.12 truecolor is indicated by the initial 2-byte signature.
Beginning of RBU VFS shim methods.
Beginning of shared memory
Beginning of the body of this loop
Beginning of the header.
Beginning of the shared memory
Begins a ripemd128 operation, writing a new context.
Begins a ripemd160 operation, writing a new context.
Begins a ripemd256 operation, writing a new context.
Begins a ripemd320 operation, writing a new context.
Begins an MD4 operation, writing a new context.
Begins an MD5 operation, writing a new context.
Begins an SHA1 operation, writing a new context.
Begins an SHA224 operation, writing a new context.
Begins an SHA256 operation, writing a new context.
Begins an SHA384 operation, writing a new context.
Begins an SHA512 operation, writing a new context.
Behave like without the Accelerator
Behavior when the string is invalid or out of range is not well defined, but will probably result in Jan 1, 1970 (0) being passed.
Bell filter, default radius 1.5
Below are some examples.
Below is reset before and after each recursion.
Below this point is the implementation of the fts5_decode() scalar function only.
Below this point is the implementation of the integrity-check  functionality.
Below this point the variables are used when evaluating the expression.
Below, (bytes + read_bytes)  is pointer arithmetic.
Best case scenario, user behaved
Best choice for natural merge cut-off.
Best index found so far
Best match found so far
Best score of columns checked so far
Best snippet score found so far
Best to avoid the whole thing.
Better keep it the same.
Better to avoid the added complexity and just omit cost adjustments to SKIPSCAN loops.
Beware of this difference.
Beware that SHOW statements bypass the PS framework and thus they send no metadata at prepare.
Beware, if the data has been truncated, the final CR could have been followed by a LF.
Bias search to the high end
Bidiagonalize A (CWorkspace: need 2*M+N, prefer 2*M+(M+N)*NB) (RWorkspace: M)
Bidiagonalize A (CWorkspace: need 2*N+M, prefer 2*N+(M+N)*NB) (RWorkspace: need N)
Bidiagonalize A (Workspace: need 3*M+N, prefer 3*M+(M+N)*NB)
Bidiagonalize A (Workspace: need 3*N+M, prefer 3*N+(M+N)*NB)
Bidiagonalize L in A (CWorkspace: need 3*M, prefer 2*M+2*M*NB) (RWorkspace: need M)
Bidiagonalize L in A (CWorkspace: need M*M+3*M, prefer M*M+2*M+2*M*NB) (RWorkspace: need M)
Bidiagonalize L in A (Workspace: need 4*M, prefer 3*M+2*M*NB)
Bidiagonalize L in A (Workspace: need M*M+4*M, prefer M*M+3*M+2*M*NB)
Bidiagonalize L in WORK(IL) (CWorkspace: need M*M+3*M, prefer M*M+2*M+2*M*NB) (RWorkspace: need M)
Bidiagonalize L in WORK(IL) (Workspace: need M*M+4*M, prefer M*M+3*M+2*M*NB)
Bidiagonalize L in WORK(IL).
Bidiagonalize L in WORK(IU), copying result to U (Workspace: need M*M+4*M, prefer M*M+3*M+2*M*NB)
Bidiagonalize R in A (CWorkspace: need 3*N, prefer 2*N+2*N*NB) (RWorkspace: need N)
Bidiagonalize R in A (Workspace: need 4*N, prefer 3*N+2*N*NB)
Bidiagonalize R in A (Workspace: need N*N+4*N, prefer N*N+3*N+2*N*NB)
Bidiagonalize R in A.
Bidiagonalize R in VT, copying result to WORK(IR) (Workspace: need N*N+4*N, prefer N*N+3*N+2*N*NB)
Bidiagonalize R in WORK(IR) (CWorkspace: need N*N+3*N, prefer M*N+2*N+2*N*NB) (RWorkspace: need N)
Bidiagonalize R in WORK(IR) (CWorkspace: need N*N+3*N, prefer N*N+2*N+2*N*NB) (RWorkspace: need N)
Bidiagonalize R in WORK(IR) (Workspace: need N*N+4*N, prefer N*N+3*N+2*N*NB)
Big 5 mapping: use "JIS-8 half-width katakana" coding from 8-bit characters.
Big-endian salt values
Bignum objects are created automatically when integer calculations would otherwise overflow a Fixnum.
Bignum objects hold integers outside the range of Fixnum.
Binary format - ibf_object_header - ibf_object_xxx (xxx is type)
Binary representation of iNew
Bind a blob value to an SQL statement variable.
Bind a text or BLOB value.
Bind the PRIMARY KEY values from the change passed in argument pChange to the SELECT statement passed as the first argument.
Bind the current output segment id to the index-writer.
Bind the new.* PRIMARY KEY values to the SELECT statement.
Bind the rbu_rowid value to column _rowid_
Bind the stream to a local address
Bind to a local IP address.
Bind to all addresses
Bind values to the DELETE statement.
Bind values to the UPDATE statement.
Bind values to this statement
Binding to these vars invalidates VM
Bit 0x40 is set if the character is non-alphanumeric and can be used in an  SQLite identifier.
Bit 0x40 is set if the character non-alphanumeric and can be used in an  SQLite identifier.
Bit 1 is set if the second leftmost column value is required, and so on.
Bit reverse, then initial permutation, then expansion.
Bit values for PgHdr.flags
Bit values for the JsonNode.jnFlag field
Bitfield flags for P5 value in various opcodes.
Bitmap of additional columns
Bitmap of columns used for indexing
Bitmap representation
Bitmask identifying table iTab
Bitmask of FROM clause terms referenced by pExpr
Bitmask of all WhereLoop objects in this path
Bitmask of all indexable tables in the clause
Bitmask of other loops that must run first
Bitmask of phrases already covered
Bitmask of phrases covered by snippet
Bitmask of phrases seen by BestSnippet()
Bitmask of schema verified databases
Bitmask of tables referenced by pExpr
Bitmasks for the operators on WhereTerm objects.
Bitmasks used by sqlite3GetVarint().
Bits are numbered starting with 1.
Bits are: 0x01: Clear for root page, otherwise set.
Bits are: 0x01: Clear if leaf is also the root page, otherwise set.
Bits for mm_list() and mm_lsub()
Bits for the mask used as the idxNum value by xBestIndex/xFilter.
Bits of the Pager.doNotSpill flag.
Bits of the addRemove argument determines what operation to do.
Bits of the sqlite3.dbOptFlags field that are used by the sqlite3_test_control(SQLITE_TESTCTRL_OPTIMIZATIONS,...) interface to selectively disable various optimizations.
Bits that make up the "idxNum" parameter passed indirectly by  xBestIndex() to xFilter().
Bitvec of pages already played back
Bitvec to ensure pages played back only once
Bitwise OR or concatenate
Bitwise operations for openssl BIGNUMs.
Bitwise-or together the desired SESSION_CACHE_* constants to set.
Black magic: If the SQLITE_RecoveryMode flag is set, then consider the schema loaded, even if errors occurred.
Blob value for "root" field
Blob values are unchanged and are afterwards simply interpreted as text.
Blob values: A varint containing the number of bytes in the value, followed by a buffer containing the value itself.
Block "to" now defines "var" via the pi statement, so add it to the "def" set.
Block Reordering (saves one JMP on each "for" loop iteration) It is disabled for some cases (ZEND_FREE) which may break register allocation.
Block SIGIO in this thread to make it more likely that it will be delivered to a goroutine.
Block all signals to the exception handler thread
Block containing newline information
Block id for new block
Block id of child node to descend to
Block id of first leaf node
Block mappings:  a simple key: a value   # The KEY token is produced here.
Block number of first allocated block
Block number of last allocated block
Block of regs holding rowid+data being inserted
Block size for compression algorithm
Block size: 0 - The block is a free_block, with a different size member.
Blocks allocated for leaf nodes
Blocks until all writing operations to the disk have been finished.
Bonus points if the text encoding matches
Book-keeping and  set up the computation tree.
Book-keeping and  setting up the computation tree.
Book-keeping and setting up some constants.
Boolean array - true for PK columns
Boolean array - true if column is in PK
Boolean does not currently, but should at least report the error.
Boolean indicating whether OpenSSL is FIPS-enabled or not
Boolean value cast to string type is 5 characters max for string 'False'.
Booleans in Python are implemented as a subclass of integers, so PyBool_Check must be called before PyInt_Check.
Borrow that ord_needle buffer to avoid repeatedly tolower()ing needle
Borrowed from ITER_NEXT macro
Borrowed from Numarray
Borrowed from SYS/SOCKET.H
Borrowed references to item and new_key
Both  provide read/write access to the contents of *pHash.
Both *pMem1 and *pMem2 contain string values.
Both II and III resolve hash collisions via linear probing.
Both LHS and RHS expressions may modify the same data structure, and the modification during RHS evaluation may dangle the pointer to the result of the LHS evaluation.
Both X and Y have COLLATE operators.
Both a and b are zero.
Both are UTF16, but with different byte orders
Both are treated equivalently.
Both arguments are registers.
Both ascending and descending are possible.
Both calls and BPr instructions shall not pass this point.
Both cannot be switched on.
Both client and server TLS connections are supported, SSLSocket and SSLServer may be used in conjunction with an instance of SSLContext to set up connections.
Both client and server sessions are added to the session cache
Both data and keys are compared by using user-supplied callbacks.
Both datetime and timedelta are stored as int64, so they can share value variables.
Both for OP_COND, OP_SCOND.
Both formats are cool
Both forms return the current setting.
Both issues are explained below in details.
Both key and val must be 31-bit integers, since we use tag bits.
Both of these can be found by considering only the corners of the box.
Both operands use the same collating sequence OR 5b.
Both or neither are NULL
Both outer and inner reduce loops have stride 0
Both parameters are optional.
Both path args have to be absolute.
Both read and were successful, adjust counters
Both readers can use the same hash table and mapping section to get the correct result.
Both sides of the comparison are columns.
Both size flags cannot be switched on.
Both steps are optional.
Both tRNS and true alpha are supported.
Both tables must have the same INTEGER PRIMARY KEY
Both the begin and the end of the Range must be Numeric, otherwise nil is returned.
Both the input and output doclists are delta encoded.
Both the memory that is free by Mem.xDel and the Mem.zMalloc allocation are freed.
Both the original table entry and all indices are removed.
Both the request and the response may consist of arbitrarily long, arbitrarily nested values.
Both the schema-version and the user-version are 32-bit signed integers stored in the database header.
Both these functions obtain the source database handle mutex and the mutex associated with the source BtShared  structure, in that order.
Both this module and the pager code use this trick (clearing the first byte of the page 'extra' space to invalidate the Btree layers cached parse of the page).
Both this routine and Lookup() attempt to find a page in the in-memory cache first.
Both type1 and type2 must be either NPY_DATETIME or NPY_TIMEDELTA.
Both values must be blobs.
Both values overflowed and have the same sign, so a numeric comparison would be inaccurate
Both will  be NULL for a primary key or an index that is created to satisfy a UNIQUE constraint.
Bottom of the rowid change constraint check
Bounce call to sigpanic through asm that makes it look like we call sigpanic directly from the faulting code.
Bounding box coordinates
Bounding box for pNode
Bounds of global page cache memory
Bounds of pagecache malloc range
Bounds of source pixels window
Bounds-check this index
Boutell almost a simple global replace from T.
Boxes themselves can be contained within "super-boxes".
Boyer-Moore search: copied from regex.c
Boyer-Moore-Horspool search
Boyer-Moore-Horspool search (ignore case)
Boyer-Moore-Horspool search applied to a multibyte string
Boyer-Moore-Horspool search applied to a multibyte string (ignore case)
Braced expressions count 0
Braces are required because the
Brackets should always be closed
Brackets with fixed upper repeat limits are compiled as a number of copies, with the optional ones preceded by BRAZERO or BRAMINZERO.
Branch instructions are expesive for all CPUs, so we avoid taken branches on the matching path.
Branch to ARM code is not optimized yet.
Branch to Thumb code has not been optimized yet.
Branches that are not required for the correct answer but which only help to obtain the correct answer faster are marked with special comments, as a hint to the mutation tester.
Brand new connection: Init and update the next_ping in the connection
Break at the start and end of text (pretty obviously).
Break down the 400 year cycle to get the year and day within the year
Break intentionally missing
Break out of alternation loop
Break out of for loop
Break out of the loop and lay out the current line.
Break out when the end-tag is found
Break the OR clause into its separate subterms.
Break the loop if the pattern is anchored or if we have passed the end of the subject.
Breaking this would cause several backward compatibility issues already on Python 2.6.
Breaks the name returned into multiple lines if longer than 80 characters.
Breakup of pTerm into subterms
Brigades will dispose of their buckets
Bring in standard I/O and string manipulation functions
Bring in the gd library functions
Bringing initial option settings outside can help speed up starting point checks.
Broad-cast the arrays to a common shape
Broadcast 'src' to 'dst' for raw iteration
Broadcast all arrays to each other, index array at the end.
Broadcast all the unspecified dimensions normally
Broadcast the one element from the sequence to all the outputs
Broadcast the wheremask to 'dst' for raw iteration
Broadcast to the destination shape if necessary.
Broken out into a separate routine to avoid unnecessary register saves on entry to sqlite3Error().
Bruno Haible has graciously given permission to use this algorithm.
BtCursor.info is a cache of the information in the current cell.
BtShared.nRef is the number of connections currently sharing this database file.
BtShared.pageSize bytes of space for tmp use
Btree cursor used for pIndex
Btree cursor used for pTab
Btree database to read cookie from
Btree handle holding this lock
Btree page of current entry
Btree this cursor belongs to
Btree to change journal mode of
Btree with currently open write transaction
Btree.inTrans may take one of the following values.
Buffer (a/n) is assumed to contain a list of serialized varints.
Buffer buf may already have some data.
Buffer containing current poslist
Buffer containing leaf data
Buffer containing next term
Buffer containing old.* record
Buffer containing page data
Buffer containing page-index
Buffer containing position list
Buffer containing poslist
Buffer containing prefix to match
Buffer containing previous term
Buffer containing previous term on page
Buffer containing previous term written
Buffer containing root node
Buffer containing segment interior node
Buffer containing serialized structure
Buffer containing string or blob data
Buffer containing term
Buffer containing token
Buffer contains translations other than CRLF
Buffer for error messages, and its allocated size.
Buffer for matchinfo data
Buffer for received data
Buffer for the lead byte of DBCS when converting from DBCS to Unicode
Buffer in which to accumlate changeset
Buffer in which to assemble leaf page
Buffer in which to assemble pgidx
Buffer like gray8 gray16 or rgb8 will require some tweak and can be done in this function (called from the autocrop function.
Buffer must be 33 bytes.
Buffer object for the incremental building of string data.
Buffer of at least *pnList items to use
Buffer of at least nBuf bytes
Buffer overflow attack
Buffer remaining input
Buffer to a append to
Buffer to accumulate new.* record in
Buffer to append text to
Buffer to assemble frame-header in
Buffer to assemble frame-headers in
Buffer to assemble wal-header in
Buffer to deserialize from
Buffer to fold text into
Buffer to gobble string/bareword from
Buffer to hold apValue/zTab/abPK/
Buffer to load WAL header into
Buffer to load data from wal file into
Buffer to load terms into
Buffer to merge doclists in
Buffer to read data from
Buffer to read position list from
Buffer to serialize record into
Buffer to write page data to
Buffer used for any other block
Buffer used to hold a poslist
Buffer used to hold most recent term
Buffer zInput, length nInput, contains the contents of a quoted string that appeared as part of an fts3 query expression.
Buffer zTemp: Contains copies of all tokens.
Buffering is never used here, but in case someone plugs it in somewhere else, set the type correctly then.
Buffering must be enabled for casting/conversion if copy wasn't specified.
Buffers p1 and p2 contain doclists.
Bug in libxml prevents a next in certain cases when positioned on end of element
Bug-72524: revert value_sz from PHP_OCI_PIECE_SIZE to 0.
Build CFG, Step 1: Find basic blocks starts, calculate number of blocks
Build CFG, Step 2: Build Array of Basic Blocks
Build CFG, Step 3: Calculate successors
Build CFG, Step 4, Mark Reachable Basic Blocks
Build a brand new string with the expanded token
Build a copy of the string (in dest) with the escaped characters translated,  and generate the regex from that.
Build a list of XY 2-D arrays, shape (N,2), to which a list of K arrays is concatenated.
Build a list of XY 2-D arrays, shape (N,2), to which a list of path code arrays is concatenated.
Build a mapping from subpattern numbers to their names.
Build a ruby array of the corresponding values and yield it to the associated block.
Build a trigger step out of an INSERT statement.
Build an iterator tracking a multi-index, in C order.
Build and compile a statement to execute:
Build environment pair list
Build the Trigger object
Build the fractional part.
Build the new shape and strides for the main data
Build the new strides
Build the new strides and shape
Build the persistent_script structure.
Build the special-case PHP_SELF variable for the CGI version
Build the special-case PHP_SELF variable for the CLI version
Build the whole number.
Build up a string to make the dictionary
Build up a string to make the list
Build up text to return here
Build up the size of the concatenation axis
Building a VDBE program
Building an imposter table
Builds on Solaris x86.
Built-in coalesce() or ifnull()
Built-in count(*) aggregate
Built-in length() function
Built-in typeof() function
Built-in unlikely() function
Bulk memory available for allocation
Bulk memory used by pcache-local
Bump the 'curx' and 'cury' to point to the next pixel
Bump the current X position
Bump up used length counter.
Bundles should be aligned modulo this number of bytes.
Business Days - was removed but a gap still exists in the enum
Business day calendar object
Busy handler for eMode2
Busy handler timeout, in msec
But  if we are unlucky, another process that is holding a lock might get paged out or take a page-fault that is time-consuming to resolve,  during the few nanoseconds that it is holding the lock.
But 4 and 5 byte types use so much data space that there can only be 4096 and 32 of them, respectively.
But 5 leading slashes is a  common error, we are told, so we handle it as a special case.
But 8_3_NAMES is only used for FAT filesystems and permissions do not matter there, so just use the default permissions.
But I/O is more efficient if it occurs in page-sized blocks where each block is aligned on a page boundary.
But LFS does not exist in the kernel in Red Hat 6.0, so the code won't work.
But MSVC chokes on ((void*)(X)).
But OP_Column is measurably faster by skipping the subsequent conditional, which is always true.
But OpenSSL 1.1.0 removed the knob and it is always enabled.
But SKIPSCAN is sufficiently uncommon, and this adjustment is sufficient minor, that it is very difficult to construct a test case where the extra code would improve the query plan.
But SQLite will only request a recursive mutex in cases where it really needs one.
But _XOPEN_SOURCE define causes problems for Mac OS X, so omit it.
But a 64-bit integer can be used at compile-time if desired.
But a NULL pointer always differs from a non-NULL pointer.
But a TK_SELECT might be either a vector or a scalar.
But a single Win95 reader will lock out all WinNT readers and a single WinNT reader will lock out all other Win95 readers.
But again, this error is caught long before reaching this point.
But allow the walk to continue with sibling nodes.
But as N is rarely more than 1, this should not be a problem.
But as long as you do not compile with SQLITE_OMIT_AUTOINIT this routine will be called automatically by key routines such as sqlite3_open().
But as the name insists, its characters in the range of ASCII are considered as ASCII characters.
But as this is a deprecated interface, we will not bother to check for that condition.
But because of quirks of some compilers, we have to specify the value in the less intuitive manner shown:
But because the dummy.opcode is 0, dummy will never be written to.
But before calling APIs that follow, extension should check the sqlite3_libversion_number() to make sure they are dealing with a library that is new enough to support that API.
But beginning with version 3.7.0, we changed this so that sqlite3_reset() would be called automatically instead of throwing the SQLITE_MISUSE error.
But btree.c is getting too big and we want to break it down some.
But by initializing the checksum to random value which is different for every journal, we minimize that risk.
But by separating it out, the code will be automatically omitted from static links that do not use it.
But by the time the value is used, the original register may have been used, invalidating the underlying buffer holding the text or blob value.
But by using this automatically generated code, the size of the code is substantially reduced.
But continue to take the absolute value of the default cache size of historical compatibility.
But do not delete the JsonParse object itself.
But do not free the associated  memory allocation.
But do not upgrade from less than 3 to 4, as that will corrupt any preexisting DESC index.
But doing so makes it difficult to detect any OOM error.
But don't leave a totally empty module because some compilers barf at that.
But don't make them a single int bitfield
But due to a coding error in versions of SQLite prior to 3.6.0, databases with freelist trunk pages holding more than usableSize/4 - 8 entries will be reported as corrupt.
But each instance of this object points to the same BtShared object.
But for all other platforms, it is highly recommended that applications neither read nor write this variable.
But for any other kind of expression, this routine make a copy of the result set column as the argument to the TK_AS operator.
But for internal pages, that has not yet been done, so do it now
But for maximum safety, mutexes should be enabled.
But for that to be true, the next byte must contain either whitespace, an open or close parenthesis, a quote character, or EOF.
But for the static  mutex types, the same mutex is returned on every call that has the same type number.
But for the static mutex types, the same mutex is returned on every call that has the same type number.
But for things like temporary table (which will be deleted when the power is restored) we don't care.
But generally, doing both brings us on the safe track at least in NTS build.
But go ahead and call fstat() to validate the file descriptor as we need a method to provoke a failure during coverate testing.
But if (due to a coding error elsewhere in the system) it does get called, just return the same error code without doing anything.
But if 1 is returned when it should not be, then incorrect answers might result.
But if SQLITE_MAX_VARIABLE_NUMBER is greater than 32767 we have to make it 32-bit.
But if SQLITE_MUTEX_OMIT is defined, then pcache1EnterMutex() is a no-op, so we have to initialize the local variable here.
But if a term also satisfies case 1 (such as B) we know that the optimizer will always prefer case 1, so in that case we pretend that case 3 is not satisfied.
But if a term also statisfies case 1 (such as B) we know that the optimizer will always prefer case 1, so in that case we pretend that case 2 is not satisfied.
But if it is, then the automatic journal playback and recovery mechanism will deal with it under an EXCLUSIVE lock where we do not need to worry so much with race conditions.
But if the -s option has been given, we skip this optimization, since on some systems, stat() reports zero size for raw disk partitions.
But if the VDBE has just been set to run but has not actually executed any instructions yet, leave the main database error information unchanged.
But if the WHERE_ONETABLE_ONLY flag is set, then we should only generate code for the first table in pTabList and assume that any cursors associated with subsequent tables are uninitialized.
But if the WHERE_OR_SUBCLAUSE flag is set, then we should only generate code for the first table in pTabList and assume that any cursors associated with subsequent tables are uninitialized.
But if the co-routine ends with OP_EndCoroutine, jump immediately to P2.
But if the coroutine launched by this instruction ends with EndCoroutine, then jump to P2 rather than continuing with the next instruction.
But if the cursor advance was successful, jump immediately to P2.
But if the cursor backup was successful, jump immediately to P2.
But if the file being opened is a WAL or regular journal file, then  this function queries the file-system for the permissions on the  corresponding database file and sets *pMode to this value.
But if the operating system crashes or there is an abrupt power failure when synchronous is off, the database could be left in an inconsistent and unrecoverable state.
But if the parent term was originally TERM_LIKE, then the parent gets TERM_LIKECOND instead.
But if the tables have indices and there are terms in the WHERE clause that refer to those indices, a complete table scan can be avoided and the code will run much faster.
But if the value is zero, make it 65536.
But if there was previously a read-lock, do not invoke the busy handler - just return SQLITE_BUSY.
But if you get a 0 or 1 return, then you can be sure the expressions are the same.
But if you want to print or log the pid, then you need to dereference the handle and get the pid.
But in SQLite, the table can now be identified by a database name, a dot, then the table name: ID.ID.
But in fact, mem1.u.i will never actually be used uninitialized, and doing  the unnecessary initialization has a measurable negative performance impact, since this routine is a very high runner.
But in scenarios where large amounts of data need to be transferred it might be desirable to have some kind of streaming support available.
But in the common case, they are usually small and no file I/O needs to occur.
But in this case the result will be x itself anyway, regardless of the choice of a.
But initializing the memory prevents valgrind from complaining, so we are willing to take the performance hit.
But inspect method doesn't know it.
But instead of invoking a callback for each row, malloc() for space to hold the result and return the entire results at the conclusion of the call.
But instead of running the code, it invokes the callback once for each instruction.
But it also reduces the size of the library by 738 bytes on ix86.
But it does destroy memory structures of the indices and foreign keys associated with  the table.
But it is a useful visualization aid.) Then a WherePath object is a path through the graph that visits some or all of the WhereLoop objects once.
But it is identical, so skip it
But it is important to pass the correct size to  insertCell(), so reparse the cell now.
But it is not accurate explanation.
But it is safe to invoke this routine on when SQLite is already shut down.
But it is the best that can be done under the circumstances.
But it is useful for testing.
But it might also be SQLITE_IOERR.
But it needs to be an integer before we can do the seek, so convert it.
But it needs to be an integer before we can do the seek, so covert it.
But it preserves the Mem.zMalloc memory allocation.
But it protects from several strange hazard if /dev/urandom is not a urandom device.
But it seems simpler and safer to simply not reuse the registers.
But it turns out that the current implementation happens to never call this routine with a NULL pointer, so we mark the NULL test with ALWAYS().
But it uses different struct
But its access pattern is the same as header meta values, and so it is convenient to read it from this routine.
But just in case, use snprintf() and make sure the buffer is zero-terminated
But just read the header of a zero-length byte, don't read the body, there is no such.
But just to make sure it still operates correctly, verify that its count agrees with our  internal count when using count(*) and when the total count can be expressed as a 32-bit integer.
But later on, nLimit and nOffset become the memory locations in the VDBE that record the limit and offset counters.
But leave the (no-op) call to PendingTermsFlush() in in case that changes.
But let's have it for completeness.
But libc and kernel accept more larger value.
But looking at the Cannon powershot's files, inches is the only sensible value.
But make pCellData point to the lower bound.
But many SQL implementations do.
But many elements may point to one watchpoint.
But modify the name by adding an "sqlite_altertab_" prefix.
But multiple resets are harmless.
But no harm is done by this.
But no other flexible types
But no sync operations occur for an ordinary commit in NORMAL mode with WAL.
But node pLeft sometimes already has a node number.
But not if we are in secure-delete mode.
But now it has been modified by a transaction on the source pager.
But odds are that we will be inserting new entries at the end soon afterwards so the nearly empty page will quickly fill up.
But on a BEFORE trigger, we do not know what the unique ID will be (because the insert has not happened yet) so we substitute a rowid of -1
But on first evaluation, the P4 operand is automatically converted into an sqlite3_context object and the operation changed to this OP_Function opcode.
But on the 10th an subsequent retries, the delays start becoming longer and longer,  so that on the 100th (and last) RETRY we delay for 21 milliseconds.
But on the 10th an subsequent retries, the delays start becoming longer and longer,  so that on the 100th (and last) RETRY we delay for 323 milliseconds.
But on the other hand, this routine is never called if we are already in an error state.
But one may not go from shared to exclusive or from exclusive to shared.
But one should test the page skipping logic  by setting PENDING_BYTE low and running the entire regression suite.
But only do the conversion if it is possible without loss of information and return the revised type of the argument.
But only two of them are actually used
But opposed to the time an ASN.1 type is to be encoded, when parsing them it is not possible to deduce the "real type" of tagged values.
But other modules are free to use it too, as long as no rollbacks are happening.
But overall it is faster.
But pName should never be NULL.
But pRight is followed, so pVector can be attached to pRight to cause this node to take ownership of pVector.
But pSpan should never be NULL.
But prior changes due to the same operation are not backed out and no rollback occurs.
But rather than start with 0 or 1, we begin with 'A'.
But rather than start with 0 or 1, we begin with 'a'.
But recursively deleted.
But returning an incorrect 0 or 1 could lead to a malfunction.
But seems it happens in extreme cases or doesn't.
But several systems violate POSIX.
But since PAGER_ERROR state guarantees that there is at least one outstanding page reference, this function is a no-op for that case anyhow.
But since it does not actually care *at all* about shapes, it should only fail for out of bound indexes or casting errors.
But so far, none of that has been implemented in the core.
But some embedded platforms might lack LFS in which case the SQLITE_DISABLE_LFS macro might still be useful.
But some extreme users want to have prepared statements with over 32767 variables, and for them the option is available (at compile-time).
But some systems count leap seconds and others doesn't.
But sometime you might  want to place more severe limits on the complexity of an  expression.
But sometimes (for example when during a DROP of a large table) most or all of the pages in a database can get journalled.
But sqlite3SrcListShiftJoinType() later shifts the jointypes so that each jointype expresses the join between the table and the previous table.
But support for LinuxThreads was dropped beginning with version 3.7.0.
But that call was dangerous and had no detectable benefit since the cache is normally cleaned by sqlite3PcacheCleanAll() after rollback and so has been removed.
But that compiler magic ended up generating such a flurry of bug reports that we have taken it all out and gone back to using simple noop macros.
But that could change.
But that file was getting too big so this subroutines were split out.
But that functionality is no longer supported.
But that is Ok, as that thread cannot return control to the VDBE or proceed with anything useful until the  first results are ready from this merger object anyway.
But that is a lot of wasted space on the left margin.
But that is impossible.
But that is no longer true.
But that is not due to sloppy coding habits.
But that is not possible as SQLite reference counts the virtual table objects.
But that only comes up for Blobs formed by the OP_MakeRecord opcode, and such Blobs never get passed into sqlite3MemCompare().
But that will not work if other processes are attached to the original database.
But that would mean passing a sufficiently large expression to ExprParse() could cause a stack overflow.
But the FuncDefs for built-in functions are read-only.
But the allowed values are "grainy".
But the application does not want the user to be able to make arbitrary changes to the database.
But the caller cannot free this memory directly.
But the code generator expects the join operator to be on the right operand.
But the contents can be deleted.
But the delta string may contain embedded NUL characters (if the input and output are binary files) so we also have to pass in the length of the delta in the lenDelta parameter.
But the error is not detected until much later, and so we need to go ahead and resolve those symbols on the incorrect ORDER BY for consistency.
But the feature is undocumented.
But the initialization must be complete.
But the left-most 6 spaces have been removed to improve the readability.
But the main beneficiary of the transfer optimization is the VACUUM  command, and the VACUUM command disables foreign key constraints.
But the main library does not want to redefine the API.
But the probability of white noise equaling 16 bytes of 0xff is vanishingly small so we should still be ok.
But the probability of white noising equaling 16 bytes of 0xff is vanishingly small so we should still be ok.
But the race is benign since with WAL_RETRY this routine will be called again and will probably be right on the second iteration.
But the reason the mutex does not exist is because the build is not using mutexes.
But the result is guaranteed to land in register iReg for GetColumnToReg().
But the size of the cache is allowed to grow larger than this limit if it contains dirty pages or pages still in active use.
But then Mcafee started using SQLite in their anti-virus product and it started putting files with the "sqlite" name in the c:/temp folder.
But then, on the other hand, dlsym() will not work on such a system either, so we have not really lost anything.
But there are serious downsides:  (1)  There is zero concurrency.
But there are some negative values that have special meaning:
But there are two problems, - Costly calculation It is a minor issue, but possibly kill a benefit of a parallel processing.
But there is no way to know at compile-time which threading library is being used.
But there might be a LIMIT clause, in which case the order does matter
But there might be additional triggers on pTab in the TEMP schema.
But these numbers are not part of the result table itself.
But they are stable, as they are part of the definition of the SQLite file format, which may not change.
But they make a real mess on VT100-style displays if they're not paired properly, so we are probably better off not calling them text.
But they might for a corrupt database.
But they probably won't help there so do not bother.)  (2) The inner query is the recursive part of a common table expression.
But this block is particularly performance critical, so equivalent code is inlined.
But this code here only works on OSX.
But this could be another MIME preemble
But this does not work if either limit is negative.
But this does not work on VxWorks.
But this file is the only place where the internal details of this structure are known.
But this implementation can be overridden at start-time.
But this is adapted to present re.c.
But this is not considered overhead as it would also be required by a crisis-merge that used the same input  segments.
But this is not so if the database is corrupted  in such a way that page pRoot is linked into a second b-tree table  (or the freelist).
But this method is used as a last resort.
But this might change in future releases of SQLite.
But this only works for strings.
But this requires that the range scan loop run twice, once for strings and a second time for BLOBs.
But this routine must never return 0 if the two ExprList objects are different, or a malfunction will result.
But this sorting ephemeral index might end up being unused if the data can be extracted in pre-sorted order.
But this subroutine works for any value of nEq including 0.
But to avoid confusion we also all the SQLITE_ENABLE_FTS4 macro to serve as an alisse for SQLITE_ENABLE_FTS3.
But to avoid confusion we also call the SQLITE_ENABLE_FTS4 macro to serve as an alias for SQLITE_ENABLE_FTS3.
But to preserve backwards compatibility we continue to accept it.
But updating the actual wal-index header is also safe and means there is no special case for sqlite3WalUndo() to handle if this transaction is rolled back.
But wait:  there are yet more problems with POSIX advisory locks.
But we are getting ready to store this value back into an index, where it should be converted by to INTEGER again.
But we are told that HPUX is not such a platform.
But we can save a little space and improve the speed a little by numbering the values consecutively.
But we can still statically link against that API as long as we don't call it when running Win95/98/ME.
But we can still statically link against that API as long as we don't call it win running Win95/98/ME.
But we cannot delete it, in case the master journal file name was written into the journal file before the failure occurred.
But we could start anywhere.
But we do not want these changes to be permanent.
But we don't support COM_FIELD_LIST anymore, thus this should not happen
But we don't use such trick and follow cmd.exe's way that just doesn't show these values.
But we fill it in here so that PySequence_XXXX calls work as expected
But we have found that many systems do not have a working isnan() function so this implementation is provided as an alternative.
But we have other optimizations in mind to deal with that case.
But we have to do some additional checking to see if case 1 really is satisfied.
But we keep a reference count in Btree.wantToLock so the behavior of this interface is recursive.
But we leave it in place as a safety.
But we merge it with the header value access routines since its access pattern is the same.
But we need to go ahead and define the sqlite3_io_methods and finder function for proxy locking here.
But we need to make sure enough memory is allocated to avoid other spurious errors in the meantime.
But we should still be able to handle the old versions.
But we track the other locking levels internally.
But we use the B term in "glob(B,A)".
But we want the maximum correction applied to a pixel to be much less, otherwise obviously wrong pixels will be created.
But we want to make maximum use of the bits in our bitmasks.
But we were allocated pgnoMove.
But when LIMIT and OFFSET became arbitrary expressions, we were forced to add restrictions (13) and (14).
But with POWERSAFE_OVERWRITE, the blast radius is zero (that is what POWERSAFE_OVERWRITE means), so we minimize the sector size.
But with brackets, append nothing
But writing to all new pages forces the OS to allocate them immediately, which reduces the chances of SIGBUS while accessing the mapped region later on.
But, according to The Encyclopedia Judaica, Hillel II may have only published the 19 year rule for determining the occurrence of leap years.
But, do not do this if we are simply reading the sqlite_master table to parse the schema, or if this index is the PRIMARY KEY index of a WITHOUT ROWID table.
But, on Unix, the "commit" is implicit.
But, unlike Destroy, do not remove the table or index from the database file.
But, we can't quite yet, b/c of backcompat.
By Authors:  Spencer W.
By NULLing the dlopen() handle in the module entry, Zend omits the call to dlclose(), ensuring that the module will remain present until the process exits.
By adding this prefix, we insure that the name will not collide with an existing table because user table are not allowed to have the "sqlite_" prefix on their name.
By calling fflush(3), this data is send to the kernel using write(2).
By combining all the individual C code files into this  single large file, the entire code can be compiled as a single translation unit.
By combining all the individual C code files into this single large file, the entire code can be compiled as a single translation unit.
By contrast, if SQLITE_INDEX_SCAN_UNIQUE is not set and xUpdate returns SQLITE_CONSTRAINT, any database changes made by the xUpdate method are automatically rolled back by SQLite.
By convertCompoundSelectToSubquery()
By default PENDING_BYTE is set high so that we don't have to allocate an unused page except for very large databases.
By default Ruby sets the external encoding of an IO object to the default external encoding.
By default all characters are returned.
By default darwin/arm processes start in "/".
By default encryption operations are padded using standard block padding and the padding is checked and removed when decrypting.
By default many tools will set the mtime of the expanded file to the mtime of the gzipped file, not the mtime in the header.
By default the Expr.zSpan field holds a human-readable description of the expression that is used in the generation of error messages and column labels.
By default the word under the cursor is passed to the Proc.
By default this is 0x7ffffffe (over 2 billion), but that value is too big to test in a reasonable amount of time, so this control is provided to set a small and easily reachable reset value.
By default use a full table scan.
By default we have a tree of only one node
By default, RBU uses the default VFS to access the files on disk.
By default, ToASCII() uses transitional processing.
By default, ToUnicode() uses transitional processing.
By default, X0201 kana is converted into X0208 kana.
By default, allocate this many bytes of memory for each FileChunk object.
By default, both _offset_ and _len_ are 0, meaning that the advice applies to the entire file.
By default, for compatibility with Perl, they are treated as literals.
By default, make NULL operands writeonly and flagged for allocation, and everything else readonly.
By default, no time zone information is attached.
By default, obtain space from malloc().
By default, separate instances refer to separate hash keys.
By default, the auxiliary write ahead log and shared memory files used for transaction control are automatically deleted when the latest connection to the database closes.
By default, the default C locale is used rather than what the building user happens to have set.
By default, the interpreter raises an error when this method is called.
By default, this is enabled and an isolated heap will be created to store all allocated data.
By default, this module parses the legacy syntax that has been  traditionally used by fts3.
By detecting this and skipping the redundant copy of values to themselves, we potentially give a big speed boost.
By doing it to only one of these two, we deviate from a state that could be directly specified by a password to the buggy algorithm (and to the fully correct one as well, but that's a side-effect).
By handling this as a special case, we avoid deep recursion, and thus do not need to enforce the SQLITE_LIMIT_COMPOUND_SELECT on a VALUES clause.
By locking a random byte from a range, concurrent SHARED locks may exist even if the locking primitive used is always a write-lock.
By overriding  system calls with functions under its control, a test program can simulate faults and error conditions that would otherwise be difficult or impossible to induce.
By passing NULL to dst_type and setting move_references to 1, we get back a function that just decrements the src references.
By passing this as the number of pages to copy to sqlite3_backup_step(), we can guarantee that the copy finishes  within a single call (unless an error occurs).
By reducing the buffered amount to this size, reductions can be safely buffered.
By returning SQLITE_BUSY and not invoking the busy callback when A already has a read lock, we encourage A to give up and let B proceed.
By scanning and tokenizing the content table.
By scanning the contents of the FTS index, and  2.
By setting the seed to a known value, programs can be made deterministic during testing.
By supplying a to_str method, exceptions are agreeing to be used where Strings are expected.
By the way, the documentation of DSA_generate_parameters_ex() says the error code can be obtained by ERR_get_error(), but the default implementation, dsa_builtin_paramgen() doesn't put any error...
By themselves, these optimizations work fine and provide a handy performance boost to bulk delete or insert operations.
By this means we can handle the group by iteration rather than recursion, thereby reducing the amount of stack needed.
By use of various functions in this module the caller can create stacks, queues, lists, doubly linked lists, sorted lists, indexed lists.
By using WIN32OLE, you can access OLE server like VBScript.
By using this, the same Cipher instance may be used several times for encryption or decryption tasks.
By using two iterators, we can find maximal sub-chunks that can be processed at once.
By-value send is not allowed -- emit a warning, but still perform the call with a by-value send.
Bypass the creation of the PRIMARY KEY btree and the sqlite_master table entry.
Bypass the delete logic below if the WHERE loop found zero rows
Byte R/M field with op code (/digit)
Byte R/M field with register (/r)
Byte and multibyte cases
Byte available in aRow
Byte of 0's (future expansion)
Byte of unused space on each page
Byte offset at which to write
Byte offset of blob in cursor data
Byte offset of end of current token
Byte offset of end of token within input text
Byte offset of token within input text
Byte offset to previous journal header
Byte offset within current leaf
Byte order is little-endian
Byte-length of string zStop
Bytes 28..31 should always be zero or the size of the database in page.
Bytes 32..35 and 35..39 should be page numbers which are never 0xffffffff.
Bytes buffered before opening the file
Bytes consumed per cell
Bytes content per ovfl page
Bytes in key (not counting zero terminator)
Bytes in pPage beyond the header
Bytes in string, or negative
Bytes of PMA space required
Bytes of available memory
Bytes of content in pCell
Bytes of content, or number of sub-nodes
Bytes of data available in buffer
Bytes of data before flushing
Bytes of data currently in memory
Bytes of data in aData
Bytes of data stored in pFd
Bytes of data to read
Bytes of header sector written
Bytes of leaf data in segment
Bytes of leaf page data so far
Bytes of local payload
Bytes of memory for in-memory hash
Bytes of memory needed
Bytes of memory required
Bytes of memory required to allocate the new cache
Bytes of opcode memory used
Bytes of padding needed to make 64 bytes
Bytes of payload on final overflow page
Bytes of payload on this page
Bytes of payload stored locally
Bytes of payload total (local+overflow)
Bytes of prefix compression for term
Bytes of reserved space at the end of each page
Bytes of runtime space required for sub-program
Bytes of space allocated at pSpace
Bytes of space at aAlloc
Bytes of space for Index object + arrays
Bytes of space for iSerial as varint
Bytes of space required
Bytes of space required for aIter/aTree
Bytes of space to allocate
Bytes of space to allocate at pRet
Bytes of space to allocate for this node
Bytes of space to allocate here
Bytes of unused memory
Bytes of unused space on this page
Bytes of valid data so far
Bytes of zTitle to save.
Bytes remaining to copy
Bytes required to hold all column names
Bytes required to hold database name
Bytes required to hold table name
Bytes should always be considered immutable, but we just grab the pointer if they are large, to save memory.
Bytes to allocate for PCache
Bytes to allocate for each journal fd
Bytes to allocate segment root node
Bytes to append to the prefix
Bytes to copy from previous term
Bytes to read from disk
Bytes written by each WriteFile() call
Byteswap an mmap'ed file if needed
C       (input) COMPLEX array, dimension (LDC, N) C contains the M by N matrix C.
C       (input) COMPLEX*16 array, dimension (LDC, N) C contains the M by N matrix C.
C       (input) DOUBLE PRECISION The (2,2) element of the 2-by-2 matrix.
C       (input) REAL The (2,2) element of the 2-by-2 matrix.
C       (input/output) COMPLEX array, dimension (LDC,N) On entry, the M-by-N matrix C.
C       (input/output) COMPLEX array, dimension (LDC,N) On entry, the m by n matrix C.
C       (input/output) COMPLEX array, dimension (LDC,N) On entry, the m-by-n matrix C.
C       (input/output) COMPLEX*16 array, dimension (LDC,N) On entry, the M-by-N matrix C.
C       (input/output) COMPLEX*16 array, dimension (LDC,N) On entry, the m by n matrix C.
C       (input/output) COMPLEX*16 array, dimension (LDC,N) On entry, the m-by-n matrix C.
C       (input/output) DOUBLE PRECISION array, dimension (LDC, NCC) On entry, an N-by-NCC matrix C.
C       (input/output) DOUBLE PRECISION array, dimension (LDC,N) On entry, the M-by-N matrix C.
C       (input/output) DOUBLE PRECISION array, dimension (LDC,N) On entry, the m by n matrix C.
C       (input/output) REAL array, dimension (LDC, NCC) On entry, an N-by-NCC matrix C.
C       (input/output) REAL array, dimension (LDC,N) On entry, the M-by-N matrix C.
C       (input/output) REAL array, dimension (LDC,N) On entry, the m by n matrix C.
C      (input) DOUBLE PRECISION array, dimension ( N ).
C      (input) REAL array, dimension ( N ).
C      - DOUBLE PRECISION array of DIMENSION ( LDC, n ).
C - Push the previous OVECTOR(i), OVECTOR(i+1) and OVECTOR_PRIV(i) to the stack.
C LALR(1) parser skeleton written by Richard Stallman, by simplifying the original so-called "semantic" parser.
C and Z groups are the farthest two groups.
C flag must be restored.
C-level integer indexing always returning an array and never a scalar.
C-order inner loop for unravel_index
C-preprocessor macro summary:  HAVE_MALLOC_USABLE_SIZE     The configure script sets this symbol if the malloc_usable_size() interface exists on the target platform.
C89 specifies that the constant "dummy" will be initialized to all zeros, which is correct.
CALENDAR OVERVIEW  Julius Caesar created the calendar in 46 B.C.
CALENDAR OVERVIEW  The French republican calendar was adopted in October 1793 during the French Revolution and was abandoned in January 1806.
CALENDAR OVERVIEW  The Gregorian calendar is a modified version of the Julian calendar.
CALENDAR OVERVIEW  The Jewish calendar is based on lunar as well as solar cycles.
CAPI3REF: Add A Changeset To A Changegroup  Add all changes within the changeset (or patchset) in buffer pData (size nData bytes) to the changegroup.
CAPI3REF: Application Defined Page Cache.
CAPI3REF: Apply A Changeset To A Database  Apply a changeset to a database.
CAPI3REF: Attach A Table To A Session Object  If argument zTab is not NULL, then it is the name of a table to attach to the session object passed as the first argument.
CAPI3REF: Changegroup Handle
CAPI3REF: Changeset Iterator Handle
CAPI3REF: Checkpoint a database  Run a checkpoint operation on WAL database zDb attached to database  handle db.
CAPI3REF: Compare the ages of two snapshot handles.
CAPI3REF: Concatenate Two Changeset Objects  This function is used to concatenate two changesets, A and B, into a  single changeset.
CAPI3REF: Configuring The SQLite Library  The sqlite3_config() interface is used to make global configuration changes to SQLite in order to tune SQLite to the specific needs of the application.
CAPI3REF: Constants Passed To The Conflict Handler  Values that may be passed as the second argument to a conflict-handler.
CAPI3REF: Constants Returned By The Conflict Handler  A conflict handler callback must return one of the following three values.
CAPI3REF: Convenience Routines For Running Queries  This is a legacy interface that is preserved for backwards compatibility.
CAPI3REF: Convenience Routines For Running Queries METHOD: sqlite3  This is a legacy interface that is preserved for backwards compatibility.
CAPI3REF: Create A New Changegroup Object  An sqlite3_changegroup object is used to combine two or more changesets (or patchsets) into a single changeset (or patchset).
CAPI3REF: Create A New Session Object  Create a new session object attached to database handle db.
CAPI3REF: Create An Iterator To Traverse A Changeset   Create an iterator used to iterate through the contents of a changeset.
CAPI3REF: Custom Page Cache Object  The sqlite3_pcache type is opaque.
CAPI3REF: Custom Page Cache Object  The sqlite3_pcache_page object represents a single page in the page cache.
CAPI3REF: Delete A Changegroup Object
CAPI3REF: Determine The Number Of Foreign Key Constraint Violations  This function may only be called with an iterator passed to an SQLITE_CHANGESET_FOREIGN_KEY conflict handler callback.
CAPI3REF: Enable Or Disable A Session Object  Enable or disable the recording of changes by a session object.
CAPI3REF: Formatted String Printing Functions  These routines are work-alikes of the "printf()" family of functions from the standard C library.
CAPI3REF: Function Auxiliary Data  These functions may be used by (non-aggregate) SQL functions to associate metadata with argument values.
CAPI3REF: Function Auxiliary Data METHOD: sqlite3_context  These functions may be used by (non-aggregate) SQL functions to associate metadata with argument values.
CAPI3REF: Generate A Changeset From A Session Object  Obtain a changeset containing changes to the tables attached to the  session object passed as the first argument.
CAPI3REF: Invert A Changeset  This function is used to "invert" a changeset object.
CAPI3REF: Memory Allocation Routines  An instance of this object defines the interface between SQLite and low-level memory allocation routines.
CAPI3REF: Memory Allocation Subsystem  The SQLite core uses these three routines for all of its own internal memory allocation needs.
CAPI3REF: Mutex Methods Object  An instance of this structure defines the low-level routines used to allocate and use mutexes.
CAPI3REF: Mutex Verification Routines  The sqlite3_mutex_held() and sqlite3_mutex_notheld() routines are intended for use inside assert() statements.
CAPI3REF: Mutexes  The SQLite core uses these routines for thread synchronization.
CAPI3REF: OS Interface Object  An instance of the sqlite3_vfs object defines the interface between the SQLite core and the underlying operating system.
CAPI3REF: Obtain A Composite Changeset From A Changegroup  Obtain a buffer containing a changeset (or patchset) representing the current contents of the changegroup.
CAPI3REF: Obtain Aggregate Function Context  Implementations of aggregate SQL functions use this routine to allocate memory for storing their state.
CAPI3REF: Obtain Aggregate Function Context METHOD: sqlite3_context  Implementations of aggregate SQL functions use this routine to allocate memory for storing their state.
CAPI3REF: Online Backup API.
CAPI3REF: Online Backup Object  The sqlite3_backup object records state information about an ongoing online backup operation.
CAPI3REF: Prepared Statement Scan Status METHOD: sqlite3_stmt  This interface returns information about the predicted and measured performance for pStmt.
CAPI3REF: SQL Function Context Object  The context in which an SQL function executes is stored in an sqlite3_context object.
CAPI3REF: Session Object Handle
CAPI3REF: Set Or Clear the Indirect Change Flag  Each change recorded by a session object is marked as either direct or indirect.
CAPI3REF: Set a table filter on a Session Object.
CAPI3REF: Setting The Result Of An SQL Function  These routines are used by the xFunc or xFinal callbacks that implement SQL functions and aggregates.
CAPI3REF: Setting The Result Of An SQL Function METHOD: sqlite3_context  These routines are used by the xFunc or xFinal callbacks that implement SQL functions and aggregates.
CAPI3REF: Streaming Versions of API functions.
CAPI3REF: Suspend Execution For A Short Time  The sqlite3_sleep() function causes the current thread to suspend execution for at least a number of milliseconds specified in its parameter.
CAPI3REF: Test if a changeset has recorded any changes.
CAPI3REF: Text Encodings  These constant define integer codes that represent the various text encodings supported by SQLite.
CAPI3REF: The pre-update hook.
CAPI3REF: Tracing And Profiling Functions  These routines register callback functions that can be used for tracing and profiling the execution of SQL statements.
CAPI3REF: Tracing And Profiling Functions METHOD: sqlite3  These routines are deprecated.
CAPI3REF: Virtual Table Scan Flags
CASCADE means that a DELETE or UPDATE of the referenced table row is propagated into the row that holds the foreign key.
CASE variable will be deleted later by FREE, so we can't optimize it
CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS
CAUTION: THIS FUNCTION ENABLE *ONLY BEFORE* SWEEPING.
CAUTION: This function causes thread switching.
CFG back references management
CFROM   (input) DOUBLE PRECISION CTO     (input) DOUBLE PRECISION The matrix A is multiplied by CTO/CFROM.
CFROM   (input) REAL CTO     (input) REAL The matrix A is multiplied by CTO/CFROM.
CFROM must be nonzero.
CGI must be executed in its own directory.
CGI needs it as REMOTE_USER
CHANGED VERSION::PHP7 Changed the refCount to 2 since internally Zend engine increments RefCount value by 1
CHANGESET FORMAT:  A changeset is a collection of DELETE, UPDATE and INSERT operations on one or more tables.
CHAR opcodes are used for exacts whose count is 1.
CHAR_ESC_LEN cannot exceed INT_MAX
CHECK constraint references the ROWID
CHECK constraint uses a changing column
CHECK constraints are not enforced.
CHECK-DAG: libswiftSpriteKit.dylib CHECK-DAG: libswiftUIKit.dylib CHECK-DAG: libswiftCore.dylib CHECK: Flawless victory
CHECK_EXTRA_REGS migh overwrite these values.
CHECK_INTS in this function
CJK Compatibility Forms: U+FE30 - U+FE4F
CJK Compatibility Ideographs: U+F900 - U+F92A
CJK Ideograph Extension A
CJK Ideograph Extension B
CLAED7 handles the case when the eigenvectors of a full or band Hermitian matrix (which was reduced to tridiagonal form) are desired.
CLAHQR works primarily with the Hessenberg submatrix in rows and columns ILO to IHI, but applies transformations to all of H if WANTT is .TRUE..
CLASS, NCLASS, XCLASS
CLEAN pages not on dirty list
CLIENT_CONNECT_WITH_DB should have been set
CLOCKS_PER_SEC is the C-level macro defined by time.h.
COALESCE and JMP_SET result can't be null
COLLATE function from an ORDER BY clause term
COLLATE operators take first precedence.
COLLATE, AS, or UNLIKELY
COMMIT disables the bumpalong, but otherwise behaves as NOMATCH.
COMMIT, SKIP, PRUNE, and an uncaptured THEN cause the whole assertion to fail to match, without considering any more alternatives.
COMPILE: cc -o tst -DTEST_STRFTIME strftime.c
COMPILE_ARRAY_TYPE_HASH
COM_CHANGE_USER is broken in 5.1.
COM_FIELD_LIST is broken and has premature EOF, thus we need to hack here and in mysqlnd_res_meta.c
COM_QUERY and COM_EXECUTE handle the responses themselves
COM_STMT_SEND_LONG_DATA
COM_STMT_SEND_LONG_DATA doesn't acknowledge with an OK packet
CONFLICTCROSSCURRENT_TIMESTAMPRIMARYDEFERREDISTINCTDROPFAIL
CONST_PERSISTENT is ok here
CONTINUE and BREAK addresses
CONVERSIONS for SCM_RIGHTS
CONVERSIONS for cmsghdr
CONVERSIONS for if_index
CONVERSIONS for integers
CONVERSIONS for msghdr
CONVERSIONS for sockaddr
CONVERSIONS for struct in6_pktinfo
CONVERSIONS for struct ucred
COPY 1 TO N CONTIGUOUS
COPY N TO N CONTIGUOUS
COPY WITH SUBARRAY BROADCAST
CORRUPT_DB does not indicate that the database is definitely corrupt, only that it might be corrupt.
CP932 vendor ext1 (13ku)
CPU clock count at start of opcode
CPU description section
CPU time limit in seconds.
CR or LF or HTAB or null
CREATE TABLE x(input, token, start, end, position)
CREATE VIEW name AS...
CREATE VIEW name(arglist) AS ...
CRLF newline is set as default newline decorator.
CR_Canadian_Aboriginal
CR_NEW_STMT_METADATA makes the statement unusable
CS      (output) DOUBLE PRECISION SN      (output) DOUBLE PRECISION Parameters of the rotation matrix.
CS      (output) DOUBLE PRECISION The cosine of the rotation.
CS      (output) REAL SN      (output) REAL Parameters of the rotation matrix.
CS      (output) REAL The cosine of the rotation.
CS1     (output) DOUBLE PRECISION SN1     (output) DOUBLE PRECISION The vector (CS1, SN1) is a unit right eigenvector for RT1.
CS1     (output) REAL SN1     (output) REAL The vector (CS1, SN1) is a unit right eigenvector for RT1.
CS1 and SN1 are accurate to a few ulps barring over/underflow.
CTOT    (input) INTEGER array, dimension (4) A count of the total number of the various types of columns in Q, as described in INDX.
CTOT   (input) INTEGER array, dimension ( 4 ) A count of the total number of the various types of columns in U (or rows in VT), as described in IDXC.
CTRL+C signal cannot be generated for process groups.
CURLE_PARTIAL_FILE is returned by HEAD requests
CURPBM (input) INTEGER The current problem in the current level in the overall merge routine (counting from upper left to lower right).
CURSOR_FAULT: A unrecoverable error (an I/O error or a malloc failure) has occurred on a different connection that shares the BtShared cache with this cursor.
CURSOR_FAULT: An unrecoverable error (an I/O error or a malloc failure) has occurred on a different connection that shares the BtShared cache with this cursor.
CURSOR_INVALID: Cursor does not point to a valid entry.
CURSOR_REQUIRESEEK: The table that this cursor was opened on still exists, but has been  modified since the cursor was last used.
CURSOR_SKIPNEXT: Cursor is valid except that the Cursor.skipNext field is non-zero indicating that the next sqlite3BtreeNext() or sqlite3BtreePrevious() operation should be a no-op.
CURSOR_VALID: Cursor points to a valid entry.
CUSTOM AUXILIARY FUNCTIONS
CUSTOM AUXILIARY FUNCTIONS  Virtual table implementations may overload SQL functions by implementing the sqlite3_module.xFindFunction() method.
CUSTOM TOKENIZERS  Applications may also register custom tokenizer types.
CUTPNT (input) INTEGER Contains the location of the last eigenvalue in the leading sub-matrix.
CUTPNT (input) INTEGER The location of the last eigenvalue in the leading sub-matrix.
CWD and include_path don't matter for absolute file names and streams
CWorkspace refers to complex workspace, and RWorkspace to real workspace.
Cache code page into a hash for performance since finding the code page in Encoding#names is slow.
Cache configuration parameters.
Cache flush for POWER architecture.
Cache flush for PowerPC architecture.
Cache is valid if this matches Vdbe.cacheCtr
Cache iterator functions if ArrayIterator or derived.
Cache lines are usually 32 byte aligned.
Cache of doclist for this phrase.
Cache of overflow page locations
Cache of the server supported datatypes, initialized in handle_factory
Cache some values for the member functions to use
Cache that currently owns this page
Cache that owns this page
Cache the chunk_size to avoid recalling OCILobGetChunkSize
Cache the pointer so we do not have to do OCIContextGetValue repeatedly
Cache used by auxiliary functions xInst() and xInstCount()
Cache zFilename in the locking context (AFP and dotlock override) for proxyLock activation is possible (remote proxy is based on db name) zFilename remains valid until file is closed, to support
Cached information about the header for the data record that the cursor is currently pointing to.
Cached next search point
Cached values from the iterator
Calculate "in" and "out" sets
Calculate TS belonging to UTC 00:00 of the current day
Calculate a hash value for this term.
Calculate an IDF for each phrase in the query
Calculate correction for DST change over, but only if the TZ type is ID and it's the same
Calculate final scale.
Calculate how many dimensions the iterator should have
Calculate how much free space is available in the buffer
Calculate how much space is left in the buffer
Calculate how much to read from the file in the buffer
Calculate important variables (like stack size) and checks whether all opcodes are supported.
Calculate initial guess
Calculate metonicCycle * HALAKIM_PER_METONIC_CYCLE.
Calculate n -- the u and v split point in digits.
Calculate new strides for all axes currently worked with
Calculate number of bits we are expecting
Calculate output length and upper bound while processing
Calculate r2r1 / HALAKIM_PER_DAY.
Calculate sub results ...
Calculate the 'docid' delta value to write into the merged  doclist.
Calculate the IDF (Inverse Document Frequency) for phrase i.
Calculate the allowable deflation tolerance
Calculate the allowable deflation tolerence
Calculate the array length
Calculate the average document length for this FTS5 table
Calculate the broadcasting and set the offsets
Calculate the byte count needed and pad the property counts array to a 4-byte boundary.
Calculate the century (year/100).
Calculate the estimated cost based on the flags set in idxFlags.
Calculate the first block to use in the output segment
Calculate the hash-key for this change.
Calculate the initial guess.
Calculate the length in bytes and the checksum of zMaster
Calculate the local space size on the stack.
Calculate the maximum size if using a single stride and no buffers
Calculate the month and day of month.
Calculate the new step
Calculate the number of bytes to be required to represent the absolute value of the integer given as _val_.
Calculate the number of quotient digits.
Calculate the number of words to be required to represent the absolute value of the integer given as _val_.
Calculate the phrase frequency (symbol "f(qi,D)" in the documentation) for each phrase in the query for the current row.
Calculate the quotient digit guess.
Calculate the remaining space when constraint by the min size defined for the main axis.
Calculate the required memory size
Calculate the return value, which is the maximum ovector value.
Calculate the size if using any buffers
Calculate the size of the offsets array, and allocate memory for it.
Calculate the sum of the private machine words.
Calculate the time of the starting molad for this metonic cycle.
Calculate the tzoffset as the difference between the datetimes
Calculate total size of the MapIter
Calculates a dtype that all the types can be promoted to, using the ufunc rules.
Calculates the byte length of the next character.
Calculates the days offset from the 1970 epoch.
Calculates the minutes offset from the 1970 epoch.
Calculating the minimum width is expensive, so we forego it and assume a default minimum main size of 0.
Call (integer-decode-float x).
Call / return instructions
Call CHETRD to reduce Hermitian matrix to tridiagonal form.
Call DBDSQR to compute the SVD of the reduced real N-by-N upper bidiagonal matrix.
Call DSYTRD to reduce symmetric matrix to tridiagonal form.
Call Graph initialization.
Call Graph mode: init the thread local storage (need to store the virtual stack there).
Call SBDSQR to compute the SVD of the reduced real N-by-N upper bidiagonal matrix.
Call SQLGetData() until SQL_SUCCESS is returned
Call SSLContext#remove_session(sess) in session_get_cb block if you don't want OpenSSL to cache the session internally.
Call SSYTRD to reduce symmetric matrix to tridiagonal form.
Call SetAutoVacuum() to set initialize the internal auto and incr-vacuum flags.
Call ZHETRD to reduce Hermitian matrix to tridiagonal form.
Call __wakeup() method on the object.
Call a Go function that will call a C function to send us a SIGIO.
Call all extensions RSHUTDOWN functions
Call all extensions post-RSHUTDOWN functions
Call all possible __destruct() functions
Call all possible shutdown functions registered with register_shutdown_function()
Call an arbitrary function that requires the stack to be properly aligned.
Call balance_quick() to create a new sibling of pPage on which to store the overflow cell.
Call below is a no-op for NDEBUG builds
Call either BtreeData() or BtreePutData().
Call exprAnalyze on all terms in a WHERE clause.
Call from within the xCreate() or xConnect() methods to provide  the SQLite core with additional information about the behavior of the virtual table being implemented.
Call fstat() to figure out the permissions on the database file.
Call is always patchable on sparc 32.
Call is expected to fail
Call it a "virtual meta value".
Call method specified in request
Call php signal handler - Note that we do not report errors, and we ignore the return value
Call recursively to fill in all the descendants of node i.
Call setsid so that we can use kill(0, SIGIO) below.
Call sqlite3ConnectionUnlocked()  to invoke any required unlock-notify callbacks.
Call sqlite3ExprAnalyzeAggregates() for every expression in an expression list.
Call sqlite3Step() to do most of the work.
Call sqlite3VdbeCloseStatement() to do so.
Call sqlite3WalOpen() to open the WAL handle.
Call sqlite3WalkExpr() for every expression in Select statement p.
Call sqlite3WalkExpr() for every expression in list p or until an abort request is seen.
Call sqlite3_declare_vtab()
Call sqlite3_declare_vtab() based on the contents of the configuration object passed as the only argument.
Call stat() on path zIn.
Call static reflection::export
Call the __array_prepare__ functions where necessary
Call the __prepare_array__ if necessary
Call the collation factory to see if it can supply us with one.
Call the comparison function directly
Call the following routines in order to register the various SQL functions and the virtual table implemented by this file.
Call the function and return
Call the parser to process a CREATE TABLE, INDEX or VIEW.
Call the read handler to fill the buffer.
Call the top-level defined __call().
Call the user's traceback function and then call sigtramp.
Call the userland function
Call the value from the second bullet "nRec".
Call the xCreate method for that table.
Call the xDestroy method of that table.
Call the xFindFunction method on the virtual table implementation to see if the implementation wants to overload this function
Call these arguments list and weight.
Call this SETUP-INVARIANT
Call this from contexts where an array might be written to, but we have no way to tell.
Call this method early, before any code has used the original argv passed in from main().
Call this routine to delete a hash table or to reset a hash table to the empty state.
Call this routine to record the fact that an OOM (out-of-memory) error has happened.
Call this routine when reloading pages
Call this routine when the database connection is closing in order to clean up loaded extensions
Call to iternext triggers copy from buffer back to output array after innerloop puts result in buffer.
Call to try make a page clean
Call to try to make pages clean
Call ufunc only on selected array items and store result in first operand.
Call unserialize callback
Callback for expressions
Callback for tokenizing terms used by ParseTerm().
Callback from rocksdb_writebatch_iterate()
Callback function to invoke
Callback function to invoke for phrases
Callback implementation user data
Callback implementations should return zero to ensure future compatibility.
Callback must accept two strings and return an integer (as strcmp()).
Callback routine requested an abort
Callback to check the date.timezone only when changed increases performance
Callback used by fts5Bm25GetData() to count the number of rows in the table matched by each individual phrase within the query.
Called applications task handle
Called before the plugin module is unloaded.
Called by SQLite to clean up pUser
Called by each new OS thread to bind its EXC_BAD_ACCESS exception to mach_exception_handler_port_set.
Called by probability (session.gc_probability/session.gc_divisor).
Called by the IJG JPEG library upon encountering a fatal error
Called by the parser to compile a DETACH statement.
Called by the parser to compile an ATTACH statement.
Called during startup to register a UDF with SQLite
Called during virtual module initialization to register UDF  fts5_decode() with SQLite
Called from a non-http wrapper with http proxying requested (i.e. ftp)
Called from php_request_startup() for every request.
Called from runtime.SetCgoTraceback.
Called in response to a ROLLBACK TO command.
Called once per process to initialize a mach port server, listening for EXC_BAD_ACCESS thread exceptions.
Called only by OP_MaxPgcnt
Called to check a condition assertion
Called when a page of data is written to offset iOff of the database file while the rbu handle is in capture mode.
Called when iAmt bytes are read from offset iOff of the wal file while the rbu object is in capture mode.
Called when the NaCl module is destroyed.
Called when the NaCl module is instantiated on the web page.
Called when the ctor was terminated by an exception
Called when the position, the size, or the clip rect of the element in the browser that corresponds to this NaCl module has changed.
Called when we are unable to satisfy an allocation of nBytes.
Called without an argument, sleep() will sleep forever.
Caller may rely on its value to check success
Caller must arrange for this to be reset if truly desired
Caller must ensure the underlying function is called in a thread-safe manner if running in a multi-threaded process.
Callers of this function must not attempt to treat it as a relative path name (i.e. they should simply use it verbatim).
Callers should initialize the char* variable to a NULL pointer in case this file-control is not implemented.
Calling assert_pager_state() would fail now, as it should not be possible to be in ERROR state when there are zero outstanding page  references.
Calling close more than once will raise a Fiddle::DLError exception.
Calling function guarantees this much
Calling routines will take care of changing this register value to non-NULL if the RHS is NULL-free.
Calling sqlite3Fts3SimpleTokenizerModule() sets the value pointed to by the argument to point to the "simple" tokenizer implementation.
Calling the macro again restores the address.
Calling this function does not free any Mem.zMalloc buffer.
Calling this function indicates that subsequent calls to  fts3PendingTermsAdd() are to add term/position-list pairs for the contents of the document with docid iDocid.
Calling this function with "t2" as the argument would return a NULL pointer (as there are no FK constraints for which t2 is the parent table).
Calling this function with an argument that is not a NULL pointer or an open blob handle results in undefined behaviour.
Calling this method on closed Dir object is ignored since Ruby 2.3.
Calling this method on closed IO object is just ignored since Ruby 2.3.
Calling this method raises a SystemCallError if there are no child processes.
Calling this method, both the input and the output buffer of the stream are flushed.
Calling this routine with a NULL cursor pointer returns false.
Calling thread context
Calling with no data is valid - we do nothing
Calls arr_of_subclass.__array_wrap__(towrap), in order to make 'towrap' have the same ndarray subclass as 'arr_of_subclass'.
Calls catch_exception_raise.
Calls func(obj, arg, recursive), where recursive is non-zero if the current method is called recursively on obj
Calls ruby_setup() and check error.
Calls the dtor of the previous context if there is one
Calls the given __array_prepare__ function on the operand *op, substituting it in place if a new array is returned and matches the old one.
Calls to the code generator in between sqlite3WhereBegin and sqlite3WhereEnd will have created code that references the table directly.
Calls to xShmLock(UNLOCK) to release the exclusive shm WRITER,  READ0 and CHECKPOINT locks taken as part of the checkpoint are no-ops.
Can be NULL, and will be allocated in that case.
Can be an array if it only has one output
Can be called repeatedly with chunks of the message.
Can be called with or without a code block.
Can be empty, or anything.
Can be null despite NOT NULL constraint
Can be removed once support for ocaml-4.01 is dropped
Can be removed, when we remove the ini setting
Can be restricted by other values in the glob.
Can cast between all units with 'same_kind' casting.
Can not read dir_start+10 since it's beyond value end
Can not use port/port.h macros as this is a c file
Can now reset the outer iterator (delayed bufalloc)
Can now return early if no subspace is being used
Can only be called if doc is currently NULL
Can perform an operation using at most 1 instruction.
Can this be bundled with other instructions (almost always true).
Can't broadcast to fewer dimensions
Can't call mysql_server_end() multiple times prior to 5.0.46 on Windows.
Can't cd to empty string
Can't coalesce, go to next i
Can't determine a first byte now
Can't have a trailing '-'
Can't have a trailing ':'
Can't reestablish the shared lock.
Can't right-pad 0's on integers
Can't skip the transfer in this case
Can't support UCP unless PCRE has been compiled to include the code.
Can't support UTF unless PCRE has been compiled to include the code.
Can't use CHECK_PARTIAL because we don't want to update eptr in the soft partial matching case.
Can't use gmp_unary_opl here, because mpz_sgn is a macro
CanCastArrayTo needs this function
Cancel a prior call to sqlite3_auto_extension.
Cancel any pending results
Candidate for the LIKE optimization
Candidate unixInodeInfo object
Candidate values for BtLock.eLock
Candidate values for Fts3Query.eType.
Candidate values for Wal.exclusiveMode.
Cannot EXPRDUP_REDUCE this Expr
Cannot be a escaped string
Cannot be both CLEAN and DIRTY
Cannot be both MEM_Int and MEM_Real at the same time
Cannot be used with sqlite3RowSetText()
Cannot fail following BtreeLast()
Cannot fail given valid arguments
Cannot have C without B
Cannot have triggers on a virtual table.
Cannot insert into a read-only table.
Cannot instantiate a datetime with generic units
Cannot optimize overly large ORDER BYs
Cannot process multiple depth save dir
Cannot start a write transaction without first holding a read transaction.
Cannot transition directly from MEMORY to WAL.
Canonical data cursor (main table or PK index)
Canonical name of each register.
Canonicalize array elements
Canonicalize the loc_range
Capitalize the first latter of the error message
Capture match offsets: yes/no
Capture the pattern itself.
Captures may have happened
Capturing brackets cannot be optimized if callouts are allowed.
Capturing brackets has a pre-allocated space.
Care is  taken to ensure it is possible to iterate in either direction through  the entries in a doclist, or to seek to a specific entry within a  doclist, without loading it into memory.
Care must be taken that any sqlite3_log() calls that occur while the memory mutex is held do not use these mechanisms.
Care must be taken to unref() the parent page pointer when this page is no longer referenced.
Care needs to be taken to avoid integer overflow when multiplying the dimensions together to get the total size of the array.
Care would have to be taken to ensure that, if there is an error in the call to sort or part, the unswapping is still done before returning.
Carries the value of a ASN.1 type.
Carry from low to high
Carry on at this level
Carry on with next branch
Carry on with non-JIT matching.
Carve a piece off of the end of the mem3.iMaster free chunk.
Case 12, more than two eigenvalues deflated.
Case 1:     expr IN (SELECT ...)  Generate code to write the results of the select into the temporary table allocated and opened above.
Case 1:  Reset the single schema identified by iDb
Case 1:  The table is a virtual-table.
Case 2:     expr IN (exprlist)  For each expression, build an index key from the evaluation and store it in the temporary table.
Case 2:  We can directly reference a single row using an equality comparison against the ROWID field.
Case 3:  We have an inequality comparison against the ROWID field.
Case 6, no information to guide us.
Case 6:  There is no usable index.  We must do a complete scan of the entire table.
Case for data access through buffer
Case for data access through pointer
Case is respected in comparisons.
Case of very large GA
Case-sensitive LIKE-type function
Caseful comparisons (includes all multi-byte characters)
Caseful matches, or not one of the multicase characters.
Cases 1 and 2 are dealt with above by other code.
Cases that are likely to block provoke debugging output.
Cast arrays to a common type
Cast the data into a raw date array
Cast the datatype of the value in pMem according to the affinity "aff".
Casting is different from applying affinity in that a cast is forced.
Casting is only allowed towards more precise units with 'safe' casting.
Casts a single datetime from having src_meta metadata into dst_meta metadata.
Casts a single timedelta from having src_meta metadata into dst_meta metadata.
Catch mismatch in the declared columns of a view and the number of columns in the SELECT on the RHS
Catch priority inversion and punt, but only if it's guaranteed that we were called through m1 and the other guy is not an array at all.
Catch relative paths in c:file.txt style.
Catch the case where the destination is an in-memory database and the page sizes of the source and destination differ.
Catch unrecognized opcodes so that when new ones are added they are not forgotten, as has happened in the past.
Cause a token to be read.
Cause any pending operation to stop at its earliest opportunity.
Cause p to be overwritten by pTemplate
Cause register regHasNull to be set to NULL if iCur contains one or more NULL values.
Cause the register at regHasNull to be set to a non-NULL value if iCur contains no NULLs.
Caused by OOM in sqlite3KeyInfoAlloc()
Causes schema cookie check after an error
Caution: pRoot may iterate through docids in ascending or descending order.
Cc Cf Cn Co Cs Ll Lm Lo Lt Lu Mc Me Mn Nd Nl No Pc Pd Pe Pf Pi Po Ps Sc Sk Sm So Zl Zp Zs
Cell content is stored at the very end of the page and grows toward the beginning of the page.
Cell content makes use of variable length integers.
Cell extends past end of page
Cell i is the cell immediately following the last cell on new sibling page k.
Cell i is the cell immediately following the last cell on old sibling page j.
Cell index within the node
Cell pCell is destined for new sibling page pNew.
Cell to insert into rtree
Cells are stored in the cell content area at the end of the page.
Cells is not necessarily contiguous or in order, but cell pointers are contiguous and in order.
Cells of the Hashtable
Cells on page (0 for overflow)
Certificate contexts used for server-side SNI selection
Chain list of read-only data ptrs.
Chain of simple selects to delete
Chances are good that this is retrieving something from within the phar archive
Change a page number.
Change a sub-array field to the base descriptor and update the dimensions and strides appropriately.
Change easily now, with a macro, could be made compilastion dependable.
Change in the number of documents
Change index offsets for error message
Change options at this level, and pass them back for use in subsequent branches.
Change pMem so that its MEM_Str or MEM_Blob value is stored in MEM.zMalloc, where it can be safely written.
Change rc to non-zero if a discrepancy is found.
Change sign of singular vectors, if desired
Change the "soft" limit on the number of pages in the cache.
Change the "spill" limit on the number of pages in the cache.
Change the 'auto-vacuum' property of the database.
Change the OP_OpenEphemeral coded earlier to an OP_Null sets the MEM_Cleared bit on the first register of the previous value.
Change the P2 operand of instruction addr so that it points to the address of the next instruction to be coded.
Change the alarm callback
Change the comment on the most recently coded instruction.
Change the default pages size and the number of reserved bytes per page.
Change the error string stored in Vdbe.zErrMsg
Change the journal mode.
Change the key on an open database.
Change the limit on the amount of the database file that may be memory mapped.
Change the limit on the number of pages allowed in the cache.
Change the lock state for a shared-memory segment.
Change the maximum number of in-memory pages that are allowed before attempting to recycle clean and unused pages.
Change the maximum number of in-memory pages that are allowed before attempting to spill pages to journal.
Change the maximum number of in-memory pages that are allowed.
Change the maximum size of any memory mapping made of the database file.
Change the opcode at addr into OP_Noop
Change the page number of page p to newPgno.
Change the page size for PCache object.
Change the page size used by the Pager object.
Change the size of an existing memory allocation
Change the size of an existing memory allocation.
Change the size to which the WAL file is trucated on each reset.
Change the string value of an sqlite3_value object
Change the type of test
Change the value of a Mem to be a string or a BLOB.
Change the value of a limit.
Change the value of the P1 operand for a specific instruction.
Change the value of the P2 operand for a specific instruction.
Change the value of the P3 operand for a specific instruction.
Change the value of the P4 operand for a specific instruction.
Change the value of the P5 operand for the most recently added operation.
Change the value of the opcode, or P1, P2, P3, or P5 operands for a specific instruction.
Change the way data is synced to disk in order to increase or decrease how well the database resists damage due to OS crashes and power failures.
Change this structure only by using the routines below.
Change to WRITER_LOCKED state.
Change-list for UPDATE, NULL for DELETE
Changed ternary operator to an if/else so that additional comparisons can be done on the ssl_method property
Changed to my_bool in MySQL 5.1.
Changegroup object to add changeset to
Changes are not recorded for individual rows that have NULL values stored in one or more of their PRIMARY KEY columns.
Changes are not recorded for rows that have NULL values stored in one or  more of their PRIMARY KEY columns.
Changes can only be recorded for tables that have a PRIMARY KEY explicitly defined as part of their CREATE TABLE statement.
Changes in the GROUP BY are detected by the previous code block.
Changes include:  (1)  Convert the OP_CreateTable into an OP_CreateIndex.  There is no rowid btree for a WITHOUT ROWID.
Changes include:  (1)  Set all columns of the PRIMARY KEY schema object to be NOT NULL.
Changes list for any UPDATE OF triggers
Changes list if ON UPDATE CASCADE
Changes the order of array strides and dimensions.
Changes the signal mask of the calling thread
Changes to rows that do not already appear in the changegroup are simply copied into it.
Changes to this routine must be coordinated with changes to mkopcodeh.tcl.
Changes whenever database content changes
Changes whenever database file changes
Changes with each schema change.
Changeset iterator to read change from
Changing the PENDING byte while any database connection is open results in undefined and deleterious behavior.
Changing the PENDING byte while any database connection is open results in undefined and dileterious behavior.
Changing the definition of GD2_DBG (below) will cause copious messages to be displayed while it processes requests.
Changing the formula used to compute this checksum results in an incompatible journal file format.
Changing the local value does not make changes to the disk file and the default value will be restored the next time the database is opened.
Changing the value of PENDING_BYTE results in a subtly incompatible file format.
Changing the value of this variable while a database connection is open can result in a corrupt database.
Changing the value sets a specific directory to be used for database files that were specified with a relative pathname.
Changing the value sets a specific directory to be used for temporary files.
Changing the value sets a specific file to be used for database access locks.
Changing this from a 64-bit to a 32-bit type limits the number of tables in a join to 32 instead of 64.
Changset operation (SQLITE_UPDATE etc.)
Channel libxml file io layer through the PHP streams subsystem.
Char has only one other case, or UCP not available
Character before the next significant one.
Character bitsets can also be compared to certain opcodes.
Character class where all the information is in a bit map: set the bits and either carry on or not, according to the repeat count.
Character comes in TMP1.
Character iIn and iIn+1 form an escaped quote character.
Character iIn was the close quote.
Character is valid under RFC 2279, but 4-byte and 5-byte characters are excluded by RFC 3629.
Character iterators, which are not inside a repeated bracket, gets a private slot instead of allocating it on the stack.
Character set tests (like isspace(), isalpha() etc.)
Character that has the set
Character values not kept over RMATCH() calls
Characters that can be part of a token.
Characters that may appear in the second argument to matchinfo().
Characters that may be part of barewords:  All non-ASCII characters, The 52 upper and lower case ASCII characters, and The 10 integer ASCII characters.
Characters to treat as exceptions
Chase bulge from bottom (big end) to top (small end)
Chase bulge from bottom to top Save cosines and sines for later singular vector updates
Chase bulge from top (big end) to bottom (small end)
Chase bulge from top to bottom Save cosines and sines for later singular vector updates
Check  whether E(N0-2) is negligible, 2 eigenvalues.
Check 'reader.c' for more details on UTF-8 encoding.
Check 3rd and 4th bytes for 0x80.
Check 3rd-6th bytes for 0x80.
Check RFC 2781 (http://www.ietf.org/rfc/rfc2781.txt).
Check RFC 3629 (http://www.ietf.org/rfc/rfc3629.txt) for more details.
Check String and Unicode more closely
Check a UTF-8 string if required.
Check a character and a property        *
Check a class for variable quantification
Check a command string to determine if it has I/O redirection characters that require it to be executed by a command interpreter
Check a unixFile that is a database.
Check again, the original check might have not known the protocol name
Check against the casting rules
Check all the tables.
Check and decode the trailing octets.
Check and see if the server even sent a xml document
Check any rowid-less pages that occur before the current leaf.
Check btree cell sizes on load
Check conditions under which this can be done
Check config setting for default timezone
Check connection liveness in the following order: 1) always check OCI_ATTR_SERVER_STATUS 2) see if it's time to ping it 3) ping it if needed
Check datatype element size
Check destination file
Check dimensions and multiply them to nbytes
Check dlclose for successful return value
Check every term in the ORDER BY or GROUP BY clause pOrderBy of the SELECT statement pSelect.
Check first byte for for xx00 000x (overlong sequence).
Check for 'x:x' in the flow context.
Check for Boolean -- this is first becasue Bool is a subclass of Int
Check for Boolean object
Check for Infinity and NaN
Check for Integer or Slice
Check for JMPZNZ with same cond variable
Check for Nan and Infinity
Check for OCIClientVersion() support
Check for PHP_INI_SCAN_DIR environment variable to override/set config file scan directory
Check for POSIX class syntax         *
Check for SERVER_STATUS_MORE_RESULTS if needed
Check for a "special" INSERT operation.
Check for a NaT string
Check for a URI-escaped octet.
Check for a chomping indicator.
Check for a decomposition.
Check for a deprecated Numeric-style typecode
Check for a document indicator.
Check for a high surrogate area.
Check for a low surrogate area.
Check for a pattern than can match an empty string, so that this information can be provided to applications.
Check for a potential simple key for each flow level.
Check for a string typecode.
Check for a supported opcode, and load its properties.
Check for a tab character messing the indentation.
Check for a test for recursion in a named group.
Check for additional textual data
Check for an Implicit Result Set on this statement handle
Check for an blank character after the name.
Check for an escape sequence.
Check for an escaped line break.
Check for an escaped single quote.
Check for an indentation indicator.
Check for anchored expression         *
Check for asserted fixed first char      *
Check for attempt to redeclare interface constants
Check for authorization to create an index.
Check for back reference
Check for class alias
Check for complete coverage of the page
Check for condition (a)
Check for conditions that warrant removal of the hash entry
Check for convergence or exceeding iteration count
Check for correct numbers.
Check for ctypes arrays
Check for datetime format
Check for denormal case.
Check for deprecated directives
Check for diagonality.
Check for different-sized strings, unicodes, or voids
Check for dynamic properties
Check for empty tuple
Check for ending label on the next line
Check for error during recursion and if found, bail.
Check for errors in the format string.
Check for explicit anchoring
Check for global one-time settings at the start of the pattern, and remember the offset for later.
Check for grandfathered first
Check for immediate foreign key violations.
Check for incomplete UTF-16 character.
Check for incomplete surrogate pair.
Check for index coverage
Check for indicators that may end a plain scalar.
Check for integer array
Check for integer primary key out of range
Check for ints at start of string
Check for key annihilation.
Check for locking consistency
Check for mismatched parenthesis
Check for mutual recursion
Check for namespace constant
Check for negative data and compute sums of q's and e's.
Check for newline at given position       *
Check for newline at previous position     *
Check for no convergence to an eigenvalue after a total of N*MAXIT iterations.
Check for one of the special errors
Check for open captures before ACCEPT and convert it to ASSERT_ACCEPT if in an assertion.
Check for open colors at the end, so we can reduce colorsTotal and ultimately BitsPerPixel
Check for out-of-bounds values in indices array
Check for overflow - bug 61065
Check for quantifiers after a class.
Check for repeating a recursion without advancing the subject pointer.
Check for single index. obj is already set then.
Check for singularity if non-unit.
Check for special case that d is a normalized power of 2.
Check for stream wrapper
Check for tab character that abuse indentation.
Check for the following errors:  Too many attached databases, Transaction currently open Specified database name already being used.
Check for the rbu_count table.
Check for the right quote.
Check for the special magic call that measures the size of the stack used per recursive call of match().
Check for the supported string inputs
Check for time attributes (if not there, return success as a date)
Check for too many substrings condition.
Check for traits and proceed like with interfaces.
Check for unexpected low surrogate area.
Check for unserialize callback
Check for valid number and count digits.
Check for validity of input parameters
Check for variable references only
Check for whether to do titles as well
Check for xbithack in this case.
Check host whitelist.
Check if a multi-index was requested
Check if a precision was specified
Check if a scalar is valid.
Check if a simple key may start at the current position and add it if needed.
Check if a string is a valid UTF-8 sequence.
Check if a tag is valid.
Check if a thread in this process holds such a lock
Check if a width was specified
Check if an anchor is valid.
Check if an existing function is being overridden or deleted.
Check if another file-handle holds a RESERVED lock on an rbuVfs-file.
Check if any child key columns are being modified.
Check if any of the key columns in the child table row are NULL.
Check if any parent key columns are being modified.
Check if any potential simple key may occupy the head position.
Check if data must be read/written to/from the btree page itself.
Check if disp_loc_name passed , if not use default locale
Check if eigenvalues are close enough to allow deflation.
Check if function with given name exists.
Check if it is a URI-escape sequence.
Check if it is a first line break.
Check if it is an FTS4 special argument.
Check if it is, indeed, handle.
Check if it's a NumPy scalar
Check if it's a Python scalar
Check if it's a Unicode string
Check if it's a business day
Check if it's an ASCII string
Check if it's an ndarray
Check if keep-alive connection is still opened
Check if locale was changed and change it back to the value in startup environment
Check if new array is both F- and C-contiguous
Check if object is of array with Null newtype.
Check if operands have enough dimensions
Check if passed filename contains directory separators
Check if php_ini_file_name is a file and can be opened
Check if request to the same host
Check if script may be stored in shared memory
Check if singular values are close enough to allow deflation.
Check if the Windows standard handle has VT100 control codes enabled
Check if the Windows standard handle is redirected to file
Check if the array is valid and fill the information
Check if the buffer is empty.
Check if the caller wants to handle inner iteration
Check if the contents of the FTS index match the current contents of the content table.
Check if the current doclist ends on this page.
Check if the current entries really are a phrase match
Check if the cursor is past the end of the docid range specified by Fts3Cursor.iMinDocid/iMaxDocid.
Check if the document content is an empty scalar.
Check if the event data is valid.
Check if the file descriptor identifier is a terminal
Check if the file descriptor is a console
Check if the guy tries to do a -: kind of flag
Check if the index cursor is past the end of the range.
Check if the index is simple enough
Check if the iterator is now at EOF.
Check if the leading octet is valid.
Check if the main database is a zipvfs db.
Check if the name is empty.
Check if the new iterindex is already within the buffer
Check if the next events represent an empty mapping.
Check if the next events represent an empty sequence.
Check if the next node can be expressed as a simple key.
Check if the number is too long.
Check if the number was present.
Check if the octet is valid.
Check if the operand is aligned
Check if the operand is in the byte order requested
Check if the output file is full or if the input has been exhausted.
Check if the path is too long so we can give a more useful error message.
Check if the potential simple key to be removed is required.
Check if the program stored in the VM associated with pParse may throw an ABORT exception (causing the statement, but not entire transaction to be rolled back).
Check if the query is of one of the following forms:  SELECT min(x) FROM ...
Check if the raw buffer contains an incomplete character.
Check if the raw buffer contains enough bytes to form a character.
Check if the requested address space is free
Check if the requested node is already in the hash table.
Check if the root node now has exactly one child.
Check if the scanner is in the block context.
Check if the summation dimension is 0-sized
Check if the tag is in the canonical form.
Check if the tag is non-empty.
Check if the temp table already contains this key.
Check if the trailing octet is correct.
Check if the type is equivalent
Check if the type is equivalent to INTP
Check if the units of the given dtype are generic, in which case we use the code path that detects the units
Check if the user is trying to define the internal pseudo constant name __COMPILER_HALT_OFFSET__
Check if there are (nSnippet+nDesired) or more tokens in zDoc/nDoc.
Check if there exists a MATCH constraint - even an unusable one.
Check if there is a previous value to deallocate
Check if there is any argsorting to do
Check if there is any sorting to do
Check if there were any options specified that should be interpreted  here.
Check if this call is removing or replacing an existing collation  sequence.
Check if this index matches those columns.
Check if this is a recursive CTE.
Check if this is a tokenizer specification
Check if this is to be a periodic sample.
Check if this page has already been written into the wal file by the current transaction.
Check if this phrase descends from an OR expression node.
Check if this zval could be dtor()'ed somehow
Check if we already know which method we're calling
Check if we are allowed to start a complex value.
Check if we are allowed to start a new entry.
Check if we are allowed to start a new key (not nessesary simple).
Check if we are at the end of the line.
Check if we are at the end of the scalar.
Check if we are using MacOS X version 10.9
Check if we have a CDF file
Check if we have a tar file
Check if we have reached max_persistent.
Check if we just started scanning.
Check if we need to accumulate more events before emitting.
Check if we need to decode utf-8 parser output to another encoding
Check if we need to fold the leading line break.
Check if we need to join whitespaces and breaks.
Check if we need to move the queue at the beginning of the buffer.
Check if we need to resize the queue.
Check if we really need to fetch more tokens.
Check if we still need to put the file into the cache (may be it was already stored by another process.
Check indentation level.
Check invalid chars for POSIX regex
Check invariants on a Mem object.
Check invariants on a PgHdr entry.
Check invariants on a PgHdr object
Check module dependencies
Check mutate st_* functions st_insert() st_insert2() st_update() st_add_direct() 2.
Check next Implicit Result Set
Check number of arguments
Check on a Vdbe to make sure it has not been finalized.
Check out all the cells.
Check payload overflow pages
Check persistent connections and do the necessary actions if needed.
Check preceeding separator
Check return type compatibility, but only if the prototype already specifies a return type.
Check sanity of left child page for internal pages
Check sanity of left child page.
Check schema cookies in all databases.
Check section 6 of rfc 822 http://www.faqs.org/rfcs/rfc822.html
Check session ID existence for use_strict_mode support.
Check that MEMDB implies noSync.
Check that a start_offset points to the start of a UTF character.
Check that a table or index named 'zName' does not already exist in database iDb.
Check that all non-HIDDEN columns in the destination table are also present in the input table.
Check that all the array inputs are fortran order
Check that all the axes can be coalesced
Check that all undefined public option bits are zero
Check that argument nHeight is less than or equal to the maximum expression depth allowed.
Check that each phrase in the nearset matches the current row.
Check that everything could have coalesced together
Check that flags is exactly equal to PHP_EXPUNGE or zero
Check that malloc() has not failed.
Check that narrowing can actually be useful
Check that one of SQLITE_SYNC_NORMAL or FULL was passed
Check that sqlite3VdbeUsesBtree() was not called on this VM
Check that the CTE name is unique within this WITH clause.
Check that the Go code saw SIGIO.
Check that the LHS of the comparison is a column reference to the right column of the right source table.
Check that the affinity that will be used to perform each  comparison is the same as the affinity of each column in table on the RHS of the IN operator.
Check that the affinity that will be used to perform the  comparison is the same as the affinity of the column.
Check that the array is in order and contains no duplicate entries.
Check that the blob is roughly the right size.
Check that the column is not part of an FK child key definition.
Check that the doclist does not appear to extend past the end of the b-tree node.
Check that the entry in the pointer-map for page iChild maps to  page iParent, pointer type ptrType.
Check that the first field in the block is the magic number.
Check that the format string is a valid one for NumPyOS_ascii_format*
Check that the hwm handling hasn't gone wrong.
Check that the indentation is greater than 0.
Check that the internal nodes of each segment match the leaves
Check that the leaf contains at least one term, and that it is equal to or larger than the split-key in zIdxTerm.
Check that the leaf page indicated by the iterator really does contain the rowid suggested by the same.
Check that the list really is sorted now.
Check that the new column is not specified as PRIMARY KEY or UNIQUE.
Check that the optional printf format in description matches the type of the magic.
Check that the other successor of the from block does not dominate all other predecessors.
Check that the output buffer is large enough for the temporary file  name.
Check that the page exists
Check that the page has just been zeroed by zeroPage()
Check that the pointer pOld points to a valid, non-free block.
Check that the request matches the signature
Check that the results returned for ASC and DESC queries are the same.
Check that the sort worked
Check that the stack is large enough to grow by a single entry if the RHS of the rule is empty.
Check that the string is not interned
Check that the trigger name is not reserved and that no trigger of the specified name exists
Check that the two values are in the correct order.
Check that the values read from the page-size and sector-size fields are within range.
Check that the virtual-table is not already being initialized
Check that the wal file has not been wrapped.
Check that there are at least nSavepoint savepoints open.
Check that there are no document indicators at the beginning of the line.
Check that there are no duplicates in op_axes
Check that there is enough  space to append the largest possible new entry.
Check that there is no open read-transaction on the b-tree passed as the second argument.
Check that there isn't an ORDER BY without a LIMIT clause.
Check that this node should not be FTS5_TERM
Check that this pattern was compiled in the correct bit mode
Check that value is actually a blob.
Check that we actually got the requested WSA version
Check that we will not run out of indices to store new ones
Check that zKey/nKey is larger than the largest key the candidate
Check that:  1) All leaves of pSeg between iFirst and iLast (inclusive) exist and contain zero terms.
Check that:  a) The incremental merge object is configured to use the right task, and b) If it is using task (nTask-1), it is configured to run in single-threaded mode.
Check the APP1 for Exif Identifier Code
Check the RTree node or entry given by pCellData and p against the MATCH constraint pConstraint.
Check the alternative branches in turn - the matching won't pass the KET for an assertion.
Check the alternative branches in turn - the matching won't pass the KET for this kind of subpattern.
Check the base for scale digits.
Check the casting rule
Check the character which ends the tag.
Check the content overflow list
Check the data types whose casting functions use API calls
Check the escape character.
Check the existence and status of a file.
Check the existence of a conversion path.
Check the exponent for scale digits and convert to a long.
Check the exponent for scale digits.
Check the flag for a write masked operands
Check the flags for temporary copies
Check the generic types
Check the global iterator flags
Check the header for a few cases that we have special support for in SAPI
Check the indentation level against the current column.
Check the integrity of overflow pages.
Check the integrity of the freelist
Check the integrity of the freelist or of an overflow page list.
Check the internal RTree node given by pCellData against constraint p.
Check the leaf RTree cell given by pCellData against constraint p.
Check the length of the sequence against the value.
Check the list of potential simple keys and remove the positions that cannot contain simple keys anymore.
Check the modulus for scale digits.
Check the next character by Unicode property.
Check the next two values for correctness.
Check the number of columns in this xPreUpdate call matches the  number of columns in the table.
Check the range of the value.
Check the read/write flags
Check the readonly/writeonly flags, and fill in op_itflags
Check the references of a node and assign the anchor id if needed.
Check the second level cache
Check the signs of all the operand strides.
Check the table schema is still Ok.
Check the table schemas match
Check the user's password, return 1 if OK
Check the value and write the character.
Check third byte for 0x80.
Check this now so we do not have to worry about it later.
Check threshold value
Check to collation names to see if they are compatible.
Check to ensure that the cursor is valid.
Check to make sure that the opened file is not outside of allowable dirs.
Check to make sure the given table is writable.
Check to make sure the sqlite_stat1 table exists
Check to make sure the temporary directory ends with an appropriate separator.
Check to make sure there is enough space in the gap to satisfy the allocation.
Check to make sure we are not going to go past the ExifLength
Check to make sure we have a valid db pointer.
Check to see if a partial index with pPartIndexWhere can be used in the current query.
Check to see if a unixShmNode object already exists.
Check to see if an existing table or index can be used to satisfy the query.
Check to see if another process is holding the dead-man switch.
Check to see if column iCol of the given statement is valid.
Check to see if defragmentation is necessary.
Check to see if element iRowid was inserted into the rowset as part of any insert batch prior to iBatch.
Check to see if flattening is permitted.
Check to see if index pSrc is compatible as a source of data for index pDest in an insert transfer optimization.
Check to see if input is single-segment, aligned, and in native byteorder
Check to see if input is zero-dimensional.
Check to see if it has been allocated (i.e. if the wal-index file is large enough to contain the requested region).
Check to see if it is OK to read this particular column.
Check to see if it is an integer number
Check to see if pExpr is a duplicate of another aggregate  function that is already in the pAggInfo structure
Check to see if pIndex uses the collating sequence pColl.
Check to see if pWLoop should be added to the mxChoice best so far
Check to see if pWLoop should be added to the set of mxChoice best-so-far paths.
Check to see if sequence is a single integer first.
Check to see if sqlite3_interrupt() has been called or if the progress callback needs to be invoked.
Check to see if that table and column is common to every term in the OR clause
Check to see if the CreateFileMappingA function is supported on the target system.
Check to see if the FROM clause term pFrom has table-valued function arguments.
Check to see if the candidate should replace pTo or if the candidate should be skipped
Check to see if the column is in one of the tables in the FROM clause of the aggregate query
Check to see if the database has been modified.
Check to see if the given expression is a LIKE or GLOB operator that can be optimized using inequality constraints.
Check to see if the given expression is of the form  column MATCH expr  If it is then return TRUE.
Check to see if the given expression is of the form  column OP expr  where OP is one of MATCH, GLOB, LIKE or REGEXP and "column" is a  column of a virtual table.
Check to see if the i-th bit is set.
Check to see if the new index entry will be unique
Check to see if the new rowid already exists in the table.
Check to see if the range is in reverse order.
Check to see if the zSpan given to this routine matches the zDb, zTab, and zCol.
Check to see if this back reference is recursive, that it, it is inside the group that it references.
Check to see if this declare is preceeded only by declare statements
Check to see if this is EOL whitespace.
Check to see if this is the case.
Check to see if this is the last character in the set, in which case it is not a range and we should add the previous character as well as the dash.
Check to see if this machine uses EBCDIC.
Check to see if virtual table module pMod can be have an eponymous virtual table instance.
Check to see if we need to back up because we only got a sign or a trailing x after a 0.
Check to see if we need to back up because we saw a trailing 'e' or sign.
Check to see if we need to create an sqlite_sequence table for keeping track of autoincrement keys.
Check to see if we need to simulate an interrupt.
Check to see if we should honor DESC requests on index columns
Check to see that type (and otype) is not FLEXIBLE
Check to see the left operand is a column in a virtual table
Check to see what HTTP status was sent
Check to verify that it is possible to get a read lock on all database schemas.
Check top bits in the second byte
Check we are at the start of a char
Check we have remaining characters.
Check whether E(N0-1) is negligible, 1 eigenvalue.
Check whether TMP1 contains a newline character.
Check whether any errors occurred during the loop
Check whether cache entry has expired and rescan if it is
Check whether full request is buffered.
Check whether it's a leap-year
Check whether the current request was referred to by an external site which invalidates the previously found id.
Check whether the fancy indices are out of bounds.
Check whether the given array is stored contiguously in memory.
Check whether the machine is IEEE conformable.
Check whether the operand could not be broadcast and replace the error in that case.
Check whether the operation needs to be forwarded to the right-hand binary operation.
Check whether the original axes can be combined
Check whether the subtype was disabled
Check whether there are any WRITEMASKED REDUCE operands which should be validated after all the strides are filled in.
Check whether there are any WRITEMASKED REDUCE operands which should be validated now that all the strides are filled in.
Check whether we can apply the single iteration optimization to the iternext function.
Check whether we can get rid of some of the deleted entries which are unused.
Check whether we can provide the wanted properties
Check whether we're running in a PHP context, since the entity loader we've defined is an application level (true global) setting.
Check your own systems manpage on assert() to see how to compile WITHOUT the sanity checking code on your system.
Checked before the virtual table is created
Checking configure timezone
Checking flags and updating ovector_start.
Checking for permitted and forbidden duplicates has already been done.
Checking that we did the maths correctly.
Checking the status flag clears it
Checking whether casts are valid is done later, once the final data types have been selected.
Checking zero-length iteration.
Checkpoint and close the log.
Checkpoint database zDb.
Checkpoint information in wal-index
Checkpoint sequence counter in the wal-header
Checks everything but the bounds.
Checks for any conflicts regarding the output handler to start
Checks for constructors only if they are declared in an interface, or explicitly marked as abstract
Checks for runs when THRESHOLD/2 pairs compare with same sense.
Checks if 'obj' is a valid output array for a ufunc, i.e. it is either None or a writeable array, increments its reference count and stores a pointer to it in 'store'.
Checks if a constant (like "true") may be replaced by its value
Checks if it is a newline.
Checks if the object in descr is the default 'descr' member for the __array_interface__ dictionary with 'typestr' member typestr.
Checks if the provides resource is a stream and if it provides a file descriptor
Checks that cert signature is made with PRIVversion of this PUBLIC 'key'
Checks that the mask broadcasts to the WRITEMASK REDUCE operand 'iop', but 'iop' never broadcasts to the mask.
Checks that there are only zero or one dimensions selected in 'axis_flags', and raises an error about a non-reorderable reduction if not.
Checks the per-operand input flags, and fills in op_itflags.
Checks the validity of the Real variable v.
Checks whether a partial matching is occurred.
Checks whether the base and the current opcode have a common character, in which case the base cannot be possessified.
Checks whether the code points to an opcode that can take part in auto- possessification, and if so, fills a list with its properties.
Checks whether the structured data type in 'dtype' has a simple layout, where all the fields are in order, and follow each other with no alignment padding.
Checksum based on FTS index contents
Checksum based on contents of indexes
Checksum does not match
Checksum for wal-header
Checksum of last frame in log
Checksum of string zMaster
Checksum on the header content
Checksum over all prior fields
Checksum used for sanity checking
Checksum value to return
Checksums and counters attached to each frame are used to determine which frames within the WAL are valid and which are leftovers from prior checkpoints.
Child has no more instances to examine
Child node (or 0 if this is a leaf)
Child table contain "REFERENCES" keyword
Child to update for nested iteration
Choices include no escaping, entity escaping, or CDATA sections.
Chomp all segments opened by this cursor
Choose PADSIZE to trade efficiency vs.
Choose between QL and QR iteration
Choose branch according to the condition
Choose split point along selected axis, and update box bounds.
Choose which axis to split the box on.
Choose which subtype to return
ChooseSubTree in r*tree terminology.
Chunk i is a free chunk that has been unlinked.
Chunk of wal-index containing header
Chunk size configured by FCNTL_CHUNK_SIZE
Circumstances that cause a RETRY should only last for the briefest instances of time.
Claim a reference to timezone for later
Clamp the rest to final out value (which is (MAXJSAMPLE+1)/8)
Clamp the size to the min/max size, if specified, and make sure it doesn't go below the padding and border amount.
Clamp to the min/max size specified on the container.
Clamping to allow for rounding errors above
Class and method registration
Class declaration must not extend traits or interfaces
Class derived from sqlite3_tokenizer
Class derived from sqlite3_tokenizer_cursor
Class must not extend a final class
Class name is stored as a string, we might also get "self" or "parent" - For "self", simply use the function scope.
Class object properties
Classes for calculating message digests using the SHA-256/384/512 Secure Hash Algorithm(s) by NIST (the US' National Institute of Standards and Technology), described in FIPS PUB 180-2.
Classes which inherit from Numeric must implement +coerce+, which returns a two-member Array containing an object that has been coerced into an instance of the new class and +self+ (see #coerce).
Classes with traits are handled exactly the same, no early-bind here
Clean  up and report errors.
Clean all parts that can contain run-time data
Clean up a VDBE after execution but do not delete the VDBE just yet.
Clean up and delete a VDBE after execution.
Clean up and return the number of elements in the stack
Clean up and return the number of values in the stack
Clean up and return the number.
Clean up any resources allocated as part of the iterator object passed as the only argument.
Clean up before exiting
Clean up child processes upon exit
Clean up class name var entry
Clean up old array entry
Clean up opened resources.
Clean up string and unicode array types so they act more like strings -- get their tables from the standard types.
Clean up temporary storage.
Clean up temporary variables
Clean up temporary variables and indices
Clean up the VM after a single run.
Clean up the VM after execution.
Clean up the WHERE clause constructed above.
Clean up the allocated argv and environ if applicable.
Clean up the emitter object after a document is dumped.
Clean up the rbu_tmp_xxx table for the previous table.
Clean what we copied last time
Cleans out all the data on a pipe.
Cleans up the mapped region of the specified file, if any.
Cleanup before returning.
Cleanup expired session data.
Cleanup static data for functions and arrays.
Cleanup zstr to hold utf16 string.
Clear (destroy) the BtShared.pHasContent bitvec.
Clear CLOEXEC for standard file descriptors: 0, 1, 2.
Clear MemPage.isInit to make sure the corruption detection code in btreeInitPage() is executed.
Clear OpenSSL error queue before re-raising.
Clear all column cache entries.
Clear any and all virtual-table information from the Table record.
Clear any existing type flags from a Mem and replace them with f
Clear any flags allowing copies for the rest of the iterators
Clear any flags allowing copies or output allocation for the inner loop.
Clear any prior statistics
Clear any unnecessary ALLOCATE flags, so we can use them to indicate exactly the allocated outputs.
Clear buffer info from the global dictionary
Clear flags from pages of the page cache
Clear operations are exceedingly rare.
Clear out the array that was passed in.
Clear out the hash table
Clear previous errno, reset success and tries
Clear pseudo-table cache in OP_Column
Clear stat cache (and realpath cache)
Clear the PGHDR_NEED_SYNC and PGHDR_WRITEABLE flag from all dirty pages.
Clear the PGHDR_NEED_SYNC flag from all dirty pages.
Clear the TEMP schema separately and last
Clear the WhereLoop.u union.
Clear the YMD and HMS and the TZ
Clear the buffer for the intermediate result so that people attaching to processes or reading core dumps cannot get any information.
Clear the column names from every VIEW in database idx.
Clear the common dtype flag for the rest of the iterators
Clear the content of node p (set all bytes to 0x00).
Clear the current cursor position.
Clear the expired config
Clear the extra-lines buffer
Clear the hash table containing pending terms.
Clear the holidays if necessary
Clear the identity perm flag
Clearing the P3 column cache as part of this opcode saves us from having to issue a separate NullRow instruction to clear that cache.
Clearly such small values would be inefficient, but can be useful  for testing purposes.
Clearly they are stressing Lemon in ways that it has not been previously stressed...
Client data for xCreate/xConnect
Client sessions are added to the session cache
Clone all the owned auxdata as well
Close a VDBE cursor and release all the resources that cursor  happens to hold.
Close a blob handle that was previously created using sqlite3_blob_open().
Close a connection to a log file.
Close a connection to shared-memory.
Close a file descriptor.
Close a file that uses proxy locks.
Close a handle opened by an earlier call to sqlite3Fts5IndexOpen().
Close a handle opened by an earlier call to sqlite3Fts5StorageOpen().
Close a statvfs cursor.
Close a tokenization cursor previously opened by a call to icuOpen().
Close a tokenization cursor previously opened by a call to porterOpen() above.
Close a tokenization cursor previously opened by a call to simpleOpen() above.
Close all cursors in the current frame.
Close all cursors opened via this handle.
Close all database connections
Close all handles to avoid a deadlock
Close all of the cursors that were opened by sqlite3WhereBegin.
Close all open savepoints.
Close all tables opened
Close an existing SQLite database
Close an iterator opened by an earlier call to sqlite3Fts5IndexQuery().
Close an iterator opened by sqlite3Fts5IndexQuery().
Close an open database and invalidate all cursors.
Close an open wal-index.
Close any open statement handles.
Close any rollback journal previously open
Close cursor, needed for doing multiple selects
Close now, free_reference will try, if we are last, but that's not a problem.
Close resource, but keep it in resource list
Close stdio descriptors
Close the RBU handle.
Close the cursors open on the table and its indexes.
Close the dynamic library handle pHandle.
Close the mutex on database connection db.
Close the open database handle and VFS object.
Close the read transaction here.
Close the read-only blob handle, if it is open.
Close the sub-journal if it is open and the pager is not in exclusive mode.
Close the transaction, if one was opened.
Close the underlying file handle
Close with last statement close
ClosedQueueError is inherited from StopIteration, so that you can break loop block.
Closes the SOCKS connection.
Closes the syslog facility.
Closures are immutable objects
Closures can be rebound to a different scope
Coalesce adjacent free blocks
Coalesce adjacent free chunks.
Coalesce any dimensions where possible
Coalesce axes i and j
Coalesced Instance Iterator
Code an OP_Affinity opcode to apply the column affinity string zAff to the n registers starting at base.
Code an OP_Expire to invalidate all pre-compiled statements.
Code an OP_Halt due to UNIQUE or PRIMARY KEY constraint violation.
Code an OP_Halt due to non-unique rowid.
Code an OP_Halt that causes the vdbe to return an SQLITE_CONSTRAINT error.
Code an OP_Once instruction and allocate space for its flag.
Code an OP_TableLock instruction for each table locked by the statement (configured by calls to sqlite3TableLock()).
Code an output subroutine for a coroutine implementation of a SELECT statment.
Code below may link it back in.
Code constant expressions that where factored out of inner loops
Code external to the Vdbe then "borrows" the b-tree cursor and uses it to implement the blob_read(), blob_write() and  blob_bytes() functions.
Code for IEEE arithmetic.
Code for non IEEE arithmetic.
Code for the character type
Code for the non-UTF-8 case for minimum matching of operators other than OP_PROP and OP_NOTPROP.
Code generator context
Code in "finally" blocks may modify temorary variables.
Code is generated to remove entries from sqlite_master and/or sqlite_temp_master if required.
Code originally from ext/sockets
Code parameters and static tables         *
Code shared with single character types
Code should use the MACRO forms below, as the Varint32 versions are coded to assume the single byte case is already handled (which  the MACRO form does).
Code taken from libxml2 (2.6.20) xmlNewReconciliedNs  Find a close prefix which is not already in use.
Code that appears at the end of the integrity check.
Code the OP_Affinity opcode if there is anything left to do.
Code the OP_Program opcode in the parent VDBE.
Code the SELECT statements to our left
Code the SELECTs to our left into temporary table "tab1".
Code the current SELECT into temporary table "tab2"
Code the current SELECT statement
Code the trigger program into the sub-vdbe.
Code unit is being skipped
Code when diagonals of pivoted C are real
Code when off-diagonals of pivoted C are real
Code which gets here is using a wrongly built opcode such as RECV()
Coded by Takuji Nishimura and Makoto Matsumoto.
Coding an expression that is part of an index where column names in the index refer to the table to which the index belongs
Coding style component
Collapse multiple stars.
Collating sequence for each term of the key
Collating sequence for the result set
Collating sequence must be the same on all columns
Collating sequence name
Collating sequence to be reindexed, or NULL
Collating sequence to on a column
Collating sequence to use on this term
Collating sequence with native encoding, or NULL
Collating sequences are not used.
Collation and sort-order information
Collation sequence comparison function.
Collation sequence destructor function.
Collation sequence name
Collator has no usable clone semantics - ucol_cloneBinary/ucol_openBinary require binary buffer for which we don't have the place to keep
Collect "def" and "use" sets
Collect 'global' stats as well as local
Collect arguments into local variables
Collect bit depth info
Collect extensions with request startup/shutdown handlers
Collect internal classes with static members
Collect results from the searches
Collect the case mappings.
Collect the codes of the decomposition.
Collect the offsets for the properties.
Collects the calls until the function is not created.
Collisions are on the FuncDef.pHash chain.
Collisions are on the FuncDef.u.pHash chain.
Colors described in the paper but not used ------------------------------------------  GREEN - Acyclic RED   - Candidate cycle underogin ORANGE - Candidate cycle awaiting epoch boundary.
Colset to filter on (or NULL)
Column 0 causes bit 0 to be set.
Column affinity types.
Column col1 is column iColLeft of tab1, and col2 is column iColRight of tab2.
Column containing best snippet
Column currently being processed
Column definitions created by an ALTER TABLE command may only have  literal default values specified: a number, null or a string.
Column for entry to add
Column index on lhs of IN operator
Column into which text is being inserted
Column is part of the primary key
Column names corresponding to IDLIST.
Column names for INSERT
Column names must be nul-terminated strings.
Column names to return
Column number in the sorting index
Column number of matching column on the left
Column number of matching column on the right
Column number within the source table
Column of index to match
Column of last value written
Column of table to populate aTerm for
Column on left-hand side of constraint
Column ref to child table
Column snippet is extracted from
Column that is the INTEGER PRIMARY KEY
Column that token must appear in (or -1)
Column to extract from poslist
Column to query (or -ve for all columns)
Column to read value from
Column to return position list for
Column token must occur in
Column-list terminator
Column.zType, Column.zColl, and other fields of Column are zeroed.
Columns 1:kk are handled by the unblocked method.
Columns are 0 indexed
Columns are not decoded and reassembled, which greatly improves performance.
Columns are not decoded and reassemblied, which greatly improves performance.
Columns for imposter table
Columns in the other table
Columns in this table that point to other table
Columns in zFrom.zTbl
Columns of index used so far
Columns of the index used
Columns that change in an UPDATE statement
Combination of OP_EXACT and OP_POSSTAR or OP_POSUPTO
Combination size from argument
Combinations of two or more EP_* flags
Combine 'self' and 'args' together into one tuple
Combine Step 3 and Step 5 into a single opcode
Combine identical coefficients
Combine identical coefficients, remove unnecessary variables, and trim bounds.
Combine it with 'meta'
Combine it with the existing type
Combine the op_type with the repeat_type
Combine two changesets together.
Combined MEM_* flags from both inputs
Combined size of cells place on i-th page
Combined size of cells placed on i-th page
Combined with the fact that every message digest algorithm has a fixed-length output of just a few bytes, digests are often used to create unique identifiers for arbitrary data.
Come here from code above that handles a named recursion
Come here from named backref handling when the reference is to a single group (i.e. not to a duplicated name.
Comes from the master Walking the table
Comma between the subscripts for each operand
Commands and events are passed back and forth between the main thread and the run loop thread using two lockless linked lists.
Comment out this if block if EMIN is ok
Comment out this non used function.
Comment to improve readability
Commented out for now
Commented out until future discussion
Commit by deleting journal file
Commit by truncating journal
Commit by zeroing journal header
Commit the transaction currently in progress.
Commit the transaction to the *-oal file.
Committing the whole shared heap at once would require the same amount of free space in memory (or in swap file).
Common case: early out without every having to acquire a mutex
Common code for all repeated single character type matches.
Common code for all repeated single-byte matches.
Common code for all repeated single-character matches.
Common part of zend_add_literal and zend_append_individual_literal
Commutative unsigned operations.
Commute a comparison operator.
Compact the hashtable if less than 3/4 of elements are used
Compare against this WhereLoop
Compare dimension of the index to the real ndim.
Compare each row to the LHS.
Compare function to use
Compare given strings (converting them to UTF-16 first).
Compare key1 (buffer pKey1, size nKey1 bytes) with key2 (buffer pKey2,  size nKey2 bytes).
Compare pIter1 and pIter2.
Compare pReadr1 and pReadr2.
Compare s1 and s2 which are not necessarily NULL-terminated.
Compare size with this KeyInfo
Compare strings z1 and z2, returning 0 if they are identical, or non-zero otherwise.
Compare the OBJECT label at pNode against zKey,nKey.
Compare the contents of the pLeft buffer with the pRight/nRight blob.
Compare the contents of the two buffers using memcmp().
Compare the dtype of the field for castability
Compare the entries pointed to by two Fts3SegReader structures.
Compare the field dictionaries for two types.
Compare the key in memory cell pVal with the key that the sorter cursor passed as the first argument currently points to.
Compare the key of the index entry that cursor pC is pointing to against the key string in pUnpacked.
Compare the results directly.
Compare the strings using ICU.
Compare the subarray data for two types.
Compare the term in buffer zLhs (size in bytes nLhs) with that in zRhs (size in bytes nRhs) using memcmp.
Compare the term that the Fts3SegReader object passed as the first argument points to with the term specified by arguments zTerm and nTerm.
Compare the term we are searching for with the term just loaded from the interior node.
Compare the trailing  fields.
Compare the two values using the collation sequence pColl.
Compare the values contained by the two memory cells, returning negative, zero or positive if pMem1 is less than, equal to, or greater than pMem2.
Compare this key value against the index  that P1 is currently pointing to, ignoring the PRIMARY KEY or ROWID  fields at the end.
Compare this key value against the index that P1 is currently pointing to, ignoring the PRIMARY KEY or ROWID on the P1 index.  If the P1 index entry is less than the key value then jump to P2.
Compare this many columns
Compare this pathname with +other+.
Compare to PyArray_OverflowMultiplyList that returns 0 in this case.
Compare two ExprList objects.
Compare two UTF-8 strings for equality where the first string can potentially be a "glob" expression.
Compare two UTF-8 strings for equality where the first string can potentially be a "glob" or "like" expression.
Compare two UTF-8 strings for equality where the first string is a "LIKE" expression.
Compare two bc numbers.
Compare two field dictionaries for castability.
Compare two info structures
Compare two left-aligned numbers: the first to have a different value wins.
Compare two search points.
Compare using memcmp().
Compares a filename or pathname to a pattern.
Comparing signed and unsigned
Comparison affinity to use
Comparison collation sequence
Comparison information for duplicate removal
Comparison information for merging rows
Comparison is as follows:  1) EOF is greater than not EOF.
Comparison is made as follows:  1) EOF (end of doclist in this case) is greater than not EOF.
Comparison of term and split-key
Comparison result if keys are equal
Comparisons should raise errors when element-wise comparison is not possible.
Compatibility definitions
Compatibility with old code that looked in .mime
Compilation failed: print the error message and exit
Compile a Regular Expression            *
Compile a SELECT statement for this cursor.
Compile a regular expression        *
Compile pattern and display a warning if compilation failed.
Compile regex or get it from cache.
Compile sequence of alternatives           *
Compile the UTF-16 encoded SQL statement zSql into a statement handle.
Compile the UTF-8 encoded SQL statement zSql into a statement handle.
Compile time client version
Compile with -DTEST to create a self-contained executable test program.
Compile with main function
Compiled items are thrown away as soon as possible, so that a fairly large buffer should be sufficient for this purpose.
Compiled regular expression
Compiled version of zSql
Compilers are dumb and don't understand that noreturn means that the function does NOT need a return value...
Compilers may complain that mem1.u.i is potentially uninitialized.
Compiling and using WAL mode requires several APIs that are only available in Windows platforms based on the NT kernel.
Complete information about the WHERE clause
Complete text of a module argument
Complete text of the cell
Completely delete zend_resource, if not referenced
Completely initialize event data to prevent valgrind reports
Completely mirror the forward direction.
Completes the Copy command
Completion occurs on the entire substring, and within the substring Readline.completer_word_break_characters are treated as any other character, unless they also appear within this list.
Complex 2x2 system  (w is complex) Find the largest element in C
Complex FFT passes fwd and bwd.
Complex conjugate pairs of eigenvalues appear consecutively with the eigenvalue having the positive imaginary part first.
Complex eigenvalues, or real (almost) equal eigenvalues.
Complex left eigenvector.
Complex object can be created as literal, and also by using Kernel#Complex, Complex::rect, Complex::polar or to_c method.
Complex right eigenvector.
Component registration
Compose a document object.
Compose a mapping node.
Compose a node corresponding to an alias.
Compose a scalar node.
Compose a sequence node.
Compose a tcl-readable representation of expression pExpr.
Compose and prepare an SQL statement to loop through the content table
Composition exclusion table stuff.
Compound SELECTs that have an ORDER BY clause are handled separately.
Compress the dimensions and strides
Compression, then final permutation, then bit reverse.
Computation of EPS complete.
Compute  RMIN by successive division by  BETA.
Compute (square of) distance from minc0/c1/c2 to this color
Compute 1-norm of each column of strictly upper triangular part of T to control overflow in triangular solver.
Compute B and the rotation matrix
Compute Dominators Tree
Compute L(J,J) and test for non-positive-definiteness.
Compute Sun's RA + Decl at this moment
Compute Sun's ecliptical coordinates
Compute U(J,J) and test for non-positive-definiteness.
Compute Variable Liveness
Compute a 32-bit checksum on the N-byte buffer.
Compute a bound on the computed solution vector to see if the Level 2 BLAS routine CTRSV can be used.
Compute a bound on the computed solution vector to see if the Level 2 BLAS routine ZTRSV can be used.
Compute a hash on a page number.
Compute a string for the "comment" field of a VDBE opcode listing.
Compute a string length that is limited to what can be stored in lower 30 bits of a 32-bit signed integer.
Compute a string that describes the P4 parameter for an opcode.
Compute actual size, so we know how much to pad.
Compute add.reduce(x*x,axis)
Compute adj so that the IEEE rounding rules will correctly round rv + adj in some half-way cases.
Compute alternate SHA256 sum with input KEY, SALT, and KEY.
Compute alternate SHA512 sum with input KEY, SALT, and KEY.
Compute and reshape mean
Compute and return a new Expr object which when passed to sqlite3ExprCode() will generate all necessary code to compute the iField-th column of the vector expression pVector.
Compute and store the full pathname in an allocated buffer pointed to by zPathname, length nPathname.
Compute approximate maximum, minimum singular values
Compute block row of U.
Compute both YMD and HMS
Compute collating sequences used by  temporary tables needed to implement the compound select.
Compute d of 12h local mean solar time
Compute data dependencies
Compute data for all columns of the new entry, beginning with the first column.
Compute eigenvalues only (CWorkspace: need 1, prefer HSWORK (see comments) ) (RWorkspace: none)
Compute eigenvalues only (Workspace: need N+1, prefer N+HSWORK (see comments) )
Compute eigenvectors of the modified rank-1 modification.
Compute elementary reflector H(i) to annihilate A(i+2:ihi,i)
Compute elements 1:j-1 of j-th column.
Compute elements J+1:M of J-th column.
Compute elements J+1:N of column J.
Compute elements J+1:N of row J.
Compute elements j+1:n of j-th column.
Compute error fractions to be propagated to adjacent pixels.
Compute first digit of b/d.
Compute in mxSafeFrame the index of the last frame of the WAL that is safe to write into the database.
Compute inverse of current diagonal block
Compute inverse of lower triangular matrix
Compute inverse of lower triangular matrix.
Compute inverse of upper triangular matrix
Compute inverse of upper triangular matrix.
Compute its corresponding numeric type, if has one.
Compute its size and solve it.
Compute least common ancestor on class inheritance tree only
Compute left and/or right eigenvectors (CWorkspace: need 2*N) (RWorkspace: need 2*N)
Compute left and/or right eigenvectors (Workspace: need 4*N)
Compute left eigenvectors.
Compute left singular vectors of the modified diagonal matrix, and store related information for the right singular vectors.
Compute local sidereal time of this moment
Compute machine epsilon
Compute mean elements
Compute mlo -- check for special case that d is a normalized power of 2.
Compute number of bytes mod 128
Compute number of bytes mod 64
Compute obliquity of ecliptic (inclination of Earth's axis)
Compute only a unique prefix of the key
Compute representation error for this pixel
Compute right eigenvectors.
Compute rows 1:j-1 of current block column
Compute rows j+jb:n of current block column
Compute singular values only (Cworkspace: 0) (Rworkspace: need BDSPAC)
Compute singular values to relative accuracy TOL (By setting TOL to be negative, algorithm will compute singular values to absolute accuracy ABS(TOL)*norm(input matrix)) Computing MAX Computing MIN
Compute singular vectors, if desired
Compute space needed for DBDSDC
Compute space needed for SBDSDC
Compute successively longer WherePaths using the previous generation of WherePaths as the basis for the next.
Compute the 1-norm of each column, not including the diagonal.
Compute the CCD width, in milimeters.
Compute the GCD of the resulting multipliers
Compute the Hour, Minute, and Seconds from the julian day number.
Compute the KI-th eigenvalue (WR,WI).
Compute the LQ factorization of the current block A(i:i+ib-1,i:n)
Compute the LU factorization of A.
Compute the QR factorization of the current block A(i:m,i:i+ib-1)
Compute the Sun's apparent radius, degrees
Compute the Year, Month, and Day from the julian day number.
Compute the absolute value of a 32-bit signed integer, of possible.
Compute the affinity string for table pTab, if it has not already been computed.
Compute the comparison permutation and keyinfo that is used with the permutation used to determine if the next row of results comes from selectA or selectB.
Compute the complete text of the CREATE VIRTUAL TABLE statement
Compute the complete text of the CREATE statement
Compute the content of the next row to insert into a range of registers beginning at regIns.
Compute the cross axis from the max cross dimension of the children.
Compute the current block column.
Compute the current block row.
Compute the current intermediate hash value
Compute the cutoff value between legal numbers and illegal numbers.
Compute the data pointers and diag_size for the view
Compute the difference (in milliseconds) between localtime and UTC (a.k.a.
Compute the diurnal arc that the Sun traverses to reach
Compute the eigenvalues and eigenvectors of the tridiagonal matrix.
Compute the eigenvalues of the tridiagonal matrix.
Compute the eigenvector
Compute the flex basis and hypothetical main size (i.e. the clamped flex basis).
Compute the iLimit and iOffset fields of the SELECT based on the pLimit and pOffset expressions.
Compute the iterindex corresponding to the flat_index
Compute the iterindex corresponding to the multi-index
Compute the limit registers
Compute the maximum "kinds" and whether everything is scalar
Compute the message schedule according to FIPS 180-2:6.2.2 step 2.
Compute the message schedule according to FIPS 180-2:6.3.2 step 2.
Compute the neighborhood size and copy the shape
Compute the number of pages based on the remaining size of the file.
Compute the number of pages of cache requested.
Compute the old pre-UPDATE content of the row being changed, if that information is needed
Compute the parentage of all nodes in a completed parse.
Compute the product L' * L.
Compute the product U * U'.
Compute the q's and e's.
Compute the representative color for each box, fill colormap
Compute the result of the comparison (1, 0, or NULL) and write that result into register dest.
Compute the revised record entries for indices as we go.
Compute the set of tables that might satisfy cases 1 or 2.
Compute the set of tables that might satisfy cases 1 or 3.
Compute the shift from 2-by-2 block at end of matrix
Compute the size of the data block for storing the compiled pattern.
Compute the soundex encoding of a word.
Compute the total free space on the page
Compute the total free space on the page EVIDENCE-OF: R-23588-34450 The two-byte integer at offset 1 gives the start of the first freeblock on the page, or is zero if there are no freeblocks.
Compute the total number of bytes that a Cell needs in the cell data area of the btree-page.
Compute the union of two position lists.
Compute the updated eigenvectors.
Compute the updated singular values, the arrays DIFL, DIFR, and the updated Z.
Compute the value of nRec based on this assumption.
Compute time when Sun is at south - in hours UT
Compute true coordinates of update box's origin corner.
Compute true coordinates of update box's upper corner and center.
Compute true longitude and radius vector
Compute workspace (Note: Comments in the code beginning "Workspace:" describe the minimal amount of workspace needed at that point in the code, as well as the preferred amount for good performance.
Computed column name as a token
Computes a color in im's color table that is part way between the background and foreground colors proportional to the gray pixel value in the range 0-NUMCOLORS.
Computes a postorder numbering of the CFG
Computes dominator tree using algorithm from "A Simple, Fast Dominance Algorithm" by Cooper, Harvey and Kennedy.
Computes the GCD of the two date-time metadata values.
Computes the Sun's ecliptic longitude and distance
Computes the conversion factor to convert data with 'src_meta' metadata into data with 'dst_meta' metadata.
Computes the iterator's index strides and initializes the index values to zero.
Computing MAX Computing 2nd power
Computing MAX Computing MAX
Computing MAX Writing concatenation
Computing MIN Computing MAX
Computing MIN Writing concatenation
Concat can take multiple arguments.
Concat script_name and path_info into php_self
Concatenate the __LINE__ and __FILE__ strings in a macro.
Concatenates a list of ndarrays, flattening each in the specified order.
Concatenates a list of ndarrays.
Concats two affine transforms together, i.e. the result will be the equivalent of doing first the transformation m1 and then m2.
Conceptually, a collating sequence consists of a name and a comparison routine that defines the order of that sequence.
Conceptually, the index space is divided into S uniform buckets and the samples are the middle row from each bucket.
Concretely, if you try to add a key/value pair that is already in the table the data structure is left unmodified.
Condition (1) is true
Condition (3) is necessary because it can be triggered by a read-only statement executed within a transaction.
Condition (a) is true.
Condition is always true or false
Condition that must be true
Conditional block always has at most one alternative.
Conditional block does not.
Conditional blocks always have an additional alternative, even if it is empty.
Conditional group: compilation checked that there are no more than two branches.
Conditional instructions
Conditionally this LIKE operator term
Conditions under which the destination must be empty:  (1) There is no INTEGER PRIMARY KEY but there are indices.
Condvar for tracking workers terminations
Config settings (essentially constants, so they don't need to live in shared memory), initialized in hh_shared_init
Configuration cookie value
Configuration object to update
Configuration settings for an individual database connection
Configure SQL variable iVar so that binding a new value to it signals to sqlite3_reoptimize() that re-preparing the statement may result in a better query plan.
Configure an sqlite3_wal_hook() callback to automatically checkpoint a database after committing a transaction if there are nFrame or more frames in the log file.
Configure the OP_TableLock instruction
Configure the VM passed as the first argument with an sqlite3_stmt_scanstatus() entry corresponding to the scan used to  implement level pLvl.
Configure the cache_size limit for a cache.
Configure the cursor to think that the table has one more column than it really does.
Configure the language id of a tokenizer cursor.
Configure the number of columns.
Configure the text that the regular expression operates on.
Configured "cache_size" value
Configured FCNTL_MMAP_SIZE value
Configured by FCNTL_CHUNK_SIZE
Configured cache size
Confirm the cur_opt range
Conflict only if the rowid of the existing index entry is different from old-rowid
Conflict resolution algorithm
Conflict resolution algorithms.
Conflict resolution strategy
Conform to http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2 URI can be an asterisk (*) or should start with slash.
Conforms an output parameter 'out' to have 'ndim' dimensions with dimensions of size one added in the appropriate places indicated by 'axis_flags'.
Conforms to RFC 2898.
Conjugating dot product using the BLAS for vectors.
Connect to a remote address
Connect to a remote host using an interruptible connect with optional timeout.
Connect to a socket using an interruptible connect with optional timeout.
Connect to or create a statvfs virtual table.
Connecting free blocks together if possible.
Connection holding shared memory
Connection is read only
Connection shared memory
Connection that caused SQLITE_LOCKED
Connection to a write-ahead log (WAL) file.
Connection to notify of malloc failures
Connection to watch for unlock
Connection/Login Timeout
Connections and result manupulate
Connections from one process only
Consecutive elements which return the same block value are chunked together.
Consequently, remainingFreeSpace is 0 - sizeConsumedOnCurrentLine.
Consider a case in which a user wishes to query for a phrase such as "first place".
Consider a size-8 string, it will say it's aligned because strings only need alignment 1, but the copy function wants to know if it's alignment 8.
Consider alpha in the foreground color itself to be an upper bound on how opaque things get, when truecolor is available.
Consider each alternative branch.
Consider each argument in turn.
Consider static variable or MINIT in future.
Consider to create a child process using ::spawn or Kernel#system if this is not acceptable.
Consider tokens with this root node
Consider using a skip-scan if there are no WHERE clause constraints available for the left-most terms of the index, and if the average number of repeats in the left-most terms is at least 18.
Consists of a copy of all values from the original old.* record, except for the PK columns, which are set to "undefined".
Consists of the PK columns from the original old.* record, and the other values from the original new.* record.
Console output handle
Constant "b" from BM25 formula
Constant "k1" from BM25 formula
Constant expression is reusable
Constant inputs give a constant output
Constant tokens for values 0 and 1.
Constant used by SHA256/384/512_End() functions for converting the digest to a readable hexadecimal character string:
Constantly allocating and deallocating brings nothing.
Constants for MD5Transform routine.
Constants for NodeType - cannot define common types to share with dom as there are differences in these types
Constants for Parser options
Constants for curl_setopt()
Constants for the largest and smallest possible 64-bit signed integers.
Constants in this module will always be defined, but contain `true` or `false` values depending on the configuration of your OpenSSL installation.
Constants to be used with deref-parameter in php_ldap_do_search()
Constants to be used with ldap_modify_batch()
Constants used for locking
Constants used in the rk_double implementation by Isaku Wada.
Constants with IN operators
Constants without IN operator
Constraining operation
Constraint:  If you have ENABLE_COLUMN_METADATA then you must not define OMIT_DECLTYPE.
Construct a WalInterator object that can be used to loop over all  pages in the WAL in ascending order.
Construct a composite key for the row to be deleted and remember it
Construct a new Expr object from a single identifier.
Construct a new expression node and return a pointer to it.
Construct a new expression node for a function with multiple arguments.
Construct a query to find the rowid or primary key for every row to be deleted, based on the WHERE clause.
Construct a record from the query result, but instead of saving that record, use it as a key to delete elements from the temporary table iParm.
Construct a trigger step that implements a DELETE statement and return a pointer to that trigger step.
Construct a trigger step that implements an UPDATE statement and return a pointer to that trigger step.
Construct an expression node for a unary postfix operator
Construct an expression node for a unary prefix operator
Construct expanded load path and store it to cache.
Construct list of defaults
Construct new shape tuple
Construct one or more SQL statements from the format string given and then evaluate those statements.
Construct the Index object to describe this index
Construct the SELECT statement that will find the new values for all updated rows.
Construct the WhereLoop objects
Construct the column names from the SELECT statement that defines the view.
Construct the in-memory representation schema tables (sqlite_master or sqlite_temp_master) by invoking the parser directly.
Construct the schema tables.
Construct the strides and shape
Constructing the tree at (NLVL+1)-st level.
Constructor for the json_each virtual table
Constructors only have prototype if they are defined by an interface but it is the compilers responsibility to take care of the prototype.
Consume a space or a tab character.
Consume an arbitrary escape code.
Consume blank characters.
Consume non-blank characters.
Consume the content of the plain scalar.
Consume the content of the quoted scalar.
Consume the current line.
Consume the directive name.
Consume the line break.
Consume the major version number.
Consume the minor version number.
Consume the tag value.
Container of this cell
Containing WITH clause, or NULL
Containing the current node entry.
Contains agg functions or a GROUP BY
Contains aggregate functions
Contains one or more aggregate functions
Contains the branches of a failed condition.
Contains the function entry.
Content for INT, REAL, and STRING
Content is also irrelevant if the content length is 0.
Content is irrelevant for 1.
Content is irrelevant for the typeof() function and for the length(X) function if X is a blob.
Content is raw, not JSON encoded
Content is returned for parameter J which is one of the STAT_GET_xxxx values defined above.
Content is treated as ASCII-8BIT.
Content of OLD.* table in triggers
Content of the NEW.* table in triggers
Content of the new cell
Content of the node, as should be on disk
Content of the row to be inserted
Content of this chunk
Content registers (after the rowid)
Content size or sub-node count
Content to be checksummed
Content to be written
Content-Length header given and non-zero
Content-Length header value
Contents of master journal file
Contents of table pTab
Context argument for xBusyHandler
Context description (used for error msg)
Context for active pre-update callback
Context for active vtab connect/create
Context for error messages
Context for fts3ExprIterate()
Context for fts3ExprTermOffsetInit()
Context for returning result/error
Context for sqlite3_result_xxx() calls
Context for the sanity check
Context object for fts5ParseTokenize
Context object for function invocation
Context object for new user-function
Context object passed by sqlite3Stat4ProbeSetValue() through to  valueNew().
Context object passed to callback
Context object passed to the fts5SentenceFinderCb() function.
Context object used by sqlite3Fts5StorageIntegrity().
Context of the fixation
Context passed to xToken()
Context permits overwriting file, so we just delete whatever's there in preparation
Context pointer for xChunk callback
Context pointer for xCreate/xConnect
Context pointer passed down through the tree-walk.
Context that contains this SELECT
Context used by sqlite3WhereXXX()
Context used to resolve WHERE clause
Context-dependent case mapping as described in Table 3-14 of the Unicode standard is currently not supported.
Continual stores does not cause data dependency.
Continuations above that level are skipped as, if we see one, it means that the continuation that controls them - i.e, the lower-level continuation preceding them - failed to match.
Continuations at the current level are processed as, if we see one, there's no lower-level continuation that may have failed.
Continue as from after the group, updating the offsets high water mark, since extracts may have been taken.
Continue down into children
Continue for next alternative
Continue from after a successful assertion, updating the offsets high water mark, since extracts may have been taken during the assertion.
Continue rolling back records out of the main journal starting at the first journal header seen and continuing until the effective end of the main journal file.
Continue the loop for a later or duplicate name
Continue through the rest of the dimensions.
Continue to skip out-of-range pages and continue adding pages rolled back to pDone.
Continue to the normal backtrack.
Continue to use the global error handle as the connection is closed when an error occurs
Continue with current branch
Continue with next branch
Continues a ripemd128 message-digest operation, processing another message block, and updating the context.
Continues a ripemd160 message-digest operation, processing another message block, and updating the context.
Continues a ripemd256 message-digest operation, processing another message block, and updating the context.
Continues a ripemd320 message-digest operation, processing another message block, and updating the context.
Continues an MD4 message-digest operation, processing another message block, and updating the context.
Continues an MD5 message-digest operation, processing another message block, and updating the context.
Continues an SHA1 message-digest operation, processing another message block, and updating the context.
Continues an SHA224 message-digest operation, processing another message block, and updating the context.
Continues an SHA256 message-digest operation, processing another message block, and updating the context.
Continues an SHA384 message-digest operation, processing another message block, and updating the context.
Continues an SHA512 message-digest operation, processing another message block, and updating the context.
Continuing where we left off in btmutex.c
Continuing where we left off in fts3.c
Continuing where we left off in fts3Int.h
Continuing where we left off in loadext.c
Continuing where we left off in main.c
Continuing where we left off in mutex_w32.c
Continuing where we left off in os.h
Continuing where we left off in os_common.h
Continuing where we left off in os_unix.c
Continuing where we left off in os_win.c
Continuing where we left off in pager.c
Continuing where we left off in pragma.c
Continuing where we left off in sqlite3rbu.c
Continuing where we left off in sqliteInt.h
Continuing where we left off in status.c
Continuing where we left off in tokenize.c
Continuing where we left off in vdbe.c
Continuing where we left off in vdbe.h
Continuing where we left off in where.c
Continuing where we left off in wherecode.c
Contirbution information for a single pixel
Contrast this object with WhereLoop.
Contrast with +ARGF.internal_encoding+, which is the encoding used to represent this text within Ruby.
Contributed by Tilera Corporation.
Control and query of the open file handle.
Control does not reach here.
Control gets here if there has been an error, or if the overall match attempt has failed at all permitted starting positions.
Control jumps to here if an error is encountered above, or upon successful coding of the SELECT.
Control never gets here
Control never reaches here
Control never reaches here by falling through, only by a goto for all the error states.
Control never reaches here.
Control reaches here for the various types of "no match at this point" result.
Control reaches here if the candidate path is better than the pTo path.
Control reaches here only if one of the items is a small character list.
Convenience functions for opening and closing files using  sqlite3_malloc() to obtain space for the file-handle structure.
Convenient short-hand
Convergence hidden by negative DN.
Convergence of bottom singular value, return to top of loop
Conversely, module methods may be called without creating an encapsulating object, while instance methods may not.
Conversely, when data is written to the IO object it is transcoded from the internal encoding to the external encoding of the IO object.
Conversion between Ruby's VALUE, Pepper's Var and C string
Conversion details are specified by _opt_ as String.
Conversion details are specified by flags as the first argument.
Conversion main loop.
Conversion to double is to see if value is too big for a long.
Conversion to number failed.
Conversion types fall into various categories as defined by the following enumeration.
Conversions between years/months and other units use the factor averaged over the 400 year leap year cycle.
Convert "PRAGMA journal_mode" into "PRAGMA main.journal_mode"
Convert "nnn" to an integer and use it as the variable number
Convert 'None' into all the axes
Convert Array to flat list (using getitem)
Convert FROM host byte order
Convert LONG constants to DOUBLE
Convert Microsoft Unicode to UTF-8.
Convert Microsoft Unicode to multi-byte character string, based on the user's ANSI codepage.
Convert NAME to upper case if the first character is lower case.
Convert NaT (not-a-time) and any value with generic units into None.
Convert NaT (not-a-time) into None.
Convert OP_Column opcodes to OP_Copy in previously generated code.
Convert PEP 3118 format string to PyArray_Descr
Convert TK_COLUMN nodes into TK_AGG_COLUMN and make entries in sAggInfo for all TK_AGG_FUNCTION nodes in expressions of the SELECT statement.
Convert TO host byte order
Convert UTF-8 to multibyte character string.
Convert X0208 alphabet to asii
Convert a 64-bit IEEE double into a 64-bit signed integer.
Convert a BLOB literal of the form "x'hhhhhh'" into its binary value.
Convert a DbPage obtained from the pager into a MemPage used by the btree layer.
Convert a LogEst into an integer.
Convert a Microsoft Unicode string to UTF-8.
Convert a Microsoft Unicode string to a multi-byte character string, using the ANSI or OEM code page.
Convert a UTF-16 string in the native encoding into a UTF-8 string.
Convert a UTF-8 filename into whatever form the underlying operating system wants filenames in.
Convert a UTF-8 string to Microsoft Unicode.
Convert a UTF-8 string to a multi-byte character string.
Convert a double into a LogEst In other words, compute an approximation for 10*log2(x).
Convert a filename from whatever the underlying operating system supports for filenames into UTF-8.
Convert a floating point number to a string formats 'f', 'e' or 'E'.
Convert a long to a string containing a base(2-36) representation of the number.
Convert a multi-byte character string to UTF-8.
Convert a number NUM to a long.
Convert a numbers to a string.
Convert a scalar expression node to a TK_REGISTER referencing register iReg.
Convert a sorted list of elements (connected by pRight) into a binary tree with depth of iDepth.
Convert a sorted list of elements into a binary tree.
Convert a string containing C character escapes.
Convert a string representation of a base(2-36) number to a long.
Convert a string representation of a base(2-36) number to a zval.
Convert a zval to a string containing a base(2-36) representation of the number.
Convert all inputs to arrays of a common type Also makes them C-contiguous
Convert all the arguments
Convert all the objects into timedeltas or datetimes
Convert all the values into the resolved unit metadata
Convert an ANSI string to Microsoft Unicode, based on the current codepage settings for file apis.
Convert an ANSI string to Microsoft Unicode, using the ANSI or OEM code page.
Convert an SQL-style quoted string into a normal string by removing the quote characters.
Convert an array shape to a string such as "(1, 2)".
Convert an expression node to a TK_REGISTER
Convert an integer VAL to a bc number NUM.
Convert an integer into a LogEst.
Convert an sqlite3_value into an RtreeValue (presumably a float) while taking care to round toward negative or positive, respectively.
Convert an unsigned long long to ASCII for printf purposes, returning a pointer to the first character of the string representation.
Convert an unsigned long to ASCII for printf purposes, returning a pointer to the first character of the string representation.
Convert and copy the JIT offset vector to the offset_vector array.
Convert as much of the string as we can and ignore the rest.
Convert bulk memory into a valid WhereLoop that can be passed to whereLoopClear harmlessly.
Convert cell coordinates to update box ID
Convert character code to glyph index
Convert character value to UTF-8         *
Convert currency to UTF-16.
Convert current hash item from UTF-16LE to UTF-8.
Convert current hash item from UTF-8 to UTF-16LE and save the result to utf16_buf.
Convert current hash item from UTF-8 to UTF-16LE.
Convert data array to list of objects since GetArrayParamsFromObject won't iterate over array.
Convert days to hours at once
Convert display locale name from UTF-16 to UTF-8.
Convert error codes into error strings
Convert everything in 'dts' to a time_t, to minutes precision.
Convert fname from UTF-8 to Windows-friendly UTF-16.
Convert from YYYY-MM-DD HH:MM:SS to julian day.
Convert from a Python date or datetime object
Convert from a Python timedelta object
Convert given attribute value to UTF-16.
Convert given pattern to UTF-16.
Convert given string to UTF-16.
Convert given symbol to UTF-16.
Convert it into a string with encoding enc and return a pointer to a zero-terminated version of that string.
Convert it to a struct
Convert max to an array
Convert min to an array
Convert month to the month number.
Convert multibyte character string to UTF-8.
Convert negative offset (counted from the end of string)
Convert normalized string from UTF-16 to UTF-8.
Convert num to a base X number where X is a power of 2.
Convert num to its decimal format.
Convert only if we have enough space.
Convert pMem so that it has types MEM_Real or MEM_Int or both.
Convert pMem so that it is of type MEM_Real.
Convert pMem to type integer.
Convert parsed currency to UTF-8 and pass it back to caller.
Convert path to unix format
Convert pattern (if specified) to UTF-16.
Convert possessive ONCE brackets to non-capturing
Convert problem to Diophantine equation form with positive coefficients.
Convert raw bits from the on-disk RTree record into a coordinate value.
Convert soap xml dom to XMLRPC_REQUEST
Convert soap xml dom to XMLRPC_VALUE, sans request info.
Convert source string from UTF-8 to UTF-16.
Convert string to utf8.
Convert strings in the specified array back to UTF-8.
Convert strings in the specified array from UTF-8 to UTF-16.
Convert strings to bc numbers.
Convert that into a string
Convert that string back to a dot.
Convert the 'axis' parameter into a list of axes
Convert the 'kind' char into a scalar kind
Convert the JsonNode pNode into a pure JSON string and append to pOut.
Convert the OP_CreateTable opcode that would normally create the root-page for the table into a OP_CreateIndex opcode.
Convert the OP_CreateTable opcode that would normally create the root-page for the table into an OP_CreateIndex opcode.
Convert the ORDER BY term into an integer column number iCol, taking care to preserve the COLLATE clause if it exists
Convert the boolean array into multiple integer ones
Convert the byte order of the data we are looking at While we're here, let's apply the mask operation (unless you have a better idea)
Convert the combining class code from decimal.
Convert the connection into a zombie and then close it.
Convert the data in the temporary table into whatever form it is that we currently need.
Convert the datetime from UTC to local time
Convert the datetime metadata into a tuple
Convert the empty string and case-variants of "NaT" to not-a-time.
Convert the file path to wide char
Convert the filename to the system encoding.
Convert the final space to a newline when logging to file.
Convert the flat index into a multi-index
Convert the given register into a string if it isn't one already.
Convert the image src to a grayscale image
Convert the input list into arrays
Convert the inverted S-boxes into 4 arrays of 8 bits.
Convert the list to tuple and compute the tuple hash using python builtin function
Convert the local datetime into a datetimestruct
Convert the lower bound to upper-case and the upper bound to lower-case (upper-case is less than lower-case in ASCII) so that the range constraints also work for BLOBs
Convert the source args to unsigned here so that (1) the compare will be unsigned as it is in strncmp() and (2) so the ctype functions will work correctly without extra casting.
Convert the string to UTF-16.
Convert the text beginning at *pz into an integer and return its value.
Convert the values to longs
Convert this string to a double and write it into *pResult.
Convert this tree into a linked list connected by the pRight pointers and return pointers to the first and last elements of the new list.
Convert timezone to UTF-16.
Convert to ASCII if it's unicode
Convert to DER string
Convert to a datetimestruct
Convert to a minutes offset and apply it
Convert to a real julian day number.
Convert to an ASCII string for the date parser
Convert to days/seconds/useconds
Convert to equatorial rectangular coordinates - x is unchanged
Convert to final encoding
Convert to intermediate UChar* array
Convert to lower case for case-insensitive comparison
Convert to milliseconds
Convert to spherical coordinates
Convert to string, just the time to pick the 1st byte
Convert to the datetime
Convert to the equivalent-sized signed integer
Convert to the normal beginning of the year.
Convert to upper case
Convert to utf8 then.
Convert transliterator id to UTF-16
Convert twenty-four-bit long in host-order to six bits (and 2 low-order zeroes) per char little-endian format.
Convert ubuf to UTF-8 and try text soft magic
Convert variable name into uppercase, and change - to _
Convert zDate into one or more integers according to the conversion specifier zFormat.
Convert zDate into one or more integers.
Convert zNum to a 64-bit signed integer.
Converting HEX char to INT value
Converting a BLOB to a string is a no-op.
Converting from GMT time to local time
Converting from local time to GMT time
Converting it to all upper case is allowed.
Converting to a generic unit from something other than a generic unit is an error.
Converts a #gdouble to a string, using the '.' as decimal point.
Converts a BigDecimal to a Rational.
Converts a PyObject * into a datetime, in any of the forms supported.
Converts a Python input into a non-normalized list of holidays.
Converts a Python sequence into 'count' PyArrayObjects  seq       - Input Python object, usually a tuple but any sequence works.
Converts a Unix timestamp value into broken down time, in GMT
Converts a `struct events *` in an OCaml value of type `Fsnotify.event list`
Converts a datetime based on the given metadata into a datetimestruct
Converts a datetime from a datetimestruct to a datetime based on some metadata.
Converts a datetime into a PyObject *.
Converts a datetimestruct in UTC to a datetimestruct in local time, also returning the timezone offset applied.
Converts a datetype dtype string into a dtype descr object.
Converts a list of subscripts to a string.
Converts a metadata tuple into a datetime metadata C struct.
Converts a subarray of 'self' into lists, with starting data pointer 'dataptr' and from dimension 'startdim' to the last dimension of 'self'.
Converts a substring given by 'str' and 'len' into a date time unit enum value.
Converts a substring given by 'str' and 'len' into a date time unit multiplier + enum value, which are populated into out_meta.
Converts a timedelta into a PyObject *.
Converts a type number from unsigned to signed
Converts an array of PyObject * into datetimes and/or timedeltas, based on the values in type_nums.
Converts an axis parameter into an ndim-length C-array of boolean flags, True for each axis specified.
Converts an input object into datetime metadata.
Converts an npy_datetimestruct to an (almost) ISO 8601 NULL-terminated string.
Converts string to a JSON string in FBuffer buffer, where all but the ASCII and control characters are JSON escaped.
Converts string to a JSON string in FBuffer buffer, where only the characters required by the JSON standard are JSON escaped.
Converts the operand array and op_flags array into the form NpyIter_AdvancedNew needs.
Convinient way to handle error messages from the SMTP server.
Cookie index. 1 for schema-cookie, 6 for user-cookie.
Cookie value for main db files
Cookie value to store
Cookies are preferred, because initially cookie and get variables will be available.
Cool, but some flaws.
Coordinate value convert to a double
Coordinate value converted to a double
Coordinates of node or entry to check
Copes with infinite F or H
Copied from upstream's libgd
Copied latency from Watchman https://github.com/facebook/watchman/blob/5161cb6eeca4405bcaea820f377cd6d2f51ce1f4/root.c#L1838
Copies 1 element to N contiguous elements
Copies N contiguous elements to N contiguous elements
Copies data before messing with it.
Copies element with subarray broadcasting
Copies references from src to dst
Copy A to U, generate Q (Cworkspace: need 2*M, prefer M+M*NB) (Rworkspace: 0)
Copy A to U, generate Q (Cworkspace: need 2*N, prefer N+N*NB) (Rworkspace: 0)
Copy A to VT, generate P**H (Cworkspace: need 2*M, prefer M+M*NB) (Rworkspace: 0)
Copy A to VT, generate P**H (Cworkspace: need 2*N, prefer N+N*NB) (Rworkspace: 0)
Copy Btree meta values
Copy COUNT objects from SRC to DST.
Copy CTOT into COLTYP for referencing in DLAED3.
Copy CTOT into COLTYP for referencing in DLASD3.
Copy CTOT into COLTYP for referencing in SLAED3.
Copy CTOT into COLTYP for referencing in SLASD3.
Copy D and E into WORK (in the Z format) and scale (squaring the input data makes scaling by a power of the radix pointless).
Copy D and Z to DSCALE and ZSCALE
Copy L to WORK(IL), zeroing about above it
Copy L to WORK(IL), zeroing out above it
Copy L to WORK(IL), zeroing out above its diagonal.
Copy PHP interned strings from PHP process memory into the shared memory
Copy R to WORK( IR ), zeroing out below it
Copy R to WORK(IR), zeroing out below it
Copy VT to WORK(IL), multiply right singular vectors of L in WORK(IL) by Q in A, storing result in VT (CWorkspace: need M*M) (RWorkspace: 0)
Copy a character from a string into buffer.
Copy a character to a string buffer and advance pointers.
Copy a line break character from a string into buffer.
Copy a line break character to a string buffer and advance pointers.
Copy a single frame of data from the wal file into the database file, as indicated by the RbuFrame object.
Copy a value currently stored in a memory  cell of the calling (parent) frame to cell P2 in the current frames  address space.
Copy all captured strings to new store    *
Copy all subsequent alphabetical and numerical characters.
Copy all the fields transfer data
Copy all the necessary stuff from shared memory to regular memory, and protect the shared script
Copy any allocated outputs
Copy any data from the buffers back to the arrays
Copy any modified values to callers copy of variant
Copy array, so the in-place modifications will not be visible to the callback function
Copy as many bytes as will fit
Copy as many bytes as will fit.
Copy as much content as we can from the WAL back into the database file in response to an sqlite3_wal_checkpoint() request or the equivalent.
Copy back all the values except seconds
Copy back into out if out was not already a nice array.
Copy captured string to given buffer      *
Copy captured string to new store         *
Copy code of reachable blocks into a single buffer
Copy data directly into dest.
Copy data from a buffer to a page, or from a page to a buffer.
Copy data from buffer to page (a write operation)
Copy data from page to buffer (a read operation)
Copy data from the log to the database file.
Copy data from this buffer to the file
Copy data while converting to host byte order
Copy diagonal and off-diagonal elements of B back into A
Copy element by element
Copy global to_free list into local list
Copy in the first table (always present)
Copy in the original argument variables
Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message about the unexpected token YYTOKEN for the state stack whose top is YYSSP.
Copy into shared memory
Copy it into the Fts5Iter.poslist buffer and then set the output pointer to point to this buffer.
Copy left singular vectors of A from A to U
Copy left singular vectors of A from WORK(IU) to A
Copy meta information from *pCol.
Copy nPage pages from the source b-tree to the destination.
Copy named captured string to given buffer   *
Copy named captured string to new store      *
Copy of "flags" passed to sqlite3_blob_open()
Copy of 2nd argument to xTokenize()
Copy of BtShared.maxLocal or BtShared.maxLeaf
Copy of BtShared.minLocal or BtShared.minLeaf
Copy of Fts5Config.eDetail
Copy of SubProgram.token
Copy of fifth arg to _apply()
Copy of first rowid on page indicated by previous field.
Copy of idxNum search parameter
Copy of input using utf-16 encoding
Copy of pContext passed to s_r_g_c()
Copy of pStr1 - RHS of LIKE/GLOB operator
Copy of sixth arg to _apply()
Copy of the SELECT that implements the view
Copy of third arg to _filter_table()
Copy of third arg to preupdate_hook()
Copy of update mask used with pUpdate
Copy only the drive name
Copy only the share name
Copy original pages out of the journal and back into the  database file and/or page cache.
Copy over the row data
Copy over the sequence table
Copy pages from the log to the database file
Copy path portion in place to avoid memory leak.
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of A (CWorkspace: need 2*N+M, prefer 2*N+M*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of A (CWorkspace: need 3*M, prefer 2*M+M*NB) (RWorkspace: M*M)
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of A (CWorkspace: need 3*N, prefer 2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of A (Cworkspace: need 2*M, prefer M+M*NB) (Rworkspace: need 0)
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of L (CWorkspace: need 3*M, prefer 2*M+M*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of L (CWorkspace: need M*M+3*M, prefer M*M+2*M+M*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix U Overwrite U by left singular vectors of R (CWorkspace: need N*N+3*N, prefer N*N+2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix WORK(IU) Overwrite WORK(IU) by left singular vectors of A, copying to A (Cworkspace: need M*N+2*N, prefer M*N+N+N*NB) (Rworkspace: need 0)
Copy real matrix RWORK(IRU) to complex matrix WORK(IU) Overwrite WORK(IU) by left singular vectors of R (CWorkspace: need N*N+3*N, prefer N*N+2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix WORK(IU) Overwrite WORK(IU) by the left singular vectors of L (CWorkspace: need N*N+3*N, prefer M*N+2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRU) to complex matrix WORK(IU) Overwrite WORK(IU) by the left singular vectors of R (CWorkspace: need 2*N*N+3*N, prefer M*N+N*N+2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by left singular vectors of L (CWorkspace: need M*M+3*M, prefer M*M+2*M+M*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by right singular vectors of A (CWorkspace: need 2*M+N, prefer 2*M+N*NB) (RWorkspace: M*M)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by right singular vectors of A (CWorkspace: need 3*M, prefer 2*M+M*NB) (RWorkspace: M*M)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by right singular vectors of A (CWorkspace: need 3*N, prefer 2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by right singular vectors of A (Cworkspace: need 2*N, prefer N+N*NB) (Rworkspace: need 0)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by right singular vectors of R (CWorkspace: need 3*N, prefer 2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by right singular vectors of R (CWorkspace: need N*N+3*N, prefer N*N+2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix VT Overwrite VT by the right singular vectors of R (CWorkspace: need N*N+3*N, prefer M*N+2*N+N*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix WORK(IVT) Overwrite WORK(IVT) by right singular vectors of A, copying to A (Cworkspace: need M*N+2*M, prefer M*N+M+M*NB) (Rworkspace: need 0)
Copy real matrix RWORK(IRVT) to complex matrix WORK(IVT) Overwrite WORK(IVT) by right singular vectors of L (CWorkspace: need M*M+3*M, prefer M*M+2*M+M*NB) (RWorkspace: 0)
Copy real matrix RWORK(IRVT) to complex matrix WORK(IVT) Overwrite WORK(IVT) by the right singular vectors of L (CWorkspace: need N*N+3*N, prefer M*N+2*N+N*NB) (RWorkspace: 0)
Copy remainder and add enclosing quote
Copy remaining data to buffer
Copy return value into temporary VAR to avoid modification in finally code
Copy right singular vectors of A from A to VT
Copy right singular vectors of A from WORK(IVT) to A
Copy shape and strides over since these can be reset when the array is "reshaped".
Copy socket from the queue and increment tail
Copy socket to the queue and increment head
Copy src to string dst of size siz.
Copy string src to buffer dst of size dsize.
Copy subdiagonal elements back into A, and diagonal elements into D
Copy superdiagonal elements back into A, and diagonal elements into D
Copy the b-tree node content from page pFrom to page pTo.
Copy the beginning of the string.
Copy the buffer, we have perhaps allocate a lot more than we need, so we erealloc() the buffer to the proper size
Copy the characters in the file (up to the next newline) into line and advance s to the next line
Copy the color bounds to the new box.
Copy the complete content of pBtFrom into pBtTo.
Copy the contents of object (*pFrom) into (*pTo).
Copy the contents of the child page into the parent, decreasing the overall height of the b-tree structure by one.
Copy the contents of the node stored on pRoot into the new child page.
Copy the current sorter key into the memory cell pOut.
Copy the data (unmasked data doesn't have object semantics)
Copy the data back to the arrays.
Copy the data for this array
Copy the data from the source page into the destination page.
Copy the dtype from 'op' if the type_num matches, to preserve metadata.
Copy the elements into the result to start.
Copy the environment variables in preparation for the spawn call
Copy the error code and error message belonging to the VDBE passed as the first argument to its database handle (so that they will be  returned by calls to sqlite3_errcode() and sqlite3_errmsg()).
Copy the filename and any query parameters into the zFile buffer.
Copy the first element to start the reduction.
Copy the first part of user declarations.
Copy the head if needed.
Copy the home directory
Copy the integer value to the output buffer
Copy the key, shifting each character up by one bit and padding with zeros.
Copy the limit of allowed recursions.
Copy the matching line and set the cursor position
Copy the missing strides, and multiply the existing strides by the calculated factor.
Copy the new ACL entry from config
Copy the new data into the backup.
Copy the octet and move the pointers.
Copy the original array
Copy the overflow cells from pRoot to pChild
Copy the private normalized weekmask/holidays data
Copy the raw values to the new iterator
Copy the remaining input hash entries to the output hash
Copy the result of the function into register P3
Copy the result of the function to the P3 register.
Copy the scalar directly if units weren't specified
Copy the second part of user declarations.
Copy the source image.
Copy the src value to all the dst values
Copy the src value to all the fields of dst
Copy the strides after the first nop
Copy the stuff to temporary file
Copy the subarray with broadcasting, truncating, and zero-padding as necessary.
Copy the triggers, views, and virtual tables from the main database over to the temporary database.
Copy the tuple, but set the nin-th item to the keyword arg
Copy the tuples into op_axes
Copy the types into an int array for matching
Copy the value directly if units weren't specified
Copy the value of the first field to dst
Copy the values stored in the VdbeFrame structure to its Vdbe.
Copy the vector x or Q*x to VL and normalize.
Copy the vector x or Q*x to VR and normalize.
Copy the weekmask data
Copy the zend_function when calling via handler (e.g. Closure::__invoke())
Copy this data into the  destination database.
Copy to YYRES the contents of YYSTR after stripping away unnecessary quotes and backslashes, so that it's suitable for yyerror.
Copy up to the end of the string or /
CopyAnyInto handles the casting now
CopyInto handles the casting now
CopyObject does not handle this case gracefully and there is nothing to do.
Copying the result back into shared memory
Core code generator functions.
Core conversion workhorses
Core dimensions with same labels must have exactly matching sizes.
Coroutine supplying data
Correct offset for error
Correct signs of SSMAX and SSMIN
Correct that as best we can: assume it's at least 1 MB.
Correct this if it is the case.
Correction factor for broadcasting 'bmask' to 'self'
Corresponding column number in the eq-class
Corruption can follow a power failure in this case anyway.
Corruption detected by xRecordCompare()
Cosine filter, default radius 1
Cost multiplier for using this table
Cost of path (pFrom+pWLoop)
Cost of running each loop
Cost of running iterator
Cost of running this subquery
Could add a casting check, but apparently most assignments do not care about safe casting.
Could also find out if a boolean index was converted.
Could also rename this to CopyAsFlat to make the name more intuitive.
Could as well one day become "UTF-8".
Could be name define, else bad
Could do something complicated here
Could easily be further generalized to work with objects.
Could match an empty string
Could mean that the key container does not exist, let try again by asking for a new one.
Could not find an existing table or index to use as the RHS b-tree.
Could not found an existing table or index to use as the RHS b-tree.
Could not retrieve or send the file this data will only be sent to us after connection on the data port was initiated.
Could perhaps be redone to not make contiguous arrays
Could probably just allocate a few bytes here.
Could use shutdown to free the main cwd but it would just slow it down for CGI
Could-be-empty unlimited repeat group
Count allocation call
Count down to first I/O error
Count leading zeroes.
Count named back references.
Count non-delimiter characters.
Count of matched subpatterns
Count of the number of search attempts
Count rows changed by INSERT,
Count the number of additional columns needed to create a covering index.  A "covering index" is an index that contains all columns that are needed by the query.
Count the number of business days in a week
Count the number of columns that will be added to the index and used to match WHERE clause constraints
Count the number of digits.
Count the number of entries in the b-tree and write the result to *pnEntry.
Count the number of fields (a.k.a.
Count the number of fullsyncs and normal syncs.
Count the number of possible WHERE clause constraints referring to this virtual table
Count the number of references to columns.
Count the number of terms in the query
Count the number of times that the LIKE operator (or GLOB which is just a variation of LIKE) gets called.
Count the remaining days one by one
Count the token characters
Count the tokens in this AND/NEAR cluster.
Count the total number of references to pOuterNC and all of its parent contexts.
Count up the total number of the various types of columns, then form a permutation which positions the four column types into four uniform groups (although one or more of these groups may be empty).
Counter  Provides a counter intended to be increasing over the lifetime of the program including all forks.
Counter for IN constraints
Counter incremented each transaction
Counter to limit the number of searches
Counter to prevent infinite loop of reprepares
Counters used by sqlite3_stmt_status()
Counting column references
Counts the number of True values in a raw boolean array.
Counts the number of business days between two dates, not including the end date.
Cover a protocol design error: error packet does not contain the server status.
Cover protocol error: COM_STMT_SEND_LONG_DATA was designed to be quick and not sent response packets.
Coverage provides coverage measurement feature for Ruby.
Coverage.result will return a hash that contains filename as key and coverage array as value.
Coverage: it may be that this sqlite3_step() cannot fail.
Covers 0, 1, and unlimited
Create DOCUMENT-START.
Create MAPPING-START.
Create NpyIter object to "iterate" over single element of each input operand.
Create PCRE character tables         *
Create SEQUENCE-START.
Create VDBE to loop through the entries in pSrc that match the WHERE clause.
Create a "porter" tokenizer.
Create a "unicode61" tokenizer.
Create a 1 dimensional array of dimensions of type double
Create a DATETIME or TIMEDELTA dtype
Create a Pathname object from the given String (or String-like object).
Create a Python datetime to give to the timezone object
Create a SrcList structure containing the child table.
Create a TAG-DIRECTIVE token.
Create a VERSION-DIRECTIVE token.
Create a cursor to hold the database open
Create a default datetime or timedelta
Create a divider cell to insert into pParent.
Create a document object.
Create a fake Index object in local variable sPk to represent the rowid primary key index.  Make this fake index the first in a chain of Index objects with all of the real indices to follow
Create a gd-format image from the JPEG-format INFILE.
Create a hash table, free a hash table.
Create a label to jump to when we want to abort the query
Create a list of user columns for the content table
Create a list of user columns for the virtual table
Create a lowercased header for all the searches so we're finally case insensitive when searching for a pattern.
Create a mirror schema in the temporary database.
Create a new BTree table.
Create a new FTS5 expression by cloning phrase iPhrase of the expression passed as the second argument.
Create a new IdList if need be.
Create a new JsonNode instance based on the arguments and append that instance to the JsonParse.
Create a new NpyAuxData object for the masker data
Create a new PCache object.
Create a new SrcList if need be.
Create a new VFS file descriptor (stored in memory obtained from sqlite3_malloc) and open the file named "path" in the file descriptor.
Create a new auxiliary function
Create a new bitmap object able to handle bits between 0 and iSize, inclusive.
Create a new change object containing all the old values (if this is an SQLITE_UPDATE or SQLITE_DELETE), or just the PK values (if this is an INSERT).
Create a new collating function for database "db".
Create a new cursor for the BTree whose root is on the page iTable.
Create a new dummy file slot within a writeable phar for a newly created file
Create a new emitter object.
Create a new entry if true
Create a new ephemeral function definition for the overloaded function
Create a new index for an SQL table.
Create a new mask for cursor iCursor.
Create a new node (a right-sibling of the current node).
Create a new one if necessary.
Create a new pager cache.
Create a new parser object.
Create a new savepoint structure.
Create a new sqlite3_value object, containing the value of pExpr.
Create a new sqlite3_value object.
Create a new symbolic label for an instruction that has yet to be coded.
Create a new test statement, which we will prepare, but if anything fails, we will scrap it.
Create a new tokenizer
Create a new tokenizer instance.
Create a new tokenizer.
Create a new virtual database engine.
Create a new watch for a given path
Create a opendir() directory stream handle by iterating over each of the files in a phar and retrieving its relative path.
Create a process group
Create a raw bool scalar with the value False
Create a raw bool scalar with the value True
Create a record for this index entry as it should appear after the insert or update.
Create a record from the argument register contents and insert it into the ephemeral table.
Create a session object.
Create a single sqlite_stat1 entry containing NULL as the index name and the row count as the content.
Create a snapshot object.
Create a string from the zFromat argument and the va_list that follows.
Create a temporary file name and store the resulting pointer into pzBuf.
Create a temporary file name in zBuf.
Create a token and append it to the queue.
Create a token and insert it into the queue.
Create a tokenizer cursor to tokenize an input buffer.
Create a view of a complex array with an equivalent data-type except it is real instead of complex.
Create a view which slides through ret for assigning the successive input arrays.
Create an "ascii" tokenizer.
Create an Fts3Expr structure of type FTSQUERY_PHRASE containing a phrase consisting of this single token and set *ppExpr to point to it.
Create an Fts5Iter that iterates through the doclist provided as the second argument.
Create an ICU message formatter.
Create an ICU number formatter.
Create an RBU VFS named zName that accesses the underlying file-system via existing VFS zParent.
Create an array and copy the data
Create an array by reading from the given stream, using the passed next_element and skip_separator functions.
Create an array of entries of each section
Create an array of flags for reduction
Create an empty hash object.
Create an event with the info from FSEvents
Create an implicit NOT operator.
Create an internal reference to it
Create an iterator for the data
Create an iterator used to iterate through the contents of a changeset.
Create an sqlite3_backup process to copy the contents of zSrcDb from connection handle pSrcDb to zDestDb in pDestDb.
Create an unnamed temporary file
Create and fill VARIANT array
Create and initialize output hash
Create and populate a new TriggerPrg object with a sub-program  implementing trigger pTrigger with ON CONFLICT policy orconf.
Create and register 'Collator' class.
Create and register 'IntlDateFormatter' class.
Create and register 'IntlException' class.
Create and register 'Locale' class.
Create and register 'MessageFormatter' class.
Create and register 'Normalizer' class.
Create and register 'NumberFormatter' class.
Create and register 'Spoofchecker' class.
Create and register 'Transliterator' class.
Create and return a deep copy of the object passed as the second  argument.
Create array iter object for second operand that "matches" the map iter object for the first operand.
Create array to map facet id to triangle index.
Create bitmap of starting bytes       *
Create byte sequence P.
Create byte sequence S.
Create compositions from decomposition data
Create database with hash skiplist memtable.
Create database with vector memtable.
Create dtypes array for either one or two input operands.
Create entries on the table
Create extra terms on the WHERE clause for each column named in the USING clause.
Create header for verification while we read from the db
Create imm by 1 inst.
Create imm by 2 inst.
Create intermediate result.
Create labels for the "break" and "continue" instructions for the current loop.
Create linked lists of SSA variables for each SCC
Create multidimension array - recursion function
Create new databases in format 1
Create new empty database
Create new entry if true and does not otherwise exist
Create new statistic tables if they do not exist, or clear them if they do already exist.
Create new user functions.
Create object to hold return table
Create or open a phar for writing
Create or open a zip-based phar for writing
Create output image, 256 by 256 pixels, true color.
Create second operand from number array if needed.
Create the 2-item tuple to return
Create the ALIAS or ANCHOR token and append it to the queue.
Create the BLOCK-ENTRY token and append it to the queue.
Create the COM wrapper for this sink
Create the DELETE statement to write to the target PK b-tree.
Create the DOCUMENT-START or DOCUMENT-END token.
Create the FLOW-ENTRY token and append it to the queue.
Create the FLOW-SEQUENCE-END of FLOW-MAPPING-END token.
Create the FLOW-SEQUENCE-START of FLOW-MAPPING-START token.
Create the INSERT statement to write to the target PK b-tree
Create the KEY token and append it to the queue.
Create the KEY token and insert it into the queue.
Create the OCI environment separate for each connection
Create the PATH if it does not already exist.
Create the SCALAR token and append it to the queue.
Create the SELECT statement to read keys from data_xxx
Create the SELECT statement to read keys in sorted order
Create the STREAM-END token and append it to the queue.
Create the STREAM-START token and append it to the queue.
Create the TAG token and append it to the queue.
Create the VALUE token and append it to the queue.
Create the YAML-DIRECTIVE or TAG-DIRECTIVE token.
Create the automatic index
Create the content table
Create the custom VFS.
Create the destination temporary table if necessary
Create the diagonal view
Create the dtype of the result
Create the ephemeral table into which the update results will be stored.
Create the file if does not exist
Create the homogeneous session pool - We have different session pools for every different username, password, charset and dbname.
Create the imposter table or tables (if required).
Create the imposter table used to write to this index.
Create the indirection array.
Create the iteration string data type (always ASCII string)
Create the module and add the functions
Create the mutex and shared memory used for locking in the file descriptor pFile
Create the new column data
Create the new element we want to insert
Create the new view and set the base array
Create the rbu_tmp_xxx table and the triggers to populate it.
Create the referenced directory.
Create the result array
Create the return array with a layout compatible with the indices and with a dimension added to the end for the multi-index
Create the rootpage for the index
Create the rootpage for the index using CreateIndex. But before doing so, code a Noop instruction and store its address in  Index.tnum.
Create the search pattern
Create the session pool's env
Create the shadow table named zPost, with definition zDefn.
Create the statement to insert index entries
Create the timedeltas or datetimes
Create the virtual table wrapper around the hash-table and overload  the two scalar functions.
Create the whole "CREATE TABLE" statement to pass to SQLite
Create the wrapper function's auxdata
Create transient tab and store like SRT_Table
Create uninitialized SSA variables for each CV
Create views into ret, one for each dimension
Create, bind socket and start listen on it
Create/Connect to the underlying relational database schema.
Create/Remove/Update image thumbnails.
Create/Update exif headers.
Create/destroy an Fts5Index object.
Create/open the named mutex
Created and expanded in order as the characters are encountered.
Created using CREATE INDEX
Creates a datetime or timedelta dtype using a copy of the provided metadata.
Creates a datetime or timedelta dtype using the given unit.
Creates a dtype object from ctypes inputs.
Creates a new EC_KEY on the EC group obj.
Creates a new JSON::Ext::Parser instance for the string _source_.
Creates a new NPY_TIMEDELTA dtype, copying the datetime metadata from the given dtype.
Creates a new array containing the values returned by the block.
Creates a new constant if no constant with the given name previously existed.
Creates a new file for reading and writing if file does not exist.
Creates a new file for writing if file does not exist.
Creates a new file, only if it does not already exist.
Creates a new string PP_Var from C string.
Creates a read lock for SHM access
Creates a result for reducing 'operand' along the axes specified in 'axis_flags'.
Creates a sorted stride perm matching the KEEPORDER behavior of the NpyIter object.
Creates a struct dtype object from a Python dictionary.
Creates a tracepoint by registering a callback function for one or more tracepoint events.
Creates a weak reference from the given key to the given value
Creates an index in data_transfer_insts array.
Creates array of compositions from decomposition array
Creates it if necessary.
Creates the lock file and any missing directories in lockPath
Creating a new table may probably require moving an existing database to make room for the new tables root page.
Creating a virtual table invokes the authorization callback twice.
Creating and sending an OCSP request requires a subject certificate that contains an OCSP URL in an authorityInfoAccess extension and the issuer certificate for the subject certificate.
Crude, incomplete check for overflow
Ctrl+a, go to the start of the line
Ctrl+k, delete from current to end of line.
Ctrl+u, delete to beginning of line.
CubicConvolution filter, default radius 3
CubicSpline filter, default radius 2
Curl Http Version constants (CURLOPT_HTTP_VERSION)
Curl NETRC constants (CURLOPT_NETRC)
Curl SSL Version constants (CURLOPT_SSLVERSION)
Curl TIMECOND constants (CURLOPT_TIMECONDITION)
Curl file handle options
Curl linked list options
Curl nullable string options
Curl version constants
Current 'new' sibling page
Current 'old' sibling page
Current 'rowid' value
Current 'start' value
Current 'token' value
Current FTS5 configuration
Current OR clause term
Current UNION ALL term of the other query
Current WITH clause, or NULL
Current WhereLoop being processed.
Current algorithm: by population for first half, then by volume.
Current algorithm: longest scaled axis.
Current algorithm: mean weighted by pixels (not colors)
Current algorithm: split at halfway point.
Current authentication level
Current byte index in zPattern
Current byte index in zString
Current bytes of pending data
Current checkout, including internal fragmentation
Current column during output
Current db structure (or NULL)
Current depth of the r-tree structure
Current implementation of prepared statements can't send result set metadata for these queries on prepare stage.
Current index in aLeft
Current index in aRight
Current index in output buffer
Current index is unique
Current innermost WITH clause
Current leaf block (or 0)
Current leaf page number
Current linux kernel (Linux 3.17) support 8192 cpus at maximum.
Current lock held on database file
Current merge state (see above)
Current name is a substring
Current node image to append to
Current number of allocations
Current number of cells in pNode
Current number of distinct checkouts
Current number of samples
Current number of savepoints
Current number of stack segments.
Current number of users of this structure
Current offset in pgidx
Current offset in position list
Current offset into pData
Current offset within position list
Current ordered scan item
Current outermost WITH clause
Current overflow page number
Current page of the b-tree
Current parse context
Current position in the array
Current position in the hashtable
Current position list
Current position where a THEN must jump.
Current pre-update operation
Current problem is iseq_free().
Current read offset within file pTemp1
Current rolling back, so do not spill
Current row as a Stat4Sample
Current side of the stack
Current size of database file
Current size of node in bytes
Current size of pRecord list as PMA
Current size of stack (all segments).
Current size of wal-index file
Current stack segment address.
Current stack segment size.
Current state of incremental merge
Current state, using numbers defined in header comment
Current term read from page
Current token number of document
Current token position
Current total stack size.
Current value of 'col' column
Current value of 'term' column
Current value of the system call
Current versions of SQLite ignore any errors  returned by xCommit().
Current working directory or filesystem encoding was changed.
Current write is a delete
Current write offset in the journal file
Current write offset within file pTemp1
Currently 3007000 8: Database page size.
Currently always set to 2
Currently always set to 3
Currently executing extension function
Currently iOff points to the first byte of a varint.
Currently in a VACUUM
Currently in a positive assert.
Currently in recurse or negative assert.
Currently no attributes of data-type objects can be set directly except names.
Currently only Numeric-like object supported.
Currently the following are supported:  :GFp_simple :GFp_mont :GFp_nist :GF2m_simple  If the first argument is :GFp or :GF2m, creates a new curve with given parameters.
Currently the only  meaningful value to insert is the text 'optimize'.
Currently the only valid values are 0 and BTREE_BULKLOAD.
Currently there is an SQL level transaction open on the vacuum database.
Currently there is only one such flag - SQLITE_INDEX_SCAN_UNIQUE.
Currently this should never happen
Currently you cannot denote that the function can accept less arguments than num_args
Currently, Fts5SegIter.iLeafOffset points to the first byte of position-list content for the current rowid.
Currently, OpenSSL supports AE only in combination with Associated Data (AEAD) where additional associated data is included in the encryption process to compute a tag at the end of the encryption.
Currently, SQLite never calls the LockFileEx function without wanting the call to fail immediately if the lock cannot be obtained.
Currently, no such page exists in the page-cache and the  "is journaled" bitvec flag has been set.
Currently, the only call to TryEnterCriticalSection() is #ifdef'ed out, so #ifdef  this out as well.
Currently, there's no way to determine how many rows can be fetched from a cursor.
Currently, this deals only with single-element data types.
Currently, this is the only way to correctly initialize an event buffer.
Cursor P1 is on an index btree.
Cursor assigned to each bit
Cursor containing term and doclist
Cursor for IPK b-tree
Cursor for table associated with pIdx
Cursor for the canonical data btree
Cursor for the first index
Cursor for the main table
Cursor for this UNIQUE index
Cursor from which column data is extracted
Cursor handle for this sorter
Cursor iCur is open on an intkey b-tree (a table).
Cursor is for seek/delete only
Cursor is pointing ot the last entry
Cursor might also move if a btree is rebalanced.
Cursor number for current WhereLoop
Cursor number for ephemeral table
Cursor number for ephemerial table
Cursor number for the sorter
Cursor number for the table
Cursor number for the table corresponding to the index
Cursor number from which to take column data
Cursor number of cursor that does not need seeking
Cursor number of pseudo-table
Cursor number of the first index
Cursor number of the sorting index
Cursor number of the source table
Cursor number of the subquery
Cursor number of the temporary table holding result
Cursor object (for pKeyInfo)
Cursor object to populate
Cursor of table holding data.
Cursor of table to get the new rowid
Cursor of the RHS table
Cursor of the canonical data source
Cursor open on index being analyzed
Cursor open on the btree to be searched
Cursor opened by OpenSorter (if in use)
Cursor pointing at blob row
Cursor pointing at record to retrieve.
Cursor pointing to a table row
Cursor pointing to entry to read from
Cursor position, measured in chars
Cursor returned by porterOpen
Cursor returned by simpleOpen
Cursor seek operation
Cursor snippet is being generated from
Cursor that data will be read from
Cursor that holds the new sorter
Cursor to create snippet for
Cursor to grab old.* values from
Cursor to iterate through aLeft
Cursor to iterate through aRight
Cursor to iterate through level(s)
Cursor to iterate through node
Cursor to iterate through zInput
Cursor to left edge, then the prompt
Cursor to read old values from
Cursor to receive the page, or NULL
Cursor to retrieve value from
Cursor to scan b-tree
Cursor to table into which insert is written
Cursor used for index scans (if any)
Cursor used for virtual table scan
Cursor used to iterate through aDoclist
Cursor used to iterate through aLeft
Cursor used to iterate through aRight
Cursor used to read input data
Cursor used to scan change record
Cursor,Column pairs for equivalence classes
Cursors are destroyed using the xClose method.
Cursors can also point to virtual tables, sorters, or "pseudo-tables".
Cursors can move when the row they are pointing at is deleted out from under them, for example.
Cursors can move when the row they are pointing at is deleted out from under them.
Cursors from source and destination
Cursors in the equivalence class
Cursors that are not yet positioned
Cursors that have been tripped into the CURSOR_FAULT state are not counted.
Cursors will behave like a bit different, but mostly like old-API unbuffered and thus will populate this array with value.
Curve names are returned as sn.
Curve nid (numerical identifier) used for ASN1 mapping
Custom compaction filter
Custom merge operator
Custom rank function args
Cut edge points to fit in filter window in case of spill-off
Cut out the 16 bit from immediate.
Cut the allocated space into a free and a used block.
Cut the link between the connection structure and the time_t structure allocated within the OCI session
Cut the search len from haystack, equals to REG_STARTEND
D       (input) DOUBLE PRECISION array, dimension (N) The diagonal elements of A.
D       (input) REAL array, dimension (N) The diagonal elements of A.
D       (input/output) DOUBLE PRECISION array, dimension (N) On entry, the array to be sorted.
D       (input/output) DOUBLE PRECISION array, dimension (N) On entry, the diagonal elements of the tridiagonal matrix.
D       (input/output) DOUBLE PRECISION array, dimension (N) On entry, the n diagonal elements of the bidiagonal matrix B.
D       (input/output) DOUBLE PRECISION array, dimension (N) On entry, the n diagonal elements of the tridiagonal matrix.
D       (input/output) REAL array, dimension (N) On entry, the array to be sorted.
D       (input/output) REAL array, dimension (N) On entry, the diagonal elements of the tridiagonal matrix.
D       (input/output) REAL array, dimension (N) On entry, the n diagonal elements of the bidiagonal matrix B.
D       (input/output) REAL array, dimension (N) On entry, the n diagonal elements of the tridiagonal matrix.
D       (output) DOUBLE PRECISION array, dimension ( K ) On output, D contains the updated singular values.
D       (output) DOUBLE PRECISION array, dimension (NB) The diagonal elements of the first NB rows and columns of the reduced matrix.
D       (output) REAL array, dimension ( K ) On output, D contains the updated singular values.
D       (output) REAL array, dimension (NB) The diagonal elements of the first NB rows and columns of the reduced matrix.
D      (input) DOUBLE PRECISION array, dimension ( 2 ) The original eigenvalues.
D      (input) DOUBLE PRECISION array, dimension ( N ) The original eigenvalues.
D      (input) DOUBLE PRECISION array, dimension (2) The original eigenvalues.
D      (input) DOUBLE PRECISION array, dimension (N) The original eigenvalues.
D      (input) REAL array, dimension ( 2 ) The original eigenvalues.
D      (input) REAL array, dimension ( N ) The original eigenvalues.
D      (input) REAL array, dimension (2) The original eigenvalues.
D      (input) REAL array, dimension (N) The original eigenvalues.
D      (input/output) DOUBLE PRECISION array, dimension ( N ) On entry D contains the main diagonal of the bidiagonal matrix.
D      (input/output) DOUBLE PRECISION array, dimension ( N ) On entry D contains the singular values of the two submatrices to be combined.
D      (input/output) DOUBLE PRECISION array, dimension ( NL+NR+1 ).
D      (input/output) DOUBLE PRECISION array, dimension (N) On entry D contains the main diagonal of the bidiagonal matrix.
D      (input/output) DOUBLE PRECISION array, dimension (N) On entry, D contains the eigenvalues of the two submatrices to be combined.
D      (input/output) DOUBLE PRECISION array, dimension (N) On entry, the diagonal elements of the tridiagonal matrix.
D      (input/output) DOUBLE PRECISION array, dimension (N) On entry, the eigenvalues of the rank-1-perturbed matrix.
D      (input/output) DOUBLE PRECISION array, dimension (N) On entry, the eigenvalues of the two submatrices to be combined.
D      (input/output) DOUBLE PRECISION array, dimension (N) On entry, the main diagonal of the tridiagonal matrix.
D      (input/output) DOUBLE PRECISION array, dimension(N) On entry D contains the singular values of the two submatrices to be combined.
D      (input/output) REAL array, dimension ( N ) On entry D contains the main diagonal of the bidiagonal matrix.
D      (input/output) REAL array, dimension ( N ) On entry D contains the singular values of the two submatrices to be combined.
D      (input/output) REAL array, dimension ( NL+NR+1 ).
D      (input/output) REAL array, dimension (N) On entry D contains the main diagonal of the bidiagonal matrix.
D      (input/output) REAL array, dimension (N) On entry, D contains the eigenvalues of the two submatrices to be combined.
D      (input/output) REAL array, dimension (N) On entry, the diagonal elements of the tridiagonal matrix.
D      (input/output) REAL array, dimension (N) On entry, the eigenvalues of the rank-1-perturbed matrix.
D      (input/output) REAL array, dimension (N) On entry, the eigenvalues of the two submatrices to be combined.
D      (input/output) REAL array, dimension (N) On entry, the main diagonal of the tridiagonal matrix.
D      (input/output) REAL array, dimension(N) On entry D contains the singular values of the two submatrices to be combined.
D      (output) DOUBLE PRECISION array, dimension(K) On exit the square roots of the roots of the secular equation, in ascending order.
D      (output) REAL array, dimension(K) On exit the square roots of the roots of the secular equation, in ascending order.
D     (input/output) DOUBLE PRECISION array, dimension (N) On entry, D contains the diagonal elements of the bidiagonal matrix whose SVD is desired.
D     (input/output) DOUBLE PRECISION array, dimension (N) On entry, D contains the diagonal entries of the bidiagonal matrix whose SVD is desired.
D     (input/output) REAL array, dimension (N) On entry, D contains the diagonal elements of the bidiagonal matrix whose SVD is desired.
D     (input/output) REAL array, dimension (N) On entry, D contains the diagonal entries of the bidiagonal matrix whose SVD is desired.
D.2) For each FK for which the table is the parent table, search  the child table for rows that correspond to the deleted row  in the parent table.
D1      (input) DOUBLE PRECISION The 1,1 element in the diagonal matrix D.
D1      (input) REAL The 1,1 element in the diagonal matrix D.
D2      (input) DOUBLE PRECISION The 2,2 element in the diagonal matrix D.
D2      (input) REAL The 2,2 element in the diagonal matrix D.
D800-DFFF Surrogates.
DATA is a File that contains the data section of the executed file.
DATA, MISSING, CONFLICT, CONSTRAINT
DB Page containing root of this index
DB2NOEXITLIST env variable prevents DB2 from invoking atexit()
DBDSDC can be used to compute all singular values, and optionally, singular vectors or singular vectors in compact form.
DBL_MANT_DIG must be less than 4 times of bits of int
DBSETLDBNAME is only available in FreeTDS 0.92 or above
DB_UnresetViews means that one or more views have column names that have been filled out.
DEBUG Darwin prior to 7.0 and Win32 do not have socklen_t
DEBUG and TESTING functions
DEDICATION This file is dedicated to my dog, Unix, also known as Yun-chan and Unix J.
DEFAULT_FONTPATH and PATHSEPARATOR are host type dependent and are normally set by configure in config.h.
DEFINE - always false
DEFINE group contains more than one branch
DELETE      deferred    Decrement the "deferred constraint counter".
DELETE      deferred    Increment the "deferred constraint counter".
DELETE      immediate   Decrement the "immediate constraint counter".
DELETE operations:  D.1) For each FK for which the table is the child table,  search the parent table for a row that corresponds to the  deleted row in the child table.
DELETE, or UPDATE and return
DELTA  (output) DOUBLE PRECISION array, dimension ( 2 ) Contains (D(j) - lambda_I) in its  j-th component.
DELTA  (output) DOUBLE PRECISION array, dimension ( N ) If N .ne.
DELTA  (output) DOUBLE PRECISION array, dimension (2) The vector DELTA contains the information necessary to construct the eigenvectors.
DELTA  (output) DOUBLE PRECISION array, dimension (N) If N .ne.
DELTA  (output) REAL array, dimension ( 2 ) Contains (D(j) - lambda_I) in its  j-th component.
DELTA  (output) REAL array, dimension ( N ) If N .ne.
DELTA  (output) REAL array, dimension (2) The vector DELTA contains the information necessary to construct the eigenvectors.
DELTA  (output) REAL array, dimension (N) If N .ne.
DEPRECATED APIs: Use php_stream_mkdir() instead
DER and BER encodings are binary Tag-Length-Value (TLV) encodings that are quite concise compared to other popular data description formats such as XML, JSON etc.
DER to Ruby converters
DESIG  (input/output) DOUBLE PRECISION Lower order part of SIGMA QMAX   (input) DOUBLE PRECISION Maximum value of q.
DESIG  (input/output) REAL Lower order part of SIGMA QMAX   (input) REAL Maximum value of q.
DFUNCTION(zName, nArg, iArg, bNC, xFunc) Like FUNCTION except it omits the SQLITE_FUNC_CONSTANT flag and adds the SQLITE_FUNC_SLOCHNG flag.
DH#g:: The generator (an OpenSSL::BN) g of the Diffie-Hellman parameters.
DH#priv_key:: The per-session private key, an OpenSSL::BN.
DH#pub_key:: The per-session public key (an OpenSSL::BN) matching the private key.
DIAG   - CHARACTER*1.
DIFF_KEY is subset of DIFF_ASSOC.
DIFL   (input) DOUBLE PRECISION array, dimension ( K ).
DIFL   (input) DOUBLE PRECISION array, dimension ( LDU, NLVL ).
DIFL   (input) REAL array, dimension ( K ).
DIFL   (input) REAL array, dimension ( LDU, NLVL ).
DIFL   (output) DOUBLE PRECISION array, dimension ( N ) On exit, DIFL(I) is the distance between I-th updated (undeflated) singular value and the I-th (undeflated) old singular value.
DIFL   (output) REAL array, dimension ( N ) On exit, DIFL(I) is the distance between I-th updated (undeflated) singular value and the I-th (undeflated) old singular value.
DIFR   (input) DOUBLE PRECISION array, dimension ( LDGNUM, 2 ).
DIFR   (input) DOUBLE PRECISION array, dimension ( LDU, 2 * NLVL ).
DIFR   (input) REAL array, dimension ( LDGNUM, 2 ).
DIFR   (input) REAL array, dimension ( LDU, 2 * NLVL ).
DISABLE_CASE_FOLD_MULTI_CHAR(case_fold_flag),
DISTINCT keyword not used
DISTINCT operates on these
DISTINCT over all these values
DISTINCT using indexes
DL (Fiddle) library is preferred for safer and a bit more portable programming.
DLAED1 handles the case in which all eigenvalues and eigenvectors of a symmetric tridiagonal matrix are desired.
DLAED1 is used only for the full eigensystem of a tridiagonal matrix.
DLAED7 handles the case in which eigenvalues only or eigenvalues and eigenvectors of a full symmetric matrix (which was reduced to tridiagonal form) are desired.
DLAED7 handles the cases in which eigenvalues only or eigenvalues and eigenvectors of a full symmetric matrix (which was reduced to tridiagonal form) are desired.
DLAHQR works primarily with the Hessenberg submatrix in rows and columns ILO to IHI, but applies transformations to all of H if WANTT is .TRUE..
DLAM   (output) DOUBLE PRECISION The computed lambda_I, the I-th updated eigenvalue.
DLAM   (output) REAL The computed lambda_I, the I-th updated eigenvalue.
DLAMC1 returns the parameters  LBETA, LT, LRND and LIEEE1.
DLAMDA  (input) DOUBLE PRECISION array, dimension (K) The first K elements of this array contain the old roots of the deflated updating problem.
DLAMDA  (input) REAL array, dimension (K) The first K elements of this array contain the old roots of the deflated updating problem.
DLAMDA  (input/output) DOUBLE PRECISION array, dimension (K) The first K elements of this array contain the old roots of the deflated updating problem.
DLAMDA  (input/output) REAL array, dimension (K) The first K elements of this array contain the old roots of the deflated updating problem.
DLAMDA (output) DOUBLE PRECISION array, dimension (N) A copy of the first K eigenvalues which will be used by DLAED3 to form the secular equation.
DLAMDA (output) DOUBLE PRECISION array, dimension (N) Contains a copy of the first K eigenvalues which will be used by DLAED3 to form the secular equation.
DLAMDA (output) REAL array, dimension (N) A copy of the first K eigenvalues which will be used by SLAED3 to form the secular equation.
DLAMDA (output) REAL array, dimension (N) Contains a copy of the first K eigenvalues which will be used by SLAED3 to form the secular equation.
DLASD1 is called from DLASD0.
DLASD2 is called from DLASD1.
DLASD3 is called from DLASD1.
DLASD6 is called from DLASDA.
DLASD7 is called from DLASD6.
DLASD8 is called from DLASD6.
DMIN   (output) DOUBLE PRECISION Minimum value of d.
DMIN   (output) REAL Minimum value of d.
DMIN  (input) DOUBLE PRECISION Minimum value of d.
DMIN  (input) REAL Minimum value of d.
DMIN  (output) DOUBLE PRECISION Minimum value of d.
DMIN  (output) REAL Minimum value of d.
DMIN1 (input) DOUBLE PRECISION Minimum value of d, excluding D( N0 ).
DMIN1 (input) REAL Minimum value of d, excluding D( N0 ).
DMIN1 (output) DOUBLE PRECISION Minimum value of d, excluding D( N0 ).
DMIN1 (output) REAL Minimum value of d, excluding D( N0 ).
DMIN2 (input) DOUBLE PRECISION Minimum value of d, excluding D( N0 ) and D( N0-1 ).
DMIN2 (input) REAL Minimum value of d, excluding D( N0 ) and D( N0-1 ).
DMIN2 (output) DOUBLE PRECISION Minimum value of d, excluding D( N0 ) and D( N0-1 ).
DMIN2 (output) REAL Minimum value of d, excluding D( N0 ) and D( N0-1 ).
DN    (input) DOUBLE PRECISION d(N) DN1   (input) DOUBLE PRECISION d(N-1) DN2   (input) DOUBLE PRECISION d(N-2) TAU   (output) DOUBLE PRECISION This is the shift.
DN    (input) REAL d(N) DN1   (input) REAL d(N-1) DN2   (input) REAL d(N-2) TAU   (output) REAL This is the shift.
DN    (output) DOUBLE PRECISION d(N0), the last value of d.
DN    (output) REAL d(N0), the last value of d.
DNM1  (output) DOUBLE PRECISION d(N0-1).
DNM1  (output) REAL d(N0-1).
DNM2  (output) DOUBLE PRECISION d(N0-2).
DNM2  (output) REAL d(N0-2).
DO NOT EDIT THIS MACHINE GENERATED FILE.
DO NOT TOUCH is_ssl, remote_ip, remote_port
DOCUMENT-END is expected.
DOCUMENT-START is expected.
DOCUMENT_ROOT should also be defined at this stage..but better check it anyway
DP - Data Processing instruction (use with EMIT_DATA_PROCESS_INS).
DRCP: connection_class is an attribute of a connection
DSIGMA  (input) DOUBLE PRECISION array, dimension ( K ) The first K elements of this array contain the old roots of the deflated updating problem.
DSIGMA  (input) REAL array, dimension ( K ) The first K elements of this array contain the old roots of the deflated updating problem.
DSIGMA (input) DOUBLE PRECISION array, dimension(K) The first K elements of this array contain the old roots of the deflated updating problem.
DSIGMA (input) REAL array, dimension(K) The first K elements of this array contain the old roots of the deflated updating problem.
DSIGMA (output) DOUBLE PRECISION The computed lambda_I, the I-th updated eigenvalue.
DSIGMA (output) DOUBLE PRECISION array, dimension ( N ) Contains a copy of the diagonal elements (K-1 singular values and one zero) in the secular equation.
DSIGMA (output) DOUBLE PRECISION array, dimension (N) Contains a copy of the diagonal elements (K-1 singular values and one zero) in the secular equation.
DSIGMA (output) REAL The computed lambda_I, the I-th updated eigenvalue.
DSIGMA (output) REAL array, dimension ( N ) Contains a copy of the diagonal elements (K-1 singular values and one zero) in the secular equation.
DSIGMA (output) REAL array, dimension (N) Contains a copy of the diagonal elements (K-1 singular values and one zero) in the secular equation.
DSIGMA, IDXC, IDXC, and ZW are used as storage space.
DSIGMA, IDXC, IDXC, and the first column of U2 are used as storage space.
DTRD1  (input) INTEGER DTRD2  (input) INTEGER These are the strides to be taken through the array A.
DTYPE COPY SWAP FUNCTION
Data actually written
Data associated with this element
Data beyond this point must be rescanned after resumption, so move it to the front of the buffer rather than discarding it.
Data beyond this point will be regenerated after resumption, so do not write it out when emptying the buffer externally.
Data dependencies macros
Data for current page of this level
Data for the current row, if all on one page
Data for the entry is nil.
Data from the btree layer
Data is coming from a SELECT or from a multi-row VALUES clause.
Data is coming from a SELECT.
Data is compared by using a user-supplied callback.
Data is contained within "boxes".
Data is obtained from the comments following the "case OP_xxxx:" statements in the vdbe.c file.
Data is read to or from the buffer pBuf.
Data is then  loaded into the buffers belonging to pReadr and it is set to point to  the first key in its range.
Data space required for this record
Data to decode list-of-rowids from
Data type for this column
Data types passed directly are treated as array types.
Data types that have no standard size
Data will be discarded anyway...
Data yet to be written
Data(1) comes from register P1+1 and so forth.
Data(1) comes from register P1+1 and so froth.
DataSize() cannot fail
Database (for malloc)
Database Format of R-Tree Tables --------------------------------  The data structure for a single virtual r-tree table is stored in three  native SQLite tables declared as follows.
Database Name   Table Name
Database changes are detected by looking at 15 bytes beginning at offset 24 into the file.
Database changes is detected by looking at 15 bytes beginning at offset 24 into the file.
Database connection (for malloc())
Database connection (for malloc)
Database connection associated with this table
Database connection currently using this Btree
Database connection for malloc errors
Database connection for reporting malloc problems
Database connection malloc context
Database connection to notify of OOM errors
Database connection to read from
Database connection, for malloc()
Database containing the table being updated
Database containing the trigger
Database currently in use
Database file holding the shared memory
Database file specified with an absolute path are not impacted by this setting, regardless of its value.
Database filename (UTF-16)
Database filename (UTF-8)
Database filename UTF-8 encoded
Database filenames are double-zero terminated if they are not URIs with parameters.
Database handle (for malloc)
Database handle (for sqlite3DbMalloc() )
Database handle doing sort
Database handle session is attached to
Database handles returned by this function remain valid until the next call to any sqlite3rbu_xxx() function other than sqlite3rbu_db().
Database header content
Database holding FTS index (e.g. "main")
Database holding shared memory
Database holding shared-memory
Database holding the object
Database holding the shared memory
Database idx for pTab
Database in which module is registered
Database in which the table lives
Database in which to run SQL
Database is always well-formed
Database key for encryption extension
Database link resource, use default transaction.
Database lock protocol error
Database name (e.g. "main")
Database name or NULL
Database number to create the table in
Database of the table
Database only autoinc table
Database page number for frame
Database page number to read data for
Database page size in bytes.
Database page-size in bytes
Database schema being analyzed
Database schema version number for this file
Database size after this commit
Database size before freeing
Database structure for this iterator
Database that contains the table
Database the cursor belongs to, or -1
Database to be rekeyed
Database to detach at end of vacuum
Database was empty at trans start
Databases managed by external sources can be given much smaller limits designed to prevent a denial of service attack.
Datatype of the argument to the memory allocated passed as the second argument to sqlite3Fts5ParserAlloc() below.
Datatype of the argument to the memory allocated passed as the second argument to sqlite3ParserAlloc() below.
Date at which to calculate offset
Date object is created with Date::new, Date::jd, Date::ordinal, Date::commercial, Date::parse, Date::strptime, Date::today, Time#to_date or etc.
Date/time functions that use 'now', and other functions like sqlite_version() that might change over time cannot be used in an index.
DateTime does not consider any leap seconds, does not track any summer time rules.
DateTime object has various methods.
DateTime object is created with DateTime::new, DateTime::jd, DateTime::ordinal, DateTime::commercial, DateTime::parse, DateTime::strptime, DateTime::now, Time#to_datetime or etc.
Datetime arange is handled specially
Datetime business-day API
Datetime doesn't fit in any category
Datetime encode/decode
Datetime zero-dimensional array
Datetime-related functions
Datetimes can't be in generic units
Daylight Saving Time was introduced in 1916.
Days per month, regular year and leap year
Days since 2000 Jan 0.0 (negative before)
Db containing fts5 table
Db name for state ("stat" or "main")
Dbm libraries also sometimes limit the total size of a key/value pair, and the total size of all the keys that hash to the same value.
De-reference and close our copy of the shared memory handle
Deal with UTF characters that take up more than one character.
Deal with as much of this read request as possible by transfering data from the memory mapping using memcpy().
Deal with as much of this write request as possible by transfering data from the memory mapping using memcpy().
Deal with directionality codes introduced in Unicode 3.0.
Deal with special cases of 0**n and 1**n
Deal with the remainder.
Deal with this madness by typedeffing 'safeboolean' to 'boolean' if HAVE_BOOLEAN is already set, because this is the test that libjpeg uses.
Deallocate SSL context
Deallocate a KeyInfo object
Deallocate a WhereClause structure.
Deallocate a register, making available for reuse for some other purpose.
Deallocate all chunks from a RowSet.
Deallocate all memory associated with a WhereAndInfo object.
Deallocate all memory associated with a WhereOrInfo object.
Deallocate all the dtypes and objects that were iterated
Deallocate and destroy a parser.
Deallocate any buffers and buffering data
Deallocate config parameters
Deallocate internal memory used by a WhereLoop object
Deallocate page if true
Deallocate the iterator memory
Deallocate the structure itself only if bFree is true.
Deallocates any cached error strings.
Dear compiler, please ignore this param
Debug EXPLAIN QUERY PLAN
Debug listings of VDBE programs
Debug print SQL as it executes
Debug tracing macros.
Debugging function to print chars       *
December 4, 1999  Ported to libgd by Pierre Joye.
Decide the casting rules for inputs and outputs.
Decide the max_value: the max.
Decide whether some text looks like UTF-8 with BOM.
Decide whether some text looks like UTF-8.
Decimal point is allowed.
Declarations for Floyd-Steinberg dithering.
Declarations for functions in fkey.c.
Declarations for functions used only in this file.
Declarations used for tracing the operating system interfaces.
Declare 'Collator' class properties.
Declare 'IntlDateFormatter' class properties.
Declare 'Locale' class properties.
Declare 'MessageFormatter' class properties.
Declare 'Normalizer' class properties.
Declare 'NumberFormatter' class properties.
Declare 'Transliterator' class properties
Declare 'index' which will point to sort key in sort key buffer.
Declare and initialize constant integer 'isDirect'.
Declare our image pointer
Declare that a function has been overloaded by a virtual table.
Declare the table schema to SQLite.
Decode 'B' encoded data
Decode 'q' encoded data
Decode a UTF-8 character.
Decode a blob of varints into N integers
Decode an URI-escape sequence corresponding to a single UTF-8 character.
Decode any entries that occur before the first term.
Decode any more doclist data that appears on the page before the first term.
Decode backslash escaped values
Decode each operand, sign extending, etc.
Decode the "end_block" field, selected by column iCol of the SELECT  statement passed as the first argument.
Decode the arguments passed through to this function.
Decode the flags byte (the first byte of the header) for a page and initialize fields of the MemPage structure accordingly.
Decode the leading octet.
Decode the next character.
Decode the page just read from disk
Decode the position list tail at the start of the page
Decode the raw buffer.
Decode the required number of characters.
Decode the three function arguments
Decode variable into destination buffer
Decoded structure object
Decoding  Quoted-printable string.
Decoding the needs_control_head in framesize.
Decoding them can be complex as it involves examining your system headers to determine the correct definition.
Decoding value of parameter
Decomposition into subterms
Decomposition of the WHERE clause
Decomposition of the entire WHERE clause
Decrease the flow level.
Decreased twice then mysqlnd_free_result() will crash, because it will try to access already freed memory.
Decrement allocation count
Decrement error limit
Decrement number of remaining iterations, and return to start of the main loop with a new value of I.
Decrement number of remaining iterations, and return to start of the main loop with new value of I.
Decrement old reference (if any)
Decrement the BtShared.nRef counter.
Decrement the count of locks against this same file.
Decrement the counter for each row found (as the constraint is now satisfied).
Decrement the free-list count by 1.
Decrement the old reference
Decrement the r-tree reference count.
Decrement the ref-count on a virtual table object.
Decrement the reference count on a page.
Decrement the reference count on a vxworksFileId object.
Decrement the shared lock counter.
Decrement the usage count.
Decrement the value in register P1 then jump to P2 if the new value is exactly zero.
Decrement to avoid overflow.
Decrementing the opline to pretend the exception happened during the YIELD opcode.
Deep, not shallow copies
Default - can't decipher operation
Default ON CONFLICT policy
Default ON CONFLICT policy for trigger steps
Default ON CONFLICT policy for triggers
Default callback handlers
Default column to query
Default compare for most architectures.
Default compression level which is a good trade-off between space and time
Default deflate strategy which is used for normal data.
Default filename encoding policy.
Default is Emacs editing mode.
Default is still text.
Default is to lose at either one eighth or 2 of the available decimal digits in each computed singular value (whichever is smaller).
Default is to use client-side session pool
Default is using positional arguments
Default locking-mode for attached dbs
Default lookaside buffer count
Default lookaside buffer size
Default maximum size for persistent journal files.
Default maximum size of memory used by memory-mapped I/O in the VFS
Default mmap_size setting
Default not possessive quantifier
Default number of rounds if not explicitly specified.
Default number of rounds.
Default number of tokens in snippet
Default permissions when creating a new file
Default permissions when creating auto proxy dir
Default return value, in case of an error
Default session id char validation function allowed by ps_modules.
Default single-char op codes
Default span for NEAR operators.
Default synchronous levels.
Default to global filters only
Default to global wrappers only
Default to memset()/memcpy() if no option is specified
Default to no outer axis
Default to no skipping first-visit elements in the iteration
Default to the current year if year parameter is not given
Default tokenizer module
Default value expressions must be constant.
Default value for the new column
Default value of this column
Default value used for initialization, for pacifying older GCCs or non-GCC compilers.
Default values for second and subsequent columns need to match.
Default values must be the same for all columns
Default variable settings
Default/Implicit properties
Defaults to (none) utf-8.
Defer all FK constraints
Defer deleting the Table object associated with the subquery until code generation is complete, since there may still exist Expr.pTab entries that refer to the subquery even after flattening.
Defer right-most ORDER BY of a compound
Defer sourcing vdbe.h and btree.h until after the "u8" and  "BusyHandler" typedefs.
Defer sourcing vdbe.h and btree.h until after the "u8" and "BusyHandler" typedefs.
Defer to CryptGenRandom on Windows
Deferred and Immediate FKs --------------------------  Foreign keys in SQLite come in two flavours: deferred and immediate.
Deferred constraints are implemented using a simple counter associated with the database handle.
Deferred constraints are stored here
Deferred doclists are cached (allocated) by the sqlite3Fts3CacheDeferredDoclists() function.
Deferred search tokens, if any
Deferred token object for this token
Deferred tokens are not taken into account.
Deferred tokens have not yet been considered.
Define FLOATING_POINT to get floating point.
Define HAVE_FULLFSYNC to 0 or 1 depending on whether or not the F_FULLFSYNC macro is defined.
Define RUBY_REVISION to avoid revision.h inclusion via version.h.
Define our magic string to mark salt for SHA256 "encryption" replacement.
Define our magic string to mark salt for SHA512 "encryption" replacement.
Define the OS_VXWORKS pre-processor macro to 1 if building on  vxworks, or 0 otherwise.
Define the followingsha2_* types to types of the correct length on the native archtecture.
Define the fts5yytestcase() macro to be a no-op if is not already defined otherwise.
Define the parameters of the hash tables in the wal-index file.
Define the required Windows SDK version constants if they are not already available.
Define the storage for the packet accumulator
Define the yytestcase() macro to be a no-op if is not already defined otherwise.
Define these in the PHP7 tree to make merging easy process
Define various macros that are missing from some systems.
Define-const: Group  Group is a Struct that is only available when compiled with +HAVE_GETGRENT+.
Define-const: Passwd  Passwd is a Struct that contains the following members:  name:: contains the short login name of the user as a String.
Defined at the top of this function
Defined below in the proxying locking division.
Defined in this way, GMST0 will increase with about 4 min a
Defines a file format commonly used to store private keys with accompanying public key certificates, protected with a password-based symmetric key.
Defines for debugging purposes.
Defines the interface to tokenizers used by fulltext-search.
Defining this symbol does not mean that the library will use a memory-pool by default, just that it is available.
Definitely not nice, _hackish_ :(, but works.
Definition of the mathematical constant E (e) as a Float number.
Definition of the mathematical constant PI as a Float number.
Definition: Two databases (or the same database at two points it time) are said to be "logically equivalent" if they give the same answer to all queries.
Definitions of sqlite3_io_methods objects for all locking methods plus "finder" functions for each locking method.
Definitions to allow mutual recursion
Deflate compression strategy designed to be almost as fast as HUFFMAN_ONLY, but give better compression for PNG image data.
Deflate due to small z component.
Deflate singular values.
Deflate strategy for data produced by a filter (or predictor).
Deflate strategy which prevents the use of dynamic Huffman codes, allowing for a simpler decoder for specialized applications.
Deflate strategy which uses Huffman codes only (no string matching).
Deflation is possible.
Defragment the page given.
Deinitialize the memory allocation subsystem.
Deinitialize the memory allocator
Deinitialize this module.
Deinitilaise module globals
Delaunay implementation methyod.
Delaunay upper envelope
Delay closure destruction until its invocation
Delaying the initialization of pGroup is an optimization:  The common case is to exit the module before reaching this point.
Delete a "ascii" tokenizer.
Delete a "porter" tokenizer.
Delete a "unicode61" tokenizer.
Delete a P4 value if necessary.
Delete a VdbeFrame object and its contents.
Delete a WhereLoop object
Delete a changegroup object.
Delete a linked list of TriggerStep structures.
Delete a row from a main table b-tree
Delete a row from an aux.
Delete a session object previously allocated using sqlite3session_create().
Delete a virtual table handle allocated by fts5InitVtab().
Delete after closing if true
Delete aliases to phar's that got kicked out of the global table
Delete all attached table objects.
Delete all cached deferred doclists.
Delete all entries in the FTS5 index.
Delete all indices associated with this table.
Delete all information from a single table in the database.
Delete all information from the single table that pCur is open on.
Delete all parts those are not in the "parts" attribute
Delete all the content of a Select structure but do not deallocate the select structure itself.
Delete all the content of a Select structure.
Delete an entire SrcList including all its substructure.
Delete an entire VDBE.
Delete an entire expression list.
Delete and then insert a row
Delete any TriggerPrg structures allocated while parsing this statement.
Delete any auxdata allocations made by the VM
Delete any foreign keys attached to this table.
Delete any previous value and set the value of pMem to be an empty boolean index.
Delete any previous value and set the value stored in *pMem to NULL.
Delete any previous value and set the value stored in *pMem to val, manifest type INTEGER.
Delete any previous value and set the value stored in *pMem to val, manifest type REAL.
Delete any previous value and set the value to be a BLOB of length n containing all zeros.
Delete any triggers created to implement actions for this FK.
Delete entries for this table or index
Delete everything from the shadow tables.
Delete existing record, then do INSERT or UPDATE
Delete extra_zeros_cnt worth of characters from the front of the exponent
Delete flag makes the iterator delete the current element on next
Delete immutable arrays moved into SHM
Delete refcount and destruct if needed.
Delete shared-memory if true
Delete suffix if it exists
Delete the Table structure itself.
Delete the cell at index iCell of node pNode.
Delete the cell in question from the leaf node.
Delete the entry that the cursor is pointing to.
Delete the file at zPath.
Delete the file located at zPath.
Delete the first value
Delete the given Select structure and all of its substructures.
Delete the hash table and return the error code.
Delete the image from memory.
Delete the index and table entries.
Delete the index entries associated with the current record.
Delete the index records
Delete the last value
Delete the master journal file.
Delete the named file.
Delete the persistent connection
Delete the stack of aliases.
Delete the transient table structure associated with the subquery
Delete the underlying  storage if deleteFlag is true.
Delete the underlying storage if deleteFlag is true.
Delete this when closing file
Deleting *pRowid leaves the table empty
Deleting from a partial index
Deleting the journal file here is an optimization only.
Deleting this row means the whole table is empty.
Delimiter character to be quoted
Delimiters can be quoted with quotechar.
Delta to apply to the pattern
Depending on how it is changed, you might not notice the incompatibility right away, even running a full regression test.
Depending on how the SQLite library is compiled, this interface might not exist.
Depending on the SQLite configuration, the database handles and/or the Btree objects may have their own mutexes that require locking.
Deprecate not C contiguous and a dimension changes
Deprecated --- Use PyArray_AsCArray instead
Deprecated external interface.
Deprecated for public use.
Deprecated in favor of php_stream_copy_to_stream_ex()
Deprecated, use LOG_AUTHPRIV instead.
Depreciation checks needed only on python 2
Depth of condition subpatterns
Depth of node containing pCell
Depth of the SAVEPOINT stack
Depth of the tree so far
Depth of tree according to TreeDepth()
Depth-first bounded Euclid search
Dequoted copy of token p
Dequoted name of collation sequence
Deregister and destroy an RBU vfs created by an earlier call to sqlite3rbu_create_vfs().
Derived from zFile if 0
Descend to the child node of the cell that the cursor currently  points at.
Describes a string (chunk of memory).
Describes listening socket, or socket which was accept()-ed by the master thread and queued for future handling by the worker thread.
Description of content to append
Description of segment
Description of the record
Description of the table we are reading from
Description: Generic double ended queue (Deque pronounced DEK) for handling any data types, with sorting.
Descriptor for buffer area
Deserialize a single record from a buffer in memory.
Deserialize and return the structure record currently stored in serialized form within buffer pData/nData.
Deserialize cell iCell of node pNode.
Deserialize the data blob pointed to by buf as serial type serial_type and store the result in pMem.
Designate a buffer for heap memory space
Designate a buffer for page cache memory space
Designate a buffer for scratch memory space
Designate the PRIMARY KEY for the table.
Desired amount of reserved space per page
Desired maximum mmap size
Desired number of arguments.
Desired snippet length
Desired text encoding
Despite MSDN has documented it won't to, the length returned by GetFinalPathNameByHandleA includes the length of the null terminator.
Despite having a 'handle' mechanism like gdb, lldb will not allow a SIGSEGV to pass to the running program.
Despite the spec, the xml-rpc list folk want me to send an empty params element
Despite these problems, this approach is adopted as it seems simpler than the alternatives.
Despite this, if errno really is zero, we still don't want to return SQLITE_OK.
Destination b-tree file
Destination database handle
Destination database name
Destination for SELECT on rhs of INSERT
Destination for coroutine A
Destination for coroutine B
Destination journal mode
Destination of SELECT results
Destination page size
Destination to place the compressed data into
Destroy a bitmap object.
Destroy a cache allocated using pcache1Create().
Destroy a document object.
Destroy a parser object.
Destroy a token object.
Destroy a tokenizer allocated by unicodeCreate().
Destroy all op arrays
Destroy an emitter object.
Destroy an event object.
Destroy an existing tokenizer cursor.
Destroy an existing tokenizer.
Destroy an sqlite3_value object previously obtained from sqlite3_value_dup().
Destroy mutex and condvars
Destroy old array, add new one
Destroy palette based temporary image.
Destroy phar's in shutdown, here we don't care about aliases
Destroy stream hashes
Destroy super-globals
Destroy the input bind
Destroy the part of winFile that deals with wince locks
Destroy the private VFS created for the rbu handle passed as the only argument by an earlier call to rbuCreateVfs().
Destroy translation table
Destroy value without using GC: When opcache moves arrays into SHM it will free the zend_array structure, so references to it from outside the op array become invalid.
Destruct reflector which is no longer needed
Destructor for BtShared.pSchema
Destructor for Mem.z - only valid if MEM_Dyn
Destructor for a jsonEachCursor object
Destructor for mysqli entries in free_links/used_links
Destructor for pPtr (or NULL)
Destructor for pUserData
Destructor for the aux data
Destructor for the codec
Destructor for the data
Destructor for the extra data
Destructor for the string
Destructors are all called for all stack elements before shutting the parser down.
Destructors are called for all stack elements before shutting the parser down.
Detach the ORDER BY clause from the compound SELECT
Detach this backup from the source pager.
Details is reported in the paper "A Fast Fiber Implementation for Ruby 1.9" in Proc.
Details: This routine is called recursively to lay out subtrees of flexbox elements.
Detect 0-size arrays here
Detect a pid change and reset the PRNG.
Detect collision and retry
Detect compound SELECT statements that use an ORDER BY clause with  an alternative collating sequence.
Detect fixed iterations first.
Detect overflow by disallowing the top 16 bits to be 1.
Detect quoted length, adding extra char for doubled single quotes
Detect the case where the last selector is text(), simplexml always accesses the text() child by default, therefore we assign to the parent node.
Detect the largest unit where every value after is zero, to allow safe casting to seconds if microseconds is zero, for instance.
Detect the unit from the input's data
Detect wrong format of " inside of escaped string
DetectKanjiCode() derived from DetectCodeType() by Ken Lunde.
Detects if the character and its othercase has only 1 bit difference.
Detects if the character has an othercase.
Determine DSIGMA(1), DSIGMA(2) and Z(1)
Determine DSIGMA(1), DSIGMA(2), Z(1), VF(1), VL(1), VF(M), and VL(M).
Determine IID of default source interface
Determine a "mid" point and adjust to make sure the mid point is at the beginning of a case mapping triple.
Determine a "mid" point and adjust to make sure the mid point is at the beginning of a range pair.
Determine a "stack measure" for an arbitrary ADDRESS.
Determine allocation unit.
Determine an acceptable scalar style.
Determine default SSL configuration file
Determine how many bytes of data to read.
Determine how many of the segments actually point to zTerm/nTerm.
Determine how many rows have changed.
Determine how much file is left.
Determine how much time we've taken so far.
Determine if an index pIdx on table with cursor iCur contains will the expression pExpr.
Determine if any of the arguments to the pExpr Function reference pSrcList.
Determine if doclists may be loaded from disk incrementally.
Determine if last (or first if NPY_ARRAY_F_CONTIGUOUS) dimension is compatible
Determine if object is a scalar and if so, convert the object to a double and place it in the out_exponent argument and return the "scalar kind" as a result.
Determine if scaling of inputs necessary to avoid overflow when computing 1/TEMP**3
Determine if socket is using a protocol with one of the default registered socket stream wrappers
Determine if the argument is a power of two
Determine if the number already exists.
Determine if there are any scalars, and if so, whether the maximum "kind" of the scalars surpasses the maximum "kind" of the arrays
Determine if we are dealing with WinRT, which provides only a subset of the full Win32 API.
Determine if we are dealing with Windows CE - which has a much reduced API.
Determine if we are dealing with Windows NT.
Determine if we need to parse the file or show the source
Determine if workspace is large enough for blocked code.
Determine location of first number in second half.
Determine location of lowest level subproblem in the full storage scheme
Determine machine dependent parameters to control overflow.
Determine neighbors array.
Determine ntri and max_facet_id.
Determine require buffer size
Determine required destination buffer size (pre-flighting).
Determine size of these matrices.
Determine the BM25 score for the current row.
Determine the UFunc loop.
Determine the auto-incr-merge setting if unknown.
Determine the average document (row) size in pages.
Determine the block size for this environment.
Determine the block size.
Determine the current size of a file in bytes
Determine the effect of starting the double-shift QR iteration at row M, and see if this would make H(M,M-1) negligible.
Determine the effect of starting the single-shift QR iteration at row M, and see if this would make H(M,M-1) negligible.
Determine the encoding.
Determine the first column of U2, the first row of VT2 and the last row of VT.
Determine the indentation level if needed.
Determine the input encoding if it is not known yet.
Determine the input stream encoding by checking the BOM symbol.
Determine the largest segment index value that exists within absolute level iAbsLevel+1.
Determine the length of the UTF-8 sequence.
Determine the maximum amount of space required.
Determine the number of integers in the buffer returned by this call.
Determine the number of phrases in the query
Determine the number of the cell within the stack, given the address of the cell.
Determine the order of the multi-shift QR algorithm to be used.
Determine the size and placement of the submatrices, and save in the leading elements of IWORK.
Determine the type of a table.
Determine the type, using the requested data type if it will affect how the array is retrieved
Determine the unit roundoff and over/underflow thresholds.
Determine the unit roundoff for this environment.
Determine the value of the flags parameter passed to POSIX function open().
Determine triangles array and set tri_indices array.
Determine what state that goes to, based on the state we popped back to and the rule number reduced by.
Determine what to return
Determine when to cross over from blocked to unblocked code (last block is always handled by unblocked code).
Determine when to cross over from blocked to unblocked code.
Determine when to switch from blocked to unblocked code.
Determine where the matrix splits and choose QL or QR iteration for each block, according to whether top or bottom diagonal element is smaller.
Determine where to place temporary files.
Determine whether an array has internal overlap.
Determine whether or not a cursor has moved from the position it was last placed at.
Determine whether or not a cursor has moved from the position where it was last placed, or has been invalidated for any other reason.
Determine whether or not it is nonzero.
Determine whether or not this is a transaction savepoint.
Determine whether the results are already cached.
Determine whether triggers are recursive by default.
Determine whether two arrays share some memory.
Determine whether we should code this trigger
Determine which colormap entries are close enough to be candidates for the nearest entry to some cell in the update box.
Determine which nop opcode is used for padding and should be skipped.
Determine which stream compression filter (if any) we need to read this file
Determine which stream decompression filter (if any) we need to read this file
Determine which, if any, tokens in the expression should be deferred.
Determines whether the 'divisor' metadata divides evenly into the 'dividend' metadata.
Development versions may be changed from build to build
Deviations from standard: Section 4.5 of the spec indicates that all flex items have a default minimum main size.
Device characteristics
Dictionary can contain any of the numeric operations, by name.
Did not find .mgc, restore q
Did parent received exit signals SIG_TERM/SIG_INT/SIG_QUIT
Didn't have a type, totally guess here
Different  actions are taken by sqlite3changeset_apply() depending on the value returned by each invocation of the conflict-handler function.
Different API routines are called depending on whether or not this is Win9x or WinNT.
Different Unix systems declare open() in different ways.
Different WHERE clauses
Different collating sequences
Different columns indexed
Different conflict resolution strategies
Different expressions in the index
Different identity, we need a new impersontated token as well
Different number of columns
Different number of dimensions.
Different sort orders
Different systems want the buffer padded differently
Different utilities that expand the gzipped files may use the mtime header.
Different versions of libjpeg use either 'jboolean' or 'boolean', and some platforms define 'boolean', and so forth.
Digest authentication
Digests other than SHA1 may not be supported by other cryptography libraries.
Digits are usually 0-9, so it is worth to optimize them.
Digits prior to the decimal point
Dimension must be at least (7 * N).
Dimension must be at least (8 * N) WORK   DOUBLE PRECISION work array.
Dimension must be at least (8 * N) WORK   REAL work array.
Dimension of STACK limits N to about 2**32.
Dimensions and itemsize must have been checked for validity.
Dimensions and strides are added to the end.
Direct access to Ruby's Pseudorandom number generator (PRNG).
Direct lookup by rowid or docid.
Direct rendering mode means take data directly from source tables rather than from accumulators
Directory sync needed
Disable  WHERE clause terms made redundant by the index range scan.
Disable MMAP on platforms where it is known to not work
Disable RLB as we mostly have single-connection pools
Disable a term in the WHERE clause.
Disable all error recovery processing in the parser push-down automaton.
Disable counting swept_slots because there are no meaning.
Disable database changes
Disable external authentication on Windows as Impersonation is not yet handled.
Disable file:// if open_basedir are used
Disable logging, use exit status'es and related variabled to detect errors
Disable lookaside memory allocation
Disable lookaside memory allocation for objects that might be shared across database connections.
Disable mutex on connections
Disable mutex on core
Disable mutexing of database connections
Disable nuisance warnings on Borland compilers
Disable possible output compression for images
Disable realpath cache if an open_basedir is set
Disable the API redefinition in sqlite3ext.h
Disable the DISTINCT optimization if SQLITE_DistinctOpt is set via sqlite3_test_ctrl(SQLITE_TESTCTRL_OPTIMIZATIONS,...)
Disable the message box for assertions.
Disabled functions support
Disabled if not using stat3
Disabled unsafe pattern: in conjunction with ZEND_VM_SMART_BRANCH() this may improperly eliminate assignment to Ti.
Disables and re-enables match
Disables critical extension checking.
Disables workarounds for broken certificates.
Disabling FILE_WRITE_DATA prevents the current truncate behaviors for files opened with "a".
Disabling a term causes that term to not be tested in the inner loop of the join.
Disabling is an optimization.
Disabling their usage till support is implemented.
Disallow both ON and USING clauses in the same join
Disallow circular references
Disallow making an inherited method abstract.
Disallow the load_extension() SQL function unless the SQLITE_LoadExtFunc flag is set.
Disallow the transfer optimization if the destination table constains any foreign key constraints.
Disallow these chars outside option values
Disaster would follow.
Disble writing again if there are any watchers on that page
Discard all data currently cached in the hash-tables.
Discard all pages from cache pCache with a page number (key value)  greater than or equal to iLimit.
Discard all unpinned pages in the cache with a page number equal to or greater than parameter iLimit.
Discard any data stored in the in-memory hash tables.
Discard numbers over the limit to avoid modulo bias
Discard parse errors thrown during tokenization
Discard segments that do not contain our argument address.
Discard stack segments which do not contain the target address.
Discard the candidate path from further consideration
Discard the contents of the cache
Discard the contents of the cache.
Discard the contents of the pending terms table.
Discard the contents of the pending-terms hash table.
Discard the contents of the pending-terms hash tables.
Discard the contents of the pending-terms hash-table.
Discard the entire contents of the in-memory page-cache.
Discard the scheme and authority segments of the URI.
Discard the shifted token.
Discarded digits make delta smaller.
Disclaimer  This source code is provided as is by Unicode, Inc.
Disconnect all sqlite3_vtab objects that belong to database connection db.
Disconnect all the virtual table objects in the sqlite3.pDisconnect list.
Disconnect from or destroy a statvfs virtual table.
Disconnect these in next sqlite3_prepare()
Discover the broadcast number of dimensions
Discover the broadcast shape in each dimension
Dispatch data and logic
Dispatched by RINIT and by php_session_destroy
Dispatched by RSHUTDOWN and by php_session_destroy
Display 'On' for other SAPIs instead of STDOUT or STDERR
Display a warning if we encounter an unknown modifier.
Display all of the WhereLoop objects
Display all of the WhereLoop objects if wheretrace is enabled
Display all terms of the WHERE clause
Display the reverse-i-search prompt and process chars
Displaying them is always clutter.
Dispose of previous callback
Dithering, 256 colors.
Ditto for the local variables
Divide a fixed by a fixed
Divide by the multiplier
Divide the matrix into SUBPBS submatrices of size at most SMLSIZ+1 using rank-1 modifications (cuts).
Divider cells in pParent
Division *and* modulo for numbers.
Division by zero results in Inf/-Inf/Nan (double), so it doesn't need any special handling
Division by zero results in an exception, so it doesn't need any special handling
Do FK constraint checks.
Do Insertion sort on D( START:ENDD )
Do a better job someday
Do a binary search to find the first sample greater than or equal to pRec.
Do a binary search with 5 steps
Do a comparison between a 64-bit signed integer and a 64-bit floating-point number.
Do a custom stable insertion sort.
Do a deep comparison of two expression trees.
Do a double word increment.
Do a full access check because access() will only check read-only attribute
Do a memory allocation with statistics and alarms.
Do a node lookup using zPath.
Do a quick self-test.
Do actual optimizations
Do additional sanity checking on the page in this case.
Do allow the journalmode of an in-memory database to be set to anything other than MEMORY or OFF
Do an authorization check using the code and arguments given.
Do an integrity check of the B-Tree  Begin by filling registers 2, 3, ...
Do an integrity check of the B-Tree  Begin by finding the root pages numbers for all tables and indices in the database.
Do an integrity check on each database file
Do any ON CASCADE, SET NULL or SET DEFAULT operations required to handle rows (possibly in other tables) that refer via a foreign key to the row just deleted.
Do any ON CASCADE, SET NULL or SET DEFAULT operations required to handle rows (possibly in other tables) that refer via a foreign key to the row just updated.
Do appropriate checks on the content.
Do appropriate processing given the current state.
Do as much as possible w/o blocking
Do both phases of a commit.
Do bounds checking for size parameter.
Do constraint checks.
Do correction to upper limb, if necessary
Do extra initialization steps requested by the SQLITE_EXTRA_INIT compile-time option.
Do extra syncs of the journal for robustness
Do final permutation (inverse of IP).
Do format conversion placing the output in buffer
Do implicit use_result and then flush the result
Do initial permutation (IP).
Do key permutation and split into two 28-bit subkeys.
Do lazy initialization for buffered results.
Do no conversion on raw integers
Do no further checking in the pre-compile phase.
Do not accept any file descriptor less than this value, in order to avoid opening database file using file descriptors that are commonly used for  standard input, output, and error.
Do not allow EXCLUSIVE locks.
Do not allow IS constraints from the WHERE clause to be used by the right table of a LEFT JOIN.
Do not allow any cells smaller than 4 bytes.
Do not allow any kind of write-lock on a read-only database
Do not allow backup if the destination database is in WAL mode and the page sizes are different between source and destination
Do not allow both MEMSYS5 and MEMSYS3 to be defined together.
Do not allow incremental  loading or merging of phrase doclists for this iteration.
Do not allow memory allocation
Do not allow non-admin users to modify the schema arbitrarily
Do not allow the total number of threads (main thread + all workers) to exceed the maximum merge count
Do not allow the upper bound of a LIKE optimization range constraint to mix with a lower range bound from some other source
Do not allow to view passwords files
Do not analyze the TEMP database
Do not attempt this optimization if:  (1) The inner query is an aggregate.
Do not attempt to change the page size for a WAL database
Do not attempt to process this query if there are an WITH clauses attached to it.
Do not attempt to use an IN constraint if the virtual table says that the equivalent EQ constraint cannot be safely omitted.
Do not attempt to write if database file has never been opened.
Do not both fixing the pDirtyPrev pointers.
Do not bother fixing the pDirtyPrev pointers.
Do not bother with a bulk allocation if the cache size very small
Do not break Hangul syllable sequences, the rules for which are: L may be followed by L, V, LV or LVT LV or V may be followed by V or T LVT or T may be followed by T 4.
Do not break after Prepend characters.
Do not break before SpacingMarks.
Do not break before extending characters.
Do not call it before copying, otherwise a reference may be leaked.
Do not call this method from outside.
Do not care about memory freeing here, shutdown is unclean and near anyway.
Do not cast a pointer to a FILETIME structure to either a ULARGE_INTEGER* or __int64* value because it can cause alignment faults on 64-bit Windows.
Do not change the order of these.
Do not check the signature on the response
Do not code a test for this constraint
Do not copy the destructor
Do not create a trigger on a system table
Do not create or use a rollback journal
Do not defer seeks on main table
Do not delete from this cursor
Do not delete the master journal file.
Do not delete the table until the reference count reaches zero.
Do not deviate from the formatting style currently in use.
Do not discard pages from an in-memory database since we might need to rollback later.
Do not display old-style inherited constructors
Do not do auto-vacuum
Do not do the INSERT or UPDATE
Do not do this if initialising a database schema.
Do not edit pragma.h directly.
Do not enforce check constraints
Do not ever re-use any error number, because they are documented.
Do not expose the MapIter_Type to Python.
Do not free the memory...
Do not gather statistics on system tables
Do not gather statistics on views or virtual tables
Do not go past the value end
Do not include certificates in the response
Do not include producedAt time in response
Do not invoke sqlite3PagerUnref() on *ppPage if an error is returned.
Do not invoke the SELECT callback on p, but do (of course) invoke any expr callbacks and SELECT callbacks that come from subqueries.
Do not invoke the select callback on p, but do invoke it on each FROM clause subquery and on any subqueries further down in the tree.
Do not issue error messages if true
Do not load data from disk
Do not lock (except in WAL mode)
Do not lock when getting the callback value, here and below.
Do not lower the thread's stack to PTHREAD_STACK_MIN, otherwise one would receive a 'sendsig: useracc failed.' and a coredump.
Do not make additional signing certificate checks
Do not mix calls to sqlite3_column_text() or sqlite3_column_blob() with calls to sqlite3_column_bytes16(), and do not mix calls to sqlite3_column_text16() with calls to sqlite3_column_bytes().
Do not modify it by hand.
Do not move this de-initialization.
Do not move this include.
Do not move this initialization.
Do not need to test for a HAVING clause.
Do not omit these constraints
Do not open write-ahead-log files
Do not optimize this for speed.
Do not output error when restoring ini options.
Do not populate the overflow cache.
Do not print out fnops, unless everything is an fnop, in which case we will print out just the last one.
Do not proceed to the next term in the segment.
Do not put garbage in the access log, just send it back to the client
Do not raise errors because that might break legacy and because it does not hurt anything to just ignore the database name.
Do not read the page from disk.
Do not reclaim the symbols of the rule which action triggered this YYABORT or YYACCEPT.
Do not reclaim the symbols of the rule which action triggered this YYERROR.
Do not reclaim the symbols of the rule whose action triggered this YYABORT or YYACCEPT.
Do not reclaim the symbols of the rule whose action triggered this YYERROR.
Do not remove the casts below.
Do not repeat them so as not to clutter the error log
Do not require OOMs if true
Do not resolve volumes (for now).
Do not reuse buffer if it did not exist
Do not save the results anywhere
Do not save this cursor
Do not search certificates contained in the response for a signer
Do not search for an unused file descriptor on vxworks.
Do not send anything back to client, until we buffer in all HTTP headers.
Do not set firstchar after *ACCEPT
Do not set interpreter.
Do not show current dir and passwords file
Do not spill the cache when non-zero
Do not sync the journal if true
Do not try to close prototype streams
Do not try to use skip-scan if true
Do not use a rollback journal
Do not use an automatic index if the this loop is expected to run less than 2 times.
Do not use an index-only search
Do not use it for new code.
Do not use prefix index
Do not use the 4 neighbors implementation with small images
Do not use the cached lob size if the descriptor is an out-bind as the contents would have been changed for in/out binds (Bug #46994).
Do not verify additional certificates
Do not verify the certificate chain on the response
Do not verify the response at all
Do not walk the function arguments in this case.
Do not write any such pages to the file.
Do not write content to disk
Do not write it to the database.
Do nothing else with this cursor.
Do nothing if table already exists
Do nothing if the other case range is within the original range.
Do nothing if the pager does not have an open write transaction or at least a RESERVED lock.
Do nothing with input, just skip it
Do nothing, callback has served the request
Do nothing, just backward compatibility
Do nothing, no mask specified
Do nothing, the connection will be brutally closed and the server will catch it and free close from its side.
Do recursive multiplies and shifted adds.
Do salting for crypt() and friends, and XOR with the permuted key.
Do sbox lookups (which shrink it back to 32 bits) and do the pbox permutation at the same time.
Do second-to-last transform:
Do so multiple times, until it either succeeds or fails for some reason other than EINTR.
Do some black magic with the NT security API.
Do some checking to help insure the file we opened really is a valid database file.
Do some initial calculations
Do some paranoid checks for potential integer overflow.
Do some paranoid checks to avoid integer overflow.
Do some work towards applying the RBU update to the target db.
Do special thing for VOID sub-types
Do the actual manipulation of the life board in C.
Do the actual replacement and put the result back into subject_str for further replacements.
Do the actual sort magic - bada-bim, bada-boom.
Do the assignment with raw array iteration
Do the b-tree integrity checks
Do the binary search of the RHS using the LHS as a probe.
Do the binary search.
Do the binding once she does it.
Do the commit only if all databases successfully complete phase 1.
Do the following 16 operations.
Do the following math as float intermediately, and round to ensure that Polygon and FilledPolygon for the same set of points have the same footprint.
Do the masked assignment with raw array iteration
Do the rest of the initialization under the recursive mutex so that we will be able to handle recursive calls into sqlite3_initialize().
Do the same as above, but in the opposite order.
Do the same as read() does, however not blocking forever.
Do the tar test first, because if the first file in the tar archive starts with a dot, we can confuse it with an nroff file.
Do the transfer a block at a time
Do the translation from PHP's internal PHP_EXPUNGE define to c-client's CL_EXPUNGE
Do the transpose (always returns a view)
Do the work for either sqlite3changeset_start() or start_strm().
Do this before any decoding.
Do this by writing a single byte to the end of each (OS) page being allocated or extended.
Do this directly, instead of via sqlite3ApiExit(), to avoid setting the database handle error message.
Do this in a subroutine as that provides a convenient place to set a breakpoint.
Do this now to avoid an oversize memory allocation.
Do this under the cover of the db handle mutex.
Do this upfront so that connection close on an error would know that this is a session pool connection.
Do this zero or more times.
Do two passes over the flex items to figure out how to distribute the remaining space.
Do type promotion with 'out_dtype'
Do up to nPg pages of automerge work on the index.  Return true if any changes were actually made, or false otherwise.
Do various sanity checks on a single page of a tree.
Do we have placeholders but no bound params
Do whatever is the right thing so that pSet keeps the N_OR_COST best entries seen so far.
Do whatever the default action is
Doc comment has been appended as last element in ZEND_AST_PROP_ELEM ast
Docid for current row.
Docid for entry to add
Docid of most recently inserted document
Docid of row being written
Docid of the row pCsr points to
Docid to add or remove data from
Docid to bind for SQL_SELECT_DOCSIZE
Docid to read size data for
Doclist (or NULL) to write
Doclist is assembled here
Doclist to iterate through
Doclist-index flag (1 bit)
Doclists hold docids and associated token positions.
Docs in descending rowid order
Docs say FSEventStreamCreate copies the fields out of this context, so it doesn't need to be long lived
Document being tokenized
Document error classes.
Document text to extract snippet from
Document-class:  ARGF  +ARGF+ is a stream designed for use in scripts that process files given as command-line arguments or passed in via STDIN.
Document-class: ArgumentError  Raised when the arguments are wrong and there isn't a more specific Exception class.
Document-class: BasicObject  BasicObject is the parent class of all classes in Ruby.
Document-class: BigDecimal BigDecimal provides arbitrary-precision floating point decimal arithmetic.
Document-class: DBMError Exception class used to return errors from the dbm library.
Document-class: Data  This is a recommended base class for C extensions using Data_Make_Struct or Data_Wrap_Struct, see doc/extension.rdoc for details.
Document-class: Digest::Base  This abstract class provides a common interface to message digest implementation classes written in C.
Document-class: Digest::Class  This module stands as a base class for digest implementation classes.
Document-class: ENV  ENV is a hash-like accessor for environment variables.
Document-class: EOFError  Raised by some IO operations when reaching the end of file.
Document-class: Encoding::CompatibilityError  Raised by Encoding and String methods when the source encoding is incompatible with the target encoding.
Document-class: Encoding::ConverterNotFoundError  Raised by transcoding methods when a named encoding does not correspond with a known converter.
Document-class: Encoding::InvalidByteSequenceError  Raised by Encoding and String methods when the string being transcoded contains a byte invalid for the either the source or target encoding.
Document-class: Encoding::UndefinedConversionError  Raised by Encoding and String methods when a transcoding operation fails.
Document-class: EncodingError  EncodingError is the base class for encoding errors.
Document-class: Enumerator  A class which allows both internal and external iteration.
Document-class: Fiber  Fibers are primitives for implementing light weight cooperative concurrency in Ruby.
Document-class: Fiddle::DLError  standard dynamic load exception
Document-class: Fiddle::Pointer  Fiddle::Pointer is a class to handle C pointers
Document-class: Float  Float objects represent inexact real numbers using the native architecture's double-precision floating point representation.
Document-class: FloatDomainError  Raised when attempting to convert special float values (in particular +infinite+ or +NaN+) to numerical classes which don't support them.
Document-class: GC::Profiler  The GC profiler provides access to information on GC runs including time, length and object space size.
Document-class: IOError  Raised when an IO operation fails.
Document-class: IndexError  Raised when the given index is invalid.
Document-class: Integer  Holds Integer values.
Document-class: Interrupt  Raised with the interrupt signal is received, typically because the user pressed on Control-C (on most posix platforms).
Document-class: JSON::Ext::Parser  This is the JSON parser implemented as a C extension.
Document-class: KeyError  Raised when the specified key is not found.
Document-class: LoadError  Raised when a file required (a Ruby script, extension library, ...) fails to load.
Document-class: LocalJumpError  Raised when Ruby can't yield as requested.
Document-class: Math  The Math module contains module functions for basic trigonometric and transcendental functions.
Document-class: Math::DomainError  Raised when a mathematical function is evaluated outside of its domain of definition.
Document-class: Mutex  Mutex implements a simple semaphore that can be used to coordinate access to shared data from multiple concurrent threads.
Document-class: NameError  Raised when a given name is invalid or undefined.
Document-class: NameError::message :nodoc:
Document-class: NoMemoryError  Raised when memory allocation fails.
Document-class: NoMethodError  Raised when a method is called on a receiver which doesn't have it defined and also fails to respond with +method_missing+.
Document-class: NotImplementedError  Raised when a feature is not implemented on the current platform.
Document-class: Numeric  Numeric is the class from which all higher-level numeric classes should inherit.
Document-class: Object  Object is the default root of all Ruby objects.
Document-class: ObjectSpace::WeakMap  An ObjectSpace::WeakMap object holds references to any objects, but those objects can get garbage collected.
Document-class: OpenSSL::ASN1::ASN1Data  The top-level class representing any ASN.1 object.
Document-class: OpenSSL::ASN1::ASN1Error  Generic error class for all errors raised in ASN1 and any of the classes defined in it.
Document-class: OpenSSL::ASN1::Constructive  The parent class for all constructed encodings.
Document-class: OpenSSL::ASN1::ObjectId  Represents the primitive object id for OpenSSL::ASN1
Document-class: OpenSSL::ASN1::Primitive  The parent class for all primitive encodings.
Document-class: OpenSSL::BNError  Generic Error for all of OpenSSL::BN (big num)
Document-class: OpenSSL::Cipher  Provides symmetric algorithms for encryption and decryption.
Document-class: OpenSSL::ConfigError  General error for openssl library configuration files.
Document-class: OpenSSL::Digest::DigestError  Generic Exception class that is raised if an error occurs during a Digest operation.
Document-class: OpenSSL::Engine  This class is the access to openssl's ENGINE cryptographic module implementation.
Document-class: OpenSSL::Engine::EngineError  This is the generic exception for OpenSSL::Engine related errors
Document-class: OpenSSL::HMAC  OpenSSL::HMAC allows computing Hash-based Message Authentication Code (HMAC).
Document-class: OpenSSL::Netscape::SPKI  A Simple Public Key Infrastructure implementation (pronounced "spookey").
Document-class: OpenSSL::Netscape::SPKIError  Generic Exception class that is raised if an error occurs during an operation on an instance of OpenSSL::Netscape::SPKI.
Document-class: OpenSSL::PKCS5  Provides password-based encryption functionality based on PKCS#5.
Document-class: OpenSSL::PKCS5::PKCS5Error  Generic Exception class that is raised if an error occurs during a computation.
Document-class: OpenSSL::PKey::DH  An implementation of the Diffie-Hellman key exchange protocol based on discrete logarithms in finite fields, the same basis that DSA is built on.
Document-class: OpenSSL::PKey::DSA  DSA, the Digital Signature Algorithm, is specified in NIST's FIPS 186-3.
Document-class: OpenSSL::PKey::EC  OpenSSL::PKey::EC provides access to Elliptic Curve Digital Signature Algorithm (ECDSA) and Elliptic Curve Diffie-Hellman (ECDH).
Document-class: OpenSSL::PKey::PKeyError  Raised when errors occur during PKey#sign or PKey#verify.
Document-class: OpenSSL::PKey::RSA  RSA is an asymmetric public key algorithm that has been formalized in RFC 3447.
Document-class: OpenSSL::SSL::SSLContext  An SSLContext is used to set various options regarding certificates, algorithms, verification, session caching, etc.
Document-class: OpenSSL::SSL::SSLError  Generic error class raised by SSLSocket and SSLContext.
Document-class: OpenSSL::SSL::SSLSocket
Document-class: OpenSSL::X509::Certificate  Implementation of an X.509 certificate as specified in RFC 5280.
Document-class: OpenSSL::X509::Name  An X.509 name represents a hostname, email address or other entity associated with a public key.
Document-class: OpenSSL::X509::Store  The X509 certificate store holds trusted CA certificates used to verify peer certificates.
Document-class: OpenSSL::X509::StoreContext  A StoreContext is used while validating a single certificate and holds the status involved.
Document-class: PTY  Creates and managed pseudo terminals (PTYs).
Document-class: PTY::ChildExited  Thrown when PTY::check is called for a pid that represents a process that has exited.
Document-class: Queue  The Queue class implements multi-producer, multi-consumer queues.
Document-class: Random  Random provides an interface to Ruby's pseudo-random number generator, or PRNG.
Document-class: RangeError  Raised when a given numerical value is out of range.
Document-class: Readline  The Readline module provides interface for GNU Readline.
Document-class: RegexpError  Raised when given an invalid regexp expression.
Document-class: RubyVM::InstructionSequence  The InstructionSequence class represents a compiled sequence of instructions for the Ruby Virtual Machine.
Document-class: RuntimeError  A generic error class raised when an invalid operation is attempted.
Document-class: SDBM  SDBM provides a simple file-based key-value store, which can only store String keys and values.
Document-class: SDBMError Exception class used to return errors from the sdbm library.
Document-class: ScriptError  ScriptError is the superclass for errors raised when a script can not be executed because of a +LoadError+, +NotImplementedError+ or a +SyntaxError+.
Document-class: SignalException  Raised when a signal is received.
Document-class: SizedQueue  This class represents queues of specified size capacity.
Document-class: Socket::AncillaryData  Socket::AncillaryData represents the ancillary data (control information) used by sendmsg and recvmsg system call.
Document-class: Socket::Ifaddr  Socket::Ifaddr represents a result of getifaddrs() function.
Document-class: Socket::Option  Socket::Option represents a socket option used by BasicSocket#getsockopt and BasicSocket#setsockopt.
Document-class: StandardError  The most standard error types are subclasses of StandardError.
Document-class: StopIteration  Raised to stop the iteration, in particular by Enumerator#next.
Document-class: StringScanner  StringScanner provides for lexical scanning operations on a String.
Document-class: SyntaxError  Raised when encountering Ruby code with an invalid syntax.
Document-class: SystemCallError  SystemCallError is the base class for all low-level platform-dependent errors.
Document-class: SystemExit  Raised by +exit+ to initiate the termination of the script.
Document-class: SystemStackError  Raised in case of a stack overflow.
Document-class: Thread  Threads are the Ruby implementation for a concurrent programming model.
Document-class: ThreadError  Raised when an invalid operation is attempted on a thread.
Document-class: ThreadGroup  ThreadGroup provides a means of keeping track of a number of threads as a group.
Document-class: ThreadShield
Document-class: TracePoint  A class that provides the functionality of Kernel#set_trace_func in a nice Object-Oriented API.
Document-class: TypeError  Raised when encountering an object that is not of the expected type.
Document-class: UnboundMethod  Ruby supports two forms of objectified methods.
Document-class: UncaughtThrowError  Raised when +throw+ is called with a _tag_ which does not have corresponding +catch+ block.
Document-class: WIN32OLERuntimeError  Raised when OLE processing failed.
Document-class: ZeroDivisionError  Raised when attempting to divide an integer by 0.
Document-class: Zlib::BufError  Subclass of Zlib::Error when zlib returns a Z_BUF_ERROR.
Document-class: Zlib::DataError  Subclass of Zlib::Error when zlib returns a Z_DATA_ERROR.
Document-class: Zlib::Deflate  Zlib::Deflate is the class for compressing data.
Document-class: Zlib::Error  The superclass for all exceptions raised by Ruby/zlib.
Document-class: Zlib::GzipFile  Zlib::GzipFile is an abstract class for handling a gzip formatted compressed file.
Document-class: Zlib::GzipFile::CRCError  Raised when the CRC checksum recorded in gzip file footer is not equivalent to the CRC checksum of the actual uncompressed data.
Document-class: Zlib::GzipFile::Error  Base class of errors that occur when processing GZIP files.
Document-class: Zlib::GzipFile::LengthError  Raised when the data length recorded in the gzip file footer is not equivalent to the length of the actual uncompressed data.
Document-class: Zlib::GzipFile::NoFooter  Raised when gzip file footer is not found.
Document-class: Zlib::GzipReader  Zlib::GzipReader is the class for reading a gzipped file.
Document-class: Zlib::GzipWriter  Zlib::GzipWriter is a class for writing gzipped files.
Document-class: Zlib::Inflate  Zlib:Inflate is the class for decompressing compressed data.
Document-class: Zlib::MemError  Subclass of Zlib::Error  When zlib returns a Z_MEM_ERROR, usually if there was not enough memory.
Document-class: Zlib::NeedDict  Subclass of Zlib::Error  When zlib returns a Z_NEED_DICT if a preset dictionary is needed at this point.
Document-class: Zlib::StreamEnd  Subclass of Zlib::Error  When zlib returns a Z_STREAM_END is return if the end of the compressed data has been reached and all uncompressed out put has been produced.
Document-class: Zlib::StreamError  Subclass of Zlib::Error  When zlib returns a Z_STREAM_ERROR, usually if the stream state was inconsistent.
Document-class: Zlib::VersionError  Subclass of Zlib::Error  When zlib returns a Z_VERSION_ERROR, usually if the zlib library version is incompatible with the version assumed by the caller.
Document-class: Zlib::ZStream  Zlib::ZStream is the abstract class for the stream which handles the compressed data.
Document-class: fatal  fatal is an Exception that is raised when ruby has encountered a fatal error and must exit.
Document-const: AFTER_OUTPUT  Stop converting after some output is complete but before all of the input was consumed.
Document-const: ALIGN_CHAR  The alignment size of a char
Document-const: ALIGN_DOUBLE  The alignment size of a double
Document-const: ALIGN_FLOAT  The alignment size of a float
Document-const: ALIGN_INT  The alignment size of an int
Document-const: ALIGN_INTPTR_T  The alignment size of a intptr_t
Document-const: ALIGN_LONG  The alignment size of a long
Document-const: ALIGN_LONG_LONG  The alignment size of a long long
Document-const: ALIGN_PTRDIFF_T  The alignment size of a ptrdiff_t
Document-const: ALIGN_SHORT  The alignment size of a short
Document-const: ALIGN_SIZE_T  The alignment size of a size_t
Document-const: ALIGN_SSIZE_T  The alignment size of a ssize_t
Document-const: ALIGN_UINTPTR_T  The alignment size of a uintptr_t
Document-const: ALIGN_VOIDP  The alignment size of a void*
Document-const: BUILD_RUBY_PLATFORM  Platform built against (i.e. "x86_64-linux", etc.)  See also RUBY_PLATFORM
Document-const: CRLF_NEWLINE_DECORATOR  Decorator for converting LF to CRLF
Document-const: CR_NEWLINE_DECORATOR  Decorator for converting LF to CR
Document-const: DEFAULT  A predefined pseudo-handle of RTLD_DEFAULT  Which will find the first occurrence of the desired symbol using the default library search order
Document-const: DEFAULT  Default ABI
Document-const: DEFAULT_CONFIG_FILE  The default system configuration file for openssl
Document-const: FD_CLOEXEC  the value of the close-on-exec flag.
Document-const: F_DUPFD  Duplicate a file descriptor to the mimimum unused file descriptor greater than or equal to the argument.
Document-const: F_GETFD  Read the close-on-exec flag of a file descriptor.
Document-const: F_GETFL  Get the file descriptor flags.
Document-const: F_GETLK  Determine whether a given region of a file is locked.
Document-const: F_RDLCK  Read lock for a region of a file
Document-const: F_SETFD  Set the close-on-exec flag of a file descriptor.
Document-const: F_SETFL  Set the file descriptor flags.
Document-const: F_SETLK  Acquire a lock on a region of a file.
Document-const: F_SETLKW  Acquire a lock on a region of a file, waiting if necessary.
Document-const: F_UNLCK  Remove lock for a region of a file
Document-const: F_WRLCK  Write lock for a region of a file
Document-const: File::Constants::FNM_CASEFOLD  Makes File.fnmatch patterns case insensitive (but not Dir.glob patterns).
Document-const: File::Constants::FNM_DOTMATCH  The '*' wildcard matches filenames starting with "." in File.fnmatch and Dir.glob patterns
Document-const: File::Constants::FNM_NOESCAPE  Disables escapes in File.fnmatch and Dir.glob patterns
Document-const: File::Constants::FNM_PATHNAME  Wildcards in File.fnmatch and Dir.glob patterns do not match directory separators
Document-const: File::Constants::FNM_SHORTNAME  Makes patterns to match short names if existing.
Document-const: File::Constants::FNM_SYSCASE  System default case insensitiveness, equals to FNM_CASEFOLD or 0.
Document-const: INVALID_MASK  Mask for invalid byte sequences
Document-const: INVALID_REPLACE  Replace invalid byte sequences
Document-const: NEXT  A predefined pseudo-handle of RTLD_NEXT  Which will find the next occurrence of a function in the search order after the current library.
Document-const: NULL  A NULL pointer
Document-const: O_ACCMODE  Mask to extract the read/write flags
Document-const: O_APPEND  Open the file in append mode
Document-const: O_CREAT  Create the file if it doesn't exist
Document-const: O_EXCL  Used with O_CREAT, fail if the file exists
Document-const: O_NDELAY  Open the file in non-blocking mode
Document-const: O_NOCTTY  Open TTY without it becoming the controlling TTY
Document-const: O_NONBLOCK  Open the file in non-blocking mode
Document-const: O_RDONLY  Open the file in read-only mode
Document-const: O_RDWR  Open the file in read-write mode
Document-const: O_TRUNC  Truncate the file on open
Document-const: O_WRONLY  Open the file in write-only mode.
Document-const: PARTIAL_INPUT  Indicates the source may be part of a larger string.
Document-const: RTLD_GLOBAL  rtld Fiddle::Handle flag.
Document-const: RTLD_LAZY  rtld Fiddle::Handle flag.
Document-const: RTLD_NOW  rtld Fiddle::Handle flag.
Document-const: RUBY_FREE  Address of the ruby_xfree() function
Document-const: SIZEOF_CHAR  size of a char
Document-const: SIZEOF_DOUBLE  size of a double
Document-const: SIZEOF_FLOAT  size of a float
Document-const: SIZEOF_INT  size of an int
Document-const: SIZEOF_INTPTR_T  size of a intptr_t
Document-const: SIZEOF_LONG  size of a long
Document-const: SIZEOF_LONG_LONG  size of a long long
Document-const: SIZEOF_PTRDIFF_T  size of a ptrdiff_t
Document-const: SIZEOF_SHORT  size of a short
Document-const: SIZEOF_SIZE_T  size of a size_t
Document-const: SIZEOF_SSIZE_T  size of a ssize_t
Document-const: SIZEOF_UINTPTR_T  size of a uintptr_t
Document-const: SIZEOF_VOIDP  size of a void*
Document-const: STDCALL  FFI implementation of WIN32 stdcall convention
Document-const: TYPE_CHAR  C type - char
Document-const: TYPE_DOUBLE  C type - double
Document-const: TYPE_FLOAT  C type - float
Document-const: TYPE_INT  C type - int
Document-const: TYPE_INTPTR_T  C type - intptr_t
Document-const: TYPE_LONG  C type - long
Document-const: TYPE_LONG_LONG  C type - long long
Document-const: TYPE_PTRDIFF_T  C type - ptrdiff_t
Document-const: TYPE_SHORT  C type - short
Document-const: TYPE_SIZE_T  C type - size_t
Document-const: TYPE_SSIZE_T  C type - ssize_t
Document-const: TYPE_UINTPTR_T  C type - uintptr_t
Document-const: TYPE_VOID  C type - void
Document-const: TYPE_VOIDP  C type - void*
Document-const: UNDEF_HEX_CHARREF  Replace byte sequences that are undefined in the destination encoding with an XML hexadecimal character reference.
Document-const: UNDEF_MASK  Mask for a valid character in the source encoding but no related character(s) in destination encoding.
Document-const: UNDEF_REPLACE  Replace byte sequences that are undefined in the destination encoding.
Document-const: UNIVERSAL_NEWLINE_DECORATOR  Decorator for converting CRLF and CR to LF
Document-const: WINDOWS  Returns a boolean regarding whether the host is WIN32
Document-const: XML_ATTR_CONTENT_DECORATOR  Escape as XML AttValue
Document-const: XML_ATTR_QUOTE_DECORATOR  Escape as XML AttValue
Document-const: XML_TEXT_DECORATOR  Escape as XML CharData
Document-method: BigDecimal#add Document-method: BigDecimal#+  call-seq: add(value, digits)  Add the specified value.
Document-method: BigDecimal#mult  call-seq: mult(value, digits)  Multiply by the specified value.
Document-method: ConditionVariable#broadcast  Wakes up all threads waiting for this lock.
Document-method: ConditionVariable#signal  Wakes up the first thread in line waiting for this lock.
Document-method: ConditionVariable::new  Creates a new condition variable instance.
Document-method: OpenSSL::ASN1::ObjectId#long_name  +long_name+ is an alias to +ln+
Document-method: OpenSSL::ASN1::ObjectId#oid  The object identifier as a +String+, e.g. "1.2.3.4.5"
Document-method: OpenSSL::ASN1::ObjectId#short_name  +short_name+ is an alias to +sn+
Document-method: OpenSSL::Engine#cmds  Returns an array of command definitions for the current engine
Document-method: OpenSSL::Engine#finish  Releases all internal structural references for this engine.
Document-method: OpenSSL::Engine#inspect  Pretty print this engine
Document-method: OpenSSL::Engine#set_default  call-seq: engine.set_default(flag)  Set the defaults for this engine with the given +flag+.
Document-method: OpenSSL::Engine.cleanup call-seq: OpenSSL::Engine.cleanup  It is only necessary to run cleanup when engines are loaded via OpenSSL::Engine.load.
Document-method: OpenSSL::Engine.engines  Returns an array of currently loaded engines.
Document-method: Queue#clear  Removes all objects from the queue.
Document-method: Queue#close call-seq: close  Closes the queue.
Document-method: Queue#length call-seq: length size  Returns the length of the queue.
Document-method: Queue#num_waiting  Returns the number of threads waiting on the queue.
Document-method: Queue::new  Creates a new queue instance.
Document-method: SizedQueue#close call-seq: close  Similar to Queue#close.
Document-method: SizedQueue#max  Returns the maximum size of the queue.
Document-method: SizedQueue#num_waiting  Returns the number of threads waiting on the queue.
Document-method: SizedQueue::new call-seq: new(max)  Creates a fixed-length queue with a maximum size of +max+.
Document-method: Zlib.adler32  call-seq: Zlib.adler32(string, adler)  Calculates Adler-32 checksum for +string+, and returns updated value of +adler+.
Document-method: Zlib.adler32_combine  call-seq: Zlib.adler32_combine(adler1, adler2, len2)  Combine two Adler-32 check values in to one.
Document-method: Zlib.crc32  call-seq: Zlib.crc32(string, crc)  Calculates CRC checksum for +string+, and returns updated value of +crc+.
Document-method: Zlib.crc32_combine  call-seq: Zlib.crc32_combine(crc1, crc2, len2)  Combine two CRC-32 check values in to one.
Document-method: Zlib.crc_table  Returns the table for calculating CRC checksum as an array.
Document-method: Zlib.zlib_version  Returns the string which represents the version of zlib library.
Document-method: Zlib::Deflate#initialize_copy  Duplicates the deflate stream.
Document-method: Zlib::Deflate.set_dictionary  call-seq: set_dictionary(string)  Sets the preset dictionary and returns +string+.
Document-method: Zlib::GzipFile#close  Closes the GzipFile object.
Document-method: Zlib::GzipFile#comment  Returns comments recorded in the gzip file header, or nil if the comments is not present.
Document-method: Zlib::GzipFile#crc  Returns CRC value of the uncompressed data.
Document-method: Zlib::GzipFile#finish  Closes the GzipFile object.
Document-method: Zlib::GzipFile#level  Returns compression level.
Document-method: Zlib::GzipFile#lineno  The line number of the last row read from this file.
Document-method: Zlib::GzipFile#mtime  Returns last modification time recorded in the gzip file header.
Document-method: Zlib::GzipFile#orig_name  Returns original filename recorded in the gzip file header, or +nil+ if original filename is not present.
Document-method: Zlib::GzipFile#os_code  Returns OS code number recorded in the gzip file header.
Document-method: Zlib::GzipFile#path  call-seq: path  Returns the path string of the associated IO-like object.
Document-method: Zlib::GzipFile#sync  Same as IO#sync
Document-method: Zlib::GzipFile#to_io  Same as IO.
Document-method: Zlib::GzipFile#total_in  Total number of input bytes read so far.
Document-method: Zlib::GzipFile#total_out  Total number of output bytes output so far.
Document-method: Zlib::GzipFile.open  See Zlib::GzipReader#open and Zlib::GzipWriter#open.
Document-method: Zlib::GzipFile::Error#inspect  Constructs a String of the GzipFile Error
Document-method: Zlib::GzipReader#each  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#each_byte  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#each_char  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#external_encoding  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#getbyte  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#getc  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#gets  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#read  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#readbyte  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#readchar  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#readline  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#readlines  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#rewind  Resets the position of the file pointer to the point created the GzipReader object.
Document-method: Zlib::GzipReader#ungetbyte  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#ungetc  See Zlib::GzipReader documentation for a description.
Document-method: Zlib::GzipReader#unused  Returns the rest of the data which had read for parsing gzip format, or +nil+ if the whole gzip file is not parsed yet.
Document-method: Zlib::Inflate#add_dictionary  call-seq: add_dictionary(string)  Provide the inflate stream with a dictionary that may be required in the future.
Document-method: Zlib::Inflate#set_dictionary  Sets the preset dictionary and returns +string+.
Document-method: Zlib::inflate  call-seq: Zlib.inflate(string) Zlib::Inflate.inflate(string)  Decompresses +string+.
Document-method: call  Calls the constructed Function, with +args+.
Document-method: included  call-seq: included(othermod)  Callback invoked whenever the receiver is included in another module or class.
Document-method: inherited  call-seq: inherited(subclass)  Callback invoked whenever a subclass of the current class is created.
Document-method: initialize  call-seq: BasicObject.new  Returns a new BasicObject.
Document-method: method_added  call-seq: method_added(method_name)  Invoked as a callback whenever an instance method is added to the receiver.
Document-method: method_removed  call-seq: method_removed(method_name)  Invoked as a callback whenever an instance method is removed from the receiver.
Document-method: print Same as IO.
Document-method: printf Same as IO.
Document-method: puts Same as IO.
Document-method: setsockopt call-seq: setsockopt(level, optname, optval) setsockopt(socketoption)  Sets a socket option.
Document-method: singleton_method_added  call-seq: singleton_method_added(symbol)  Invoked as a callback whenever a singleton method is added to the receiver.
Document-method: singleton_method_removed  call-seq: singleton_method_removed(symbol)  Invoked as a callback whenever a singleton method is removed from the receiver.
Document-method: singleton_method_undefined  call-seq: singleton_method_undefined(symbol)  Invoked as a callback whenever a singleton method is undefined in the receiver.
Document-method: sym  call-seq: sym(name)  Get the address as an Integer for the function named +name+.
Document-method: to_i  Returns the memory address for this closure
Document-module: Digest  This module provides a framework for message digest libraries.
Document-module: Digest::Instance  This module provides instance methods for a digest implementation object to calculate message digest values.
Document-module: Fiddle  A libffi wrapper for Ruby.
Document-module: File::Constants  File::Constants provides file-related constants.
Document-module: JSON::Ext::Generator  This is the JSON generator implemented as a C extension.
Document-module: Kernel  The Kernel module is included by class Object, so its methods are available in every Ruby object.
Document-module: ObjectSpace  The ObjectSpace module contains a number of routines that interact with the garbage collection facility and allow you to traverse all living objects with an iterator.
Document-module: ObjectSpace  The objspace library extends the ObjectSpace module and adds several methods to get internal statistic information about object/memory management.
Document-module: OpenSSL::ASN1  Abstract Syntax Notation One (or ASN.1) is a notation syntax to describe data structures and is defined in ITU-T X.680.
Document-module: OpenSSL::ExtConfig  This module contains configuration information about the SSL extension, for example if socket support is enabled, or the host name TLS extension is enabled.
Document-module: OpenSSL::Netscape  OpenSSL::Netscape is a namespace for SPKI (Simple Public Key Infrastructure) which implements Signed Public Key and Challenge.
Document-module: OpenSSL::SSL  Use SSLContext to set up the parameters for a TLS (former SSL) connection.
Document-module: WIN32OLE::VARIANT  The WIN32OLE::VARIANT module includes constants of VARIANT type constants.
Documentation about VDBE opcodes is generated by scanning this file for lines of that contain "Opcode:".
Documentation is grow_inner, but initial implementation was growinner, so allowing for either.
Does *not* free the simplestring struct itself.
Does a linear search for the best inner loop of the ufunc.
Does a linear search for the inner loop of the ufunc specified by type_tup.
Does a search through the arguments and the loops
Does a simple aligned cast
Does a strided to strided zero-padded or truncated copy for the case where unicode swapping is needed.
Does a zero-padded copy
Does not affect registers.
Does not change the other bits.
Does not check STR_END.
Does not check begin.
Does not check for a previously opened phar in the cache.
Does not contain symlinks or useless dots, +..+ and +.+.
Does not exist, add a new entry
Does not implement telldir(), seekdir(), or scandir().
Does not modify registers.
Does not normalize the name.
Does not return until +thr+ exits or until the given +limit+ seconds have passed.
Does not set an exception.
Does not validate that bigbase represents larger units than littlebase, or that the units are not generic.
Does nothing for other platforms
Does nothing if a non-positive number is given or the array is empty.
Does nothing if one already exists.
Does nothing with descr (cannot be NULL)
Does the table have a rowid
Doesn't happen usually
Doesn't look like text at all
Doesn't require sorting
Doing all I/O in aligned page-sized blocks helps I/O to go faster on many operating systems.
Doing both moves pPage to the front of the dirty list.
Doing nothing at all also makes NORMAL the default.
Doing so may cause the parent page to become overfull or underfull.
Doing so will not cause any errors, but is inefficient.
Doing this after the optimistic computation allows saving registers and better pipelining
Doing this sooner rather than later means the database size can safely  re-read the database size from page 1 if a savepoint or transaction rollback occurs within the transaction.
Domains and codomains are given only for real (not complex) numbers.
Don't accept h and hh modifiers.
Don't allocate standard file descriptors: 0, 1, 2
Don't allow access, but don't generate an error
Don't allow changing it in htaccess
Don't allow conversion from an integer without specifying a unit
Don't allow infinite chains of views, always set the base to the first owner of the data.
Don't attempt in pre-compile phase
Don't attempt to call function
Don't bind LONG / BINARY columns, so that fetch behaviour can be controlled by odbc_binmode() / odbc_longreadlen()
Don't block if we can't complete...
Don't bother checking again
Don't bother checking curlong and totlong as raising error anyway.
Don't bother checking for NOT NULL on columns that do not change
Don't bother on windows with php_stream_open_wrapper, return to give apprentice_load() a chance.
Don't bother sizing the text if both dimensions are already defined.
Don't bother sizing the text if there's no horizontal or vertical space.
Don't buld SSA for very big functions
Don't call rb_filesystem_encoding() before US-ASCII and ASCII-8BIT
Don't check for input errors
Don't check the return value so that this works both from a job control shell and from a shell script.
Don't copy PyObject_HEAD part
Don't count the variadic argument
Don't destroy entry, because the row destroy will decrease the refcounter.
Don't do any authorization checks if the database is initialising or if the parser is being invoked from within sqlite3_declare_vtab.
Don't do this if the table being ALTERed is itself located in the temp database.
Don't duplicate result, saves one emalloc.
Don't even check the return value as it's too late.
Don't execute REFCURSORS or Implicit Result Set handles
Don't expect correct storage order or anything reasonable when returning cache array.
Don't free bbuf.is_null for FETCH_RESULT since we have allocated is_null and buf in one block so we free only buf, which is the beginning of the block.
Don't free now, let the result be usable.
Don't free ustr cause it's set in zstr without copy.
Don't give them the default one though since they already said they didn't want it.
Don't glob if inside a single quoted string
Don't include Rzero in the match set, to avoid triggering needlessly on 'prefetch' instrs.
Don't keep default properties in GC (they may be freed by opcache)
Don't know, so say yes
Don't leave anything around in vm they could use.
Don't loop indefinitely in non-blocking mode if no data is available
Don't move this to previous of parse_subexp()
Don't multiply num1 since there is no even factor
Don't multiply num2 since there is no even factor
Don't need to DECREF -- because we are deleting self already...
Don't provide views if buffering is enabled
Don't put MAGIC constant - it likely points to a file within MSys tree
Don't reference abort() here
Don't resolve paths which contain protocol (except of file://)
Don't reuse this MT for Random::DEFAULT.
Don't send COM_QUIT if we are in a middle of a LOAD DATA or we will crash (assert) a debug server.
Don't set a timeout on startup, only per-request
Don't set the forced order flag here...
Don't split up dates by default
Don't try this at home.
Don't try to be clever and save effort on exclusive ones - in some locales things may be different.
Don't try to convert +/- infinity
Don't try to destroy implicitly opened transaction from list...
Don't update is_ref, or we will leak during conversion
Don't use :-)) (It's up to you)
Don't use CWD_STATE_FREE because the non global states will probably use emalloc()/efree()
Don't use ChangeTimerQueueTimer() as it will not restart an expired timer, so we could end up with just an ignored timeout.
Don't use IN(...) in case SQLITE_OMIT_SUBQUERY is defined.
Don't use indices for OR terms
Don't use stkp after PUSH.
Don't use the afp_end_lock: exit path, as unixEnterMutex() hasn't been called yet.
Don't use the end_lock: exit path, as sqlite3OsEnterMutex() hasn't been called yet.
Don't use the end_lock: exit path, as unixEnterMutex() hasn't been called yet.
Don't use this, it is wrong for little endian encodings.
Don't waste our time if it's empty
Done with everything.
Done, break out of for loop
DosQueryAppType will return FAPPTYP_DOS on a file ending with ".com" (other than an OS/2 exe or Win exe with this name).
Dot product between two vectors -- Level 1 BLAS
Dot terminates it because of POSIX form  where dot precedes the codepage except for variant
Dotfile locking uses the file path so it needs to be included in the dotlockLockingContext
Dotfile locking works by creating a subdirectory in the same directory as the database and with the same name but with a ".lock" extension added.
Double binding of the same zval, make a copy
Double bounds to get the internal overlap problem
Double precision constants.
Double quoted '"' string ends
Double quoted '"' string start
Double shifts needs to be performed.
Double the spawn rate for the next iteration
Double to fixed point
Double-check that the subtype didn't mess with the dimensions
Doug Claar: watch out for NaN in atan2 (2.0.5)
Draw the styled, brushed line
Driver template for the LEMON parser generator.
Driver will replace this with other type if not possible.
Drop STR_PTR for greedy plus quantifier.
Drop STR_PTR for non-greedy plus quantifier.
Drop a page from the cache.
Drop a trigger given a pointer to that trigger.
Drop all SQLITE_MASTER table and index entries that refer to the table.
Drop all shadow tables.
Drop all triggers associated with the table being dropped.
Drop and reload the internal table schema.
Drop any table triggers from the internal schema.
Drop duplicates, except CC
Drop every cache entry whose page number is greater than "pgno".
Drop frames until we reach STACK_TOP.
Drop pages with this pgno or larger
Drop the AT_FIRST_YIELD flag
Drop the WAL write-lock, if any.
Drop the cell from the parent page.
Drop the database write lock and reacquire the read lock.
Drop the final space when logging to syslog.
Drop the shadow tables
Drop the stack frame.
Drop the table and index from the internal schema.
Drop the temporary PENDING lock
Drop this bracket_backtrack.
Dropping the reduction axes from the result must be done later by the caller once the computation is complete.
Dst should be reg + value, using at most 1 instruction, flags does not set.
Due to the prefix compression,  the space required changes depending on which node the key is to be added to.
Dummy PS module function
Dummy argument for AllocUnpackedRecord()
Dummy argument used with tokenizer
Dummy argument used with xNext()
Dummy function to follow the old API
Dummy implementations for Windows, because Windows doesn't support Unix-style signal handling.
Dummy parameter to exprCodeVector()
Dummy: Used for flushing writes to a phar directory (i.e. not used)
Dummy: Used for writing to a phar directory (i.e. not used)
Dump a YAML document.
Dump any newly flushed data to the read buffer
Dump contents of Node
DupConfigPtr is a public C-level function for getting OpenSSL CONF struct from an OpenSSL::Config(eConfig) instance.
Duplicate an 8-byte value
Duplicate named group recursion test
Duplicate named group used test
Duplicate named pattern back reference
Duplicate names exist
Duplicate of trigger WHEN expression
Duplicate removal in the UNION, EXCEPT, and INTERSECT cases is handled within the output subroutine.
Duplicate subject string for repeated replacement
Duplicate the command as processing downwards will modify it
Duplicate the token as impersonated token
Duplicates are scattered
Duplication means that a little unnecessary work is done when checking, but this keeps things much simpler because they can all use the same code.
During a write-transaction the fts5_index.c module may cache some data  in-memory.
During a write-transaction, if pages with page-numbers greater than dbSize are modified in the cache, dbSize is updated accordingly.
During compilation, the "first char" settings from forward assertions are discarded, because they can cause conflicts with actual literals that follow.
During expression analysis, extra information is computed and moved into later parts of teh Expr object and that extra information might get chopped off if the expression is reduced.
During processing, output buffer is allocated and expanded automatically to hold all output data.
During sqlite3_os_init() we do a GetSystemInfo() to get the granularity size.
During stage 1 non-RBU reader clients may see the original database.
During testing, it is often desirable to move the pending byte to a different position in the file.
During this stage RBU does not update the database by writing directly to the target tables.
During this transformation, the length of string P4 is computed and stored as the P1 parameter.
During translation, assume that the byte that zTerm points is a 0x00.
Dynamic buffer allocated by sqlite3_malloc()
Dynamic call to various special functions must stay dynamic, otherwise would drop a warning
Dynamic check for AVX support __builtin_cpu_supports("avx") is available in gcc 4.8, but clang and icc do not currently support it.
Dynamically allocated strings.
Dynamically loaded SSL functionality
E       (input) DOUBLE PRECISION array, dimension (N-1) The (n-1) sub-diagonal or super-diagonal elements of A.
E       (input) REAL array, dimension (N-1) The (n-1) sub-diagonal or super-diagonal elements of A.
E       (input/output) DOUBLE PRECISION array, dimension (N) On entry, the elements of E contain the offdiagonal elements of the bidiagonal matrix whose SVD is desired.
E       (input/output) DOUBLE PRECISION array, dimension (N-1) On entry, the (n-1) subdiagonal elements of the tridiagonal matrix.
E       (input/output) DOUBLE PRECISION array, dimension (N-1) On entry, the subdiagonal elements of the tridiagonal matrix.
E       (input/output) REAL array, dimension (N) On entry, the elements of E contain the offdiagonal elements of the bidiagonal matrix whose SVD is desired.
E       (input/output) REAL array, dimension (N-1) On entry, the (n-1) subdiagonal elements of the tridiagonal matrix.
E       (input/output) REAL array, dimension (N-1) On entry, the subdiagonal elements of the tridiagonal matrix.
E       (output) DOUBLE PRECISION array, dimension (NB) The off-diagonal elements of the first NB rows and columns of the reduced matrix.
E       (output) REAL array, dimension (NB) The off-diagonal elements of the first NB rows and columns of the reduced matrix.
E      (input) DOUBLE PRECISION array, dimension ( M-1 ) Contains the subdiagonal entries of the bidiagonal matrix.
E      (input) DOUBLE PRECISION array, dimension (M-1) Contains the subdiagonal entries of the bidiagonal matrix.
E      (input) DOUBLE PRECISION array, dimension (N-1) Contains the super-diagonal entries of the bidiagonal matrix.
E      (input) DOUBLE PRECISION array, dimension (N-1) The off-diagonal elements of the tridiagonal matrix.
E      (input) REAL array, dimension ( M-1 ) Contains the subdiagonal entries of the bidiagonal matrix.
E      (input) REAL array, dimension (M-1) Contains the subdiagonal entries of the bidiagonal matrix.
E      (input) REAL array, dimension (N-1) Contains the super-diagonal entries of the bidiagonal matrix.
E      (input) REAL array, dimension (N-1) The off-diagonal elements of the tridiagonal matrix.
E      (input/output) DOUBLE PRECISION array, dimension (N-1) On entry, the off-diagonal elements of the tridiagonal matrix.
E      (input/output) REAL array, dimension (N-1) On entry, the off-diagonal elements of the tridiagonal matrix.
E     (input/output) DOUBLE PRECISION array, dimension (N) On entry, elements E(1:N-1) contain the off-diagonal elements of the bidiagonal matrix whose SVD is desired.
E     (input/output) DOUBLE PRECISION array.
E     (input/output) REAL array, dimension (N) On entry, elements E(1:N-1) contain the off-diagonal elements of the bidiagonal matrix whose SVD is desired.
E     (input/output) REAL array.
E(LL) through E(M-1) are nonzero, E(LL-1) is zero
E(N) is used for workspace.
E.g. given two distinct inputs the probability that both yield the same output is highly unlikely.
E000-F8FF Private Use Area.
EACCES is like EAGAIN during locking operations, but not any other time
EAM   - It's worse than that.
EAM DEBUG - Newer versions of libfree2 make it easier by defining encodings
EBCDIC is assumed - ZCODE is the EBCDIC code of either lower or upper case 'Z'.
ECB mode is the only mode that does not require an IV, but there is almost no legitimate use case for this mode because of the fact that it does not sufficiently hide plaintext patterns.
EDEADLK is only possible if a call to fcntl(F_SETLKW) is made.
EG(current_execute_data) points into nirvana and therefore cannot be safely accessed inside zend_executor callback functions.
EINVAL emulates clock_getres behavior when clock_id is invalid.
EINVAL emulates clock_gettime behavior when clock_id is invalid.
EMAX    (output) INTEGER The largest exponent before overflow RMAX    (output) DOUBLE PRECISION The largest machine floating-point number.
EMAX    (output) INTEGER The largest exponent before overflow RMAX    (output) REAL The largest machine floating-point number.
EMAX    (output) INTEGER The maximum exponent before overflow occurs.
EMIN    (input) INTEGER The minimum exponent before (gradual) underflow.
EMIN    (output) INTEGER The minimum exponent before (gradual) underflow occurs.
EMIN is stored in Z(4*N0) to avoid an extra argument.
ENABLE_NUMERIC_STRING
ENABLE_VIRTUAL_TERMINAL_PROCESSING
ENCODING: The first element is the size stored in bytes, the rest is the data.
ENCODING: The highest 2 bits are unused.
END OF CUSTOM TOKENIZERS
END OF DEBUG FEATURES
END OF REGISTRATION API
END OF THE SMALL OBJECTS PAGE
END difference between normal normal fetch and _c
END of Array Iterator
ENDIAN REVERSAL MACROS
ENOTDIR can be returned by stat(2) if a non-leaf element of the path is not a directory.
ENTRY POINT for conversions
ENV is a Hash-like accessor for environment variables.
EOCD64 locator is before EOCD, so leave place for it
EOF packet is since 4.1 five bytes long, but we can get also an error, make it bigger.
EOF when i equals or exceeds this value
EOF, or temporary end of data (for non-blocking mode).
EOS after separators only
EPS     (output) DOUBLE PRECISION The smallest positive number such that fl( 1.0 - EPS ) .LT.
EPS     (output) REAL The smallest positive number such that fl( 1.0 - EPS ) .LT.
EPSV failed, let's try PASV
EP_Static if space not obtained from malloc
EQ seeks only - no range seeks
EQP id of left-hand query
EQP id of right-hand query
ERROR : this is not a valid value
ERROR:  insert command gives an output larger than predicted
ERROR: copy command not terminated by ','
ERROR: copy exceeds output file size
ERROR: copy extends past end of input
ERROR: generated size does not match predicted size
ERROR: insert count exceeds size of delta
ERROR: unknown delta operator
ERROR: unterminated delta
ESC ( H was used in initial JUNET messages
ESTALE is not defined on Interix systems
EUC-JP (JIS X 0208 based)
EUC-JP is recognized as X0201 kana.
EUI-64 format: Four hexadecimal digits separated by dots.
EV: R-30323-21917 Each foreign key constraint in SQLite is classified as either immediate or deferred.
EVIDENCE-OF: R-01283-11636 The unlikely(X) function is short-hand for likelihood(X,0.0625).
EVIDENCE-OF: R-01506-11053 The first integer on a freelist trunk page is the page number of the next freelist trunk page in the list or zero if this is the last freelist trunk page.
EVIDENCE-OF: R-01849-26079 Value is a big-endian 32-bit twos-complement integer.
EVIDENCE-OF: R-02748-19096 This option sets the threading mode to Single-thread.
EVIDENCE-OF: R-02776-14802 The cell pointer array consists of K 2-byte integer offsets to the cell contents.
EVIDENCE-OF: R-02982-34736 In order to maintain full backwards compatibility for legacy applications, the URI filename capability is disabled by default.
EVIDENCE-OF: R-03996-12088 The M parameter must be a valid checkpoint mode:
EVIDENCE-OF: R-05119-02637 The 4-byte big-endian integer at offset 36 stores stores the total number of pages on the freelist.
EVIDENCE-OF: R-06529-47362 Following the size varint are one or more additional varints, one per column.
EVIDENCE-OF: R-06866-39125 Freeblocks are always connected in order of increasing offset.
EVIDENCE-OF: R-07161-27322 The one-byte integer at offset 7 gives the number of fragmented free bytes within the cell content area.
EVIDENCE-OF: R-07291-35328 A value of 5 (0x05) means the page is an interior table b-tree page.
EVIDENCE-OF: R-08308-17224 The default collating function for all strings is BINARY.
EVIDENCE-OF: R-10421-19736 If any other process is running a checkpoint operation at the same time, the lock cannot be obtained and SQLITE_BUSY is returned.
EVIDENCE-OF: R-11498-58022 In a well-formed b-tree page, the total number of bytes in fragments may not exceed 60.
EVIDENCE-OF: R-12793-43283 Every value in SQLite has one of five fundamental datatypes: 64-bit signed integer 64-bit IEEE floating point number string BLOB NULL
EVIDENCE-OF: R-12970-05880 SQLite will not use more than one scratch buffers per thread.
EVIDENCE-OF: R-13523-04394 The second integer on a freelist trunk page is the number of leaf page pointers to follow.
EVIDENCE-OF: R-14374-42468 This option sets the threading mode to Multi-thread.
EVIDENCE-OF: R-15465-20813 The maximum and minimum embedded payload fractions and the leaf payload fraction values must be 64, 32, and 32.
EVIDENCE-OF: R-18761-36601 There are three arguments to SQLITE_CONFIG_PAGECACHE: A pointer to 8-byte aligned memory (pMem), the size of each page cache line (sz), and the number of cache lines (N).
EVIDENCE-OF: R-19854-42126 There are three arguments to SQLITE_CONFIG_HEAP: An 8-byte aligned pointer to the memory, the number of bytes in the memory buffer, and the minimum allocation size.
EVIDENCE-OF: R-22035-46182 The SQLITE_CONFIG_GETPCACHE2 option takes a single argument which is a pointer to an sqlite3_pcache_methods2 object.
EVIDENCE-OF: R-22564-11647 The header begins with a single varint which determines the total number of bytes in the header.
EVIDENCE-OF: R-22710-53328 The third and fourth bytes of each freeblock form a big-endian integer which is the size of the freeblock in bytes, including the 4-byte header.
EVIDENCE-OF: R-23882-45353 The cell pointer array of a b-tree page immediately follows the b-tree page header.
EVIDENCE-OF: R-25451-61125 The SQLITE_CONFIG_URI option takes a single argument of type int.
EVIDENCE-OF: R-26747-61719 When the application provides any amount of scratch memory using SQLITE_CONFIG_SCRATCH, SQLite avoids unnecessary large heap allocations.
EVIDENCE-OF: R-26900-09176 A value of 13 (0x0d) means the page is a leaf table b-tree page.
EVIDENCE-OF: R-28312-64704 However, the usable size is not allowed to be less than 480.
EVIDENCE-OF: R-28375-38319 SQLite will never request a scratch buffer that is more than 6 times the database page size.
EVIDENCE-OF: R-28401-00140 Value is a string in the text encoding and (N-13)/2 bytes in length.
EVIDENCE-OF: R-28594-02890 The one-byte flag at offset 0 indicating the b-tree page type.
EVIDENCE-OF: R-29851-52272 Value is a big-endian 64-bit twos-complement integer.
EVIDENCE-OF: R-30189-54097 For each limit category SQLITE_LIMIT_NAME there is a hard upper bound set at compile-time by a C preprocessor macro called SQLITE_MAX_NAME.
EVIDENCE-OF: R-31624-24737 RTRIM is like BINARY except that extra spaces at the end of either string do not change the result.
EVIDENCE-OF: R-34926-03360 SQLITE_CONFIG_WIN32_HEAPSIZE takes a 32-bit unsigned integer value that specifies the maximum size of the created heap.
EVIDENCE-OF: R-36850-34127 The likely(X) function is short-hand for likelihood(X,0.9375).
EVIDENCE-OF: R-37002-32774 The two-byte integer at offset 3 gives the number of cells on the page.
EVIDENCE-OF: R-37497-42412 The size of the reserved region is determined by the one-byte unsigned integer found at an offset of 20 into the database file header.
EVIDENCE-OF: R-37839-54301 Value is a big-endian 24-bit twos-complement integer.
EVIDENCE-OF: R-38229-40159 If the callback function to sqlite3_exec() returns non-zero, then sqlite3_exec() will return SQLITE_ABORT.
EVIDENCE-OF: R-38720-18127 The default setting is determined by the SQLITE_ALLOW_COVERING_INDEX_SCAN compile-time option, or is "on" if that compile-time option is omitted.
EVIDENCE-OF: R-41220-51800 This option sets the threading mode to Serialized.
EVIDENCE-OF: R-41613-20553 The sqlite3_wal_checkpoint(D,X) is equivalent to sqlite3_wal_checkpoint_v2(D,X,SQLITE_CHECKPOINT_PASSIVE,0,0).
EVIDENCE-OF: R-43263-13491 The total number of bytes in all fragments is stored in the fifth field of the b-tree page header.
EVIDENCE-OF: R-43316-37308 A value of 2 (0x02) means the page is an interior index b-tree page.
EVIDENCE-OF: R-43642-56306 By default, URI handling is globally disabled.
EVIDENCE-OF: R-44885-25196 Value is an 8-bit twos-complement integer.
EVIDENCE-OF: R-47608-56469 Any other value for the b-tree page type is an error.
EVIDENCE-OF: R-49794-35026 Value is a big-endian 16-bit twos-complement integer.
EVIDENCE-OF: R-50385-09674 Value is a big-endian 48-bit twos-complement integer.
EVIDENCE-OF: R-51213-46414 The SQLITE_CONFIG_GETMALLOC option takes a single argument which is a pointer to an instance of the sqlite3_mem_methods structure.
EVIDENCE-OF: R-51873-39618 The page size for a database file is determined by the 2-byte integer located at an offset of 16 bytes from the beginning of the database file.
EVIDENCE-OF: R-52786-44878 SQLite defines three built-in collating functions:
EVIDENCE-OF: R-53367-43190 If either argument to this option is negative, then that argument is changed to its compile-time default.
EVIDENCE-OF: R-53436-40973 The likely(X) function is equivalent to likelihood(X,0.9375).
EVIDENCE-OF: R-53820-33897 Even if there is a busy-handler configured, it will not be invoked in this case.
EVIDENCE-OF: R-55269-29598 The localtime_r() C function normally only works for years between 1970 and 2037.
EVIDENCE-OF: R-55530-52930 In a well-formed b-tree page, there will always be at least one cell before the first freeblock.
EVIDENCE-OF: R-55594-21030 The SQLITE_CONFIG_MALLOC option takes a single argument which is a pointer to an instance of the sqlite3_mem_methods structure.
EVIDENCE-OF: R-58015-48175 The two-byte integer at offset 5 designates the start of the cell content area.
EVIDENCE-OF: R-59310-51205 The "reserved space" size in the 1-byte integer at offset 20 is the number of bytes of space at the end of each page to reserve for extensions.
EVIDENCE-OF: R-59615-42828 A value of 10 (0x0a) means the page is a leaf index b-tree page.
EVIDENCE-OF: R-59841-13798 The 4-byte big-endian integer at offset 32 stores the page number of the first page of the freelist, or zero if the freelist is empty.
EVIDENCE-OF: R-60985-57662 SQLite will convert the value back to floating point when extracting it from the record.
EVIDENCE-OF: R-61006-08918 If the memory pointer is not NULL then the alternative memory allocator is engaged to handle all of SQLites memory allocation needs.
EVIDENCE-OF: R-61275-35157 The SQLITE_CONFIG_MEMSTATUS option takes single argument of type int, interpreted as a boolean, which enables or disables the collection of memory allocation statistics.
EVIDENCE-OF: R-61304-29449 The unlikely(X) function is equivalent to likelihood(X, 0.0625).
EVIDENCE-OF: R-62172-00036 In this implementation, the standard C library function localtime_r() is used to assist in the calculation of local time.
EVIDENCE-OF: R-62920-47450 The busy-handler callback is never invoked in the SQLITE_CHECKPOINT_PASSIVE mode.
EVIDENCE-OF: R-63257-11740 Calling sqlite3_close() or sqlite3_close_v2() with a NULL pointer argument is a harmless no-op.
EVIDENCE-OF: R-63325-48378 The SQLITE_CONFIG_PCACHE2 option takes a single argument which is a pointer to an sqlite3_pcache_methods2 object.
EVIDENCE-OF: R-64536-51728 The values for each column in the record immediately follow the header.
EVIDENCE-OF: R-64852-21591 The sqlite3_backup object is created by a call to sqlite3_backup_init() and is destroyed by a call to sqlite3_backup_finish().
EVIDENCE-OF: R-65033-28449 The built-in BINARY collation compares strings byte by byte using the memcmp() function from the standard C library.
EVP_CIPHER_CTX_iv_length() returns the default length.
EVP_CipherInit_ex() allows to specify NULL to key and IV, however some ciphers don't handle well (OpenSSL's bug).
EXBITS is the number of bits needed to store the exponent.
EXCLUSIVE: An EXCLUSIVE lock precludes all other locks.
EXPERIMENTAL  The sqlite3_snapshot_cmp(P1, P2) interface is used to compare the ages of two valid snapshot handles.
EXPSUM is the exponent range, approximately equal to EMAX - EMIN + 1 .
EXT2_SUPER_MAGIC EXT3_SUPER_MAGIC EXT4_SUPER_MAGIC
EXTENSION API FUNCTIONS  xUserData(pFts): Return a copy of the context pointer the extension function was  registered with.
EXTRA     This is like FULL except that is also syncs the directory that contains the rollback journal after the rollback journal is unlinked.
EXTRA_SIZE is the number of bytes of space needed to hold that extra information.
E_ERROR raised for security reason.
Each  page has a small header which contains the Ptr(N) pointer and other information such as the size of key and data.
Each BTree is identified by the index of its root page.
Each Mem struct may cache multiple representations (string, integer etc.) of the same value.
Each RUN is allocated as a single or few following pages.
Each SQL function is defined by an instance of the following structure.
Each SQL index is represented in memory by an instance of the following structure.
Each SQL table is represented in memory by an instance of the following structure.
Each SQLite module (virtual table definition) is defined by an instance of the following structure, stored in the sqlite3.aModule hash table.
Each String represents a protocol to be advertised as the list of supported protocols for Application-Layer Protocol Negotiation.
Each String represents a protocol to be advertised as the list of supported protocols for Next Protocol Negotiation.
Each VTable  structure is associated with a single sqlite3* user of the schema.
Each WHERE clause subexpression is separated from the others by AND operators, usually, or sometimes subexpressions separated by OR.
Each ajd begin at noon of GMT (assume equal to UTC).
Each auxiliary data pointer stored by a user defined function  implementation calling sqlite3_set_auxdata() is stored in an instance of this structure.
Each auxiliary function registered with the FTS5 module is represented by an object of the following type.
Each auxilliary data pointer stored by a user defined function  implementation calling sqlite3_set_auxdata() is stored in an instance of this structure.
Each available memory allocation in the lookaside subsystem is stored on a linked list of LookasideSlot objects.
Each btree pages is divided into three sections:  The header, the cell pointer array, and the cell content area.
Each bucket points to a spot in the global doubly-linked list.
Each byte is interpreted as an 8-bit unsigned integer.
Each cache entry is represented by an instance of the following  structure.
Each call returns the next one, updating the start address.
Each call to sqlite3_rtree_geometry_callback() or sqlite3_rtree_query_callback() creates an ordinary SQLite scalar function that is implemented by this routine.
Each call to sqlite3rbu_step() performs a single b-tree operation, so thousands of calls may be required to apply  a complete update.
Each call to this function appends a single varint to a list.
Each call to this function must be matched by a call to sqlite3rbu_close().
Each call to this routine overrides any prior callbacks registered on the same "db".
Each character can be more than one byte and itemsize must be the number of bytes.
Each class is formed from a base map, with an optional addition or removal of another map.
Each column used only once
Each constant designates a different metric for sqlite3_stmt_scanstatus() to return.
Each core filter has its own radius
Each cursor has a (possibly empty) linked list of the following objects.
Each cursor is associated with a particular database connection identified BtCursor.pBtree.db.
Each cursor uses a memory cell.
Each database connection is an instance of the following structure.
Each database file to be accessed by the system is an instance of the following structure.
Each directive may be followed by a number, indicating the number of times to repeat with this directive.
Each disjoint curve may be either a closed circuit, or it may begin and end on a mesh boundary.
Each element in the hash table is an instance of the following  structure.
Each element in this array is created by passing the element's index to the given block and storing the return value.
Each element of the list is represented by an FTS3 varint that takes the value of the difference between the current element and the previous one plus two.
Each entry consists of a single 8-byte integer followed by an even number of 4-byte coordinates.
Each entry consists of two varints, the absolute level number of the input segments  and the number of input segments.
Each entry in a RowSet is an instance of the following object.
Each entry in the following array defines a rule for folding a range of codepoints to lower case.
Each entry in the hash table is represented by an object of the  following type.
Each entry in the journal is an instance of the 8th item.
Each entry in this list occupies LINK_SIZE bytes, so even when LINK_SIZE is 4 there is plenty of room for most patterns.
Each entry is returned as a Group struct
Each entry is returned as a Passwd struct.
Each entry is three values long, one value for each color component.
Each entry of the hash table is an 1-based index of an entry in the mapping section of the same index block.
Each error code path in this function must send an error
Each expression may optionally have a name.
Each extension function is allocated a single auxiliary data slot for each FTS query (MATCH expression).
Each field begins with a single byte describing its type, as follows:  0x00: Undefined value.
Each file being edited has this value appended to its filename.
Each file opened by an rbu VFS is represented by an instance of the following structure.
Each foreign key constraint is an instance of the following structure.
Each frame records the revised content of a single page from the database file.
Each freeblock is at least 4 bytes in size.
Each function argument translates into an equality constraint against a HIDDEN column in the table.
Each group of changes begins with a table header:  1 byte: Constant 0x50 (capital 'P') Varint: Number of columns in the table.
Each group of changes begins with a table header:  1 byte: Constant 0x54 (capital 'T') Varint: Number of columns in the table.
Each increase in level represents exponentially more documents.
Each index block except for the first contains information on  HASHTABLE_NPAGE frames.
Each index block holds over 4000 entries.
Each instance of this macro generates two objects:  A constant sqlite3_io_methods object call METHOD that has locking methods CLOSE, LOCK, UNLOCK, CKRESLOCK.
Each instance of this object holds a sequence of WhereLoop objects that implement some or all of a query plan.
Each instance of this object represents an algorithm for evaluating one term of a join.
Each instance of this structure contains a copy of the canonical filename.
Each instruction is an instance of the following structure.
Each invocation determines which tokens to defer within the cluster with root node pRoot.
Each item is a tuple with  (field-name, data-type (either a list or a string), and an optional shape parameter).
Each iteration of the following for() loop searches one hash table (each hash table indexes up to HASHTABLE_NPAGE frames).
Each iteration of the for loop below generates code for a single nested loop of the VM program.
Each iteration of the loop works with the active submatrix in rows and columns L to I.
Each iteration of this loop gobbles up a contiguous run of separators, then the next token.
Each key/value binding is unique.
Each linked list is only prepended to by one thread and only cleared by the other thread.
Each list is terminated by a POS_END (0) or POS_COLUMN (1).
Each map is 32 bytes long and the bits run from the least significant end of each byte.
Each module implementation will define the content of a cursor structure to suit its own needs.
Each month is divided into three decades (instead of weeks) of 10 days each.
Each node of an expression in the parse tree is an instance of this structure.
Each non-terminal can have a different minor type.
Each object in the array is szEntry bytes in size.
Each occurrence of the * pattern causes a recursion level.
Each of these  statements is run and reset within a single virtual table API call.
Each of these tests, if it succeeds, will leave the text converted into one-unichar-per-character Unicode in ubuf, and the number of characters converted in ulen.
Each one can be either an array or a sort flag which follows an array.
Each open file is managed by a separate instance of the "Pager" structure.
Each open memory-journal is an instance of this class.
Each page cache (or PCache) belongs to a PGroup.
Each page cache is an instance of the following object.
Each page can be either a btree page, a freelist page, an overflow page, or a pointer-map page.
Each page except the last is completely filled with data (pagesize - 4 bytes).
Each page of the wal-index mapping contains a hash-table made up of an array of HASHTABLE_NSLOT elements of the following type.
Each pager opened via the sqlite handle is passed a pointer to sqlite.busyHandler.
Each partial encoding must be of the same UNIVERSAL type as the overall encoding.
Each point on such a contour curve lies on an edge of the mesh, at a point linearly interpolated to the contour level z0 between the given values of z at the endpoints of the edge.
Each pointer stored in the sqlite3.aCollSeq hash table contains an array of three CollSeq structures.
Each range has a combining class which means each entry is a 3-tuple.
Each real token shifted decrements this.
Each record consists of a varint followed by a blob of data (the  key).
Each record is of an arbitrary size.
Each recursive mutex is an instance of the following structure.
Each row extracted from Queue is output to pDest.
Each row relates to one of PCRE's special properties such as ALNUM or SPACE or WORD.
Each rule can delay the start of the year by one day, and since rule #1 can combine with one of the other rules, it can be delayed as much as two days.
Each sample stored in the sqlite_stat3 table is represented in memory  using a structure of this type.
Each sample stored in the sqlite_stat3 table is represented in memory using a structure of this type.
Each segment has a unique non-zero 16-bit id.
Each selected eigenvector occupies one column.
Each selected real eigenvector occupies one column and each selected complex eigenvector occupies two columns.
Each semaphore actually consists of three semaphores allocated as a unit under the same key.
Each serialized value consists of a 'serial-type' and a blob of data.
Each session object maintains a set of the following structures, one for each table the session object is monitoring.
Each set of values is identified by a unique P4 value.
Each shared-memory region is szRegion  bytes in size.
Each shared-memory region is szRegion bytes in size.
Each stack pointer address is followed by the size of the data in use in that stack, in bytes.
Each string is the name of the corresponding column in table xxx.
Each subbitmap handles up to iDivisor separate values of i.
Each subbitmap is normalized to hold deal with values between 1 and iDivisor.
Each subclass will be tailored to the specific needs of the module implementation.
Each subquery gets a new NameContext.
Each subsequent argument is the name of a column of the fts3 table that the query expression may refer to.
Each subsequent call advances the iterator to point to the next change in the changeset (if any).
Each subsequent iteration determines a reflection G to restore the Hessenberg form in the (K-1)th column, and thus chases the bulge one step toward the bottom of the active submatrix.
Each such value is a label.
Each supported digest algorithm has an OBJECT IDENTIFIER associated to it and those again have short/long names assigned to them.
Each symbol here is a terminal symbol in the grammar.
Each table contains data for 128-255 symbols from ASCII table.
Each thread may only have a single outstanding allocation from xScratchMalloc().
Each time a statement is executed  that causes a foreign key violation, the counter is incremented.
Each time a statement is executed that removes an existing violation from the database, the counter is decremented.
Each time a transaction is committed, The changeCountDone flag is inspected.
Each time it is called, this function generates VDBE code to locate the row in the parent table that corresponds to the row being inserted into  or deleted from the child table.
Each time round the loop, save the current subject position for use when the group matches.
Each token coming out of the lexer is an instance of this structure.
Each tokenizer module registered with the FTS5 module is represented by an object of the following type.
Each trigger present in the database schema is stored as an instance of struct Trigger.
Each trunk page points to multiple leaf pages.
Each type field is a varint representing the serial type of the  corresponding data element (see sqlite3VdbeSerialType()).
Each u32 entry represents the span of a cell or freeblock on a btree page.
Each unixShmNode object is connected to a single unixInodeInfo object.
Each unsigned integer in the following array corresponds to a contiguous range of unicode codepoints that are not either letters or numbers (i.e. codepoints for which this function should return 0).
Each uploaded file has its own array.
Each varint is the byte offset of the current term within the page, delta-compressed against the previous value.
Each will handle 12 bits of the S-box input.
Each zone either exists (1) or not (0).
Earlier versions of SQLite allowed the user to change this value at compile time.
Earlier versions of SQLite used only methods (1) and (2).
Early return if SIGMX is zero (matrix is already diagonal).
Early return if there is not enough space.
Easiest thing to do in this scenario is to truncate the journal  file to the required size.
Easter as the number of days after 21st March
Eat a comment until a line break.
Eat any UTF-8 BOM we find in the first 3 bytes
Eat leading and trailing double quotes
Eat leading and trailing single quotes
Eat leading whitespace
Eat the following indentation spaces and line breaks.
Eat the indentation spaces and line breaks.
Eat the indentation spaces.
Eat the indicator character.
Eat the rest of the line including any comments.
Eat trailing semicolons
Eat trailing whitespace
Eat trailing whitespace + extra char
Eat whitespaces and comments to the end of the line.
Eat whitespaces and comments until the next token is found.
Eat whitespaces and comments until we reach the next token.
Eats up list1 in runs of increasing order, list2 in a corresponding linked list.
Eberhard Mattes remarks Tue, 6 Apr 93: Moreover, it reports the type of the (new and very bug ridden) Win Emacs as "OS/2 executable".
Eccentricity of Earth's orbit
Ed Anderson, Cray Research Inc.
Edge forward in the string...
Edges are only added, never removed.
Edit and rerun the script in at  ../tool/mkpragmatab.tcl.
Effective size of the main journal
Effectively adds the methods and constants in each module to the receiver.
Eigenvalues I+1 to IHI have already converged.
Einsum broadcasts, so we need to check dimensions before the call.
Either "ORDER" or "GROUP", as appropriate
Either "tbl" or "idx"
Either CHANGESET_DATA or CONFLICT
Either DELETE or UPDATE.
Either NULL or the char after a newline
Either PyArray_NDIM(ap1) is 1 dim or PyArray_NDIM(ap2) is 1 dim and the other is 2 dim
Either SQLITE_ATTACH or SQLITE_DETACH
Either X and Y both have COLLATE operator or neither do
Either Y will be held constant and Z will be incremented or else Y will be incremented and Z will be reset to zero.
Either a write-lock on root-page iTab, a  write-lock on the schema table, or (if the client is reading) a read-lock on iTab will suffice.
Either an error, or no such table.
Either chngPk or chngRowid
Either define on the command line, for example:  cc -DSHA2_UNROLL_TRANSFORM -o sha2 sha2.c sha2prog.c  or define below:  #define SHA2_UNROLL_TRANSFORM
Either or both argument may be NULL.
Either or both may be NULL.
Either the call to sqlite3PcacheFetch() returned an error or the pager was already in the error-state when this function was called.
Either the dimensions match, or the sequence has length 1 and can be broadcast to the destination.
Either the parent node or NULL
Either the state is greater than PAGER_WRITER_CACHEMOD (a transaction  or savepoint rollback done at the request of the caller) or this is a hot-journal rollback.
Either they are equivalent, or the values must be a scalar
Either this connection or some other connection in the same process holds a lock on the file.
Either this is a brand new phar (add the stub), or the default stub is required (overwrite the stub)
Either this is the cheapest token in the entire query, or it is part of a multi-token phrase.
Either way, assume that the journal is hot.
Either way, clear the PGHDR_NEED_SYNC flag on  all pages.
Either way, record the fact that the ORDER BY and GROUP BY clauses are the same by setting the orderByGrp variable.
Either way, the entire doclist will (eventually) be loaded into memory.
Either way, the ephemeral database will be automatically deleted  when sqlite3BtreeClose() is called.
Either way, the page being freed will become the new first trunk page in the free-list.
Either way, we have an error.
Either we already exported a stream or the socket came from an import, just return the existing stream
Element has children, thus a vector, or "compound type" in soap-speak.
Element size should never be greater than 8 or less than 0 for integer type, but just in case...
Element-wise Array Iterator
Elements 1:ILO-1 and IHI:N-1 of TAU are set to zero.
Elements above are public.
Elements are compared by user supplied function.
Elements are inserted into the array at +start+ if +length+ is zero.
Elements below the k-th subdiagonal in the first NB columns are reduced to zero.
Elements of *pabPK are set to 0x01 if the corresponding column is part of the tables primary key, or 0x00 if it is not.
Elements of the linked list at Vdbe.pAuxData
Eliminate a compliler warning.
Eliminate unreachable basic blocks
Else insert an UPTO if the max is greater than the min, again preceded by the character, for the previously inserted code.
Else returns 0 on success.
Else there's some kind of shambles
Else this is a rollback operation, playback the specified savepoint.
Else use the unmodified path
Else we have a capturing group.
Else will try to reuse lookahead token after shifting the error token.
Else, if we got bytes back, check for possible errors.
Else, we verify that the given object is an instance of the class.
Elsewhere in the FTS code the variable that the third argument to xNext points to is initialized to zero before the first (*but not necessarily subsequent*) call to xNext().
Emit E_DEPRECATED for PHP 4 constructors
Emit a warning if complex imaginary is being cast away
Emit a warning so that the end-user will know that they should try something else
Emit the necessary instructions.
Emitter should be opened.
Emitter should not be opened yet.
Empirical testing showed that the *37 multiplier  (an arbitrary prime)in the hash function provided  no fewer collisions than the no-op *1.
Empirically the best subbox size seems to be about 1/512th of the histogram (1/8th in each direction).
Empty (but do not delete) a hash table.
Empty classes are allowed in JavaScript compatibility mode.
Empty function bodies for those machines, which are not (yet) supported.
Empty handshake_func must not happen.
Empty name is a shorthand for MARK
Empty output segment.
Empty packet after MYSQLND_MAX_PACKET_SIZE packet.
Empty packet will be sent and this loop will end.
Empty statements are not allowed prior to a declare
Empty string has length of 0, encoded in 1 byte.
Empty string is invalid
Empty string, return as empty stream
Empty the output buffer --- called whenever buffer fills up.
Empty/null string is meaningless
Emulate flock() with lockf() or fcntl().
Emulation of SGEMV with SGEMM:  SGEMV allows vectors to be strided.
Emulation of the Unix signal SIGSEGV.
Emulator for BSD openlog() routine Accepts: identity options facility
Emulator for BSD syslog() routine Accepts: priority message parameters
Enable 64-bit file offsets
Enable PCRE JIT compiler
Enable SQLITE_ENABLE_EXPLAIN_COMMENTS if SQLITE_DEBUG is turned on.
Enable automatic indexes
Enable by by changing the "0" to "1" and recompiling.
Enable by compiling with the -DSQLITE_LOCK_TRACE command-line option on the compiler.
Enable checks for parsed files
Enable debugging if requested.
Enable fts3_tokenizer(2)
Enable imposter mode only when the schema has already been parsed.
Enable load_extension
Enable load_extension() SQL func
Enable mutex on connections
Enable mutexing of core data structures
Enable or disable extension loading.
Enable or disable the extended result codes.
Enable or disable the malloc status collection
Enable or disable the session object passed as the first argument.
Enable or disable the shared pager and schema features.
Enable recursive triggers
Enable server-side SNI
Enable server-side handshake renegotiation rate-limiting
Enable the entity loader by default.
Enable the lookaside-malloc subsystem
Enable to check that the allocation could destroy temporaries.
Enable to print out how the built-in functions are hashed
Enable trans sid by modifying flags
Enable/disable VT100 control codes support for the specified Windows standard handle
EnableExternalLoop also resets the iterator
EnableExternalLoop invalidates cached values
Enables CRL checking for all certificates in the certificate chain
Enables CRL checking for the certificate chain leaf.
Enables both SESSION_CACHE_NO_INTERNAL_LOOKUP and SESSION_CACHE_NO_INTERNAL_STORE.
Enables certificate policy constraints checking.
Enables checking of the signature of the root self-signed CA.
Enables proxy certificate verification.
Enables some additional features including support for indirect signed CRLs.
Enabling mutexes incurs a measurable performance penalty.
Enabling stress mode will degrade performance, it is only for debugging.
Enabling the read cache exposes a cache coherency problem that is present on all OS X supported network file systems.
Enabling verbose error messages.
Encapsulate these conditions into a single #define.
Enclose the string in "..." and escape any double-quotes or backslash characters contained within the string.
Encode 'path' which is assumed UTF-8 string, into UNICODE string.
Encode N integers as varints into a blob.
Encode Unicode string as UTF-8, returning pointer to character after end of string, or NULL if an invalid character is found.
Encode or decode file as MIME base64 (RFC 1341) by John Walker http://www.fourmilab.ch/ This program is in the public domain.
Encode the 64 cipher bits as 11 ascii characters.
Encode the length byte
Encode value iVal as an SQLite varint and append it to the buffer object pBuf.
Encoding -- determine the character encoding of a text file.
Encoding T1 of 'B' instruction
Encoding T1 of 'BL' instruction
Encoding T2 of 'B' instruction
Encoding T3 of 'B' instruction
Encoding T4 of 'B' instruction
Encoding conversion is disabled.
Encoding declarations must already be handled during parsing
Encoding did not change
Encoding for the data
Encoding is already set or detected.
Encoding is handled from the encoding property set on the document
Encoding.default_external returns the current value of the external encoding.
Encoding.default_internal returns the current internal encoding.
Encoding::Converter#convert doesn't supply methods to recover or restart from these exceptions.
Encoding::Converter.new optionally takes an option.
Encoding::default_internal is initialized by the source file's internal_encoding or -E option.
Encrypt one block, BF_N is hardcoded here.
Encrypt the key with itself.
End JavaScript handling
End Of Image (end of datastream)
End Section filters declarations
End a write transaction.
End attempt to optimize using an index
End borrowed from numarray
End destructor definitions
End for loop over the format string
End if not an rowid index
End if( affinity_ok )
End loop over indexes
End makeheaders token definitions
End mark for a varint
End marker itself won't be compared.
End non-truncate path
End of 1-char optimization
End of Mapping Protocol
End of MatchinfoBuffer code.
End of POSIX syntax handling
End of Sequence Protocol
End of T computation program.
End of Unique File ID Utility Used By VxWorks ****************
End of Windows and UNIX specific includes
End of a chunked request
End of a group, repeated or non-repeating.
End of back ref handling
End of backslash handling
End of bitmap class handling
End of cell-pointer array
End of class handling
End of code for ufunc objects
End of code taken from fossil.
End of dropping frames.
End of file: array_from_pyobj.c
End of first segment of main-journal records
End of fts3_snippet.c
End of fts3_tokenize_vtab.c
End of fts3_tokenizer.c
End of fts3_tokenizer.h
End of fts3_tokenizer1.c
End of fts3_unicode.c
End of fts3_unicode2.c
End of headers, final newline
End of highlight() implementation.
End of interface to code in fts5.c.
End of interface to code in fts5_aux.c.
End of interface to code in fts5_buffer.c.
End of interface to code in fts5_config.c.
End of interface to code in fts5_expr.c.
End of interface to code in fts5_hash.c.
End of interface to code in fts5_index.c.
End of interface to code in fts5_storage.c.
End of interface to code in fts5_tokenizer.c.
End of interface to code in fts5_unicode2.c.
End of interface to code in fts5_varint.c.
End of interface to code in fts5_vocab.c.
End of interior node buffer
End of lemon-generated parsing tables
End of literal character handling
End of loop to find second and subsequent matches
End of non-SHM dependent initializations
End of operation, now final arrangement
End of option value (if EOF is reached before EOL
End of othercase range
End of pcre_chartables.c
End of pcre_compile.c
End of pcre_fullinfo.c
End of pcre_globals.c
End of pcre_jit_compile.c
End of pcre_maketables.c
End of pcre_newline.c
End of pcre_ord2utf8.c
End of pcre_printint.src
End of pcre_refcount.c
End of pcre_valid_utf8.c
End of pcre_version.c
End of processing '('
End of processing for this SELECT
End of replacement string
End of section or an option offset
End of sqlite3_vfs methods ***************************
End of sqlite3rtree.h
End of sqlite3session.c
End of sqlite3session.h
End of the 'extern "C"' block
End of the AFP lock implementation **********************
End of the NFS lock implementation **********************
End of the PRAGMA switch
End of the WHERE loop
End of the automatically generated pragma table.
End of the dot-file lock implementation *******************
End of the ephemeral table scan.
End of the flock lock implementation *********************
End of the input string
End of the last delimiter match + 1
End of the loop over all rowids/primary-keys.
End of the named semaphore lock implementation ****************
End of the no-op lock implementation *********************
End of the overrideable system calls
End of the pattern, either real or forced.
End of the posix advisory lock implementation *****************
End of the proxy lock implementation **********************
End of the routinely-changing class members
End of the special code for wince
End of the structure debug printing code
End pointer of the first line.
End sqlite3_file Methods *******************************
End switch over the format type
End temporary aliases
End the database scan loop.
End the loop over all WhereLoops from outer-most down to inner-most
End the virtual table scan
Ended on non-(space/NUL)
Ends a ripemd128 message-digest operation, writing the the message digest and zeroizing the context.
Ends a ripemd160 message-digest operation, writing the the message digest and zeroizing the context.
Ends a ripemd256 message-digest operation, writing the the message digest and zeroizing the context.
Ends a ripemd320 message-digest operation, writing the the message digest and zeroizing the context.
Ends an MD4 message-digest operation, writing the the message digest and zeroizing the context.
Ends an MD5 message-digest operation, writing the the message digest and zeroizing the context.
Ends an SHA1 message-digest operation, writing the the message digest and zeroizing the context.
Ends an SHA224 message-digest operation, writing the the message digest and zeroizing the context.
Ends an SHA256 message-digest operation, writing the the message digest and zeroizing the context.
Ends an SHA384 message-digest operation, writing the the message digest and zeroizing the context.
Ends an SHA512 message-digest operation, writing the the message digest and zeroizing the context.
Ends the process of scanning through the /etc/group file begun by ::getgrent, and closes the file.
Ends the process of scanning through the /etc/passwd file begun with ::getpwent, and closes the file.
Enforce equality with 'no' or 'equiv' casting
Enforce foreign key constraints
Enforce the 'date units' vs 'time units' barrier and that casting is only allowed towards more precise units with 'safe' casting.
Enforced by btreeInitPage()
Enhancements: A future improvement would be the option of multiple "cursors" so that multiple locations could occur in the one queue to allow placemarkers and additional flexibility.
Enlarge a memory allocation.
Enlarge the database to nBytes in size (rounded up to the next chunk-size).
Enlarge the memory allocation on a StrAccum object so that it is able to accept at least N more bytes of text.
Ennumeration and lookup
Ensure DROP TABLE is not used on a view, and DROP VIEW is not used on a table.
Ensure adequate test coverage
Ensure both child nodes have node numbers assigned to them by calling nodeWrite().
Ensure buffer is NULL terminated
Ensure input is an array
Ensure memory is not watched anymore for next run.
Ensure names are of appropriate string type
Ensure no two columns have identical names: keep generating new names until we find one that is unique.
Ensure return value is a value
Ensure that H(I,I-1) is real.
Ensure that any exponent, if present, is at least MIN_EXPONENT_DIGITS in length.
Ensure that buffer has a decimal point in it.
Ensure that if we're calling a private function, we're allowed to do so.
Ensure that if we're calling a protected function, we're allowed to do so.
Ensure that page 0 of the wal-index (the page that contains the  wal-index header) is mapped.
Ensure that the PCREPOSIX_EXP_xxx macros are set appropriately for compiling these functions.
Ensure that the SQLite statement handles required to update the  target database object currently indicated by the iterator passed  as the second argument are available.
Ensure that the buffer contains at least 4 characters.
Ensure that the buffer contains at least `length` characters.
Ensure that the buffer contains the required number of characters.
Ensure that the buffer is initialized.
Ensure that the preferred method is actually available.
Ensure that the sub-journal file is open.
Ensure that the subdiagonal elements are real.
Ensure that the tokens queue contains at least one token which can be returned to the Parser.
Ensure that the tokens queue contains enough tokens.
Ensure that there are at least nByte bytes available in the buffer.
Ensure that there is room in the buffer to append nByte bytes of data.
Ensure that this marker is SIZ (as is mandated by the standard)
Ensure that v is greater than zero
Ensure that we had enough bytes in the raw buffer.
Ensure that we haven't overridden a private function and end up calling the overriding public function...
Ensure the database schema has been loaded
Ensure the default expression is something that sqlite3ValueFromExpr() can handle (i.e. not CURRENT_TIME etc.)
Ensure the length doesn't overflow.
Ensure the table name matches database name and that the table exists
Ensure the value is a reference.
Ensure there are no dimension gaps in op_axes, and find op_ndim
Ensure there is enough workspace for forward references before copying them.
Ensure these symbols were not defined by some previous header file.
Ensure_array allows to fetch a safe subspace view for advanced indexing.
Ensures that we're allowed to call a private method.
Ensures that we're allowed to call a protected method.
Enter STATIC_MASTER mutex
Enter a mutex on a Btree given a cursor owned by that Btree.
Enter a mutex on the given BTree object.
Enter and leave a mutex on a Btree given a cursor owned by that Btree.
Enter offset lookup state
Enter section data lookup state
Enter the mutex on every Btree associated with a database connection.
Enter() is required  any time OMIT_SHARED_CACHE is not defined, regardless of whether or not  the build is threadsafe.
Entries are added to  this list using sqlite3Fts3DeferToken().
Entry 0 (the "main" database) and entry 1 (the "temp" database) are never candidates for being collapsed.
Entry points for the DB engine
Entry points for the module.
Enumerate all implemented types of the COCLASS
Enumerator.new can be used to do it.
EofA and EofB loop until all data is exhausted then jump to the "end" labe.
EofA:    Called when data is exhausted from selectA.
EofB:    Called when data is exhausted from selectB.
Ephemeral Table objects are created for all FROM-clause subqueries.
Ephemeral table holding all primary key values
Ephemeral table used for DISTINCT processing
Ephemeral table used to enforce DISTINCT
Eponymous table for this module
Eponymous virtual table instances always exist.
Equality constraint on the langid column
Equivalent generators will return the same sequence of pseudo-random numbers.
Equivalent of array_intersect_assoc() but does not do compare of the data.
Equivalent of array_intersect_uassoc() but does not do compare of the data.
Equivalent to #get_byte.
Equivalent to #terminate.
Equivalent to Plan 9 chartorune().
Equivalent to calling #strftime with the appropriate format string.
Equivalent to digest_obj.clone().reset().
Equivalent to pattern alternation in regexp.
Equivalent to rat.truncate.
Equivalent types can be cast with any value of 'casting'
Erase all information in a table and add the root of the table to the freelist.
Erase all schema information from all attached databases (including "main" and "temp") for a single database connection.
Erase column-cache entry number i
Erase the eponymous virtual table instance associated with virtual table module pMod, if it exists.
Erase the event object.
Erase the given database page and all its children.
Erase the token object.
Erase to right, move cursor to original position
Ergo, although the code below looks incorrect, it's actually right.
Errno value from last system error
Errno::EMSGSIZE - the message was too large to fit into the specified buffer and was truncated.
Errno::ENETRESET - the connection has been broken due to the keep-alive activity detecting a failure while the operation was in progress.
Errno::EOPNOTSUPP - MSG_OOB was specified, but +socket+ is not stream-style such as type SOCK_STREAM.
Errno::EWOULDBLOCK - +socket+ is marked as nonblocking and a  call to _recvfrom_ would block.
Error : error_code + '#' + sqlstate + MYSQLND_ERRMSG_SIZE
Error and awaiting close
Error check 'oa_ndim' and 'op_axes', which must be used together
Error check the two axes
Error code from db file unlock operation
Error code from journal finalization operation
Error code from preupdate_new/old
Error code from system call errors
Error code returned by ICU function
Error code returned by pagerUnlockDb()
Error code returned by the function.
Error detected by xRecordCompare (CORRUPT or NOMEM)
Error encountered while fetching the value
Error has occurred, but we can't use rb_bug() because this thread is not Ruby's thread.
Error if hit end of pattern
Error if integer primary key greater than this
Error in retriving data
Error is less than an ulp
Error is less than half an ulp -- check for special case of mantissa a power of two.
Error message as part of the result set, not good but we should not hang.
Error message codes for OP_Halt
Error message for circular references
Error message for when two or more terms of a compound select have different size result sets.
Error message from sqlite3ParseUri()
Error message from sqlite3_mprintf()
Error message stored here
Error message text, if an error occurs
Error message written here
Error messages will be written here
Error messages written here
Error msg written here
Error occurred, but it still closed
Error on empty input string
Error on negative offset
Error reported through mallocFailed
Error reporting is already done by stream code
Error returns are externally defined PCRE_ERROR_xxx codes, which are all negative.
Error, try to be as helpful as possible: (a range ending/starting with '.' won't be captured here)
Error: could not load JIT functions.
Error: first report in this thread is method exit
Errors 1xx, 204 and 304 MUST NOT send a body
Errors accumulate here
Errors are detected by individual opcodes, with an immediate jumps to abort_due_to_error.
Escape ' and enclose in '...'
Escape U+2028/U+2029 line terminators, UNLESS both JSON_UNESCAPED_UNICODE and JSON_UNESCAPED_LINE_TERMINATORS were provided
Escape double quoted string contents
Escaped anything counts 1
Escapes that need further processing, or are illegal.
Escapes the UTF16 character and stores the result in the buffer buf, then the buffer buf is appended to the FBuffer buffer.
Escapes the UTF16 character and stores the result in the buffer buf.
Especially useful for base64 and datetime strings
Especially, the size of +T_DATA+ may not be correct.
Especially, total size of T_DATA may not right size.
Essentially what we now have is a set of tokens each consisting of a hexadecimal number followed by a separator character.
Essentially, the  application:  1) Opens an RBU handle using the sqlite3rbu_open() function.
Essentially, this structure contains all those fields of the VdbeSorter structure for which each thread requires a separate instance.
Essentially, we are waiting for the socket to become writeable, which means that all pending data has been sent.
Est number of iterations of a query (10*log2(N))
Establish a read-lock on the table at the shared-cache level.
Estimate the average row size for the table and for all implied indices
Estimate the average size of a row for an index.
Estimate the largest singular value.
Estimate the logarithm of the input value to base 2.
Estimate the metonic cycle number.
Estimate the number of rows that will be returned based on an IN constraint where the right-hand side of the IN operator is a list of values.
Estimate the total row width for a table.
Estimate the upper limit on the number of leaf nodes in a new segment created by merging the oldest :2 segments from absolute level :1.
Estimated average row size in bytes
Estimated cost of using this index
Estimated number of output rows
Estimated number of result rows
Estimated number of rows generated by this path
Estimated number of rows in this table
Estimated number of rows returned
Estimated output rows per loop
Estimated quantities used for query planning are stored as 16-bit logarithms.
Estimated rows in table - from sqlite_stat1 table
Estimated rows returned by this scan
Estimated size of each table row in bytes
Estimated size of this column.
Estimated size of value in this column.
Euclid's algorithm for GCD.
Euclidean algorithm on two positive numbers
Evaluate PHI and the derivative DPHI
Evaluate PSI and the derivative DPSI
Evaluate a view and store its result in an ephemeral table.
Evaluate an expression (either a vector or a scalar expression) and store the result in continguous temporary registers.
Evaluate subqueries as coroutines
Evaluate the current GROUP BY terms and store in b0, b1, b2...
Evaluate the equality constraints
Evaluate the expression and either jump over all of the code or fall thru.
Evaluate the expression and insert it into the temp table
Evaluates the given string in an isolated binding.
Evaluates the given string under a module binding in an isolated binding.
Even after the writer process  has committed one or more sub-transactions, other database clients continue to read from the original database snapshot.
Even entries are the meta value number and odd entries are an increment to apply to the meta value after the vacuum.
Even for zero size payload we have to send a packet
Even if a read-transaction is not open, it is guaranteed that  there is no hot-journal in the file-system.
Even if a subsequent open() call does succeed, the consequences of not searching for a resusable file descriptor are not dire.
Even if a subsequent open() call does succeed, the consequences of not searching for a reusable file descriptor are not dire.
Even if an IO or diskfull error occurs while journalling the page in the block above, set the need-sync flag for the page.
Even if any illegal encoding is detected the result may contain a list of parsed encodings.
Even if it does, the miscompile might only occur on the production build, but not on a testing build (such as because of different optimization settings).
Even if it fails, *ppExpr may still be set to point to an  expression tree.
Even if key2 also contains NULL values.
Even if nobody uses it.
Even if one operand is not known, we may be able to determine that the operations with the integer replaced by a double only acts as an effective double cast on the unknown operand.
Even if pVal also contains NULL values.
Even if the data structure on disk is corrupted, this (reading two varints from the buffer) does not risk an overread.
Even if the match is empty, we need to reset the control head.
Even if the statement is read-only, it is important to perform a statement or transaction rollback operation.
Even if the string is of length zero there is one byte alloced so efree() in all cases
Even if the whole file is valid UTF-8 sequences, still reject it if it uses weird control characters.
Even if there is a  busy-handler configured, it will not be invoked in this case.
Even in the case the payload is evenly divisible by this value, the last packet will be empty, namely 0 bytes.
Even reading previously freed memory might result in a segmentation fault or other severe error.
Even that has never been tested according to DB.
Even the most complicated layouts should not require more than 16 entries to fit within the cache.
Even though a malloc() has failed, the implementation of the user function may have called an sqlite3_result_XXX() function to return a value.
Even though any XCLASS list is now discarded, we must allow for its memory.
Even though there is no encoding conversion, value_blob() might need to call malloc() to expand the result of a zeroblob()  expression.
Even though this opcode does not use dynamic strings for the result, result columns may become dynamic if the user calls sqlite3_column_text16(), causing a translation to UTF-16 encoding.
Even unfulfilled requests are counted
Even with the enabled per thread locale, localeconv won't check any locale change in the master thread.
Event counters from parent frame
Events will be called on the handler set on the parser instance.
Every SQLite table must have either BTREE_INTKEY or BTREE_BLOBKEY set.
Every TK_VECTOR node is an vector because the parser will not generate a TK_VECTOR with fewer than two entries.
Every VM can run parallel.
Every class contains at least two characters.
Every code point has a grapheme break property which is one of the ucp_gbXX values defined in ucp.h.
Every connected stream will be registered as resource (in EG(regular_list).
Every cursor is a candidate to be tripped, including cursors that belong to other database connections that happen to be sharing the cache with pBtree.
Every cursor is tripped, including cursors that belong to other database connections that happen to be sharing the cache with pBtree.
Every cursor that the virtual machine has open is represented by an instance of the following structure.
Every effort is made to force the conversion, even if the input is a string that does not look completely like a number.
Every entry in the cache holds a single page of the database file.
Every interface that accepts sqlite3_value arguments specifies whether or not it requires a protected sqlite3_value.
Every lock should have a corresponding unlock.
Every method entry decreases from the current stack point, and when a thread stack reaches its top of stack (return from the global function), the top of stack and the current stack increase.
Every one-row WhereLoop is automatically order-distinct.
Every one-row WhereLoop will have the WHERE_ONEROW bit set in wsFlags.
Every open database file (including each in-memory database and each temporary or transient database) has a single page cache which is an instance of this object.
Every page has an associated PCache
Every page in the cache is controlled by an instance of the following structure.
Every page in the database contains 0 or 1 parent pages.
Every page of the database is written approximately 3 times:  Once for step (2) and twice for step (3).
Every statement that might do an INSERT into an autoincrement table (either directly or through triggers) needs to call this routine just before the "exit" code.
Every thread initializes with a stack of size INIT_TOP_STACK.
Every user-visible function in PHP should document itself in the source
Everything above is part of the evaluation phase.
Everything after this point is just test code.
Everything checks out, set it
Everything else after.
Everything else falls through when "1"...
Everything else is PPC-64 only.
Everything else is cleaned up by the call to sqlite3Fts3ExprFree(pRoot) below.
Everything is reloaded from disk (and, if necessary, hot-journal rollback peformed) when a read-transaction is next opened on the pager (transitioning the pager into READER state).
Everything still works out in the nditer, because the new dimension is always added on the end, and it cares about what happens at the beginning.
Everything was consumed.
Everything works find if the following memset() is omitted.
Ex. Socket.pair(:UNIX, 0xff) fails with EINVAL.
Ex:  "main" or "temp" or the symbolic name assigned to an ATTACH-ed database.
Exact half-way case:  apply round-even rule.
Exactly VdbeSorter.nTask instances of this object are allocated as part of each VdbeSorter object.
Exactly one of  xGeom and xQueryFunc fields is non-NULL, depending on whether the SQL function was created using sqlite3_rtree_geometry_callback() or sqlite3_rtree_query_callback().
Exactly one of regOld and regNew should be non-zero.
Exactly one of the following macros must be defined in order to specify which memory allocation subsystem to use.
Exactly one of those deletes is the "primary" delete.
Exactly two arguments must be passed to this function.
Exactly when an expression is considered a column can be complex in the presence of subqueries.
Exactly which is determined by the zUsage argument.
Examine a WherePath (with the addition of the extra WhereLoop of the 5th parameters) to see if it outputs rows in the requested ORDER BY (or GROUP BY) without requiring a separate sort operation.
Examines all the objects in the given Python object by recursively descending the sequence structure.
Examines all the strings in the given string array, and parses them to find the right metadata.
Example 1:  Consider a three-way compound SQL statement.
Example encodings:  1:    0x01 127:    0x7f 128:    0x81 0x00   Document lists **** A doclist (document list) holds a docid-sorted list of hits for a given term.
Example:  # update a counter using write lock # don't use "w" because it truncates the file before lock.
Example:  GC::Profiler.enable  require 'rdoc/rdoc'  GC::Profiler.report  GC::Profiler.disable  See also GC.count, GC.malloc_allocated_size and GC.malloc_allocations
Example:  To translate an ISO-8601 date YYYY-MM-DD, the format would be "40f-21a-20c".
Example:  WHERE x IN (1,2,3,4)  Write the estimated row count into *pnRow and return SQLITE_OK.
Example: "c2chars/nints" will return an object with fields chars1, chars2, and ints.
Example: Suppose the join is like this:  A natural cross join B  The operator is "natural cross join".
Example: the row for WORD contains ucp_L, ucp_N, ucp_P, ucp_Po.
Examples of flags:  # `+' and space flag specifies the sign of non-negative numbers.
Examples of why this is not allowed:  t1 LEFT OUTER JOIN (t2 JOIN t3)  If we flatten the above, we would get  (t1 LEFT OUTER JOIN t2) JOIN t3  which is not at all the same thing.
Except for custom ufuncs built with just one object-parametered inner loop, only the types that are supported are implemented.
Except for some memory allocation errors,  an error message held in memory obtained from malloc is returned if *pnErr is non-zero.
Except for these two routines, all mutex operations are no-ops in that case and are null #defines in btree.h.
Except for when it belongs to this output
Except see the bug regarding a race condition php_sysvsem_get().
Except when the whole stack frame must be saved.
Except, any file larger than 0 bytes in size is considered to contain at least one page.
Except, any file that is greater than 0 bytes in size is considered to have at least one page.
Except, do not close cursors that will be reused by the OR optimization (WHERE_OMIT_OPEN_CLOSE).
Except, do not close cursors that will be reused by the OR optimization (WHERE_OR_SUBCLAUSE).
Except, do not disable the term if it controls a LEFT OUTER JOIN and it did not originate in the ON or USING clause of that join.
Except, each sample may be extended to ensure that it is greater than or equal to the previous sample in the array.
Except, entries in the copy of the string associated with equality constraints that use BLOB or NONE affinity are set to SQLITE_AFF_BLOB.
Except, entries in the copy of the string associated with equality constraints that use NONE affinity are set to SQLITE_AFF_NONE.
Except, if N is set to 0 then the upper layers will never invoke the xFetch interfaces to the VFS.
Except, if Pager.eLock is set to UNKNOWN_LOCK when this function is  called, do not modify it unless the new locking state is EXCLUSIVE_LOCK.
Except, if Pager.eLock is set to UNKNOWN_LOCK when this function is called, do not modify it.
Except, if SQLITE_4_BYTE_ALIGNED_MALLOC is defined, then the underlying malloc() implementation might return us 4-byte aligned pointers.
Except, if SQLITE_4_BYTE_ALIGNED_MALLOC is defined, then the underlying malloc() implemention might return us 4-byte aligned pointers.
Except, if createFlag is true, that means that we are trying to install a new function.
Except, if pTree is a root node, do not write it to the database.
Except, if the 0 byte is preceded by a byte with the 0x80 bit set, then it is not a varint 0, but the tail of some other, multi-byte, value.
Except, if the background thread from a sub-tasks previous turn is still running, skip it.
Except, if the delta string is malformed or intended for use with a source file other than zSrc, then this routine returns -1.
Except, if the other Btree object has the read-uncommitted flag set, then it is OK for the other object to have a read cursor.
Except, if the pager is in-memory only, then return an empty string if nullIfMemDb is true.
Except, if the value is an SQL NULL, return  0 instead.
Except, if there are already N worker threads running, the main thread does the work itself.
Except, if there is a sorter, in which case the sorter has already limited the output for us.
Except, if this is not the last copy of the function, do not invoke it.
Except, if we get to the 9th byte, it stores the full 8 bits and is the last byte.
Except, of course, if SQLITE_LIKE_DOESNT_MATCH_BLOBS is defined, then only the one pass through the string space is required, so this routine becomes a no-op.
Except, promote as many  segments as possible to level iPromote.
Except, the root of the principle table (the one on page 1) is never added to the freelist.
Except, this version does handle the single byte case that the core version depends on being handled before its function is called.
Except, when opening on an existing shared pager-cache, do not change the pager-cache size.
Exception mode setting
Exception objects carry information about the exception -- its type (the exception's class name), an optional descriptive string, and optional traceback information.
Exception occurred on previous callback.
Exception subclasses may add additional information like NameError#name.
Exception throwing macro
Exclude terms using these operators
Exclude the current year, so add 1.
Excludes all non-ASCII in either mode
Execute a Regular Expression           *
Execute a rollback if a transaction is active and unlock the  database file.
Execute as much of a VDBE program as we can.
Execute prepared SQL statement.
Execute the loop with just the outer iterator
Execute the loop with no iterators
Execute the recursive SELECT taking the single row in Current as the value for the recursive-table.
Execute the regular expression.
Execute the statement pStmt, either until a row of data is ready, the statement is completely executed or an error occurs.
Execute the statement to insert the record.
Execute this as SQL on the same database.
Execute zSql on database db.
Executed commands will run through cmd.exe.
Executed, but the user hasn't started to fetch This will clean also the metadata, but after the EXECUTE call we will have it again.
Exif Attribute Information
Existence of VDBE checked by caller
Existing SHARED locks may persist, but no new SHARED locks may be obtained by other processes.
Existing WITH clause, or NULL
Existing colset object
Existing configuration options might be discontinued.
Existing index ASCENDING
Existing index DESCENDING
Existing nearset, or NULL
Existing representations MEM_Int and MEM_Real are *not* invalidated.
Existing representations MEM_Int and MEM_Real are invalidated if bForce is true but are retained if bForce is false.
Existing verbs might be discontinued.
Exit early in this case.
Exit from incremental search mode
Exit from loop if a submatrix of order 1 has split off.
Exit from loop if a submatrix of order 1 or 2 has split off.
Exit point for the then opcodes of this alternative.
Exit the loop if the growth factor is too small.
Exit the mutexes and free the backup context structure.
Exit the recursive mutex on a Btree.
Exit, the rest of the connect is in a different protocol.
Exotic types are handled as string also.
Expand R to 48 bits (simulate the E-box).
Expand all decompositions by recursively decomposing each character in the decomposition.
Expand either upwards or downwards depending on stride
Expand only non-cacheable objects.
Expand only tilde (User HOME) and non-cacheable objects.
Expand relative load path and non-cacheable objects again.
Expand the current pattern
Expand the nassign buffer.
Expand the space allocated for the given SrcList object by creating nExtra new slots beginning at iStart.
Expanded data destination object for stdio output
Expanded data source object for gdIOCtx input
Expanding a SELECT statement is the first step in processing a SELECT statement.
Expect DOCUMENT-START or STREAM-END.
Expect MAPPING-START.
Expect SEQUENCE-START.
Expect a block item node.
Expect a block key node.
Expect a block value node.
Expect a flow item node.
Expect a flow key node.
Expect a flow value node.
Expect a whitespace or line break.
Expect the root node.
Expected number of pages in the list
Expected pointer map parent page number
Expected pointer map type
Expected size of the BLOB
Expects the database to be open
Expensive, but the only way that produces an acceptable result: mix down to a palette based temporary image.
Experimental interfaces are normally new features recently added to SQLite.
Explanation of data structures
Explicit use of the CROSS keyword
Explicitly call the 64-bit version of lseek() on Android.
Exponent overflow/NaN converts to signed inf/NaN
Exponent part of a and b is the same,then compare fraction
Exponent underflow converts to a subnormal half or signed zero
Exponent underflow converts to subnormal half or signed zero
Exponentional notation.
Export an integer into a buffer.
Export the constants provided by Facebook's build system to ocaml-land, since their FFI only allows you to call functions, not reference variables.
Exported as DATETIMEUNITS in multiarraymodule.c
Exported by mysqlnd_ps_codec.c
Exported version of applyAffinity().
Expose Collator constants to PHP scripts
Expose DateFormat constants to PHP scripts
Expose ICU error codes to PHP scripts.
Expose IDN constants to PHP scripts.
Expose Locale constants to PHP scripts
Expose Normalizer constants to PHP scripts
Expose NumberFormatter constants to PHP scripts
Expose Spoofchecker constants to PHP scripts
Expose so we can display diagnostics
Expr in which substitution occurs
Expr list from which to derive column names
Expr pIn is an IN(...) expression.
Expr struct EXPR_REDUCEDSIZE bytes only
Expr struct EXPR_TOKENONLYSIZE bytes only
Expr.iColumn is set to the column of the pseudo-table to read, or to -1 to read the rowid field.
Expr.op is the opcode.
Expr.pLeft, .pRight, .u.pSelect all NULL
Expr.pRight and Expr.pLeft are the left and right subexpressions of a binary operator.
Expr.u.zToken is always UTF8 and zero-terminated.
Expression contains one or more errors
Expression defining the new record number
Expression encoding the function
Expression for MATCH queries
Expression for a single result column
Expression list contaning only pSelectRowid
Expression list to resolve.
Expression list to search
Expression node to test
Expression of which pNode is a part
Expression p should encode a floating point value between 1.0 and 0.0.
Expression pExpr is a comparison between two vector values.
Expression pExpr is one operand of a comparison operator that might be useful for indexing.
Expression pExpr must be of type FTSQUERY_PHRASE.
Expression pPhrase belongs to
Expression that pNear is a part of
Expression to be appended.
Expression to consider
Expression to initialize phrases in
Expression to iterate phrases of
Expression to pass to authorization callback
Expression to resolve.
Expression to return via *ppNew
Expression tree height of current sub-select
Expression used to recompute the rowid
Expression we are trying to match
Expressions defining the result set
Expressions iterate through matching rows in docid order.
Expressions of the form  expr1 IN () expr1 NOT IN ()  simplify to constants 0 (false) and 1 (true), respectively, regardless of the value of expr1.
Expressions of the form "X op Y" are converted into "Y op X".
Expressions of the form:   CAST(pLeft AS token)
Extend an existing range.
Extend level iLvl so that there is room for at least nExtra more segments.
Extend or move a queue.
Extend string if needed
Extend the Fts5Structure object as required to ensure the output segment exists.
Extend the gl_pathv member of a glob_t structure to accommodate a new item, add the new item, and update gl_pathc.
Extend the last range.
Extend the logical size if we seek beyond EOF.
Extend the stack our own way.
Extended FP R/M field with op code (/digit)
Extended floating point R/M field with opcode
Extension API function pointers.
Extension loading is disabled by default so as not to open security holes in older applications.
Extension loading should only be enabled for when we attempt to load
Extension to which this belongs
Extension versionnumber
Extensions should also check to make sure that the pointer to the function is not NULL before calling it.
Extensions that use newer APIs should first call the sqlite3_libversion_number() to make sure that the API they intend to use is supported by the library.
External API function used to create a new virtual-table module.
External mutex implementations are only required to provide these routines if SQLITE_DEBUG is defined and if NDEBUG is not defined.
Extra argument values from a PrintfArguments object
Extra bytes append to each in-memory page
Extra bytes at the end
Extra character needed for sign
Extra data associated with the callback
Extra data for callback
Extra data passed into the callback
Extra dependencies on LEFT JOIN
Extra digits are ignored for loading.
Extra information associated with the page
Extra initialization needed
Extra prerequesites for using this table
Extra space after the Index object
Extra space associated with each page
Extra space on the end of pIdx
Extra verbose when with __TEST
Extra zero bytes to append to pData
Extra zero data appended after pData,nData
Extract a 2-byte big-endian integer from an array of unsigned bytes.
Extract a leaf from the trunk
Extract a value from the supplied expression in the manner described above sqlite3ValueFromExpr().
Extract all tokens from hash table iHash and link them into a list in sorted order.
Extract arguments from the current row of the ephemeral table and  invoke the VUpdate method.
Extract charset encoding
Extract dir name from path_translated * and store it in 'path'
Extract encoding from string
Extract remaining digits.
Extract snippet from this column
Extract the PRIMARY KEY from the end of the index entry and store it in registers regR..regR+nPk-1
Extract the content for the p2+1-th column.
Extract the data pointer
Extract the iCol-th column from the nRec-byte record in pRec.
Extract the index from the flat_index
Extract the int value, ignore the fraction.
Extract the next token from a tokenization cursor.
Extract the next token from buffer z (length n) using the tokenizer and other information (column names etc.) in pParse.
Extract the operand which is for masked iteration
Extract the overloaded session_mode parameter into valid Oracle credential and session mode values
Extract the rowid or primary key for the current row
Extract the smallest element from the RowSet.
Extract the snippet text for fragment pFragment from cursor pCsr and append it to string buffer pOut.
Extract the timezone offset that was applied
Extract the user data from a sqlite3_context structure and return a pointer to it.
Extract the value into this register
Extract the values to be compared.
Extract this operand and return it.
Extract unencoded text from string
Extracting bit difference info.
Extracts some values from the global pyvals tuple.
Extraneous characters past the end of a valid number are ignored.
Extreme care is required when writing code to depend on this initialization.
F and G are optimized compared to their RFC 1321 definitions for architectures that lack an AND-NOT instruction, just like in Colin Plumb's implementation.
F if in -GH and not B--GH, D--GH, -H--GH, -H---GH else dropped if -GNED, -GN, else dropped if -DGE-, -DGI- or -DGY- (handled in D) else J if in -GE-, -GI, -GY and not GG else K
F, G, H and I are basic MD5 functions.
F, G, H and I are basic SHA1 functions.
F90 allocatable array
F900-FA2D Han compatibility.
F: Old-style sqlite3_rtree_geometry_callback()
FAIL processing means that the operation in progress stops and returns an error code.
FALSE - The DBG_ calls won't be traced, TRUE - will be traced
FE30h CJK Compatibility Forms
FETCH_GLOBAL_LOCK instructs FETCH_W to not free the name_node operand, so it can be reused in the following ASSIGN_REF, which then frees it.
FETCH_LIST on a string behaves like FETCH_R on null
FF, GG, HH, and II transformations for rounds 1, 2, 3, and 4.
FG(stream_wrappers) and FG(stream_filters) are destroyed during php_request_shutdown()
FIBER_USE_NATIVE enables Fiber performance improvement using system dependent method such as make/setcontext on POSIX system or CreateFiber() API on Windows.
FILEHANDLEID() takes an sqlite3_file struct as its argument.
FINIT        (input) DOUBLE PRECISION The value of f at 0.
FINIT        (input) REAL The value of f at 0.
FIX ME ADD CLONE STUFF
FIX ME: It would be better if sqlite3_snprintf() could do UTF-16.
FIXME  This deprecation has been temporarily removed for the NumPy 1.7 release.
FIXME - Work out proto_num here
FIXME - macro contains a return
FIXME - macro contains goto
FIXME There is no error handling here
FIXME This doesn't give microseconds as in Unix case, and the resolution is in system ticks, 10 ms intervals.
FIXME the idea of checking to see if our connection is already persistent is good, but it adds a lot of overhead to non-persistent connections.
FIXME: Be smarter about indexes that use expressions
FIXME: Bug #70480 php_url_parse_ex() crashes by processing chars exceed len
FIXME: I need to have this somehow handled if USE_SAPI is defined, because cgi will also be interfaced in USE_SAPI
FIXME: Implement request source
FIXME: Implement session source
FIXME: Make this more robust
FIXME: Overflow is not handled at all To convert from Years or Months, multiplication by the average is done
FIXME: Read file names and sort them to prevent non-determinism.
FIXME: Should not be fatal
FIXME: This does not work with Sybase, but environ will
FIXME: This doesn't cope with bzip2
FIXME: This might need to be changed to ZSTR_EMPTY_ALLOC().
FIXME: Use the openssl constants instead of enum.
FIXME: We allocate more than we need here
FIXME: better regex must be used
FIXME: constify when dropping 0.9.8
FIXME: convert to string
FIXME: how to pass method name if style is SOAP_DOCUMENT
FIXME: ideally, we should set this to the real version of MSVCRT.
FIXME: make this work for win32
FIXME: mod_data(data) should not be NULL (User handler could be NULL)
FIXME: move declarations
FIXME: not sure why this is needed but removing it breaks tests
FIXME: numeric string
FIXME: open must set valid PS(mod_data) with success
FIXME: provide more detailed information about the field type, field size and array dimensions
FIXME: removing rb_thread_wait_fd() here changes sysread semantics on non-blocking IOs.
FIXME: some locale free implementation is really required here,,,
FIXME: support for more opcodes
FIXME: the rest of body is ignored
FIXME: there might be binary data
FIXME: this is probably broken when multiple signals are handled in this while loop (retval)
FIXME: tile: we could pregenerate this.
FK constraints this VM
FLOW-ENTRY represent the ',' indicator.
FNV hashes are designed to be fast while maintaining a low collision rate.
FNV-1 hash each octet in the buffer
FNV-1 hash each octet of the buffer
FNV-1a hash each octet in the buffer
FOR BC reasons, this will always perform and then print
FORALLfacet from startfacet or qh newfacet_list
FORALLsame_cycle_(facet)
FORMAT DETAILS  The file is divided into pages.
FP R/M field with op code (/digit)
FROM ...)  For a SELECT, generate code to put the values for all columns of the first row into an array of registers and return the index of the first register.
FROM clause cannot contain a subquery
FROM clause does not contain a real table
FROM clause element to resolve
FROM clause is not a view
FROM clause must have exactly one term
FROM clause not a virtual table
FROM clause of subquery
FROM clause of the outer query
FROM clause pLvl reads data from
FROM clause term being analyzed
FROM clause term being coded
FROM clause term being indexed
FROM clause: A list of all tables to be scanned
FROM entries not usable at this level
FROM is not a subquery or view
FROM subqueries have Table metadata
FROM t1 EXCEPT SELECT ...
FROM t2) ORDER BY ...
FROMFULLGLOBYIFISNULLORDERESTRICTRIGHTROLLBACKROWUNIONUSING
FTP won't give us a valid mode, so approximate one based on being readable
FTS maintains a separate indexes for each language-id (a 32-bit integer).
FTS virtual table handle
FTS3 and FTS4 both require virtual table support
FTS3 table snippet comes from
FTS3 used to optionally store character offsets using a compile-time option.
FTS3/FTS4 require virtual tables
FTS3_HASH_BINARY        pKey points to binary data nKey bytes long.
FTS4 is really an extension for FTS3.
FTS4 virtual tables may maintain multiple indexes - one index of all terms in the document set and zero or more prefix indexes.
FTS5 Configuration object
FTS5 EXTENSION REGISTRATION API
FTS5 assumes the xToken() callback is invoked for each token in the  order that they occur within the input text.
FTS5 backend to iterate within
FTS5 global context for db handle
FTS5 global object for this database
FTS5 mask for idxFlags
FTS5 then queries the index for each synonym individually.
FTS5INDEX_QUERY_XXX flags
FTS5_AND node to advance
FTS5_DETAIL_XXX value
FTS5_MAX_SEGMENT is currently defined as 2000.
FTS5_NOT node to advance
FTS5_SEGITER_REVERSE: This flag is only ever set if FTS5_SEGITER_ONETERM is also set.
FTS5_STMT_XXX constant
FTS5_STRING node this phrase is part of
FTS5_STRING or FTS5_TERM node
FTS5_STRING, AND, OR or NOT
FTS5_TOKENIZE_* flags
FTS5_VOCAB_COL or ROW
FTSQUERY_PHRASE expression
FULL      The journal is synced twice before writes begin on the database (with some additional information - the nRec field of the journal header - being written in between the two syncs).
FULL means that the WAL file is synced following each commit operation, in addition to the syncs associated with NORMAL.
FULLWIDTH HYPHEN-MINUS
FULLWIDTH QUOTATION MARK
FULLWIDTH REVERSE SOLIDUS
FUNCTION(zName, nArg, iArg, bNC, xFunc) Used to create a scalar function definition of a function zName  implemented by C function xFunc that accepts nArg arguments.
FUNCTION(zName, nArg, iArg, bNC, xFunc) Used to create a scalar function definition of a function zName implemented by C function xFunc that accepts nArg arguments.
FWIW, 65536 is enough big for our supported OSs.
F_DUPFD_CLOEXEC is available since Linux 2.6.24.
F_FULLFSYNC is currently only available on Mac OS X.
F_MAXFD is available since NetBSD 2.0.
F_SETFD is used if F_DUPFD_CLOEXEC is not available.)
F_UNLCK, F_RDLCK, or F_WRLCK
Factor diagonal and subdiagonal blocks and test for exact singularity.
Factor out constant terms
Factor out the code of the given expression to initialization time.
Factored out common functionality (blocking, timeout, loop management) for read and write.
Factorize n in factors in ntryh and rest.
Fail for a valid opcode that implies no starting bits.
Fail if we can't allocate room for the new environment
Fail the operation and rollback the transaction
Fail to open empty path
Failed to compile, or error while post-processing
Failed to find the required lock.
Failed to open the file for read/write access.
Failed to query the window size.
Failed to write file to disk
Failing that, if a default external encoding was specified on the command-line, that value is used.
Failing to get the memory needed to hold the sub-bitmap is the only that can go wrong with an insert, assuming p and i are valid.
Failing to match means the assertion is true.
Fails on a lookaside memory leak
Failure either means it doesn't exist or it's a directory and this server fails on listing directory sizes
Failure is not possible.
Failure to call this function *will* cause memory leaks.
Failure to converge in remaining number of iterations
Failure to do this would result in crashes in error scenarios
Failure to heed these warnings can lead to unpredictable behavior.
Failure to set the bits in the InJournal bit-vectors is benign.
Failure will leave zkeyval alone which will land us on the final else block below which is to append the value as next_index
Fake system time in seconds since 1970.
Fall back to "text/plain"
Fall back to FindFirstFile for ERROR_SHARING_VIOLATION
Fall back to creating a generic socket stream
Fall back to sendmail_from php.ini setting
Fall back to using xRead/xWrite exclusively in this case.
Fall back to wrapping a non-masked transfer function
Fall through for the RTREE_EQ case
Fall through into OP_AggStep
Fall through into OP_Function
Fall through into OP_Halt
Fall through into OP_NotExists
Fall through into OP_Rewind
Fall through into the next case
Fall through to next instruction if the two records compare equal to each other.
Fall through to the next case, OP_String
Fall through with a digit less than 8
Fall thru into the default case
Fall thru into the next case
Fallback loop must terminate
Fallback to "string" filter
Fallback to SSL_CTX_set_tmp_ecdh().
Fallback to the copy stemmer
Fallback to the default filter
Fallback to the normal code path if an unsupported flag is set.
False for a read lock
False for index b-trees
False for json_each()
False for overflow page list
False for pseudo-table or vtab
False to disable new lookaside allocations
False to omit journal
False_ if error occurred.
Fancy and 0-d boolean indices are ignored here
Fast decoding a UTF-8 character type.
Fast decoding a UTF-8 character.
Fast loads and stores.
Fast path for looking up the resources for the current thread.
Fast path for parsing buffer strings corresponding to simple types.
Fast path for unsafe casts or basic types
Fast table lookup for small type numbers
Fast, but limited size.
Faster than pcre_uchar
Fastest compression level, but with the lowest space savings.
Faults are not injected into COMMIT_PHASETWO because, assuming SQLite is using a regular VFS, it is called after the corresponding  transaction has been committed.
Faults are not injected into COMMIT_PHASETWO because, assuming SQLite is using a regular VFS, it is called after the corresponding transaction has been committed.
Fd for main db of dbRbu
Features and Architecture: - The XML parsing (xml_element.c) is completely independent of the XMLRPC api.
Feed this result into the outter hash
Feel free to shoot your foot.
Fernando, Technical Report CPAM-554, Mathematics Department, University of California at Berkeley, July 1992 for a detailed description of the algorithm.
Fetch  values from the incoming array
Fetch STREAM-START then.
Fetch a page by key value.
Fetch by Row: array will contain one sub-array per query row
Fetch by columns: array will contain one sub-array per query column
Fetch collator object.
Fetch jit auto globals used in the script before execution
Fetch metadata from Postgres system catalogue
Fetch precomputed values for the reduced problem
Fetch the ctx hash value
Fetch the error information
Fetch the info entry for the field
Fetch the integer off the end of the index record
Fetch the next token from the queue.
Fetch the next token.
Fetch the object (without resetting its last error code ).
Fetch the object (without resetting its last error code).
Fetch the timestamp from the UCalendar
Fetch the typelibrary and use that to look things up
Fetches +length+ number of bytes and uses ::add to seed the OpenSSL built-in PRNG.
Fetching non-WSDL mode options
Few of the cell counts will overflow, and clamping those that do overflow to the maximum value will give close- enough results.
Fewer than _length_ bytes may be returned if an EOF is encountered during the read.
Fibers cannot be copied
Field containing pattern end
Field containing pattern start
Field containing processed string end
Field containing processed string start
Field iChng of the index being scanned has changed.
Field to extract from pVector
Fields above must be initialized to zero.
Fields associated with table columns that are not modified are set to "undefined".
Fields below are only available in SQLite 3.10.0 and later
Fields below are only available in SQLite 3.8.2 and later
Fields below are only available in SQLite 3.9.0 and later
Fields in sorter record
Fields that follow must be manually initialized.
Fifth parameter is an unsigned character
Figure out how large an allocation is required
Figure out how many bytes are required by this new entry
Figure out how many bytes of space are required to store explicitly specified collation sequence names.
Figure out how many columns of data are supplied.
Figure out how many memory cells we will need then allocate them.
Figure out how many new bytes are in this term
Figure out how many records are in the journal.
Figure out how many savepoints will still be active after this operation.
Figure out how much reusable memory is available at the end of the opcode array.
Figure out how much space is required for each journal file-handle (there are two of them, the main journal and the sub-journal).
Figure out how much space the key will consume if it is written to the current node of layer iLayer.
Figure out how much space to allocate
Figure out if this is a leaf or an internal node.
Figure out if this structure requires optimization.
Figure out if we are dealing with Unix, Windows, or some other operating system.
Figure out if we have any triggers and if the table being deleted from is a view
Figure out if we have any triggers and if the table being inserted into is a view
Figure out if we have any triggers and if the table being updated is a view.
Figure out the ON CONFLICT policy that will be used for this step of the trigger program.
Figure out the affinity to use to create a key from the results of the expression.
Figure out the dayofweek for y-1-1
Figure out the db that the trigger will be created in
Figure out the effective temporary directory.
Figure out the final concatenated shape starting from the first array's shape.
Figure out the name of the primary key index for the current table.
Figure out the node size to use.
Figure out the number of iteration dimensions, which is the broadcast result of all the input non-core dimensions.
Figure out the number of pages needed to hold all b.nCell cells.
Figure out the number of pages needed to hold all nCell cells.
Figure out the page-size for the database.
Figure out the permutation to apply to the strides to match the memory layout of the input arrays, using ambiguity resolution rules matching that of the NpyIter.
Figure out the root-page that the lock should be held on.
Figure out the rowid of the new row.
Figure out the size of the output
Figure out the total size of the current row in tokens.
Figure out the type of table this step will deal with.
Figure out what action to take in case of a rowid collision
Figure out what version of the code to use.
Figure out where the doclist for this term ends
Figure out where to write the new Expr structure.
Figure out whether or not the current contents of memory should be flushed to a PMA before continuing.
Figure out which index to search and set iIdx accordingly.
Figure out which one and pick up the appropriate opcode.
Figure out which set we need.
Figure this out later
Figuring out how to connect them into a curve -- or possibly a set of disjoint curves -- is difficult.
File Implementing the shared memory system for Hack.
File Locking Notes:  (Mostly about windows but also some info for Unix)  We cannot use LockFileEx() or UnlockFileEx() on Win95/98/ME because those functions are not available.
File data written to disk will be transcoded to the default external encoding when written.
File descriptor for database
File descriptor for database pTo
File descriptor for main journal
File descriptor for sub-journal
File descriptor object
File descriptor open on db file
File descriptor returned by open()
File descriptor to close
File descriptor to write to
File format to use for encoding
File fts3_test.c contains a Tcl interface to read and write the values.
File handle for WAL file
File handle for the database file
File handle from CreateFileMapping
File handle from winOpen
File handle open on target db
File handle to write to
File handle we are reading from
File is a reparse point.
File is in the right directory
File iterator is reading from
File name for write-ahead log
File name is relative to the currect document
File name is relative to the webserver root
File name is relative to the webserver working directory or it is absolute system path
File offset to begin writing at
File opened that is not a database file
File path associated with error
File position that matches buffer start
File time ticks at 0.1uS, clock at 1mS
File upload stopped by extension
File upload successful
File-name for the master journal
File-system block size
File.chown(nil, 100, "testfile")
File.new("testfile").chown(502, 1000)
File: foomodule.c Example of FortranObject usage.
File: wrapmodule.c This file is auto-generated with f2py (version:2_1330).
Filename argument to pass to BtreeOpen()
Filename as passed to xOpen
Filename in OS encoding
Filename in UTF-8 encoding
Filename map destructor
Filename might have query parameters
Filenames containing international characters must be converted to UTF-8 prior to passing them into sqlite3_open() or sqlite3_open_v2().
Files are looked up by subject's X509 name's hash value.
Files save handler checks/create save_path directory and setup ps_files data.
Files save handler closes open files and it's memory.
Files save handler should be used as reference implementations of session save handlers.
Files save handler supports splitting session data into multiple directories.
Fill a buffer with pseudo-random bytes.
Fill at least one axisdata, for the 0-d case
Fill basic information about the mapiter
Fill dimension of subspace
Fill dtable with character encodings.
Fill extra op, need to swap first
Fill from back, we know how many dims there are
Fill hole with 0 if made it.
Fill ib_link and trans with the correct database link and transaction.
Fill in 'iter_shape' and 'op_axes' for this output
Fill in IP, port info early so even if SSL setup below fails, error handler would have the corresponding info.
Fill in any allocated outputs
Fill in any forward references that are required.
Fill in length of a previous callout, except when the next thing is a quantifier or when processing a property substitution string in UCP mode.
Fill in op_axes for all the operands
Fill in shape and strides
Fill in specified_types from the tuple or string
Fill in the AXISDATA arrays and set the ITERSIZE field
Fill in the Pager.zFilename and Pager.zJournal buffers, if required.
Fill in the abNotindexed array
Fill in the auxdata object
Fill in the azColumn array
Fill in the basic data
Fill in the info structure
Fill in the initial part of 'iter_shape'
Fill in the last bit of mapiter information needed
Fill in the missing strides in C order
Fill in the names of the columns of the view in the pTable structure.
Fill in the ping_auto_globals_mask for the new script.
Fill in the terminating state and check for disastrous overflow, but if debugging, leave the test till after things are printed out.
Fill in the zName and zDb fields of the vtab structure.
Fill in this structure
Fill information about the iterator.
Fill new memory with zeros
Fill out the INDXC array so that the permutation which it induces will place all type-1 columns first, all type-2 columns next, then all type-3's, and finally all type-4's.
Fill the 'out_meta' values
Fill the InitData structure with an error message that indicates that the database is corrupt.
Fill the automatic index with content
Fill the buffer completely and process it
Fill the buffer until it has enough characters.
Fill the character property list        *
Fill the dtypes array.
Fill the index with data and reparse the schema.
Fill the input buffer --- called whenever buffer is emptied.
Fill the inverse-colormap entries in the update box that contains
Fill the raw buffer if necessary.
Fill the sorter until it contains LIMIT+OFFSET entries.
Fill up the buffer with client data.
Fills an array with cnt random npy_bool between off and off + rng inclusive.
Fills an array with cnt random npy_uint16 between off and off + rng inclusive.
Fills an array with cnt random npy_uint32 between off and off + rng inclusive.
Fills an array with cnt random npy_uint64 between off and off + rng inclusive.
Fills an array with cnt random npy_uint8 between off and off + rng inclusive.
Fills an array with ones.
Fills an array with zeros.
Fills in 'op_dataptr', 'op_dtype', and may modify 'op_itflags'.
Fills in the AXISDATA for the 'nop' operands, broadcasting the dimensionas as necessary.
Fills in the subscripts, with maximum size subsize, and op, with the values in the tuple 'args'.
Fills in the year, month, day in 'dts' based on the days offset from 1970.
Filter is not attached to a chain, or chain is somehow not part of a stream
Filter out attempts to run UPDATE or DELETE on contentless tables.
Filter used with cursor pCsr
Filter window size (of affecting source pixels)
Filtered data consists mostly of small values with a somewhat random distribution.
Filters are cleaned up by the streams they're attached to
Filters will dispose of their brigades
Final block of segment
Final leaf to traverse
Final number of cells on page
Final wrapup - pad to 64-byte boundary with the bit pattern 1 0* (64-bit count of bits processed, MSB-first)
Finalization of the journal file (task 2) is only performed if the  rollback is successful.
Finalize a prepared statement.
Finalize all SQL statements
Finalize all statements and free all allocations that are specific to the current object (table/index pair).
Finalize an iterator allocated with sqlite3changeset_start().
Finalize the journal file.
Finalize the statement passed as the second argument.
Finally apply defaults from config file
Finally check session id for dangerous characters Security note: session id may be embedded in HTML pages.
Finally go through the left singular vector matrices of all the other subproblems bottom-up on the tree.
Finally put the character into the buffer.
Finally,  rollback pages from the sub-journal.
Finally, Linux kernel developers don't guarantee that readability of select(2) means readability of following read(2) even for a single process.
Finally, a file is considered to be international text from some other character code if its characters are all either ISO-8859 (according to the above definition) or characters in the range 0x80 ...
Finally, allocate the array
Finally, argument pBegin points to the byte immediately following the end of the space required by this page for the cell-pointer area (for all cells - not just those inserted by the current call).
Finally, call DLAMC5 to compute EMAX and RMAX.
Finally, call SLAMC5 to compute EMAX and RMAX.
Finally, calls to xSync() on the target database file fail with SQLITE_INTERNAL errors.
Finally, if a multi-index wasn't requested, it may be possible to coalesce some axes together.
Finally, if an error does occur, return an SQLite error code.
Finally, if an error occurs with the xTokenize() implementation itself, it may abandon the tokenization and return any error code other than SQLITE_OK or SQLITE_DONE.
Finally, if nSpill is a positive value, then the journal file is initially created in-memory but may be flushed to disk later on.
Finally, if p5 is true, indicating that this cursor was last moved with OP_Next or OP_Prev, not Seek or NotFound, set  VdbeCursor.movetoTarget to the current rowid.
Finally, if the expression is an SQL function (TK_FUNCTION), then Expr.token contains the name of the function.
Finally, jump back to the beginning of the executable code.
Finally, sync the database file.
Finally, the character type table.
Finally, the itemsize/itemsize
Finally, the itemsize/itemsize and aligned flag
Finally, we keep going until we got data, and an SSL_ERROR_NONE, unless we had an error.
Finally, we pad on the right.
Find (an approximate) sum of two LogEst values.
Find (multiple) entries for named string   *
Find Gershgorin-type bound if Q's much greater than E's.
Find SCC entry points
Find T definition points
Find Unicode property name            *
Find a dirty page to write-out and recycle.
Find a node to store this cell in.
Find a page in the hash table given its page number.
Find a reasonable color
Find a set of variables which are used outside of the block where they are defined.
Find a unique file ID for the given absolute pathname.
Find all instances of carriage returns or line feeds and replace them with spaces.
Find an empty slot and replace it
Find an existing tokenizer
Find an unused temporary register.
Find and open actual ini file
Find and return the schema associated with a BTree.
Find any inequality constraint terms for the start and end  of the range.
Find beginning of salt string.
Find cached config entry: If not found, create one
Find diagonal block of matrix to work on
Find end of next segment, copy tentatively to pathend.
Find first set of multiple named strings    *
Find first significant op code            *
Find further details on tagged values there.
Find if Y M D falls in YearNumber Y+1, WeekNumber 1
Find if Y M D falls in YearNumber Y, WeekNumber 1 through 53
Find if Y M D falls in YearNumber Y-1, WeekNumber 52 or 53
Find implemented methods - SessionHandlerInterface
Find implemented methods - SessionIdInterface (optional)
Find implemented methods - SessionUpdateTimestampInterface (optional)
Find last unreduced submatrix's top index I0, find QMAX and EMIN.
Find longest dimension
Find max(abs(A(i,j))).
Find next finally block
Find number for named string         *
Find or create the best match
Find our first letter
Find out how many processes are using this semaphore.
Find out if the previous and current characters are "word" characters.
Find out what action to take in case there is a uniqueness conflict
Find out what flags are present
Find out which shared locks are already held by sibling connections.
Find pairs with same sense.
Find pivot and test for singularity.
Find position of last '/'
Find separator in globbing pattern.
Find sqrt(a**2+b**2) without overflow or destructive underflow.
Find starting text node
Find stride of the first non-empty shape
Find the  spot on the list where iStart should be inserted.
Find the ORDER BY term that corresponds to the j-th column of the index and mark that ORDER BY term off
Find the appropriate action for a parser given the non-terminal look-ahead token iLookAhead.
Find the appropriate action for a parser given the terminal look-ahead token iLookAhead.
Find the balanced brace
Find the best snippet of nFToken tokens in column iRead.
Find the best ufunc inner loop, and fill in the dtypes
Find the checksum values to use as input for the recalculating the first checksum.
Find the close bracket so we can overallocate the set.
Find the closest colormap entry for each cell in the update box, given the list of candidate colors prepared by find_nearby_colors.
Find the column for which info is requested
Find the current time (in Universal Coordinated Time).
Find the end of dst and adjust bytes left but don't go past end
Find the end of dst and adjust bytes left but don't go past end.
Find the end of the exponent, keeping track of leading zeros.
Find the end of the year.
Find the first character that has an other case.
Find the first node LF and last node LL on the current level LVL.
Find the first non-"newaxis" dimension.
Find the first occurrence of find in s, ignore case.
Find the first two PmaReaders to compare.
Find the first two iterators to compare.
Find the firstest rowid any synonym points to.
Find the fixed length of a branch       *
Find the iHash'th table
Find the largest relative level number in the table.
Find the last argv string or environment variable within our process memory area.
Find the location of the matching signature
Find the lowest cost path.
Find the maximum compressed chunk size.
Find the memory cell that will be used to store the blob of memory required for this VdbeCursor structure.
Find the minimum and maximum of an integer array
Find the minimum length of subject string.
Find the minimum subject length for a group  *
Find the mode, uid and gid of file zFile.
Find the molad of Tishri closest to this date.
Find the name of the index.  Make sure there is not already another index or table with the same name.
Find the named savepoint.
Find the new singular values.
Find the next possible pointer head.
Find the next row in the Queue and output that row
Find the parent table of this foreign key.
Find the root of the NEAR expression
Find the sibling pages to balance.
Find the smallest page number out of all pages held in the WAL that has not been returned by any prior invocation of this method on the same WalIterator object.
Find the soap object and assign
Find the specified ufunc inner loop, and fill in the dtypes
Find the splittable box with the largest (scaled) volume
Find the splittable box with the largest color population
Find the square root using Newton's algorithm.
Find the start of the next token.
Find the start of the year.
Find the subpaths as sets of connected segments.
Find the table that is to be indexed.
Find the value object that holds the new rowid value.
Find token for encoding
Find token for end of encoded data
FindFirstFile() returns INVALID_HANDLE_VALUE.
Finding a particular key requires reading O(log(M)) pages from the  disk where M is the number of entries in the tree.
Finding the average of two ints needs to be careful about potential overflow (since float to long can use 64 bits) as well as the fact that -1/2 can be 0 or -1 in C89.
Finding the date and time of the new moon (or molad) is the first step.
Finding the first day of the year is the most difficult part.
Finds the earliest holiday which is after 'date'.
Finds the earliest holiday which is on or after 'date'.
Finds the expansion factor, i.e. the square root of the factor by which the affine transform affects area.
Finds the largest unit whose value is nonzero, and for which the remainder for the rest of the units is zero.
Finds the slot corresponding to the key in a hash table.
Finially, delete what is left of the subquery and return success.
Finish committing the transaction to the destination database.
Finish off a string by making sure it is zero-terminated.
Finish the loop through table entries that match term pOrTerm.
Finish the work of sqlite3DbMallocRawNN for the unusual and slower case when the allocation cannot be fulfilled using lookaside.
Finish unless -g was given
Finish up at the end of each pass.
Finish with a read transaction.
Finished with one layer of the tree
Finite column numbers
Fire BEFORE or INSTEAD OF triggers
Fire any BEFORE UPDATE triggers.
Firebird allows SQL statements up to 64k, so bail if it doesn't fit
Firebird only requires single quotes to be doubled if string lengths are used
Firebird users should use the aliases, so future InterBase-specific changes will not affect their code
First (only) step of trigger program
First 256 symbols are for conversion from koi8-r to corresponding charset, second 256 symbols are for reverse conversion, from charset to koi8-r.
First FILE_START event, initializing data
First Mem address for previous GROUP BY
First Mem address for storing current GROUP BY
First Mem of result set
First PmaReader to compare
First WhereLoop to compare
First absolute level for iLangid/iIndex
First allowable cell index
First allowable cell or freeblock offset
First apply back the left singular vector matrices.
First arg to busy callback
First arg to comparison function
First arg to pass to pApi functions
First arg to xCompare()
First argument for conflict handler
First argument for the conflict handler
First argument for xOutput
First argument passed to xCallback()
First argument passed to xConflict
First argument passed to xFilter
First argument to compare function
First argument to disposal method
First argument to link function is the target and hence should go to frompath Second argument to link function is the link itself and hence should go to topath
First argument to pass to xTableFilter
First argument to sqlite3_result_...()
First argument to the function
First argument to xCallback()
First argument to xCmp()
First argument to xCodec...
First argument to xInput
First argument to xLog()
First argument to xPreUpdateCallback
First broadcast the shapes together
First byte encodes the length
First byte in the packet is the field count.
First byte is ERROR_MARKER on error, but otherwise is starting byte of encoded sequence for length.
First byte of available memory space
First byte of buffer to write
First byte of cell content area
First byte of gap between cell pointers and cell content
First byte of the Cell
First byte of the cell content area
First byte of the locking range
First byte past allocated memory
First byte past end of available space
First byte past the iStart buffer
First byte to be locked
First call xBestIndex() with all constraints usable.
First callback argument
First char after - keep uppercase
First char keep uppercase
First char must be alphanumeric
First character of input text
First check for the trivial cases that don't need an iterator
First check if all the inputs can be safely cast to the types for this function
First check that we haven't called match() too many times, or that we haven't exceeded the recursive call limit.
First check to see if the LHS is contained in the RHS.
First check what mode we want (how many suggestions)
First color allocated is background.
First comes an optional integer multiplier
First comes the lower casing table
First comes the text-relocation
First compute 1.0 - BETA**(-P), being careful that the result is less than 1.0 .
First convert the string to UTF-16.
First convert the strings to UTF-16.
First convert the x509 struct back to a DER encoded buffer and let Windows decode it into a form it can work with
First copy the longer fraction.
First copy the root, then field by field adjust the pointers
First count the number of non-zeros in 'self'.
First create the data types for dates and offsets
First create the data types for the dates and the bool output
First create the data types for the dates and the int64 output
First deal with comments.
First determine its size and then apply divide and conquer on it.
First directory starts at offset 8.
First element already in pEntry
First encode the first two (or possibly 1) instructions, and then the last, separately.
First ensure that *all* child nodes are constant and by-val
First field to be combined into the record
First find the axis in question
First frame that may be overwritten
First in array of registers
First in linked list of saved aux-data
First in list of all aux.
First in list of all open cursors
First in list of all tokenizer modules
First increment the byte count.
First initialize the descriptor Notice that if no length is given, we initialize buf_end to the highest possible address.
First inspected character for partial matching.
First instruction of interior of the loop
First iterator to compare
First key value passed to hook
First leaf page number in segment
First leaf to traverse
First list contains canonical mappings, second also includes compatibility mappings.
First lock to acquire or release
First look at the possibilities of just a copy or swap
First look for an exact match
First look for an existing path among best-so-far paths that covers the same set of loops and has the same isOrdered setting as the current path candidate.
First make sure the memory subsystem is initialized, then do the allocation.
First memory cell containing the PRIMARY KEY
First namecontext in the list
First normalize the input parameters so there is no Py_None, and start is moved to stop if stop is unspecified.
First now go through the right singular vector matrices of all the tree nodes top-down.
First of nPk memory cells holding PRIMARY KEY value
First of nPk registers holding PRIMARY KEY value
First of real indices on the table
First off, code is included that follows the "include" declaration in the input grammar file.
First page of the database
First page of the overflow chain
First page of the sector pPg is located on.
First part of index name.
First part of the name of the table or view
First pass calculates a safe size for the pretty print version
First pass, or a non-duplicated name.
First pass: detect the flex items whose min/max constraints trigger
First position in position-list
First register holding data before packing
First register holding data to be sorted
First register in OLD.* array
First register in VUpdate arg array
First register in a range holding values to insert
First register in set passed to OP_VUpdate
First register in temporary register block
First replace any existing entry.
First replace the flex dtype
First reverse the whole array byte by byte...
First rowid on leaf iLeafPgno
First rowid on page indicated by previous field.
First run uses custom filter, second run uses bloom filter
First search for a match amongst the application-defined functions.
First search for an existing entry.
First search the list for an existing lock on this table.
First separate the bound variables, which point to the result set, then destroy the set.
First skip over duplicate rows from prior sub-WHERE clauses, and record the rowid (or PRIMARY KEY) for the current row so that the same row will be skipped in subsequent sub-WHERE clauses.
First skip the bit map if present.
First sorted list to be merged
First term on new page
First time through the loop
First token in coalesced phrase instance
First token of best snippet
First token of current snippet
First token of snippet
First token to include
First try gdRealloc().
First try to append the term to the current node.
First try to decide what to do without reference to lookahead token.
First try to detect BOM: ZERO WIDTH NOBREAK SPACE (FEFF 16) since we have no encoding support for the BOM yet we skip that.
First try to find a  page that does not require a journal-sync (one with PGHDR_NEED_SYNC cleared), but if that is not possible settle for any other  unreferenced dirty page.
First try to find another RBU vfs lower down in the vfs stack.
First unique point has index 0.
First use ftruncate() to set the file size, then write a single byte to the last byte in each block within the extended region.
First validate that the root is correct, and get the metadata string address
First validate that the units have a reasonable GCD
First varint to store in hint
First we attempt to find the largest existing rowid and add one to that.
First we check the nonce.
First we determine the argument type.
First we have the histogram data structure and routines for creating it.
First we have to extract the count of named parentheses from the pattern.
First we need to create a simple view, second we need to create a (possibly invalid) view for the subspace to the fancy index. This procedure is identical.
First we need to figure out the correct type
First we pad on the left.
First we set PCRE_NOTEMPTY_ATSTART and try the match again at the same point.
First write out the key (already tagged with TAG_KEY).
First, 510 dates from a table in "Jewish Calendar Mystery Dispelled" were calculated and compared to the table.
First, T bytes of data from the first SORTER_MAX_MERGE_COUNT PMAs on  disk are merged together.
First, compare signs.
First, ensure the minimum number of matches are present.
First, find the function
First, it is possible to set the Encoding of a string to a new Encoding without changing the internal byte representation of the string, with String#force_encoding.
First, look past the end of the item to see if there is repeat information following.
First, sort out the command line.
First, test if shifting would ruin relative accuracy, and if so set the shift to zero.
First, the terminals, then, starting at YYNTOKENS, nonterminals.
First, try to get user-specific magic file
First, try to scan a handle.
First, try to use the layout cache.
First, we lookup by abbreviation only
First,assign whole value in truncation mode
Fish out the optional data from the extra_data structure, first setting the default values.
Fits in a 64-bit signed integer.
Fix in 1.3: count a vertex only once
Fix items to this schema
Fix the database pointer on page iPtrPage that pointed at iDbPage so that it points at iFreePage.
Fix the location of our shared memory so we can save and restore the hashtable easily
Fix the pointer map entries associated with the right-child of each sibling page.
Fix the pointer-map entries for all the cells that were shifted around.
Fix the various stack variables so that this routine begins comparing at the second field.
Fix this now if it is the case.
Fix up the weekmask from the uninitialized signal value to a proper default.
Fixed by Mao Morimoto 2.0.16
Fixed point to double
Fixed point to integer
Fixnum preserves its sign-bit
Flag indicating iteration started/stopped
Flag not to print the leading zeros as 0.00xxxxEnn
Flag parameters, such as SF_Distinct
Flag that it's done to prevent re-entry.
Flag this so later we can avoid flipping axes
Flag whether the fields are specified out of order
Flags allowed as part of the 4th argument to SegmentReaderIterate()
Flags appropriate for the wctrlFlags parameter of sqlite3WhereBegin() and the WhereInfo.wctrlFlags member.
Flags are keept in volatile registers.
Flags are kept in volatile registers.
Flags argument has multiple related meanings depending on data and strides:  If data is given, then flags is flags associated with data.
Flags associated with this schema
Flags does not set: BIN_IMM_EXTS unnecessary.
Flags for Fts5IndexQuery
Flags for OsSync() (or 0)
Flags for determining allowed stream crypto methods
Flags for sqlite3PagerSetFlags()
Flags for sqlite3_vfs.xOpen()
Flags for sub-WHERE clause
Flags originally passed to sqlite3WhereBegin()
Flags passed as 4th argument to xOpen()
Flags passed as the third argument to sqlite3BtreeCursor().
Flags passed through to VFS open
Flags passed through to sqlite3_vfs.xOpen()
Flags passed through to the VFS
Flags passed to OsOpen()
Flags passed to sqlite3WhereBegin()
Flags passed to sqlite3_vfs.xOpen()
Flags passed to the sqlite3ExprDup() function.
Flags should be one of READER, WRITER, WRCREAT or NEWDB.
Flags that can be added to a token code when it is not being stored in a u8:
Flags that describe this loop
Flags that make up the mask passed to sqlite3PagerAcquire().
Flags that make up the mask passed to sqlite3PagerGet().
Flags that may be passed as the third argument to xTokenize()
Flags that may be passed by the tokenizer implementation back to FTS5 as the third argument to the supplied xToken callback.
Flags this file descriptor was opened with
Flags this file was opened with
Flags to enable/disable optimizations
Flags to pass to OsSync() (or 0)
Flags to pass to mmap()
Flags to pass to open()
Flags to send to sqlite3PagerGet()
Flags to sqlite3BtreeOpen()
Flags to sync db file with (or 0)
Flags to use to sync header writes
Flags used during conversion.
Flatten a path by making a relative path (to .)
Flattening is only attempted if all of the following are true:  (1)  The subquery and the outer query do not both use aggregates.
Flattens both op1 and op2 before dotting.
Flexible type with generic time unit that adapts
Flexible types with expandable size
Flip it back around into forward order and return.
Flip the starting bit in the negative case.
Flip type bit for the XORI below.
Flipped and lower case tables.
Float object (IEEE 754 double) is not enough to represent the return value for CLOCK_REALTIME.
Float to string conversion may be affected by current locale setting.
Float types aren't allowed to be demoted to integer types, but precision loss is allowed.
Float::MAX.next_float and Float::INFINITY.next_float is Float::INFINITY.
Float::NAN.next_float is Float::NAN.
Float::NAN.prev_float is Float::NAN.
Floating or exponential, depending on exponent.
Floating point R/M field with opcode
Floating point has a different arithmetic and is an inexact number.
Floating point number
Floating point operators
Floating point status register.
Flood fill: doesn't do much on a continuously variable tone jpeg original.
Flood with light blue.
Flush all currently outstanding nodes to disk.
Flush all data associated with the SegmentWriter object pWriter to the database.
Flush all output buffers
Flush all unreferenced dirty pages to disk.
Flush any buffered data to disk and clean up the PMA-writer object.
Flush any buffered data to disk and clean up the file-writer object.
Flush any data cached by the writer object to the database.
Flush any data currently held in-memory to disk.
Flush any data in the pending-terms hash table to disk.
Flush any data stored in the in-memory hash tables to the database.
Flush any dirty pages in the pager-cache for any attached database to disk.
Flush if anything is left and unbuffered set
Flush out all the vectors defined by the given uio, then reset it so that it can be reused.
Flush register windows on sparc.
Flush the buffer if needed.
Flush the contents of in-memory hash table iHash to a new level-0  segment on disk.
Flush the contents of memory to a real file on disk.
Flush the contents of pendingTerms to level 0 segments.
Flush the contents of the pending-terms hash-table to the database.
Flush the contents of the pending-terms table to disk.
Flush the current contents of VdbeSorter.list to a new PMA, possibly using a background thread.
Flush the hash table to disk if required
Flush the last leaf page to disk.
Flush the output buffer.
Flush the packet to disk, and reset the accumulator
Flushing may degrade compression so it should be used only when necessary, such as at a request or response boundary for a network stream.
Fold it into the output buffer if it is a token character, or break out of the loop if it is not.
Fold them into the output buffer along the way.
Follow the cycle again, marking it as done
Follow the cycle, copying the data
Followed by (JOURNAL_HDR_SZ - 28) bytes of unused space.
Followed by a buffer containing the UTF-8 representation of the text value.
Followed by one or more changes to the table.
Following URL explains why memset_s is added to the standard.
Following a suggestion from Stan Switzer, the use of longjmp() has been abolished, at the cost of having to provide a unique number for each call to RMATCH.
Following an incremental-merge operation, assuming that the input segments are not completely consumed (the usual case), they are updated in place to remove the entries that have already been merged.
Following any hot-journal  rollback, the contents of the cache are validated by checking the 'change-counter' field of the database file header and discarded if they are found to be invalid.
Following are some macros around the "workhorse" function __daylen__
Following conditional "numdigits++" guarantees the most significant digit as - '1'(bin), '7'(oct) or 'f'(hex) for negative numbers - '0' for zero - not '0' for positive numbers.
Following example calculates number of bits required to represent val in two's complement number, without sign bit.
Following example implements and use Enumerable#wsample.
Following if block primarily used for inserting nodes created via createElementNS
Following the varints are the concatenated position lists for each phrase, in order.
Following two example generate the same result.
Follows an EOF packet, which the client of mysqlnd_read_result_metadata() should consume.
Follows parameter metadata, we have just to skip it, as libmysql does
Follows symbolic links.
Fonts can be used across multiple images
Fool deallocator not to delete these
For  AND or OR nodes, it contains 2 or more entries.
For  each column that is being updated, the corresponding character is set to 'x'.
For  example, the following:  "a OR b AND c NOT d NEAR e"  is equivalent to:  "a OR (b AND (c NOT (d NEAR e)))"
For  the purposes of the paragraphs below, we assume that the array is actually  N elements in size, where N is the smallest power of 2 greater to or equal  to the number of iterators being merged.
For 'O4' and 'O8', let it pass, but raise a deprecation warning.
For 'today', the unit recommended is 'D', for 'now', the unit recommended is 's', and for 'NaT' the unit recommended is 'Y'.
For +start+ and +range+ cases the starting index is just before an element.
For 11 and above, the session pool has its own mechanism for doing so for purity NEW connections.
For 2-d and up, ptr is NOT equivalent to a statically defined 2-d or 3-d array.
For 2-way joins, the 5 best paths are followed.
For 32 bit NPY_TIME_T, the get_localtime() function does not work for years later than 2038, see the comments above get_localtime().
For ALT, we continue with the next alternative, but we have to arrange that the final result from subpattern is SSB_CONTINUE rather than SSB_DONE.
For ARRAY and OBJECT types, the number might be larger.
For ASCII, any character with the high-order bit set is allowed in an identifier.
For BC we have to check whether the key is numeric and use it like this
For COND brackets, we wrap the whole thing in a possessively repeated non-capturing bracket, because we have not invented POS versions of the COND opcodes.
For DETACH, set it to false (expire all existing statements).
For Delaunay triangulations, the point may be inside a different tricoplanar facet.
For EBCDIC, the rules are more complex but have the same end result.
For FTS5_STRING - cluster of phrases
For Go, this means we cannot generate a panic, which cannot be recovered, and so tests fail.
For HTTP/1.0 conforming clients
For HTTP/1.1 conforming clients
For IN operators or if an error occurs, the return value is 0.
For INTKEY tables, the intKey parameter is used.
For IPv6 support, add IPv6 address structure in the union u.
For ISO week years, add ISO_DATE_EXT.
For KEEPORDER, check if we can make a flattened view
For KET, return SSB_CONTINUE: if this is the top level, that indicates failure, but after a nested subpattern, it causes scanning to continue.
For LIKE and GLOB matching on EBCDIC machines, assume that every character is exactly one byte in size.
For MATCH_MATCH, the group has matched, so we restart it with a new subject starting position, remembering that we had at least one match.
For MATCH_NOMATCH, carry on with the alternatives, as usual.
For MS SqlServer compatibility
For MS Visual Studio and Symbian OS, there are problems in initializing these variables to non-local functions.
For MapIterArray, it is possible that there is no fancy index. to support this case, add a a dummy iterator.
For MinGW version 4.x (and higher), check to see if the _USE_32BIT_TIME_T define is required to maintain binary compatibility with the MSVC runtime library in use (e.g. for Windows XP).
For MinGW, check to see if we can include the header file containing its version information, among other things.
For MySQL compatibility
For O the error has to be thrown in __wakeup.
For ON UPDATE, construct the next term of the WHEN clause.
For ONCE brackets, that's all we need to do.
For ONEPASS, no need to store the rowid/primary-key.
For OP_BRA and OP_BRAMINZERO.
For ORDER BY, column number in result set
For Object arrays we need to get and set the imaginary part of each element
For Object arrays, we need to get and set the real part of each element.
For PS - if stmt_store() is performed, thus we don't have a cursor, it will behave just like old-API buffered.
For PS, we leave them in Prepared state
For Python3, allocate the output array as a UNICODE array, so that it will behave as strings properly
For Ruby extensions the filename given may use any shared library extension.
For Ruby methods that take a variable number of arguments, returns -n-1, where n is the number of required arguments.
For SCI you encode the S, then have to remember to skip the C.
For SHOW we don't create (bypasses PS in server) a result set at prepare and thus a connection was missing
For SQL_SUCCESS, the length is in vallen.
For SRT_Output, results are stored in a sequence of registers.
For STRING expressions, the near cluster
For THEN (and THEN_ARG) we pass back the address of the opcode, so that the branch in which it occurs can be determined.
For UNIQUE indexes, verify that only one entry exists with the current key.
For UTF-16 encodings the file open mode must be binary.
For VMS dates, add VMS_EXT.
For WAL mode, OFF continues to mean that no syncs ever occur.
For WinCE, some API function parameters do not appear to be declared as volatile.
For Windows, change all slashes to backslashes in path names.
For X0201 kana, SO/SI, SSO and ESC-(-I methods are supported.
For a  leaf node, the doclist is passed as aDoclist/nDoclist.
For a DEFINE group, required and first character settings are not relevant.
For a DELETE change, all fields within the record except those associated with PRIMARY KEY columns are set to "undefined".
For a K-column index, there will be K+1 integers in the stat column.
For a LEFT OUTER JOIN, generate code that will record the fact that at least one row of the right table has matched the left table.
For a MATCH search, this will be the next row that matches.
For a NOT node, this array always contains 2 entries.
For a Real or Integer, use sqlite3_mprintf() to produce the UTF-8 string representation of the value.
For a Real or Integer, use sqlite3_snprintf() to produce the UTF-8 string representation of the value.
For a SELECT or EXISTS operator, return the register that holds the result.
For a TEMP Schema, only the connection mutex is required.
For a TLS client, the list is directly used in the Supported Elliptic Curves Extension.
For a UNIQUE index, only conflict if the PRIMARY KEY values of the matched index row are different from the original PRIMARY KEY values of this row before the update.
For a WITHOUT ROWID table, create an ephemeral table used to hold all primary keys for rows to be deleted.
For a WITHOUT ROWID table, create an ephermeral table used to hold all primary keys for rows to be deleted.
For a ZERODATA table, the pData and nData are both ignored.
For a an RFC822 time format, add MAILHEADER_EXT.
For a case-insensitive search, set variable cx to be the same as c but in the other case and search the input string for either c or cx.
For a co-routine, change all OP_Column references to the table of the co-routine into OP_Copy of result contained in a register.
For a co-routine, change all OP_Column references to the table of the co-routine into OP_SCopy of result contained in a register.
For a demo, compile with "gcc -W -Wall -o langinfo -D TEST langinfo.c"
For a detailed discussion of BTrees, refer to  Donald E.
For a docid lookup, this routine simply sets the EOF flag.
For a duplicate or later name, carry on.
For a duplicated named group, OP_DNREF and OP_DNREFI are used.
For a forward assertion, we take the reqchar, if set.
For a full-text query or docid lookup, the statement retrieves a single row by docid.
For a given table, there can be one or more read-only cursors or a single read/write cursor but not both.
For a much better antialiased result, the affine function is recommended.
For a multi-column SELECT, the result is stored in a contiguous array of registers and the return value is the register of the left-most result column.
For a new.rowid reference, p1 is set to (n+1), where n is the number of columns in each pseudo-table.
For a non-purgeable cache (a cache used as the storage for an in-memory database) there is really no difference between createFlag 1 and 2.
For a non-repeating atomic group that includes captures, establish a backup point by processing the rest of the pattern at a lower level.
For a non-repeating ket, just continue at this level.
For a normal halt, this should be SQLITE_OK (0).
For a recursion/subroutine call, if its end has been reached, which implies a backward reference subroutine call, we can scan it.
For a reference to any other column in the new.* pseudo-table, p1 is set to (n+2+i), where n and i are as defined previously.
For a relative children, we're either using alignItems (parent) or alignSelf (child) in order to determine the position in the cross axis
For a repeated Unicode property match, there are two extra bytes that define the required property.
For a rowid table, *piDataCur will be exactly one less than *piIdxCur.
For a rowid table, initialize the RowSet to an empty set
For a scalar LHS, it is sufficient to check just the first row of the RHS.
For a sequence of tokens contained in double-quotes (i.e. "one two three") nToken will be the number of tokens in the string.
For a server, the list is used by OpenSSL to determine the set of shared curves.
For a simple insert with data coming from a VALUES clause, the code executes once straight down through.
For a simple insert with data coming from a single-row VALUES clause, the code executes once straight down through.
For a single 1-d operand, guarantee iteration order (scipy used this).
For a single, positive character, get the value into mcbuffer, and then we can handle this with the normal one-character code.
For a single-column UNIQUE index, once we have found a non-NULL row, we know that all the rest will be distinct, so skip  subsequent distinctness tests.
For a table btree (used for rowid tables), only the pX.nKey value of the key is used.
For a table with implicit rowids, append "old._rowid_" to the list.
For a table with the INTKEY flag set, this routine returns the key itself, not the number of bytes in the key.
For a temporary or in-memory database (neither of which require any locks), this variable is always set to EXCLUSIVE_LOCK.
For a two-way OR, attempt to implementation case 2.
For a user friendly message about environment setup
For a varray this is the maximum length of the array
For added safety, we only leave -_.
For additional information on what it means to "expand" a SELECT statement, see the comment on the selectExpand worker callback above.
For additional information see the documentation on the xClose method of the virtual table interface.
For all aliases with an explicit class name, resolve the class now.
For all dirty pages currently in the cache, invoke the specified callback.
For all other cases, raise an exception by leaving newtype unset.
For all other records, zero.
For all the output arrays decide what to do.
For all versions of SQLite through 3.10.0 and probably beyond, the locking bytes (WalCkptInfo.aLock) start at offset 120 and the total header size is 136 bytes.
For an ATTACH statement, set P1 to true (expire this statement only).
For an INSERT, the pkChng boolean indicates whether or not the rowid was explicitly specified as part of the INSERT statement.
For an INTKEY table, only the nKey value of the key is used.
For an SQLITE_ACCESS_EXISTS query, treat a zero-length file as if it does not exist.
For an UPDATE change, all fields except those associated with PRIMARY KEY columns and columns that are modified by the UPDATE are set to "undefined".
For an UPDATE operation, this function is called twice.
For an UPDATE, aChange points to an array of size N, where N is the number of columns in table pTab.
For an UPDATE, the pkChng boolean is true if the true primary key (the rowid for a normal table or the PRIMARY KEY for a WITHOUT ROWID table) might be modified by the UPDATE.
For an XCLASS there is always some additional data
For an anchored pattern, or an unanchored pattern that has a first char, or a multiline pattern that matches only at "line starts", there is no point in seeking a list of starting bytes.
For an anchored pattern, we use the "required byte" only if it follows a variable length item in the regex. Remove the caseless flag for non-caseable bytes.
For an attached db, it is an error if the encoding is not the same as sqlite3.enc.
For an encrypted database, the situation is more complex:  bytes 24..39 of the database are white noise.
For an error that occurs before that point, jump to error_out.
For an error, produce a 'NaT' string
For an example see Fiddle::Function
For an in-memory database, make sure the original page continues to exist, in case the transaction needs to roll back.
For an index btree (used for indexes and WITHOUT ROWID tables), the key is an arbitrary byte sequence stored in pX.pKey,nKey.
For an index btree, save the complete key content
For an index scan, make sure referenced columns are actually in the index.
For an insert, it must be called once for each token in the new document.
For an internal node, both aDoclist and nDoclist must be passed 0.
For an ordinary non-repeating ket, just continue at this level.
For anchored or unanchored matches, there may be a "last known required character" set.
For any given WHERE  clause, the cursor numbers might not begin with 0 and they might contain gaps in the numbering sequence.
For any index, get a view of the subspace into the original array.
For any other minimum, carrying on will result in NOMATCH.
For any other type of expression, return 1.
For anything else, we wrap the entire repeated item inside OP_ONCE brackets.
For anything other than nomatch or partial match, just return the code.
For applying back the right singular vector factors, go to 170.
For applying back the right singular vector factors, go to 50.
For arbitrary objects that have a "dtype" attribute
For array subclasses use their __array_wrap__ method, or the input's wrapping if not available
For array_richcompare's benefit -- see the long comment in get_ufunc_arguments.
For assigning database names to pTable
For astronomical as well as ceremonial reasons, the start of a new year may be delayed until a day or two after the new moon causing years to vary in length.
For automatic code detection, nkf assumes no X0201 kana in Shift_JIS.
For back-ward compatability -- Not recommended
For backward compatibility
For backwards compatibility of the rollback journal file format, we cannot reduce the effective sector size below 512.
For basic classes and modules, this is the name.
For best performance, an attempt is made to guess at the byte-order using C-preprocessor macros.
For bigger ndim and opposite-strided 1D data, we make a temporary copy of 'src' if 'src' and 'dst' overlap.'
For binary data it is truncated to fieldsize bytes.
For binary ops that have compound assignment operators
For bitmask tests, testcase() can be used to make sure each bit is significant and used at least once.
For broadcasting allocated arrays
For builtin type, hash relies on : kind + byteorder + flags + type_num + elsize + alignment
For byte_sequence_compare.
For calculation on original values
For calculation with var_num cast to double
For capturing groups we have to check the group number back at the start and if necessary complete handling an extraction by setting the offsets and bumping the high water mark.
For caseless UTF-8 mode when UCP support is available, check whether this character has more than one other case.
For chaining headers.
For changes to rows  in tables that are not attached to the Session object, the filter is called to determine whether changes to the table's rows should be tracked or not.
For char data, the length of the returned string will be longreadlen - 1
For chunk size nChunkSize, return the number of bytes that should be allocated for each FileChunk structure.
For client use (any custom purpose)
For column zero in this document there are two matches at positions 3 and 10 (5-2 and 9-2+3).
For columns use the column name name
For comparing with previous entry
For compatibility reason, implemeted interface is not checked
For compatibility we just ignore this setting.
For compatibility with MS SQL Server
For compatibility with auto-callouts, we allow a callout to be specified before a condition that is an assertion.
For compatibility, we limit the number of captured strings in the same way as pcre_exec(), so that the user gets the same result with and without JIT.
For complete POSIX semantics, add POSIX_SEMANTICS.
For completeness and backward compatibility, (*UTFn) is supported in the relevant libraries, but (*UTF) is generic and always supported.
For complicated case, use EquivTypes (for now)
For conditions of distribution and use, see the accompanying README file.
For conditions that are assertions, check the syntax, and then exit the switch.
For connection option
For consistency (since sqlite3_step() was called), set the database error in this case as well.
For consistency, this restriction is applied to all platforms.
For constraints of the form X IN (...) this routine sets up a loop that will iterate over all values of X.
For content (text) nodes, determine the dimensions based on the text contents.
For convenience, we use the same bit definitions as in chartables: 0x04   decimal digit 0x08   hexadecimal digit Then we can use ctype_digit and ctype_xdigit in the code.
For custom operations on an rbuVfs-file.
For dates outside this range, SQLite attempts to map the year into an equivalent year within this range, do the calculation, then map the year back.
For datetime/timedelta, only treat casts moving towards more precision as safe.
For days or coarser, returns a datetime.date.
For debugging purposes, record when the mutex subsystem is initialized and uninitialized so that we can assert() if there is an attempt to allocate a mutex while the system is uninitialized.
For debugging use only:
For deletions, we write an empty doclist (varint(docid) varint(POS_END)), for updates we simply write the new doclist.
For descending pending seg-readers only
For description of Comp see Q_Sort.
For details, see the file COPYING.
For detecting the page size.
For digits or letters, do an initial lookup in a table.
For dtype's with objects, copyswapn Py_XINCREF's src and Py_XDECREF's dst.
For each  row visited, the callback function passed as the fourth argument  is invoked.
For each CTE in the WITH clause....
For each FROM-clause subquery, add Column.zType and Column.zColl information to the Table structure that represents the result set of that subquery.
For each MATCH_ONE, skip one character in the  test string.
For each aggregate function
For each bit set in fixed_bit_masks, what the value is for this instruction.
For each change for which there is a compatible table, an attempt is made  to modify the table contents according to the UPDATE, INSERT or DELETE  change.
For each codepoint in the zIn/nIn string, this function checks if the sqlite3FtsUnicodeIsalnum() function already returns the desired result.
For each color in colormap, find: 1.
For each color selected by find_nearby_colors, compute its distance to the center of each cell in the box.
For each column to be updated, make sure we have authorization to change that column.
For each column used in source tables
For each column, the number of rows in the table for which the column contains at least one instance of the phrase.
For each cursor required, also allocate a memory cell.
For each entry in the regex array, get the entry
For each entry in the search array, get the entry
For each entry, append it to the given path and see if the file exists.
For each expression in the list
For each field, add the key + descr + offset to l
For each found increment the counter.
For each indentation level, append the BLOCK-END token.
For each iteration, variable iOff is set to the byte offset of the destination page.
For each length, check that the remaining bytes start with the 0x80 bit set and not the 0x40 bit.
For each match, a result is generated and either added to the result array or passed to the block.
For each matching starting delimiter, we increment nesting level, and decrement it for each matching ending delimiter.
For each member a reader and writer method is created similar to Module#attr_accessor.
For each output operand, check if it has non-zero size, and assign the identity if it does.
For each phrase node found, the supplied callback function is invoked.
For each pipe, find an instruction that fits.
For each repetition we must add 1 to the length for BRAZERO and for all but the last repetition we must add 2 + 2*LINKSIZE to allow for the nesting that occurs.
For each row found, increment either the deferred or immediate foreign key constraint counter.
For each segment, if it is not closed, look ahead for the next connected segment.
For each subject entry, convert it to string, then perform replacement and add the result to the return_value array.
For each subpattern, insert it into the appropriate array.
For each subpattern, insert it into the subpatterns array.
For each subsequent  call the nBytes parameter is ignored and a pointer to the same blob of memory returned.
For each subsequent argument, make it a reference, increase refcount, and add it to the end of the array
For each subsequent docid, the varint stored is the difference between the current and previous docid (a positive number - since the list is in ascending order).
For each such occurence the dimension of the secular equation problem is reduced by one.
For each such occurrence the dimension of the secular equation problem is reduced by one.
For each such occurrence the order of the related secular equation problem is reduced by one.
For each such table, the iterator visits, in order:  the table itself,  each index of the table (zero or more points to visit), and a special "cleanup table" state.
For each table column, if the column is the i'th column of the  index, then the corresponding array entry is set to (i+1).
For each table that is not excluded by the filter callback, this function  tests that the target database contains a compatible table.
For each trigger that is not part of the temp-db schema, add a clause to the WHERE  expression being built up in zWhere.
For each unique primary key value, data is only recorded once - the first time a row with said primary key is inserted, updated or deleted in the lifetime of the session.
For eigenvalues only, call DSTERF.
For eigenvalues only, call SSTERF.
For eigenvectors, first call DSTEDC to generate the eigenvector matrix, WORK(INDWRK), of the tridiagonal matrix, then call DORMTR to multiply it by the Householder transformations stored in A.
For eigenvectors, first call SSTEDC to generate the eigenvector matrix, WORK(INDWRK), of the tridiagonal matrix, then call SORMTR to multiply it by the Householder transformations stored in A.
For enhanced security the client or server can verify the certificate of its peer.
For errors, it can be some other value.
For every "*" that occurs in the column list, insert the names of all columns in all tables.
For every character in the password add the entire password.
For example 'inifile' uses this to allow faster access when the key was already found using firstkey/nextkey.
For example an empty list can be cast to an integer array, however it will default to a float one.
For example if this expression:  ...
For example the  implementation of an SQL aggregate step callback may not use the parameter indicating the number of arguments passed to the aggregate, if it knows that this is enforced elsewhere.
For example the gunzip utility can use the `-N` flag which will set the resultant file's mtime to the value in the header.
For example the implementation of an SQL aggregate step callback may not use the parameter indicating the number of arguments passed to the aggregate, if it knows that this is enforced elsewhere.
For example the key created in the next is used in throughout these examples.
For example those parameters only used in assert() statements.
For example,   fts3PrefixCompress("abc", 3, "abcdef", 6)   // returns 3 fts3PrefixCompress("abX", 3, "abcdef", 6)   // returns 2 fts3PrefixCompress("abX", 3, "Xbcdef", 6)   // returns 0
For example, "CST" is used at America/Chicago (-06:00), America/Havana (-05:00), Asia/Harbin (+08:00), Australia/Darwin (+09:30) and Australia/Adelaide (+10:30).
For example, "numpy.max" would be a good name for NumPy's max function.
For example, (E) above is indexable on tables P, Q, and R.
For example, +:T_ARRAY+ is the number of arrays.
For example, +Process.clock_getres(:GETTIMEOFDAY_BASED_CLOCK_REALTIME)+ returns 1.0e-06 which means 1 microsecond, but actual resolution can be more coarse.
For example, Berkeley DB appends '.db', and GNU gdbm uses two physical files with extensions '.dir' and '.pag'.
For example, Britain converted in 1752, The USSR in 1918 and Greece in 1923.
For example, Enumerator#next returns the next value of the iterator or raises StopIteration if the Enumerator is at the end.
For example, GNU/Linux returns a value based on jiffies and it is monotonic.
For example, Process::CLOCK_REALTIME is defined as +:GETTIMEOFDAY_BASED_CLOCK_REALTIME+ when clock_gettime() is not available.
For example, Socket::AF_INET is usable as well as Socket::Constants::AF_INET.
For example, a dot product of two zero-length arrays will be a scalar, which has size one.
For example, an RSA cipher suite can only be chosen when an RSA certificate is available.
For example, an application may allow a user to enter arbitrary SQL queries for evaluation by a database.
For example, an application that does not care about crash recovery or rollback might make the open of a journal file a no-op.
For example, assume the following func() it reads data from file.
For example, assuming index p is on t1(a, b), and the SQL query is:  ...
For example, assuming that index p is on t1(a):  ...
For example, change "PRIMARY KEY(a,b,a,b,c,b,c,d)" into just "PRIMARY KEY(a,b,c,d)".
For example, consecutive even numbers and odd numbers can be chunked as follows.
For example, consider table t1(a,b,c,d,e,f) with index i1(a,b,c).
For example, each thread requries its own UnpackedRecord object to unpack records in as part of comparison operations.
For example, either of the following:  (bracketed expression) NEAR phrase phrase NEAR (bracketed expression)  Return an error in either case.
For example, files may not be portable between PowerPC and 386, or between 32 and 64 bit Linux.
For example, for an "ID" terminal symbol, the minor type might be the name of the identifier.
For example, hard resource limits are not restorable.
For example, huge OCTET STRINGs are preferably sent in smaller-sized chunks, each at a time.
For example, if Ruby is built and installed in /usr/local, returns "/usr/local/etc".
For example, if a malloc fails while resizing a hash table, this  is completely recoverable simply by not carrying out the resize.
For example, if an IO error occurs while performing a rollback,  the contents of the page-cache may be left in an inconsistent state.
For example, if an exception was thrown in a function and when the function's local variable destruction results in a destructor being called.
For example, if new functions or collating sequences are registered or if an authorizer function is added or changed.
For example, if pPhrase refers to the "def ghi" phrase, then *paPoslist points to the position list associated with phrase "abc".
For example, if passed 235 - "LATIN SMALL LETTER E WITH DIAERESIS" - return 65 ("LATIN SMALL LETTER E").
For example, if the WHERE clause expression used these VDBE cursors:  4, 5, 8, 29, 57, 73.
For example, if the database file is "/home/user1/config.db" then the file that is created and mmapped for shared memory will be called "/home/user1/config.db-shm".
For example, if the following SQL is executed:  CREATE ..
For example, if the input is "foo bar" then only "bar" would be passed to the completion Proc.
For example, if the iterator points to a table created as:  CREATE TABLE t1(a, b, c, PRIMARY KEY(b, a DESC)) WITHOUT ROWID  this function returns:  PRIMARY KEY("b", "a" DESC)
For example, if the query were:  ...
For example, if zType is 'BLOBINT',  SQLITE_AFF_INTEGER is returned.
For example, in most cases you can use this to access +libc+ functions, or ruby functions like +rb_str_new+.
For example, in order to generate a vector per input value for a numerical gradient, you pass in ndim*itemsize for itemsize, then add another dimension to the end with size ndim and stride itemsize.
For example, in the above,  sample 2 is the first sample of a block of N samples, so at first it  appears that it should be 1 field in size.
For example, it may generate a non ASCII string on Japanese Windows.
For example, it might allocate any require mutexes or initialize internal data structures.
For example, iteration over ChangeLog entries can be implemented as follows:  # iterate over ChangeLog entries.
For example, level 1 rejects parameters offering below 80 bits of security, such as ciphersuites using MD5 for the MAC or RSA keys shorter than 1024 bits.
For example, methods depending on the +fsync+ or +fork+ system calls may raise this exception if the underlying operating system or Ruby runtime does not support them.
For example, on the 32bit POSIX OS, ten or twenty thousands Fiber can be created.
For example, quantities 16 and 17 are both represented by a LogEst of 40.
For example, receiving signal and so on.
For example, referencing +File+ inside +YourClass+ will find the top-level File class.
For example, statement journals that are not too big will be held entirely in memory, thus reducing the number of file I/O calls, and more importantly, reducing temporary file creation events.
For example, suppose a SrcList initially contains two entries: A,B.
For example, system start up time, process start up time, the Epoch, etc.
For example, testcase() can be used to make sure boundary values are tested.
For example, the 'xlTop' constant of Excel is changed to 'XlTop' in WIN32OLE.
For example, the following method processes deferred asynchronous events immediately.
For example, the right-most sibling might be completely empty.
For example, there are 4 possible timing (a), (b), (c) and before calling read_func().
For example, to access String object or Array object, fine grain lock must be locked every time.
For example, to assemble an RBU enabled VFS stack that uses both zipvfs and  multiplexor (error checking omitted):  Create a VFS named "multiplex" (not the default).
For example, to store the position-list:  4 9 113  the three varints:  6 7 106  are encoded.
For example, we can create a new thread separate from the main thread's execution using ::new.
For example, when inserting data into a table with auto-generated integer keys, the VDBE layer invokes sqlite3BtreeLast() to figure out the  integer key to use.
For example, when no other thread has been started:  Thread.stop  This will raises the following exception:  ThreadError: stopping only thread note: use sleep to stop forever
For example, your process may trap the USR1 signal and use it to toggle debugging, and may use TERM to initiate a controlled shutdown.
For example:  abc NEAR/5 "def ghi"  Parameter nNear is passed the NEAR distance of the expression (5 in the example above).
For example:  col IS NULL col IS NOT NULL coalesce(col, 1) CASE WHEN col THEN 0 ELSE 1 END
For example: "Y collate NOCASE op X" becomes "X op Y" because any collation sequence on the left hand side of a comparison overrides any collation sequence  attached to the right.
For extensions from SunOS, add SUNOS_EXT.
For finder-function F, two objects are created:  (1) The real finder-function named "FImpt()".
For finder-funtion F, two objects are created:  (1) The real finder-function named "FImpt()".
For flockfile() on Linux
For following code (kept for historical record only) shows an unrolling for the 3- and 4-byte varint cases.
For full prefix support, method (3) may be preferred.
For generalized ufuncs, we can't do buffering, so must COPY or UPDATEIFCOPY.
For generators the by-ref flag refers to yields, not returns
For generic units, the num is ignored
For getmap, this would be the result, for setmap this would be the arrays to get from.
For given directory path, substitute it to valid index file.
For global built-in functions (ex: substr(), max(), count()) a pointer to this structure is held in the sqlite3BuiltinFunctions object.
For good performance, LWORK must generally be larger.
For good performance, LWORK should generally be larger.
For hard partial matching, we then return immediately.
For hash-table collisions
For help in interpreted the obscure C code in the function definition, see the header comment on the previous function.
For image rotations, the optimized versions have a lazy antialiasing for the edges of the images.
For index b-trees, it is the root page of the associated table.
For index btrees, this will be the size of the key.
For index tables, pIdxKey is used and intKey is ignored.
For infix functions (LIKE, GLOB, REGEXP, and MATCH) use the second argument, not the first, as the argument to test to see if it is a column in a virtual table.
For insert, update etc.
For instance while *.txt is a pretty valid filename on EXT3, it's invalid on NTFS.
For instance, +ARGF.read+ will return the contents of _file1_ followed by the contents of _file2_.
For instance, if during iteration some Python code copied an array pointing into the buffer, it will get None values for its references after this.
For instance, it may make more sense to have a 2.5k leaf node rather than splitting into 2k and .5k nodes.
For intKey leaf pages, check that the min/max keys are in order with any left/parent/right pages.
For intKey pages, check that the keys are in order.
For integer types --- make sure at least a long is used for add and multiply reduction to avoid overflow
For internal nodes it is the node number of a child page.
For iterating through doclist index
For joins of 3 or more tables, track the 10 best paths
For json_each() path and root are the same so fall through into the root case
For leaf nodes the integer is the rowid of a record.
For leaf pages, the coverage check will occur in the same loop as the other cell checks, so initialize the heap.
For leaf pages, the min-heap has already been initialized and the cells have already been inserted.
For length() and typeof() functions with a column argument, set the P5 parameter to the OP_Column opcode to OPFLAG_LENGTHARG or OPFLAG_TYPEOFARG respectively, to avoid unnecessary data loading.
For lengths its absolutely safe.
For long words without digits, 10 bytes are taken from each end.
For looping over PmaReader objects
For looping over all elements of the table
For looping over all siblings
For looping over bytes of pCell
For looping over compound SELECTs in pSubq
For looping over existing elements
For looping over existing file IDs
For looping over expression in a list
For looping over indices
For looping over indices of the table
For looping over pList
For looping over pages
For looping over result columns
For looping over sibling connections
For looping over tables in pDb
For looping over tables in pSrc
For looping through SELECT statements
For looping through nTerm phrase terms
For looping through segments
For making a better error message on coercion error
For many things, we may have leading zeros in a number NUM.
For maximum portability, it is recommended that applications always invoke sqlite3_initialize() directly prior to using any other SQLite interface.
For maximum security, a fresh, random salt should be generated for each stored password.
For maximum security, the longest possible should be chosen.
For memory-mapped files, use the buffer interface.
For metasequences that actually match a character, we disable the setting of a first character if it hasn't already been set.
For methods written in C, returns -1 if the call takes a variable number of arguments.
For microseconds or coarser, returns a datetime.datetime.
For microseconds or coarser, returns a datetime.timedelta.
For min() it returns (void *)db, where db is the sqlite3* database pointer.
For mode (1), PGroup.mutex is NULL.
For mode (2) there is only a single PGroup which is the pcache1.grp global variable and its mutex is SQLITE_MUTEX_STATIC_LRU.
For more details consult the documentation for #bsearch.
For more details see the comment where this table is used.
For more info on the specification and history, see http://www.xmlrpc.org.
For more information on the IJG JPEG software (and JPEG documentation, etc.), see ftp://ftp.uu.net/graphics/jpeg/.
For most applications, sqlite_stat1 provides all the statisics required for the query planner to make good choices.
For most applications, sqlite_stat1 provides all the statistics required for the query planner to make good choices.
For most architectures, this is a no-op.
For most test cases, CORRUPT_DB is set to false using a special sqlite3_test_control().
For multiplatform code, get_localtime() should never be used outside of this range.
For mutual recursions we keep a chain on the stack.
For nanosecond resolution, 3 digits (2 bytes) are used.
For negated classes, we build the map as usual, then invert it at the end.
For net-snmp prior to 5.4
For newline before label
For nodes with no children, use the available values if they were provided, or the minimum size as indicated by the padding and border sizes.
For non-COND brackets, we modify the BRA code and use KETRPOS.
For non-duplicate names, give an error if the number is duplicated.
For non-fixed-length newline cases,
For non-lambda procs, the maximum is the number of non-ignored parameters even though there is no actual limit to the number of parameters
For non-negative values of P4 only the lower 4 bits are significant.
For non-possessive ONCE brackets, all we need to do is to set the KET.
For non-root nodes, the first 2 bytes are left unused.
For normal operation N should be 0.
For now, if you're binding output columns, it's better to use LAZY or BOUND fetches if you want to shave off those cycles
For now, it is merely a place-holder.
For now, just get the size every time
For now, just store the requested type.
For now, this only reverts archive comment changes.
For now, this simply calls the internal sqlite3ErrStr() function.
For now, we impose an arbitrary limit to avoid runaway swapping when large files are passed thru.
For now, we just bail if we get a mustUnderstand header intended for us.
For now, we return with a failure code to prevent the underlying file's details from being used instead.
For numbers that are too large to represent as a long, this function returns a zero.
For numpy 1.9 the diagonal view is not writeable.
For objects, we call their get_gc handler (by default 'zend_std_get_gc') to get the object properties to scan.
For opcode without a special possessified version, wrap the item in ONCE brackets.
For operations where all constraints can be checked before any changes are made to the database, it is never necessary to undo a write and the checkpoint should not be set.
For operators other than UNION ALL we have to make sure that the ORDER BY clause covers every term of the result set.
For optimization, we don't check async errinfo queue if the queue and the thread interrupt mask were not changed since last check.
For options used by XMLRPC_VALUE funcs that otherwise do not have parameters for options.
For other groups, scan the branches.
For other types of values, the type byte is followed by:  Text values: A varint containing the number of bytes in the value (encoded using UTF-8).
For other values of COMPQ, IQ is not referenced.
For other values of COMPQ, Q is not referenced.
For other values of COMPQ, U is not referenced.
For other values of COMPQ, VT is not referenced.
For outputs, also search the inputs for a matching type_num to copy instead of creating a new one, similarly to preserve metadata.
For pcretest program.
For peak efficiency, put the most frequently used function last.
For people running under terminal services, GetWindowsDirectory will return their personal Windows directory, so lets add the system windows directory too
For perfect rounding, must get sin(a + pi/4) and sin(a - pi/4).
For pg_connect_poll()
For pg_connection_status()
For pg_result_error_field() field codes
For pg_result_status() return value
For pg_result_status() return value type
For pg_set_error_verbosity()
For pg_transaction_status()
For php_next_utf8_char()
For platforms with incomplete ANSI defines.
For portability, don't call this before execute().
For position independent code, t9 must contain the function address.
For possible first char
For possible last char
For possible values please cf.
For private caches  this is always 1.
For production code the fts5yytestcase() macro should be turned off.
For production code the yytestcase() macro should be turned off.
For quantity X, the value stored is 10*log2(X).
For read, if the entry is marked unmodified, it is assumed that the file pointer, if present, is opened for reading
For read-only cursors the wrFlag argument is always zero.
For reference, here is the program that computed the T values.
For rmin and rmax iterators.
For scanning through pCell
For session-pool using connections, the underlying connection is released to its session pool.
For setting microseconds
For shape reporting on error
For shared caches it may be 1 or greater.
For shared-cache mode
For singletons, we show information on the thing we're attached to as well.
For sizes 2 through MX_SMALL, inclusive
For sizes MX_SMALL+1 and larger
For small tables, the  Hash.ht table is never allocated because if there are few elements in the table, it is faster to do a linear search than to manage the hash table.
For some Windows sub-platforms, the _beginthreadex() / _endthreadex() functions are not available (e.g. those not using MSVC, Cygwin, etc).
For some database files, the same underlying database cache might be  shared between multiple connections.
For some opcodes, there are special alternative opcodes for this case.
For some reason you have to re-enable this callback every bloody time
For some reason, the macros don't work properly if an expression is given as the argument to RRETURN when the heap is in use.
For specifying flags and permission of file creation explicitly, an array is used instead.
For stack depth measure.
For storing the record being decoded
For str_getcsv() support
For string fields, the precision determines the maximum number of characters to be copied from the string.
For strings and unicodes, take the larger size
For stuff needed to implement the P1003.2 date command, add POSIX2_DATE.
For such expressions, Expr.op is set to TK_COLUMN and Expr.iTable is the integer cursor number of a VDBE cursor pointing to that table and Expr.iColumn is the column number for the specific column.
For table b-trees, this is just the root page of the b-tree being read or written.
For table btrees, this will be the amount of data.
For table-valued-functions, transform the function arguments into new WHERE clause terms.
For tables that do not have an external PRIMARY KEY, it also means the same PRIMARY KEY declaration.
For tables with implicit rowids - RBU_PK_EXTERNAL and RBU_PK_NONE, append the text ", old._rowid_" to the returned value.
For temporary filename, if necessary.
For temporary files the effective sector size is always 512 bytes.
For testing purpose only
For testing purposes, we sometimes want to preserve the state of PRNG and restore the PRNG to its saved state at a later time, or to reset the PRNG to its initial state.
For testing, remove later.
For text blocks, for example, this is the width of the widest word.
For text forms, the host parameter index is found by scanning the perpared statement for the corresponding OP_Variable opcode.
For text forms, the host parameter index is found by scanning the prepared statement for the corresponding OP_Variable opcode.
For that matter, if the lock offset ever changes from its initial design value of 120, we need to know that so there is an assert() to check it.
For that reason, we always use the nRec value in the header.
For that reason, we will omit this optimization for now.
For the +start+ and +range+ cases the starting index is just before a character and an index matching the string's size.
For the OP_NoConflict opcode, take the jump if any of the input fields are NULL, since any key with a NULL will not conflict
For the SHARED lock, the PENDING will be released.
For the back references, the values are negative the reference number.
For the default locale php.ini setting
For the default, pass in 0.
For the dimension truncation check below
For the entry that cursor pCur is point to, return as many bytes of the key or data as are available on the local b-tree page.
For the first 63 columns (columns 0-62), the corresponding bit is set within the colUsed mask if the column may be required by SQLite.
For the generalized ufunc, we get the loop right away too
For the local hostname obtained via gethostname which is different from the dns-related MAXHOSTNAMELEN constant above
For the main database file, the database name is "main".
For the main database, set sqlite3.enc to the encoding of the main database.
For the max() aggregate, the sqlite3_user_data() function returns (void *)-1.
For the moment, this source module just uses the default resync method provided by the JPEG library.
For the nodes on bottom level of the tree, solve their subproblems by DLASDQ.
For the nodes on bottom level of the tree, solve their subproblems by SLASDQ.
For the other POSIX classes (ascii, xdigit) we are going to fall through to the non-UCP case and build a bit map for characters with code points less than 256.
For the other items, it sets their sizes by forcing their min/max constraints to trigger again.
For the pSelect parameter holds the values to be inserted for the first two forms shown above.
For the purpose of this function, 'word' is defined as a locale dependent string containing alphabetic characters, which also may contain, but not start with "'" and "-" characters.
For the purposes of immediate FK constraints, the OR REPLACE conflict resolution is considered to delete rows before the new row is inserted.
For the purposes of the EP_ConstFunc flag, date and time functions and other functions that change slowly are considered constant because they are constant for the duration of one query
For the purposes of the comparison, ignore it.
For the purposes of the comparison, ignore the rowid field at the end of each record.
For the purposes of the previous paragraph, a foreign key CASCADE, SET NULL or SET DEFAULT action is considered a trigger.
For the purposes of this comparison, EOF is considered greater than any other key value.
For the purposes of this function, a double-quoted string (ex: "abc") is considered a variable but a single-quoted string (ex: 'abc') is a constant.
For the purposes of this routine, a cursor is any cursor that is capable of reading or writing to the database.
For the purposes of this routine, a cursor is any cursor that is capable of reading or writing to the databse.
For the purposes of this routine, disable the mutex
For the right singular vector matrix, four types of orthogonal matrices are involved: (1R) The right singular vector matrix of the remaining matrix.
For the same reason the EP_Collate flag is not commuted.
For the second form, pList is NULL and pSelect is a pointer to the select statement used to generate data for the insert.
For the sessions module anyhow.
For the source, an expanded path must be used (in ZTS an other thread could have changed the CWD).
For the specifics of the algorithm, see http://wiki.php.net/rfc/rounding
For the target the exact string given by the user must be used, relative or not, existing or not.
For the ucal_setDateTime() function, this is the 'date'  value
For them, possessive_quantifier is always FALSE at this stage.
For these machines you must define RIGHT_SHIFT_IS_UNSIGNED.
For these reasons this case is also commented out.
For this debugging implementation, we *always* make a copy of the allocation into a new place in memory.
For this implementation we'll use the highest depth encountered.
For this path res2 must be exactly 0 or 1
For this purpose, the lunar cycle is assumed to be 29 days 12 hours and 793 halakim.
For this reason the direct basedir check against the glob query is senseless on windows.
For this reason the prefix is rather better cut off.
For this reason, if an error occurs in the stat() call here, it is ignored and -1 is returned.
For this reason, it is simplest to treat this case separately, as otherwise the code gets far too messy.
For this reason, scoring is designed to pick plans that "do the least harm" if the estimates are inaccurate.
For this reason, the default name prefix is changed to be "sqlite"  spelled backwards.
For this reason, the division that implements proxy locking is located much further down in the file.
For this reason, we cannot store actual data in the bytes used for locking.
For this reason, we need to restore the working value and also the values of the final offsets, in case they were set by a previous iteration of the same bracket.
For this reason, we will put it inside this file after the stop function.
For this reason, xclass gets set TRUE above when uchar_classdata is emptied, and that's why this code is the way it is here instead of just doing a test on class_uchardata below.
For this routine, we assume the UTF8 string is always zero-terminated.
For those that remain as they are, the corresponding character of the rbu_control value should be set to '.'.
For thread-local variables, please see #thread_variable_set and #thread_variable_get.
For tiled fill, the use of a flag buffer is mandatory.
For timedelta, an average years and months value is used.
For tokenizers with no "unicode" modifier, the set of token characters is the same as the set of ASCII range alphanumeric characters.
For tracing reduce actions, the names of all rules are required.
For tracing shifts, the names of all terminals and nonterminals are required.
For traits self etc refers to the using class, not the trait itself
For traits this check is delayed until after trait binding
For types equivalent up to endianness, can return either
For undefined and NULL values, the field consists only of the single type byte.
For units finer than microseconds, returns an integer.
For use by application
For use by application VFS
For use by built-in VFS
For use by extension VFS
For use with loading xml
For very long strings (greater than 1GiB) the value returned might be less than the true string length.
For virtual tables, hidden columns are optional - they are updated by RBU if present in the input table, or not otherwise.
For virtual tables, only (1) is performed.
For write modes close data stream first to signal EOF to server
For z/OS, config.h is forced
For zero-width data types there's nothing to write
Force RBU to save its state to disk.
Force UID and PWD to be set in the DSN
Force an SQLITE_TOOBIG error.
Force config.h in z/OS
Force exponential buffer size growth as long as it does not overflow, to avoid having to call this routine too often
Force fmt to a valid value since we don't return anything.
Force recalc of window size for serial terminals
Force skipping escape sequences on windows due to the ambiguity with path backslashes
Force the stride to zero when the shape is 1, sot that the broadcasting works right.
Force xDisconnect calls on all virtual tables
Forcefully null terminate the filename.
Forces SQLITE_CORRUPT return below
Foreign key constraint
Foreign key for which pTab is the child
Foreign key index for pFKey
Foreign key processing is only required if the operation modifies one or more child or parent key columns.
Foreign key processing is required if the  table in question is either the child or parent table for any  foreign key constraint.
Foreign key support may not be enabled or disabled while not in auto-commit mode.
Foreign key to find index for
Foreign key to get action for
Forever loops are also detected at runtime, so those that occur in conditional subpatterns will be picked up then.
Forks child process, and returns the process ID in the parent process.
Form  A  when A is stored in the lower triangle.
Form  A  when A is stored in the upper triangle.
Form  C * H, where H has order n.
Form  H * C, where H has order m.
Form  y  when A is stored in lower triangle.
Form  y  when A is stored in upper triangle.
Form 1:  Analyze everything
Form 2 analyzes all indices the single database named.
Form 2 rebuilds all indices in all databases that use the named collating function.
Form 2:  Analyze the database or table named
Form 3 analyzes all indices associated with the named table.
Form 3: Analyze the fully qualified table name
Form P', determined by a call to CGEBRD to reduce a k-by-n matrix
Form P', determined by a call to DGEBRD to reduce a k-by-n matrix
Form P', determined by a call to SGEBRD to reduce a k-by-n matrix
Form P', determined by a call to ZGEBRD to reduce a k-by-n matrix
Form Q, determined by a call to CGEBRD to reduce an m-by-k matrix
Form Q, determined by a call to DGEBRD to reduce an m-by-k matrix
Form Q, determined by a call to SGEBRD to reduce an m-by-k matrix
Form Q, determined by a call to ZGEBRD to reduce an m-by-k matrix
Form inv(U)*inv(U)' or inv(L)'*inv(L).
Form pixel value + error, and range-limit to 0..MAXJSAMPLE.
Form right-hand side.
Form the KeyInfo object from this ExprList
Form the first column of (G-w(1)) (G-w(2)) .
Form the initial difference increments
Form the z-vector which consists of the last row of Q_1 and the first row of Q_2.
Format and write a message to the log if logging is enabled.
Format for sqlite_stat3:  The sqlite_stat3 format is a subset of sqlite_stat4.
Format of sqlite_stat1:  There is normally one row per index, with the index identified by the name in the idx column.
Format of sqlite_stat2:  The sqlite_stat2 is only created and is only used if SQLite is compiled with SQLITE_ENABLE_STAT2 and if the SQLite version number is between 3.6.18 and 3.7.8.
Format string for SQL
Format string translator  Translate PyArray_Descr to a PEP 3118 format string.
Format the number using a fixed-length buffer.
FormatMessage returns 0 on failure.
Formatting escapes and wrapping text in a string before printing it.
Forms 3 and 4 rebuild the named index or all indices associated with the named table.
Forms a linked list of all cursors
Formulate a statement to DELETE a row from database db.
Formulate and prepare a SELECT statement to retrieve a row from table zTab in database zDb based on its primary key.
Formulate and prepare a statement to UPDATE a row from database db.
Formulate and prepare an INSERT statement to add a record to table zTab.
Formulate and prepare an SQL statement to query table zTab by primary key.
Formulate the zContentExprlist text
Fortran SGEMV override
Fortran routines (needs no initialization/setup function)
Fortran-order inner loop for unravel_index
Fortunately this doesn't actually matter in practice.
Fortunately this is really a rare case
Fortunately too, there is general agreement that codes 0x00 through 0x3F represent control characters, 0x41 a nonbreaking space, and the remainder printing characters.
Fortunately, SEEK_SET is defined to be zero by the standard.
Fortunately, no need to shift.
Fortunately, though, all versions of EBCDIC, including this one, agree on most of the printing characters that also appear in (7-bit) ASCII.
Forward client's request to the target
Forward declaration for the function that does the work of the virtual table module xCreate() and xConnect() methods.
Forward declaration of methods
Forward declaration required by incrVacuumStep().
Forward declaration to account for the circular dependency between functions fts3SegmentMerge() and fts3AllocateSegdirIdx().
Forward declarations of structure
Forward declarations of structures.
Forward reference required as the vdbeIncrMergeInit() and vdbePmaReaderIncrInit() routines are called mutually recursively when building a merge tree.
Forward references to VFS helper methods used for memory mapped files
Forward references to VFS helper methods used for temporary files
Forward references to VFS methods
Forward references to internal structures
Forward references to structures
Forward references to structures used for WAL
Forward search if possible.
Found a character that has a single other case.
Found a non empty slot No workers should be writing at the moment.
Found a wp with the same name.
Found no documentation how the defined behaviour is when this function fails
Found the named subpattern.
Found verb, exit loop
Four of six logical functions used in SHA-256:
Four of six logical functions used in SHA-384 and SHA-512:
Fourth parameter is passed 0.
Fourth parameter is passed the value 2.
Frame size of the current alternative.
Frame to read from WAL file
Frames beyond mxSafeFrame might overwrite database pages that are in use by active readers and thus cannot be backfilled from the WAL.
Frank assures us that the code here works for him.
Frank writes that some Linux kernels offer floating point hardware emulation that uses only 32-bit mantissas instead of a full  48-bits as required by the IEEE standard.
Free Willy (here be crashes)
Free a MatchinfoBuffer object allocated using fts3MIBufferNew()
Free a PendingList object allocated by fts3PendingListAppend().
Free a WhereInfo structure
Free a doclist-index iterator object allocated by fts5DlidxIterInit().
Free a dynamic memory block.
Free a dynamic mutex.
Free a hash table object.
Free a page object allocated by pcache1AllocPage().
Free a parsed fts3 query expression allocated by sqlite3Fts3ExprParse().
Free a prior allocation
Free a single node of an expression tree.
Free a snapshot handle obtained from sqlite3_snapshot_get().
Free all PgHdr objects stored in the Pager.pMmapFreelist list.
Free all allocated memory and reset the JsonString object back to its initial state.
Free all allocations associated with the iterator passed as the  second argument.
Free all components of the Fts3Phrase structure that were allocated by the eval module.
Free all memory allocations associated with the tree pTree.
Free all memory allocations in the pParse object
Free all memory and close all files.
Free all memory associated with foreign key definitions attached to table pTab.
Free all memory associated with the Vdbe passed as the second argument, except for object itself, which is preserved.
Free all memory belonging to the PmaReader object passed as the argument.
Free all memory belonging to the VdbeSorterIter object passed as the second argument.
Free all resources associated with the IncrMerger object indicated by the first argument.
Free all resources held by the schema structure.
Free all resources owned by the object indicated by argument pTask.
Free allocated data belonging to a glob_t structure.
Free allocated memory
Free allocated structure
Free an Fts3MultiSegReader allocated by fts3TermSegReaderCursor().
Free an RbuState object allocated by rbuLoadState().
Free an allocated buffer obtained from pcache1Alloc().
Free an allocated buffer obtained from sqlite3PageMalloc().
Free an iterator allocated by walIteratorInit().
Free an outstanding memory allocation.
Free an sqlite3_value object
Free any SQLite statements used while processing the previous object
Free any allocations associated with the writer.
Free any buffer allocated by pBuf.
Free any cursor components allocated by sqlite3VdbeSorterXXX routines.
Free any existing lookaside buffer for this handle before allocating a new one so we don't have to have space for  both at the same time.
Free any memory held.
Free any old pages that were not reused as new pages.
Free any outstanding Savepoint structures.
Free any overflow pages associated with the given Cell.
Free any prepared statements held
Free any prior content in *pz and replace it with a copy of zNew.
Free as much memory as possible from the pager.
Free blocks must be in ascending order.
Free here what should not be seen by the next script
Free idxStr using sqlite3_free() if true
Free internal references if an Object array
Free is possible because the user could have lost reference.
Free last row's zvals
Free memory allocated for DNS records.
Free memory immediately, rather than waiting on sqlite3_finalize()
Free memory previously obtained from sqlite3Malloc().
Free memory that might be associated with a particular database connection.
Free object contents, but don't free objects themselves, so they show up as leaks
Free old dimensions and strides
Free previous memory.
Free previous message if any
Free shutdown functions
Free slots in the allocator used to divide up the buffer provided using the SQLITE_CONFIG_PAGECACHE mechanism.
Free slots in the allocator used to divide up the global page cache buffer provided using the SQLITE_CONFIG_PAGECACHE mechanism.
Free space for next result
Free store obtained by get_substring     *
Free store obtained by get_substring_list    *
Free temporary memory and return success
Free the MergeEngine object passed as the only argument.
Free the buffer for the token groups.
Free the colset passed as the second argument before returning.
Free the configuration object passed as the only argument.
Free the connection p
Free the contents of the With object passed as the second argument.
Free the expression node object passed as the only argument.
Free the expression object passed as the only argument.
Free the in-memory buffers.
Free the indentation structure
Free the input references
Free the iterator object passed as the second argument.
Free the list of FileChunk structures headed at MemJournal.pFirst.
Free the list of sorted records starting at pRecord.
Free the list of table objects passed as the first argument.
Free the m object and return SQLITE_CORRUPT.
Free the object when the reference count reaches zero.
Free the phrase object passed as the only argument.
Free the phrase object passed as the second argument.
Free the position-lists accumulated for each deferred token above.
Free the previous value and save the new one
Free the processed event
Free the session object itself.
Free the space allocated for aOp and any p4 values allocated for the opcodes contained within.
Free this WITH object at the end of the parse
Free this when deleting the vdbe
Free up as much memory as possible from the page cache
Free up as much memory as possible from the page cache.
Free up as much memory as possible.
Free up as much memory as we can from the given database connection.
Free up the array of auxiliary databases
FreeBSD 8.2 AMD64 causes machine stack overflow only with PTHREAD_STACK_MIN.
FreeBSD 8.2.0, NetBSD 5 and MacOS X Snow Leopard doesn't allocate fds by recvmsg with MSG_PEEK.
FreeBSD and DragonFly floating point precision fix
FreeBSD has struct cmsgcred and struct sockcred.
FreeBSD require a first (i.e. addr) argument of mmap(2) is not NULL if MAP_STACK is passed.
FreeBSD's backtrace may show _start and so on
FreeBSD, DragonFly BSD, NetBSD
Freeblocks occur in increasing order.
Freetype 2.1 or better
Freetype 2.1.3 or better
Freeze default_internal
Freeze only string object.
From "Hacker's Delight"
From FreeBSD's lib/libstand/printf.c
From GMP documentation for mpz_sizeinbase(): The returned value will be exact or 1 too big.
From Ruby 2.2, memsize_of(obj) returns a memory size includes sizeof(RVALUE).
From SLJIT point of view, this is not an issue.
From another point of view, "indexable" means that the subterm could potentially be used with an index if an appropriate index exists.
From another view, these class members describe the "state" of the pager, while other class members describe the "configuration" of the pager.
From appnote.txt: This entry in the Local header MUST include BOTH original and compressed file size fields.
From f2c.h, this should be safe unless fortran is set to use 64 bit integers.
From http://en.wikipedia.org/wiki/UTF16
From release 8.00 this will always return TRUE because NOPARTIAL is no longer ever set (the restrictions have been removed).
From release 8.34 is is also correct for Perl space, because Perl added VT at release 5.18.
From the C99 standard, section 7.19.6: The exponent always contains at least two digits, and only as many more digits as necessary to represent the exponent.
From the original manpage: -------------------------- XERBLA is an error handler for the LAPACK routines.
From these three bits of data, all of the curve connectivity follows.
From this it follows that get_localtime() is only guaranteed to work correctly on all platforms for years between 1970 and 2038 for 32bit NPY_TIME_T and years higher than 1970 for 64bit NPY_TIME_T.
From this point on down, the normal indentation rules are restored.
From this the length of the year can be determined and thus the length of each month.
From this, construct a list of files/directories that are "in" the directory represented by dir
Fsync is also called on the database file if (and only if) the entire WAL content is copied into the database file.
Fsync is called on the WAL before writing content out of the WAL and into the database.
Fsync the WAL header if true
Fsync the rollback journal before writing this page to the database
Fts3 cursor for current query
Fts3MultiSegReader to modify
Fts3SegReader object to return
Fts5 Backend to iterate within
Fts5 guarantees that this function will be invoked exactly once for each successful call to xCreate().
Fts5 table configuration
Fts5SegIter.iLeafOffset currently points to the first byte of a position-list size field.
Fts5SegIter.iLeafOffset currently points to the first byte of the  "nSuffix" field of a term.
Fts5SegIter.rowid is set, but nPos and bDel are not.
Fts5SegWriter.btterm currently contains the first term on page iBtPage.
Fudge the offset values to achieve this, unless we're already at the end of the string.
Fudge the value of "called" so that when it is inserted as an offset below, what it actually inserted is the reference number of the group.
Full path to database file
Full pathname of this file
Full version string of nkf
Full-text index search
Full-text search using a MATCH operator on a non-docid column.
Full-text search using a MATCH operator.
Full-text table handle
Fully buffered: fill partially full buffer, if any, and then flush.
Fully expand all decompositions before generating the output file.
Fully qualified names are always default refs
FuncDef wrapper for detachFunc() or attachFunc()
FuncDestructor.nRef is set to  the number of FuncDef objects created (either 1 or 3, depending on whether or not the specified encoding is SQLITE_ANY).
FuncDestructor.nRef is set to the number of FuncDef objects created (either 1 or 3, depending on whether or not the specified encoding is SQLITE_ANY).
Function arguments array
Function arguments that may change
Function call context
Function call was converted into builtin instruction
Function called for non-persistent connections.
Function calls may dtor the return value after it has already been written -- allow direct assignment only for types where a double-dtor does not matter.
Function context - put error messages here
Function fnmatch() as specified in POSIX 1003.2-1992, section B.6.
Function getNextNode(), which is called by fts3ExprParse(), may itself call fts3ExprParse().
Function has WSDL description
Function has no WSDL description
Function local variables
Function lower() converts to lower-case (abc).
Function name (nul-terminated)
Function parameter nKeep contains the value of the "nPrefix" field (if there was one - it is passed 0 if this is the first term in the segment).
Function return value
Function sqlite3Error() should be used during statement execution (sqlite3_step() etc.).
Function sqlite3TableLock() is used to add entries to the list.
Function to call when busy
Function to call when waiting for locks
Function to delete compiled regexp objects.
Function to invoke on each commit
Function to possibly overload
Function to query the hash-table of tokenizers (see README.tokenizers).
Function to reinitialize pages
Function unixMutexHeld() is used to assert() that the global mutex  is held when required.
Function upper() converts its input to upper-case (ABC).
Function used to reclaim memory
Function winShmMutexHeld() is used to assert() that the global mutex  is held when required.
Function winShmMutexHeld() is used to assert() that the global mutex is held when required.
Function/Class/Method definitions
Function: gdAffineConcat Concat (Multiply) two affine transformation matrices.
Function: gdAffineEqual Determines whether two affine transformations are equal.
Function: gdAffineFlip Flip an affine transformation horizontally or vertically.
Function: gdAffineIdentity Set up the identity matrix.
Function: gdAffineInvert Find the inverse of an affine transformation.
Function: gdAffineRectilinear Determines whether the affine transformation is axis aligned.
Function: gdAffineRotate Set up a rotation affine transform.
Function: gdAffineScale Set up a scaling matrix.
Function: gdAffineShearVertical Set up a vertical shearing matrix, columns are untouched.
Function: gdAffineTranslate Set up a translation matrix.
Function: gdClearErrorMethod
Function: gdImageThresholdCrop Crop an image using a given color.
Function: gdSetErrorMethod
Function: gdTransformAffineCopy Applies an affine transformation to a region and copy the result in a destination to the given position.
Function: gdTransformAffineGetImage Applies an affine transformation to a region and return an image containing the complete transformation.
Function: getPixelInterpolated Returns the interpolated color value using the default interpolation method.
Functions called by the storage module as part of integrity-check.
Functions exported from Go.
Functions for accessing sqlite3_file methods
Functions for accessing sqlite3_vfs methods
Functions generated by lemon from fts5parse.y.
Functions only needed on narrow builds of Python for converting back and forth between the NumPy Unicode data-type (always 4-bytes) and the Python Unicode scalar (2-bytes on a narrow build).
Functions sqlite3Error() or sqlite3ErrorWithMsg() should be used during statement execution (sqlite3_step() etc.).
Functions that return pointers to these methods are also created.
Functions to deserialize a 16 bit integer, 32 bit real number and 64 bit integer.
Functions to serialize a 16 bit integer, 32 bit real number and 64 bit integer.
Functions to support testing and debugging.
Functions used only by user authorization logic
Functions used to configure a Pager object.
Functions used to manage pager transactions and savepoints.
Functions used to obtain and release page references.
Functions used to query pager state and configuration.
Functions used to truncate the database file.
Further calls to 'VirtualAlloc' will "commit" pages, meaning they will be bound to physical memory.
Further calls to Cipher#update or Cipher#final will return garbage.
Further details of this method are found in Zlib::GzipWriter.new and Zlib::GzipFile.wrap.
Further details of this method are in Zlib::GzipReader.new and ZLib::GzipFile.wrap.
Further information about sqlite_stat3 follows the sqlite_stat4 description.
Further modified for PHP
Further tuning should be possible.
Furthermore, A is even, i.e. has last  bit zero, and SAVEC is odd.
Furthermore, A is even, i.e. has last bit zero, and SAVEC is odd.
Furthermore, GDBM mixes in the Enumerable module, thus providing convenient methods such as #find, #collect, #map, etc.
Furthermore, because the temporary table has no indices, the WHERE clause on the outer query cannot be optimized.
Furthermore, the IN is in a WHERE clause and that we really want to iterate over the RHS of the IN operator in order to quickly locate all corresponding LHS elements.
Furthermore, the P3 value must be the same as every other ReopenIdx or OpenRead for the same cursor number.
Future releases of SQLite may require this.
Future revisions and derivatives of this source code must acknowledge Facebook Inc.
Future versions of SQLite may add additional static mutexes.
Future versions of SQLite may change the behavior of sqlite3_column_type() following a type conversion.
Future versions of SQLite might make use of additional special filenames that begin with the ":" character.
Future versions of SQLite might provide greater resolution on the profiler callback.
Future versions of SQLite might understand additional query parameters.
G       (input) DOUBLE PRECISION The (1,2) element of the 2-by-2 matrix.
G       (input) DOUBLE PRECISION The second component of vector to be rotated.
G       (input) REAL The (1,2) element of the 2-by-2 matrix.
G       (input) REAL The second component of vector to be rotated.
G(2) G(1) and CUNGBR returns P**H as an N-by-N matrix.
G(2) G(1) and DORGBR returns P**T as an N-by-N matrix.
G(2) G(1) and SORGBR returns P**T as an N-by-N matrix.
G(2) G(1) and ZUNGBR returns P**H as an N-by-N matrix.
G(j) could overflow, set GROW to 0.
G: New-style sqlite3_rtree_query_callback()
GC by CAPI, METHOD, and so on.
GC for closed generators doesn't need an allocated buffer
GC must be done after read
GC must be done before reading session data.
GC tuning environment variables  RUBY_GC_HEAP_INIT_SLOTS - Initial allocation slots.
GC would cause such a reference in the root buffer.
GC: shouldn't put before above line
GCC does not define the offsetof() macro so we'll have to do it ourselves.
GCC might have just copying the problem from a prior compiler.
GCC with -pedantic-errors says that C90 does not allow a void* to be cast into a pointer to a function.
GCC workaround for invalid code generation with -O2.
GCC works hard to eliminate a seemingly unnecessary call to malloc, so we actually use the memory we allocate.
GC_DEBUG: enable to embed GC debugging information.
GC_ENABLE_INCREMENTAL_MARK
GD 2.0 supports 8 bits of color resolution per channel and 7 bits of alpha channel resolution.
GD 2.0 supports RGBA truecolor and will read and write truecolor PNGs.
GD2 image format types
GDBM_CLOEXEC is available since gdbm 1.10.
GD_SUCCESS on success or GD_FAILURE
GENERATED CODE ENDS HERE (mkportersteps.tcl)
GENERATED CODE STARTS HERE (mkportersteps.tcl)
GENERIC UFUNC USING ITERATOR
GETTIMEOFDAY_BASED_CLOCK_REALTIME is used for CLOCK_REALTIME if clock_gettime is not available.
GIF Image compression - modified 'compress'  Based on: compress.c - File compression ala IEEE Computer, June 1984.
GIF Specific routines
GIF(sm) is a Service Mark property of CompuServe Incorporated.
GIFCOMPR.C       - GIF Image compression routines  Lempel-Ziv compression based on 'compress'.
GIFENCODE.C    - GIF Image compression interface  GIFEncode( FName, GHeight, GWidth, GInterlace, Background, Transparent, BitsPerPixel, Red, Green, Blue, gdImagePtr )
GIL retake at end of function or if nditer path required
GIVCOL (input) INTEGER array, dimension ( LDGCOL, 2 ) Each pair of numbers indicates a pair of rows/columns involved in a Givens rotation.
GIVCOL (input) INTEGER array, dimension ( LDGCOL, 2 * NLVL ).
GIVCOL (input) INTEGER array, dimension (2, N lg N) Each pair of numbers indicates a pair of columns to take place in a Givens rotation.
GIVCOL (output) INTEGER array, dimension ( LDGCOL, 2 ) Each pair of numbers indicates a pair of columns to take place in a Givens rotation.
GIVCOL (output) INTEGER array, dimension (2, N) Each pair of numbers indicates a pair of columns to take place in a Givens rotation.
GIVNUM (input) DOUBLE PRECISION array, dimension ( LDGNUM, 2 ) Each number indicates the C or S value used in the corresponding Givens rotation.
GIVNUM (input) DOUBLE PRECISION array, dimension ( LDU, 2 * NLVL ).
GIVNUM (input) DOUBLE PRECISION array, dimension (2, N lg N) Each number indicates the S value to be used in the corresponding Givens rotation.
GIVNUM (input) REAL array, dimension ( LDGNUM, 2 ) Each number indicates the C or S value used in the corresponding Givens rotation.
GIVNUM (input) REAL array, dimension ( LDU, 2 * NLVL ).
GIVNUM (input) REAL array, dimension (2, N lg N) Each number indicates the S value to be used in the corresponding Givens rotation.
GIVNUM (output) DOUBLE PRECISION array, dimension ( LDGNUM, 2 ) Each number indicates the C or S value to be used in the corresponding Givens rotation.
GIVNUM (output) DOUBLE PRECISION array, dimension (2, N) Each number indicates the S value to be used in the corresponding Givens rotation.
GIVNUM (output) REAL array, dimension ( LDGNUM, 2 ) Each number indicates the C or S value to be used in the corresponding Givens rotation.
GIVNUM (output) REAL array, dimension (2, N) Each number indicates the S value to be used in the corresponding Givens rotation.
GIVPTR (input) INTEGER The number of Givens rotations which took place in this subproblem.
GIVPTR (input) INTEGER array, dimension ( N ).
GIVPTR (input) INTEGER array, dimension (N lg N) Contains a list of pointers which indicate where in GIVCOL a level's Givens rotations are stored.
GIVPTR (output) INTEGER Contains the number of Givens rotations which took place in this subproblem.
GIVPTR (output) INTEGER The number of Givens rotations which took place in this subproblem.
GIVPTR(i+1) - GIVPTR(i) indicates the number of Givens rotations.
GLOB is always case sensitive.
GLOBALS hijack attempt, reject parameter
GLOB_MAGCHAR: Set in gl_flags if pattern contained a globbing character.
GLOB_NOMAGIC: Same as GLOB_NOCHECK, but it will only append pattern if it did not contain any magic characters.
GLOSSARY  dehiyyot         The set of 4 rules that determine when the new year starts relative to the molad.
GMST is then the sidereal time at Greenwich at any
GMT is the older way of referring to these baseline times but persists in the names of calls on POSIX systems.
GMT) for the time value p where p is in UTC.
GMT), shift it to show local time.
GNU Readline:: http://www.gnu.org/directory/readline.html libedit::      http://www.thrysoee.dk/editline/  Reads one inputted line with line edit by Readline.readline method.
GNU Unix Standard tar archive
GNU/Hurd doesn't fully support getcontext, setcontext, makecontext and swapcontext functions.
GNU/Linux, FreeBSD, NetBSD, OpenBSD, MacOS X, Solaris
GOTO label for end of CASE stmt
GOTO label for next WHEN clause
GOVERNMENT USE: If you are acquiring this software on behalf of the U.S.
GREEK SMALL LETTERs IOTA/MU
GREY   (GC_GREY)    - Possible member of cycle.
GROUP BY and DISTINCT do not require rows to appear in any particular order as long as equivalent rows are grouped together.
GROUP BY and DISTINCT do not require rows to appear in any particular order as long as equivelent rows are grouped together.
GROUP BY xyz  The second form is preferred as a single index (or temp-table) may be  used for both the ORDER BY and DISTINCT processing.
GROUP BY xyz ORDER BY xyz  The second form is preferred as a single index (or temp-table) may be  used for both the ORDER BY and DISTINCT processing.
GROUPBY cover of ORDERBY
Gamma is ignored, and there is no support for text annotations.
Gap for removed NPY_FR_B
Gather entropy into this buffer
Gather last/first rows of appropriate eigenblocks into center of Z
Gather statistics on the sizes of memory allocations.
Gather the complete text of the CREATE INDEX statement into the zStmt variable
Gather the results for matchinfo directives 'y' and 'b'.
Gather the schema version number for checking
Gaussian elimination with complete pivoting.
Gcc gets the wrong answer for NaN/0 unless both sides are NaN.
Gdbm allows the user to store, retrieve, and delete data by key.
General Implementation Functions
General Interfaces ******  Initialize and shutdown the page cache subsystem.
General assignment with python indexing objects.
General callback for OpenSSL verify
General case, use recursion.
General function for indexing a NumPy array with a Python object.
General heap allocations
Generally, a Cipher algorithm is categorized by its name, the key length in bits and the cipher mode to be used.
Generally, dbm libraries will not read each other's files.
Generally, you *SHOULD NOT* use this library if you do not know about the MRI implementation.
Generate "Explanation" text for a WhereTerm.
Generate P**H in A (Cworkspace: need 2*M, prefer M+M*NB) (Rworkspace: 0)
Generate P**H in A (Cworkspace: need 2*M, prefer M+M*NB) (Rworkspace: need 0)
Generate P**T in A (Workspace: need M*M+2*M, prefer M*M+M+M*NB)
Generate Q in A (CWorkspace: need 2*N, prefer N+N*NB) (RWorkspace: 0)
Generate Q in A (CWorkspace: need M*M+2*M, prefer M*M+M+M*NB) (RWorkspace: 0)
Generate Q in A (Cworkspace: need 2*N, prefer N+N*NB) (Rworkspace: need 0)
Generate Q in A (Workspace: need M*M+2*M, prefer M*M+M+M*NB)
Generate Q in A (Workspace: need N*N+2*N, prefer N*N+N+N*NB)
Generate Q in U (CWorkspace: need N+M, prefer N+M*NB) (RWorkspace: 0)
Generate Q in U (Workspace: need N*N+2*N, prefer N*N+N+N*NB)
Generate Q in VT (CWorkspace: need M+N, prefer M+N*NB) (RWorkspace: 0)
Generate Q in VT (Workspace: need M*M+2*M, prefer M*M+M+M*NB)
Generate Q(ilo+1:ihi,ilo+1:ihi)
Generate VDBE code for a BEGIN statement.
Generate VDBE code for a COMMIT statement.
Generate VDBE code for a ROLLBACK statement.
Generate VDBE code for the statements inside the body of a single  trigger.
Generate VDBE code that prepares for doing an operation that might change the database.
Generate a CREATE TABLE statement appropriate for the given table.
Generate a Token object from a string
Generate a co-routine to run the SELECT
Generate a co-routine to run the SELECT.
Generate a coroutine to evaluate the SELECT statement on  the right - the "B" select
Generate a coroutine to evaluate the SELECT statement to the left of the compound operator - the "A" select.
Generate a human-readable description of a Select object.
Generate a human-readable description of a WITH clause.
Generate a human-readable description of a the Select object.
Generate a human-readable explanation of an expression list.
Generate a human-readable explanation of an expression tree.
Generate a select expression tree to enforce the limit/offset  term for the DELETE or UPDATE statement.
Generate a single line of output for the tree, with a prefix that contains all the appropriate tree lines
Generate a single row of result
Generate a subroutine that outputs a single row of the result set.
Generate a subroutine that outputs the current row of the A select as the next output row of the compound select.
Generate a subroutine that outputs the current row of the B select as the next output row of the compound select.
Generate a subroutine that will fill an ephemeral table with the content of this subquery.
Generate a subroutine that will reset the group-by accumulator
Generate a subroutine to run when the results from select A are exhausted and only data in select B remains.
Generate a subroutine to run when the results from select B are exhausted and only data in select A remains.
Generate a textual representation for an anchor.
Generate additional code that tests the RHS for NULLs.
Generate an ORDER BY or GROUP BY term out-of-range error.
Generate an empty scalar event.
Generate an error message when a SELECT is used within a subexpression (example:  "a IN (SELECT * FROM table)") but it has more than 1 result column.
Generate an expression tree to implement the WHERE, ORDER BY, and LIMIT/OFFSET portion of DELETE and UPDATE statements.
Generate auto-index WhereLoops
Generate code for a BETWEEN operator.
Generate code for a DELETE FROM statement.
Generate code for a boolean expression such that a jump is made to the label "dest" if the expression is false but execution continues straight thru if the expression is true.
Generate code for a boolean expression such that a jump is made to the label "dest" if the expression is true but execution continues straight thru if the expression is false.
Generate code for a comparison operator.
Generate code for a single equality term of the WHERE clause.
Generate code for all sub-queries in the FROM clause
Generate code for an IN expression.
Generate code for an UPDATE of a virtual table.
Generate code for an unconditional jump to instruction iDest
Generate code for scalar subqueries used as a subquery expression, EXISTS, or IN operators.
Generate code for the ANALYZE command.
Generate code for the REINDEX command.
Generate code for the SELECT statement given in the p argument.
Generate code for the left and right SELECT statements.
Generate code for the start of the iLevel-th loop in the WHERE clause implementation described by pWInfo.
Generate code for the trigger program associated with trigger p on  table pTab.
Generate code into the current Vdbe to evaluate the given expression.
Generate code into this VDBE
Generate code into this VM
Generate code into this virtual machine
Generate code that checks the left-most column of index table iCur to see if it contains any NULL entries.
Generate code that deals with a rowid collision
Generate code that evaluates the given expression and puts the result in register target.
Generate code that evalutes the given expression and puts the result in register target.
Generate code that executes if the new index entry is not unique
Generate code that initializes multiple registers to string or integer constants.
Generate code that pushes the value of every element of the given expression list into a sequence of registers beginning at target.
Generate code that runs whenever the GROUP BY changes.
Generate code that will   (1) acquire a lock for table pTab then (2) open pTab as cursor iCur.
Generate code that will assemble an index key and stores it in register regOut.
Generate code that will cause the most recent index analysis to be loaded into internal hash tables where is can be used.
Generate code that will continue to the next row if  the IN constraint is not satisfied
Generate code that will do an analysis of a single table in a database.
Generate code that will do an analysis of an entire database
Generate code that will erase and refill index *pIdx.
Generate code that will evaluate expression pExpr and store the results in register target.
Generate code that will extract the iColumn-th column from table pTab and store the column value in a register.
Generate code that will increment the schema cookie.
Generate code that will load into register regOut a value that is appropriate for the iIdxCol-th column of index pIdx.
Generate code that will push the record in registers regData through regData+nData-1 onto the sorter.
Generate code that will tell the VDBE the declaration types of columns in the result set.
Generate code that will tell the VDBE the names of columns in the result set.
Generate code to cause the string zStr to be loaded into register iDest
Generate code to check constraints and generate index keys and do the insertion.
Generate code to construct the Index object for an automatic index and to set up the WhereLevel object pLevel so that the code generator makes use of the automatic index.
Generate code to destroy the database record of the trigger.
Generate code to do an analysis of all indices associated with a single table.
Generate code to do constraint checks prior to an INSERT or an UPDATE on table pTab.
Generate code to drop a table.
Generate code to drop and reload the internal representation of table pTab from the database, including triggers and temporary triggers.
Generate code to evaluate an expression and store the results into a register.
Generate code to extract the value of the iCol-th column of a table.
Generate code to handle collisions
Generate code to implement the "ALTER TABLE xxx RENAME TO yyy"  command.
Generate code to make sure the file format number is at least minFormat.
Generate code to move content from registers iFrom...iFrom+nReg-1 over to iTo..iTo+nReg-1.
Generate code to put the value of this select in a memory cell and record the number of the memory cell in iColumn.
Generate code to remove the index and from the master table
Generate code to remove the table from the master table on disk.
Generate code to return a single integer value.
Generate code to return a single text value.
Generate code to scan the ephemeral table and call VUpdate.
Generate code to skip over the creation and initialization of the transient index on 2nd and subsequent iterations of the loop.
Generate code to start a transaction on each used database and to verify the schema cookie on each used database.
Generate code to take the intersection of the two temporary tables.
Generate code to this VDBE
Generate either a changeset (if argument bPatchset is zero) or a patchset (if it is non-zero) based on the current contents of the session object passed as the first argument.
Generate elementary reflector G(i) to annihilate A(i,i+1:n)
Generate elementary reflector G(i) to annihilate A(i,i+2:n)
Generate elementary reflector H(i) to annihilate A(1:i-2,i)
Generate elementary reflector H(i) to annihilate A(i+1:m,i)
Generate elementary reflector H(i) to annihilate A(i+2:m,i)
Generate elementary reflector H(i) to annihilate A(i+2:n,i)
Generate elementary reflector H(i) to annihilate A(i,i+1:n)
Generate ilim digits, then fix them up.
Generate key Note - the include_path must be the last element in the key, since in itself, it may include colons (which we use to separate different components of the key)
Generate loop termination code.
Generate new record numbers semi-randomly
Generate or use a private key
Generate orthogonal matrix in VL (Workspace: need 3*N-1, prefer 2*N+(N-1)*NB)
Generate orthogonal matrix in VR (Workspace: need 3*N-1, prefer 2*N+(N-1)*NB)
Generate reflection P(i) to annihilate A(i,i+1:n)
Generate reflection P(i) to annihilate A(i,i+2:n)
Generate reflection Q(i) to annihilate A(i+1:m,i)
Generate reflection Q(i) to annihilate A(i+2:m,i)
Generate set of allowed solutions
Generate the beginning of the loop used for WHERE clause processing.
Generate the case mapping data.
Generate the code to do the search.
Generate the combining class data.
Generate the composition data.
Generate the ctype data.
Generate the decomposition data.
Generate the elementary reflector H(i) to annihilate A(k+i+1:n,i)
Generate the end of the WHERE loop.
Generate the first part of the vector Z and move the singular values in the first part of D one position backward.
Generate the next event.
Generate the number data.
Generate the right singular vectors.
Generate the second part of the vector Z.
Generate the subroutine return
Generate the text of a WHERE expression which can be used to select all temporary triggers on table pTab from the sqlite_temp_master table.
Generate the value of the surrogate pair.
Generate the verts and codes from the subpaths.
Generate unitary matrix in VL (CWorkspace: need 2*N-1, prefer N+(N-1)*NB) (RWorkspace: none)
Generate unitary matrix in VR (CWorkspace: need 2*N-1, prefer N+(N-1)*NB) (RWorkspace: none)
Generated temporary filenames are always double-zero terminated for use by sqlite3_uri_parameter().
Generates a warning - but it always works
Generates a warning if multiple values are passed to a proc that expects just one (previously this silently converted the parameters to an array).
Generating CHECK constraints or inserting into partial index
Generating code for the first alternative.
Generator return types are handled separately
Generic Aggregated conversions
Generic error, common for all classes under OpenSSL module
Generic new array creation routine.
Generic units can only be used to represent NaT
Generic units change to the destination with no conversion factor
Generic units don't have a conversion
Generic units have no representation as a string in this form.
Get ID (key) of value or NULL
Get a NULL terminated version of the new table name.
Get a VDBE for the given parser context.
Get a bit from CR, all other bits are zeroed.
Get a dtype transfer function
Get a function for contiguous dst of the subarray type
Get a function for contiguous src of the subarray type
Get a list of all dirty pages in the cache, sorted by page number
Get a list of tag directives (if any)
Get a new copy of it unless it's already a copy
Get a page from the pager and initialize it.
Get a page from the pager.
Get a pointer the VDBE under construction, allocating a new VDBE if one does not already exist
Get a reference to pPage1 of the database file.
Get a reference to the function we're calling
Get a string size long enough for any datetimes we're given
Get a string-size estimate of the input.
Get a token with the impersonated user.
Get all the arguments
Get all the values needed for the inner loop
Get an ASCII string data type, adapted to match the UNICODE one
Get an EXCLUSIVE lock on the database file.
Get an appropriate name for the column
Get and print the digits of the fraction part.
Get arguments and do error checking
Get argv from the global symbol table.
Get astronomical twilight
Get best match possible.
Get buffer info from the global dictionary
Get character value, increment pointer
Get constant option value
Get current strength and return it.
Get data buffer from interface specification
Get dimensions from shape tuple
Get dtype from type string
Get either an array object we can copy from, or its parameters if there isn't a convenient array available.
Get either the array or its parameters if it isn't an array
Get entry and increase reference count
Get entry for this user-defined type
Get error object globals
Get everything else as option/offset value
Get file pointer corresponding to the pipe (file) opened
Get function parameters and do error checking
Get function parameters and do error-checking.
Get it from sqlite3Malloc instead.
Get keyword output and other arguments.
Get left and right fill values.
Get locale by specified type.
Get low-level information about the file that we can used to create a unique name for the file.
Get machine constants
Get machine constants.
Get machine parameters
Get machine parameters.
Get nautical twilight
Get necessary buffer size first
Get necessary output buffer size
Get next character in the pattern
Get next piece if no limit or limit not yet reached and something matched
Get number of entries in the input hash
Get number of septets
Get number option value as string
Get of new value in array
Get offset number from interface specification
Get or set the "averages" values.
Get our own host name
Get output buffer and send as fault detials
Get performance boost if reporting is switched off
Get pointer for an integer index.  For a purely integer index, set ptr to the memory address.
Get positional output arguments
Get reference from object id.
Get rest as section/offset value
Get rid of C:, if exists
Get rid of this when OpenBSD has proper support for PT_TLS.
Get rid of zero coefficients and empty terms
Get serializer handlers
Get shape tuple from interface specification
Get shared locks at the system level, if necessary
Get size of return array
Get size of security buffer.
Get some properties from the dtype
Get sort key, reallocating the buffer if needed.
Get status of next character
Get status of previous character
Get sun up/down and transit
Get temporary file name
Get the NAME attr (Quoted single/double)
Get the NAME attr (Single word attr, non-quoted)
Get the NBO datetime to string aligned contig function
Get the PIPE_BUF from pathconf
Get the RtreeNode for the search point with the lowest score.
Get the URI of the current script so that we can set the base directory in libxml
Get the VDBE program ready for execution
Get the actual size of the TokenUser structure
Get the allocated extra_op
Get the appropriate __array_prepare__ function to call for each output
Get the arg if we haven't already.
Get the argument count
Get the arguments and check for errors
Get the available memory through the buffer interface on PyArray_BASE(new) or if that fails from the current new
Get the boolean where mask
Get the buffersize and errormask
Get the cast function
Get the cast operation from src
Get the cast operation to dst
Get the column number in the table (iColumn) and sort order (revIdx) for the j-th column of the index.
Get the conversion factor
Get the conversion type modifier
Get the copy/swap operation from src
Get the copy/swap operation to dst
Get the current locale, and find the decimal point string.
Get the current used size of the three stacks, in elements.
Get the database meta information.
Get the datetime metadata
Get the day of the week (1970-01-05 is Monday)
Get the day of the week for 'date'
Get the day of the week for 'date' (1970-01-05 is Monday)
Get the day of the week for 'date_begin'
Get the delimiter and display a warning if it is alphanumeric or a backslash.
Get the digits of the integer part and push them on a stack.
Get the dimensions of the first item
Get the disp_value for the given locale
Get the dst coord of this index for dimension i
Get the element we want to insert before
Get the error code from SSL, and check to see if it's an error or not.
Get the exclusive locks at the system level.
Get the final character and fall through
Get the first element now
Get the first value and copy it into the return value
Get the full dimension information
Get the function to do the casting
Get the indentation level and eat the indicator.
Get the indexed version instead of the normal one.
Get the initial address and size of current thread's stack
Get the inner loop data/stride/count values
Get the inner loop, with the possibility of specialization based on the fixed strides.
Get the input time zone
Get the keyword arguments
Get the keyword value for each keyword
Get the last value and copy it into the return value
Get the library version numbers.
Get the library version.
Get the local shared locks
Get the metadata GCD, being strict about nonlinear units for timedelta and relaxed for datetime.
Get the metadata from the type
Get the min scalar type for the array
Get the multi-index for each non-zero element
Get the multi_index into op
Get the next character.
Get the next client and their address (as a string)
Get the normal op corresponding to a compound assignment op
Get the operands and build the subscript string
Get the pointers for inner loop iteration
Get the position of the constant.
Get the priority subtype for the array
Get the process associated with this pipe (file) handle and terminate it
Get the reduction dtype
Get the result from the iterator object array
Get the resulting dtype from combining all the arrays
Get the resulting string length
Get the results of the thread
Get the return object from the iterator
Get the rowid of the row to be deleted and remember it in the RowSet
Get the shape and strides of the two axes
Get the single byte that remains after the file type indentification
Get the size of the index entry.
Get the string to NBO datetime aligned contig function
Get the subarray shapes and sizes
Get the subscripts string
Get the suggested cache-size value.
Get the time, if they want it
Get the timezone, if they want it
Get the tzoffset from the timezone if provided
Get the unmasked ufunc inner loop
Get the values needed for the inner loop
Get the variables needed for the loop
Get type of the previous char, and put it to LOCALS1.
Get type string from interface specification
Get us a DIR structure
Get value of parameter
Get view into an array using all non-array indices.
Get weight of this magic entry, for sorting purposes.
Get/Create intermediate arrays for multidimensional arrays
Get/create the semaphore.
Get/set the locking-mode for this pager.
Get/set the size-limit used for persistent journal files.
GetEnvironmentVariableW when used with NULL will return the required buffer size and its terminating character.
GetFileAttributes() determines "..." as directory.
GetFullPathNameW requires at least "." to determine current directory
GetMeta() and UpdateMeta() cannot fail in this context because we already have page 1 loaded into cache and marked dirty.
GetProcAddress() returns pointer to function
GetVersionEx was first deprecated in Win8.1.
GetVersionEx() is current
GetVersionEx() is deprecated
Gets X509v3 extensions as array of X509Ext objects
Gets a single item from the array, based on a single multi-index array of values, which must be of length PyArray_NDIM(self).
Gets a tzoffset in minutes by calling the fromutc() function on the Python datetime.tzinfo object.
Gets its class name from 1st column
Gets the contents of the BLOB b and offers it to Zend for parsing/execution
Gets the context function.
Gets the next CRLF terminated line from the input buffer.
Gets various OpenSSL options.
Gifford All rights reserved.
Give 3 examples that avoid it.
Give a better score to a function with a specific number of arguments than to function that accepts any number of arguments.
Give a callback to the test harness that can be used to simulate faults in places where it is difficult or expensive to do so purely by means of inputs.
Give a listing of the program in the virtual machine.
Give an error if there's back reference to a non-existent capturing subpattern.
Give the new cursor an identifier of P1.
Give the userfilter class a hook back to the stream
Give user a chance to reallocate the stack.
Given 1 to 3 identifiers preceding the JOIN keyword, determine the type of join.
Given a SELECT statement, generate a Table structure that describes the result set of that SELECT.
Given a an expression list (which is really the list of expressions that form the result set of a SELECT statement) compute appropriate column names for a table that would hold the expression list.
Given a btree page and a cell index (0 means the first cell on the page, 1 means the second cell, and so forth) return a pointer to the cell content.
Given a bucket, returns a version of that bucket with a writeable buffer.
Given a character, set its first byte's bit in the table, and also the corresponding bit for the other version of a letter if we are caseless.
Given a day number, find the molad of Tishri (the new moon at the start of a year) which is closest to that day number.
Given a file descriptor, locate the unixInodeInfo object that describes that file descriptor.
Given a key, returns the list of values bound to it from the sql db.
Given a key, returns the list of values bound to it.
Given a metonic cycle number, calculate the date and time of the molad (new moon) that starts that cycle.
Given a node number iNode, return the corresponding key to use in the Rtree.aHash table.
Given a page number of a regular database page, return the page number for the pointer-map page that contains the entry for the input page number.
Given a pointer to the shared memory address space, initializes all the globals that live in shared memory.
Given a serial day number (SDN), find the corresponding year, month and day in the Jewish calendar.
Given a set of bundle bits and a specific pipe, returns which instruction the bundle contains in that pipe.
Given a string return the type-number for the data-type with that string as the type-object name.
Given a string that may have a decimal point in the current locale, change it back to a dot.
Given a token, return a string that consists of the text of that token.
Given a type-library, merge it into the current engine state
Given a wildcard parameter name, return the index of the variable with that name.
Given a year, find the number of the first day of that year and the date and time of the starting molad.
Given a year, month and day in the Jewish calendar, find the corresponding serial day number (SDN).
Given an OCaml string, returns the 8 first bytes in an unsigned long.
Given an allocation, find the MemBlockHdr for that allocation.
Given an expression list (which is really the list of expressions that form the result set of a SELECT statement) compute appropriate column names for a table that would hold the expression list.
Given an expression list, generate a KeyInfo structure that records the collating sequence for each expression in that expression list.
Given argument has no corresponding time_t.
Given arguments are passed through to #each().
Given cursor id iId, return a pointer to the corresponding Fts5Index  object.
Given table pTab, return a list of all the triggers attached to  the table.
Given that pParent is the parent table for foreign key constraint pFKey,  search the schema for a unique index on the parent key columns.
Given that the freelist is valid, there is no way that the allocation can extend off the end of the page.
Given the above cautions, DBM is not a good choice for long term storage of important data.
Given the name of a column of the form X.Y.Z or Y.Z or just Z, look up that name in the set of source tables in pSrcList and make the pExpr  expression node refer back to that source column.
Given the name of a compile-time option, return true if that option was used and false if not.
Given the name of a database file, compute the name of its conch file.
Given the output type, finds the specified binary op.
Given the page number of an overflow page in the database (parameter ovfl), this function finds the page number of the next page in the  linked list of overflow pages.
Given the string "test string", here are the pertinent scan pointer positions:  t e s t   s t r i n g 0 1 2 ...
Given this approach, we need to skip ahead to the end of the encoded word.
Gives excellent shift.
Gives the test harness in go_darwin_arm_exec (which uses lldb) a chance to move the working directory.
Giving the size of struct sockaddr_un here and relying on the nul termination of sun_path does not work for paths in the abstract namespace.
Global (connection wide) data
Global context (one per db handle)
Global context for this function
Global data dependencies
Global data used by this cache.
Global error handling.
Global filter hash, copied to FG(stream_filters) on registration of volatile filter
Global information about all active buffers  Note: because for backward compatibility we cannot define bf_releasebuffer, we must manually keep track of the additional data required by the buffers.
Global shared lock memory for the file
Global storage initialization
Global variables and constants
Global variables in pcache1 need to be protected via mutex.
Global wrapper hash, copied to FG(stream_wrappers) on registration of volatile wrapper
Globbing rules:  '*'       Matches any sequence of zero or more characters.
Go and actually compress the data
Go back under the static mutex and clean up the recursive mutex to prevent a resource leak.
Go forward through axisdata, calculating the space available
Go get the next char in the class
Go process the char normally
Go round the loop again
Go through all the names
Go through input array and add keys to the return array
Go through input array and add values to the return array
Go through the input array
Go through the string and quote necessary characters
Go through the whole list, stopping if you find a match.
Gobble initial spaces
Gobble up the first bareword or quoted word from the input buffer zIn.
Goes one character back.
Got a good connection - update next_ping and get out of ping loop
Got config.h Got main.rb
Grab and send back every cookie
Grab the cookie value
Grab the document version
Grab the first fully transparent entry, if any, as the value of the simple-transparency index, mostly for backwards binary compatibility.
Grab the grouping data out of the array
Grab the index number and argc parameters
Grab the monetary grouping data out of the array
Grab the value part, except for an 'x' reln.
Grab the write lock on the log file.
Grabs the events that are ready to be processed from the linked list and clears the list
Graphic Control Extension
Grave-accent quoted symbols used by MySQL
Greedy star operator (*) : Matching path: match happens.
Group name must start with non-digit
Group: Error Handling
Grow buffer to hold this bucket if need be.
Grow the Pager.aSavepoint array using realloc().
Grow the array if necessary.
Grow the buffer if required.
Grow the hash table if required
Grow the output buffer if required.
Grow the output buffer so that there is sufficient space to fit the largest possible utf-8 character.
Grow the sqlite3.aVTrans array if required
Grow the two buffers to pgsz + padding bytes in size.
Growing the hash table in this case is a performance optimization only, it is not required for correct operation.
Growth rate for stack allocated by the OS.
Guaranteed by the code generator
Guard against putting a key/val pair into an array vector
Guard against unexpected integer size
Guard against zero C or R due to underflow.
Guard word for sanity
Guess should start at 1.
Guess since FTP won't expose this information
Guess that the next page in  the overflow list is page number (ovfl+1).
Guesses the type of the data which have been inputed into the stream.
GzipReader should be used as an IO, or -IO-like, object.
GzipReader should be used by associating an IO, or IO-like, object.
GzipWriter should be used with an instance of IO, or IO-like, object.
H       (input) DOUBLE PRECISION The (2,2) element of the 2-by-2 matrix.
H       (input) REAL The (2,2) element of the 2-by-2 matrix.
H       (input/output) COMPLEX array, dimension (LDH,N) On entry, the upper Hessenberg matrix H.
H       (input/output) COMPLEX*16 array, dimension (LDH,N) On entry, the upper Hessenberg matrix H.
H       (input/output) DOUBLE PRECISION array, dimension (LDH,N) On entry, the upper Hessenberg matrix H.
H       (input/output) REAL array, dimension (LDH,N) On entry, the upper Hessenberg matrix H.
H if before a vowel and not after C,G,P,S,T
H or H' is applied to C(1:m,1:n-k+i+ib-1)
H or H' is applied to C(1:m,i:n)
H or H' is applied to C(1:m-k+i+ib-1,1:n)
H or H' is applied to C(i:m,1:n)
H(2) H(1) and T is lower triangular.
H(2) H(1) as returned by CGEQLF.
H(2) H(1) as returned by DGELQF.
H(2) H(1) as returned by DGEQLF.
H(2) H(1) as returned by SGELQF.
H(2) H(1) as returned by SGEQLF.
H(2) H(1) as returned by ZGEQLF.
H(2)' H(1)' as returned by CGELQF.
H(2)' H(1)' as returned by ZGELQF.
H(I,I-1) is negligible: one eigenvalue has converged.
H(I-1,I-2) is negligible: a pair of eigenvalues have converged.
H(L,L-1) is negligible
H(L,L-1) is negligible.
H(i) is applied to C(1:m,1:n-k+i)
H(i) is applied to C(1:m,i:n)
H(i) is applied to C(1:m-k+i,1:n)
H(i) is applied to C(i:m,1:n)
H(i) or H(i)' is applied to C(1:m,1:n-k+i)
H(i) or H(i)' is applied to C(1:m,i:n)
H(i) or H(i)' is applied to C(1:m-k+i,1:n)
H(i) or H(i)' is applied to C(i:m,1:n)
H(k) as returned by CGEQRF.
H(k) as returned by DGEQRF.
H(k) as returned by SGEQRF.
H(k) as returned by ZGEQRF.
H(m-1) and CUNGBR returns Q as an M-by-M matrix.
H(m-1) and DORGBR returns Q as an M-by-M matrix.
H(m-1) and SORGBR returns Q as an M-by-M matrix.
H(m-1) and ZUNGBR returns Q as an M-by-M matrix.
HACK: See zlib/examples/zpipe.c inf() function for explanation.
HACK: allow setting of this node by passing an empty name
HACK: use output encoding for now
HALFWIDTH IDEOGRAPHIC COMMA
HALFWIDTH IDEOGRAPHIC FULL STOP
HALFWIDTH KATAKANA MIDDLE DOT
HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK
HALFWIDTH KATAKANA VOICED SOUND MARK
HALFWIDTH KATAKANA-HIRAGANA PROLONGED SOUND MARK
HALFWIDTH LEFT CORNER BRACKET
HALFWIDTH RIGHT CORNER BRACKET
HANDLE_TAG copies the HTML Tag and checks whether we have that tag in our table.
HASH_INT, _POINTER, _STRING, _BINARY
HAS_SCALAR_ARRAY requires cleaning up the index_type
HAVE_ENGINE_LOAD_BUILTIN_ENGINES
HAVE_MREMAP defaults to true on Linux and false everywhere else.
HAVE_OPCACHE_FILE_CACHE
HAVE_PRINT_MACHINE_REGISTERS
HAVE_SQL_EXTENDED_FETCH
HAVE_STDINT POSIX dirent interface
HMAC can be used to verify the integrity of a message as well as the authenticity.
HOWEVER: when the subject string is very, very long, searching to its end can take a long time, and give bad performance on quite ordinary patterns.
HOWMANY specifies the maximum offset libmagic will look at this is currently hardcoded in the libmagic source but not exported
HP-UX has SIOCGLIFCONF too.
HSWORK refers to the workspace preferred by CHSEQR, as calculated below.
HSWORK refers to the workspace preferred by DHSEQR, as calculated below.
HSWORK refers to the workspace preferred by SHSEQR, as calculated below.
HSWORK refers to the workspace preferred by ZHSEQR, as calculated below.
HTML_ENTITIES (actually, any non-zero value for 1st param)
HTTP POST may contain form data to be processed into variables depending on given content type
HTTP_HOST could be 'localhost:8888' etc.
Hack - see bug #65028, add padding byte to the end of the manifest
Hack for buggy IIS that sets incorrect PATH_INFO
Hack to get rdoc to regard ARGF as a class:
Hack to make it process IDF1 I hope There are 2 IDFs, the second one holds the keys (0x0201 and 0x0202) to the thumbnail
Halt if out of errors
Halt the sub-program.
Hand consecutive blocks of data to the +update+ method in order to encrypt it.
Hand edited by Pearu.
Hand-off the data to the OS for writing and continue, don't wait for it to complete
Handle  grandfathered languages
Handle 0-d array by converting it to a 1-d array
Handle ANYORDER and simple KEEPORDER cases
Handle NaT, and treat a datetime with generic units as NaT
Handle POSIX class names.
Handle a capturing bracket, other than those that are possessive with an unlimited repeat.
Handle a literal character.
Handle a real character class.
Handle a recursively called group.
Handle a single character that has more than one other case.
Handle all other cases when the coding is UTF-8
Handle an atomic group that does not contain any capturing parentheses.
Handle any leading odd-sized chunks
Handle any remaining bytes of data.
Handle booleans, numbers, and custom dtypes
Handle capturing bracket
Handle compound SELECT statements using the separate multiSelect() procedure.
Handle data type of LONG
Handle describing change and conflict
Handle different types of newline.
Handle empty array separately
Handle escaped characters first.
Handle exact repetitions.
Handle extra flags for this index, if not NULL
Handle for accessing memory mapping
Handle for accessing the blob returned here
Handle for accessing the file
Handle for sqlite3DbMallocRawNN()
Handle for sqlite3DbMallocZero() (may be null)
Handle format arguments if any
Handle grandfathered languages
Handle it better way.
Handle keys outside of the arr range first
Handle literal characters
Handle literal characters and + repetitions
Handle multibyte character matching specially here.
Handle negative axes with standard Python indexing rules
Handle negative integers in a single step.
Handle negative offset
Handle non-C99 snprintfs (requires extra malloc/free and copy)
Handle non-ONCE brackets and possessive ONCEs (which have been converted to non-capturing above).
Handle non-enclosure field
Handle one file or directory.
Handle open on database file
Handle other cases with/without an argument
Handle other special cases if you like
Handle partial matches - disable any mark data
Handle pointing to row containing value
Handle possessive capturing brackets with an unlimited repeat.
Handle possessive quantifiers.
Handle potencial mem leaks
Handle repeated back references
Handle repeated back references.
Handle repeats after a class or a back reference
Handle request method
Handle rounding by adding 1 to the bit beyond half precision
Handle single-char matchers
Handle single-char non-literal matchers
Handle single-character metacharacters.
Handle special arg '*' for all codes and check argv overflows
Handle special case write when we're returning the entire transfer
Handle standard Python negative indexing
Handle start of quoted string
Handle that must hold lock
Handle the Perl-compatible cases
Handle the case of a single charater - either with no UTF support, or with UTF disabled, or for a single character UTF character.
Handle the case of the codes matching and simply replace the number that was there before.
Handle the common case of integer comparison here, as an optimization, to avoid a call to sqlite3MemCompare()
Handle the error in user space
Handle the following special cases: 1.
Handle the optional arguments
Handle the other opcodes
Handle the special case of a compound-select that originates from a VALUES clause.
Handle the special case of adding another range on the end.
Handle the special case of extending the range on the end.
Handle the three cases separately, in the hope of getting better/faster code.
Handle the various field types.
Handle to the database.
Handle type for pages.
Handle updating of the required and first characters for other types of group.
Handle zero-dim array separately
Handle zero-sized array
Handle zero-sized arrays specially
Handled inline by the getVarin32() macro
Handler for basedirs that end with a /
Handler for messages coming in from the browser via postMessage.
Handler for proxy-locking file-control verbs.
Handler that gets called after a full-frame module is instantiated based on registered MIME types.
Handles both invalid and empty cases.
Handles fields transfer.
Handles properly formed UTF-8 characters between 0x01 and 0x7F.
Handles single level contours, or region between a pair of levels.
Handles subarray transfer.
Handles, amongst others, "nfs".
Handling bracketed expressions is probably the most complex part.
Handling capturing brackets and alternatives.
Happens with a UNIQUE index on ROWID
Hard-coded maximum amount of data to accumulate in memory before flushing to a level 0 PMA.
Has no GROUP BY clause
Has no INDEXED BY clause
Has no NOT INDEXED clause
Has no effect on the client side.
Has no effect on the server side.
Hash a single 512-bit block.
Hash and comparison functions when the mode is FTS3_HASH_BINARY
Hash and comparison functions when the mode is FTS3_HASH_STRING
Hash constant words K for SHA-256:
Hash constant words K for SHA-384 and SHA-512:
Hash doesn't exist so it must have been an invalid protocol scheme
Hash functions are also called one-way functions, it is easy to compute a digest from a message, but it is infeasible to generate a message from a digest.
Hash table containing tokenizers
Hash table entries that correspond to frames greater than the new K value are removed from the hash table at this point.
Hash table for fast lookup by key
Hash table for functions
Hash table for global functions - functions common to all database connections.
Hash table for in-memory data
Hash table of all pages.
Hash table of column names
Hash table of connection functions
Hash table of in-memory nodes.
Hash table of tokenizers
Hash table representation
Hash the supplied password
Hash value for the element
Hash.first points to the head of this list.
Hash.htsize and Hash.ht may be zero.
Hashes an integer such that the low bits are a good starting hash slot.
Hashes enumerate their values in the order that the corresponding keys were inserted.
Hashing function for the aHash representation.
Have a match, so insert the code in order.
Have to choose the input with more dimensions to clone, as one of them could be a scalar.
Have to get this flag before npyiter_checkreducesize sets it for the next iteration.
Have to increase the number, so we can send correct number back.
Having both 'base' and 'newdescr' point to the same auxdata pointer would cause a double-free of memory.
Having this macro allows us to cause the C compiler  to omit code used by TEMP tables without messy #ifndef statements.
Having this macro allows us to cause the C compiler to omit code used by TEMP tables without messy #ifndef statements.
Having this, mongoose + SSL can be built on any system with binary SSL libraries installed.
He says, "You can use it, if you present the following explanation of the algorithm." Algorithm (recursively presented): If x is a rational number, return x.
He was a dear friend, and I miss him terribly.
Head and tail of a linked list of all outstanding allocations
Head back to Friday if we stop on the weekend.
Head item on backtrack.
Head of a linked list of all sqlite3 objects created by this process for which either sqlite3.pBlockingConnection or sqlite3.pUnlockConnection is not NULL.
Head of in-memory chunk-list
Head of in-memory record list
Head of the last recursion.
Head of the socket queue
Header file for the Virtual DataBase Engine (VDBE)  This header defines the interface to the virtual database engine or VDBE.
Header in shared memory
Heap that might have been lookaside
Heavy optimization for situations where input string is 1 byte long
Heckbert-style quantizers vary a good deal in their policies for choosing the "largest" box and deciding where to cut it.
Height of sub-tree rooted at pCell
Height of sub-trees Reinsert() has run on
Height of the tree headed by this node
Height of this node in tree
Held in memory not obtained from malloc()
Hellman, IEEE Spectrum, vol.
Help the compiler to know that.
Helper for ufunc_at, below
Helper function for `fprintf to unbuffered unix file': creates a temporary buffer.
Helper function for fts3ExprIterate() (see below).
Helper function for fts3NodeWrite().
Helper function for printing out trace information from debugging binaries.
Helper function for sqlite3Error() - called rarely.
Helper function for sqlite3VdbeSorterRewind().
Helper function used by the implementation of the overloaded snippet(), offsets() and optimize() SQL functions.
Helper function used to add an associative array of warnings and errors to a zval
Helper function used to store the latest found warnings and errors while parsing, from either strtotime or parse_from_format.
Helper functions for array_from_pyobj
Helper functions to obtain and relinquish the global mutex. The global mutex is used to protect the winLockInfo objects used by  this file, all of which may be shared by multiple threads.
Helper functions to obtain and relinquish the global mutex. The global mutex is used to protect the winLockInfo objects used by this file, all of which may be shared by multiple threads.
Helper type used by fts3EvalIncrPhraseNext() and incrPhraseTokenNext().
Helper: call appropriate BLAS dot function for typenum.
Hence U and VT are not explicitly referenced.
Hence compatible candidate WhereLoops never have a larger rSetup.
Hence cursor pC is always pointing to the row to be deleted and the sqlite3VdbeCursorMoveto() operation below is always a no-op and cannot fail.
Hence for a particular database connection, once malloc starts failing, it fails consistently until mallocFailed is reset.
Hence it has its own case.
Hence it is OK to delete a record from within an Next loop.
Hence it is only available in debug builds.
Hence nBytes is always a non-negative power of two.
Hence only tests (1) and (2) need to be evaluated.)  The formulas above are for computing the action when the lookahead is a terminal symbol.
Hence sqlite3_set_auxdata() should be called near the end of the function implementation and the function implementation should not make any use of P after sqlite3_set_auxdata() has been called.
Hence the OPTIMIZATION-IF-FALSE tag above.
Hence the RELEASE call below can never fail.
Hence the ROUND8() below.
Hence the code to create the copy externally.
Hence the default is now to store 32 bits per Long.
Hence the definition of zeroreqchar and zerofirstchar outside the main loop so that they can be accessed for the back off.
Hence the following sqlite3VdbeCursorMoveto() call is always a no-op and can never fail.
Hence the pSpace buffer must be at least 13 bytes in size.
Hence the test for whether or not a character is part of an identifier is 0x46.
Hence the top-of-loop is a no-op
Hence these functions allow the caller to handle the serial-type and data blob separately.
Hence use memmove() since memcpy() sends SIGABORT with overlapping buffers on OpenBSD
Hence we limit the maximum size to 0x7fffff00, giving 255 bytes of overhead.
Hence, a false positive (returning TRUE when in fact the expression can never be NULL) might be a small performance hit but is otherwise harmless.
Hence, a mutex on the BtShared should be held prior to calling this routine.
Hence, a negative P2 value is a label that has yet to be resolved.
Hence, a position-list consists of one or more column-lists, a document record consists of a docid followed by a position-list and a doclist consists of one or more document records.
Hence, all bytes of a sector need to be journalled in case of a power loss in the middle of a write.
Hence, fill this column with a NULL to avoid taking up data space with information that will never be used.
Hence, for maximum binary portability you should omit LFS.
Hence, if page 1 appears anywhere on the list, it will be the first page.
Hence, isTnct represents the original setting of the SF_Distinct flag, not the current setting
Hence, schema information cannot be stored in lookaside because in shared cache mode the schema information is shared by multiple database connections.
Hence, temporary disk space that is approximately 2x the size of the orginal database is required.
Hence, temporary disk space that is approximately 2x the size of the original database is required.
Hence, the calling function can deallocate or modify the text after they return without harm.
Hence, the current size of the soft heap limit can be determined by invoking sqlite3_soft_heap_limit64() with a negative argument.
Hence, the locking scheme will support two or more Win95 readers or two or more WinNT readers.
Hence, the only way for cmpaff to be TEXT is for idxaff to be TEXT and for the term on the LHS of the IN to have no affinity.
Hence, the primitive operations for a RowSet are:  CREATE INSERT TEST SMALLEST DESTROY  The CREATE and DESTROY primitives are the constructor and destructor, obviously.
Hence, the record number for the table must be allocated now.
Hence, the sqlite3BtreeUpdateMeta() call cannot fail.
Hence, the sqlite_stat4 format will be described first.
Hence, they can always be passed into sqlite3_uri_parameter().
Hence, this block of code must be the very first code in all source files.
Hence, this routine only compares the prefixes  of the keys prior to the final rowid, not the entire key.
Hence, unlike the database and WAL file formats which store all values as big endian, the wal-index can store multi-byte values in the native byte order of the host computer.
Hence, we combine steps 3 and 4 into a single opcode.
Hence, we do not need to hold  locks on the schema, we just need to make sure nobody else is  holding them.
Hence, we issue a warning on sqlite3_log() whenever the capability is used.
Hence, while POWERSAFE_OVERWRITE is on by default, there is a file-control available to turn it off and URI query parameter available to turn it off.
Here "isolated" means the binding does not inherit any other binding.
Here B is complex and that product is computed below in two steps (real and imaginary parts).
Here LOCALS1 has already been zeroed.
Here are all of the sqlite3_io_methods objects for each of the locking strategies.
Here are the marker codes of interest in this program.
Here are two possible cases: 1) this is an attempt to modifiy the visibility of a method introduce as part of another alias.
Here code is inserted which will be executed whenever the parser accepts
Here code is inserted which will be executed whenever the parser fails
Here code is inserted which will execute if the parser stack every overflows
Here comes the error no
Here comes the reason
Here ends the implementation of all sqlite3_file methods.
Here is an interesting observation:  Win95, Win98, and WinME lack the LockFileEx() API.
Here is inserted the actions which take place when a terminal or non-terminal is destroyed.
Here is sample script.
Here is the (internal, non-API) interface between this module and the rest of the SQLite system:  sqlite3VdbeSorterInit()       Create a new VdbeSorter object.
Here is the full add routine that takes care of negative numbers.
Here is the full subtract routine that takes care of negative numbers.
Here is what we do to obtain the number's magnitude: a.
Here is where we deviate significantly from what CRT's _open() does.
Here prep is the prepping function determined from the input arrays (could be NULL).
Here the Scanning step is explained and implemented.
Here the number of equal eigenvalues are found.
Here the number of equal singular values are found.
Here we add to the key the parent script directory, since fopen_wrappers from version 4.0.7 use current script's path in include path too.
Here we aren't sure we would store it, but we will need it further anyway.
Here we begin generating code that runs if the LHS is not contained within the RHS.
Here we call the headers_complete callback.
Here we can finally check for contiguous iteration
Here we check to see if it's alright to ourselves to be unloaded.
Here we clean up any resources we allocated.
Here we go through the input arguments and parse them.
Here we just prepare the provided operands.
Here we only compute the number of bytes.
Here we permute the eigenvalues (and the associated eigenvectors) into ascending order.
Here we process our command line, post errors (to the error screen), perform initializations and anything else we need to do before being able to accept calls into us.
Here we set the check info.
Here we should close all statements.
Here wrap is the wrapping function determined from the input arrays (could be NULL).
Here's a stackoverflow about it http://stackoverflow.com/questions/25502229/ftruncate-not-working-on-posix-shared-memory-in-mac-os-x
Here, add it to the list of ini files read
Here, the modular division first probe is gives way to a faster exclusive-or manipulation.
Hermite filter, default radius 1
Hidden API for tcl/tk wrapper.
High accuracy coordinate
High water mark of stack.
High-level token API.
High-water mark of the stack
Higher characters U+00110000..U+001FFFFF are not used.
Higher dimensional arrays and opposite strides cause a temporary copy before getting here.
Higher dimensional arrays cause a temporary copy before getting here.
Higher level routines have already obtained the necessary locks to begin the write-transaction, but the rollback journal might not yet be open.
Higher levels of PMAs may be created by merging existing PMAs together - for example merging two or more level-0 PMAs together creates a level-1 PMA.
Higher-order bits may also be used to indicate the type of file (plain, directory, pipe, socket, and so on) and various other special features.
Higher-priority threads will run more frequently than lower-priority threads (but lower-priority threads can also run).
Highlight-mask for snippet
Highwater mark for nCurrent
Highwater mark for nOut
Hint Zend how many elements we will have in the hash.
Hint blob to append to
Hint number of segments
Hint this end-of-scan boundary term if not NULL
Historians usually use the Julian calendar for dates prior to 1582-10-15 and for some dates afterwards, depending on locale.
Historians usually use the julian calendar for dates prior to 1582-10-15 and for some dates afterwards, depending on locale.
Historically, SQLite has used both the LockFile and LockFileEx functions.
History of dbm_pagfno() and dbm_dirfno() in ndbm and its compatibles.
Hoermann Insurance: Mathematics and Economics 12, 39-45 (1993)
Hold the db mutex while doing so.
Holding area for temporary registers
Holding variable for allocated memory
Holds a set of subpatterns after a global match
Holds list of subpatterns
Holds results of studying
Holds the available server ALPN protocols for negotiation
Holds the original stderr
Holds the original stdin
Holds the original stdout
Hook method to return whether the _obj_ can respond to _id_ method or not.
Hope the C compiler is smart enough.
Hopefully the cast fixes that.
Hopefully this problem will be discovered during testing.
Host database connection
Hot-journal rollback only reads from the main journal, not the sub-journal.
Hours are specified on a 24-hour clock (0..23).
How aggressive at syncing data to disk
How far to indent SELECTTRACE() output
How many arrays we're operating on
How many bytes of content is already read
How many bytes we send in this iteration
How many control chars were written
How many elements to get
How many letters to skip because an eariler encoding handled multiple letters
How many levels of subquery
How many pads do we need
How many seg-readers to advance
How many times to run PHP scripts before dying
How much extra memory is needed
How much memory to allocate (1 - 9) x 100kb
How often to do a periodic sample
How the linked list is connected depends on how memory is being managed by this module.
How this is done depends on the type: - Integer: value is assigned to an int, and a pointer to the int is passed, with length of sizeof(int).
How to allocate space.
How to compare records
How to deal with SELECT result
How to deal with SELECt result
How to dispose of results
How to dispose of the results
How to dispose of the results.
How to handle constraint errors
How to write to Queue
However Debian GNU/kFreeBSD defines AF_LINK but don't have link_ntoa.
However PCRE_G(pcre_cache) must be consistent on the next request as well.
However a comment was received about space saving - maybe the guy linked all the modules rather than using a library - so we include a condition to cut out the tables when not needed.
However a special technique (called a surrogate pair) is used for specifying character values larger than 0xFFFF.
However according to MSDN,  INVALID_SET_FILE_POINTER may also be a valid new offset.
However according to MSDN, INVALID_SET_FILE_POINTER may also be a valid new offset.
However authinfo and env are cached
However control may currently be delegated to another generator.
However expected is that MINIT is enough in most cases.
However explicitly setting the value to 0 ensures the first value.
However gamma(n) returns float and can be an approximation.
However if the application attempts to commit the  transaction before fixing the constraint violation, the attempt fails.
However if this limit is reached midway through a transaction, a new  segment is created and the hash table cleared immediately.
However it can be longer.
However it does not work out of the box with zipvfs.
However it is possible that a script frees descriptors in arbitrary order which would prevent descriptor_count ever being reduced to zero until zend_hash_num_elements() returns 0.
However it is uint64_t on SunOS 5.11 (OpenIndiana).
However some might still be in use so even after this clean-up we need to skip entries marked is_deleted.
However such a page may be rolled back as a result of an internal error resulting in an automatic call to sqlite3PagerRollback().
However the ON CONFLICT clauses are different.
However the result may not be accurate.
However they are easy to re-implement in async-signal-safe manner.
However this can (generally) not be expressed in terms of dominance frontiers, so place it explicitly.
However this function calls bary_mul_karatsuba and bary_mul_balance recursively.
However this method is locale independent.
However we'll try to handle other errors as well, should they ever occur.
However,  Ted Ts'o tells us that fdatasync() will also write the inode if the file size has changed.
However, 4.4BSD uses gettimeofday() and it is not monotonic.
However, IE in all it's wisdom always sends the full path of the file on the user's filesystem, which means that unless the user does basename() they get a bogus file name.
However, OpenSSL::PKey already has methods "sign" and "verify" that handle digital signatures in a standardized way - "private_encrypt" and "public_decrypt" shouldn't be used in practice.
However, Perl changed at release 5.18, so PCRE changed at release 8.34.
However, RMATCH isn't like a function call because it's quite a complicated macro.
However, YYFAIL appears to be in use.
However, a WAL_WRITE_LOCK thread can move the value of nBackfill from mxFrame back to zero when the WAL is reset.
However, a non-prefix query like '1st' will match against "1st" and "first".
However, any backup in progress needs to be restarted.
However, based on certain device characteristics (sector-size and atomic write() support), SQLite may choose a larger value.
However, because extra entries are added to the FTS index, this method uses more space within the database.
However, by keeping a bitmap of the first 31 back references, we can catch some of the more common cases more precisely.
However, conversion tables frequently map 0x00-0x1F to the respective C0 code points.
However, current implementation ignore this parameter, tracepoint is created for all threads.
However, doing that would require us to create an xmlrpc value from the php array, which is rather expensive, especially if it was a big array.
However, don't set the bit unless the length is greater than zero - the interpretive pcre_exec() and pcre_dfa_exec() needn't waste time checking the zero case.
However, due to rounding errors, it may be that the cost of the OR-scan is equal to its most expensive sub-scan.
However, experience has shown that many of these result codes are too coarse-grained.
However, failure to zero-fill short reads will eventually lead to database corruption.
However, for maximum code portability it is recommended that applications still make the distinction between protected and unprotected sqlite3_value objects even when not strictly required.
However, for some POSIX classes (e.g. graph, print, punct) a special property code is compiled directly.
However, gcc and major other compilers never optimize a volatile variable away.
However, generic units cannot always divide into more specific units.
However, if a block is given to zip, values are enumerated immediately.
However, if a malloc() failure has occurred since the previous invocation SQLITE_NOMEM is returned instead.
However, if a page is moved to the free-list and then reused within the same transaction, a problem comes up.
However, if an application running in a  low-memory environment is required to handle very large changesets, the large contiguous memory allocations required can become onerous.
However, if an interrupt occurs at (c), after *read* operation is completed, checking interrupts is harmful because it causes irrevocable side-effect, the read data will vanish.
However, if class Thread is subclassed, then calling +start+ in that subclass will not invoke the subclass's +initialize+ method.
However, if frames have been appended to the log (or if the log  is wrapped and written for that matter) before the READ_LOCK(0) is obtained, that is not necessarily true.
However, if neither NUM nor ASSOC is set we will free memory cleanly and won't leak.
However, if no value can be extracted from either pLower or pUpper (and so the estimate of the number of rows delivered remains unchanged), *pbDone is left as is.
However, if op is SAVEPOINT_ROLLBACK, then iSavepoint may also be -1.
However, if the  segment does contain any such terms, they are stored within the identified range.
However, if the -L option is given, set the locale from the LC_xxx environment variables.
However, if the PmaReader.pIncr variable points to an object of the following type, it may be used to iterate/merge through multiple PMAs simultaneously.
However, if the WHERE_SORTBYGROUP flag is also passed to sqlite3WhereBegin(), then this function may be called on the returned WhereInfo object.
However, if the bSpanIsTab flag is set, then zSpan is overloaded to mean the name of the result column in the form: DATABASE.TABLE.COLUMN.
However, if the call to sqlite3rbu_close() returns any value other than SQLITE_OK, the contents of the state tables within the state database are zeroed.
However, if the current transaction has already run one or more incremental-vacuum steps, then the page we are about to allocate may contain content that is required in the event of a rollback.
However, if the database file is being synced as part of a multi-database commit, the argument points to a nul-terminated string containing the transactions master-journal file name.
However, if the group was entered as a result of checking a previous iterator, this is not possible.
However, if the magic number is equal to REVERSED_MAGIC_NUMBER we return with PCRE_ERROR_BADENDIANNESS, which means that the pattern is likely compiled with different endianness.
However, if the number of possible capturing brackets is small, use a block of store on the stack, to reduce the use of malloc/free.
However, if the referenced string is the empty string, always treat it as matched, any number of times (otherwise there could be infinite loops).
However, if the second argument is non-zero then this b-tree transaction is part of a multi-file  transaction.
However, if the value passed as argument nField is non-zero and the sorter is able to guarantee a stable sort, nField is used instead.
However, if this function returns non-zero, then it is guaranteed that a call to sqlite3session_changeset() will return a  changeset containing zero changes.
However, if this is a subquery within an expression, sqlite3ResolveExprNames() will be called without a prior call to sqlite3SelectExpand().
However, if this position-list was edited in place by fts3EvalNearTrim(), then pIter may not actually point to the start of the next docid value.
However, if we end up without a first char setting for an unanchored pattern, it is worth scanning the regex to see if there is an initial asserted first char.
However, if we have already added a sample that shares this prefix, there is no need to add this one.
However, if you need to deal with dates and times in a historical context you'll want to use DateTime to avoid making the same mistakes as UNESCO.
However, in JavaScript compatibility mode, the length passed is zero.
However, in Perl's warning mode, a warning is given, so PCRE now faults it as it is almost certainly a mistake on the user's part.
However, in both cases the category contains more characters than the specials that are defined for the property being tested against.
However, in future that may change, so we include them here so as not to leave a gotcha for a future maintainer.
However, in internal events, you can not use any Ruby APIs (even object creations).
However, in order to accommodate the version of this code that uses an external "stack" implemented on the heap, it is easier to declare them all here, so the declarations can be cut out in a block.
However, in the pre-compile phase, class_uchardata gets emptied to prevent workspace overflow, so it only if the very last character in the class needs XCLASS will it contain anything at this point.
However, in this case, data is read from the sqlite_stat1 table (if it is present) before returning.
However, it calls memory allocation and freeing functions via the four indirections below, and it can optionally do callouts, using the fifth indirection.
However, it can be slightly modified to compute singular values using the divide and conquer method.
However, it decrease maximum number of Fiber.
However, it does not support prefix queries very well.
However, it is also included in the compilation of dftables.c, in which case the macro DFTABLES is defined.
However, it is created first, so we have to allow memory for it.
However, it is inaccurate if:  the RBU update contains any UPDATE operations.
However, it is not identical.
However, it is not thread-safe and must be called before creating SSLSocket objects in a multi-threaded program.
However, it is possible to override the method to provide more dynamic behavior.
However, it seems that this can be very slow on some operating systems.
However, it won't be unregistered until the script ends.
However, it's important to note that an exception that occurs in any thread except the main thread depends on #abort_on_exception.
However, it's still currently possible for sysread to raise Errno::EAGAIN if another thread read()s the IO after we return from rb_thread_wait_fd() but before we call read()
However, local variables will not be propagated to the loading environment.
However, many of the "procedures" and "functions" for modifying and accessing this structure are really macros, so we can't really make this structure opaque.
However, new applications should avoid the use of these functions.
However, no changes will be recorded in either of these scenarios.
However, normally we don't expect an error message, thus we continue.
However, now that there is the possiblity of (*THEN) occurring in the final alternative, this optimization is no longer always possible.
However, on 32-bit platforms overflows into negative lengths may occur, so it's better to not assume any particular range.
However, on FreeBSD, avoiding longjmp() more than halves the time taken to run the standard tests.
However, on Windows, instead of returning the process ID, they return a process handle.
However, on different OSes, different things are provided as built-in commands.
However, operating systems typically report errors using plain integers.
However, pReadr itself is not set up to point to its first key.
However, running cleanup before exit is recommended.
However, several more complicated situations exist.
However, since I'm used to prototypes, I've included them too.
However, since LogEst quantaties are suppose to be estimates, not exact values, this imprecision is not a problem.
However, since LogEst quantities are suppose to be estimates, not exact values, this imprecision is not a problem.
However, some of the "procedures" and "functions" for modifying and accessing this structure are really macros, so we can't really make this structure opaque.
However, sometimes a fault is not necessarily fatal.
However, such calls must not close the database connection nor finalize or reset the prepared statement in which the function is running.
However, that choice is contraversial since technically the underlying file system does not always provide powersafe overwrites.
However, that choice is controversial since technically the underlying file system does not always provide powersafe overwrites.
However, that integer is too large to be stored in a 2-byte unsigned integer, so a value of 0 is used in its place.
However, that leads to a large number of relocations when a shared library is dynamically loaded.
However, that would make it  smaller than sample 1, so the binary search would not work.
However, that's not true, as if max_allowed_packet_size is smaller than the chunk being sent to the server, the latter will complain with an error message.
However, the MSDN docs state that there is a flags parameter, and my VC6 won't link unless the code uses the version with 4 parameters.
However, the bit map we are constructing is for byte values.
However, the format of 5-byte and 6-byte characters is still checked.
However, the functions and classes exported by the module will not be available until the module is 'reloaded'.
However, the implementation is wrong.
However, the list is correct for canonical LR with one exception: it will still contain any token that will not be accepted due to an error action in a later state.
However, the matching is different.
However, the nIn multiplier should only be applied once, not once for each such term.
However, the resulting error message is misleading if the real problem is an empty input file, so we handle that case specially.
However, the signature of the callback function allows SQLite to pass it an array of void* context pointers.
However, the sqlite3_backup_remaining() and sqlite3_backup_pagecount() APIs are not strictly speaking threadsafe.
However, the syntax has been checked to ensure that the ...
However, there are possibilities to pass variable values with 'stride' with some reasons.
However, there is an exception: if we are comparing two scalars for equality, then it actually is correct to return a scalar bool instead of raising an error.
However, there is an option that disables these, for testing and for ensuring that all callouts do actually occur.
However, there's no harm in having this code always here, and it makes it less messy without all those #ifdefs.
However, these are (possibly recursive) subroutine calls, _not_ backreferences.
However, these macros may also be used to suppress warnings related to parameters that may or may not be used depending on compilation options.
However, this begins at midnight.
However, this can be changed by setting the PCRE_UCP option.
However, this can happen only at top level - if we are within parentheses, the starting BRA will still be present.
However, this function just burn CPU cycles if the stack is large enough.
However, this is expensive, as to do so it has to  iterate through the entire doclist from start to finish (since it does not know the docid for the last entry).
However, this is not permitted in this case.
However, this uses a lot more stack, so in 8.20, atomic groups that do not contain any captures generate OP_ONCE_NC, which can be handled in the old, less stack intensive way.
However, unlike a regular file, it lives in RAM and has a volatile backing storage.
However, we assume that any slots written before the current read transaction was opened remain unmodified.
However, we assume that what we are passed is a compiled regex. The print_lengths flag controls whether offsets and lengths of items are printed.
However, we can give a message for this error
However, we cannot do this when the assertion contains subroutine calls, because they can be forward references.
However, we do the appropriate tests here so that overlong sequences get diagnosed, and also in case there is ever an option for handling these larger code points.
However, we may need to convert the string containing its name into UTF-8 (i.e. if it is UTF-16 right now).
However, we still need some kind of function implementation for this routines in the function table.
However, we want to be able to timeout any user-supplied shutdown functions, so pretend we are not in a signal handler while we are calling these
However, we want to make sure that the insteadof declaration is consistent in itself.
However, when a group is optional (i.e. the minimum quantifier is zero), OP_BRAZERO or OP_SKIPZERO is inserted before it, after it has been compiled.
However, when a metadata call is done, we need to calculate max_length.
However, when none of them has changed, the same buffer info may be reused.
However, with the change of recursive back references to be atomic, we have to look for the number so that this state can be identified, as otherwise the incorrect length is computed.
However, you don't know it in advance, so it must always be called.
Human readable error text
Hybrid exponential search/linear search merge sort with hybrid natural/pairwise first pass.
I      (input) INTEGER The index of the eigenvalue to be computed.
I added 15 extra bytes for safety.
I always trace curves keeping the region between z0 and z1 to the left of the curve.
I am also told that newer versions of GCC that follow a different ABI get the byte order right.
I am free to use Q as a valuable working space until Loop 150.
I assume these types are not applicable to arrays, and were mentioned erroneously.
I call this a saddle zone.
I changed it to only consider routeable addresses as valid.
I consider this is a bug.
I could find no way of detecting that a macro is defined as an empty string at pre-processor time.
I do not know the significance of the constant 0xf000.
I don't think gzFile APIs of zlib are good for Ruby.
I don't think this will change, but if it should, then this needs to be fixed.
I don't trust portablity of toupper
I doubt that "lint" will like this much.
I exclude vertical tab because it never seems to be used in real text.
I got the idea of expanding during the round function from SSLeay
I have chosen to use the spellings found in the Encyclopedia Judaica.
I have given them names, to make them stand out more clearly.
I have yet to find a specific date when the current set of rules were known to be in use.
I include bell because some programs (particularly shell scripts) use it literally, even though it is rare in normal text.
I is the loop index and decreases from IHI to ILO in steps of 1 or 2.
I is the loop index and decreases from IHI to ILO in steps of 1.
I is the loop index and decreases from IHI to ILO in steps of at most MAXB.
I only describe the parts that I am sure about.
I opted to disallow the characters that would result in a parse error when preprocessing of the input stream.
I probably could have just used strlen...
I put the prototypes here to be independent from the OpenSSL source installation.
I really hate select().
I recommend you use other ways if you have.
I simply fixed things to get them working for now.
I start tracing each curve near its lower left corner (mesh oriented as above), which is the first point I encounter scanning through the mesh in order.
I still use the compareAndSwap to assert this invariant though.
I suppose I could have been using a character pointer instead of accesssing the array directly...
I suppose this is fine, since function cannot disappear in the same way string option can.
I suspect that if we ordered the doclists by size and flushed the largest until the buffer was half empty, that would let the less frequent terms generate longer doclists.
I think encoding and options should be arguments of this function.
I think that SetStmtOption is of little use, since most of those can only be specified before preparing/executing statements.
I think that more better value should be found, but I gave up finding it.
I think that the description in 'asdef' is out of date.
I think this could only ever be '-', but it can't hurt to check for both.
I think this is a bad design in general even if it has some reasons.
I uses rb_str_new here not rb_str_buf_new because rb_str_buf_new makes a zero-length string.
I very much doubt you can see it.
I was writing for Unix, so I just let it call itself recursively.
I would have expected the second lock to fail since there was already a lock on the file due to fd1.
I would support a wider range of dates, but I have not been able to find an authoritative definition of when leap years were to have occurred.
I'll fix it when I decied how to support user defined types.
I'll opt to apply to XHTML 1.0 the same rules as for XML 1.0.
I'm guessing that isn't likely to happen, but by using the same locking range we are at least open to the possibility.
I'm leaving it in place for people who can live with the limitations, which I only found out about after I had implemented it anyway.
I'm not sure what there parser is doing to make this happen.
I'm not sure why this test is here.
I've also made it reentrant and made a number of other changes.
I've generalized GMST0 as well, and define it
I've reviewed the changes made in OpenBSD (as of 2.7) and modified the original code in a similar way where applicable.
I) The global storage.
I.2) For each FK for which the table is the parent table,  search the child table for rows that correspond to the new row in the parent table.
I.e. opendir() is not usable.
I.e., the caller must still be able to filter directories out.
I.e.: unused literals can belong to branches, which can be encoded as B or BL.
I/O descriptors for __sfvwrite().
I/O error: lastErrno set by seekAndRead
I/O methods on journal files
I/O streams are automatically closed when they are claimed by the garbage collector.
I0    (input) INTEGER First index. N0    (input) INTEGER Last index. Z     (input) DOUBLE PRECISION array, dimension ( 4*N ) Z holds the qd array.
I0    (input) INTEGER First index. N0    (input) INTEGER Last index. Z     (input) REAL array, dimension ( 4*N ) Z holds the qd array.
I1 and I2 are the indices of the first row and last column of H to which transformations must be applied.
I386/486 - Disassembler and related functions
IB has a strange way of handling VARCHAR arrays.
IBM extended characters
IBM extended characters (without symbols)
IC : center row of each node NL : number of rows of left  subproblem NR : number of rows of right subproblem NLF: starting row of the left   subproblem NRF: starting row of the right  subproblem
ICC_SET is the same as SET_FLAGS.
ICHAR('A') on Prime machines returns 193 which is the same as ICHAR('A') on an EBCDIC machine.
ICU ResourceBundle has no clone implementation
ICU break-iterator object
ICU library collation object
ICU provides two types of case mapping, "general" case mapping and "language specific".
ID of current select for EXPLAIN output
IDX    (workspace) INTEGER array, dimension ( N ) This will contain the permutation used to sort the contents of D into ascending order.
IDX    (workspace) INTEGER array, dimension(N) This will contain the permutation used to sort the contents of D into ascending order.
IDXP   (workspace) INTEGER array, dimension ( N ) This will contain the permutation used to place deflated values of D at the end of the array.
IDXP   (workspace) INTEGER array, dimension(N) This will contain the permutation used to place deflated values of D at the end of the array.
IDXQ   (input) INTEGER array, dimension ( N ) This contains the permutation which separately sorts the two sub-problems in D into ascending order.
IDXQ   (input) INTEGER array, dimension(N) This contains the permutation which separately sorts the two sub-problems in D into ascending order.
ID_TABLE_SWAP_RECENT_ACCESS
ID_TABLE_USE_COALESCED_HASHING
ID_TABLE_USE_ID_SERIAL
ID_TABLE_USE_LIST_SORTED
ID_TABLE_USE_LIST_SORTED_LINEAR_SMALL_RANGE
ID_TABLE_USE_SMALL_HASH
ID_TABLE_USE_ST_DEBUG
IDs have been resolved to COLUMNs
IE uses commas, FF uses spaces
IE6 don't accept Windows-31J but csWindows31J.
IEEE    (input) LOGICAL A logical flag specifying whether or not the arithmetic system is thought to comply with the IEEE standard.
IEEE   (input) LOGICAL Flag for IEEE or non IEEE arithmetic (passed to DLASQ5).
IEEE   (input) LOGICAL Flag for IEEE or non IEEE arithmetic (passed to SLASQ5).
IEEE  (input) LOGICAL Flag for IEEE or non IEEE arithmetic.
IEEE 802 format: Six hexadecimal digits separated by colons.
IEEE 802 format: Six hexadecimal digits separated by hyphens.
IEEE1   (output) LOGICAL Specifies whether rounding appears to be done in the IEEE 'round to nearest' style.
IGNORE means that the particular row that caused the constraint error is not inserted or updated.
II) The dependency table.
III) The hashtable that maps string keys to string values.
IIS is always making things more difficult.
ILO     (input) INTEGER IHI     (input) INTEGER ILO and IHI must have the same values as in the previous call of CGEHRD.
ILO     (input) INTEGER IHI     (input) INTEGER ILO and IHI must have the same values as in the previous call of DGEHRD.
ILO     (input) INTEGER IHI     (input) INTEGER ILO and IHI must have the same values as in the previous call of SGEHRD.
ILO     (input) INTEGER IHI     (input) INTEGER ILO and IHI must have the same values as in the previous call of ZGEHRD.
ILO     (input) INTEGER IHI     (input) INTEGER It is assumed that A is already upper triangular in rows and columns 1:ILO-1 and IHI+1:N.
ILO     (input) INTEGER IHI     (input) INTEGER It is assumed that H is already upper triangular in rows and columns 1:ILO-1 and IHI+1:N.
ILO     (input) INTEGER IHI     (input) INTEGER The integers ILO and IHI determined by CGEBAL.
ILO     (input) INTEGER IHI     (input) INTEGER The integers ILO and IHI determined by DGEBAL.
ILO     (input) INTEGER IHI     (input) INTEGER The integers ILO and IHI determined by SGEBAL.
ILO     (input) INTEGER IHI     (input) INTEGER The integers ILO and IHI determined by ZGEBAL.
ILO and IHI are normally set by a previous call to CGEBAL, and then passed to CGEHRD when the matrix output by CGEBAL is reduced to Hessenberg form.
ILO and IHI are normally set by a previous call to DGEBAL, and then passed to SGEHRD when the matrix output by DGEBAL is reduced to Hessenberg form.
ILO and IHI are normally set by a previous call to SGEBAL, and then passed to SGEHRD when the matrix output by SGEBAL is reduced to Hessenberg form.
ILO and IHI are normally set by a previous call to ZGEBAL, and then passed to CGEHRD when the matrix output by ZGEBAL is reduced to Hessenberg form.
ILOZ    (input) INTEGER IHIZ    (input) INTEGER Specify the rows of Z to which transformations must be applied if WANTZ is .TRUE..
IMAP prefetch text when fetching header
IMMEDIATEJOINSERTMATCHPLANALYZEPRAGMABORTVALUESVIRTUALIMITWHEN
IMP: R-02065-49465 The left-hand side of the LIKE or GLOB operator must be the name of an indexed column with TEXT affinity.
IMP: R-04922-24076 The sqlite_compileoption_get() SQL function is a wrapper around the sqlite3_compileoption_get() C/C++ function.
IMP: R-23979-26855 The abs(X) function returns the absolute value of the numeric argument X.
IMP: R-24470-31136 This function is an SQL wrapper around the sqlite3_sourceid() C interface.
IMP: R-25361-16150 This function is omitted from SQLite by default.
IMP: R-31676-45509 If X is the integer -9223372036854775808 then abs(X) throws an integer overflow error since there is no equivalent positive 64-bit two complement value.
IMP: R-39564-36305 The sqlite_compileoption_used() SQL function is a wrapper around the sqlite3_compileoption_used() C/C++ function.
IMP: R-48699-48617 This function is an SQL wrapper around the sqlite3_libversion() C-interface.
IMP: R-51513-12026 The last_insert_rowid() SQL function is a wrapper around the sqlite3_last_insert_rowid() C/C++ interface function.
IMP: R-52756-41993 This function is a wrapper around the sqlite3_total_changes() C/C++ interface.
IMP: R-59782-00072 The soundex(X) function returns a string that is the soundex encoding of the string X.
IMP: R-62073-11209 The changes() SQL function is a wrapper around the sqlite3_changes() C/C++ function and hence follows the same rules for counting changes.
IMPL(create) will be "hash_id_table_create" and so on
IMPLEMENTATION-OF: R-00140-37445 SQLite automatically serializes calls to the xInit method, so the xInit method need not be threadsafe.
IMPLEMENTATION-OF: R-26000-56589 The xShutdown() method may be NULL.
IMPLEMENTATION-OF: R-26801-64137 If the xInit() method is NULL, then the built-in default page cache is used instead of the application defined page cache.
IMPLEMENTATION-OF: R-30185-15359 The default suggested cache size is -2000, which means the cache size is limited to 2048000 bytes of memory.
IMPLEMENTATION-OF: R-34230-56049 SQLite automatically increments the schema-version whenever the schema changes.
IMPLEMENTATION-OF: R-34391-24921 The sqlite3_release_memory() routine is a no-op returning zero if SQLite is not compiled with SQLITE_ENABLE_MEMORY_MANAGEMENT.
IMPLEMENTATION-OF: R-35210-63508 The sqlite3_libversion_number() function returns an integer equal to SQLITE_VERSION_NUMBER.
IMPLEMENTATION-OF: R-42059-47211 If the argument N is positive then the suggested cache size is set to N.
IMPLEMENTATION-OF: R-44699-57140 This mode works the same way as SQLITE_CHECKPOINT_RESTART with the addition that it also truncates the log file to zero bytes just prior to a successful return.
IMPLEMENTATION-OF: R-46199-30249 SQLite guarantees that the second argument to xRealloc is always a value returned by a prior call to xRoundup.
IMPLEMENTATION-OF: R-48205-43578 The default suggested cache size can be altered using the SQLITE_DEFAULT_CACHE_SIZE compile-time options.
IMPLEMENTATION-OF: R-57228-12904 Invoking sqlite3_finalize() on a NULL pointer is a harmless no-op.
IMPLEMENTATION-OF: R-59782-36818 The SQLITE_CHECKPOINT_FULL, RESTART and TRUNCATE modes also obtain the exclusive "writer" lock on the database file.
IMPLEMENTATION-OF: R-61436-13639 If the argument N is negative, then the number of cache pages is adjusted to use approximately abs(N*1024) bytes of memory.
IMPLEMENTATION-OF: R-62028-47212 All calls obtain an exclusive  "checkpoint" lock on the database file.
IMPLEMENTATION-OF: R-63124-39300 The sqlite3_sourceid() function returns a pointer to a string constant whose value is the same as the SQLITE_SOURCE_ID C preprocessor macro.
IMPLEMENTATION-OF: R-64451-07163 The soft_heap_limit pragma always returns the same integer that would be returned by the sqlite3_soft_heap_limit64(-1) C-language function.
IMPORTANT NOTE FOR ZIPVFS USERS: The RBU extension works with all of SQLite's built-in VFSs, including the multiplexor VFS.
IMPORTANT:  Changing the PENDING byte from 0x40000000 results in an incompatible database file format.
IMPORTANT: On some systems it is required that RESBUF is correctly aligned for a 32 bits value.
IMPORTANT: The estimatedRows field was added to the sqlite3_index_info structure for SQLite version 3.8.2.
IMPORTANT: This function can't do the normalization, because it doesn't know the weekmask.
IN PARTICULAR, NEITHER THE AUTHOR NOR LUCENT MAKES ANY REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.
IN WAL mode, WalBeginWriteTransaction() is called to lock the log file.
IN operator used as a loop
IN operator used for membership test
IN terms are only valid for sorting in the ORDER BY LIMIT  optimization, and then only if they are actually used by the query plan
IN/OUT An error handle
IN/OUT Pointer to array of length of data fetched
IN/OUT bytes toread/read
IN/OUT chars toread/read
IN/OUT handle to the requested SQL query
IN/OUT parameter (*pa) points to a position list n bytes in size.
IN/OUT pointer to a buffer
IN/OUT pointer to a pointer to a define handle
IN/OUT: Allocate from *ppFrom
IN/OUT: Checksum value
IN/OUT: Current offset
IN/OUT: Current structure of index
IN/OUT: Decrement if row is deleted
IN/OUT: Docid pointer
IN/OUT: Elements in *paRight
IN/OUT: First token of snippet
IN/OUT: Increment by bytes written
IN/OUT: Increment this value by PMA size
IN/OUT: Integer value
IN/OUT: Iterator pointer
IN/OUT: Lastest rowid seen so far
IN/OUT: Left input list
IN/OUT: Left-hand buffer pointer
IN/OUT: Mask of phrases seen
IN/OUT: Mask of tokens to highlight
IN/OUT: Output pointer
IN/OUT: Page content -area pointer
IN/OUT: PendingList structure
IN/OUT: Point to read varint from
IN/OUT: Pointer into buffer
IN/OUT: Pointer into position-list buffer
IN/OUT: Pointer to PendingList struct
IN/OUT: Pointer to output buffer
IN/OUT: Pointer to position list
IN/OUT: Pointer to poslist
IN/OUT: Pointer to string buffer
IN/OUT: Position list
IN/OUT: Preallocated output buffer
IN/OUT: Previous rowid written (if any)
IN/OUT: Previous value written to list
IN/OUT: Record pointer
IN/OUT: Right hand input list
IN/OUT: Right input list
IN/OUT: Right-hand buffer pointer
IN/OUT: Right/output doclist
IN/OUT: SQLITE_OPEN_XXX flags
IN/OUT: SegmentNode handle
IN/OUT: SegmentWriter handle
IN/OUT: Size of buffer *ppList in bytes
IN/OUT: Stucture of index
IN/OUT: The WHERE clause to add to
IN/OUT: Tokens in phrase of *paPoslist
IN/OUT: True after first int written
IN/OUT: Value read from position-list
IN: Elements in array *paLeft
IN: Left hand input list
IN: Pointer to the SQLiteThread structure
IN: Size of poslist in bytes
INCREF on entry DECREF on exit
INCV    (input) INTEGER The increment between elements of v.
INCX    (input) INTEGER The increment between elements of X.
INCX    (input) INTEGER The increment between successive values of IPIV.
INCX    (input) INTEGER The increment between successive values of the vector X.
INCX    (input) INTEGER The spacing between successive elements of X.
INCX must not be zero.
INCY must not be zero.
INDIRECT element may point to UNDEF-ined slots
INDX    (input) INTEGER array, dimension (N) The permutation used to arrange the columns of the deflated Q matrix into three groups (see DLAED2).
INDX    (input) INTEGER array, dimension (N) The permutation used to arrange the columns of the deflated Q matrix into three groups (see SLAED2).
INDX   (workspace) INTEGER array, dimension (N) The permutation used to sort the contents of D into ascending order.
INDX   (workspace) INTEGER array, dimension (N) The permutation used to sort the contents of DLAMDA into ascending order.
INDX   (workspace) INTEGER array, dimension (N) This will contain the permutation used to sort the contents of D into ascending order.
INDXP  (workspace) INTEGER array, dimension (N) The permutation used to place deflated values of D at the end of the array.
INDXP  (workspace) INTEGER array, dimension (N) This will contain the permutation used to place deflated values of D at the end of the array.
INDXP(1:K) points to the nondeflated D-values and INDXP(K+1:N) points to the deflated eigenvalues.
INDXQ  (input) INTEGER array, dimension (N) The permutation which separately sorts the two sub-problems in D into ascending order.
INDXQ  (input) INTEGER array, dimension (N) This contains the permutation which separately sorts the two sub-problems in D into ascending order.
INDXQ  (input/output) INTEGER array, dimension (N) On entry, the permutation which separately sorts the two subproblems in D into ascending order.
INDXQ  (input/output) INTEGER array, dimension (N) The permutation which separately sorts the two sub-problems in D into ascending order.
INDXQ  (output) INTEGER array, dimension (N) This contains the permutation which will reintegrate the subproblem just solved back into sorted order, ie.
INFO    (input) INTEGER The position of the invalid parameter in the parameter list of the calling routine.
INFO    (output) INTEGER An error flag.
INFO  (output) INTEGER On exit, a value of 0 indicates a successful exit.
INFRINGES ON USER NAME SPACE
INIT (NOTE: ordering of methods is the same as in 'man bn')
INIT rsa, dsa, dh, ec
INODE  (output) INTEGER array, dimension ( N ) On exit, centers of subproblems.
INPUTS RESULT XMLRPC_VALUE.
INPUTS XMLRPC_VALUE of type xmlrpc_vector RESULT Next XMLRPC_VALUE in vector, or NULL if at end.
INPUTS XMLRPC_VALUE target of query RESULT data type of value as enumerated by XMLRPC_VALUE_TYPE_EASY xmlrpc_type_none if not a value.
INPUTS fault_code     application specific error code.
INPUTS id        The id of the vector, or NULL type      New type of vector as enumerated by XMLRPC_VECTOR_TYPE RESULT XMLRPC_VALUE  The new vector, or NULL on failure.
INPUTS id        id of the new value, or NULL s         The desired new binary value len       The length of s, or NULL.
INPUTS id        id of the newly created value, or NULL d         The desired new double value RESULT void SEE ALSO XMLRPC_GetValueDouble () XMLRPC_CreateValueDouble () XMLRPC_VALUE SOURCE
INPUTS mem    memory to free RESULT void NOTES Useful for OS's where memory must be free'd in the same library in which it is allocated.
INPUTS none RESULT newly allocated XMLRPC_SERVER NOTES SEE ALSO XMLRPC_ServerDestroy () XMLRPC_GetGlobalServer () SOURCE
INPUTS none RESULT pointer to global server, or 0 if error.
INPUTS request -- previously allocated request struct RESULT XMLRPC_VALUE -- pointer to error value stored, or NULL NOTES This is a private function for usage by internals only.
INPUTS request -- previously allocated request struct methodName -- name of method SEE ALSO XMLRPC_RequestNew () XMLRPC_RequestGetMethodName () XMLRPC_RequestFree () SOURCE
INPUTS root - the element to free RESULT void NOTES SEE ALSO xml_elem_free () xml_elem_new () SOURCE
INPUTS string - value containing string to be free'd RESULT void NOTES caller is responsible for allocating and freeing simplestring* struct itself.
INPUTS target    The target vector ...
INPUTS val -- previously allocated XMLRPC_VALUE buf_len -- length of returned buffer, if not null RESULT char* -- newly allocated buffer containing XML.
INPUTS value     The target XMLRPC_VALUE s         The desired new binary value len       The length of s, or NULL.
INPUTS value     The target XMLRPC_VALUE val       The desired new double value RESULT void SEE ALSO XMLRPC_GetValueDouble () XMLRPC_CreateValueDouble () XMLRPC_VALUE SOURCE
INPUTS value     The xml value who's ID we will set.
INSERT      deferred    Decrement the "deferred constraint counter".
INSERT      deferred    Increment the "deferred constraint counter".
INSERT      immediate   Decrement the "immediate constraint counter".
INSERT STACK UNION HERE
INSERT operations:  I.1) For each FK for which the table is the child table, search the parent table for a match.
INSERT or UPDATE operations
INSERT statements may not use any default values.
INSTEAD OF triggers can only appear on views and BEFORE triggers cannot appear on views.
INSTEAD of triggers are only for views and views only support INSTEAD of triggers.
INST_NAME - CONDITIONAL remove this flag.
INTEGER_PACK_2COMP is not specified: -2 : negative overflow.
INTEGER_PACK_2COMP with INTEGER_PACK_NEGATIVE mean assuming the higher bits are 1.
INTERIOR_MIN_TERMS (default 7) keeps large terms from monopolizing interior nodes and making the tree too skinny.
INTERNAL FUNCTION PROTOTYPES
INTERSECT is different from the others since it requires two temporary tables.
INTERSECT_COMP_DATA_NONE - array_intersect_key() INTERSECT_COMP_DATA_INTERNAL - array_intersect_assoc()
INTERSECT_COMP_DATA_USER - array_uintersect_assoc()
INTERSECT_KEY is subset of INTERSECT_ASSOC.
INT_MAX is used because rb_long2int is used later.
INT_MAX is used for this purpose instead.
IN_INDEX_LOOP, _MEMBERSHIP, and/or _NOOP_OK
IN_INDEX_NOOP       - No cursor was allocated.
IO.new is called by various File and IO opening methods such as IO::open, Kernel#open, and File::open.
IO.popen, the Open3 library, or  Process#spawn may also be used to communicate with subprocesses through an IO.
IOW, both opaque pixels and transparent pixels will be mapped into the transparent entry.
IO_REPARSE_TAG_MOUNT_POINT
IP address to bind to is specified
IP and port conversion box
IPIV    (input) INTEGER array, dimension (M*abs(INCX)) The vector of pivot indices.
IPTC International Press Telecommunications Council
IPV6_PKTINFO is defined by RFC 3542.
IP_MULTICAST_IF: struct in_addr IP_ADD_MEMBERSHIP: struct ip_mreq IP_DROP_MEMBERSHIP: struct ip_mreq  But they uses an IP address to specify an interface.
IP_MULTICAST_TTL IP_MULTICAST_LOOP  However Linux and FreeBSD setsockname accepts int argument as well as u_char.
IP_PKTINFO is not standard.
IPv6 catch-all + IPv4-mapped
IS AWARE OF THE POSSIBILITY OF SUCH DAMAGES.
ISO C forbids casts of data pointers to function pointers.
ISO8859 Latin-1 support, no conversion
ITER   (output) INTEGER Number of iterations.
ITN is the total number of QR iterations allowed.
ITN is the total number of multiple-shift QR iterations allowed.
IWORK  (workspace) INTEGER array.
IWORK  INTEGER work array.
Iain Duff, AERE Harwell.
Id of this connection with its winShmNode
Id of this connection within its unixShmNode
Ideal number of tokens to shift forward
Ideally these would live in a handle.h file but our internal build system can't support that at the moment.
Ideally use dbcanquery here, but there is a bug in FreeTDS's implementation of dbcanquery It has been resolved but is currently only available in nightly builds
Ideally we should check 4 paths to follow gnu_debuglink, but we handle only one case for now as this format is used by some linux distributions.
Ideally, here the descriptor would contain all the information needed.
Ideally, the start of the snippet should be pushed forward in the document nDesired tokens.
Identical algorithm to SHA512, using alternate initval and truncation
Identical to SHA512Final, but with truncation
Identifiers have been resolved
Identifiers in expression are matched to tables.
Identifies ndbm library version.
Identify Bison output.
Identify column names if results of the SELECT are to be output.
Identify reducible and irreducible loops
Identify the output register
Identify the response by signing the certificate key ID
Identifying these points is easy.
Identity function, used to suppress warnings about constant conditions.
Idx of column in child table
If  OPFLAG_SAVEPOSITION bit of P5 is clear, then the cursor will be left in an undefined state.
If  an error has already occurred when this function is called, it is a no-op.
If  an error occurs while running the checkpoint, an SQLite error code is  returned (i.e. SQLITE_IOERR).
If  any are, then the constraint is considered satisfied.
If  argument bNC is true, then the SQLITE_FUNC_NEEDCOLL flag is set.
If  bExtend is non-zero and the requested shared-memory region has not yet  been allocated, it is allocated by this function.
If  isWrite is non-zero and the requested shared-memory region has not yet  been allocated, it is allocated by this function.
If  malloc() has failed, the threads mallocFailed flag is cleared and the result code of statement pStmt set to SQLITE_NOMEM.
If  pnToken is not NULL, then it is set to the number of tokens in all matchable phrases of the expression.
If  this call returns SQLITE_NOTFOUND, then the RBU vfs is not in use.
If "exception: false" is passed, this method returns a symbol of :wait_readable, :wait_writable, or nil, rather than raising an exception.
If "hitend" is set afterwards, remember the first starting point for which a partial match was found.
If "mimetype" is non-NULL, it should point to a pointer allocated with emalloc().
If "previous" is set and it is not at the start of the work space, move it back to there, in order to avoid filling up the work space.
If 'apply_tzinfo' is 1, this function uses the tzinfo to convert to UTC time, otherwise it returns the struct with the local time.
If 'arr' is an object array, copy the object as is unless 'obj' is a zero-dimensional array, in which case we copy the element in that array instead.
If 'date' does not appear within the holiday range, returns 'holidays_begin' if 'date' is before all holidays, or 'holidays_end' if 'date' is after all holidays.
If 'dtype' is NULL, the dtype of 'operand' is used for the result.
If 'dtype' isn't NULL, this function steals a reference to 'dtype'.
If 'dtype' isn't NULL, this function steals its reference.
If 'iop' broadcasts to the mask, the result would be more than one mask value per reduction element, something which is invalid.
If 'iop' is being broadcast to 'maskop', we have the invalid situation described above.
If 'len' is not NULL, the length is stored in *len.
If 'local' is non-zero, it produces a string in local time with a +-#### timezone offset.
If 'local' is zero and 'utc' is non-zero, produce a string ending with 'Z' to denote UTC.
If 'op_axes' is being used, force 'ndim'
If 'out' is NULL, it allocates a new array whose shape matches that of 'operand', except for at the reduction axes.
If 'out' isn't NULL, this function creates a view conforming to the number of dimensions of 'operand', adding a singleton dimension for each reduction axis specified.
If 'thistype' is not a scalar, it must be safely castable
If (type, 1) was given, it is equivalent to type...
If * further matching is needed, it will be done below.
If *flex_dtype is NULL, returns immediately, without setting an exception.
If *pArg is initially negative then this is a query.
If *pArg is inititially negative then this is a query.
If *pMonth is 13, the SDN represents one of the holidays at the end of the year and pDay will be in the range 1 to 6 inclusive.
If *pPgno refers to a pointer-map page, allocate two new pages at the end of the file instead of one.
If *pRC is initially non-zero (non-SQLITE_OK) then this routine is a no-op.
If *pRc is initially non-zero then this routine is a no-op.
If *pRc is non-zero when this function is called, it is a no-op.
If *pRc is not SQLITE_OK when this function is called, it immediately returns 0.
If *pRc is not SQLITE_OK when this function is called, it is a no-op (and a NULL pointer is returned).
If *pRc is not SQLITE_OK when this function is called, it is a no-op.
If *pRc is not SQLITE_OK when this function is called, then no attempt is made to write any data to disk.
If *pRc is not SQLITE_OK, or if pExpr is not the root node of a NEAR cluster, then this function returns 1 immediately.
If *pRc is other than SQLITE_OK when this function is called, it is a no-op (NULL is returned).
If *pRc is other than SQLITE_OK when this function is called, it is a no-op.
If *pRc is set to any value other than SQLITE_OK when this function is  called, it is a no-op.
If *paOne points to the "no value" placeholder, *pnVal is set to 1.
If *pbFirst is non-zero when this function is called, then the value  written is either (iVal-*piPrev) (if bDescIdx is zero) or (*piPrev-iVal) (if bDescIdx is non-zero).
If *pbFirst is zero when this function is called, the value written to the buffer is that of parameter iVal.
If *piPartIdxLabel is not NULL, fill it in with a label and jump to that label if pIdx is a partial index that should be skipped.
If *pp does not being with a decimal digit SQLITE_ERROR is returned and the output value undefined.
If *pp does not point to or past pEnd, then a single varint is read from *pp.
If *pp points past the end of the current position-list, set *pi to  POSITION_LIST_END and return.
If *pp1 is exactly nTokens before *pp2
If *ppVal is initially NULL then a new sqlite3_value object is allocated.
If *ppVal is initially NULL then the caller is responsible for  ensuring that the value written into *ppVal is eventually freed.
If *target is NULL determine required destination buffer size (pre-flighting).
If +ARGF.set_encoding+ has been called with two encoding names, the second is returned.
If +adler+ is omitted, it assumes that the initial value is given to +adler+.
If +b+ is a BigDecimal, the precision of the result is +b+'s precision of internal representation from platform.
If +b+ is a Float, the precision of the result is Float::DIG+1.
If +buffer+ is given, the encryption/decryption result will be written to it.
If +cipher+ and +pass_phrase+ are given they will be used to encrypt the key.
If +classpath+ is found, the hidden instance variable __classpath__ is set to the found path, and __tmp_classpath__ is removed.
If +count+ is negative then it rotates in the opposite direction, starting from the end of +self+ where +-1+ is the last element.
If +count+ is negative then it rotates in the opposite direction, starting from the end of the array where +-1+ is the last element.
If +crc+ is omitted, it assumes that the initial value is given to +crc+.
If +critical+ is true the extension is marked critical.
If +ctx+ is provided the SSL Sockets initial params will be taken from the context.
If +decimal+ is NaN, returns NaN.
If +decimal+ is infinity, returns Infinity.
If +decimal+ is positive infinity, returns Infinity.
If +decimal+ is zero or negative, raises Math::DomainError.
If +der_string+ is given, decodes +der_string+ as DER.
If +digest+ is not specified, SHA-1 is used.
If +error+ is given, then check only for +error+ type deferred events.
If +ifnone+ is not given, raises IndexError.
If +int+ doesn't fit in a +Float+, the result is infinity.
If +klass+ (should be Class object) is given, return the total memory size of instances of the given class.
If +local_host+ and +local_port+ are specified, then those parameters are used on the local end to establish the connection.
If +mode+ parameter is given, this parameter will be bitwise-ORed.
If +n+ is not specified, yield all permutations of all elements.
If +name+ is nil, then all builtin engines are loaded.
If +name+ is not found, then nil is returned.
If +non_block+ is true, the thread isn't suspended, and +ThreadError+ is raised.
If +path+ is a dotfile, or starts with a period, then the starting dot is not dealt with the start of the extension.
If +pos+ is a negative integer a TypeError exception is raised.
If +replacement+ is a String it will be substituted for the matched text.
If +reverse_lookup+ is +true+ or +:hostname+, hostname is obtained from numeric_address using reverse lookup.
If +safe+ is true, generates a safe prime.
If +seed+ is omitted, the generator is initialized with Random.new_seed.
If +status+ is given, protects from any exceptions and sets the jump status to it, and returns -1.
If +string+ is nil, this method finishes the stream, just like Zlib::ZStream#finish.
If +string+ is omitted, it returns the Adler-32 initial value.
If +string+ is omitted, it returns the CRC initial value.
If +sym+ is given, it will be sent to the opened console with +args+ and the result will be returned instead of the console IO itself.
If +throw+ is not called, the block executes normally, and +catch+ returns the value of the last expression evaluated.
If +timeout+ is given, this method returns after +timeout+ seconds passed, even if no other thread doesn't signal.
If +to_str+ is shorter than +from_str+, it is padded with its last character in order to maintain the correspondence.
If +utc_offset+ is given, it is used instead of the local time.
If -1 is returned, the buffer is left in an  undefined state.
If -s has been specified, treat character special files like ordinary files.
If 0 assume that there is no extra operand.
If 1, the new.* table.
If 2nd argument is omitted, the default is WIN32OLE.
If 2nd param is NULL, use internal row counter to access next row
If 8+3 names are possible, then the journal file might not contain a '-' character.
If ::getlogin fails, try ::getpwuid.
If A has sufficiently more columns than rows, first reduce using the LQ decomposition (if sufficient workspace available)
If A has sufficiently more rows than columns, first reduce using the QR decomposition (if sufficient workspace available)
If ALPHA is subnormal, it may lose relative accuracy
If AUTOVACUUM is disabled then a zero is stored in register P2.
If AUTOVACUUM is enabled then it is possible that another root page might be moved into the newly deleted root page in order to keep all root pages contiguous at the beginning of the database.
If Addrinfo object is preferred, use Addrinfo.getaddrinfo.
If Array#pop or Array#shift has been called, the array will be still shared with the snapshot, but the array length will differ.
If B is less than the amount of data that will fit on a single leaf page of an intkey table in this database, then the average docsize is 1.
If B is lower bidiagonal, update U by those Givens rotations which rotated B to be upper bidiagonal
If C contiguous was requested, and arr is not
If C is defined then so is B.
If CGI file is a script, try to read the interpreter line
If CHANGESET_REPLACE is returned by an SQLITE_CHANGESET_CONFLICT conflict handler, then the conflicting row is removed from the database and a second attempt to apply the change is made.
If CHANGESET_REPLACE is returned by an SQLITE_CHANGESET_DATA conflict handler, then the conflicting row is either updated or deleted, depending on the type of change.
If CLAHQR failed to compute all NS eigenvalues, use the unconverged diagonal elements as the remaining shifts.
If CLOCKS_PER_SEC is 1000000 and clock_t is 32 bits integer type, it cannot represent over 72 minutes.
If CLOCKS_PER_SEC is 1000000 as SUS, the resolution is 1 microsecond.
If CollSeq.xCmp is NULL, it means that the collating sequence is undefined.
If DECREF is needed on source fields, may need to process all the fields
If DECREF is needed on source fields, will need to also go through its fields.
If DLAHQR failed to compute all NS eigenvalues, use the unconverged diagonal elements as the remaining shifts.
If EOF is reached, readpartial raises EOFError.
If EP_FromJoin, the right table of the join
If Encoding.default_internal is nil then WIN32OLE.codepage is initialized according to Encoding.default_external.
If F exceeds G in magnitude, CS will be positive.
If F is a NULL pointer, then sqlite3_uri_parameter(F,P) returns NULL and sqlite3_uri_boolean(F,P,B) returns B.
If F is not a NULL pointer and is not a database file pathname pointer that SQLite passed into the xOpen VFS method, then the behavior of this routine is undefined and probably undesirable.
If FD_CLOEXEC is available, rb_fork_async_signal_safe waits the child's execve.
If FNM_PATHNAME is set, only path element will be matched.
If FORDELETE is set, that is a hint to the implementation that this cursor will only be used to seek to and delete entries of an index as part of a larger DELETE statement.
If FTS_LOG_MERGES is defined, call sqlite3_log() to report each automatic and incremental merge operation that takes place.
If Fts3Cursor.pMIBuffer is NULL, then this is the first time the matchinfo function has been called for this query.
If Fts3Expr.eType is FTSQUERY_PHRASE and isLoaded is true, then aDoclist  points to a malloced buffer, size nDoclist bytes, containing the results  of this phrase query in FTS3 doclist format.
If HAVING is present but there is no ORDER BY, we will get an error.
If I add more options, it would make sense to create a nice static struct and loop over it.
If I understand correctly, this is only ever used to round off the final decimal digit of precision
If I'm tracing a boundary, I'm always moving CCW (counter clockwise) around the zone that exists.
If INTEGER_PACK_2COMP is specified, 2's complement representation of val is filled in the buffer.
If IN_INDEX_NOOP is returned, the RHS has not yet been coded.
If IO.pipe is used instead of PTY.open, this code deadlocks because factor's stdout is fully buffered.
If IPIV is negative, the pivots are applied in reverse order.
If JIT support was compiled and requested, attempt the JIT compilation.
If JOURNAL_HDR_SZ bytes cannot be read from the journal file an error code is returned.
If JSON or PATH is malformed, throw an error.
If Jan 1 was a Monday through Thursday, it was in week 1.
If LcsIterator.iCol is set to the following value, the iterator has finished iterating through all offsets for all columns.
If MALLOC is undefined, malloc will be invoked directly -- and assumed always to succeed.
If MATCH_SKIP_ARG reaches this level it means that a MARK that matched the SKIP's arg was not found.
If Mavericks and AVX are detected the call to SGEMV is emulated with a call to SGEMM if the arrays are not 32 byte aligned.
If N is exceeds the number of available subterms, return NULL.
If N is larger than the minimum, use the surplus as an initial allocation of entries available to be filled.
If N is negative, then the default memory map limit determined by sqlite3_config(SQLITE_CONFIG_MMAP_SIZE) is set.
If N is negative, then the number of pages is adjusted so that the cache uses -N kibibytes of memory.
If N is omitted, use -1.
If N is out of range, return 0.
If N is out of range, return a NULL pointer.
If N is positive then that is the number of pages in the cache.
If N is positive, then N pages worth of memory are allocated using a single sqlite3Malloc() call and that memory is used for the first N pages allocated.
If N is smaller than the minimum divide size (SMLSIZ+1), then solve the problem with another solver.
If N is smaller than the minimum divide size SMLSIZ, then solve the problem with another solver.
If N times the inner stride doesn't equal this stride, the multi-dimensionality is needed.
If NCC is nonzero, LDC must also be at least N.
If NCVT is nonzero LDVT must also be at least N.
If NOMEM is returned, then the encoding of the value may not have changed.
If NO_EMPTY flag is set
If NPY_TIME_T is 64 bit, then there is no such problem in practice.
If NULL is given the subject is set to "No Subject" 3) mailTo:  Destination address 4) data:        Null terminated string containing the data to be send.
If NULL is passed to this function, we assume a malloc() failed during sqlite3_open().
If NULL is returned, session module create new ID by using php_session_create_id().
If NULL use PRIMARY KEY
If NULL, then tracing is turned off.
If NULL, use the default
If OLE method requires the argument which is different from the variant by automatic conversion of Win32OLE, you can convert the specfied variant type by using WIN32OLE_VARIANT class.
If OMIT_TRIGGER is defined but OMIT_FOREIGN_KEY is not, only some of the functions are no-oped.
If ORDER BY makes no difference in the output then neither does DISTINCT so it can be removed too.
If Object type, then it's already been set to zero, though.
If P is a query parameter of F has no explicit value, then sqlite3_uri_parameter(F,P) returns a pointer to an empty string.
If P1  does contain an entry whose prefix matches the P3/P4 record then control falls through to the next instruction and P1 is left pointing at the matching entry.
If P1 does contain a record with rowid P3 then  leave the cursor pointing at that record and fall through to the next instruction.
If P1 does contain a record with rowid P3 then leave the cursor pointing at that record and fall through to the next instruction.
If P1 does not contain a record with rowid P3 then jump immediately to P2.
If P1 holds a NULL then store a NULL in P2.
If P1 is 0, then all SQL statements become expired.
If P1 is non-zero, the database constraint counter is incremented  (deferred foreign key constraints).
If P1 is non-zero, then only the currently executing statement is affected.
If P1 is non-zero, then only the currently executing statement is expired.
If P1 is non-zero, then the jump is taken if the database constraint-counter is zero (the one that counts deferred constraint violations).
If P1 is not currently open, this instruction is a no-op.
If P1 is not open then the behavior is undefined.
If P1 is not zero, then it is a register that a subsequent min() or max() aggregate will set to 1 if the current row is not the minimum or maximum.
If P1 is zero, the jump is taken if the statement constraint-counter is zero (immediate foreign key constraint violations).
If P2 is 0 or if the table or index is not empty, fall through to the following instruction.
If P2 is non-zero, then a write-transaction is started, or if a  read-transaction is already active, it is upgraded to a write-transaction.
If P2 is not zero, jump to instruction P2.
If P2 is true, roll back any currently active btree transactions.
If P2 is zero, then a read-transaction is started.
If P3 greater than P2, then also write NULL into register P3 and every register in between P2 and P3.
If P3 is greater than zero, then the value stored in register P3 is also incremented by the number of rows in the table being cleared.
If P3 is less than P2 (typically P3 is zero) then only register P2 is set to NULL.
If P3 is not zero and the content of register P3 is equal to P5, then the datatype of the register P2 is converted to BLOB.
If P4 is NULL then all index fields have the affinity BLOB.
If P4 is NULL then all index fields have the affinity NONE.
If P4 is not NULL then it points to a Table object.
If P4 is not NULL then the P1 cursor must have been positioned using OP_NotFound prior to invoking this opcode.
If P4 is not NULL, it points to a KeyInfo structure that defines the format of keys in the index.  The P5 parameter can be a mask of the BTREE_* flags defined in btree.h.
If P4 is not NULL, then it is the name of the table that P1 is pointing to.
If P4 is not null then it is an error message string.
If P4 is not specified then memcmp() is used to compare text string.
If P5 has the OPFLAG_NCHANGE bit set, then the change counter is incremented by this instruction.
If P5 has the OPFLAG_PERMUTE bit set, then the order of comparison is determined by the most recent OP_Permutation operator.
If P5 has the OPFLAG_USESEEKRESULT bit set, then the cursor must have just done a seek to the spot where the new entry is to be inserted.
If P5 is non-zero, then recursive program invocation is enabled.
If P5 is not zero, the check is done on the auxiliary database file, not the main database file.
If P5 is positive and the jump is taken, then event counter number P5-1 in the prepared statement is incremented.
If PATH already exists, this routine is a no-op.
If PATH does not already exist, this routine is a no-op.
If PCRE is configured with --enable-rebuild-chartables, this happens automatically.
If PCRE_FIRSTLINE is set, the match must happen before or at the first newline in the subject (though it may continue over the newline).
If PCRE_JAVASCRIPT_COMPAT is set, a backreference to an unset bracket matches an empty string (by default it causes a matching failure), so in that case we must set the minimum length to zero.
If PCRE_NEVER_UTF is set, remember it.
If PRNG_SAVE has never before been called, then this verb acts like PRNG_RESET.
If Pager.errCode is set, the contents of the pager cache cannot be trusted.
If PagerSavepoint.iHdrOffset is not zero, then pages are played back starting from the journal header immediately following  PagerSavepoint.iHdrOffset to the end of the main journal file.
If QUALITY is in the range 0-100, increasing values represent higher quality but also larger image size.
If QUALITY is negative, the IJG JPEG library's default quality is used (which should be near optimal for many applications).
If RCOND is negative, machine precision is used instead.
If READWRITE flag has been set for this operand, then clear default READONLY flag
If REFS_OK was specified, check whether there are any reference arrays and flag it if so.
If REG_NOSUB was specified at compile time, the PCRE_NO_AUTO_CAPTURE flag will be set.
If REQUEST_BODY_FILE variable not available - read post body from fastcgi stream
If RESTRICT, "SELECT RAISE(...)"
If Range: header specified, act accordingly
If RemoveAxis may be called, the size check is delayed until either the multi index is removed, or GetIterNext is called.
If Ruby's ``verbose'' flag is set (normally using -d, -v, -w, or --verbose) the major and minor numbers must match exactly.
If SAPI does not want to ignore all ini files OR an overriding file/path is given.
If SERVER_MORE_RESULTS_EXISTS is set then this is either MULTI_QUERY or a CALL() The first packet after sending the query/com_execute has the bit set only in this cases.
If SLAHQR failed to compute all NS eigenvalues, use the unconverged diagonal elements as the remaining shifts.
If SNI is explicitly disabled we're finished here
If SPACE is non-zero, we must output one space before the number.
If SQLExecDirect executes a searched update or delete statement that does not affect any rows at the data source, the call to SQLExecDirect returns SQL_NO_DATA.
If SQLITE_ABORT is returned, clean-up the statement handle.
If SQLITE_ANY is specified, add three versions of the function to the hash table.
If SQLITE_BUSY is returned, it means the close did not happen and needs to be repeated.
If SQLITE_CASE_SENSITIVE_LIKE is defined, then the LIKE operator is case sensitive causing 'a' LIKE 'A' to be false
If SQLITE_CHECK_PAGES is defined then we do some sanity checking on the cache using a hash function.
If SQLITE_CHECK_PAGES is defined, and NDEBUG is not defined, an assert() statement checks that the page is either dirty or still matches the calculated page-hash.
If SQLITE_DEBUG is defined, an assert() at the bottom of this function verifies that this invariant is not violated.
If SQLITE_DEBUG_SORTER_THREADS is defined, this module outputs various messages to stderr that may be helpful in understanding the performance characteristics of the sorter in multi-threaded mode.
If SQLITE_DEBUG_SORTER_THREADS is defined, to determine if a call to sqlite3ThreadJoin() is likely to block.
If SQLITE_DENY is returned, then the error count and error message in pParse are modified appropriately.
If SQLITE_ENABLE_8_3_NAMES is set to 2 at compile-time, then always do the suffix shortening regardless of URI parameter.
If SQLITE_ENABLE_STAT3/4 was defined during compilation and the  sqlite_stat4 table is not present in the database, SQLITE_ERROR is returned.
If SQLITE_ERROR is returned, pContext is populated with an error message.
If SQLITE_FTS5_ENABLE_TEST_MI is defined, assume that the file fts5_test_mi.c is compiled and linked into the executable.
If SQLITE_HAS_MUTEX is defined then the number returned is the greater of the current reserved space and the maximum requested reserve space.
If SQLITE_IGNORE is returned and pExpr is not NULL, then pExpr is changed to an SQL NULL expression.
If SQLITE_IOCAP_POWERSAFE_OVERWRITE is defined, then padding is not needed and only the sync is done.
If SQLITE_MALLOC_SOFT_LIMIT is not zero, then try to keep the sizes of memory allocations below this value where possible.
If SQLITE_NULLEQ is set (which will only happen if the operator is OP_Eq or OP_Ne) then take the jump or not depending on whether or not both operands are null.
If SQLITE_NULLEQ is set in P5 then the result of comparison is always either true or false and is never NULL.
If SQLITE_OK is returned, it means that access is allowed.
If SQLITE_OK is returned, the caller is responsible for closing the file descriptor *pFd using close().
If SQLITE_OK is returned, then *pnTrunc is set to the number of pages the database file should be truncated to during the commit process.
If SQLITE_OK is returned, then *ppTokenizer should be set to point at the newly created tokenizer structure.
If SQLITE_OMIT_AUTOINCREMENT is defined, then the three routines above are all no-ops
If SQLITE_OMIT_FLOATING_POINT is defined, then none of the floating point conversions will work.
If SQLITE_PCACHE_SEPARATE_HEADER is defined, then the extension is obtained using a separate memory allocation from the database page content.
If SQLITE_ROW is returned, then the sqlite3changeset_new() and old() APIs may be used to query for values.
If SQLITE_RTREE_INT_ONLY is defined, then this virtual table will only deal with integer coordinates.
If SQLITE_UTF16 is specified as the encoding type, transform this to one of SQLITE_UTF16LE or SQLITE_UTF16BE using the SQLITE_UTF16NATIVE macro.
If SQLITE_Vacuum is set, then the destination table is always empty.
If SQLite a built-in statement cache, this wouldn't be a problem.
If SQLite is already completely initialized, then this call to sqlite3_initialize() should be a no-op.
If SQLite is already shut down when this routine is invoked, then this routine is a harmless no-op.
If SQLite is compiled to support shared-cache mode and to be threadsafe, this routine obtains the mutex associated with each BtShared structure that may be accessed by the VM passed as an argument.
If SQLite is not threadsafe and does not support shared-cache mode, this function is a no-op.
If SUBSTR_COMPATIBILITY is defined then substr(X,0,N) work the same as as substr(X,1,N) - it returns the first N characters of X.
If T(i,i) is a real eigenvalue, then the i-th column VL(i) of VL  is its corresponding eigenvector.
If T(i,i) is a real eigenvalue, then the i-th column VR(i) of VR  is its corresponding eigenvector.
If TEMP was specified, then the trigger name may not be qualified.
If TF_Ephemeral is set then the table is stored in a file that is automatically deleted when the VDBE cursor to the table is closed.
If The value is currently a real number, drop its fractional part.
If The value is currently an integer, convert it.
If USE_SIGN is false, just compare the magnitudes.
If V is zero, reset it to the unit vector.
If WANTT is .FALSE., the contents of H are unspecified on exit.
If WANTZ is .FALSE., Z is not referenced.
If WHERE_ONEPASS_DESIRED is set, then iIdxCur is the first cursor in an array of cursors for all indices.
If WHERE_ONETABLE_ONLY is set, index cursor number
If WHERE_OR_SUBCLAUSE is set, index cursor number If WHERE_USE_LIMIT, then the limit amount
If X and Y are NULL (in other words if only the column name Z is supplied) and the value of Z is enclosed in double-quotes, then Z is a string literal if it doesn't match any column names.
If X is a character that can be used in an identifier then IdChar(X) will be true.
If X is a proper subset of Y then Y is a better choice and ought to have a lower cost.
If X is false and assert() is disabled, then the return value is zero.
If X is false and assert() is enabled, then the assertion fires and the process aborts.
If X is not the INTEGER PRIMARY KEY then X must be compatible with index pIdx.
If X is true and assert() is disabled, then the return value is zero.
If X is true and assert() is enabled, then the return value is true.
If YYTABLE_NINF, syntax error.
If Z is of the order of the machine accuracy, postpone the decision on the nature of eigenvalues
If ZLAHQR failed to compute all NS eigenvalues, use the unconverged diagonal elements as the remaining shifts.
If _dir_string_ is given, it is used as a base directory for interpreting relative pathname instead of the current directory.
If _hostname_ is given, the socket is bound to it.
If _klass_ is +nil+, an integer file descriptor is returned.
If _len_ is 0, the region ends at the last byte of the file.
If _length_ is omitted or is _nil_, it reads until EOF.
If _length_ is zero, it returns _""_.
If _max_limit_ is not given, _cur_limit_ is used.
If _msg_ is given, it is written to STDERR prior to terminating.
If _name_ is used by another encoding, raise ArgumentError.
If _opts_ is a State object, it is just returned.
If _pid_ is zero _signal_ is sent to all processes whose group ID is equal to the group ID of the process.
If _preferred_ is not 0, choice the path whose base name is set to it.
If _protocol_name_ is not given, "tcp" is assumed.
If _reverse_lookup_ is omitted, the default value is +nil+.
If _signal_ is negative (or starts with a minus sign), kills process groups instead of processes.
If _start_ and _length_ are given, a string containing the bytes from _start_ of _length_ will be returned.
If `WriteFail` fails, that's probably because the pipe is full, or closed.
If ``sep`` is NULL or empty, then binary data is assumed, else text data, with ``sep`` as the separator between elements.
If `func()' finished and received interrupts, you may skip interrupt checking.
If `obj' has references to an internal object, then it returns instances of ObjectSpace::InternalObjectWrapper class.
If `obj' has two or more references to the same object `x', then returned array only includes one `x' object.
If `obj' is a non-markable (non-heap management) object such as true, false, nil, symbols and Fixnums (and Flonum) then it simply returns nil.
If `obj' is instance of ObjectSpace::InternalObjectWrapper class, then this method returns all reachable object from an internal object, which is pointed by `obj'.
If `pid_t setpgrp(void)' is equivalent to setsid(), `ret' will be the same value as `pid', and following open() will fail.
If `rb_thread_call_without_gvl2()' detects interrupt, it returns immediately.
If a  deferred foreign key constraint is violated, no action is taken  immediately.
If a  write-transaction has already been opened, this function is a no-op.
If a 'subok' parameter is passed and isn't True, don't wrap but put None into slots with out arguments which means return the out argument
If a 'subok' parameter is passed and isn't True, don't wrap if check_subok is false it assumed subok in kwds keyword is True
If a +Regexp+ is supplied, the matching portion of the string is returned.
If a +capture+ follows the regular expression, which may be a capture group index or name, follows the regular expression that component of the MatchData is returned instead.
If a +match_str+ is given, that string is returned if it occurs in the string.
If a EXPO is not an integer, only the integer part is used.
If a Fortran contiguous array was requested, and arr is not
If a HAVING clause is present, then there must be a GROUP BY clause.
If a LIMIT clause is provided, then the iteration stops after LIMIT rows have been output to pDest.
If a MoveTo operation is pending on the given cursor, then do that MoveTo now.
If a NEAR() clump or phrase may only match a specific set of columns,  then an object of the following type is used to record the set of columns.
If a NULL pointer is passed as an argument this function is a no-op.
If a NULL pointer was passed as the collate function, fall through to the blob case and use memcmp().
If a NUM2 is not an integer, only the integer part is used.
If a PENDING lock is obtained instead, immediately release it.
If a ReadFile() or WriteFile() error occurs, invoke this routine to see if it should be retried.
If a SHARED lock is requested, and some thread using this PID already has a SHARED or RESERVED lock, then increment reference counts and return SQLITE_OK.
If a THEN is encountered in the branch, it propagates out to the enclosing alternative (unless nested in a deeper set of alternatives, of course).
If a VFS is registered with a name that is NULL or an empty string, then the behavior is undefined.
If a VFS object is destroyed before all database handles that use it have been closed, the results are undefined.
If a WAL transaction is being committed, there is no point in writing any pages with page numbers greater than nTruncate into the WAL file.
If a Win32 native heap has been configured, this function will attempt to compact it.
If a Win32 native heap has been configured, this function will attempt to destroy and recreate it.
If a _string_ is given, returns the hash value for the given _string_ in a hex-encoded form, resetting the digest to the initial state before and after the process.
If a _string_ is given, returns the hash value for the given _string_, resetting the digest to the initial state before and after the process.
If a binary operator (AND, OR, NOT or NEAR) is encounted when isRequirePhrase is set, this is a syntax error.
If a block is associated with the open call, that block will run twice --- once in the parent and once in the child.
If a block is given chunks of deflate output are yielded to the block until the buffer is flushed.
If a block is given consecutive deflated chunks from the +string+ are yielded to the block and +nil+ is returned.
If a block is given consecutive inflated chunks from the +deflate_string+ are yielded to the block and +nil+ is returned.
If a block is given each chunk is yielded to the block until the current output buffer has been flushed.
If a block is given each chunk is yielded to the block until the input buffer has been flushed to the output buffer.
If a block is given instead of an argument, returns the _index_ of the first object for which the block returns +true+, starting from the last object.
If a block is given instead of an argument, returns the _index_ of the first object for which the block returns +true+.
If a block is given it is called with the missing name to provide a value.
If a block is given it will be called when the named environment does not exist.
If a block is given, Ruby will run the command as a child connected to Ruby with a pipe.
If a block is given, counts the number of elements for which the block returns a true value.
If a block is given, it counts the number of elements yielding a true value.
If a block is given, it is invoked for each output +array+, otherwise an array of arrays is returned.
If a block is given, it is invoked for each output array, otherwise an array of arrays is returned.
If a block is given, it is passed the name of the new current directory, and the block is executed with that as the current directory.
If a block is given, it will be used to calculate the size of the enumerator without the need to iterate it (see Enumerator#size).
If a block is given, it will use the return value of the block for comparison.
If a block is given, the block is applied to each element before addition.
If a block is given, the block is called and returns the value of the block.
If a block is given, the new GDBM instance will be passed to the block as a parameter, and the corresponding database file will be closed after the execution of the block code has been finished.
If a block is given, the new database will be passed to the block and will be safely closed after the block has executed.
If a block is provided, the block will be called when there is no +value+ associated with the given +key+.
If a block is provided, the deleted +key+ and +value+ will be passed to the block as arguments.
If a block is specified, it is used as the method body.
If a block is specified, it will be called with the hash object and the key, and should return the default value.
If a block is specified, it will be invoked with the IO object as a parameter, and the IO will be automatically closed when the block terminates.
If a block is specified, that block is run in the subprocess, and the subprocess terminates with a status of zero.
If a block is supplied, each line in turn will be yielded to the block, otherwise an enumerator is returned.
If a cell is less than 4 bytes in size, it is rounded up to 4 bytes by the various routines that manipulate binary cells.
If a change cannot be applied cleanly, the conflict handler  function passed as the fifth argument to sqlite3changeset_apply() may be  invoked.
If a charset is added, the string will be re-allocated and the new length is returned.
If a child of a vector is free'd first, results are undefined.
If a chunk is checked out, the user data may extend into the u.hdr.prevSize value of the following chunk.
If a column is marked as 'hidden' (currently only possible for virtual tables), do not include it in the expanded result-set list.
If a column is marked as 'hidden', omit it from the expanded result-set list unless the SELECT has the SF_IncludeHidden bit set.
If a conditional group has only one branch, there is a second, implied, empty branch, so just skip over the conditional, because it could be empty.
If a conflict is encountered, invoke the conflict handler callback.
If a connect on a existing handle is performed and mysql_flags is passed which doesn't CLIENT_COMPRESS, then we need to overwrite the value which we set based on saved_compression.
If a constraint error occurs within the statement, the effect of that one statement can be rolled back without having to rollback the entire transaction.
If a constraint fails, then the appropriate action is performed.
If a continuation matches, we bump the current continuation level so that higher-level continuations are processed.
If a copy is made, the original bucket is delref'd.
If a crash occurs during or following this, database corruption may ensue.
If a decimal point/exponent is found, it's a double.
If a default value is given it will be returned when no block is given.
If a delete caused by OR REPLACE violates an FK constraint, an exception is thrown, even if the FK constraint would be satisfied after the new  row is inserted.
If a disconnect is attempted while a virtual table is locked, the disconnect is deferred until all locks have been removed.
If a faster non-recursive mutex implementation is available on the host platform, the mutex subsystem might return such a mutex in response to SQLITE_MUTEX_FAST.
If a fatal OOM error occurs, set the session object to failed and return SQLITE_ERROR.
If a fiber invokes "transfer", then this fiber can't "resume" any more after that.
If a file is being created, its initial permissions may be set using the +perm+ parameter.
If a file is being created, permission bits may be given in +perm+.
If a file is loaded +true+ is returned and false otherwise.
If a finally block was found we jump directly to it and resume the generator.
If a free segment id cannot be found, SQLITE_FULL is returned.
If a function is being overridden/deleted but there are no active VMs, allow the operation to continue but invalidate all precompiled statements.
If a given argument is nil, the default value of that argument is used.
If a guaranteed copy was requested
If a hot-journal file is found to exist, *pExists is set to 1 and  SQLITE_OK returned.
If a journal file does not contain a master-journal pointer, it is finalized by overwriting the first journal header with zeroes.
If a journal file exists, and there is no RESERVED lock on the database file, then it either needs to be played back or deleted.
If a malloc fails, then the new data is returned and the hash table is unchanged.
If a malloc fails, this function may return NULL.
If a malloc() failure occurred in sqlite3HashInsert(), it will  return the pColl pointer to be deleted (because it wasn't added to the hash table).
If a master  journal file name has already been written to the journal file,  or if zMaster is NULL (no master journal), then this call is a no-op.
If a master journal file name is present at the end of the journal file, then it is copied into the buffer pointed to by zMaster.
If a master journal file name is specified, but the file is not present on disk, then the journal is not hot and does not need to be played back.
If a memory allocation error has occurred prior to the calling of this routine, then a pointer to a dummy VdbeOp will be returned.
If a memory allocation error occurs, NULL is returned.
If a memory allocation error occurs, return -1.
If a memory allocation error occurs, return NULL.
If a memory allocation error occurs, store NULL in *paCol and 0 in *pnCol and return SQLITE_NOMEM.
If a memory allocation error occurs, the entire list is freed and NULL is returned.
If a memory allocation fails the SrcList is unchanged.
If a memory allocation fails, SQLITE_NOMEM is returned.
If a memory allocation is required to store the string, then value of pMem is unchanged.
If a message digest is to be computed from several subsequent sources, then each may be passed individually to the Digest instance.
If a mistake is made in reference counting, deallocation on these builtins will be attempted leading to problems.
If a more detailed error message is available, it is written to zBufOut.
If a multi-byte character attempts to encode a value between 0xd800 and 0xe000 then it is rendered as 0xfffd.
If a mutex is required for normal operation, allocate one
If a negative index is used, the given values will be inserted after that element, so using an index of +-1+ will insert the values at the end of the array.
If a negative number is given, raises an ArgumentError.
If a negative value is passed to this function, then the current transaction is rolled back.
If a new *-shm file is created, an attempt will be made to create it with the same permissions.
If a new wal-index header was loaded before the checkpoint was  performed, then the pager-cache associated with pWal is now out of date.
If a non-NULL value is returned, set *ppContext to point to the With object that the returned CTE belongs to.
If a non-positive number is given or the collection is empty, does nothing.
If a numeric argument is given, the result is in local time.
If a pair in +env+ has nil as the value, the variable is deleted.
If a parent row cannot be found, adding the child row has violated the FK constraint.
If a parser error occurs, return non-zero.
If a peer_fingerprint match is required this trumps peer and peer_name verification
If a phrase consists entirely of deferred tokens, it is assumed to match every row in the db.
If a phrase contains some deferred tokens (and some non-deferred  tokens), count the potential occurrence identified by considering the non-deferred tokens instead of actual phrase occurrences.
If a pointer to a MemPage object is passed as the second argument, its reference count is not altered by this function.
If a power failure occurs  while this is happening, the database could become corrupt.
If a power failure occurs while the journal is being written, it could cause invalid data to be written into the journal.
If a power failure or application crash occurs during an update, following system recovery RBU may resume the update from the point at which the state was last saved.
If a pre-allocated +buffer+ is provided the data will be written into it.
If a pre-update hook is registered and this is a write cursor,  invoke it here.
If a prior API call failed but the most recent API call succeeded, the return value from sqlite3_errcode() is undefined.
If a prior call to sqlite3GenerateIndexKey() generated a jump-over label because it was a partial index, then this routine should be called to resolve that label.
If a prior error occurred, report that error again.
If a property 'aligned' is in the dict, it overrides the align flag to be True if it not already true.
If a read-only buffer is requested on a read-write array, we return a read-write buffer, which is dubious behavior.
If a read-only cursor is requested, it is assumed that the caller already has at least a read-only transaction open on the database already.
If a register is allocated and its location stored in *prNotFound, then its initial value is NULL.
If a register is currently being used by the column cache, then the dallocation is deferred until the column cache line that uses the register becomes stale.
If a register is currently being used by the column cache, then the deallocation is deferred until the column cache line that uses the register becomes stale.
If a requested dtype was provided, use it, otherwise NULL
If a rollback is needed, then do the rollback.
If a row is found, the SELECT statement left pointing at the row  and SQLITE_ROW is returned.
If a rowid value was supplied, check if it is already present in  the table.
If a savepoint transaction were rolled back after this happened, the correct behavior would be to restore the current content of the page.
If a schema error occurs, call sqlite3Reprepare() and try again.
If a shape was provided with a 1 entry, make sure that entry didn't get expanded by broadcasting.
If a shared-lock is already held when this function is called, it is a no-op.
If a similar or greater lock is already held, this function is a no-op (returning SQLITE_OK immediately).
If a slot in the hash table is set to N, it refers to frame number  (*piZero+N) in the log.
If a smaller cell does exist, pad it with 0x00 bytes.
If a standalone diacritic mark (one that sqlite3FtsUnicodeIsdiacritic() identifies as a diacritic) occurs in the zIn/nIn string it is ignored.
If a string/symbol is specified, it is interpreted depend on _cmsg_level_.
If a subtype may be used, indicate so
If a sufficient number of arguments are supplied, it passes the supplied arguments to the original proc and returns the result.
If a suitable file descriptor is found, then it is returned.
If a table has no INTEGER PRIMARY KEY, then a random rowid is generated for each row of the table.
If a temporary file is requested, it is not opened immediately.
If a term is the BETWEEN operator, create two new virtual terms that define the range that the BETWEEN implements.
If a tokenizer is used directly by any code outside of FTS, this convention might not be respected.
If a transaction is active an attempt is made to roll it back.
If a transaction is active, commit it.
If a transaction is open on the database being checkpointed, this  function returns SQLITE_LOCKED and a checkpoint is not attempted.
If a transaction is open, roll it back.
If a transaction is opened here, then it will be closed before this function exits.
If a transaction is opened, it  will be closed before this function returns.
If a transaction is opened, it  will be closed immediately after reading the meta-value.
If a transaction is still open on the Btree, roll it back.
If a transaction was active when the persistent error occurred, then the rollback journal may need to be replayed to restore the contents of the database file (as if it were a hot-journal).
If a transaction was in progress when this routine is called, that transaction is rolled back.
If a transient index is required, create it by calling sqlite3BtreeCreateTable() with the BTREE_BLOBKEY flag before opening it.
If a transient table is required, just use the automatically created table with root-page 1 (an BLOB_INTKEY table).
If a tree that appears to be taller than this is encountered, it is assumed that the database is corrupt.
If a trigger fires from the top level, a new trigger context is entered for the duration of that one trigger.
If a truth probability is specified using the likelihood() hints, then use the probability provided by the application.
If a tuple, must have all nout items
If a usable page buffer has still not been found,  attempt to allocate a new one.
If a value can be extracted, the affinity passed as the 5th argument is applied to it before it is copied into the UnpackedRecord.
If a worker died in the middle of a write, that is also very bad
If a write transaction is open, then all changes made within the  transaction are reverted and the current write-transaction is closed.
If a write-cursor is requested, then the caller is assumed to have an open write transaction.
If a writeable array was requested, and arr is not
If a zero-length record separator is supplied, the string is split into paragraphs delimited by multiple successive newlines.
If aOp is not NULL it is assumed to contain  nOp entries.
If aOvflSpace is set to a null pointer, this function returns  SQLITE_NOMEM.
If aborted via timer expiration, don't try to call any unixODBC function
If additional second argument is given, it will be the base of logarithm.
If additional tables are added to the database (by  executing "CREATE TABLE" statements) after this call is made, changes for  the new tables are also recorded.
If addr is out of range of main-thread stack range estimation,
If after all you need to override somthing then it is method __toString().
If after trying to extra new entries from the header, nHdrParsed is still not up to p2, that means that the record has fewer than p2 columns.
If after trying to extract new entries from the header, nHdrParsed is still not up to p2, that means that the record has fewer than p2 columns.
If align is set, make sure the alignment divides into the size
If all arrays are empty we don't need to do anything.
If all calls to virtual table methods are successful, SQLITE_OK is returned.
If all comparisons are FALSE then the final result is FALSE.
If all eigenvectors are requested, the routine may either return the matrices X and/or Y of right or left eigenvectors of T, or the products Q*X and/or Q*Y, where Q is an input orthogonal matrix.
If all eigenvectors are requested, the routine may either return the matrices X and/or Y of right or left eigenvectors of T, or the products Q*X and/or Q*Y, where Q is an input unitary matrix.
If all entries in zAff are SQLITE_AFF_BLOB, then no code gets generated.
If all entries in zAff are SQLITE_AFF_NONE, then no code gets generated.
If all indexed columns use collation sequence BINARY, then it can also be assumed that the index will be populated by inserting keys in strictly sorted  order.
If all native byte order and doesn't need alignment wrapping, return the function
If all of the above are true, then WHERE_ORDERBY_MIN or WHERE_ORDERBY_MAX is returned as appropriate.
If all of the old.* values are equal to their corresponding new.* value (i.e. nothing has changed), then no data at all is appended to the buffer.
If all pages in the tree have been visited, return SQLITE_OK to the caller.
If all query phrases seen by fts3BestSnippet() are present in at least one of the nSnippet snippet fragments, break out of the loop.
If all readers are using WAL_READ_LOCK(0) (in other words if no readers are currently using the WAL), then the transactions frames will overwrite the start of the existing log.
If all terms of the record are not-NULL then a check is done to determine if any row in the P1 index btree has a matching key prefix.
If all the arguments are integers, the loop operates using an integer counter.
If all the children of a term are disabled, then that term is also automatically disabled.
If all the elements are equal, then the result is based on a comparison of the array lengths.
If all the inputs are scalars (have 0 dimensions) or the maximum "kind" of the scalars is greater than the maximum "kind" of the arrays, does a regular type promotion.
If all the inputs are scalars, use the regular promotion rules, not the special value-checking ones.
If all the inputs were ok, then check casting back to the outputs.
If all the operands were NULL, it's an error
If all the seg-readers are at EOF, we're finished.
If all the strides matched a contiguous layout, return a view
If all the strides were 0, the stride won't change
If allocation cannot be made, increment *pnByte
If already died, wait process's real termination.
If already in the error state, this function is a no-op.
If an ACCEPT was previously encountered, use the length that was in force at that time, and pass back the shortest ACCEPT length.
If an AS-name match is found, mark this ORDER BY column as being a copy of the iCol-th result-set column.
If an EOF is reached before this happens, *pbEof is set to true before returning.
If an EXCLUSIVE lock is attempted on a target database file in any mode except RBU_STAGE_DONE (all work completed and checkpointed), it  fails with an SQLITE_BUSY error.
If an I/O or malloc() error occurs, the journal-file is not deleted and an error code is returned.
If an IO error  occurs while locking the database, checking for a hot-journal file or  rolling back a journal file, the IO error code is returned.
If an IO error  occurs, an IO error code is returned.
If an IO error is encountered, then the IO error code is returned to the caller.
If an IO error occurs while modifying the database file, return the error code to the caller.
If an IO error occurs while reading the record from the (sub-)journal file or while writing to the database file, then the IO error code is returned.
If an IO error occurs while trying to determine whether or not a hot-journal file exists, the IO error code is returned and the value of *pExists is undefined.
If an IO error occurs while trying to make the page clean, the IO error code is returned.
If an IO error occurs, abandon processing and return the IO error code.
If an IO error occurs, an SQLITE_IOERR_XXX error code is returned.
If an IO error occurs, an SQLite error code is  returned and the value of *pMode is not modified.
If an IO error occurs, return an error code.
If an IO error occurs, then the IO error is returned to the caller.
If an IO error prevents the journal file from being successfully finalized, the setMaster flag is cleared anyway (and the pager will move to ERROR state).
If an IO error within this function, an error code is returned.
If an OOM as occurred, then the connection error-code (the value returned by sqlite3_errcode()) is set to SQLITE_NOMEM.
If an OOM condition is encountered when attempting to allocate memory, output variable (*pRc) is set to SQLITE_NOMEM before returning.
If an OOM condition is encountered, NULL is returned.
If an OOM condition is encountered, return NULL.
If an OOM condition is encountered, set *pRc to SQLITE_NOMEM before returning.
If an OOM error does occurs, then the prior value of pList that is input to this routine is automatically freed.
If an OOM error is encountered when allocating space for the new string, an error code is left in the rbu handle passed as the first argument and NULL is returned.
If an OOM error is encountered, return NULL and set the error code in the Fts5Index handle passed as the first argument.
If an OOM error occurs, *pRc is set to SQLITE_NOMEM before returning.
If an OOM error occurs, NULL is returned.
If an OOM error occurs, SQLITE_NOMEM is returned.
If an OOM error occurs, both the pNear and pPhrase objects are freed and NULL returned.
If an OOM error occurs, leave an the error code in p.
If an OOM error occurs, return SQLITE_NOMEM.
If an OOM error occurs, set  the error code in p.
If an OOM error occurs, set the error code in p.
If an OOM error occurs, store an error code in pParse and return NULL.
If an OOM occurs while retrieving the data (this can happen if SQLite needs to transform the data from utf-16 to utf-8), return SQLITE_NOMEM  to the caller.
If an OOM occurs, NULL is  returned.
If an OOM occurs, SQLITE_NOMEM is returned instead of SQLITE_CONSTRAINT.
If an OOM occurs, an error code is stored in the RBU handle passed as the first argument.
If an OOM occurs, set to SQLITE_NOMEM
If an OOM occurs, store an error code in the RBU handle passed as the first argument.
If an OOM or other error occurs within this function, *pRc is set to an SQLite error code before returning.
If an OP_Explain opcode is added to the VM, its address is returned.
If an RBU vacuum is suspended by calling  sqlite3rbu_close() on the RBU handle before sqlite3rbu_step() has returned SQLITE_DONE, the vacuum state is stored in the state database.
If an SQL NULL is stored  in column iCol, jump immediately to the next iteration of the loop.
If an SQL UPDATE is executed  on the child table of pFKey, this function is invoked twice for each row affected - once to "delete" the old row, and then again to "insert" the new row.
If an SQLITE_CONFIG_SQLLOG hook is registered and the VM has been run,  invoke it.
If an aligned array was requested, and arr is not
If an allocation fails, SQLITE_NOMEM is returned.
If an allocation is MEMTYPE_LOOKASIDE, that means it might have been allocated by lookaside, except the allocation was too large or lookaside was already full.
If an application invokes any sqlite3_xxx API functions from within an unlock-notify callback, a crash or deadlock may be the result.
If an argument is given, the number of items in +enum+ that are equal to +item+ are counted.
If an array is created with this method, simply adding 'itemsize' for each iteration will traverse the new array matching the iterator.
If an array of IOs and integers are specified as a hash key, all the elements are redirected.
If an attempt is then made to roll the journal back, the database could be corrupted.
If an authenticated cipher was used, a CipherError is raised if the tag could not be authenticated successfully.
If an automatically allocated output didn't have a specified dtype, we need to figure it out now, before allocating the outputs.
If an axis flagged for removal has a shape entry bigger than one, this effectively selects index zero for that axis.
If an encoding (encoding name or encoding object) is specified as an optional argument, read string from pipe is tagged with the encoding specified.
If an entry of the FROM clause is a subquery instead of a table or view, then create a transient table structure to describe the subquery.
If an equivalent interface exists by a different name, using a separate -D option to rename it.
If an error  occurs while opening the sub-journal file, then an IO error code is returned.
If an error (an OOM or VFS error) occurs, then an SQLite error code is returned and *ppPage is set to 0.
If an error (e.g. an OOM condition) occurs within this function, an the auxiliary data is set to NULL and an error code returned.
If an error (i.e. OOM condition) occurs, an SQLite error code is returned.
If an error (i.e. an OOM condition) is encountered,  pRc is set to an error code before returning.
If an error (i.e. an OOM condition) occurs, return NULL and leave an  error code in the rbu handle passed as the first argument.
If an error did occur, the caller will need to rollback the transaction.
If an error did occur, this has the effect of zeroing all output parameters.
If an error does occur, an SQLite error code is returned.
If an error does occur, an error code and error message are also left in  the RBU handle.
If an error does occur, an error message is stored in the parser and some error code other than SQLITE_OK returned.
If an error does occur, some other error code is  returned.
If an error does occur, the final value of *piRead is undefined.
If an error does occur, then the b-tree cursor is closed.
If an error does occur, then the final value of piOffset is undefined.
If an error has  already occurred when this function is called, it is a no-op.
If an error has  already occurred, this function is a no-op.
If an error has already occurred as part of an sqlite3rbu_step() or sqlite3rbu_open() call, or if one occurs within this function, an SQLite error code is returned.
If an error has already occurred when this function is called, it  immediately returns zero (without doing any work).
If an error has already occurred when this function is called, it is a no-op.
If an error has already occurred, this function is a no-op.
If an error has already occurred, this is a no-op
If an error has occurred, either while opening or stepping the RBU object, this function may return NULL.
If an error has occurred, mark the session object as failed.
If an error has occurred, then set *pzErrmsg to point to a buffer containing an error message.
If an error has occurred, transfer error information from pFrom to pTo.
If an error is encountered it is returned immediately - no attempt is made to checkpoint any remaining databases.
If an error is found, the analysis is cut short.
If an error occurred above, free the  Pager structure and close the file.
If an error occurred in either of the blocks above, free the  Pager structure and close the file.
If an error occurred in findInodeInfo(), close the file descriptor immediately, before releasing the mutex. findInodeInfo() may fail in two scenarios:  (a) A call to fstat() failed.
If an error occurred while creating or writing to the file, restore the original before returning.
If an error occurred while writing to the file, close it before returning.
If an error occurred, return 0 and set view to NULL.
If an error occurred, return immediately.
If an error occurs (e.g. an OOM or IO error), return an SQLite error  code.
If an error occurs an SQLite error code is returned.
If an error occurs and pzErrMsg is not 0, then fill *pzErrMsg with  error message text.
If an error occurs and xOutput is NULL, (*ppOut) and (*pnOut) are both set to 0 before returning.
If an error occurs at this point close and delete the master journal file.
If an error occurs during a ROLLBACK, we can no longer trust the pager cache.
If an error occurs during any of the IO operations to finalize the journal file or unlock the database then the IO error code is returned to the user.
If an error occurs during execution of this function, *pRc is set to  the appropriate SQLite error code.
If an error occurs during the rollback  a hot journal may be left in the filesystem but no error is returned to the caller.
If an error occurs here, do not delete the master journal file.
If an error occurs or the VFS used by the pager does  not support the xShmXXX() methods, return an error code.
If an error occurs then an and attempt is made to write an error message into  memory obtained from sqlite3_malloc() and to make *pzErrMsg point to that error message.
If an error occurs while doing so, ignore it.
If an error occurs while doing so, return 0 and write an  error message to pErrorDb.
If an error occurs while preparing the statement,  return an SQLite error code.
If an error occurs while reading from the journal file, an SQLite error code is returned.
If an error occurs while trying to sync the journal, shift the pager into the ERROR state.
If an error occurs within this function, *pRc is set to an SQLite error code before returning.
If an error occurs,  an SQLite error code is returned.
If an error occurs, *pRc is set to an SQLite error code.
If an error occurs, *ppOut is set to NULL and an SQLite error code returned.
If an error occurs, *ppPager is set to NULL and error code returned.
If an error occurs, *ppSession is set to NULL and an SQLite error code (e.g. SQLITE_NOMEM) is returned.
If an error occurs, *pzErr is set to point an an English language description of the error and an SQLITE_XXX error code is returned.
If an error occurs, *pzErr is set to point to an English language description of the error and an SQLITE_XXX error code is returned.
If an error occurs, Fts5Index.rc is set to an appropriate error code.
If an error occurs, NULL is returned and an error code and error message stored in database handle pDestDb.
If an error occurs, NULL is returned and an error code left in the Fts5Index handle.
If an error occurs, NULL is returned and an error left in the  Fts5Index object.
If an error occurs, SQLITE_NOMEM or an IO error code is returned as appropriate.
If an error occurs, an IO error code is returned and the pager moves into the error state.
If an error occurs, an SQLite error code (e.g. SQLITE_NOMEM) is returned.
If an error occurs, an SQLite error code (i.e. SQLITE_NOMEM) is returned and *pp is set to NULL.
If an error occurs, an SQLite error code is  returned, *ppOut is set to NULL and an error message may be left in pzErr.
If an error occurs, an SQLite error code is returned and *ppWal is left unmodified.
If an error occurs, an SQLite error code is returned and an error message may be left in *pzErr.
If an error occurs, an SQLite error code is returned and pLeaf is freed.
If an error occurs, an SQLite error code is returned and the final values of *piHash asn *pbNullPK are undefined.
If an error occurs, an SQLite error code is returned and the output variables (*pnData) and (*ppData) are set to 0.
If an error occurs, an SQLite error code is returned.
If an error occurs, an error code and error message are left in the rbu handle passed as the first argument.
If an error occurs, an error code and error message is stored in the RBU handle.
If an error occurs, an error code is left in Fts5Index.rc.
If an error occurs, an error code is returned  and an error left in pParse.
If an error occurs, an error code is returned and *pp is set to NULL.
If an error occurs, an error code is returned and *ppChild is set to 0.
If an error occurs, an error code is returned and the final value of *pbMax is undefined.
If an error occurs, an error code is stored in sqlite3_session.rc and non-zero returned.
If an error occurs, an error code other than SQLITE_OK is returned.
If an error occurs, both *pnOut and *ppOut are zeroed and an SQLite error code returned.
If an error occurs, either SQLITE_NOMEM (out-of-memory error) or SQLITE_ERROR (parse error) is returned and *ppExpr is set to 0.
If an error occurs, either SQLITE_NOMEM or SQLITE_CANTOPEN is returned and *pFd is set to an undefined value.
If an error occurs, free all memory associated with pParse.
If an error occurs, leave an error code and error message in the rbu  handle.
If an error occurs, leave an error code and error message in the rbu handle.
If an error occurs, leave an error code and message in the RBU handle.
If an error occurs, leave an error code and message in the rbu handle and return NULL.
If an error occurs, leave an error code in the Fts5Index object.
If an error occurs, leave an error message and code in pParse and return NULL.
If an error occurs, or if the specified row does not exist or does not contain a blob or text value, then an error code is returned and the database handle error code and message set.
If an error occurs, or the table does not contain the specified row, an SQLite error code is returned.
If an error occurs, pParse is populated with an error message and a non-zero value is returned.
If an error occurs, return -1 and set *piErrno.
If an error occurs, return NULL and leave a message in pParse.
If an error occurs, return an SQLite error code (i.e. SQLITE_NOMEM).
If an error occurs, return an SQLite error code.
If an error occurs, return the appropriate error code.
If an error occurs, return the error code to the caller.
If an error occurs, set *pRc to an SQLite error code before returning.
If an error occurs, set *pRc to an error code.
If an error occurs, set *ppLeaf to zero and return an SQLite error code.
If an error occurs, set both *ppChangeset and *pnChangeset to zero and return an SQLite error code.
If an error occurs, set the Fts5Index.rc error code.
If an error occurs, some other SQLite error code is returned instead.
If an error occurs, some value other than SQLITE_OK should be returned.
If an error occurs, the appropriate error code is written into *pRC.
If an error occurs, the statement is reset and an SQLite error code is returned.
If an error occurs, then *ppPage is undefined.
If an error occurs, then an SQLite error code is returned and *pzErrMsg may be set to point to a buffer containing an English language error  message.
If an error occurs, then the value *ppPage is set to is undefined.
If an error occurs, this routine returns NULL.
If an error occurs, we jump here
If an error occurs, write an error message into *pzErrMsg.
If an error was generated during comilation PHP will compile such scripts recursivly, but some CG() variables may be inconsistent.
If an exact match is not found, then the cursor is always left pointing at a leaf page which would hold the entry if it were present.
If an exception was thrown in the generator we have to internally rethrow it in the parent scope.
If an existing TriggerPrg could not be located, create a new one.
If an existing hash entry cannot be found, create a new one.
If an existing main database file is opened, then the default text encoding for the existing database is used.
If an existing row with one or more NULL values stored in PRIMARY KEY columns is updated so that all PRIMARY KEY columns are non-NULL, only an INSERT is appears in the changeset.
If an exponent exists, ensure that the exponent is at least MIN_EXPONENT_DIGITS digits, providing the buffer is large enough for the extra zeros.
If an expression contains aggregate functions then the EP_Agg property on the expression is set.
If an expression is an integer literal that fits in a signed 32-bit integer, then the EP_IntValue flag will have already been set
If an illegal or unsupported join type is seen, then still return a join type, but put an error in the pParse structure.
If an immediate foreign key constraint is violated, SQLITE_CONSTRAINT_FOREIGNKEY is returned and the current statement transaction rolled back.
If an index is to be used in place of a temp-table, it must be ordered according to this collation sequence.
If an index was requested, compute the strides for it.
If an integer +key_size+ is given it represents the desired key size.
If an interface fails with SQLITE_MISUSE, that means the interface was invoked incorrectly by the application.
If an invalid limit index is supplied, report -1.
If an iteration order is being forced, apply it.
If an object has no length, leave it be
If an older version of the function with a configured destructor is being replaced invoke the destructor function here.
If an open cursor was using this page a problem would  occur.
If an out-of-memory allocation occurs, then free the old allocation.
If an out-of-memory error occurs while resizing the array, return SQLITE_NOMEM.
If an output argument is provided, then it is prepped with its own __array_prepare__ not with the one determined by the input arguments.
If an output argument is provided, then it is wrapped with its own __array_wrap__ not with the one determined by the input arguments.
If an output parameter was provided, don't wrap it
If an starting index guess is in-range, the array values around this index are first checked.
If an unlock is omitted, resources leaks will occur.
If an unqualified name is a function/const alias, replace it.
If an unqualified name is an alias, replace it.
If an update is only partially applied to the target database by the time sqlite3rbu_close() is called, various state information is saved  within the RBU database.
If an xDelete callback was specified along with the original pointer, it is invoked at this point.
If an xFilter() callback was specified, invoke it now.
If an xToken() callback returns any value other than SQLITE_OK, then the tokenization should be abandoned and the xTokenize() method should immediately return a copy of the xToken() return value.
If an xUnlock fails or appears to fail, there may  be a few redundant xLock() calls or a lock may be held for longer than required, but nothing really goes wrong.
If anIO is specified, the serialized data will be written to it, otherwise the data will be returned as a String.
If and only if you received the exception "HRESULT error code: 0x8000ffff catastrophic failure", try this method before invoking any ole_method.
If another connection has written to the database file since the time the read transaction on this connection was started, then the write is disallowed.
If another database handle has already opened a write transaction  on this shared-btree structure and a second write transaction is requested, return SQLITE_LOCKED.
If another digest instance is given, checks whether they have the same hash value.
If another element already exists with the same key, then the new data replaces the old data and the old data is returned.
If another process were to do this just after this client opened one of these files, the system would be badly broken.
If another thread changes the autocommit status of the database connection while this routine is running, then the return value is undefined.
If another thread interrupts this thread (Thread#kill, signal delivery, VM-shutdown request, and so on), `ubf()' is called (`ubf()' means "un-blocking function").
If another thread or process has written into the database since the read transaction was started, then it is not possible for this thread to write as doing so would cause a fork.
If any ACL is set, deny by default
If any BEFORE triggers were coded, then seek the cursor to the  row to be deleted again.
If any IO error apart from SQLITE_IOERR_SHORT_READ is encountered, the error code is returned to the caller and the contents of the output buffer undefined.
If any NUL characters occur at byte offsets less than  the value of the fourth parameter then the resulting string value will contain embedded NULs.
If any actual data is acquired, retval will be set to appropriate type
If any comparison is NULL, then the result is NULL.
If any conflict handler returns SQLITE_CHANGESET_ABORT, this function returns SQLITE_ABORT.
If any data has been written (but not committed) to the log file, this function moves the write-pointer back to the start of the transaction.
If any data is consumed, we cannot rely upon the existing read buffer, as the filtered data must replace the existing data, so invalidate the cache
If any database other than TEMP is reset, then also reset TEMP since TEMP might be holding triggers that reference tables in the other database.
If any do, return SQLITE_BUSY right away.
If any errors are detected, add an error message to pParse and return non-zero.
If any foreign key processing will be required, this function returns true.
If any named groups were found, create the name/number table from the list created in the first pass.
If any of the dtype transfer functions needed the API, flag it
If any of the expressions is an IPK column on table iBase, then return  true.
If any of the following errors occur:  SQLITE_NOMEM SQLITE_IOERR SQLITE_FULL SQLITE_INTERRUPT  Then the internal cache might have been left in an inconsistent state.
If any of the indexed columns use a collation sequence other than BINARY, this optimization is disabled.
If any of the parent-key values are NULL, then the row cannot match  itself.
If any of these pages are pinned, they are implicitly unpinned, meaning that they can be safely discarded.
If any of zDb, zTab, and zCol are NULL then those fields will match anything.
If any one branch matches, the assertion is true.
If any operand is a flexible dtype, check to see if any struct dtype ufuncs are registered.
If any operand requires a cast, buffering is mandatory
If any other  error occurs while processing an attached database, processing is abandoned  and the error code returned to the caller immediately.
If any other error occurs, return SQLITE_SCHEMA.
If any other process is running a checkpoint operation at the same time, the  lock cannot be obtained and SQLITE_BUSY is returned.
If any other value is returned the handshake is suspended.
If any other value is returned, the statement does not require a reset().
If any phrase is not a match, break out of the loop early.
If any row exist in the result set, record that fact and abort.
If any sibling already holds an exclusive lock, go ahead and return SQLITE_BUSY.
If any strides were flipped, the base pointers were adjusted in the first AXISDATA, and need to be copied to all the rest
If any term is found to match no documents at all, return immediately without initializing any further iterators.
If any term is reference to a result set expression (as determined by the ExprList.a.u.x.iOrderByCol field) then convert that term into a copy of the corresponding result set column.
If any variables are passed, make sure they are all passed by reference
If any virtual table method returns an error code other than SQLITE_OK,  processing is abandoned and the error returned to the caller of this function immediately.
If anybody is still using OS/2, they will have to put it back manually.
If anything  goes wrong, the transaction on pTo is rolled back.
If anything goes wrong (i.e. OOM error), leave an error code in pParse and return NULL.
If anything goes wrong, an error message is written into pParse.
If anything goes wrong, set an error in the database connection.
If argument P3 is non-zero, then it indicates that the sorter may assume that a stable sort considering the first P3 fields of each key is sufficient to produce the required results.
If argument addrExplain is not 0, it must be the address of an  OP_Explain instruction that describes the same loop.
If argument apVal is not NULL, then it must point to an array with at least as many entries as the requested statement has bound  parameters.
If argument bErrormsg is true and an error occurs, an error message may be left in sqlite3_vtab.zErrMsg.
If argument bFree is true, then this WITH clause will never be popped from the stack.
If argument bGe is zero and the term is not found, the iterator is left pointing at EOF.
If argument bNC is true, then the SQLITE_FUNC_NEEDCOLL flag is set.
If argument bSkip is non-zero, it is assumed that the caller has already determined that the first fields of the keys are equal.
If argument eMode is set to INCRINIT_NORMAL, then all PmaReaders in the sub-tree headed by pReadr are also initialized.
If argument eMode is set to INCRINIT_TASK, then pReadr is guaranteed to be a multi-threaded PmaReader and this function is being called in a background thread.
If argument eOp is false, then nByte bytes of data are copied from pPayload to the buffer pointed at by pBuf.
If argument is omitted, this method defines the callback of all events.
If argument isClearTable is true, then the entire contents of the table is about to be deleted.
If argument pNear is NULL, then a new Fts5ExprNearset object is allocated and populated with pPhrase.
If argument pState is not NULL, then the incremental checkpoint is being resumed.
If argument pbReplace is NULL and a CHANGESET_CONFLICT conflict is  encountered invoke the conflict handler with CHANGESET_CONSTRAINT instead.
If argument pbRetry is NULL, then ignore any CHANGESET_DATA conflict.
If argument pnCol is not NULL, then *pnCol is set to the number of columns in the table.
If argument pzTab is not NULL, then *pzTab is set to point to a nul-terminated utf-8 encoded string containing the name of the table affected by the current change.
If argument zDb is NULL, then call sqlite3CodeVerifySchema() for each  attached database.
If argument zFunc is not NULL, then all but the first question mark is preceded by zFunc and an open bracket, and followed by a closed bracket.
If argument zPath is a NULL pointer, this function is required to open a temporary file.
If argument zSql is NULL, this function assumes that an OOM has occurred.
If arguments ppOffsetList and pnOffsetList are not NULL, then  ppOffsetList is set to point to the first column-offset list in the doclist entry (i.e. immediately past the docid varint).
If array entry a(i) is non-zero, then reading column a(i)-1 from cursor P3 is  equivalent to performing the deferred seek and then reading column i  from P1.
If aspell was installed using installer, we should have a key pointing to the location of the dictionaries
If at least one field has been modified, this is not a no-op.
If at least one stride is negative and none are positive, flip all the strides for this dimension.
If auto-vacuum is  enabled 1 is returned.
If auto-vacuum is disabled in this build and this is an auto-vacuum database, mark the database as read-only.
If axis is NPY_MAXDIMS or bigger, then each sequence object will be flattened before concatenation
If bCloseTrans is true, then this function opened a read transaction on the source database.
If bCommit is zero, this loop runs exactly once and page pLastPg is swapped with the first free page pulled off the free list.
If bDescIdx is false, the value read is added to *pVal before returning.
If bExtend is set to false, exit early.
If bGlobal is true, then populate all fields of the matchinfo() output.
If bSkip is true, then the caller has already determined that the first two elements in the keys are equal.
If bTryForInt is false, then if the input string contains a decimal point or exponential notation, the result is only MEM_Real, even if there is an exact integer representation of the quantity.
If backslash is at the end of the pattern, it's an error.
If base is a power of 2, the returned value will always be exact.
If begin and end are numeric, +n+ is added for each iteration.
If begin and end are numeric, comparison is done according to the magnitude of the values.
If bind_one_parameter was used, but not everything was bound and nothing was fetched, then some `zv` could be NULL
If bins is decreasing, ret has bins from end, not start
If block is given, replace invalid bytes with returned value of the block.
If both 'x' and the SELECT...
If both allow_ipv4 and allow_ipv6 flags flag are used, then the first dot or colon determine the format
If both are numbers, compare as reals if one is a real, or as integers if both values are integers.
If both are scalars, there may be a promotion possible
If both are strings, compare using the collating functions.
If both aren't set we're using mysqlnd and use /tmp/mysql.sock as default on *nix and NULL for Windows (default named pipe name is set in mysqlnd).
If both args are strings AND either of args is not numeric string then use ICU-compare.
If both haystack and needle are BLOBs, then the result is one more than the number of bytes in haystack prior to the first occurrence of needle, or 0 if needle never occurs in haystack.
If both iA1 and iB1 are non-zero, overflow will result
If both left and right are defined, then use left.
If both of the virtual child terms are valid, then testing of the parent can be  skipped.
If both operands are NULL then the result of comparison is false.
If both operands are NULL then the result of comparison is true.
If both paRec and pnRec are NULL, then this function works like the public API sqlite3changeset_next().
If both processes invoke the busy handlers, neither will make any progress.
If both singular values are at least SMIN, (ca A - w D) will not be perturbed.
If both singular values of (ca A - w D) are less than SMIN, SMIN*identity will be used instead of (ca A - w D).
If both these operations are successful, proceed.
If both this  constraint and the previous equivalent constraint have explicit ON CONFLICT clauses this is an error.
If both types are integer, warn the user, same as python does
If both values are NULL, return 0.
If both values are blobs then memcmp() is used to determine the results of the comparison.
If both values are numeric, then a numeric comparison is used.
If both values are text, then the appropriate collating function specified in P4 is  used to do the comparison.
If both values are text, then the appropriate collating function specified in P4 is used to do the comparison.
If browser_name is omitted or null, HTTP_USER_AGENT is used.
If buf is not the complete file, apptype can incorrectly identify the exe type.
If buf was NULL, the result has to be freed outside here.
If buffer allocation was delayed, do it now
If buffer is not null terminated, len *must* be passed.
If buffering is enabled and copying is not, clear the nbo_aligned flag and strip the data type for the outer loops.
If buffering is enabled and no buffersize was given, use a default chosen to be big enough to get some amortization benefits, but small enough to be cache-friendly.
If buffering is set without delayed allocation
If buffering wasn't needed, we can grow the inner loop to as large as possible.
If callback() returns non-zero, the iteration will be stopped.
If called on a subclass of Array, converts the receiver to an Array object.
If called on a subclass of Hash, converts the receiver to a Hash object.
If called on a subclass of String, converts the receiver to a String object.
If called with a block, the Syslog object created is passed to the block.
If called with an array argument, writes each element on a new line.
If called without arguments, outputs a single record separator.
If case is not significant (the default for LIKE) then the lower-bound is made all uppercase and the upper- bound is made all lowercase so that the bounds also work when comparing BLOBs.
If caseless matching is required, scan the range and process alternate cases.
If casting is required and permitted
If casting is required, the operand is read-only, and it's an array scalar, make a copy whether or not the copy flag is enabled.
If changeCountDone is set, a RESERVED lock or greater must be held on the file.
If changes were made, it will return +self+, otherwise it returns +nil+.
If changing between the various rollback modes (delete, truncate, persist, off and memory), this is a simple operation.
If changing into or out of WAL mode the procedure is more complicated.
If changing the record number, delete the old record.
If changing the rowid value, or if there are foreign key constraints to process, delete the old record.
If checking an assertion for a condition, return MATCH_MATCH.
If child has no defined size in the cross axis and is set to stretch, set the cross axis to be measured exactly with the available inner width
If cli primary file has shabang line and there is a prepend file, the `start_lineno` will be used by prepend file but not primary file, save it and restore after prepend file been executed.
If collation sequence pColl was created directly by a call to sqlite3_create_collation, and not generated by synthCollSeq(), then any copies made by synthCollSeq() need to be invalidated.
If column 'x' is the first one after the nEq equality constraints in the index, this requires some special handling.
If compiled with SQLITE_DEBUG, then additional logic is inserted that does error checking on mutexes to make sure they are being called correctly.
If compiled with SQLITE_MUTEX_NOOP, then the no-op mutex implementation is used regardless of the run-time threadsafety setting.
If compiled with SQLITE_TEST defined, then this module exports the symbol "int sqlite3_fts3_enable_parentheses".
If compiled with SQLITE_WIN32_MALLOC on Windows, we will use the various Win32 API heap functions instead of our own.
If compiling for a processor that lacks floating point support, substitute integer for floating-point
If compiling for a processor that lacks floating point support, substitute integer for floating-point.
If compiling with GCC 2, this file's not needed.
If complex, a paired swap
If condition (a) is not met, assume (b) is true.
If config.h is available, we only need dlamc3
If conflict handling is required, bind values for all columns and set bound variable (nCol+1) to true.
If connected to a ZIPVFS backend, override the page size and offset with actual values obtained from ZIPVFS.
If connection db is not currently a part of the list, this function is a no-op.
If connection is bad, try to reconnect.
If control flows to here, it was not possible to append zTerm to the current node.
If control flows to this point, then it was not possible to add the the page being freed as a leaf page of the first trunk in the free-list.
If control flows to this point, this must be a regular token, or  the end of the input.
If control gets to this point, then actually go ahead and make operating system calls for the specified lock.
If correcting for daylight savings time, we set the adjustment to the value of timezone - 3600 seconds.
If corruption is detected then *pRc is set to SQLITE_CORRUPT and NULL is returned.
If createFlag is 1, then a new page is created only if that can be done without spilling dirty pages and without exceeding the cache size limit.
If createFlag is false, then a function with the required name and number of arguments may be returned even if the eTextRep flag does not match that requested.
If creating a master or main-file journal, this function will open a file-descriptor on the directory too.
If creating a temp table, the name may not be qualified.
If currently processing the PRIMARY KEY of a WITHOUT ROWID  table, only conflict if the new PRIMARY KEY values are actually different from the old.
If cursor P1 refers  to an SQL index, then P3 is the first in an array of P4 registers  that are used as an unpacked index key.
If cursors, triggers, views and subqueries are all omitted from the build, then none of the following routines, except for  sqlite3SelectDup(), can be called.
If custom axes were specified, some dimensions may not have been used.
If d is +-Infinity or NaN, then *decpt is set to 9999.
If daemonize, the calling process will die soon and the master process continues to initialize itself.
If data is not given but created here, then flags will be NPY_ARRAY_DEFAULT and a non-zero flags argument can be used to indicate a FORTRAN style array is desired.
If data is passed in, this object won't own it by default.
If data is successfully read from the (sub-)journal file but appears to be corrupted, SQLITE_DONE is returned.
If database zDb is the name of an attached database that is not in WAL mode, SQLITE_OK is returned and both *pnLog and *pnCkpt set to -1.
If dates_begin is after dates_end, it is negative.
If dates_begin is before dates_end, the result is positive.
If defined as non-zero, auto-vacuum is enabled by default.
If defined, the "winIoerrCanRetry2" macro must exhibit external semantics identical to those of the "winIoerrCanRetry1" macro.
If delete_old_session is set to true, remove the old session.
If deleting this axis produces a reduction, but reduction wasn't enabled, throw an error
If delimiters should be captured
If dequote is false, no dequoting is performance.
If dequote is false, no dequoting is performed.
If dequote is true, then the token (if it exists) is dequoted.
If destination_byteoffset is nil, destination_buffer.bytesize is used for appending the result.
If destination_bytesize is nil, destination size is unlimited.
If digits is 0, the result is the same as the / operator.
If dimensions need to be prepended (and no swapaxis is needed), use op_axes after extra_op is allocated for sure.
If doNot is true, then add a TK_NOT Expr-node wrapper around the outside of *ppExpr.
If doTruncate is non-zero or the Pager.journalSizeLimit variable is set to 0, then truncate the journal file to zero bytes in size.
If do_bind is true, update any bound columns.
If document cloned we want a new document proxy
If dtype is not in native byte-order then get native-byte order version.
If due to NULLs we cannot determine if the LHS is contained in the RHS then jump to destIfNull.
If eMode is BTALLOC_ANY then there are no restrictions on which page is returned.
If eMode is BTALLOC_LT then the page returned will be less than or equal to nearby if any such page exists.
If eMode is ONEPASS_MULTI, then this call is being made as part of a ONEPASS delete that affects multiple rows.
If eMode is ONEPASS_OFF then this function must seek iDataCur to the entry identified by iPk and nPk before reading from it.
If eMode is not ONEPASS_OFF, then the cursor iDataCur already points to the row to delete.
If eOp is SAVEPOINT_RELEASE, then the  statement transaction is committed.
If eOp is true, then sqlite3PagerWrite() is called on pDbPage and nByte bytes of data are copied from the buffer pBuf to pPayload.
If eStatementOp is non-zero, then a statement transaction needs to be committed or rolled back.
If each indexed column corresponds to a foreign key column of pFKey, then this index is a winner.
If eigenvalues only are being computed, I1 and I2 are re-set inside the main loop.
If eigenvalues only are being computed, I1 and I2 are set inside the main loop.
If eigenvalues only are being computed, only the active submatrix need be transformed.
If eigenvectors are desired, it uses a divide and conquer algorithm.
If eigenvectors are desired, then apply saved rotations.
If eigenvectors are desired, then save rotations.
If either  argument is an SQL NULL, then NULL Is returned.
If either  of these statements is untrue, then the data structure is corrupt.
If either *pbEof or *pRc are set, return a non-zero value.
If either +tag+ or +tagging+ are set then +:CONTEXT_SPECIFIC+ is used as the default.
If either P1 or P2 is 0 (false) then the result is 0 even if the other input is NULL.
If either P1 or P2 is nonzero (true) then the result is 1 (true) even if the other input is NULL.
If either P3 or the sorter contains a NULL in one of their significant fields (not counting the P4 fields at the end which are ignored) then the comparison is assumed to be equal.
If either are defined, also define SQLITE_ENABLE_STAT3_OR_STAT4
If either expression is NULL, then just return the other expression.
If either input is  NULL, the result is NULL.
If either input is NULL, the result is NULL.
If either integer is negative, then the setting is not changed but instead the prior value of that setting is written into the array entry, allowing the current retry settings to be interrogated.
If either of the sqlite3_blob_open() or sqlite3_blob_reopen() calls above returned SQLITE_ERROR, return SQLITE_CORRUPT_VTAB instead.
If either of these  schema items cannot be located, set an error in pParse and return  early.
If either of these conditions are true, return SQLITE_BUSY_SNAPSHOT.
If either of these operations fails, the return code is set, but the contents of the parent page are still manipulated by thh code below.
If either of these two conditions are not met, then the mutexes will fail and problems will result.
If either opcode is a small character list, set pointers for comparing characters from that list with another list, or with a property.
If either operand is NULL then the result is false.
If either operand is NULL then the result is true.
If either operand is NULL, the result is NULL.
If either snapshot handle was obtained before the  wal file was last deleted, the value returned by this function  is undefined.
If either the P1 or P2 text are NULL then store NULL in P3.
If either the current value or the highwater mark is too large to be represented by a 32-bit integer, then the values returned by sqlite3_status() are undefined.
If either the iTab or iSortIdx values for two WhereLoop are different then those WhereLoops need to be considered separately.
If either unit is generic, adopt the metadata from the other one
If element is not a resource, skip it
If enabled, estimate the number of leaf blocks of content to be written
If encoding conversion is needed or a user sets text mode, we use encoding conversion IO process and universal newline decorator by default.
If encoding is a colon separated two encoding names "A:B", the read string is converted from encoding A (external encoding) to encoding B (internal encoding), then tagged with B.
If errmsg is non-NULL, it should point to a variable which will receive the error message, and no Python exception will be set.
If errors occur, then an appropriate error message might be left in pParse.
If escape (27) was received, reads subsequent chars to determine if this is a known special key.
If estimation exceeds threshold, then will invoke full GC.
If everything checks out, these routines return 0.
If everything goes as planned, SQLITE_OK is returned.
If everything has worked, invoke fts3DisconnectMethod() to free the memory associated with the Fts3Table structure and return SQLITE_OK.
If everything is successful, SQLITE_OK is returned.
If exFlag is true, then acquire at least an EXCLUSIVE lock.
If existing WhereLoop p is better than pTemplate, pTemplate can be discarded.
If expensive assert() statements are available, do a linear search of the wal-index file content.
If exponent overflows,then raise exception or returns 0
If expression pExpr is of type TK_SELECT, generate code to evaluate it.
If external array is iterated, and no subspace is needed
If external is ASCII-8BIT, no transcoding
If extra_op is being tracked but subspace is used, we need to create a dedicated iterator for the outer iteration of the extra operand.
If failed to fork new process but no exceptions occurred, sets 0 to it.
If false is returned the session will be removed from the internal cache.
If false, then in-memory sub-journals are only used for in-memory pager files.
If fast mode is turned on, gdbm does not wait for writes to be flushed to the disk before continuing.
If fds is not Qnil, internal pipe for the errno propagation is arranged to avoid conflicts of the hash keys in +fds+.
If field is NULL and HAS DEFAULT, should be skipped
If file doesn't look like any sort of text, give up.
If firstchar was previously set, convert the subpattern's firstchar into reqchar if there wasn't one, using the vary flag that was in existence beforehand.
If firstline is TRUE, the start of the match is constrained to the first line of a multiline string.
If flag is +true+, the associated IO object must respond to the +flush+ method.
If flattening is attempted this routine returns 1.
If flattening is not attempted, this routine is a no-op and returns 0.
If foreign-key support is enabled, iterate through all FKs that  refer to table pTab.
If foreign-key support is enabled, rewrite the CREATE TABLE  statements corresponding to all child tables of foreign key constraints for which the renamed table is the parent table.
If foreign-keys are disabled, this function is a no-op.
If format of 1 is specified, then the function will return an array containing all the words found inside the string.
If format of 2 is specified, then the function will return an associated array where the position of the word is the key and the word itself is the value.
If found, change the idxNum to 1 and request the value of that constraint be sent to xFilter.
If found, expand each "*" to be every column in every table and TABLE.* to be every column in TABLE.
If found, increment the reference count and return a pointer to the existing file ID.
If found, it returns the loaded class.
If found, remove it from the hash table.
If found, return a pointer to it.
If found, set *piRead to the frame that contains the page.
If found, the result is true.
If fts3 is built as a dynamically loadable extension, this function is called by the sqlite3_extension_init() entry point.
If getaddrinfo() returns multiple addresses, TCPServer.new tries to create a server socket for each address and returns first one that is successful.
If given a block, #product will yield all combinations and return +self+ instead.
If handler object has method_missing and there is no method according to the event, then method_missing called and 1-st argument is event name.
If handler object has onXXX method according to XXX event, then onXXX method is called when XXX event occurs.
If has a ns and a str_type then index it
If hash for removed entries exists, go until offset+length and copy the entries to it
If heap validation should fail, an assertion will be triggered.
If help file is not found, then the method returns nil.
If helpcontext is not found, then returns nil.
If helpfile is not found, then returns nil.
If hit the end of the group (which could be repeated), fail
If how is SHUT_RD,  further receptions will be disallowed.
If how is SHUT_RDWR,  further  receptions and transmissions will be disallowed.
If how is SHUT_WR, further transmissions will be disallowed.
If i is equal to ary.size, it returns nil.
If i is equal to j (i.e., there is no element that satisfies the block), this method returns nil.
If iBase is negative, then allocate the next available cursor.
If iCol is less than zero, then the expression requests the rowid of the sub-select or view.
If iCol is not valid, return a pointer to a Mem which has a value of NULL.
If iDb is passed SQLITE_MAX_ATTACHED, then all attached databases are checkpointed.
If iLevel is -ve, then all data in all segments is merged.
If iLevel is less than 0 and this is not a scan, include a seg-reader  for the pending-terms.
If iNext is FTS3_MERGE_COUNT, indicating that level iLevel is already full, merge all segments in level iLevel into a single iLevel+1 segment and allocate (newly freed) index 0 at level iLevel.
If iPtr is another freeblock (that is, if iPtr is not the freelist pointer in the page header) then check to see if iStart should be coalesced onto the end of iPtr.
If iSavepoint is greater than (Pager.nSavepoint-1), then this function is a no-op.
If iUseFlag is less than or equal to zero, the subroutine is a no-op.
If ignore, do nothing If warn, print a warning and continue If raise return an error If call, call a user-defined function with string
If in WRITER_DBMOD, WRITER_FINISHED or OPEN state, then we update the pager cache if it exists and the main file.
If in doubt, do not deviate from existing commenting and indentation practices when changing or adding code.
If in full-sync mode, advance to the next disk sector before writing the master journal name.
If in full-synchronous mode, sync the journal first.
If in the future we call sqlite3PagerWrite() on this page, that means we have started to be concerned about content and the disk read should occur at that point.
If in the ranges below, it represents necessarily a alpha character because none of the supported encodings has an overlap with ASCII in the leading byte (only on the second one)
If in/out parameter (*pRc) is set to other than SQLITE_OK when this function is called, it is a no-op.
If inFlags contains IN_INDEX_MEMBERSHIP, then the generated table will be used for a fast membership test.
If index is the last entry+1 then we do a push because we're not inserting before any entry
If indices are greater than the current capacity of the array, the array grows automatically.
If input table has column "rbu_rowid"
If insufficient memory is available in the ReusableSpace object, increase the ReusableSpace.nNeeded value by the amount needed and return NULL.
If insufficient space is available, return NULL.
If is OK to return 0 here even if the expression really is always false or false (a false negative).
If isIgnoreErrors is true, then a table is being dropped.
If isWrite is non-zero and the requested shared-memory region has not yet been allocated, it is allocated by this function.
If isWrite is set to zero, exit early.
If it actually is this, return a pointer to the ')'.
If it can be used, then the value returned is the size of the journal file when it contains rollback data for exactly one page.
If it can't find anything, we have to give up.
If it can, create one if one does not already exist.
If it can, the merge-writer object *pWriter is initialized to write to it.
If it cannot (because  the page needs to be defragmented before the cells will fit), non-zero is returned.
If it could, we must look outwards for branches at other levels, stopping when we pass beyond the bracket which is the subject of the recursion.
If it did not delete it, the row-trigger may still have modified  some of the columns of the row being updated.
If it does fail, simply leak the file descriptor, but do log the error.
If it does match, we reset that variable to the current subject position and return MATCH_SKIP.
If it does not already exists, create and populate the on-disk file  for JournalFile p.
If it does not already exists, it will be created to use the new encoding value.
If it does not and there is not enough space left to add one, fail.
If it does not exist, or if an error occurs, nPhaseOneStep will be left set to -1.
If it does not exist, we have succeeded.
If it does not look like a number, leave it alone.
If it does not match the  value stored as part of the in-memory schema representation, set Parse.rc to SQLITE_SCHEMA.
If it does not work, then fallback to named semaphore locking.
If it does not, then the BTS_PENDING flag may be incorrectly cleared.
If it does so successfully, 0 is returned.
If it does, and the values  stored in all non-primary key columns also match the values stored in  the changeset the row is deleted from the target database.
If it does, and the values  stored in all non-primary key columns also match the values stored in  the changeset the row is updated within the target database.
If it does, leave an error message in pParse and return non-zero, since pFrom is not allowed to be a table-valued function.
If it does, record the new maximum blob size.
If it does, return early without loading the doclist-index (as it belongs to a different term.
If it does, then that is what is used.
If it does, this  indicates that the other process is not following the locking protocol.
If it does, we'd probably end up annihilating a positive+negative pi assertion.
If it doesn't have dimension one, it must match
If it evaluates to false (or NULL) the sub-vdbe is immediately halted by jumping to the  OP_Halt inserted at the end of the program.
If it exists, break the loop
If it exists, we pass the data immediately back to the caller.
If it fails here, it surely means that the user running this process does not have the permission(s) to use this container.
If it fails then it tries to glob the rest of the pattern and returns.
If it fails, we do not change the array.
If it fails, we return uninitialized.
If it finds some mandatory character(s), we are done for this branch.
If it finds that one of the recursions in the current group is on this list, it does not adjust the value in the reference (which is a group number).
If it has multiple other cases, return its case offset value.
If it has not already been allocated, allocate the UnpackedRecord structure that  that function will return to its caller here.
If it has not already been created, create the rbu_state table
If it has, return early.
If it is  not NULL, then the update-hook (sqlite3.xUpdateCallback) is invoked  following a successful insert.
If it is 0, then the constraint that failed is the unique constraint on the id column.
If it is 0, then the mask returned applies to the old.* table.
If it is 1, we can broadcast
If it is END it's the end of the outer call.
If it is False, we add a new axis, but this axis has 0 entries.
If it is NULL and a value can be successfully extracted, a new UnpackedRecord is allocated (and *ppRec set to point to it) before returning.
If it is NULL then Halt using parameter P1, P2, and P4 as if this were a Halt instruction.
If it is SAVEPOINT_RELEASE, then release and destroy the savepoint with index iSavepoint.
If it is SAVEPOINT_ROLLBACK, the xRollbackTo method.
If it is SAVEPOINT_ROLLBACK, then rollback all changes that have occurred since the specified savepoint was created.
If it is SAVEPOINT_ROLLBACK, then the statement transaction is rolled back.
If it is SQLITE_DYNAMIC, then the buffer pointed to by zName will be freed by sqlite3DbFree() when the vdbe is destroyed.
If it is a DELETE, pChanges is passed a NULL pointer.
If it is a NULL, return 0.0.
If it is a RELEASE, then destroy the savepoint being operated on  too.
If it is a ROLLBACK TO, then set the number of deferred  constraint violations present in the database to the value stored when the savepoint was created.
If it is a String, spaces are ignored and unrecognized characters terminate the value.
If it is a common (not leap) year and the molad occurs on Tuesday at or after 3:11:20 A.M., Tishri 1 must be delayed.
If it is a double-quoted string, both back-references must be preceded by an additional backslash.
If it is a hot-journal rollback, the pager is in state OPEN and holds an EXCLUSIVE lock.
If it is a keyword, the token code of that keyword is  returned.
If it is a line break, eat it.
If it is a pointer to a KeyInfo  structure, then said structure defines the content and collating  sequence of the index being opened.
If it is a positive integer, +read+ tries to read at most _length_ bytes.
If it is a recursion, just skip over it.
If it is a resource, than its a stream resource
If it is a stream that does not have a context assigned, it will create and assign a context and return that.
If it is a string or blob, try to convert it to a double.
If it is a string, it is either "fmode", "fmode:ext_enc", or "fmode:ext_enc:int_enc".
If it is a string, it is interpreted as a binary sequence of bytes.
If it is a valid frame, fill *piPage and pnTruncate and return true.
If it is already a tuple, make it an exact tuple anyway
If it is already open, this  function is a no-op.
If it is already present, control skips the Gosub opcode and jumps straight to the code generated by WhereEnd().
If it is an integer, it must be bitwise-or of open(2) flags, such as File::RDWR or File::EXCL.
If it is an internal node, then the 64-bit integer is a child page number.
If it is called in PAGER_NONE or PAGER_SHARED state and the lock held is less exclusive than a RESERVED lock, it is a no-op.
If it is currently memory mapped, unmap file pFd.
If it is deemed too complicated or it doesn't actually work it could be taken out.
If it is defined, it will be consulted only when the macro "winIoerrCanRetry1" returns zero.
If it is false, extra assert() conditions in the fts5 code are activated - conditions that are only true if it is guaranteed that the fts5 database is not corrupt.
If it is false, then assume that those fields that do not change between rows (i.e. FTS3_MATCHINFO_NPHRASE, NCOL, NDOC, AVGLENGTH and part of HITS) have already been populated.
If it is greater than zero, the indirect flag is set.
If it is indeed it then loop once more, then to_be_sent will become 0, left will stay 0.
If it is large enough, this function writes it out to disk.
If it is left pointing at the next record, then the next Next instruction will be a no-op.
If it is modified, this value is restored before this  function returns.
If it is negative, abs(TOLMUL*EPS*sigma_max) is the desired absolute accuracy in the computed singular values (corresponds to relative accuracy abs(TOLMUL*EPS) in the largest singular value.
If it is non-NULL, the serialized form of the value is written to  buffer aBuf.
If it is not NULL, it points to an array of size nCol*3, where nCol is the number of columns in the queried FTS table.
If it is not NULL, pTerm is a term that provides an upper or lower bound on a range scan.
If it is not NULL, the xSelectCallback() callback is invoked before the walk of the expressions and FROM clause.
If it is not NULL, then all entries in the sqlite_statN tables associated with the named table are deleted.
If it is not NULL, then pColl must point to the database native encoding  collation sequence with name zName, length nName.
If it is not NULL, then the update-hook  (sqlite3.xUpdateCallback) is invoked following a successful insert.
If it is not a BLOB literal, then it must be an ID, since no SQL keywords start with the letter 'x'.
If it is not a no-op, a single OP_Explain opcode  is added to the output to describe the table scan strategy in pLevel.
If it is not a pure fancy index, need to get the subspace
If it is not already open and the file exists on disk, open the  journal for read/write access.
If it is not already valid, call btreeParseCell() to fill it in.
If it is not finished, but no error occurred, SQLITE_OK is returned.
If it is not found, then returns nil.
If it is not possible, then that is not a problem.
If it is not there, ignore.
If it is not working, it's not Thomas G.
If it is not writable, generate an error message and return 1.
If it is not, either fail an assert or return zero.
If it is not, it is not possible to use any index.
If it is not, leave an error message in pParse.
If it is not, return SQLITE_ERROR.
If it is not, return with PCRE_ERROR_BADMAGIC.
If it is not, the results are undefined.
If it is not, then the cursor acquired will not work correctly.
If it is now 0-d fill the singleton dimension
If it is omitted, :STREAM is used.
If it is omitted, nil is assumed.
If it is one, it has only an effect on the result shape.
If it is one, the inner loop checks indices, otherwise check indices beforehand, because it is much faster if broadcasting occurs and most likely no big overhead
If it is only a single ellipsis, just return a view
If it is open, sync the journal file before calling UnlockAndRollback.
If it is positive, TOLMUL*EPS is the desired relative precision in the computed singular values.
If it is set to  non-zero the new syntax is activated.
If it is set to anything large than that, an #error directive in fts5_index.c will cause the build to fail.
If it is set to true and the xUpdate call is successful, then the value returned by sqlite3_last_insert_rowid()  is set to the value of the rowid for the row just inserted.
If it is set, allow the name with a different number, but continue scanning in case this is a duplicate with the same number.
If it is set, iterate through rowid in descending order instead of the default ascending order.
If it is the leading octet, determine the length of the UTF-8 sequence.
If it is the right size, return the recycled buffer.
If it is the year following a leap year and the molad occurs on Monday at or after 9:32:43 and 1/3 sec, Tishri 1 must be delayed.
If it is then return TRUE.
If it is true, the value read is subtracted from *pVal before this  function returns.
If it is true, the work of updating the change-counter is omitted for the current transaction.
If it is we must truncate.
If it is, delete it and adjust the contents of subsiduary data structures accordingly.
If it is, return a pointer to the Mem for the value of that column.
If it is, return the action, otherwise return YY_NO_ACTION.
If it is, the error code will be set to SQLITE_LOCKED.
If it is, then ask the code in where.c to attempt to sort results as if there was an "ORDER ON x" or "ORDER ON x DESC" clause.
If it is, this routine return an integer between 1 and N where N is the number of elements in pEList, corresponding to the matching entry.
If it is, we're finished with the string, but not necessarily with the element.
If it isn't clean already, make it so.
If it isn't compile_and_cache_file() changes the flag to 0
If it isn't dirty already, make it so.
If it matches, the scan pointer is advanced to the end of the match, and the length of the match is returned.
If it not, it is not possible to use any index of the RHS table.
If it overflowed, fill field with max value.
If it overflows, reset to 0 and increment the one before it.
If it ran out of space or there isn't space for the NULL terminator
If it returns 0, do not automatically add the new table.
If it returns 0, the operation aborts with an SQLITE_BUSY error.
If it returns CHANGESET_REPLACE, set *pbRetry to true before returning.
If it returns NULL that means that a mutex could not be allocated.
If it returns SQLITE_OK, then assume that the VFS handled the pragma and generate a no-op prepared statement.
If it returns non-zero, proceed.
If it returns non-zero, then the operation should be retried.
If it returns zero, the custom VFS should abandon the current operation.
If it returns zero, then the SQLITE_BUSY error is returned to the caller of the pager API function.
If it sees a chunk that is larger than mem3.iMaster, it replaces  the current mem3.iMaster with the new larger chunk.
If it starts with the magic string, then skip that
If it succeeds then it invokes globexp1 with the new pattern.
If it turns out that we do not need it after all, the OP_SorterOpen instruction will be converted into a Noop.
If it was Tuesday through Thursday, the weeknumber is one less than it should be, so we add one.
If it was a capturing subpattern, check to see if it contained any recursive back references.
If it was compressed, then the fp does not refer to the original file
If it were possible, this block would have to account for hidden column.
If it were, another process might open the database file, detect the RESERVED lock, and conclude that the database is safe to read while this process is still rolling the  hot-journal back.
If it were, that could cause a problem.
If it will not fit, then make a copy of the cell content into pTemp if pTemp is not null.
If it would overflow the datetime.timedelta days, return a raw int
If it's ALT it is an alternation in a nested call.
If it's December but the ISO week number is one, that week is in next year.
If it's January but the ISO week number is 52 or 53, that week is in last year.
If it's a custom data type, wrap its copy swap function
If it's a forward reference subroutine call, we can't.
If it's a one-dimensional result, don't use an iterator
If it's a reduction operand, definitely fixed stride
If it's a reduction, 0-stride inner loop may have fixed stride
If it's a scalar, check the value
If it's a scalar, don't need to check the axes
If it's a scalar, find the min scalar type.
If it's a single reference, it's one decref
If it's a tag token, it must be a part of URI.
If it's a trivial one-dimensional loop, don't use an iterator
If it's a value error, clear the error
If it's aligned and all native byte order, we're all done
If it's already a big enough string, don't bother type promoting
If it's already a big enough unicode object, don't bother type promoting
If it's an array, do a move (handling possible overlapping data)
If it's an array, store it
If it's exactly one reference, use the decref function
If it's not KEEPORDER, this is simple
If it's not a backwards reference, the dummy number will do.
If it's not a resource its a string containing the filename to open
If it's not a signed or unsigned number, treat it as a name.
If it's not an array, either assign from a sequence or as a scalar
If it's not an object array, stop looking
If it's not complex, one swap
If it's not exactly represented, it underflowed
If it's not listed, do nothing.
If it's not there, then make one and return.
If it's not, there isn't much we can do at this point.
If it's the same image, mapping is NOT trivial since we merge with greyscale target, but if pct is 100, the grey value is not used, so it becomes trivial.
If it's the same image, mapping is trivial
If it's writeable, this means a reduction
If its bigger than 4 bytes, the dir entry contains an offset.
If its not a string then nothing to do.
If jit for auto globals is enabled we will have to ping the used auto global variables before execution
If journal corruption occurs due to a power failure, the most likely  scenario is that one end or the other of the record will be changed.
If just tried and failed to reuse lookahead token after an error, discard it.
If ket is not OP_KETRMAX, this code path is executed after the jump to alternative_matchingpath.
If larger printf fields occur frequently, increase PADSIZE and make the initializers below longer.
If last members of struct lconv equal CHAR_MAX, no grouping is done
If last time around, the reduce loop structure was full, we reuse it
If leaving WAL mode, close the log file.
If left/right precedence rules come into play when determining the collating sequence, then COLLATE operators are adjusted to ensure that the collating sequence does not change.
If limit is negative all components except the last abs(limit) are returned.
If limit is negative, no checking of depth will be performed.
If limit is positive only limit number of components is returned.
If limit is specified, the traversal of subobjects will be limited to that depth.
If lines need to be skipped, do it here.
If loading from memory, set the base reference uri for the document
If loading from memory, we need to set the base directory for the document
If loading from memory, we need to set the base directory for the document but it is not apparent how to do that for schema's
If local is true, it reads a local header instead of a central directory entry.
If localtime is nonmonotonic, another result may exist.
If lookaside is already active, return SQLITE_BUSY.
If lookbehind, check that this branch matches a fixed-length string, and put the length into the OP_REVERSE item.
If m is not 0, then make the file creation mode be exactly m ignoring the umask.
If madvise is available, we release the unnecessary space.
If malloc failed, then the while() loop above may not have iterated through all opcodes and hasAbort may be set incorrectly.
If malloc() failed during an encoding conversion within an sqlite3_column_XXX API, then set the return code of the statement to SQLITE_NOMEM.
If mapping failed, close the shared memory handle and erase it
If matching is caseless, upper and lower are converted to alpha.
If matrix (N+1)-by-N lower bidiagonal, one additional rotation is needed.
If matrix lower bidiagonal, rotate to be upper bidiagonal by applying Givens rotations on the left
If matrix lower bidiagonal, rotate to be upper bidiagonal by applying Givens rotations on the left.
If matrix non-square upper bidiagonal, rotate to be lower bidiagonal.
If matrix was scaled, then rescale eigenvalues appropriately.
If maximizing, advance up to the maximum number of matching characters, until eptr is past the end of the maximum run.
If maximizing, find the longest possible run, then work backwards.
If maximizing, find the longest string and work backwards
If maximizing, it is worth using inline code for speed, doing the type test once at the start (i.e. keep it out of the loop).
If memory status is enabled, then the malloc.c wrapper will already hold the STATIC_MEM mutex when the routines here are invoked.
If merging (testhorizon), searches horizon facets of coplanar best facets because a point maybe coplanar to the bestfacet, below its horizon facet, and above a horizon facet of a coplanar newfacet.
If mimetype is unchanged, 0 is returned.
If minimizing, keep testing the rest of the expression and advancing the pointer while it matches the class.
If minimizing, keep trying and advancing the pointer
If minimizing, we have to test the rest of the pattern before each subsequent match.
If minusFlag is true, then the value is a number that was preceded by a minus sign.
If more information on a particular exception is needed, please refer to the Unix manual pages or the Windows WinSock reference.
If more than one +key+ corresponds to the given +value+, then the first key to be found will be returned.
If more than one frame was recovered from the log file, report an event via sqlite3_log().
If more than one term matches the prefix, sort the Fts3HashElem objects in term order using qsort().
If multiple filenames are present in +ARGV+, +gets(nil)+ will read the contents one file at a time.
If multiple handlers are registered, they are executed in reverse order of registration.
If mxPage is negative, the pager will operate asynchronously - it will not stop to do fsync()s to insure data is written to the disk surface before continuing.
If n is specified and negative, at least that many digits to the left of the decimal point will be 0 in the result.
If n1 has more digits then n2, we now do that subtract.
If nAppend is negative, then the length of the string zAppend is determined using strlen().
If nArg is -2, then createFlag must be 0.
If nArg is -2, then the first valid function found is returned.
If nBest is still 0, then the index must be empty.
If nByte is larger than the maximum string or blob length, then raise an SQLITE_TOOBIG exception and return NULL.
If nByte is less than zero, return the number of unicode characters in pZ up to (but not including) the first 0x00 byte.
If nByte is not less than zero, return the number of unicode characters in the first nByte of pZ (or up to  the first 0x00, whichever comes first).
If nCol is the number of user defined columns, then values of the  varints are set as follows:  Varint 0:       Total number of rows in the table.
If nEq is 0, then *pnOut is the number of  rows in the index. Assuming no error occurs, *pnOut is adjusted (reduced) to account for the range constraints pLower and pUpper.
If nEq is 0, this is the number of  rows in the index. Assuming no error occurs, *pnOut is adjusted (reduced) to account for the range contraints pLower and pUpper.
If nIn is non-negative, then it is the length of the string in bytes.
If nIncr is less than zero, then check at runtime if there are any outstanding constraints to resolve.
If nLoop is zero, then there are no FROM terms in the query.
If nRec is 0xffffffff, then this journal was created by a process working in no-sync mode.
If nRowEst is zero and there is an ORDER BY clause, ignore it.
If nSkip is non-zero, then do not copy the first nSkip bytes of the cell.
If nSkip is non-zero, then pCell may not point to an invalid memory location  (but pCell+nSkip is always valid).
If nSpill is 0, then the journal file is always create and  accessed using the underlying VFS.
If nSpill is less than zero, then all content is always stored in main-memory.
If nSpill was passed zero, initialize it using the sqlite3OsOpen() function of the underlying VFS.
If nTruncate is non-zero, this is a commit record.
If ndim and size match, this can be optimized as a single boolean index. The size check is necessary only to support old non-matching sizes by using fancy indexing instead.
If necessary, remove sample iMin to make room for the new sample.
If needSyncPgno is non-zero, then the journal file needs to be  sync()ed before any data is written to database file page needSyncPgno.
If needed, this code will make deep copies of argv and environ and return these to the caller for further use.
If needs_api was set to 1, it may have raised a Python exception
If negative, it is a relative backreference.
If negative, reduce the rule which number is the opposite.
If negative, reduce the rule whose number is the opposite.
If negative, there is no limit to the number of fields returned, and trailing null fields are not suppressed.
If neither 'a' or 'm' follows we have an error.
If neither 'x' nor the SELECT...
If neither SQLITE_TEST or SQLITE_DEBUG are defined, then these routines are no-ops.
If neither of the above apply, the page is safe to update.
If neither of those locations contain a contiguous representation of the key, then aAlloc is allocated and the key is copied into aAlloc and aKey is made to poitn to aAlloc.
If neither operand is NULL the result is the same as it would be if the SQLITE_NULLEQ flag were omitted from P5.
If neither record contains a value for a given column, then neither does the output record.
If new chunk, create and initialize it.
If new nodes are appended *pApnd is set to 1.
If new session or something weird happned
If new user, just add it
If newFlag is -1, then make no changes.
If new_cache_expire is given, the current cache_expire is replaced with new_cache_expire
If new_cache_limited is given, the current cache_limiter is replaced with new_cache_limiter
If new_location is not specified or null then SoapClient will use endpoint from WSDL file.
If newid is given, the session id is replaced with newid
If newname is given, the module name is replaced with newname
If newname is given, the save path is replaced with newname
If newname is given, the session name is replaced with newname
If next request is not pipelined, read it in
If nlz_bits_ret is not NULL and overflow is not occur, (return_value * word_numbits - val_numbits) is stored in *nlz_bits_ret.
If nlz_bits_ret is not NULL, (return_value * CHAR_BIT - val_numbits) is stored in *nlz_bits_ret.
If no  error occurs, SQLITE_OK is returned.
If no  such buffer exists or there is no space left in it, this function falls  back to sqlite3Malloc().
If no ':' on the line, add to previous line
If no +library+ is specified or +nil+ is given, DEFAULT is used, which is the equivalent to RTLD_DEFAULT.
If no +tag+ is specified, the UNIVERSAL tag corresponding to the Primitive sub-class is used by default.
If no BOM is found, the UTF-8 encoding is assumed.
If no NULL values are possible, set prRhsHasNull to 0 before continuing.
If no SNI cert array is specified we're finished here
If no YMD specified, assume 2000-Jan-01
If no additional char is received within a short time, 27 is returned.
If no alias was passed in, then it can match either and be valid
If no alignment, byte swap, or casting is needed, the inner stride of this operand works for the whole array, we can set NPY_OP_ITFLAG_BUFNEVER.
If no arguments are given, all runs of identical characters are replaced by a single character.
If no associated data is needed for encryption and later decryption, the OpenSSL library still requires a value to be set - "" may be used in case none is available.
If no associated data shall be used, this method must *still* be called with a value of "".
If no block and no arguments are given, returns self.
If no block is given an Enumerator is returned.
If no block is given an enumerator is returned instead.
If no block is given an enumerator is returned.
If no block is given, a new Enumerator is returned that includes the index.
If no block is given, an Enumerator is returned instead.
If no block is given, an Enumerator is returned.
If no block is given, an enumerator is returned instead.
If no block is given, returns a new Enumerator that includes the index, starting from +offset+  +offset+:: the starting index to use
If no block is given, returns an Enumerator.
If no block is given, returns an enumerator.
If no block is given, returns the Enumerator.
If no block is provided and no value is associated with the given +key+, then an IndexError will be raised.
If no busy handler or a different busy handler is set then 0 is returned.
If no callback, the result will be an array, consisting of current entries from all arrays.
If no collation is found, leave an error message.
If no column names were specified as part of the CREATE VIRTUAL TABLE statement, use all columns from the content table.
If no command is specified, removes all tracing for that variable and returns an array containing the commands actually removed.
If no commits have occurred since the last call, then return 0.
If no copy then take an appropriate view if necessary, or just return a reference to ret itself.
If no data has been written to disk, then do not do so now.
If no database changes have been made, return early.
If no default is set +nil+ is used.
If no destructor action specified: do nothing
If no digest buffer is passed, we don't bother doing this:
If no dtype was requested and the op is a scalar, pass the op
If no element exists with a matching key, then a new element is created and NULL is returned.
If no element exists with a matching key, then a new element is created.
If no encoder function was specified, return the data as-is.
If no error  (SQLITE_BUSY or otherwise) is encountered while processing the attached  databases, SQLITE_OK is returned.
If no error happened returns false.
If no error has occurred and pPage has an overflow cell, call balance()  to redistribute the cells within the tree.
If no error has occurred so far, check if the "number of entries" field on the node is too large.
If no error has occurred, return the calculated score.
If no error is encountered, the statement transaction will automatically commit when the VDBE halts.
If no error message is available, zBufOut is left unmodified and SQLite uses a default error message.
If no error messages have been generated, output OK.
If no error occurred, all that remains is to finalize the journal to commit the transaction.
If no error occurred, set the output variables.
If no error occurs and non-zero (a match) is returned, the position-list of each phrase object is edited to contain only those entries that meet the constraint before returning.
If no error occurs and the contents do match, set *pbOk to true and return SQLITE_OK.
If no error occurs and the current contents of the FTS index are correct, return SQLITE_OK.
If no error occurs and the entry is NULL, set *pbRes 1 before returning.
If no error occurs and the iterator points to a valid change after a call to sqlite3changeset_next() has advanced it, SQLITE_ROW is returned.
If no error occurs, *pRc is left unmodified.
If no error occurs, *paOut is set to point at an sqlite3_malloc'd buffer containing the output doclist and SQLITE_OK is returned.
If no error occurs, SQLITE_OK is returned and *apIndex set to point to the allocated array.
If no error occurs, SQLITE_OK is returned and sqlite3Fts3DeferToken() called on each token to defer.
If no error occurs, SQLITE_OK is returned and the iterator is left  pointing to the first entry.
If no error occurs, SQLITE_OK is returned and the iterator is left  pointing to the next entry.
If no error occurs, SQLITE_OK is returned and the new changeset/patchset stored in output variables *pnChangeset and *ppChangeset.
If no error occurs, SQLITE_OK is returned and the size of the database in pages is stored in *pnPage.
If no error occurs, SQLITE_OK is returned.
If no error occurs, return SQLITE_OK.
If no error occurs, return this value and set *pRc to SQLITE_OK.
If no error occurs, set *piIdx to this value plus one before returning SQLITE_OK.
If no error occurs, set *ppOut to point to the new object and return SQLITE_OK.
If no error occurs, then SQLITE_OK is returned and a value suitable for passing as the third argument to open(2) is written to *pMode.
If no error occurs, this function returns the patched blob.
If no errors occur, SQLITE_OK is returned.
If no expression is found, -1 is returned.
If no function was found, throw an error
If no global maximum is configured, then the system attempts to limit the total number of pages cached by purgeable pager-caches to the sum of the suggested cache-sizes.
If no hot-journal file is present, *pExists is set to 0 and SQLITE_OK returned.
If no index file exists, restore directory path
If no inputs are objects and there are more than one loop, don't allow conversion to object.
If no keys are found, +nil+ will be returned.
If no level with at least nMin segments can be found,  set nSeg to -1.
If no match is found, search the built-in functions.
If no match is found, the next outer context is checked.
If no match, return 0.
If no matching winShmNode currently exists, create a new one.
If no move is pending, check to see if the row has been deleted out from under the cursor and if it has, mark the row as a NULL row.
If no name is given, simply return the first VFS on the list.
If no newline options were set, find the default newline convention from the build configuration.
If no nonce is given a random one will be generated.
If no nonce was provided a random nonce will be added.
If no output was supplied, possibly convert to a scalar
If no override data type, use the one from the prototype
If no page  movement was required (because the table being dropped was already  the last one in the database) then a zero is stored in register P2.
If no page gets moved, *piMoved is set to 0.
If no peer certificate was presented X509_V_OK is returned.
If no peer name was specified we use the autodetected url name in client environments
If no pending lock has been acquired, then acquire it
If no previous first byte, set it from this character, but revert to none on a zero repeat.
If no problems are found, store a NULL in register P1.
If no result bind, do nothing.
If no scalar is provided, it returns INTPOS_SCALAR for both signed and unsigned integers, otherwise it checks the sign of any signed integer to choose INTNEG_SCALAR when appropriate.
If no singular vectors desired, use qd algorithm
If no solution is found for any candidate x_n, we have proved the problem is infeasible --- which for the memory overlap problem means there is no overlap.
If no starting bytes were found, and the minimum length is zero, and JIT compilation fails, abandon the extra block and return NULL, unless PCRE_STUDY_EXTRA_NEEDED is set.
If no step was provided, default to 1
If no such TriggerPrg object exists, a new object is allocated and populated before being returned.
If no such buffer exists, this function falls back to sqlite3Malloc().
If no such file descriptor is located, -1 is returned.
If no such row is found, no change  is added to the changeset.
If no suitable space can be found on the free-list, return NULL.
If no suitable temporary file directory can be found, return NULL.
If no terms with a constant RHS exist, try to return a term that does not use WO_EQUIV.
If no test above fails then the indices must be compatible
If no trivial loop matched, an iterator is required to resolve broadcasting, etc
If no unit is provided, return the maximum length
If no valid JSON document can be created this method raises a GeneratorError exception.
If no value can be extracted, but no other error occurs (e.g. OOM), return SQLITE_OK and set *ppVal to NULL.
If no value has been provided for SQLITE_MAX_WORKER_THREADS, or if SQLITE_TEMP_STORE is set to 3 (never use temporary files), set it to zero.
If no value is found, returns +nil+.
If no value is specified, all of the headers are removed.
If no value is supplied, the current value is returned.
If no values are available because of an error, they are both set to -1 before returning to communicate this to the caller.
If no versions of the requested collations sequence are available, or another error occurs, NULL is returned and an error message written into pParse.
If no write back but there are references make a decref fn
If no zContent option was specified, fill in the default values.
If no zName is given, restore all system calls to their default settings and return NULL
If no, returns false.
If noContent is true, it means that we do not care about the contents of the page.
If noContent is true, then the data returned is zeroed instead of being read from the database.
If non-NULL is returned, then it is guaranteed that the new entry was successfully appended.
If non-NULL, bulk memory to hold pList
If non-NULL, points to sqlite3_vtab.base.zErrmsg.
If non-NULL, store record pointer here
If non-NULL, store size of record here
If non-NULL, write serialized value here
If non-delete entry should be written
If non-null, the reference is stolen.
If non-zero free this temporary register
If non-zero is returned, the caller should call fts5MultiIterAdvanced() on the iterator instead.
If non-zero is returned, then it is not necessary to include the nul-terminator character in the output buffer.
If non-zero, increment the row change counter
If non-zero, last token to include
If non-zero, replace first 4 bytes with this value
If non-zero, then URI handling is globally enabled.
If non-zero, transform OP_rowid to OP_AddImm(1)
If none is acceptable, raising an error in the callback will cause the handshake to fail.
If none is found increment the constraint counter.
If none is given OpenSSL will prompt for the pass phrase.
If none of the above are defined, then set SQLITE_SYSTEM_MALLOC as the default.
If none of the above worked, then we fail.
If none of the above, then the result destination must be SRT_Output.
If none of the doclists associated with the tokens spill onto overflow pages, or if there is only 1 token, exit early.
If not NULL, bind only if true
If not NULL, blob handle to read node
If not NULL, increment this in DbFree()
If not NULL, info on how to process DISTINCT
If not NULL, info on how to process ORDER BY
If not NULL, only analyze this one index
If not NULL, the master journal name
If not NULL: boolean for each table and index
If not a forward reference, and the subpattern is still open, this is a recursive call.
If not already recovering from an error, report this error.
If not an address, then try to resolve it as a hostname
If not an assertion fault occurs.
If not at EOF but the current rowid occurs earlier than iFirst in the iteration order, move to document iFirst or later.
If not at start, find it
If not building as part of the core, include sqlite3ext.h.
If not called from the resource dtor, remove the stream from the resource list.
If not defined, then do no error processing.
If not explicitly set this default internal encoding is +nil+ meaning that by default, no transcoding occurs.
If not found, pSchema will remain NULL and nothing will match resulting in an appropriate error message toward the end of this routine
If not found, return FALSE.
If not found, then returns nil.
If not fully qualified and not an alias, prepend the current namespace
If not given, return current process sid.
If not given, then make a new def with original_id and opts.
If not in RBU_STAGE_OAL, allow this call to pass through.
If not initializing, then create a record for the new table in the SQLITE_MASTER table of the database.
If not matched, restore the previous mark setting.
If not negative index of IPK column
If not null, *rve is set to point to the end of the return value.
If not null, call this function to delete Mem.z
If not reached end of pattern on success, there's an excess bracket.
If not set explicitly, the ALPN extension will not be included in the handshake.
If not set explicitly, the NPN extension will not be sent by the server in the handshake.
If not set, the current time is used.
If not specified, deltas are ignored.
If not specified, the filesystem encoding is used.
If not specified, the sort flags defaults to PHP_SORT_ASC and PHP_SORT_REGULAR accordingly.
If not successful, indicate that the items cannot be compared this way.
If not supported or if required by legacy applications, the older, less secure methods specified in RFC 2898 are also supported (see below).
If not,  it can be ignored.
If not,  return NULL.
If not, SQLITE_SCHEMA is returned and none of the output variables are populated.
If not, add the current row to the index and proceed with writing it to the output table as well.
If not, append an error message to pCheck.
If not, call this corruption.
If not, digest_obj.digest().length() is returned.
If not, do nothing, leaving the EXACT alone.
If not, return FALSE.
If not, see if we can set the PCRE_STARTLINE flag.
If not, simply write the new page, and we are still looking at the page of interest.
If not, store an error in the Parse structure.
If not, the result is an integer BigDecimal, by analogy with Float#div.
If not, then split a block of the next larger power of two in order to create a new free block of size iLogsize.
If not, then when "make test" is run with -DSQLITE_VDBE_COVERAGE and -DSQLITE_DEBUG then an ALWAYS() will fail in the vdbeTakeBranch() routine in vdbe.c, alerting the developer to the missed tag.
If not, truncate the file to zero length.
If not, use sqlite3_realloc() to grow the buffer so that there is.
If not, we broke out after a match.
If not, we return a non-zero value.
If not, we still carry on, because there may be ranges that start below 256 in the additional data.
If not, will try to convert it to a single array
If nothing is set at run time, whatever was used at compile time applies.
If nothing matched, it's an error
If numbytes is 0 it will be calculated using the dimensions and element-size.
If obj is NULL, then call method with Py_None
If obj is None or NULL, everything is set to True.
If obj is a multi-iterator, all its arrays will be added to the new multi-iterator.
If obj is a tuple, each axis within the tuple is set to True.
If obj is an integer, just that axis is set to True.
If object arrays are forced
If object is kind of normal (accessible) object, the key is Class object.
If object is not a kind of normal (internal) object, the key is symbol name, registered by rb_data_type_struct.
If obtaining a child page for a cursor, we must verify that the page is compatible with the root page.
If oci_old_close_semantics is set, we artificially bump up the refcount and decremented only at request shutdown.
If odtype is specified, make a type tuple for the type resolution.
If offset before start
If offset is greater than offset_top, it means that we are "skipping" a capturing group, and that group's offsets must be marked unset.
If offsets should be captured
If old_data is non-NULL, the previous user_data pointer will be copied to it.
If omitted or 0, the number of significant digits is determined from the initial value.
If omitted, 0 is assumed.
If omitted, PF_UNSPEC is assumed.
If omitted, then a list of all (non-hidden) columns for the table is substituted.
If omitted, then a list of all columns for the table is substituted.
If one blob is a prefix of the other, then the shorter is the lessor.
If one buffer is a prefix of the other, it is considered the lesser.
If one can be found, return a pointer to the space and remove it from the free-list.
If one can be found, then jump over the entire DELETE if there are no outstanding deferred constraints when this statement is run.
If one cannot be found, return without  generating any VDBE code.
If one cannot determine the truth value of the expression at compile-time return 0.
If one has been configured, invoke the rollback-hook callback
If one has numeric affinity, use that.
If one is encountered it is simply skipped.
If one is encountered, this indicates corruption.
If one is encountered, update or delete the row with the matching primary key instead.
If one is found, an INSERT change is added to the changeset.
If one is found, it is returned.
If one is found, return a pointer to the corresponding Fts5Auxiliary structure.
If one is found, set iAbsLevel to the absolute level number and nSeg to nMin.
If one is found, shift it to the front of the LRU queue and return immediately.
If one is found, this call is a no-op.
If one is found, this is an error.
If one is found, this vfs will operate in pass-through mode.
If one is present, it is removed and the encoding of the Mem adjusted.
If one of the BtreeCommitPhaseOne() calls fails, this indicates an IO error while deleting or truncating a journal file.
If one of the dtypes is NULL, we give back either a src decref function or a dst setzero function
If one of the substrings is found, the corresponding affinity is returned.
If one of these fault codes is received, the description string will automatically be prefixed with a standard error string and 2 newlines.
If one or both are user defined, calculate it
If one or more IN operators appear, then this routine allocates an additional nEq memory cells for internal use.
If one or more arguments specified, the time is initialized to the specified time.
If one or more segments are promoted, the structure object is updated to reflect this.
If one side or the other of the AND is known to be false, then instead of returning an AND expression, just return a constant expression with a value of false.
If one subtracts 'size' from the end of the segment, one has the address of the first word of the segment.
If one term is a prefix of another, the longer term is considered the larger.
If one term is a prefix of the other, it is considered to be smaller than the other.
If one value is NULL, it is less than the other.
If one value is a number and the other is not, the number is less.
If one value is a string and the other is a blob, the string is less.
If one was specified, code the WHEN clause.
If one zval can sometimes be fetched as a long you have to set the is_used member of the corresponding gmp_temp_t value to 0, otherwise the FREE_GMP_TEMP and *_DEP macros will not work properly.
If only 2 instrs, and in Y-mode, insert a nop.
If only CRLF newline conversion is needed, we use binary IO process with OS's text mode for IO performance improvement.
If only SQLITE_ENABLE_STAT3_OR_STAT4 is on, then the largest input possible to this routine is 310, resulting in a maximum x of 31
If only a subset is given or the class has protected members then you need to merge the properties separately by calling zend_merge_properties().
If only everything were that easy...
If only existence check is made, return now
If only one argument is given, decodes it as DER representation of a certificate ID.
If only one singular value is less than SMIN, one element of (ca A - w D) will be perturbed enough to make the smallest singular value roughly SMIN.
If only_inputs is 1, it leaves any operands that are not read from out of the calculation.
If onoff is zero, undo this setting.
If op is SAVEPOINT_BEGIN, the xSavepoint method is invoked.
If op is a NumPy scalar
If op is a Python scalar
If op supplies the __array__ function.
If op supports the PEP 3118 buffer interface
If op supports the __array_struct__ or __array_interface__ interface
If op1 is scalar, UNSET_DIM and UNSET_OBJ have no effect, so we can keep the previous ranges.
If op_axes is not NULL, it should point to an array of ndim-sized arrays, one for each op.
If op_axes is not NULL, it should point to an ndim-sized array.
If opening a non-empty database, check the text encoding.
If opening an attached database, the encoding much match ENC(db)
If opening the main database, set ENC(db).
If optional arguments are not given, the start position of the copy is the beginning of the filename or the current file offset of the IO.
If out is specified it determines otype unless otype already specified.
If overflow occurs, both out_num and out_denom are set to 0, but no error is set.
If overflow, return zero.
If p is NULL (if the bitmap has not been created) or if i is out of range, then return false.
If p2 is negative, return the p2 characters preceding p1.
If pAlloc is not NULL, then an UnpackedRecord object is created for pAlloc if one does not exist and the new value is added to the UnpackedRecord object.
If pBt points to an empty file then convert that empty file into a new empty database by initializing the first page of the database.
If pBuf is not NULL, it means that memory space has already been allocated and that this routine should not allocate any new memory.
If pBuf is not initially NULL, that means that the memory has already been allocated by a prior call to this routine, so just return a copy of pBuf and leave ReusableSpace unchanged.
If pCtx is NULL and an error occurs after the sqlite3_value object has been allocated, it is freed before returning.
If pDatabase is not null, it means that the table has an optional database name prefix.
If pDbPage is an overflow page, then the first 4 bytes may store a pointer to a subsequent overflow page.
If pDbPage was a btree-page, then it may have child pages and/or cells that point to overflow pages.
If pDone is not NULL, then it is a record of pages that have already been played back.
If pExpr is a TK_COLUMN column reference, then this routine always returns true even if that particular column is not indexed, because the column might be added to an automatic index later.
If pExpr is a column in a virtual table, then let the virtual table implementation have an opportunity to overload the function.
If pExpr is a column, a reference to a column via an 'AS' alias, or a sub-select with a column as the return value, then the  affinity of that column is returned.
If pExpr is a constant, then this routine might generate this code to fill the register in the initialization section of the VDBE program, in order to factor it out of the evaluation loop.
If pExpr is an ASC iterator, this function returns a value with the same sign as:  (iLhs - iRhs)  Otherwise, if this is a DESC iterator, the opposite is returned:  (iRhs - iLhs)
If pExpr is not a TK_SELECT expression, return 0.
If pExpr is part of a NEAR expression, then it also allocates and populates the same array for all other phrases that are part of the NEAR expression.
If pFile holds a lock on a conch file, then release that lock.
If pFile is currently larger than iSize bytes, then truncate it to exactly iSize bytes.
If pFile is not larger than iSize bytes, then this function is a no-op.
If pFree is not NULL, it points to the pSpace buffer used  by a previous call to balance_nonroot().
If pFrom contained any cells with overflow page pointers, then the corresponding pointer map entries are also updated so that the parent page is page pTo.
If pFrom contains ephemeral data, a copy is made.
If pIdx is NULL, then the parent key is the INTEGER PRIMARY KEY column of the parent table (table pTab).
If pIdx is not a partial index, *piPartIdxLabel will be set to zero which is an empty label that is ignored by sqlite3ResolvePartIdxLabel().
If pLast is NULL at this point, then the last rowid for this doclist lies on the page currently indicated by the iterator.
If pList is NULL, then the most recently added column of the table is the primary key.
If pList is initially NULL, then create a new expression list.
If pMem is a floating-point then the value returned is the integer part.
If pMem is a string or blob, then we make an attempt to convert it into a integer and return that.
If pMem is a string or blob, then we make an attempt to convert it into an integer and return that.
If pMem is already a double or an integer, return its value.
If pMem is an integer, then the value is exact.
If pMem is not a string object, or the encoding of the string representation is already stored using the requested encoding, then this routine is a no-op.
If pMem represents a string value, its encoding might be changed.
If pMem represents an an SQL-NULL value, return 0.
If pNew is still NULL, try to create an entirely new mapping.
If pNode currently points to a match, this function returns SQLITE_OK without modifying it.
If pNode is a leaf node, this is a rowid.
If pNode is the root node, return -1.
If pOnlyIdx is not NULL then it is a single index in pTab that should be analyzed.
If pOther is already blocked on db, then report SQLITE_LOCKED, to indicate a deadlock.
If pPage is not part of the PGroup LRU list, then this function is a no-op.
If pParent has NB or fewer children then all children of pParent are taken.
If pPayload is part of the data area of pPage, then make sure pPage is still writeable
If pPrior is not NULL, then it is a pointer to a different index for which an index key has just been computed into register regPrior.
If pPrior is part of the data area of pPage, then make sure pPage is still writeable
If pSavepoint is NULL, then pages are only played back from the main journal file.
If pSchema is NULL, then return -1000000.
If pSchema is not NULL, then iDb is computed from pSchema and db using sqlite3SchemaToIndex().
If pSortCsr is non-NULL, then this call is being made as part of  processing for a "...
If pSpace is already 8-byte aligned, nOff should be zero.
If pStart is NULL the space for the lookaside memory is obtained from sqlite3_malloc().
If pStart is not NULL then it is sz*cnt bytes of memory to use for the lookaside memory.
If pState is NULL, then the wal file may not have been opened and recovered.
If pStmt is NULL, return the first prepared statement for the database connection.
If pSynced is NULL and this page has a clear NEED_SYNC flag, set pSynced to point to it.
If pTab is a WITHOUT ROWID table, then iCur must be the cursor of the PRIMARY KEY index.  Return a register number which is the first in a block of registers that holds the elements of the index key.
If pTab is a WITHOUT ROWID table, then it is the PRIMARY KEY index for that table that is actually opened.
If pTab is a virtual table, call ViewGetColumnNames() to ensure it is initialized.
If pTab is a virtual table, then this routine is a no-op and the piDataCur and *piIdxCur values are left uninitialized.
If pTab is already in the array, this routine is a no-op.
If pTab is really a view, make sure it has been initialized.
If pTemplate cannot supplant any existing element of the list but needs to be added to the list, then return a pointer to the tail of the list.
If pTemplate is always better than p, then cause p to be overwritten with pTemplate.
If pToRelease is not zero than pPayload points into the data area of pToRelease.
If pToRelease is not zero than pPrior points into the data area of pToRelease.
If pTree  has no parent, one is created here.
If pUpper is NULL, or a value cannot be extracted from it, U is set to N.
If pVector is a TK_SELECT expression, then code for it must have  already been generated using the exprCodeSubselect() routine.
If pVector is a TK_SELECT, then the returned object will reference pVector and so pVector must remain valid for the life of the returned object.
If pVector is a TK_VECTOR or a scalar expression, then it can be deleted as soon as this routine returns.
If pVector is of type TK_VECTOR, then code for the requested field is generated.
If pVtab is already in the aVTrans array, return early
If pX is a SELECT statement  that can be simplified to a direct table access, then return a pointer to the SELECT statement.
If pX is a WhereLoop that pTemplate can supplant, then return the link that points to pX.
If pX is not a SELECT statement, or if the SELECT statement needs to be manifested into a transient table, then return NULL.
If paBlob is non-NULL, then it is the responsibility of the caller to eventually free the returned buffer.
If paBlob is not NULL, then a buffer is allocated using sqlite3_malloc() and populated with the contents of the blob stored in the "block" column of the  identified table row is.
If padding is needed, then the final frame is repeated (with its commit mark) until the next sector boundary is crossed.
If page 1 was just written, update Pager.dbFileVers to match the value now stored in the database file.
If page iPage has already been  copied into the destination database, then the data written to the destination is now invalidated.
If page iPg is present in the cache, and has no outstanding references, it is discarded.
If page one was fetched successfully, and this function is not operating in direct-mode, make page 1 writable.
If page ovfl is the last page in its linked  list, *pPgnoNext is set to zero.
If page pFrom was not a leaf page, then the pointer-map entries for each child page are updated so that the parent page stored in the pointer map is page pTo.
If palette is true, we convert from truecolor to palette at the end, to test gdImageTrueColorToPalette and see file size/ quality tradeoffs.
If parameter abPK is NULL, all values from 0 to (nCol-1) are transfered to the statement.
If parameter bOptOk is true, then the phrase may (or may not) use the incremental loading strategy.
If parameter bOptOk is zero, then it is guaranteed that the Fts3Phrase.doclist.aAll/nAll variables contain the entire doclist for each phrase in the expression (subject to deferred token processing).
If parameter bZero is non-zero, then any part of the input list following the end of the output list is zeroed before returning.
If parameter iCol is greater than or equal to the number of columns in the table, SQLITE_RANGE is returned.
If parameter iCol is not 0, write an POS_COLUMN (1) byte followed by the value of iCol encoded as a varint to *pp.
If parameter iOp is less than zero, then invoke the destructor for all auxiliary data pointers currently cached by the VM passed as the first argument.
If parameter iReg is not negative, code an OP_RealAffinity instruction on register iReg.
If parameter n is a negative number, then z is assumed to point to a nul-terminated string and the length is determined using strlen().
If parameter nByte is non-negative, then it is the requested size of  the mapping to create.
If parameter nByte is non-negative, then it is the requested size of the mapping to create.
If parameter nReserve is less than zero, then the number of reserved bytes per page is left unchanged.
If parameter xBusy is not NULL, it is a pointer to a busy-handler callback.
If parameter zDb is NULL or points to a zero length string, then the specified operation is attempted on all WAL databases.
If parameter zFunc is not NULL, then instead of being returned directly each column of text data is passed to an SQL function named zFunc first.
If partial is true, partial matches are allowed at the end of the buffer.
If path_translated is NULL, terminate here with a 404
If pazCol was not NULL, then pointer *pazCol should be freed to release all memory.
If pbIncorrect is not NULL, then *pbIndirect is set to true (1) if the change is an indirect change, or false (0) otherwise.
If persistent then set soap_obj from from the previous created session (if available)
If persistent, the streams register it in EG(persistent_list).
If php_session_create_id() fails due to invalid configuration, it raises E_ERROR.
If piFirst is not NULL, then this function sets *piFirst to the blockid of the child node that heads the sub-tree that may contain the term.
If piLast is not NULL, then *piLast is set to the right-most child node that heads a sub-tree that may contain a term for which zTerm/nTerm is a prefix.
If piLeaf is not NULL, then *piLeaf is set to the blockid of the  left-most leaf node in the tree that may contain the specified term.
If piLeaf2 is not NULL, then *piLeaf2 is set to the blockid of the right-most leaf node that may contain a term for which the specified term is a prefix.
If pkChng is false, then the key of the iDataCur content table is guaranteed to be unchanged by the UPDATE.
If pkChng is zero, it means that the either rowid is computed automatically or that the table is a WITHOUT ROWID table and has no rowid.
If pnChange is not NULL, then table iTable must be an intkey table.
If pnCkpt is not NULL, then *pnCkpt is set to the total number of checkpointed frames (including any that were already checkpointed when this function is called).
If pnCol is not NULL, then *pnCol is  set to the number of columns in the table affected by the change.
If positive, it is an absolute backreference.
If positive, shift that token.
If possessive, we are then done (no backing up).
If possible, PBKDF2 as described above should be used if the circumstances allow it.
If possible, it uses the auto-vacuum pointer-map data instead of reading the content of page ovfl to do so.
If possible, return a pointer to a mapping of file fd starting at offset iOff.
If possible, the upper layer will call it.
If possible, this estimate is loaded from the sqlite_stat1 table (with RTREE_MIN_ROWEST as a hard-coded minimum).
If possible, this is based on sqlite_stat1 data.
If pp is not NULL, then the contents of the column-list are copied to *pp.
If pp is not NULL, then the contents of the position list are copied to *pp.
If ppPage is not NULL, and a reference to the MemPage object corresponding to page number pOvfl was obtained, then *ppPage is set to point to that reference.
If prRhsHasNull is not a NULL pointer and  if there is any chance that the (...) might contain a NULL value at runtime, then a register is allocated and the register number written to *prRhsHasNull.
If present, interpret its value as a filename and try to copy the mode, uid and gid from that file.
If previous was a bracket group, we may have to replicate it in certain cases.
If previous was a character or negated character match, abolish the item and generate a repeat item instead.
If previous was a recursion call, wrap it in atomic brackets so that previous becomes the atomic group.
If proc is specified, each object will be passed to the proc, as the object is being deserialized.
If protocol is not given, 0 is used internally.
If pszEst is not NULL, store an estimate of the field size.
If queue is IsEmpty returns NULL  comments    :
If rMayHaveNull is non-zero, that means that the operation is an IN (not a SELECT or EXISTS) and that the RHS might contains NULLs.
If rMayHaveNull is zero, that means that the subquery is being used for membership testing only.
If rc is not SQLITE_OK at this point, then either the malloc subsystem could not be initialized or the system failed to allocate the pInitMutex mutex. Return an error in either case.
If reached the chunk size, add it to the result array, and reset the pointer.
If read_io and write_io are not closed when the block exits, they are closed.
If reading entire image is requested, read the rest of the data.
If recovery is known to be running, convert BUSY to BUSY_RECOVERY.
If recursion is detected on the current method and obj, the outermost func will be called with (obj, arg, Qtrue).
If recursion is detected on the current method, obj and paired_obj, the outermost func will be called with (obj, arg, Qtrue).
If recursive mutexes are not available, then we have to grow our own.
If recursive mutexes are not available, we will have to build our own.
If refcheck is 0, then the reference count is not checked and assumed to be 1.
If references weren't specifically allowed, make sure there are no references in the inputs or requested dtypes.
If refsign is not negative, it means we have a number in recno.
If register P1 contains a RowSet object and that RowSet object contains the value held in P3, jump to register P2.
If register P1 is initially zero, leave it unchanged and fall through.
If register P3 does not contain an integer or if P1 does not contain a record with rowid P3 then jump immediately to P2.
If relative accuracy desired, apply convergence criterion backward
If relative accuracy desired, apply convergence criterion forward
If remaining matrix is 2 by 2, use DLAE2 to compute its eigenvalues.
If remaining matrix is 2 by 2, use SLAE2 to compute its eigenvalues.
If remaining matrix is 2-by-2, use DLAE2 or SLAEV2 to compute its eigensystem.
If remaining matrix is 2-by-2, use SLAE2 or SLAEV2 to compute its eigensystem.
If replace is an array and not a callable construct
If replace is an array.
If req_char is set, we know that that character must appear in the subject for the match to succeed.
If requested, convert from truecolor to palette.
If requesting a write-lock, then the Btree must have an open write transaction on this file.
If required (i.e. if it was not allocated by extending the file), the current page at position pgnoMove is already journaled.
If required, grow the hash table used to store changes on table pTab  (part of the session pSession).
If required, populate the output variables with a pointer to and the size of the previous offset-list.
If required, populate the overflow page-list cache.
If required, this routine calls the 'collation needed' callback to request a definition of the collating sequence.
If result is mismatch and no FIND_NOT_EMPTY option, then the region is not set in match_at().
If result is mismatch and no FIND_NOT_EMPTY option, then the region is not setted in match_at().
If result is normalized
If result is still normalized
If result of an OP_Eq comparison on the same two operands would have be NULL or false (0), then then jump to P2.
If result of assert is unused, result of check is unused as well
If resulting string turns out to be shorter than input string, we simply copy the input and return.
If return_value is not null, store values into it according to HOW.
If right after execute() we have to call the appropriate use_result() or store_result() and clean.
If rowid is changing, make sure the new rowid does not previously exist in the table.
If running in direct mode, write the contents of page 1 to the file.
If running in multi-threaded mode and there are more than SORTER_MAX_MERGE_COUNT PMAs on disk when Rewind() is called, then more than one background thread may be created.
If running in non-exclusive rollback mode, the lock on the file is  downgraded to a SHARED_LOCK.
If running outside of VTune remove the remark.
If running thread try blocking operation, this thread must release GVL and another thread can continue this flow.
If s contains a number, a space is inserted after each group of that many fractional digits.
If s ends with an 'E', engineering notation (0.xxxxEnn) is used.
If s ends with an 'F', conventional floating point notation is used.
If safe or same-kind casts are allowed
If scenario (a) caused the error then things are not so safe.
If scope is NULL then the function is global and thus parent does not make any sense.
If scope is NULL then the function is global and thus self does not make any sense  - For "parent", use the function scope's parent.
If script is found then validate_timestamps if option is enabled
If script was not found or invalidated by validate_timestamps
If search is an array
If second argument host specified, then returns OLE Automation object on host.
If seconds is not set to null, build the timeval, else we wait indefinitely
If security or speed is your primary concern, OpenSSL::PKey::EC offers another implementation of the Diffie-Hellman protocol.
If self has no extension part, +repl+ is appended.
If self isn't not a base class ndarray, call its __array_wrap__ method
If session data storage does not need to update timestamp, it should return SUCCESS simply.
If session then update session hash with new object
If set to false, any prefix indexes are ignored.
If set, call the external function that checks for stack availability.
If setting the version fields to 1, do not automatically open the WAL connection, even if the version fields are currently set to 2.
If several keys may map to the same value, the key that is found first will be returned.
If shape was NULL, set it to the shape we calculated
If share visit_id with qh_findbest, coplanarfacetset is incorrect.
If shared cache is disabled, then all btree mutex routines, including the ones below, are no-ops and are null #defines in btree.h.
If shared memory could not be created, then close the mutex and fail
If shifting by a negative amount, shift in the other direction
If singular vectors are desired, it uses a divide-and-conquer algorithm.
If size was given take minimum of len and size
If so return it directly instead of checking for casting.
If so, *piPos and pHlMask are updated to shift the snippet nDesired tokens to the right.
If so, Addrinfo.getaddrinfo returns addrinfo list appropriate for SOCK_STREAM.
If so, and there are active VMs, return busy.
If so, and there are active VMs, then return SQLITE_BUSY.
If so, and this is a RELEASE command, then the current transaction  is committed.
If so, call the  xBegin method for that table.
If so, do not increment the constraint-counter.
If so, generate a special OP_NOTPROP item instead of OP_NOTI.
If so, generate a special OP_PROP item instead of OP_CHARI.
If so, increase its reference count and return it.
If so, it also reports the last point added to the hull, e.g., 102.
If so, it needs to jump back to the matching path eventually.
If so, it returns true.
If so, it writes argument iDelta to the output buffer pOut, followed by a position list consisting only of the entries from pList at position 0, and terminated by an 0x00 byte.
If so, jump to instruction P2.
If so, leave *ppIdx  and *paiCol set to zero and return early.
If so, no action is taken.
If so, overwrite the existing frame and set Wal.writeLock to WAL_WRITELOCK_RECKSUM - indicating that  checksums must be recomputed when the transaction is committed.
If so, remove it, schedule the contents of the child for reinsertion and  reduce the tree height by one.
If so, return without deleting the master journal file.
If so, set the Column COLFLAG_HIDDEN flag and remove the token from the type string.
If so, set the EOF flag.
If so, set the database to 1.
If so, set the return code to  SQLITE_CORRUPT_VTAB.
If so, that behavior will be documented under the #+initialize_copy+ method of the class.
If so, the constraint has failed.
If so, the row has already been included in the result set and can be ignored (by jumping past the Gosub below).
If so, then Fts3Cursor.eSearch - 2 is the index of the column to be searched.
If so, then the last valid instance of page P that is a followed by a commit frame or is a commit frame itself becomes the value read.
If so, then the presence of NULLs in the RHS does not matter, so jump over all of the code that follows.
If so, then these routines will not always work correctly on HPUX.
If so, this  iteration of the loop will work on merging at the hinted level.
If so, this is a DATA conflict.
If so, this is an error.
If so, try to remove a few timed-out connections.
If so, use that as name, and type as an attribute.
If so, we generate a different opcode.
If so, we must wrap it in atomic brackets.
If so, write the entry for the overflow page into the pointer map.
If some client does modify the target database mid RBU update, or some other error occurs, the RBU extension will keep throwing errors.
If some data is reached, readpartial returns with the data.
If some other connection is holding an exclusive lock, the requested lock may not be obtained.
If some other error occurs (e.g. an OOM condition), an SQLite error code is returned and *ppValue is set to NULL.
If some other op is reduced, we have a double reduce loop
If some other thread already has the mutex, block until it can be obtained.
If some output dimensions have length 1, the strides assigned to them are arbitrary.
If some prefix of the input string is a valid number, this routine returns FALSE but it still converts the prefix and writes the result into *pResult.
If some thread using this PID has a lock via a different unixFile* handle that precludes the requested lock, return BUSY.
If someone has defined alloca as a macro, there must be some other way alloca is supposed to work.
If someone is completely sure that everything is fine, he can switch it off.
If something goes wrong while this is happening we don't really care.
If something has matched
If something is wrong, you might want to restore data from last backup
If something overflowed, make both num and denom 0
If sorting index that was created by a prior OP_OpenEphemeral  instruction ended up not being needed, then change the OP_OpenEphemeral into an OP_Noop.
If spec_dst is not given, addr is used.
If specified _pid_ is not a valid child process ID, the thread returns +nil+ immediately.
If specified, the verifications on the store will check every untrusted certificate's extensions are consistent with the purpose.
If split_length is specified, break the string down into chunks each split_length characters long.
If sqlite3.nVdbeExec is 1, then the string contains a copy of zRawSql but with host parameters expanded to  their current bindings.
If sqlite3BtreeDropTable was called on page 1.
If sqlite3FindInIndex() did not find or create an index that is suitable for evaluating the IN operator, then evaluate using a sequence of comparisons.
If sqlite3FunctionUsesThisSrc() is used differently in the future, the NEVER() will need to be removed.
If sqlite3SrcListLookup() returns 0, indicating the table does not exist, the error is caught by the block below.
If sqlite3rbu_step() has been called enough times to completely apply the update to the target database, then the RBU database is marked as fully applied.
If srcTab is negative, then the pEList expressions are evaluated in order to get the data for this row.
If srcTab is zero or more, then data is pulled from srcTab and pEList is used only  to get number columns and the datatype for each column.
If ssb is NULL then someone is misbehaving
If start was NULL or None, raise an exception
If statement  compilation is successful, *ppStmt is set to point to the new statement  handle and SQLITE_OK is returned.
If status is not given, true is used.
If still no ini file found, search for php.ini file in search path
If storage does not need manual GC, it may return SUCCESS simply.
If str is not numeric string return number zero.
If stransfer wasn't set to NULL, buffering is required
If stransfer_finish_src is not NULL, it should be a transfer function which just affects src, for example to do a final DECREF operation for references.
If strategy 2 is used, idxStr is formatted to contain 2 bytes for each  constraint used.
If strides is not given, then a contiguous strides array will be created and the NPY_ARRAY_C_CONTIGUOUS bit will be set.
If string is +nil+, this method finishes the stream, just like Zlib::ZStream#finish.
If study option was specified, study the pattern and store the result in extra for passing to pcre_exec.
If subpatterns array has been passed, fill it in with values.
If subspace is not NULL, NpyIter cannot allocate extra_op for us.
If subspace iteration is necessary and an extra_op was given, it may also be necessary to transpose the extra_op (or signal the transposing to the advanced iterator).
If successful,  set *ppChangeset to point to a buffer containing the changeset  and *pnChangeset to the size of the changeset in bytes before returning SQLITE_OK.
If successful, (*ppOut)  should be set to point to the new tokenizer handle and SQLITE_OK returned.
If successful, (*pz) is set to point to a buffer containing the text in utf-8 encoding, (*pn) is set to the size in bytes (not characters) of the buffer and SQLITE_OK is returned.
If successful, *pFd is set to the opened file descriptor and SQLITE_OK is returned.
If successful, *pabPK is set to point to an array of nCol entries, where nCol is the number of columns in the table.
If successful, *piIdx is set to the allocated index slot and SQLITE_OK returned.
If successful, *pisEmpty is set to true if the table is empty except for document pRowid, or false otherwise, and SQLITE_OK is returned.
If successful, *pp is set to point to the iterator handle and SQLITE_OK is returned.
If successful, *ppChild is set to contain a reference to the child  page and SQLITE_OK is returned.
If successful, *ppExpr is set to point to the head of the parsed expression tree and SQLITE_OK is returned.
If successful, *ppValue is set to point to an sqlite3_value structure containing the iVal'th value of the conflicting record.
If successful, SQLITE_OK is returned and (*pp) set to point to the  new root expression node.
If successful, SQLITE_OK is returned and *pnByte is set to the size of the record in bytes.
If successful, SQLITE_OK is returned and *ppExpr set to point at the allocated Fts3Expr structure.
If successful, SQLITE_OK is returned and *ppOut is set to point to the new Fts5Config object.
If successful, SQLITE_OK is returned and *ppOut set to point to the MergeEngine object at the root of the tree before returning.
If successful, SQLITE_OK is returned and SessionApplyCtx.pDelete is left pointing to the prepared version of the SQL statement.
If successful, SQLITE_OK is returned and SessionApplyCtx.pUpdate is left pointing to the prepared version of the SQL statement.
If successful, SQLITE_OK is returned and output variable *piLast is set to the largest blockid written to the database (or zero if no blocks were written to the db).
If successful, SQLITE_OK is returned and subsequent calls to sqlite3_blob_read() or sqlite3_blob_write() access the specified row.
If successful, SQLITE_OK is returned and the NodeReader object set to  point to the first entry on the node (if any).
If successful, SQLITE_OK is returned, *ppExpr is set to point to the parsed form of the expression and *pnConsumed is set to the number of bytes read from buffer z.
If successful, SQLITE_OK is returned.
If successful, a pointer to a buffer containing the inverted changeset is stored in *ppOut, the size of the same buffer is stored in *pnOut, and SQLITE_OK is returned.
If successful, a pointer to the new object is written to *ppSession and SQLITE_OK is returned.
If successful, leave *pRc set to SQLITE_OK and return.
If successful, merge all segments in the database (including the new segment, if  there was any data to flush) into a single segment.
If successful, object pConfig is updated and SQLITE_OK returned.
If successful, open the master journal file for reading.
If successful, or if called on a pager for which it is a no-op, this function returns SQLITE_OK.
If successful, output parameter *pazDequote is set to point at the array of dequoted strings and SQLITE_OK is returned.
If successful, populate the output variables.
If successful, pp is set to the requested statement handle and SQLITE_OK returned.
If successful, return 0.
If successful, return SQLITE_OK and write a pointer to the new Fts3MultiSegReader to *ppSegcsr.
If successful, return SQLITE_OK.
If successful, return a pointer to the new sqlite3_backup object.
If successful, return zero.
If successful, set *peType to the output value and return SQLITE_OK.
If successful, set *pp to point to the new mapping and return SQLITE_OK.
If successful, set *pp to point to the new object and return SQLITE_OK.
If successful, set *ppConfig to point to the associated config object  before returning.
If successful, set *ppFd to point to the malloc'd file-handle and return SQLITE_OK.
If successful, set *ppFile to point to the malloc'd file-handle and return SQLITE_OK.
If successful, set *ppLeaf to point to the node and return SQLITE_OK.
If successful, set *ppOut to point to a buffer containing the data and return SQLITE_OK.
If successful, set *ppPage to point to the new page reference and return SQLITE_OK.
If successful, set *ppStmt to point to the new statement and return SQLITE_OK.
If successful, set *ppVal to point to a new value object and return  SQLITE_OK.
If successful, set pnMax to this value and return SQLITE_OK.
If successful, sqlite3PcacheMakeClean() is called on the page and SQLITE_OK returned.
If successful, the  transaction is committed before returning.
If successful, the EXCLUSIVE lock is not released before returning.
If successful, the call to PagerCloseWal() checkpoints and deletes the write-ahead-log  file.
If successful, the checksum value is returned and *pRc set to SQLITE_OK.
If successful, the integer value returned is written to *piVal and SQLITE_OK returned.
If successful, the same bytes that are locked here are unlocked before this function returns.
If successful, this function returns SQLITE_OK and populates (*pp) with a pointer to a new sqlite3_changegroup object before returning.
If successful, upgrade to PAGER_RESERVED state.
If successful, write this value to *pnPage and return SQLITE_OK.
If successful, zero is returned.
If successful, zero the memory before returning a pointer to it.
If such a change is made, it is represented in a changeset as a DELETE followed by an INSERT.
If such a conversion is possible without loss of information (in other words, if the value is a string that looks like a number) then the conversion is performed.
If such a database cannot be found, return a NULL pointer and write an error message to pErrorDb.
If such a fragment of text cannot be found, the second iteration of the loop attempts to locate a pair of fragments, and so on.
If such a journal is used as a hot-journal during hot-journal rollback, 0 changes will be made to the database file.
If such a lock is already held, no locking  functions need be called.
If such a lock is held, return non-zero, otherwise zero.
If such a lock is held, set *pResOut to a non-zero value otherwise *pResOut is set to zero.
If such a pointer can be obtained, store it in *pp and return SQLITE_OK.
If such a record can be found, it is available to the conflict handler as the "conflicting" record.
If such a row is found and one or more of the non-primary key fields have been modified from their original values, an UPDATE change is added to  the changeset.
If such a row is inserted or deleted, no corresponding change is present in the changesets returned by this function.
If such a row is not found,  decrement the counter.
If such an invocation returns SQLITE_CHANGESET_REPLACE, set *pbReplace to true before retrying.
If such an xInput callback returns an error, the iterator enters an error state, whereby all subsequent calls to iterator functions  immediately fail with the same error code as returned by xInput.
If support is added for switching proxy locking mode off then it will need to fail if the journal mode is WAL mode.
If table pTab has no temporary triggers, or is itself stored in the  temporary database, NULL is returned.
If temporary directory is changed, then invalidateTempStorage.
If that allocation failed, we would have quit before reaching this point
If that assumption is not true, then this routine is not threadsafe.
If that changes, this place will need some rework.
If that constant referred to a module, this will not change that module's name and can lead to confusion.
If that doesn't work, make a new memory block and copy.
If that fails, try it as an SUS integer type if it begins with "d" or as an SUS string type if it begins with "s".
If that fails, try it as an SUS integer type.
If that guess turns  out to be wrong, fall back to loading the data of page  number ovfl to determine the next page number.
If that is being changed dlsym() should only be used when building this extension sharedto offer compatibility.
If that is not possible, then the backup cannot proceed.
If that is successful, call sqlite3_declare_vtab() to configure the r-tree table schema.
If that is the case and pB is not using TK_REGISTER but is otherwise equivalent, then still return 0.
If that is the case, then the OP_OpenEphemeral instruction will be changed to an OP_Noop once we figure out that the sorting index is not needed.
If that is the case, then the result must be aligned on an even byte boundary.
If that is the case, this routine might think there is a hot journal when in fact there is none.
If that new rowid is larger than the maximum rowid in the memId memory cell, then the memory cell is updated.
If that was the last leaf node, break out of the loop
If that's less than best-so-far, update best distance and color number.
If the  authorization callback returns SQLITE_IGNORE, behave as if any values read from the parent table are NULL.
If the  database page-size is so large that more than RTREE_MAXCELLS entries  would fit in a single node, use a smaller node-size.
If the  operation to finalize the journal file fails, then the code still tries to unlock the database file if not in exclusive mode.
If the  reset parameter is non-zero, the cache hit or miss count is zeroed before  returning.
If the  symbol is never referenced, then it is never resolved.
If the  xFilter callback returns zero, skip this table.
If the "-g" option was given on the command line, we want to continue  * to search for additional matches in the subject string, in a similar   * way to the /g option in Perl.
If the "bDesc"  parameter is passed a non-zero value, iteration is in descending rowid  order.
If the "data" parameter to this function is NULL, then the element corresponding to "key" is removed from the hash table.
If the "filter callback" returns zero, then no attempt is made to apply any changes to  the table.
If the "i" parameter is out of range, then SQLITE_RANGE is returned.
If the "last page" field of the wal-index header snapshot is 0, then no data will be read from the wal under any circumstances.
If the "nearby" parameter is not 0, then an effort is made to  locate a page close to the page number "nearby".
If the "temp" database is requested, it may need to be opened by this  function.
If the "unordered" keyword is present, then the query planner assumes that the index is unordered and will not use the index for a range query.
If the 'autoVacuum' parameter is non-zero, then auto-vacuum mode is enabled.
If the 'keepdims' parameter is true, do a simpler validation and return a new reference to 'out'.
If the 'x' expression is a column value, or the SELECT...
If the (t2.c IS NULL) constraint is  pushed down to the cursor, this row is filtered out, causing SQLite to synthesize a row of NULL values.
If the +class_name+ is omitted an anonymous structure class will be created.
If the +file+ argument is a symbolic link, it will resolve the symbolic link and use the file referenced by the link.
If the +key+ does not exist in the database, the value will be +nil+.
If the +key+ exists, the deleted value will be returned, otherwise +nil+.
If the 3rd element, textual host name, is non-nil, it is also recorded but used only for Addrinfo#inspect.
If the 3rd parameter is non-negative, then it must be the byte offset into the string where the NUL terminator would appear if the string where NUL terminated.
If the ARRAYMASK has 'bigger' dimensions than this REDUCE WRITEMASKED operand, the result would be more than one mask value per reduction element, something which is invalid.
If the B-Tree was successfully opened, set the pager-cache size to the default value.
If the BTREE_SAVEPOSITION bit of the flags parameter is zero, then the cursor is left pointing at an arbitrary location after the delete.
If the BTREE_WRCSR bit is set, then the cursor can be used for reading or for writing if other conditions for writing are also met.
If the BTREE_WRCSR bit of wrFlag is clear, then the cursor can only be used for reading.
If the BigDecimal can be represented as 0.xxxxxx*10**n, then xxxxxx is the string of significant digits with no leading zeros, and n is the exponent.
If the BigNumber is infinity or NaN, raises FloatDomainError.
If the DELETE has generated immediate foreign key constraint  violations, halt the VDBE and return an error at this point, before any modifications to the schema are made.
If the DISTINCT keyword was present on the SELECT statement and this row has been seen before, then do not make this row part of the result.
If the EOF flag is set and the raw buffer is empty, do nothing.
If the EP_Reduced and EP_TokenOnly flags are set when an Expr object is truncated.
If the EP_Reduced flag is set in the Expr.flags mask, then no space is allocated for the fields below this point.
If the EP_TokenOnly flag is set in the Expr.flags mask, then no space is allocated for the fields below this point.
If the EP_xIsSelect bit is set in the Expr.flags mask, then Expr.x.pSelect is valid.
If the EXCLUSIVE lock is already held or the attempt to obtain it is successful, or the connection is in WAL mode, SQLITE_OK is returned.
If the EXPRDUP_REDUCE flag is set, then the structure returned is a truncated version of the usual Expr structure that will be stored as part of the in-memory representation of the database schema.
If the Expr is of type OP_Column, and the table it is selecting from is a disk table or the "old.*" pseudo-table, then pTab points to the corresponding table definition.
If the ExprList is an ORDER BY or GROUP BY clause then the resulting KeyInfo structure is appropriate for initializing a virtual index to implement that clause.
If the ExprList is the result set of a SELECT then the KeyInfo structure is appropriate for initializing a virtual index to implement a DISTINCT test.
If the FTS table features more than one index (because there are one or more prefix indexes), it is guaranteed that all share the same cookie value.
If the FULLFSYNC failed, fall back to attempting an fsync().
If the Firebird people ever fix this, these lines should be removed, otherwise, events will have to fire twice before ibase_wait_event() returns.
If the Fts3SegFilter defines a specific term (or term prefix) to search  for, then advance each segment iterator until it points to a term of equal or greater value than the specified term.
If the FuncDef is not ephermal, then do nothing.
If the HAS_MOVED file-control is unimplemented, assume that the file has not been moved.
If the Hash table is full, resize it
If the INSERT statement included an IDLIST term, then make sure all elements of the IDLIST really are columns of the table and  remember the column indices.
If the IOCAP_SEQUENTIAL device flag is set this is not required.
If the LHS and RHS of the IN operator do not match, that error will have been caught long before we reach this point.
If the LHS does contain NULLs then the result must be either FALSE or NULL.
If the LHS is NULL, then the result is either false or NULL depending on whether the RHS is empty or not, respectively.
If the LHS is a  vector, then it is stored in an array of nVector registers starting  at r1.
If the LHS is contained within the RHS then fall through.
If the LSB is set, then the checksums for each frame within the WAL file are calculated by treating all data as an array of 32-bit  big-endian words.
If the MEM_Null flag is set, then the value is an SQL NULL value.
If the MEM_Str flag is set then Mem.z points at a string representation.
If the MEM_Term flag is also set, then the string is nul terminated.
If the N subarray elements exactly fit in the strides, then can do a faster contiguous transfer.
If the NEAR expression does not  match the current row, 0 is returned.
If the NEAR expression does not match any rows, zero the doclist for  all phrases involved in the NEAR.
If the OPFLAG_AUXDELETE bit is set on P5, that indicates that this delete one of several associated with deleting a table row and all its associated index entries.
If the OPFLAG_CLEARCACHE bit is set on P5 and P1 is a pseudo-table cursor, then the cache of the cursor is reset prior to extracting the column.
If the OPFLAG_ISUPDATE flag is set in P2, then P3 contains the address of the memory cell that contains the value that the rowid of the row will be set to by the update.
If the OPFLAG_ISUPDATE flag is set, then this opcode is part of an UPDATE operation.
If the OPFLAG_LASTROWID flag of P5 is set, then rowid is stored for subsequent return by the sqlite3_last_insert_rowid() function (otherwise it is unmodified).
If the OPFLAG_LENGTHARG and OPFLAG_TYPEOFARG bits are set on P5 when the result is guaranteed to only be used as the argument of a length() or typeof() function, respectively.
If the OPFLAG_NCHANGE bit is clear, then the change counter is unchanged.
If the OPFLAG_NCHANGE flag of P2 (NB: P2 not P5) is set, then the row change count is incremented (otherwise not).
If the OPFLAG_NCHANGE flag of P2 is set, then the row change count is incremented (otherwise not).
If the OPFLAG_NCHANGE flag of P5 is set, then the row change count is incremented (otherwise not).
If the OPFLAG_PERMUTE bit is clear, then register are compared in sequential order.
If the OPFLAG_SAVEPOSITION bit of the P5 parameter is set, then the cursor will be left pointing at  either the next or the previous record in the table.
If the ORDER BY clause contains only columns in the current  virtual table then allocate space for the aOrderBy part of the sqlite3_index_info structure.
If the OS does not have posix_fallocate(), fake it.
If the OS lacks large file support, or if the OS is windows, these should be no-ops.
If the P1 cursor must be pointing to a valid row (not a NULL row) of a real table, not a pseudo-table.
If the P1 index entry is greater than or equal to the key value then jump to P2.
If the P1 index entry is greater than the key value then jump to P2.
If the P1 value is non-zero, then also set the MEM_Cleared flag so that NULL values will not compare equal even if SQLITE_NULLEQ is set on OP_Ne or OP_Eq.
If the P3 value cannot be converted into any kind of a number, then the seek is not possible, so jump to P2
If the P3 value could not be converted into an integer without loss of information, then special processing is required...
If the P3 value is non-zero, then the table referred to must be an intkey table (an SQL table, not an index).
If the P4 argument is not NULL, then it must be an SQL comment string.
If the PAGER_GET_NOCONTENT flag is set, it means that we do not care about the content of the page at this time.
If the PGHDR_NEED_SYNC flag is set for any of the nPage pages  starting at pg1, then it needs to be set for all of them.
If the PK specified for an UPDATE operation does not exist in the target table, then no b-tree operations are required on index b-trees.
If the PRIMARY KEY expression is NULL, then use OP_NewRowid to generate a unique primary key value.
If the PRIMARY KEY is on a single column whose datatype is INTEGER, then we will try to use that column as the rowid.
If the Pager.noSync flag is set, then this function is a no-op.
If the QUERY_SCAN flag is set, all other flags must be clear.
If the RBU database contains no data_xxx tables, declare the RBU update finished.
If the RBU database contains the rbu_count table, use it to initialize the sqlite3rbu.nPhaseOneStep variable.
If the RBU update has been completely applied, mark the RBU database as fully applied.
If the REQUIRE_RESEEK flag is set on the cursor passed as the first argument, close and reopen all Fts5IndexIter iterators that the cursor  is using.
If the RHS contains a NULL then jump to destIfNull.
If the RHS is a list of values, the LHS must be a scalar.
If the RHS is a subquery, the number of result columns must match the number of columns in the vector on the LHS.
If the RHS is known to be non-NULL and we did not find an match on the search above, then the result must be FALSE.
If the SELECT keyword is immediately followed by a C-style comment then extract the first few alphanumeric characters from within that comment to be the zSelName value.
If the SELECT passed as the second argument has an associated WITH  clause, pop it from the stack stored as part of the Parse object.
If the SELECT statement has an ORDER BY clause, zero the  iOrderByCol variables.
If the SET_FULLSYNC macro is not defined above, then make it a no-op
If the SF_Converted flags is set, then this Select object was was created by the convertCompoundSelectToSubquery() function.
If the SID constant exists, destroy it.
If the SPILLFLAG_NOSYNC bit is set, writing to the database from pagerStress() is permitted, but syncing the journal file is not.
If the SQL column is blank it means this is an index that was created to be the PRIMARY KEY or to fulfill a UNIQUE constraint for a CREATE TABLE.
If the SQL is a query, then for each row in the query result the xCallback() function is called.
If the SQL statement does not currently point to a valid row, or if the column index is out of range, the result is undefined.
If the SQLITE_AFF_MASK is 0x00, then numeric affinity is used.
If the SQLITE_CountRows flag is set in sqlite3.flags mask, then  DML statements invoke this opcode to return the number of rows  modified to the user.
If the SQLITE_DeferFKs flag is set, then this is not required, as the statement transaction will not be rolled back even if FK constraints are violated.
If the SQLITE_ENABLE IOTRACE exists then the global variable sqlite3IoTrace is a pointer to a printf-like routine used to print I/O tracing messages.
If the SQLITE_ENABLE_8_3_NAMES option is enabled, then the original filename is unavailable.
If the SQLITE_JUMPIFNULL  bit is clear then fall through if either operand is NULL.
If the SQLITE_JUMPIFNULL bit of P5 is set and either reg(P1) or reg(P3) is NULL then take the jump.
If the SQLITE_JUMPIFNULL bit of P5 is set and either reg(P1) or reg(P3) is NULL then the take the jump.
If the SQLITE_NULLEQ bit is set in P5, then NULL values are considered equal to one another, provided that they do not have their MEM_Cleared bit set.
If the SQLITE_PreferBuiltin flag is set, then search the built-in functions even if a prior app-defined function was found.
If the SQLITE_STOREP2 bit of P5 is set, then do not jump.
If the SQLITE_TRACE_SIZE_LIMIT macro is defined to an integer, then then long strings and blobs are truncated to that many bytes.
If the STATIC_MEM mutex is not already held, obtain it now.
If the Select object is really just a simple VALUES() list with a single row (the common case) then keep that one row of values and discard the other (unused) parts of the pSelect object
If the Select object is really just a simple VALUES() list with a single row values (the common case) then keep that one row of values and go ahead and discard the Select object
If the SessionInput object passed as the only argument is a streaming object and the buffer is full, discard some data to free up space.
If the TEMP database is open, close it and mark the database schema as needing reloading.
If the TERM_LIKECOND flag is set, that means that the range search is sufficient to guarantee that the LIKE operator is true, so we can skip the call to the like(A,B) function.
If the TRANSLATE_TRACE macro is defined, the value of each Mem is printed on stderr on the way into and out of sqlite3VdbeMemTranslate().
If the TS is lower than the first transition time, then we scan over all the transition times to find the first non-DST one, or the first one in case there are only DST entries.
If the UPTO is just for 1 instance, we can use QUERY instead.
If the VDBE has be run even partially, then transfer the error code and error message from the VDBE into the main database structure.
If the VDBE has made changes and is in autocommit mode, then commit those changes.
If the VFS xLock() or xUnlock() returns an error other than SQLITE_BUSY (i.e. one of the SQLITE_IOERR subtypes), it is not clear whether or not the operation was successful.
If the VM did not run to completion or if it encountered an error, then it might not have been halted properly.
If the Vdbe passed as the first argument opened a statement-transaction, close it now.
If the WAL contains no copies of page P that are valid and which are a commit frame or are followed by a commit frame, then page P is read from the database file.
If the WAL file is currently larger than nMax bytes in size, truncate it to exactly nMax bytes.
If the WAL file is not empty, return the number of bytes of content stored in each frame (i.e. the db page-size when the WAL was created).
If the WAL is large (multiple megabytes is typical) that scan can be slow, and read performance suffers.
If the WAL is not empty, return the size of the database.
If the WHERE clause is empty, the foreach loops must each scan their entire tables.
If the Walker does not have an xSelectCallback() then this routine is a no-op returning WRC_Continue.
If the Win32 native heap is not isolated and/or the sqlite3_memory_used() function does not return zero, SQLITE_BUSY will be returned and no changes will be made to the Win32 native heap.
If the YYNOERRORRECOVERY macro is defined, then do not attempt to do any kind of error recovery.
If the ZVAL is null then it should be bound as that
If the _backlog_ amount exceeds the implementation-dependent maximum queue length, the implementation's maximum queue length will be used.
If the above search did not find a BtLock struct associating Btree p with table iTable, allocate one and link it into the list.
If the above was an under estimate, increment the cycle number until the correct one is found.
If the above was successful, each component iterators now points  to the first entry in its segment.
If the action is "NO ACTION" or "RESTRICT", then a NULL pointer is returned (these actions require no special handling by the triggers sub-system, code for them is created by fkScanChildren()).
If the address is -1, then return the most recently inserted opcode.
If the aiMap parameter is not NULL, it must point to an array containing one element for each column returned by the SELECT statement on the RHS of the IN(...) operator.
If the algorithm does not converge, D and E will contain the diagonal and superdiagonal entries of a bidiagonal matrix orthogonally equivalent to the one given as input.
If the allocation fails, call sqlite3_result_error_nomem() to notify the database handle that malloc() has failed and return NULL.
If the allocation fails, make the mallocFailed flag in the connection pointer.
If the allocation fails, set the mallocFailed flag in the connection pointer.
If the allocation is too large to be handled by this allocation system, return 0.
If the allocation succeeded, populate the new object.
If the allocation succeeds, zero it and return SQLITE_OK.
If the application calls sqlite3_preupdate_old(), the required value will be read from the row the cursor points to.
If the application then re-attempts the "DROP TABLE" or "DROP INDEX" query, an infinite loop might be the result.
If the application uses the "rbu_delta()" feature described above, it must use sqlite3_create_function() or similar to register the rbu_delta() implementation with the target database handle.
If the argument abPK is NULL, then the record contains nCol values.
If the argument is NULL, the return value is the string "NULL".
If the argument is a codepoint corresponding to a lowercase letter in the ASCII range with a diacritic added, return the codepoint of the ASCII letter only.
If the argument is a colon separated two encoding names "A:B", the read string is converted from encoding A (external encoding) to encoding B (internal encoding), then tagged with B.
If the argument is not NULL, it points to a Wal object that holds a read-lock.
If the argument is numeric, the return value is the same as the argument.
If the argument p points to a JournalFile structure, and the underlying file has not yet been created, create it now.
If the argument to sqlite3_mutex_held() is a NULL pointer then the routine should return 1.
If the array has metadata, use it
If the array has size zero, return zero (the iterator rejects size zero arrays)
If the array is empty the first form returns +nil+ and the second form returns an empty array.
If the array is empty, the first form returns +nil+, and the second form returns an empty array.
If the array is empty, the first form returns +nil+.
If the array is of object converting the values to an array might not be legal even though normal assignment works.
If the array is sparse, then the gaps will be filled with NULL variants
If the array isn't a numeric scalar, just return the array's dtype.
If the array size is zero, return an empty range
If the assertion has a quantifier that allows zero repeats we must skip over the BRAZERO.
If the atomic-update optimization is being used, this sync will not  create the journal file or perform any real IO.
If the atomic-write optimization is enabled in this build, then isDirect is initialized to the value passed as the isDirectMode parameter to this function.
If the attempt fails and parameter xBusy is not NULL, then it is a busy-handler function.
If the attempt to grab the exclusive lock failed, release the  pending lock that may have been obtained instead.
If the attempt to reload content from the database is required and fails,  return an SQLite error code.
If the auth function returns SQLITE_DENY, then generate an error.
If the auth function returns SQLITE_IGNORE, change the TK_COLUMN  instruction into a TK_NULL.
If the auto-commit flag is set and this is the only active writer  VM, then we do either a commit or rollback of the current transaction.
If the auto-commit flag is set to true, then any locks that were held by connection db have now been released.
If the b-tree mutexes are not taken here, then another shared-cache connection might sneak in between the database rollback and schema reset, which can cause false corruption reports in some cases.
If the b-tree structure is empty, the cursor state is set to  CURSOR_INVALID.
If the bClear argument is non-zero, then the auxiliary data is cleared (set to NULL) before this function returns.
If the bCommit flag is true, also close any open blob handles.
If the bCommit parameter is non-zero, this function assumes that the  caller will keep calling incrVacuumStep() until it returns SQLITE_DONE  or an error.
If the bCreate argument is true, create and initialize the underlying tables   If successful, set *pp to point to the new object and return SQLITE_OK.
If the bIncrRowid parameter is 0, then any OP_Rowid instructions on cursor iTabCur are transformed into OP_Null.
If the bOmitRowid argument is non-zero, assume both keys end in a rowid field.
If the bPreserve flag is set to true, then the cursor position must be preserved following this delete operation.
If the bPreserve flag is set to true, then the memory cell must already contain a valid string or blob value.
If the bTryForInt flag is true, then extra effort is made to give an integer representation.
If the balance proceeds far enough up the tree that we can be sure that any problem in the internal node has been corrected, so be it.
If the bases are different, factor in a conversion
If the bit corresponding to this variable in Vdbe.expmask is set, then  binding a new value to this variable invalidates the current query plan.
If the blob handle is not open at this point, open it and seek  to the requested entry.
If the blob has already been allocated, it is returned as normal.
If the block is declared to take no arguments, returns 0.
If the block is known to take exactly n arguments, returns n.
If the block needs to maintain state over multiple elements, local variables can be used.
If the bracket is capturing, and referenced by an OP_RECURSE, or it is an atomic sub-pattern (assert, once, etc.) the non-greedy case cannot be converted to a possessive form.
If the bracket is followed by a quantifier with zero repeat, we have to back off.
If the branch contains OP_RECURSE, the result is -3 because there may be forward references that we can't check here.
If the btree is already in a write-transaction, or it is already in a read-transaction and a read-transaction is requested, this is a no-op.
If the btree is successfully opened, use it to obtain the database schema.
If the buffer contains a patchset, then all prior calls to this function on the same changegroup object must also have specified patchsets.
If the buffer currently allocated is too small for this entry, realloc the buffer to make it large enough.
If the buffer is now larger than SESSIONS_STRM_CHUNK_SIZE, pass its contents to the xOutput() callback.
If the buffer is write-only, these two are NULL, and the buffer pointers will be set up but the read copy won't be done
If the buffer turned out to be too small then allocate another buffer dynamically and use it to format the number.
If the bundle is invalid, split it in two.
If the bundle is valid as is, perform the encoding and return 1.
If the byte buffer is not empty, it returns the data in the buffer.
If the c-client library adds other options and the value for this one conflicts, simply make PHP_EXPUNGE higher at the top of this file
If the cache contains a page with page-number pgno, remove it from its hash chain.
If the cache is already full, delete the least recently used entry
If the cache is being used for an in-memory database, this function is a no-op.
If the cache previously contains an entry associated with newKey, it must be discarded.
If the call succeeds,  assume that the file-system supports POSIX style locks.
If the call to xUnlock() fails at this point and the pager is left holding an EXCLUSIVE lock, this can confuse the call to xCheckReservedLock() call made later as part of hot-journal detection.
If the callback function returns any value other than SQLITE_OK, the query is abandoned and the xQueryPhrase function returns immediately.
If the callback function returns anything other than SQLITE_OK,  the iteration is abandoned and the error code returned immediately.
If the callback returns false, the chain verification is immediately stopped and a bad_certificate alert is then sent.
If the callback returns other than SQLITE_OK, it is not invoked again and the error code is returned to the caller.
If the caller happens to have a pointer to the MemPage object  corresponding to page iPage handy, it may pass it as the second value.
If the caller invokes preupdate_new(), the returned value is copied from memory cell (regNewRowid+1+iCol), where iCol is the column index supplied by the user.
If the caller is an UPDATE or DELETE statement that is requesting to use a one-pass algorithm, determine if this is appropriate.
If the caller is successful, set the Pager.eLock variable to the new locking state.
If the calls to xBestIndex() have so far failed to find a plan that requires no source tables at all and does not use an IN(...) operator, make a final call to obtain one here.
If the calls to xBestIndex() in the above loop did not find a plan that requires no source tables at all (i.e. one guaranteed to be usable), make a call here with all source tables disabled
If the case statement is followed by a comment of the form "/# same as ...
If the casting if forced, use the 'unsafe' casting rule
If the cell content area begins with a freeblock, remove it.
If the cell content will fit on the page, then put it there.
If the cell pCell, part of page pPage contains a pointer to an overflow page, insert an entry into the pointer-map for the overflow page.
If the centre z is higher than the contour level of interest and you are moving along the line with higher values on the left, turn right to leave the saddle zone.
If the centre z is lower than the contour level turn left.
If the change is an UPDATE and does not include a new value for the requested column, *ppValue is set to NULL and  SQLITE_OK returned.
If the character following a repeat is '+', possessive_quantifier is TRUE.
If the character is more than one byte long, we can set firstchar only if it is not to be matched caselessly.
If the checksum cannot be verified return non-zero.
If the checksum doesn't add up, then one or more of the disk sectors containing the master journal filename is corrupted.
If the child defines a definite size for its cross axis, there's no need to stretch.
If the child doesn't have a specified height, compute the height based on the top/bottom offsets if they're defined.
If the child doesn't have a specified width, compute the width based on the left/right offsets if they're defined.
If the child is absolutely positioned and has a top/left/bottom/right set, override all the previously computed positions to set it correctly.
If the child is position absolute (without top/left) or relative, we put it at the current accumulated offset.
If the child node is now at EOF, so is the parent AND node.
If the child table is the same as the parent table, then add terms to the WHERE clause that prevent this entry from being scanned.
If the child uses align stretch, we need to lay it out one more time, this time forcing the cross-axis size to be the computed cross size for the current line.
If the cipher is a fixed length cipher then attempting to set the key length to any value other than the fixed value is an error.
If the class contains characters outside the 0-255 range, a different opcode is compiled.
If the class variable name is passed as a string, that string is converted to a symbol.
If the client is reading  or writing an index and the schema is not loaded, then it is too difficult to actually check to see if the correct locks are held.
If the close fails, we pause for 100 milliseconds and try again.
If the close-quote is found, the value returned is the byte offset of the character immediately following it.
If the co-routine ends with OP_Yield or OP_Return then continue to the next instruction.
If the code incorrectly assumes that it is the POSIX version that is available, the error message will often be an empty string.
If the codepoint is an upper case character that has a lower case equivalent, return the codepoint corresponding to the lower case version.
If the collation factory does not supply such a sequence, and the sequence is available in another text encoding, then that is returned instead.
If the column affinity is REAL but the number is an integer, then it might be stored in the table as an integer (using a compact representation) then converted to REAL by an OP_RealAffinity opcode.
If the column contains fewer than P2 fields, then extract a NULL.
If the column does not appear in the index at all, the array entry is set to 0.
If the column has REAL affinity, it may currently be stored as an integer.
If the column is modified, the value is 0 or greater.
If the column number is greater than the number of bits in the bitmask then set the high-order bit of the bitmask.
If the column value is a string, we need a persistent value, not a MEM_Ephem value.
If the command failed, output an explanation.
If the command is ``DEFAULT'' or ``SIG_DFL'', the Ruby's default handler will be invoked.
If the command is ``EXIT'', the script will be terminated by the signal.
If the command is ``SYSTEM_DEFAULT'', the operating system's default handler will be invoked.
If the command is the string ``IGNORE'' or ``SIG_IGN'', the signal will be ignored.
If the commit could not complete because of lock contention, return SQLITE_BUSY.
If the comparison was unambiguous, either shift 'ax_ipos' to 'ax_i1' or stop looking for an insertion point
If the comparison was unambiguous, either shift 'ipos' to 'i1' or stop looking for an insertion point
If the compilation succeeded, we call PCRE again, in order to do a     * pattern match against the subject string.
If the compound query operator is UNION then no duplicate rows are ever inserted into the Queue table.
If the conch is held by another process (with a shared lock), the exclusive lock will fail and SQLITE_BUSY is returned.
If the condition is false, skipping the first branch takes us past the end of the item if there is only one branch, but that's exactly what we want.
If the conditions above are not met, this function returns SQLITE_OK and sets (*ppVal) to NULL.
If the conflict handler returns CHANGESET_OMIT, the changes, including those that caused the foreign key constraint violation, are committed.
If the conflict handler returns SQLITE_CHANGESET_ABORT, SQLITE_ABORT is returned.
If the conflict handler returns SQLITE_CHANGESET_OMIT, this function returns SQLITE_OK.
If the conflict-handler returns an illegal value, any changes already made are rolled back and the call to sqlite3changeset_apply() returns SQLITE_MISUSE.
If the connection is in WAL mode, this call is a no-op.
If the connection is open in WAL-mode, a WAL write transaction is open (i.e. sqlite3WalBeginWriteTransaction() has been successfully called).
If the connection is open in rollback-mode, a RESERVED or greater  lock is held on the database file.
If the constraint is a TK_EQ or TK_IS, then the current value might be left in some other register and it is the caller's responsibility to compensate.
If the constraint is not deferred, throw an exception for each row found.
If the constraint is satisfied, leave *peWithin unchanged.
If the content of register P1 is initially nonzero, then subtract P3 from the value in register P1 and jump to P2.
If the contents of this page were just restored from the main  journal file, then its content must be as they were when the  transaction was first opened.
If the contents of this write should be stored in memory
If the conversion to a gmp number fails, the macros return false.
If the coroutine that is launched by this instruction ends with Yield or Return then continue to the next instruction.
If the cost of computing an automatic index is not paid back within the first 25 rows, then do not use the automatic index.
If the cost of computing an automatic index is not paid back within the first 28 rows, then do not use the automatic index.
If the createFlag argument is true, then a new (blank) FuncDef structure is created and liked into the "db" structure if a no matching function previously existed.
If the createFlag is 0, then NULL is always returned if the page is not already in the cache.
If the createFlag parameter is true and the search did not reveal an exact match for the name, number of arguments and encoding, then add a new entry to the hash table and return it.
If the current block is not empty, and if adding this term/doclist to the current block would make it larger than Fts3Table.nNodeSize bytes, write this block out to the database.
If the current database is not encrypted, this routine will encrypt it.
If the current delete will cause a b-tree rebalance, then this is done by saving the cursor key and leaving the cursor in CURSOR_REQUIRESEEK state before  returning.
If the current instance already contains private information (and thus a valid public/private key pair), this information will no longer be present in the new instance generated by DH#public_key.
If the current instance has also private key information, this will no longer be present in the new instance.
If the current leaf page is full, flush it to disk.
If the current node of layer iLayer contains zero keys, or if adding the key to it will not cause it to grow to larger than nNodeSize  bytes in size, write the key here.
If the current number of pages in the file is greater than the configured maximum pager number, increase the allowed limit so that the file can be read.
If the current operation is an RBU update, then the updated version of the database file will become visible to ordinary SQLite clients following the next call to sqlite3rbu_step().
If the current operation is an UPDATE, then the pChanges parameter is passed a pointer to the list of columns being modified.
If the current position may start a simple key, save it.
If the current size of the database file is 0 but a journal file exists, that is probably an old journal left over from a prior database with the same name.
If the cursor P1 was opened using the OPFLAG_SEEKEQ flag, then this opcode will always land on a record that equally equals the key, or else jump immediately to P2.
If the cursor already points to the last entry, this is a no-op.
If the cursor cache is stale, bring it up-to-date
If the cursor does not yet have a statement handle, obtain one now.
If the cursor is already pointing to the correct row and that row has not been deleted out from under the cursor, then this routine is a no-op.
If the cursor is already positioned at the point we are trying to move to, then just return without doing any work
If the cursor is changed, the value of register P2 will then change.
If the cursor is currently on the last row and we are appending a new row onto the end, set the "loc" to avoid an unnecessary btreeMoveto() call
If the cursor is not at EOF, read the next character
If the cursor is not currently open or is open on a different index, then fall through into OP_OpenRead to force a reopen
If the cursor is not pointing to a valid entry, *pSize is set to 0.
If the cursor points to an index btree or is invalid, the result of this routine is undefined.
If the cursor requires seeking (bSeekRequired flag is set), seek it.
If the cursor was opened expecting an intkey table, the caller should be inserting integer keys with a blob of associated data.
If the data is an Ocaml string it is more efficient to copy its contents directly in our heap instead of serializing it.
If the data is coming from a SELECT statement, then generate a co-routine that produces a single row of the SELECT on each invocation.
If the data type has a non-void (subclassed) type, show it
If the data type requires zero-inititialization
If the data type wasn't provided, will need to calculate it.
If the data was not compressed this will be 0
If the data will be read, copy it into temp.
If the data will be written to, set UPDATEIFCOPY
If the database  connection pointers get out-of-sync, it is possible for routines like btreeInitPage() to reference an stale connection pointer that references a a connection that has already closed.
If the database contains foreign key violations when the  transaction is opened, this may cause the mechanism to malfunction.
If the database contents have changes since the previous read transaction, then *pChanged is set to 1 before returning.
If the database file is corrupt, it is possible for the value of idx  to be invalid here.
If the database file was of zero-length, then the DB_Empty flag is also set.
If the database has changed, flush the cache.
If the database is a WAL database, then the WAL connection is open.
If the database is already nBytes or larger, this routine is a no-op.
If the database is already opened in the same database connection and we are in shared cache mode, then the open will fail with an SQLITE_CONSTRAINT error.
If the database is empty or if no *-wal file exists and if no error occurs, make sure Pager.journalMode is not set to PAGER_JOURNALMODE_WAL.
If the database is empty, returns +nil+.
If the database is empty, returns nil.
If the database is not empty and the *-wal file exists, open the pager in WAL mode.
If the database is not initialized, it is initialized now.
If the database may grow as a result of this checkpoint, hint about the eventual size of the db file to the VFS layer.
If the database page size is not a power of two, or is greater than SQLITE_MAX_PAGE_SIZE, conclude that the WAL file contains no valid  data.
If the database schema is shared, then there is one instance of this structure for each database connection (sqlite3*) that uses the shared schema.
If the database size was not available from the WAL sub-system, determine it based on the size of the database file.
If the database supports auto-vacuum, and the second or subsequent overflow page is being allocated, add an entry to the pointer-map for that page now.
If the database supports auto-vacuum, make sure no tables contain references to pointer-map pages.
If the database supports auto-vacuum, write an entry in the pointer-map to indicate that the page is free.
If the database was not actually modified during this transaction, the pager is running in exclusive-mode and is using persistent journals, then this function is a no-op.
If the database was unlocked prior to this instruction then a read lock is acquired as part of this instruction.
If the date is already on the appropriate weekday, this is a no-op.
If the datetimestruct is NaT, return NaT
If the db handle is not NULL, then we must hold the connection handle mutex here.
If the db handle must hold the connection handle mutex here.
If the db-size header field is incorrect (as it may be if an old client has been writing the database file), update it now.
If the decimal precision guaranteed by FP arithmetic is higher than the requested places BUT is small enough to make sure a non-zero value is returned, pre-round the result to the precision
If the default internal or external encoding is ASCII compatible, the encoding of the inspected result must be compatible with it.
If the default internal or external encoding is ASCII incompatible, the result must be ASCII only.
If the default page cache implementation is overridden, then neither of these two features are available.
If the default page cache implementation is overriden, then neither of these two features are available.
If the default value does not exist, this method returns nil.
If the default value for the new column was specified with a  literal NULL, then set pDflt to 0.
If the default value is NULL, the action is the same as ABORT.
If the default value of the new column is NULL, then set the file format to 2.
If the default value of the new column is not NULL, the file format becomes 3.
If the deprecated behavior is ever removed, keep only the else branch of this if-else
If the depth as specified on the root node is greater than RTREE_MAX_DEPTH, the r-tree structure must be corrupt.
If the destination database has not yet been locked (i.e. if this is the first call to backup_step() for the current backup operation), try to set its page size to the same as the source database.
If the destination encoding is stateful, string is converted according to the state and the state is updated.
If the destination is DistFifo, then cursor (iParm+1) is open on an ephemeral index. If the current row is already present in the index, do not write it to the output.
If the destination is DistQueue, then cursor (iParm+1) is open on a second ephemeral index that holds all values every previously added to the queue.
If the destination is an EXISTS(...) expression, the actual values returned by the SELECT are not required.
If the device does not support the SEQUENTIAL property, then  journal file is synced.
If the dictionary does not have "names" and "formats" entries, then it will be checked for conformity and used directly.
If the dimensions are truncated, need to produce an object array.
If the dirSync argument is true, fsync() the directory after deleting the file.
If the docids in the  input doclists are sorted in ascending order, parameter bDescDoclist should be false.
If the docids in the input doclists are sorted in ascending order, parameter bDescDoclist should be false.
If the double is out of range of a 64-bit signed integer then return the closest available 64-bit signed integer.
If the dst object needs a DECREF to set it to NULL
If the dtype doesn't match, or the array isn't aligned, indicate that the trivial loop can't be done.
If the dtype is NPY_VOID, see if there is extra information in the 'descr' attribute.
If the dtype is NULL, the default array type is used (double).
If the dtype specified is in generic units, detect the units from the input parameters.
If the eMode parameter is BTALLOC_EXACT and the nearby page exists anywhere on the free-list, then it is guaranteed to be returned.
If the either the page-size or sector-size in the journal-header is  invalid, then the process that wrote the journal-header must have  crashed before the header was synced.
If the enclosed object responds to a "rewind" method, it is called.
If the encoding is unknown, nil is returned.
If the end of the  doclist-index page is reached, return non-zero.
If the end of the buffer is reached before a token is found, set *ppExpr to zero.
If the end of the file has been reached, the routine has a choice of ERREXIT() or inserting fake data into the buffer.
If the ending delimiter is not found, display a warning.
If the ending matches this...
If the entry block has predecessors, we may need to split it
If the entry deleted was located on a leaf page, then the cursor still points to that page.
If the entry fits our requirements
If the entry specified by zName and nName is not found and parameter 'create' is true, then create a new entry.
If the entry specified is not found and 'create' is true, then create a new entry.
If the epxression is anything other than TK_STRING, the expression is unchanged.
If the error condition  persists, the pager enters the ERROR state via condition (1) above.
If the error is an unrecognized modifier, no error is written to pCtx.
If the error is in a system call (i.e. localtime()), then an error message is written to context pCtx.
If the error message is too large for the supplied buffer, it should be truncated.
If the error occurs during the first call to sqlite3BtreeCommitPhaseOne(), then there is a chance that the master journal file will be orphaned.
If the estimated length exceeds the really used length, mark the extra allocated memory as unaddressable, so that any out-of-bound reads can be detected.
If the event is method entry/exit, check that in the current mode VTune is allowed to receive it
If the event is of the form  UPDATE ON (a,b,c)  Then the "b" IdList records the list "a,b,c".
If the exFlag argument is false, then acquire at least a RESERVED lock on the database file.
If the exFlag parameter is true, then immediately upgrade this to an EXCLUSIVE lock.
If the exact nanoseconds value is required, use +:nanoseconds+ as the +unit+.
If the exception was thrown during a function call there might be arguments pushed to the stack that have to be dtor'ed.
If the exec call supplied NULL for tables, use the inbuilt ones.
If the existing change is considered "indirect", but this current change is "direct", mark the change object as direct.
If the exported symbols cannot be overshadowed on module import, a fatal error is produced and the process aborts.
If the expression can be converted directly into a value, then the value is allocated and a pointer written to *ppVal.
If the expression cannot be converted to a value, then *ppVal is set to NULL.
If the expression evaluates to NULL (neither true nor false) then jump if jumpIfNull is SQLITE_JUMPIFNULL or fall through if jumpIfNull is 0.
If the expression evaluates to NULL (neither true nor false), then take the jump if the jumpIfNull flag is SQLITE_JUMPIFNULL.
If the expression has got more back references than the offsets supplied can hold, we get a temporary chunk of working store to use during the matching.
If the expression is "x NEAR y", it is  advanced to point to the next row that matches "x AND y".
If the expression is a subquery then Expr.iColumn holds an integer register number containing the result of the subquery.
If the expression is a variable (TK_VARIABLE), then Expr.token contains the  variable name.
If the expression is a variable (TK_VARIABLE), then Expr.token contains the variable name.
If the expression is always either TRUE or FALSE (respectively), then return 1.
If the expression is an SQL literal (TK_INTEGER, TK_FLOAT, TK_BLOB,  or TK_STRING), then Expr.token contains the text of the SQL literal.
If the expression is an SQL literal (TK_INTEGER, TK_FLOAT, TK_BLOB, or TK_STRING), then Expr.token contains the text of the SQL literal.
If the expression is constant, then this routine might choose to code the expression at initialization time.
If the expression is not a vector, then nReg must be passed 1.
If the expression is not an integer or if it is too big to fit in a signed 32-bit integer, return 0 and leave *pValue unchanged.
If the expression is not constant then we will need to disable the test that was generated above that makes sure this code only executes once.
If the expression is used as a result in an aggregate SELECT, then the value is also stored in the Expr.iAgg column in the aggregate so that it can be accessed after all aggregates are computed.
If the expression list pEList contains more than iLimit elements, leave an error message in pParse.
If the expression might be NULL or if the expression is too complex to tell return TRUE.
If the expression p codes a constant integer that is small enough to fit in a 32-bit integer, return 1 and put the value of the integer in *pValue.
If the expression passed as the only argument is of type TK_VECTOR  return the number of expressions in the vector.
If the expression passed as the second argument is a vector, generate code to write the first nReg elements of the vector into an array of registers starting with iReg.
If the extension function is invoked  more than once for a single FTS query, then all invocations share a  single auxiliary data context.
If the external encoding and the internal encoding are specified, the optional +Hash+ argument can be used to adjust the conversion process.
If the external encoding and the internal encoding is specified, optional hash argument specify the conversion option.
If the external encoding is something we don't know how to handle, fall back to YAML_ANY_ENCODING.
If the field type has a non-trivial shape, additional dimensions will have been appended to `a` and `b`.
If the field type is etGENERIC, then convert to either etEXP or etFLOAT, as appropriate.
If the fields weren't in order, and there was an OBJECT type, need to verify that no OBJECT types overlap with something else.
If the file cannot be loaded directly, attempts are made to load with various operating-system specific extensions added.
If the file creation mode "m" is 0 then set it to the default for SQLite.
If the file does not already exist, this will fail.
If the file does not exist zero is returned and no operation is performed.
If the file does not exist, a new file will be created using the given +mode+, unless +mode+ is explicitly set to nil.
If the file does not exist, a new file with file mode _mode_ will be created.
If the file exists and the operation succeeded 0 is returned, otherwise on error -1 is returned.
If the file exists, it fails.
If the file exists, it will be opened in read/write mode.
If the file format and encoding in the database have not been set,  set them now.
If the file has the SQLITE_IOCAP_POWERSAFE_OVERWRITE property, then set the effective sector size to its minimum value (512).
If the file is a JournalFile, and the underlying file on disk has not yet been opened, return 0.
If the file is a temp-file has not yet been opened, open it now.
If the file is found, it's stats is returned in stp.
If the file is not a well-formed database file, then SQLITE_CORRUPT is returned.
If the file is unlocked and the file-system does not exhibit the UNDELETABLE_WHEN_OPEN property, the journal file is closed (if it is open).
If the file named cannot be found, a LoadError will be raised.
If the file on disk is currently larger than nPage pages, then use the VFS xTruncate() method to truncate it.
If the file on disk is smaller than the database image, use  pager_truncate to grow the file here.
If the file opened as the journal file is not a well-formed journal file then all pages up to the first corrupted page are rolled back (or no pages if the journal header is corrupted).
If the file opened with fd is a database file, and there are other connections open on that file that are currently holding advisory locks on it, then the call to close() will cancel those locks.
If the file should be created now, create it and write the new data into the file on disk.
If the file was just truncated to a size smaller than the currently mapped region, reduce the effective mapping size as well.
If the file was opened successfully, read the schema for the new database.
If the file was successfully opened for read/write access, choose a default page size in case we have to create the database file.
If the file was truncated to a size smaller than the currently mapped region, reduce the effective mapping size as well.
If the file's path cannot be determined a LoadError is raised.
If the filename starts with "." or "/", the path is ignored.
If the final parameter - noSync - is true, then the database file itself is not synced.
If the first argument is -1, then no changes are made to state of either the C-API or the SQL function.
If the first argument is an integer, or optional second argument is given, the returning string would not be longer than the given value in bytes.
If the first argument is type library name, then the second and third argument are ignored.
If the first argument to this interface is 0, then both the C-API and the SQL function are disabled.
If the first argument was constant then bit 0 of P1 is set.
If the first argument, db, is not NULL and a malloc() error has occurred, then the connection error-code (the value returned by sqlite3_errcode()) is set to SQLITE_NOMEM.
If the first attempt failed, it might have been due to a race with a writer.
If the first counter overflows, we are done
If the first digit is 8 or 9, Perl used to generate a binary zero byte and then treat the digit as a following literal.
If the first field is an integer, the maximum legal header size is (12*5 + 1 + 1) bytes.
If the first frame is frame 1 (implying that the current transaction restarted the wal file), these values must be read from the wal-file header.
If the first integer value is followed by a ',',  read the second integer value.
If the first item is a string, try as one set of flags
If the first page of the wal-index has been mapped, try to read the wal-index header immediately, without holding any lock.
If the first parameter is an object or scalar, use CanCastArrayTo
If the first part of a qualified name is an alias, substitute it.
If the first temporary PMA file has not been opened, open it now.
If the flags argument has the NPY_ARRAY_F_CONTIGUOUS bit set, then a FORTRAN-style strides array will be created (and of course the NPY_ARRAY_F_CONTIGUOUS flag bit will be set).
If the flags is omitted or nil, File::RDONLY is assumed.
If the flex_dtype is not flexible, it leaves it as is.
If the following function pointer is not NULL and if SQLITE_ENABLE_IOTRACE is enabled, then messages describing I/O active are written using this function.
If the following global variable points to a string which is the name of a directory, then that directory will be used to store all database files specified with a relative pathname.
If the following global variable points to a string which is the name of a directory, then that directory will be used to store temporary files.
If the former, then *ppFree is set to a pointer that should be eventually freed by the caller using sqlite3DbFree().
If the former, then all row-records are guaranteed to include a value for the column and the P4 value is not required.
If the fourth argument, isCommit, is non-zero, then this page is being moved as part of a database reorganization just before the transaction  is being committed.
If the fourth parameter is 0, then the database connection passed as the second argument has just been opened.
If the fourth parameter is 1, then the SQL statement that the third parameter points to has just been executed.
If the fourth parameter to sqlite3_bind_blob() is negative, then the behavior is undefined.
If the free-list is currently empty, or if the first trunk page in the free-list is full, then this page will become a new free-list trunk page.
If the free-list must be searched for 'nearby'
If the fts5YYNOERRORRECOVERY macro is defined, then do not attempt to do any kind of error recovery.
If the full transfer size doesn't fit in the buffer, truncate it
If the function already exists as a regular global function, then this routine is a no-op.
If the function does not exist, then create a new one that always throws a run-time error.
If the function is an aggregate function, then the NC_HasAgg flag is set and the opcode is changed from TK_FUNCTION to TK_AGG_FUNCTION.
If the function is not a LIKE-style function then return FALSE.
If the function makes the distinction between uppercase and lowercase (as does GLOB) then *pIsNocase is set to false.
If the function returned an error, throw an exception
If the garbage data came from an obsolete journal file, the checksums might be correct.
If the generator has been closed, it can only hold on to three values: The value, key and retval.
If the generator is already closed throw the exception in the current context
If the given +clock_id+ is not supported, Errno::EINVAL is raised.
If the given Mem* has a zero-filled tail, turn it into an ordinary blob stored in dynamically allocated space.
If the given buffer is not large enough to hold the data, the return value is the buffer size,  in characters, required to hold the string and its terminating null character.
If the given bugger is not large enough to hold the data, the return value is the buffer size,  in characters, required to hold the string and its terminating null character.
If the given name does not exist and neither +default+ nor a block a provided an IndexError is raised.
If the group is not found, +ArgumentError+ will be raised.
If the group is preceded by OP_BRAZERO, convert this to OP_BRAPOSZERO.
If the gzip file header is incorrect, raises an Zlib::GzipFile::Error exception.
If the handle had any kind of transaction open, decrement the  transaction count of the shared btree.
If the handle has a write-transaction open, commit the shared-btrees  transaction and set the shared state to TRANS_READ.
If the hashtable changed in the meantime, we'll "leak" this apply count increment -- our reference to thash is no longer valid.
If the header is read successfully and the checksum verified, return zero.
If the header is read successfully, *pNRec is set to the number of page records following this header and *pDbSize is set to the size of the database before the transaction began, in pages.
If the header is read successfully, check the version number to make sure the wal-index was not constructed with some future format that this version of SQLite cannot understand.
If the heap pointer is NULL, then restore the malloc implementation back to NULL pointers too.
If the height is greater than the maximum allowed expression depth, leave an error in pParse.
If the help string is not found, then the method returns nil.
If the hint blob in *pHint does not contain at least two valid varints, return SQLITE_CORRUPT_VTAB.
If the holiday falls on a possible business day, then keep it.
If the hull contains a lens-shaped component, these points were not verified.
If the iCol argument to this function was negative, this means all columns of the FTS3 table.
If the iStart argument had been 1 instead of 2, then the result would have been:  A, nil, nil, nil, B.
If the im-pointer points to a brand new image, the cache gives out bogus colorindexes.
If the implementation does not provide working versions of these routines, it should at least provide stubs that always return true so that one does not get spurious assertion failures.
If the increment generates a ``carry,'' the character to the left of it is incremented.
If the incremental vacuum is finished after this function has run, SQLITE_DONE is returned.
If the index is 0xffff, then there are no nodes for the property.
If the index is created successfully, return a pointer to the new Index structure.
If the index is not a tuple, handle it the same as (index,)
If the index is unique, then the last integer will be 1.
If the index name was unqualified, check if the table is a temp table.
If the index or temporary table used by the GROUP BY sort will naturally deliver rows in the order required by the ORDER BY clause, cancel the ephemeral table open coded earlier.
If the index type is fancy, the boolean array is already converted to integer arrays.
If the index uses a collation sequence that is different from the default collation sequence for the column, this index is unusable.
If the initial value of register P1 is less than 1, then the value is unchanged and control passes through to the next instruction.
If the inner loop was generated using a non-null pOrderBy argument, then the results were placed in a sorter.
If the input FuncDef structure is ephemeral, then free it.
If the input changeset appears to be corrupt and the corruption is detected, SQLITE_CORRUPT is returned.
If the input day is in the first two months, we want the molad at the start of the year.
If the input day is in the fourth to last months, we want the molad at the end of the year.
If the input day is in the third month, it doesn't matter which molad is returned, because both will be required.
If the input does not begin with a quote character, then this routine is a no-op.
If the input is completely exhausted, (*pnData)  should be set to zero to indicate this.
If the input is not a keyword, TK_ID is returned.
If the input is of the form Z (not Y.Z or X.Y.Z) then the name Z might refer to an result-set alias.
If the input is scalar
If the input isn't a tuple of dtypes, try converting it as-is to a dtype, and replicating to all operands.
If the input list contains too few elements, then construct an incomplete tree and leave *ppList set to NULL.
If the input matrix is too small, call DLASDQ to find the SVD.
If the input matrix is too small, call SLASDQ to find the SVD.
If the input stream contains filters, it's not really seekable.
If the inputs to the changegroup were themselves changesets, the output is a changeset.
If the insert is successful, return SQLITE_OK.
If the instance variable name is passed as a string, that string is converted to a symbol.
If the integer is -1, then it is overwritten with the current WAL persistence setting.
If the integer is -1, then it is overwritten with the current zero-damage mode setting.
If the integer is an alpha-numeric  unicode code point, 1 is returned.
If the interior node term is larger than the specified term, then the tree headed by iChild may contain the specified term.
If the invoked function returns non-zero, then the commit becomes a rollback.
If the isCopyTerm parameter is true, then the buffer pointed to by zTerm is transient, so take a copy of the term data.
If the isDirectMode flag is zero, then this is done by calling  sqlite3PagerWrite() on page 1, then modifying the contents of the page data.
If the isPoslist argument is true, then it is assumed that the doclist contains a position-list following each docid.
If the isPrefixIter parameter is zero, then the returned SegReader iterates through each term in the pending-terms table.
If the itemsize doesn't match the final offset, it's not a simple layout.
If the iterator currently points to an INSERT record, bind values from the new.* record to the SELECT statement.
If the iterator is already at the end of the changeset, return DONE.
If the iterator is going over every element, return array scalars
If the iterator is in the error-state, return immediately.
If the iterator is not at a real match, skip forward until it is.
If the iterator is tracking a multi-index, gets the strides for the axis specified, otherwise gets the strides for the iteration axis as Fortran order (fastest-changing axis first).
If the iterator passed as the second argument does not currently point to a table (not index) with an external primary key, this function is a no-op.
If the iterator points to EOF when this function is called the results are undefined.
If the iterator reaches EOF, set *pbEof to true before returning.
If the iterator skips through rowids in the default ascending order, this means the maximum rowid.
If the iterindex is already right, no need to do anything
If the journal does not exist, it usually means that some  other connection managed to get in and roll it back before  this connection obtained the exclusive lock above.
If the journal file is already on disk, truncate it there.
If the journal file is already open (as it may be in exclusive mode), then this function just writes a journal header to the start of the already open file.
If the journal file is open, then it is "finalized".
If the journal file is too small for there to be a header stored at this point, return SQLITE_DONE.
If the journal has been truncated, simply stop reading and processing the journal.
If the journal header file appears to be corrupted, SQLITE_DONE is returned and *pNRec and *PDbSize are undefined.
If the journal is merely persistent, no reset is needed.
If the journal really is hot, reset the pager cache prior rolling back any content.
If the key and/or data spills onto overflow pages, then accessPayload() must be used to reassemble the key/data and copy it into a preallocated buffer.
If the key is not an INTEGER PRIMARY KEY, then create a unique index for the key.
If the key is not found, returns +ifnone+.
If the key is not found, returns nil.
If the key is required, it is an error.
If the keys are equal (only possible with two EOF values), it doesn't matter which index is stored.
If the kwarg is not a tuple then it is an array (or None)
If the last argument is a hash, it specifies option for internal open().
If the last argument is a hash, it's the keyword argument to open.
If the last bit in the half significand is 0 (already even), and the remaining bit pattern is 1000...0, then we do not add one to the bit after the half significand.
If the last connection that wrote to this database was operating in persistent-journal mode, then the journal file may at this point actually be larger than Pager.journalOff bytes.
If the last opcode is "op" and it is not a jump destination, then remove it.
If the leaf in question has already been trimmed from the segment,  ignore this b-tree entry.
If the least significant bit in flags is clear, then the rule applies to all nRange codepoints (i.e. all nRange codepoints are upper case and need to be folded).
If the left hand expression has a collating sequence type, then it is used.
If the left hand side of the regexp operator is NULL,  then the result is also NULL.
If the left side is "database.id" then pId1 is the database name and pId2 is the id.
If the left side is just "id" then pId1 is the id and pId2 is any empty string.
If the length is negative, it means the reference is unset in non-Java-compatible mode.
If the length of the component is zero length, start from the current directory.
If the length of the reference is zero, just continue with the main loop.
If the library is compiled with the shared-cache feature disabled, then there is only ever one user of each BtShared structure and so this locking is not necessary.
If the list is in order (which it should be), ranges of characters are detected and handled appropriately.
If the load failed, it must not be a PNG file.
If the locale is grandfathered, stop, no variants
If the lock cannot be obtained, SQLITE_BUSY is returned and no data is written to the database file.
If the lock failed (busy): 1st try: get the mod time of the conch, wait 0.5s and try again.
If the lock is obtained successfully, set the Pager.state  variable to locktype before returning.
If the locking level of the file descriptor is already at or below the requested locking level, this routine is a no-op.
If the log file is not already open, but does exist in the file-system, it may need to be checkpointed before the connection can switch to rollback mode.
If the log file is successfully opened, SQLITE_OK is returned and  ppWal is set to point to a new WAL handle.
If the log is not already open, open it now.
If the log message is longer than a few hundred characters, it will be truncated to the length of the buffer.
If the look-ahead token is YYNOCODE, then check to see if the action is independent of the look-ahead.
If the loop wants the arrays, provide them
If the loop wants the arrays, provide them.
If the lower four bits equal SQLITE_SYNC_FULL, that means to use Mac OS X style fullsync instead of fsync().
If the lower four bits of the flag equal SQLITE_SYNC_NORMAL, that means to use normal fsync() semantics.
If the magic name ":memory:" will create an in-memory database, then leave the autoVacuum mode at 0 (do not auto-vacuum), even if SQLITE_DEFAULT_AUTOVACUUM is true.
If the main database exists, the new sqlite.enc value will be overwritten when the schema is next loaded.
If the main database file is not open, or the pager is not in either DBMOD or OPEN state, this function is a no-op.
If the main database has not been initialized and/or created when ATTACH is executed, this is done before the ATTACH operation.
If the main dimension size isn't known, it is computed based on the line length, so there's no more space left to distribute.
If the mapping is not attempted  (because the file is too large or the VFS layer is configured not to use mmap), return SQLITE_OK and set *pp to NULL.
If the mask's stride is contiguous, use it, otherwise the mask may or may not be buffered, so the stride could be inconsistent.
If the master journal name in the journal is longer than nMaster bytes (including a nul-terminator), then this is handled as if no master journal name were present in the journal.
If the match fails at the newline, later code breaks this loop.
If the match should not be empty
If the max scalar kind is bigger than the max array kind, finish computing the max array kind
If the maximum is 1 or unlimited, we just have to stick in the BRAZERO and do no more at this point.
If the maximum is greater than 1 and limited, we have to replicate in a nested fashion, sticking OP_BRAZERO before each set of brackets.
If the maximum is limited, it replicates the group in a nested fashion, remembering the bracket starts on a stack.
If the maximum is not zero or one, set it to 1.
If the maximum is unlimited, insert an OP_STAR.
If the maximum is unlimited, set a repeater in the final copy.
If the maximum is unlimited, we use OP_PLUS.
If the member name is not correct, KeyError exception is raised.
If the memory cell contains a string value that must be freed by invoking an external callback, free it now.
If the memory cell contains a value that must be freed by invoking the external callback in Mem.xDel, then this routine will free that value.
If the memory layout matches and, data types are equivalent, and it's not a subtype if subok is False, then we can skip the copy.
If the metadata is the same, short-circuit the conversion
If the method fails to access library name, WIN32OLERuntimeError is raised.
If the method fails to access the TLIBATTR information, then WIN32OLERuntimeError is raised.
If the method is not implemented, as Process.fork on Windows, File.lchmod on GNU/Linux, etc., false is returned.
If the minimum equals the maximum, we are done.
If the minimum is greater than zero, replicate the group as many times as necessary, and adjust the maximum to the number of subsequent copies that we need.
If the minimum is zero, mark it as possessive, then unset the possessive flag when the minimum is 0 or 1.
If the minimum is zero, we can continue at the same level without recursion.
If the mmap() above failed, assume that all subsequent mmap() calls will probably fail too.
If the module has been registered and includes a Create method,  invoke it now.
If the module has not been registered, return an  error.
If the molad occurs on or after noon, Tishri 1 must be delayed.
If the month is 1 or 2, the calculation is simple addition to the first of the year.
If the month is 4 to 7, it is considered whether it is a leap year and then simple subtraction from the beginning of the following year is used.
If the month is 8 (Nisan) or greater, the calculation is simple subtraction from beginning of the following year.
If the most recent API call was successful, then the return value from sqlite3_errcode() is undefined.
If the nBytes parameter is 0 and the blob of memory has not yet been allocated, a null pointer is returned.
If the nRec value is 0xffffffff it means that nRec should be computed from the file size.
If the name cannot be resolved unambiguously, leave an error message in pParse and return WRC_Abort.
If the name is duplicated, add one to the opcode to change CREF/RREF into DNCREF/DNRREF and insert appropriate data values.
If the name is not found, leave the value of recno as 0 for a forward reference.
If the name is not unique, append a integer to the name so that it becomes unique.
If the name is not unique, append an integer to the name so that it becomes unique.
If the needle (ap2) is larger than the haystack (op1) we copy the haystack to a contiguous array for improved cache utilization.
If the new Btree uses a sharable pBtShared, then link the new Btree into the list of all sharable Btrees for the same connection.
If the new rowid is not equal to the old, set output parameter *pbSkip to 1 before returning.
If the next call to a user function or aggregate calls sqlite3GetFuncCollSeq(), this collation sequence will be returned.
If the next character is '+', we have a possessive quantifier.
If the next character is a digit, this is a floating point number that begins with ".".
If the next entry is going to be too big for the code size, then increase it, if possible.
If the next month is invalid, then we need to try the first month of the next year, bearing in mind that the next year after 1 BCE is actually 1 AD and not 0.
If the next one signature is exactly like this one, then just replace.
If the noContent flag is set, it means that we do not care about the content of the page at this time.
If the node being flushed is currently the root node, also push its first rowid upwards.
If the node is dirty and the reference count drops to zero, the node data is written to the database.
If the node is dirty, write it out to the database.
If the node is not the tree root and now has less than the minimum number of cells, remove it from the tree.
If the node is the root node (node 1), then the first 2 bytes of the node contain the tree depth as a big-endian integer.
If the number can be represented as 0.xxxxxx*10**n where xxxxxx is a string of digits with no leading zeros, then n is the exponent.
If the number is less than 8 (used to be 10), or if there are that many previous extracting left brackets, then it is a back reference.
If the number of axes shrunk, reset the perm and compress the data into the new layout.
If the number of cache_spill pages is less then the number of cache_size pages, no spilling occurs until the page count exceeds the number of cache_size pages.
If the number of captured subpatterns on this run is less than the total possible number, pad the result arrays with empty strings.
If the number of elements in x.pList is even, then Y is omitted and the "otherwise" result is NULL.
If the number of pages exceeds this limit during a write transaction, the pager might attempt to "spill" pages to the journal early in order to free up memory.
If the number of pages in the database is not available from the WAL sub-system, determine the page counte based on the size of the database file.
If the number of references to the page drop to zero, then the page is added to the LRU list.
If the number of savepoints is already equal to nSavepoint, then this function is a no-op.
If the number of virtual machine operations exceeds 2147483647 then the value returned by this statement status code is undefined.
If the numeric type of argument pVal is "integer", then return it converted to a 64-bit signed integer.
If the object has not already been allocated, allocate and populate it now.
If the object is not a scalar (or if there are other error conditions) return NPY_NOSCALAR, and out_exponent is undefined.
If the object is not sharable, then no mutex is ever required and this routine is a no-op.
If the objects are both strings they are compatible when they are concatenatable.
If the octal value is greater than 377, the least significant 8 bits are taken.
If the offset vector is bigger, malloc is used.
If the old.* record has not yet been loaded into memory, do so now.
If the on-conflict mode is REPLACE, this means that the existing row should be deleted from the database before inserting the new row.
If the opcode is TK_TRIGGER, then the expression is a reference to a column in the new.* or old.* pseudo-tables available to trigger programs.
If the opcode is not a repeated character type, it returns with the original value.
If the open statement-transaction is not closed here, then the user may step another VM that opens its own statement transaction.
If the operand is WRITEMASKED, use a masked transfer fn
If the operand is aligned, any buffering can use aligned optimizations.
If the operating system does not support sleep requests with millisecond time resolution, then the time will be rounded up to the nearest second.
If the operating system support deletion of open files, then close the journal file when dropping the database lock.
If the operation is a DELETE, then parameter aChange is passed a NULL value.
If the operation is a delete, it must be called (at least) once for each unique token in the document with an iCol value less than zero.
If the operation is an UPDATE, then parameter pChanges is passed the list of columns being modified.
If the operation successful, SQLITE_OK is returned.
If the operator is UNION ALL, then duplicates are allowed.
If the optimization cannot be used, 0 is returned.
If the optimization was not enabled at compile time, then the pager_incr_changecounter() function is called to update the change counter in 'indirect-mode'.
If the optional _outbuf_ argument is present, it must reference a String, which will receive the data.
If the optional _wrap_ parameter is +true+, the loaded script will be executed under an anonymous module, protecting the calling program's global namespace.
If the optional argument +result_hash+ is given, it is overwritten and returned.
If the optional argument is given, set the umask to that value and return the previous value.
If the optional argument, result_hash, is given, it is overwritten and returned.
If the optional code block is given, it will be passed +io+ as an argument, and the IO object will automatically be closed when the block terminates.
If the optional code block is given, it will be passed the opened +file+ as an argument and the File object will automatically be closed when the block terminates.
If the optional code block is given, the result of the block is returned if the item is not found.
If the optional integer parameter +tag_len+ is given, the returned tag will be +tag_len+ bytes long.
If the optional parameter is set to true, return the phar:// URL to the currently running phar
If the optional second argument is true and the detected year is in the range "00" to "99", considers the year a 2-digit form and makes it full.
If the optional second argument is true and the detected year is in the range "00" to "99", makes it full.
If the options are changed during the branch, the pointer is used to change the external options bits.
If the options ended with ')' this is not the start of a nested group with option changes, so the options change at this level.
If the options ended with ':' we are heading into a nested group with possible change of options.
If the order is NPY_KEEPORDER, lets the iterator find the best iteration order, otherwise forces it.
If the order-by term is an identifier that corresponds to the AS-name of a result-set expression, then the term resolves to a copy of the result-set expression.
If the ordering was not forced, reorder the axes and flip negative strides to find the best one.
If the original bucket has a refcount of 1 and owns its buffer, then it is returned unchanged.
If the original database file (pDbFd) is using the "unix-excl" VFS that means that an exclusive lock is held on the database file and that no other processes are able to read or write the database.
If the original is changed while the copy is still in use, the string or blob might be changed out from under the copy.
If the other is a numeric value, returns a date object pointing other days before self.
If the other is flonum, assumes its precision is at most nanosecond.
If the output * vector wasn't big enough, say so.
If the output encoding is UTF-8, we don't need to recode the buffer.
If the output has zero elements, return now.
If the output is destined for a temporary table, open that table.
If the overflow page-list cache has been allocated and the entry for the first required overflow page is valid, skip directly to it.
If the overlap problem is related to ufuncs, one suitable cap choice is to scale max_work with the number of elements of the array.
If the p2 instruction of this OP_Halt instruction is set to OE_Ignore, then the sub-program is throwing an IGNORE exception.
If the pBase expression originated in the ON or USING clause of a join, then transfer the appropriate markings over to derived.
If the pFile was opened read/write from unix-excl, then the only lock ever obtained is an exclusive lock, and it is obtained exactly once the first time any lock is attempted.
If the pSeg iterator is already at EOF, return 0.
If the pSelect argument is not NULL, it means that this routine was called to create a table generated from a  "CREATE TABLE ...
If the pSelect parameter is NULL, that means that the DEFAULT VALUES form of the INSERT statement is intended.
If the pad parameter is zero then no padding is performed, the total amount of data encrypted or decrypted must then be a multiple of the block size or an error will occur.
If the padFlag argument is not NULL then space padding at the end of strings is ignored.
If the page  has fewer than 2 siblings (something which can only happen if the page is a root page or a child of a root page) then all available siblings participate in the balancing.
If the page at *pOffset has already been played back (if the corresponding pDone bit is set) then skip the playback.
If the page being moved is dirty and has not been saved by the latest savepoint, then save the current contents of the page into the  sub-journal now.
If the page cannot be made clean for some other reason, but no error occurs, then SQLITE_OK is returned by sqlite3PcacheMakeClean() is not called.
If the page containing the entry to delete is not a leaf page, move the cursor to the largest entry in the tree that is smaller than the entry being deleted.
If the page footer is 0 bytes in size, then this field is the same as the size of the leaf page in bytes.
If the page has already been written to the journal then we can return right away.
If the page is being rolled back as part of a savepoint (or statement) rollback from an  unsynced portion of the main journal file, then it is not safe to mark the page as clean.
If the page is clean and the reference count drops to 0, then it is made elible for recycling.
If the page is clean and the reference count drops to 0, then it is made eligible for recycling.
If the page is not already in memory, this routine goes to disk to read it in whereas Lookup() just returns 0.
If the page is not journalled when it is moved to the free-list and it is also not journalled when it is extracted from the free-list and reused, then the original data may be lost.
If the page is written into one of the journals, the corresponding bit is set in the  Pager.pInJournal bitvec and the PagerSavepoint.pInSavepoint bitvecs of any open savepoints as appropriate.
If the page number of the page record read from the (sub-)journal file is greater than the current value of Pager.dbSize, then playback is skipped and SQLITE_OK is returned.
If the page number of this page is larger than the current size of the database image, it may need to be written to the sub-journal.
If the page previously located at pgno is not already in the rollback journal, it is not put there by by this routine.
If the page record is successfully read from the (sub-)journal file and played back, then SQLITE_OK is returned.
If the page requested is  already in the cache when this function is called, then the extra data is left as it was when the page object was last used.
If the page size is 65536 and the page is empty, the offset should be 65536, but the 2-byte value stores zero.
If the page size is changed, then this function uses sqlite3PagerMalloc()  to obtain a new Pager.pTmpSpace buffer.
If the page size supplied does not meet this constraint then the page size is not changed.
If the page was not in the hash table and createFlag is 0, abort.
If the pager has already entered the ERROR state, do not attempt  the rollback at this time.
If the pager has not already entered the ERROR state, but an IO or malloc error occurs during a rollback, then this will itself cause  the pager to enter the ERROR state.
If the pager is a temp-file pager and the actual file-system file is not yet open, it is created and opened before any data is  written out.
If the pager is already in PAGER_ERROR state when this function is called, it returns Pager.errCode immediately.
If the pager is already in exclusive-mode, the WAL module will use  heap-memory for the wal-index instead of the VFS shared-memory  implementation.
If the pager is already in the ERROR state, the rollback is not  attempted here.
If the pager is in  exclusive-locking mode when this function is called, take an EXCLUSIVE lock on the database file and use heap-memory to store the wal-index in.
If the pager is in CACHEMOD state, then there must be a copy of this page in the pager cache.
If the pager is in ERROR state when this function is called, the  contents of the pager cache are discarded before switching back to  the OPEN state.
If the pager is in WAL mode and the WAL file currently contains one or more frames, return the size in bytes of the page images stored within the WAL frames.
If the pager is in full-sync mode, the journal file descriptor is advanced to the next sector boundary before anything is written.
If the pager is in peristent-journal mode, then the physical  journal-file may extend past the end of the master-journal name and 8 bytes of magic data just written to the file.
If the pager is in the ERROR state and the call to unlock the database file fails, set the current lock to UNKNOWN_LOCK.
If the pager is in the error state when this function is called, it is a no-op.
If the pager is in the error state, return an error immediately.
If the pager is not in exclusive-access mode, the database file is completely unlocked.
If the pager is open on a temp-file (or in-memory database), or if the WAL file is already open, set *pbOpen to 1 and return SQLITE_OK without doing anything.
If the pager is operating in full-sync mode, then the journal file is synced before this field is updated.
If the pager is running in exclusive mode, this method of finalizing the journal file is never used.
If the pager object is allocated and the specified file opened  successfully, SQLITE_OK is returned and *ppPager set to point to the new pager object.
If the pager passed as the first argument is open on a real database file (not a temp file or an in-memory database), and the WAL file is not already open, make an attempt to open it now.
If the parameter does not exist, this routine returns a NULL pointer.
If the parameter is named, it will be removed and correctly disposed of by the hash_update call that follows
If the parameter is not _QUERY, then the locking-mode is set to the value specified.
If the parameter is zero, then URI handling is globally disabled.
If the parent does not exist, removing the child row resolves an  outstanding foreign key constraint violation.
If the parent is NULL then the class does not extend anything and thus parent does not make any sense, either.
If the parent key is an INTEGER PRIMARY  KEY column, then output variable *ppIdx is set to NULL.
If the parent page becomes overfull, the overflow cell or cells are stored in the pSpace buffer allocated immediately below.
If the parent row can be found, no  special action is taken.
If the parent table is the same as the child table, and we are about to increment the constraint-counter (i.e. this is an INSERT operation), then check if the row being inserted matches itself.
If the parent table of an FK constraint on the current table is missing, behave as if it is empty.
If the path name starts with a forward slash or a backslash, it is either a legal UNC name, a volume relative path, or an absolute path name in the "Unix" format on Windows.
If the path name starts with a letter and a colon it is either a volume relative path or an absolute path.
If the pattern contains groups, each individual result is itself an array containing one entry per group.
If the pattern was studied, a minimum subject length may be set.
If the pattern was successfully studied with JIT support, run the JIT executable instead of the rest of this function.
If the payload for a cell is larger than the max payload, then extra payload is spilled to overflow pages.
If the payload is larger than the preset amount then surplus bytes are stored on overflow pages.
If the payload will not fit completely on the local page, we have to decide how much to store locally and how much to spill onto overflow pages.
If the perm entry is negative, flip the axis
If the perm entry is negative, reverse the index
If the permission is omitted or nil, 0644 is assumed.
If the pgno argument passed to PTRMAP_PAGENO is a pointer-map page, then pgno is returned.
If the phrase instances in the column being considered do not overlap, this object simply iterates through them.
If the phrase is part of a NEAR expression, then only phrase instances that meet the NEAR constraint are included in the counts.
If the phrase pExpr consists entirely of deferred tokens, then all X and Y values are set to nDoc, where nDoc is the number of documents in the  file system.
If the pixel is transparent, we assign it the palette index that will later be added at the end of the palette as the transparent index.
If the plan produced by the earlier call uses an IN(...) term, call xBestIndex again, this time with IN(...) terms disabled.
If the platform doesn't have birthtime, raises NotImplementedError.
If the platform supports denormalized numbers, there are numbers between zero and Float::MIN.
If the pluggable cache (sqlite3_pcache*) has not been allocated, allocate it now.
If the pnByte parameter is NULL, then it is assumed that the file  contains a single PMA, and that that PMA omits the initial length varint.
If the point is found in the buffer, this method flushes the buffer and returns false.
If the position is already at the end, StopIteration is raised.
If the position list contains entries for column iCol, then (*pa) is set to point to the sub-position-list for that column and the number of bytes in it returned.
If the power fails while the journal is being written, semi-random garbage data might appear in the journal file after power is restored.
If the prNotFound parameter is 0, then the b-tree will be used to iterate through the set members, skipping any duplicates.
If the previous chunk is checked out, then u.hdr.prevSize can be part of the data for that chunk and should not be read or written.
If the previous match was for an empty string, we are finished if we are at the end of the subject.
If the previous time around less data was copied it may not be safe to reuse the buffers even if the pointers match.
If the primary key contains one or more NULL values, *pbNullPK is set to true before returning.
If the primary key of the row includes a NULL value, exit early.
If the process has privilege, the parent process or the child process can change UID/GID.
If the process is not alive, and +raise+ was true, a PTY::ChildExited exception will be raised.
If the processing calls for the query to abort, this subroutine increments the iAbortFlag memory location before returning in order to signal the caller to abort.
If the progress callback returns non-zero, exit the virtual machine with a return code SQLITE_ABORT.
If the proper action on seeing token YYTOKEN is to reduce or to detect an error, take that action.
If the prototype method is private do not enforce a signature
If the query being compiled is an EXPLAIN QUERY PLAN, a single record is added to the output to describe the table scan strategy in  pLevel.
If the query has an ORDER BY, then entries in the Queue table are kept in ORDER BY order and the first entry is extracted for each cycle.
If the query is DISTINCT with an ORDER BY but is not an aggregate, and  if the select-list is the same as the ORDER BY list, then this query can be rewritten as a GROUP BY.
If the query runs to completion without incident, SQLITE_OK is returned.
If the query was read-only and the error code is SQLITE_INTERRUPT,  no rollback is necessary.
If the queue is empty, the calling thread is suspended until data is pushed onto the queue.
If the queue is empty, wait.
If the queue is full, wait
If the quotes were of the form "..." (double-quotes) then the EP_DblQuoted flag is set on the expression node.
If the rScore is a tie, then use iLevel as the tie breaker with smaller iLevel values coming first.
If the random rowid does exist, we select a new one and try again, up to 100 times.
If the range is given as strings, generate an array of characters.
If the rank-1 modifier is small enough, no more needs to be done -- except to reorganize Q so that its columns correspond with the elements in D.
If the rank-1 modifier is small enough, no more needs to be done except to reorganize Q so that its columns correspond with the elements in D.
If the rbu update has not started (i.e. the rbu_state table was empty) it is a no-op.
If the rbu_control field contains an invalid value, an error code and message are left in the RBU handle and zero returned.
If the rbu_count table does not exist, then (*pnOne) is set to -1 during stage 1.
If the rbu_count table exists but is not correctly populated, the value of the *pnOne output variable during stage 1 is undefined.
If the rbu_count table is present and populated correctly and this API is called during stage 1, the *pnOne output variable is set to the permyriadage progress of the same stage.
If the real file has been created, call its xSync method.
If the reallocation fails, then free p and set the mallocFailed flag in the database connection.
If the record identified by P3 and P4 contains any NULL value, jump immediately to P2.
If the record identified by P3 and P4 is a prefix of any entry in P1 then a jump is made to P2 and P1 is left pointing at the matching entry.
If the record identified by P3 and P4 is not the prefix of any entry in P1 then a jump is made to P2.
If the record is corrupt, the xRecordCompare routine may read up to two varints past the end of the buffer.
If the record number is not being modified, then regNewRowid is the same register as regOldRowid, which is already populated.
If the record number will change, set register regNewRowid to contain the new value.
If the reduction axis has size zero, either return the reduction unit for UFUNC_REDUCE, or return the zero-sized output array for UFUNC_ACCUMULATE.
If the reference count has reached zero, rollback any active transaction and unlock the pager.
If the reference is followed by a COLLATE operator, then make sure the COLLATE operator is preserved.
If the reference is to a completed group, we need to detect whether this is a recursive call, as otherwise there will be an infinite loop.
If the references should be removed from src, add another transfer function to do that.
If the references should be removed from src, add more transfer functions to decrement the references for all the other fields.
If the regex permits duplicate names, the first substring that is set is chosen.
If the register is a temporary register that can be deallocated, then write its number into *pReg.
If the reneg_limit_callback returned true don't auto-close
If the replacement string is not the same length as the text it is replacing, the string will be adjusted accordingly.
If the requested collation sequence is not available, or not available in the database native encoding, the collation factory is invoked to request it.
If the requested dtype is flexible, adapt it
If the requested page is already in the cache, it is returned.
If the requested page is already in the page cache, then the page cache implementation must return a pointer to the page buffer with its content intact.
If the requested page is not already in the pager cache return NULL.
If the requested reference is  successfully obtained, it is copied to *ppPage and SQLITE_OK returned.
If the resize fails, set the mallocFailed flag in the connection object.
If the result doesn't match, throw an error
If the result is a text value, the sqlite3_value object uses encoding  enc.
If the result is exactly 0, jump to P2.
If the result of an OP_Eq comparison on the two previous operands would have been true (1), then fall through.
If the result register is not a temporary, then set *pReg to zero.
If the result set column is a simple column reference, then this routine makes an exact copy.
If the result will be used for a socket with SOCK_STREAM, SOCK_STREAM should be specified as socktype.
If the return value is 1, then ALWAYS() is either hard-coded to true or else it asserts if its argument is false.
If the return value is 2, that means ALWAYS() and NEVER() are both no-op pass-through macros, which is the default setting.
If the return value of sqlite3BtreeGetFilename() is a zero length string, it means the main database is :memory: or a temp file.
If the returned result register is a temporary scalar, then also write that register number into *piFreeable.
If the returned result register is not a temporary or if the expression is a vector set *piFreeable to 0.
If the returned value is SQLITE_DONE, xQueryPhrase returns SQLITE_OK.
If the rhs of the LIKE expression is a variable, and the current value of the variable means there is no need to invoke the LIKE function, then no OP_Variable will be added to the program.
If the right-hand side is also a column, then the affinities of both right and left sides must be such that no type conversions are required on the right.
If the root finder fails, the computation is terminated.
If the root node is the parent of the leaves, iRoot will be 1.
If the rounding causes a bit to spill into h_exp, it will increment h_exp by one and h_sig will be zero.
If the rounding causes a bit to spill into h_exp, it will increment h_exp from zero to one and h_sig will be zero.
If the row was deleted out from under the cursor, set the cursor to point to a NULL row.
If the rowid column is modified by the UPDATE statement the bChngRowid argument is non-zero.
If the same database is attached more than once, the first attached database is returned.
If the same object was returned, nothing to do
If the same thread tries to enter any other kind of mutex more than once, the behavior is undefined.
If the same value is passed to multiple invocations of the same SQL function during query execution, under some circumstances the associated metadata may be preserved.
If the scalar isn't a number, or the rule is stricter than NPY_SAFE_CASTING, use the straight type-based rules
If the scaling needed for A in the dot product is 1, call CDOTC to perform the dot product.
If the scaling needed for A in the dot product is 1, call CDOTU to perform the dot product.
If the scaling needed for A in the dot product is 1, call ZDOTC to perform the dot product.
If the scaling needed for A in the dot product is 1, call ZDOTU to perform the dot product.
If the schema changes, these column names might changes and so the view will need to be reset.
If the schema-cookie from the database file matches the cookie  stored with the in-memory representation of the schema, do not reload the schema from the database file.
If the second argument is 2 or more and exclusive transaction is started, meaning that no other process is allowed to access the database.
If the second argument is SQLITE_FULL, SQLITE_IOERR or one of the IOERR sub-codes, the pager enters the ERROR state and the error code is stored in Pager.errCode.
If the second argument is a Hash, and the matched text is one of its keys, the corresponding value is the replacement string.
If the second argument is not NULL, then its contents are prepended to  the returned expression text and then freed using sqlite3_free().
If the second argument passed to this function is zero, then the indirect flag is cleared.
If the second argument to this function is NULL, generate a  temporary file name to use
If the second argument to this function is NULL, generate a temporary file name to use
If the second argument to this function is NULL, the object is allocated by calling sqlite3ValueNew().
If the second argument were replaced with NULL, the "rbu" VFS would access the file-system via the system default VFS, bypassing the multiplexor.
If the second parameter is greater than 0 and the sub-journal is not already open, then it will be opened here.
If the second parameter is present, it specifies the position in the string to begin the search.
If the second parameter is present, it specifies the position in the string to end the search---characters beyond this point will not be considered.
If the sector size isn't a multiple of 512 then it isn't valid.
If the secure_delete option is enabled, then always fully overwrite deleted information with zeros.
If the seekResult parameter is 0, then cursor pCur may point to any entry or to no entry at all and so this function has to seek the cursor before the new key can be inserted.
If the seekResult parameter is non-zero, then a successful call to MovetoUnpacked() to seek cursor pCur to (pKey, nKey) has already been performed.
If the seekResult parameter is non-zero, then the caller guarantees that cursor pCur is pointing at the existing copy of a row that is to be overwritten.
If the segment fits entirely on a single leaf node, iRoot will be set to 0.
If the separator consists only of spaces, it matches one or more whitespace characters.
If the sequence counter is currently zero, jump to P2.
If the set  contains one or more NULL values, then the result of the expression is also NULL.
If the set contains no NULL values, then the result is 0.
If the set membership test fails, then the result of the  "x IN (...)" expression must be either 0 or NULL.
If the shapes match and a particular order is forced for both, use the more efficient CopyInto
If the shapes match exactly, do an n to n copy
If the shared-data extension is enabled, there may be multiple users of the Btree structure.
If the shared-memory file has not yet been opened, open it now.
If the sibling page assembled above was not the right-most sibling, insert a divider cell into the parent page.
If the sibling pages are not leaves, then the pointer map entry  associated with the right-child of each sibling may also need to be  updated.
If the siblings are not leaf pages of an intkey b-tree, then cell i is a divider cell.
If the siblings are not leaf pages of an intkey b-tree, then cell i was a divider cell.
If the size of any argument is less than the size of the initial array, +nil+ values are supplied.
If the size of the content area is extended, ppData is updated to point to the new start of the content area before returning.
If the size of the database file is not an integer multiple of the page-size, round down to the nearest page.
If the size of the database file is not an integer multiple of the page-size, round up the result.
If the size of the value in blob pPrev is zero, then this is the first term written to the node.
If the sizes and kinds are identical, but they're different custom types, then get a cast function
If the skip extends beyond the data currently in the buffer, the buffer can be marked empty so that the next read will cause a fill_input_buffer call that can suspend.
If the slot was already written to, a negative value is returned to indicate no new memory was allocated.
If the socket was originally blocking, set it back.
If the sorter cursor key contains any NULL values, consider it to be less than pVal.
If the sorter is running in single-threaded mode, then all PMAs generated are appended to a single temporary file.
If the sorter uses more than one task, then create the top-level  MergeEngine here.
If the source page size is smaller than the destination page size,  round up.
If the source pager is currently in a write-transaction, return SQLITE_BUSY immediately.
If the specified term is found on the page, then the iterator is left pointing to it.
If the specified term is greater than or equal to the term from the interior node, then all terms on the sub-tree  headed by node iChild are smaller than zTerm.
If the specified variable does not exist, returns +nil+.
If the sqlite3GlobalConfig.bLocaltimeFault variable is true then this routine will always fail.
If the sqlite3_finalize() call indicates that an error occurs, and the rbu handle error code is not already set, set the error code and error message accordingly.
If the sqlite_sequence table exists in this database, then update  it with the new table name.
If the sqlite_stat1 table is not present in the database, SQLITE_ERROR is returned.
If the sqlite_stat1.idx column is NULL, then the sqlite_stat1.stat column contains a single integer which is the (estimated) number of rows in the table identified by sqlite_stat1.tbl.
If the sqlite_statN tables do not previously exist, it is created.
If the src field has references, may need to clear them
If the src object will need a DECREF
If the src object will need a DECREF, get a function to handle that
If the src object will need a DECREF, set src_dtype
If the stack pointer reached the top (left the global function) increase the pointer and the top pointer.
If the start value lies in the current range, then simply set the new end point of the range to the end value passed as a parameter.
If the statement completed successfully, invoke the profile callback
If the statement is successfully recompiled, return SQLITE_OK.
If the statement journal is open and the page is not in it, then write the current page to the statement journal.
If the statement journal is open and the page is not in it, then write the page into the statement journal.
If the statement that caused this trigger to fire had an explicit ON CONFLICT, then use it.
If the statement transaction is being rolled back, also restore the  database handles deferred constraint counter to the value it had when  the statement transaction was opened.
If the statement transaction needs to be rolled back, the value of this counter needs to be restored too.
If the stream buffer contains more data than the caller requested, we can also avoid that costly step and simply return that data.
If the stream ctx disables SNI we're finished here
If the stream position is not at the start, we need to force the stdio layer to believe it's real location.
If the stream was fopencookied, we must NOT touch anything here, as the cookied stream relies on it all.
If the string can be stored without allocating memory, then it is.
If the string fits in the space exactly, it leaves out the NULL terminator and returns success.
If the string is all full, use the buffer
If the string is not an integer, just return 0.
If the string is not frozen, then duplicate the string freeze it and return it.
If the string is not frozen, then return the string itself.
If the string is too large (if it exceeds the SQLITE_LIMIT_LENGTH size limit) then no memory allocation occurs.
If the string zSignedIdent consists entirely of alpha-numeric characters, does not begin with a digit and is not an SQL keyword, then it is copied to the output buffer exactly as it is.
If the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered greater than the shorter one.
If the sub-journal was opened successfully (or was already open), write the journal record into the file.
If the subjInMemory argument is non-zero, then any sub-journal opened within this transaction will be opened as an in-memory file.
If the subjInMemory argument is zero, then any required sub-journal is implemented in-memory if pPager is an in-memory database,  or using a temporary file otherwise.
If the subpattern has no firstchar, set "none" for the whole branch.
If the subpattern set a required byte (or set a first byte that isn't really the first byte - see above), set it.
If the subquery gives a constant result, then iTable is -1.
If the subquery gives a different answer at different times during statement processing then iTable is the address of a subroutine that computes the subquery.
If the subquery has more than one element in its FROM clause, then expand the outer query to make space for it to hold all elements of the subquery.
If the subquery is not correlated and if we are not inside of a trigger, then we only need to compute the value of the subquery once.
If the subquery is the right term of a LEFT JOIN, then do not flatten.
If the subroutine is a forward reference, we can't deal with it until the end of the pattern, so return -3.
If the subscript is not a string or list of strings, return -1 and set view to NULL.
If the synchronization mode is turned off, GDBM does not wait for writes to be flushed to the disk before continuing.
If the synchronization mode is turned on, the database's in-memory state will be synchronized to disk after every database modification operation.
If the syscall fails, we are doomed.
If the syslog is already open, raises a RuntimeError.
If the system does set errno to EDEADLK, the default SQLITE_IOERR_XXX code will be returned.
If the system is so sick that we are unable to allocate a mutex, there is not much SQLite is going to be able to do.
If the table already has a primary key (and this is the second primary key) then create an error.
If the table being dropped is the table with the largest root-page number in the database, put the root page on the free list.
If the table being written  has no PRIMARY KEY, affected rows must be identified by rowid.
If the table cannot be found, an error code is returned and the output variables are undefined.
If the table has a virtual root page, then the cursor is moved to point to the virtual root page instead of the actual root page.
If the table has an INTEGER PRIMARY KEY column and that column is named in the IDLIST, then record in the ipkColumn variable the index into IDLIST of the primary key column.
If the table has an INTEGER PRIMARY KEY, then Table.iPKey is the index of the column that is that key.
If the table has an explicit IPK, use its name.
If the table has at least 64 columns and any column to the right of the first 63 is required, then bit 63 of colUsed is also set.
If the table identified by  FROM clause element pItem is really a common-table-expression (CTE)  then return a pointer to the CTE definition for that table.
If the table is not located in the temp-db (in which case NULL is  returned, loop through the tables list of triggers.
If the table or index is not empty, fall through to the following  instruction.
If the tables are compatible but do not have any PRIMARY KEY columns, it is not an error but no changes are added to the session object.
If the target database table has an INTEGER PRIMARY KEY, it is not  possible to insert a NULL value into the IPK column.
If the target database table is a virtual table or a table with no PRIMARY KEY, the rbu_control value should not include a character corresponding  to the rbu_rowid value.
If the target encoding was unknown, fail
If the target encoding was unknown, or no decoder function was specified, return the UTF-8-encoded data as-is.
If the target table column is an "INTEGER PRIMARY KEY", add "PRIMARY KEY" to the imposter table column declaration.
If the temp database has been explicitly named as part of the  pragma, make sure it is open.
If the term has a alias, then pAlias points to the alias token.
If the term has an alias, then pAlias points to the alias token.
If the term is a subquery, then pSubquery is the SELECT statement that the subquery encodes.
If the text contains no host parameters, return the total number of bytes in the text.
If the third argument is non-NULL, then this function releases a  reference obtained by an earlier call to unixFetch().
If the third argument is non-NULL, then this function releases a  reference obtained by an earlier call to winFetch().
If the third argument is non-NULL, then this function releases a reference obtained by an earlier call to winFetch().
If the third parameter is less than -1 or greater than 127 then the behavior is undefined.
If the third parameter, discard, is non-zero, then the page must be evicted from the cache.
If the thread was impersonating already, this function uses that impersonation context.
If the thread was interrupted, we reacquire the GVL to execute interrupts before continuing.
If the time limit expires, +nil+ will be returned, otherwise +thr+ is returned.
If the timer is not restarted properly, it could hang in the shutdown function.
If the title case character is empty, then make it the same as the upper case.
If the title case character is not present, then make it the same as the upper case.
If the tokenization was abandoned early because the callback returned SQLITE_DONE, this is not an error and this function still returns SQLITE_OK.
If the trace method isn't included in the given events filter, a RuntimeError is raised.
If the transaction count  reaches 0, set the shared state to TRANS_NONE.
If the transaction counter is modified, record that fact too.
If the transaction counter is not updated, other connections to the same file might not realize that the file has changed and hence might not know to flush their cache.
If the transaction is committed or rolled back while  in WRITER_LOCKED state, all that is required is to unlock the database  file.
If the transition out of exclusive-mode is successful, return 1.
If the translation is between UTF-16 little and big endian, then  all that is required is to swap the byte order.
If the trigger name was unqualified, and the table is a temp table, then set iDb to 1 to create the trigger in the temporary database.
If the two P1 values differ, then set the P1 value on this opcode to equal the P1 value on the OP_Init and fall through.
If the two checksums are identical, the integrity-check is deemed to have passed.
If the two dtypes are actually references to the same object or if casting type is forced unsafe then always OK.
If the two snapshot handles are not associated with the same database  file, the result of the comparison is undefined.
If the two statements contain a different number of bindings, then an SQLITE_ERROR is returned.
If the two values are of different types, then numbers are considered less than strings and strings are considered less than blobs.
If the two values were equal, then the value from the oldest PMA should be considered smaller.
If the type has refs, this function moves them so the buffer's refs are released.
If the type is changed.
If the type is custom and there are userloops, search for it here
If the type is flexible, determine its size
If the type tuple isn't a single-element tuple, let the default type resolution handle this one.
If the type was multidimensional, collapse that part to 1-D
If the type's precision is greater than days, return a datetime
If the type's precision is greater than microseconds, is Y/M/B (nonlinear units), or is generic units, return an int
If the type's precision is greater than microseconds, return an int
If the types aren't equivalent, a cast is necessary
If the ufunc has userloops, search for them.
If the underlying data already does that, no need to copy it.
If the underlying platform doesn't define a constant the corresponding Ruby constant is not defined.
If the underlying stream operations block when no new data is readable, we need to take extra precautions.
If the unlock attempt fails, then Pager.eLock must be set to UNKNOWN_LOCK (see the comment above the #define for  UNKNOWN_LOCK above for an explanation).
If the unlock operation fails as well, then the first error code related to the first error encountered (the journal finalization one) is returned.
If the unscaled problem will not cause overflow, the Level 2 BLAS routine CTRSV is called.
If the unscaled problem will not cause overflow, the Level 2 BLAS routine ZTRSV is called.
If the unserialization failed, mark all elements that have been added to var_hash as NULL.
If the update-hook or pre-update-hook will be invoked, set zDb to the name of the db to pass as to it.
If the upper layer is doing a rollback, it is guaranteed that there are no outstanding references to any page other than page 1.
If the useJournal flag is clear, the journal-mode must be "OFF".
If the user decided to close the statement right after execute() We have to call the appropriate use_result() or store_result() and clean.
If the user didn't specify a width or height for the node, set the dimensions based on the children.
If the user does have a later shutdown function which needs the session then tough luck.
If the user explicitly specified a likelihood() value for this term, then the return value is the likelihood multiplied by the number of input rows.
If the user has not indicated to use localtime_r() or localtime_s() already, check for an MSVC build environment that provides  localtime_s().
If the user is not found, +ArgumentError+ will be raised.
If the user specified a negative value for the languageid, use zero instead.
If the user then queries for '1st + place', the tokenizer substitutes "first" for "1st" and the query works as expected.
If the vacuum has finished, jump to instruction P2.
If the val type does not match variant value type(vartype), then val is changed to match variant value type(vartype) before setting val.
If the value does not exist, this method returns nil.
If the value given is +nil+ the environment variable is deleted.
If the value in  register P1 is zero, then the result is NULL.
If the value in "options" is zero, it just means we have found all possible matches, so the loop ends.
If the value in P1 is NULL then take the jump if P3 is non-zero.
If the value in P1 is NULL then take the jump if P3 is zero.
If the value in P1 is NULL then take the jump if and only if P3 is non-zero.
If the value in register P1 is  NULL, then a NULL is stored in P2.
If the value in register P1 is zero the result is NULL.
If the value in register P3 is not NULL, then this routine is a no-op.
If the value in the z-vector is small, we simply permute the array so that the corresponding singular value is moved to the end.
If the value is +:text+ #encode replaces undefined characters with their (upper-case hexadecimal) numeric character references.
If the value is a string or blob, then the copy is only a pointer to the original and hence if the original changes so will the copy.
If the value is being opened for writing, check that the column is not indexed, and that it is not part of a foreign key.
If the value is nil no conversion occurs.
If the value is not found +nil+ is returned.
If the value is not set, the yield returns nil.
If the value is numeric, convert it to a string first.
If the value is numeric, convert it to a string using the equivalent of sprintf().
If the value is text or blob, try to convert it to an integer using the equivalent of atoi() and store 0 if no such conversion is possible.
If the value is text or blob, try to convert it to an integer using the equivalent of atoi() and store 0.0 if no such conversion is possible.
If the value of P is something other than an integer, then zero is returned.
If the value of register P1 is 1 or greater, subtract P3 from the value in P1 and jump to P2.
If the value of the stack variable bDescDoclist is 0 when this macro is invoked, then it returns (i1-i2).
If the value passed as the third argument is a blob of size sizeof(Fts3Cursor*), then the blob contents are copied to the  output variable *ppCsr and SQLITE_OK is returned.
If the value passed is SQLITE_TRANSIENT, then the  string is copied into a (possibly existing) buffer managed by the  Mem structure.
If the value which is too small to be represented is negative, a BigDecimal value of negative zero is returned.
If the virtual table pVtab supports the transaction interface (xBegin/xRollback/xCommit and optionally xSync) and a transaction is not currently open, invoke the xBegin method now.
If the wal-header appears to be corrupt, try to reconstruct the wal-index from the WAL before returning.
If the wal-index header is still malformed even while holding a WRITE lock, it can only mean that the header is corrupted and needs to be reconstructed.
If the wal-index header is successfully read, return SQLITE_OK.
If the whole buffered loop structure remains the same, and the source pointer for this data didn't change, we don't have to copy the data again.
If the word contains digits, 3 bytes are taken from the beginning and 3 bytes from the end.
If the word ends with zFrom and xCond() is true for the stem of the word that preceeds the zFrom ending, then change the  ending to zTo.
If the word was quoted, *pbQuoted is also set to 1 before returning.
If the workspace had to be expanded, free the new memory.
If the write version is set to 2, this database should be accessed in WAL mode.
If the writeOnly flag is true and an error is encountered while  saving the current position of a read-only cursor, all cursors,  including all read-cursors are tripped.
If the writeOnly flag is true, then only write-cursors need be tripped - read-only cursors save their current positions so that they may continue  following the rollback.
If the writer lock cannot be obtained, then a passive checkpoint is run instead.
If the wtFlags argument includes TERM_DYNAMIC, then responsibility for freeing the expression p is assumed by the WhereClause object pWC.
If the xBegin call is successful, place the sqlite3_vtab pointer in the sqlite3.aVTrans array.
If the xBestIndex method sets this flag, SQLite assumes that the strategy may visit at most one row.
If the xDelete parameter was not NULL, it is invoked on the auxiliary data pointer before returning.
If the xFileControl(FCNTL_SIZE_HINT) method is called, dbHintSize is increased to the number of pages that correspond to the size-hint passed to the method call.
If the xMutexAlloc method has not been set, then the user did not install a mutex implementation via sqlite3_config() prior to  sqlite3_initialize() being called.
If the xOutput callback successfully processes the supplied data, it should return SQLITE_OK to indicate success.
If the xSectorsize() method  returns a value larger than this, then MAX_SECTOR_SIZE is used instead.
If the xSleep() method of the default VFS is not implemented correctly, or not implemented at all, then the behavior of sqlite3_sleep() may deviate from the description in the previous paragraphs.
If the year is outside the range of years supported by Python's datetime, or the datetime64 falls on a leap second, return a raw int.
If the years are not in this range, then get_localtime() will fail on some platforms.
If the zFilename parameter to xOpen is a NULL pointer then xOpen must invent its own temporary name for the file.
If the zMask string does not specify any columns to update, then this is not an error.
If the zNum value is representable as a 64-bit twos-complement  integer, then write that value into *pNum and return 0.
If the zero finder fails, the computation is terminated.
If the zval is not a GMP instance, then we try to convert the value to a temporary gmp number using convert_to_gmp.
If then the consuming instruction of this result will perform a double cast anyway, the conversion is safe.
If then_trap is not NULL, this structure contains the real then_trap for the backtracking path.
If there are 2 exactly digits, we're done, regardless of what they contain
If there are DELETE triggers on this table and the recursive-triggers flag is set, call GenerateRowDelete() to remove the conflicting row from the table.
If there are SORTER_MAX_MERGE_COUNT or less PMAs in file pTemp1, initialize an iterator for each of them and break out of the loop.
If there are TEMP triggers on this table, modify the sqlite_temp_master table.
If there are active savepoints and any of them were created  since the most recent journal header was written, update the  PagerSavepoint.iHdrOffset fields now.
If there are active savepoints, open the sub-journal as well.
If there are any active VMs (apart from this one), then a ROLLBACK fails.
If there are any allocated outputs or any copies were made, adjust op so that the other iterators use the same ones.
If there are any codes in the temporary decomposition array, then add the character with its decomposition.
If there are any differences, an error is returned.
If there are any reduction operands, we may have to make the size smaller so we don't copy the same value into a buffer twice, as the buffering does not have a mechanism to combine values itself.
If there are any triggers to fire, allocate a range of registers to use for the old.* references in the triggers.
If there are any write-transactions at all, invoke the commit hook
If there are currently less than nSavepoints open, then open one or more savepoints to make up the difference.
If there are currently more than nMaxPage pages allocated, try to recycle pages to reduce the number allocated to nMaxPage.
If there are different collating sequences or if the columns of the constraint occur in different orders, then the constraints are considered distinct and both result in separate indices.
If there are dirty pages in the page cache with page numbers greater than Pager.dbSize, this means sqlite3PagerTruncateImage() was called to make the file smaller (presumably by auto-vacuum code).
If there are entries to insert..
If there are fewer than 2 digits, add zeros until there are 2, if there's enough room
If there are fields, need to do each field
If there are less that (P2+1)  values in the record, extract a NULL.
If there are more than +size+ bytes already in the buffer, the buffer is truncated.
If there are more than 32 columns in the table, and at least one of the columns with an index greater than 32 may be accessed, 0xffffffff is returned.
If there are more than SORTER_MAX_MERGE_COUNT PMAs in total when  Rewind() is called, then a hierarchy of incremental-merges is used.
If there are more than enough dims, use AssignFromSequence because it can handle this style of broadcasting.
If there are multiple PATHs, then return a JSON array with the result from each path.
If there are multiple eigenvalues then the problem deflates.
If there are multiple predecessors in the target block, we need to place a phi there.
If there are multiple singular values then the problem deflates.
If there are multiple triggers, you might of some BEFORE and some AFTER.
If there are no LEFT or CROSS JOIN joins in the query, both mPrereq and mUnusable are set to 0.
If there are no NULLs in the RHS then jump to destIfFalse.
If there are no active VMs, invalidate any pre-compiled statements.
If there are no active cursors, it also releases the read lock.
If there are no aggregate functions in the result-set, and no GROUP BY  expression, do not allow aggregates in any of the other expressions.
If there are no alternatives, it points to the end of the group.
If there are no entries in the input position list for column iCol, then pnList is set to zero before returning.
If there are no fancy indices, this is the result of the indexing operation.
If there are no inequality constraints, then N is at least one.
If there are no matches, jump immediately to P2.
If there are no matches, set the Node.bEof flag to indicate EOF.
If there are no more deletegated values, resume the generator after the "yield from" expression.
If there are no more entries in the doclist, set pOffsetList to NULL.
If there are no other statements currently running, then reset the interrupt flag.
If there are no pages in the WAL with a page number larger than *piPage, then return 1.
If there are no records  greater than or equal to the key and P2 is not zero, then jump to P2.
If there are no records  less than or equal to the key and P2 is not zero, then jump to P2.
If there are no records greater than  the key and P2 is not zero, then jump to P2.
If there are no records less than  the key and P2 is not zero, then jump to P2.
If there are no references and the data types are equivalent, return a simple copy
If there are no references, it's a nop
If there are no references, just set the whole thing to zero
If there are no triggers that fire at the specified time for the specified operation on pTab, this function is a no-op.
If there are not enough bytes left in the journal file for a complete header, or it is corrupted, then a process must have failed while writing it.
If there are not, there is no need to check if deleting this row resolves any outstanding violations.
If there are now no dirty pages in the cache, set eCreate to 2.
If there are one or more BEFORE triggers, then do not populate the registers associated with columns that are (a) not modified by this UPDATE statement and (b) not accessed by new.* references.
If there are one or more deferred tokens, load the current row into memory and scan it to determine the position list for each deferred token.
If there are other active statements that belong to this database handle, downgrade to a read-only transaction.
If there are outstanding FK violations and this function returns  SQLITE_ERROR, set the result of the VM to SQLITE_CONSTRAINT_FOREIGNKEY and write an error message to it.
If there are outstanding deferred foreign key constraint violations, return SQLITE_ERROR.
If there are outstanding locks, do not actually close the file just yet because that would clear those locks.
If there are outstanding sqlite3_stmt or sqlite3_backup objects or if the connection has not yet been closed by sqlite3_close_v2(), then just leave the mutex and return.
If there are still other outstanding references to the shared-btree structure, return now.
If there are subarrays, need to wrap it
If there are two or more cursors on the same btree, then all such  cursors should have their BTCF_Multiple flag set.
If there are two or more cursors on the same btree, then all such cursors *must* have the BTCF_Multiple flag set.
If there are two separated reduction axes, we may have to cut the buffer short again.
If there are user-loops search them first.
If there are waiting enqueuing threads, they are interrupted by raising ClosedQueueError('queue closed').
If there are zero reduction axes, make the view empty
If there are, SQLITE_LOCKED is returned.
If there aren't any more files it has no effect.
If there currently exists a writer, and p is not that writer, then the number of locks held by connections other than the writer must be about to drop to zero.
If there ever are characters outside the BMP whose othercase differs in only one bit from itself (there currently are none), this code will need to be revised for COMPILE_PCRE32.
If there has been exactly one prior match and this match is for the right-hand table of a NATURAL JOIN or is in a  USING clause, then skip this match.
If there is a "*-oal" file in the file-system corresponding to the target database in the file-system, delete it.
If there is a '+' at the start of s, positive values are returned with a leading '+'.
If there is a GROUP BY clause we might need a sorting index to implement it.
If there is a LIMIT clause, the parser sets nLimit to the value of the limit and nOffset to the value of the offset (or 0 if there is not offset).
If there is a NOT NULL constraint, then the default value for the column must not be NULL.
If there is a WAL file in the file-system, open this database in WAL mode.
If there is a back-edge to "to" this may result in non-minimal SSA form.
If there is a destructor routine associated with the token which is popped from the stack, then call it.
If there is a difference, try to fix the destination to agree with the source.
If there is a doclist-index
If there is a doclist-index, check that it looks right.
If there is a gap, that gap is added to the fragmentation count.
If there is a match, fall through and leave the P1 cursor pointing to the matching row.
If there is a matching node and we're at the end of the HDF name, then we update the value of the node
If there is a reference to page 1 and the pgno parameter passed to this function is 0, then the data area associated with page 1 is zeroed, but the page object is not dropped.
If there is a result set, it follows.
If there is a row with a matching primary key in the database, but all fields contain their original values, no change is added to the changeset.
If there is a schema mismatch on the current table, proceed to the next change.
If there is a second table, add or remove it as required.
If there is a set first byte for the group, and we have not yet set a "required byte", set it.
If there is a size limit configured for  the persistent journal and the journal file currently consumes more space than that limit allows for, truncate it now.
If there is a table-filter configured, invoke it.
If there is a transaction in progress, this routine is a no-op.
If there is a tuple as a single argument, treat it as the argument
If there is a vector IN term - e.g. "(a, b) IN (SELECT ...)" - create a virtual term for each vector component.
If there is a write-transaction spanning more than one database file, this routine takes care of the master journal trickery.
If there is already a lock of this type or more restrictive on the OsFile, do nothing.
If there is already a lock of this type or more restrictive on the unixFile, do nothing.
If there is already an auxiliary data pointer when this function is invoked, then it is replaced by the new pointer.
If there is also an OFFSET clause with a positive value, then the first OFFSET outputs are discarded rather than being sent to pDest.
If there is an ID and strict mode, verify existence
If there is an ORDER BY clause on a term of a compound-select other than the right-most term, then that is a syntax error.
If there is an ORDER BY clause, then create an ephemeral index to do the sorting.
If there is an ORDER BY clause, then this sorting index might end up being unused if the data can be  extracted in pre-sorted order.
If there is an ORDER BY clause, then we need to sort the results and send them to the callback one by one.
If there is an action associated with the FK  for this operation (either update or delete), invoke the associated  trigger sub-program.
If there is an error in the Parse structure, set the return code to 1.
If there is an escape character E,   A LIKE B ESCAPE E  is mapped to like(B, A, E).
If there is an overlap, that means bytes are used multiple times.
If there is any chance that the (...) might contain a NULL value at runtime, then a register is allocated and the register number written to *prNotFound.
If there is any kind of error, return ((unsigned int)-1).
If there is anything beyond end_word, copy it
If there is anything other than a rowset object in memory cell P1, delete it now and initialize P1 with an empty rowset
If there is are a sequence of queries, do the earlier ones first.
If there is at least one such segment, and it is possible to determine that all  such segments are smaller than nLimit bytes in size, they will be  promoted to level iAbsLevel.
If there is both a MATCH constraint and a direct rowid/docid lookup, prefer the MATCH strategy.
If there is buffered data available, we check for a EOL.
If there is cached matchinfo() data, but the format string for the  cache does not match the format string for this request, discard  the cached data.
If there is data, jump to P2
If there is insufficient space allocated at StrBuffer.z, use realloc() to grow the buffer until so that it is big enough to accomadate the appended data.
If there is insufficient space in *ppFrom to satisfy the request, then increment *pnByte by the amount of the request.
If there is just one branch, we must not make use of its firstchar or reqchar, because this is equivalent to an empty second branch.
If there is more header available for parsing in the record, try to extract additional fields up through the p2+1-th field
If there is more than one MATCH constraint available, use the first one encountered.
If there is more than one table or sub-select in the FROM clause of this query, then it will not be possible to show that the DISTINCT  clause is redundant.
If there is nesting, the nested iterators should be reset
If there is no "next" entry and no error occurs, then *pbEof is set to 1 before returning.
If there is no AS clause then the name of the column is unspecified and may change from one release of SQLite to the next.
If there is no ID, use session module to create one
If there is no IDLIST term but the table has an integer primary key, the set the ipkColumn variable to the integer primary key  column index in the original table definition.
If there is no ORDER BY clause or if this routine is called from an UPDATE or DELETE statement, then pOrderBy is NULL.
If there is no attached database N on the database connection D, or if database N is a temporary or in-memory database, then a NULL pointer is returned.
If there is no blocking connection, the callback is invoked immediately, before this routine returns.
If there is no chance that the (...) contains a NULL value, then *prNotFound is left unchanged.
If there is no chance that the (...) contains a NULL value, then *prRhsHasNull is left unchanged.
If there is no defined collating sequence, return NULL.
If there is no fancy indexing, we have the array to assign to
If there is no fancy indexing, we have the result
If there is no foreign key related processing, this function  returns false.
If there is no larger type of this kind, try a larger kind
If there is no limit and/or offset, then  iLimit and iOffset are negative.
If there is no match, +nil+ is returned.
If there is no match, or if pE is not a simple identifier, then this routine return 0.
If there is no match, return 0.
If there is no next term, SQLITE_DONE.
If there is no open read-transaction on the source database, open one now.
If there is no open transaction, then mark this as a special "transaction savepoint".
If there is no original file, or if we can't read the DACL, we'll use the default security descriptor.
If there is no partial buffer, write one _bf._size byte chunk directly (without copying).
If there is no shared memory associated with the connection then this routine is a harmless no-op.
If there is no space left in the queue, waits until space becomes available, unless +non_block+ is true.
If there is no statement handle, then the blob-handle has already been invalidated.
If there is no such record in the table, set ppLeaf to 0 and return SQLITE_OK.
If there is no such savepoint, then an an error is returned to the user.
If there is no such term in the hash-table, the  iterator is set to EOF.
If there is no such term in the index, the iterator is set to EOF.
If there is no transition time, we pick the first one, if that doesn't exist we return NULL
If there is no type specified, columns have the default affinity 'BLOB'.
If there is no type specified, columns have the default affinity 'NONE'.
If there is no value associated with _key_, _default_ will be returned instead.
If there is no value that satisfies the condition, it returns nil.
If there is no variable with the given name, return 0.
If there is no work to do (and therefore no point in  calling this function again), return SQLITE_DONE.
If there is not a recovery running in another thread or process then convert BUSY errors to WAL_RETRY.
If there is not already a read-only (or read-write) transaction opened on the b-tree database, open one now.
If there is not currently a writer, then BTS_PENDING must be zero already.
If there is not enough free space in pNode, return SQLITE_FULL.
If there is not enough room in the buffer for the additional text, just skip it.
If there is not, return SQLITE_OK.
If there is one reduction axis, adjust the view's shape to only look at the remaining elements
If there is only one branch in a condition, the implied branch has zero length, so we don't add anything.
If there is only one element being iterated, we just have to touch the first AXISDATA because nothing will ever be incremented.
If there is space in the offset vector, save the current subject position in the working slot at the top of the vector.
If there is space in the offset vector, set any unused pairs at the end of the pattern to -1 for backwards compatibility.
If there is space, set up the whole thing as substring 0.
If there is still no match, the next context is checked.
If there is, and that master journal file does not exist, then the journal file is not really hot.
If there is, do not consider the lookup-by-rowid plan as using such a plan would require the VDBE to evaluate the MATCH constraint, which is not currently possible.
If there is, then we consider this journal to be hot.
If there isn't enough space in the offset vector, treat this as if it were a non-capturing bracket.
If there was a master journal and this routine will return success, see if it is possible to delete the master journal.
If there was an INDEXED BY clause, then only that one index is considered.
If there was an error, store the text of the error message in *pzErrMsg.
If there was any non-zero coordinate, the reduction inner loop doesn't fit in the buffersize, or the reduction inner loop covered the entire iteration size, can't do the double loop.
If there was no matching node at this level, we need to allocate an intersitial node (or the actual node if we're at the last part of the HDF name)
If there was no return value then just execute the query
If there was no return value then just skip fetching
If there were FTS5_MIN_DLIDX_SIZE or more empty leaf pages written to the database, also write the doclist-index to disk.
If there were a failure, the prepared statement would have halted before reaching this instruction.
If there were any lookbehind assertions that contained OP_RECURSE (recursions or subroutine calls), a flag is set for them to be checked here, because they may contain forward references.
If there were no axes to squeeze out, return the same array
If there were no changes, this block is skipped.
If there were no ones to squeeze out, return the same array
If there were no rowids on the leaf page either and the doclist-index has already been started, append an 0x00 byte to it.
If there were other file descriptors on this file, then no malloc would be required by findInodeInfo().
If there's a gap in the array's dimensions, it's an error.
If there's a match, the scanner advances the "scan pointer" and returns the matched string.
If there's a timezone, use at least minutes precision, and never split up hours and minutes by default
If there's an output being allocated, we must not negate any strides.
If there's just one type, pass it through
If there's no base, stop collapsing
If there's no buffering, the strides are always fixed
If there's no copy back, we may have to decrement refs.
If there's no first char and the pattern was studied, there may be a bitmap of possible first characters.
If there's no flex wrap, the cross dimension is defined by the container.
If there's no object associated then there's nothing to dispose of
If there's nothing to read, wait in 10ms periods.
If there's one dest element and src is a Python scalar
If there's only one dimension, no need to calculate anything
If these are 1, the conversions try to trigger underflow, overflow, and invalid exceptions in the FP system when needed.
If these journals become too large for memory, they are spilled to disk.
If these situations arise, then subsequent insert operations might corrupt the freelist.
If they actually want to perform the conversion, we need to switch the memory stream to a tmpfile stream
If they all start with OP_SOD or OP_CIRC, or with a bracket all of whose alternatives start with OP_SOD or OP_CIRC (recurse ad lib), then it's anchored.
If they are Integer, it is treated as the relative seconds from the current time.
If they are both enabled, then STAT4 takes precedence.
If they are called while some other thread is calling backup_step() or backup_finish(), the values returned may be invalid.
If they are if we can be a FILE*, say yes because we can perform the conversion.
If they are invoked at the same time as another thread is invoking sqlite3_backup_step() it is possible that they return invalid values.
If they are omitted or nil is given, the result is not restricted.
If they are sorted in ascending  order, it should be passed a non-zero value.
If they are sorted in ascending order, it should be passed a non-zero value.
If they are the same, zero is returned.
If they are zero, they must not be registers.
If they are, disable MEMSYS3
If they do not match the  magic string found at the start of each journal header, return SQLITE_DONE.
If they point to the same type, don't call promote
If they're built-in types, use the promotion table
If this  means that there is a hot-journal left in the file-system, the next  connection to obtain a shared lock on the pager (which may be this one)  will roll it back.
If this 'overflow' page happens to be a page that the caller is iterating through or using in some other way, this can be problematic.
If this API is called during stage 1 of the update, output variable  (*pnTwo) is set to 0 to indicate that stage 2 has not yet started.
If this Btree is a candidate for shared cache, try to find an existing BtShared object that we can share with
If this DELETE cannot use the ONEPASS strategy, this is the  end of the WHERE loop
If this RBU handle was opened for an RBU vacuum operation, create the schema in the target db.
If this allocation attempt  fails, SQLITE_NOMEM is returned and the page size remains unchanged.
If this array owns its own data, stop collapsing
If this array still has elements, add the current one to the parameter list, otherwise use null value.
If this assert() ever fires, it probably means that the KeyInfo.nField or KeyInfo.nXField values were computed incorrectly.
If this axis hasn't been touched yet, process it
If this block is freed, we still have (allocated_size / 2) free space.
If this call is successful, *ppPage is set to point to the wal-index page and SQLITE_OK is returned.
If this cannot be done an error is returned.
If this cannot be obtained, an error (SQLITE_BUSY) is returned and the log connection is not closed.
If this class implements Serializable, it should not land here but in object_custom().
If this condition is true then the largest rowid for the current term may not be stored on the current page.
If this connection writes to the database file, it will do so using an in-memory journal.
If this constraint cannot be satisfied by any child within the node, set *peWithin to NOT_WITHIN.
If this constraint is not satisfied, it means that the high-speed vdbeRecordCompareInt() and vdbeRecordCompareString() routines will not work correctly.
If this constraint is not satisfied, set *peWithin to NOT_WITHIN.
If this cursor is opened using  the 'hint' parameters, it is possible that there are less than nSeg segments available in level iAbsLevel.
If this cursor was opened expecting an index b-tree, then the caller should be inserting blob keys with no associated data.
If this database is not shareable, or if the client is reading and has the read-uncommitted flag set, then no lock is required.
If this database supports auto-vacuum and iPage is not the last page in this overflow list, check that the pointer-map entry for the following page matches iPage.
If this dimension was added or shape of underlying array was 1
If this doesn't work,  an equivalent collating sequence that uses a text encoding different from the main database is substituted, if one is available.
If this extension is built as part of the sqlite library, then this function is called directly by SQLite.
If this fails (for instance, if another process has already opened the database as a reader), it will try to open the database file as a reader (cf.
If this fails (picked up above) we advance to the next character.
If this fails, it will be opened in read-only mode.
If this fails, then there is no matching parent key.
If this fails, we cannot continue.
If this field doesn't follow the pattern, not a simple layout
If this field has objects, check for overlaps
If this file has been purchased on magnetic or optical media from Unicode, Inc., the sole remedy for any claim will be exchange of defective media within 90 days of receipt.
If this file is compiled as part of the amalgamation, they are not required.
If this frame set completes the first transaction in the WAL and if PRAGMA journal_size_limit is set, then truncate the WAL to the journal size limit, if possible.
If this function does return a pointer, the caller must eventually  release the reference by calling unixUnfetch().
If this function does return a pointer, the caller must eventually  release the reference by calling winUnfetch().
If this function does return a pointer, the caller must eventually release the reference by calling winUnfetch().
If this function fails, close the mcrypt module to prevent crashes when further functions want to access this resource
If this function is being called as part of an xConnect(), then the rtree table already exists.
If this function is called when the iterator does not point to a valid entry, SQLITE_MISUSE is returned and the output variables zeroed.
If this function is called with parameters that attempt to write past the end of the existing data, no modifications are made and SQLITE_CORRUPT is returned.
If this function returns SQLITE_ROW, the caller must eventually reset()  statement pSelect.
If this group is at or above the current highwater mark, ensure that any groups between the current high water mark and this group are marked unset and then update the high water mark.
If this happens a hot-journal may be mistaken for a journal being created by an active transaction in another process, causing SQLite to read from the database without rolling it back.
If this happens in exclusive  mode, then subsequent transactions performed by the connection will not update the change-counter at all.
If this happens, it is almost certain that an open() call on the same path will also fail.
If this happens, it is the responsibility of the caller to invoke the correct balancing routine to fix this problem (see the balance() routine).
If this happens, it is time to exit.
If this happens, return SQLITE_IOERR_RDLOCK.
If this happens, return non-zero.
If this happens, the next interation of the do-loop will balance pParent  use either balance_nonroot() or balance_deeper().
If this happens, the next iteration of the do-loop will balance pParent  use either balance_nonroot() or balance_deeper().
If this happens, then all  subsequent calls to sqlite3_blob_xxx() functions (except blob_close())  immediately return SQLITE_ABORT.
If this has to be a scalar SELECT.
If this image is the result of alpha channel blending, it will not contain an interesting alpha channel itself.
If this index contains every column of its table, then mark it as a covering index
If this instruction attempts to get a read lock but fails, the script terminates with an SQLITE_BUSY error code.
If this instruction implements a COMMIT and other VMs are writing return an error indicating that the other VMs must complete first.
If this instruction implements a ROLLBACK and other VMs are still running, and a transaction is active, return an error indicating that the other VMs must complete first.
If this integer is non-zero, then it is the root page number of a table moved to location iTable.
If this interface is invoked outside the context of an xConnect or xCreate virtual table method then the behavior is undefined.
If this is None, no function call is made --- default sub-class behavior
If this is a "NEAR" keyword, check for an explicit nearness.
If this is a CREATE TABLE xx AS SELECT ..., execute the SELECT statement to populate the new table.
If this is a DELETE or UPDATE operation, remove the old record.
If this is a REPLACE, first remove the current entry (if any)
If this is a TEMPORARY table, write the entry into the auxiliary file instead of into the main database file.
If this is a WAL database, obtain a snapshot handle for the snapshot currently open.
If this is a WAL database, store a pointer to pSnapshot.
If this is a blocking-checkpoint, then obtain the write-lock as well to prevent any writers from running while the checkpoint is underway.
If this is a capturing subpattern, add to the chain of open capturing items so that we can detect them if (*ACCEPT) is encountered.
If this is a commit, update the wal-index header too.
If this is a conditional bracket, check that there are no more than two branches in the group, or just one if it's a DEFINE group.
If this is a converted compound query, move the ORDER BY clause from  the sub-query back to the parent query.
If this is a database file (not a journal, master-journal or temp file), the bytes in the locking range should never be read or written.
If this is a deferred FK constraint, or a CASCADE or SET NULL action applies, then any foreign key violations caused by removing the parent key will be rectified by the action trigger.
If this is a delete operation to remove a row from a table b-tree, invalidate any incrblob cursors open on the row being deleted.
If this is a development build of ruby the patchlevel will be -1
If this is a leaf page or the tree is not an int-key tree, then  this page contains countable entries.
If this is a main database file and the file was opened using a URI filename, check for the "modeof" parameter.
If this is a multi-line flow and this item pushes us over the available size, we've hit the end of the current line.
If this is a new rowid, append the 4-byte size field for the previous entry, and the new rowid for this entry.
If this is a new term, query for it.
If this is a no-op implementation, implement everything as macros.
If this is a non-composite (single column) foreign key, check if it  maps to the INTEGER PRIMARY KEY of table pParent.
If this is a non-covering index scan, add in the cost of doing table lookups.
If this is a non-covering index scan, also add the cost of visiting table rows (N*3.0).
If this is a prefix query, check that the results returned if the the index is disabled are the same.
If this is a problem for you, do not use the interface at this time.
If this is a real table, attempt conversions as required by the table column affinities.
If this is a reduction dimension and the coordinate is not at the start, it's definitely not the first visit
If this is a release of the outermost savepoint, truncate  the sub-journal to zero bytes in size.
If this is a rollback of a savepoint and data was not written to the database and the page is not in-memory, there is a potential problem.
If this is a savepoint rollback, then memory may have to be dynamically allocated by this function.
If this is a scalar select that is part of an expression, then store the results in the appropriate memory cell and break out of the scan loop.
If this is a scalar select that is part of an expression, then store the results in the appropriate memory cell or array of  memory cells and break out of the scan loop.
If this is a scan, then this call must be being made by an fts4aux module, not an FTS table.
If this is a temp-file, it is possible that the journal file has not yet been opened.
If this is a view, then the only effect this statement has is to fire the INSTEAD OF  triggers.
If this is a virtual table, invoke the xRename() function if one is defined.
If this is an "uninteresting picture" ignore it.
If this is an AUTOINCREMENT table, look up the sequence number in the sqlite_sequence table and store it in memory cell regAutoinc.
If this is an EXISTS, write an integer 0 (not exists) or 1 (exists) into a memory cell and record that memory cell in iColumn.
If this is an EXISTS, write an integer 0 (not exists) or 1 (exists) into a register and return that register number.
If this is an EXPLAIN, skip this step
If this is an INSERT into a table b-tree and the table has an explicit INTEGER PRIMARY KEY, check that this is not an attempt to write a NULL into the IPK column.
If this is an INSERT on a view with an INSTEAD OF INSERT trigger, do not attempt any conversions before assembling the record.
If this is an INSERT operation, or an UPDATE that modifies the rowid value, then this operation requires constraint handling.
If this is an INSERT or UPDATE operation, insert the new record.
If this is an INSERT or UPDATE, read the new.* record.
If this is an RBU vacuum handle and the vacuum has either finished successfully or encountered an error, delete the contents of the  state table.
If this is an RBU vacuum operation and the state table was empty when this handle was opened, create the target database schema.
If this is an RBU vacuum operation and this is the target database, pretend that it has at least one page.
If this is an SQLITE_CHECKPOINT_RESTART operation, and the entire wal file has been copied into the database file, then block until all readers have finished using the wal file.
If this is an SQLITE_CHECKPOINT_RESTART or TRUNCATE operation, and the entire wal file has been copied into the database file, then block  until all readers have finished using the wal file.
If this is an UPDATE or DELETE pre-update call, then cursor passed as the second argument should point to the row about to be update or deleted.
If this is an UPDATE or DELETE, read the old.* record.
If this is an UPDATE that is part of a patchset, then all PK and modified fields are present in the new.* record.
If this is an auto-vacuum database, the call to copyNodeContent()  sets all pointer-map entries corresponding to database image pages  for which the pointer is stored within the content being copied.
If this is an auto-vacuum database, update the pointer map with entries for the new page, and any pointer from the  cell on the page to an overflow page.
If this is an auto-vacuum database, update the pointer-map entries for any b-tree or overflow pages that pTo now contains the pointers to.
If this is an in-memory db, or no pages have been written to, or this function has already been called, it is mostly a no-op.
If this is an insert into a table b-tree, invalidate any incrblob  cursors open on the row being replaced
If this is an xCreate call, create the underlying tables in the  database.
If this is being called to read the first page of the target  database as part of an rbu vacuum operation, synthesize the  contents of the first page if it does not yet exist.
If this is called we are either in a TIFFs thumbnail or a JPEG where we cannot handle it
If this is greater than the usable-size of the page, then the page must be corrupted.
If this is it, and it's iterated forward, done
If this is it, but it's iterated backward, must reverse the axis
If this is non-NULL the source type has references needing a decref
If this is not a WAL database, return an error.
If this is not a base class array, we have to get the view through its very own index machinery.
If this is not a possibly empty group, and there are no (*THEN)s in the pattern, and this is the final alternative, optimize as described above.
If this is not a view, open the table and and all indices
If this is not currently true, make it true by defining or undefining NDEBUG.
If this is not done, then an unsynced portion of the open journal  file may be played back into the database.
If this is not the case, +false+ is returned.
If this is not the case, any changes applied so far are rolled back and the  call to sqlite3changeset_apply() returns SQLITE_MISUSE.
If this is not the case, return an SQLITE_CORRUPT error.
If this is not the case, this function fails with SQLITE_SCHEMA.
If this is not the first segment, 'pseg' will be nonzero.
If this is not the root-page, then the moveToChild() routine would have already detected db corruption.
If this is part of a compound SELECT, check that it has the right number of expressions in the select list.
If this is successful, 'shared byte range' is read-locked and the lock on the 'pending byte' released.
If this is successful, a random byte from the 'shared byte range' is read-locked and the lock on the 'pending byte' released.
If this is successful, register the module with sqlite.
If this is the INCRINIT_ROOT object, then it is running in the  main VDBE thread.
If this is the case and an allocation fails, SQLITE_NOMEM is returned.
If this is the case, clear the mallocFailed flag and return NULL.
If this is the case, it is quite safe to close handle h - as it is guaranteed that no posix locks will be released by doing so.
If this is the case, then an entry with a matching TriggerPrg.pTrigger field will be present somewhere in the Parse.pTriggerPrg list.
If this is the case, then search for the closing quote and pass the whole string to getNextString() for processing.
If this is the case, then the pointer map needs to be updated for the subsequent overflow page.
If this is the end of a transaction, then we might need to pad the transaction and/or sync the WAL file.
If this is the first branch, the firstchar and reqchar values for the branch become the values for the regex.
If this is the first code for this property list, just add it and return.
If this is the first frame written into the log, write the WAL header to the start of the WAL file.
If this is the first header read from the journal, truncate the database file back to its original size.
If this is the first node in the tree, the term is added to it.
If this is the first overflow page, then write a partial entry  to the pointer-map.
If this is the first row, then generate an extra row containing the names of all columns.
If this is the first term selected, copy the doclist to the output buffer using memcpy().
If this is the first thing in the branch, there can be no first char setting, whatever the repeat count.
If this is the magic sqlite_sequence table used by autoincrement, then record a pointer to this table in the main database structure so that INSERT can find the table easily.
If this is the main thread, or the last  thread, exit the process.
If this is the main thread, or the last thread, exits the process.
If this is the right table of a LEFT OUTER JOIN, allocate and initialize a memory cell that records if this table matches any row of the left table of the join.
If this is to be the first rowid written to the page, set the  rowid-pointer in the page-header.
If this is true, the GIL must be retained while iterating.
If this is true, then we need to reduce EMAX by one because there must be some way of representing zero in an implicit-b it system.
If this is true, then we need to reduce EMAX by one because there must be some way of representing zero in an implicit-bit system.
If this item is right at the start of the pattern, the options can be abstracted and made external in the pre-compile phase, and ignored in the compile phase.
If this journal was created by a process other than this one, then this routine is being called from within pager_playback().
If this leaves 0 positions, zero is returned.
If this line is _longer_ than MAXLINELEN, remember it.
If this match does not  * succeed, we still stay in the loop, advancing by just one character.
If this match succeeds, an alternative to the empty string   * match has been found, and we can print it and proceed round the loop,  * advancing by the length of whatever was found.
If this maximum height is greater than the current value pointed to by pnHeight, the second parameter, then set *pnHeight to that value.
If this means that the phrase does not appear in the current row, doclist.pList and doclist.nList are both zeroed.
If this means the iterator points to a value laster than *piLast, update *piLast to the new lastest value.
If this message is triggered you should increase the ZEND_MMAP_AHEAD value in the zend_streams.h file
If this method called, then the WIN32OLE_EVENT object does not receive the OLE server event any more.
If this module is being built as part of the SQLite core (SQLITE_CORE is defined), then sqlite3_open() will call sqlite3Fts5Init() directly.
If this module is built with SQLITE_TEST defined, these constants may be overridden at runtime for testing purposes.
If this operand is being reduced in the inner loop, its buffering stride was set to zero, and just one element was copied.
If this operand is being reduced in the inner loop, set its buffering stride to zero, and just copy one element.
If this operation fails,  (e.g. due to malloc() failure), return an error code.
If this operation is being performed as part of a trigger program that is actually a "SET NULL" action belonging to this very  foreign key, then omit this scan altogether.
If this operation returns an error, and the current statement error code is SQLITE_OK or SQLITE_CONSTRAINT, then promote the current statement error code.
If this page has already been played back before during the current rollback, then don't bother to play it back again.
If this page has already been played by before during the current rollback, then don't bother to play it back again.
If this parameter is set to zero, then memory mapping is not used at all.
If this path name begins with "/X:", where "X" is any alphabetic character, discard the initial "/" from the pathname.
If this phrase is applies specifically to some column other than  column iCol, return a NULL pointer.
If this pixel is transparent, we want to assign it to the special transparency color index past the end of the palette rather than go through matching / dithering.
If this process generates an invalid UTF-8 encoding, the results are undefined.
If this process is running as root and if creating a new rollback journal or WAL file, set the ownership of the journal or WAL to be the same as the original database.
If this process is running as root, make sure that the SHM file is owned by the same user that owns the original database.
If this program is fiddling signals just when the test program sends the signal, the signal may be delivered to a Go thread which will break this test.
If this realloc is really a realloc (ie: second time around), we get an extra byte.
If this reduction is non-reorderable, make sure there are only 0 or 1 axes in axis_flags.
If this results in a NOMATCH return, pass MATCH_ONCE back to the original OP_ONCE level, thereby bypassing intermediate backup points, but resetting any captures that happened along the way.
If this routine fails for any reason (malloc returns NULL or unable to read from the disk) then the pMem is left in an inconsistent state.
If this routine fails for any reason, it might leave the database in a corrupted state.
If this routine is  generating code because of a call to sqlite3NestedParse(), do not invoke the callback function.
If this routine returns 1 it means that the db pointer is valid and 0 if it should not be dereferenced for any reason.
If this routine returns an error, the value of *pp is undefined.
If this routine returns non-zero, the lock is retried.
If this row no longer exists  (this can happen if a trigger program has already deleted it), do not attempt to delete it or fire any DELETE triggers.
If this scan uses an index, make VDBE code substitutions to read data from the index instead of from the table where possible.
If this second attempt fails, the original row is restored to the database before continuing.
If this session is attached to a different database ("main", "temp"  etc.), or if it is not currently enabled, there is nothing to do.
If this statement has violated immediate foreign key constraints, do not return the number of rows modified.
If this table is the rhs of a LEFT JOIN, "IS" or "IS NULL" terms  that were specified as part of the WHERE clause must be excluded.
If this table is used instead of the above one, some of the special cases for the NEL character can be taken out of the code.
If this thread is already marked to be killed, #exit returns the Thread.
If this thread is already marked to be killed, ::exit returns the Thread.
If this trigger has been fired before, then pRt  is already allocated.
If this value is 0xffffffff, then compute the number of page records from the journal size.
If this value is specified or the environment variable LD_BIND_NOW is set to a nonempty string, all undefined symbols in the library are resolved before Fiddle.dlopen returns.
If this was a group that remembered the subject start, in order to break infinite repeats of empty string matches, retrieve the subject start from the chain.
If this was an INSERT, UPDATE or DELETE and no statement transaction has been rolled back, update the database connection change-counter.
If this was an atomic group and there are no capturing groups within it, generate OP_ONCE_NC instead of OP_ONCE.
If this was page 1, then restore the value of Pager.dbFileVers.
If this where not the case, on of the following assert()s would fail.
If this will satisfy the client, set the orderByConsumed flag so that  SQLite does not do an external sort.
If to_type_num is STRING or unicode see if the length is long enough to hold the stringified value of the object.
If token pTok does not contain "NEAR", store an error in the pParse object.
If tokenizers are to be allowed to call sqlite3_*() functions, then we will need a way to register the API consistently.
If too many are need, strip chars off the front of 'buf' until it fits.
If total space requirements never exceed n then no memory allocations ever occur.
If tracing is enabled (by the sqlite3_trace()) interface, then the UTF-8 string contained in P4 is emitted on the trace callback.
If triggers are not supported by this compile then the statement machine used to detect the end of a statement is much simpler
If triggers are not supported by this compile then the statement machine used to detect the end of a statement is much simplier
If tripCode is not SQLITE_OK then cursors will be invalidated (tripped).
If tripCode is not SQLITE_OK, then any open cursors are invalidated ("tripped" - as in "tripping a circuit breaker") and made to return tripCode if there are any further attempts to use that cursor.
If tripCode is not SQLITE_OK, then any write cursors are invalidated ("tripped" - as in "tripping a circuit breaker") and made to return tripCode if there are any further attempts to use that cursor.
If true, LHS of IN operator is a rowid
If true, bias the search to the high end
If true, create page if it does not exist already
If true, discard no data
If true, fsync() directory after deleting file
If true, jump if either operand is NULL
If true, pretend pTab contains all NULL values
If true, retrieve from the btree key, not data.
If true, skip the first field
If true, store 0 for segment size
If true, the file was configured to be automatically deleted when the file handle closed.
If true, then any required sub-journal is opened as an in-memory journal file.
If true, write dlidx to disk
If two adjacent free blocks are the halves of a larger block, then the two blocks are coalesced into the single larger block.
If two adjacent free blocks are the halves of a larger block, then the two blocks are coalesed into the single larger block.
If two arguments are specified, they must be encoding objects or encoding names.
If two arguments are specified, those must be encoding objects or encoding names, and the first one is the external encoding, and the second one is the internal encoding.
If two different VFSes with the same name are registered, the behavior is undefined.
If two optional arguments are specified, those must be encoding objects or encoding names, and the first one is the external encoding, and the second one is the internal encoding.
If two or more collating functions are registered to the same collation name (using different eTextRep values) then all must give an equivalent answer when invoked with equivalent strings.
If two or more threads call one or more of these routines against the same prepared statement and column at the same time then the results are undefined.
If type num is NPY_VOID and struct dtypes have been passed in, use struct dtype object.
If types of arguments have to be checked
If unable to  initialize the mutex subsystem, return early with the error.
If unable to establish the necessary locks, this routine returns SQLITE_BUSY.
If unable to make an estimate, leave *pnRow unchanged and return non-zero.
If undefined, make it a no-op.
If unsuccessful,  return NULL.
If used with no arguments, subsequently defined methods become module functions.
If user requests interlace, translate that to progressive JPEG
If user specified a positional argument, guess whether it represents a type or a dtype for backward compatibility.
If using custom function, copy result to the buffer and clean up.
If using separate RBU and state databases, attach the state database to the RBU db handle now.
If using the onepass strategy, no-op out the OP_OpenEphemeral coded above.
If value iVal is out-of-range or some other error occurs, an SQLite error code is returned.
If value iVal is out-of-range, SQLITE_RANGE is returned and *ppValue is not modified.
If value is not specified cookie is removed.
If values are not available for all fields of the index to the left of this one, no estimate can be made.
If variable 'count' is non-zero, then this OP_Delete instruction should invoke the update-hook.
If vfork() is used to create the child process and the parent or child process change effective UID/GID, different privileged processes shares memory.
If virtual-tables are in use, this is not just an optimization.
If w is complex, X and B are represented as NA x 2 matrices, the first column of each being the real part and the second being the imaginary part.
If wLibFlags of TLIBATTR is 0 or LIBFLAG_FRESTRICTED or LIBFLAG_FHIDDEN, the method returns false, otherwise, returns true.
If we (now or from before) have no firstchar, a firstchar from the branch becomes a reqchar if there isn't a branch reqchar.
If we already found more elements than count, or the starting coordinate wasn't zero, the two-level looping is unnecessary/can't be done, so return.
If we are SQL_VARCHAR, SQL_VARBINARY, or SQL_WVARCHAR (or any of the long variations) and zero is returned from colsize then consider it long
If we are acquiring a SHARED lock, the acquisition of the PENDING_LOCK byte is temporary.
If we are already within a transaction, then a checkpoint is set if the setStatement parameter is true.
If we are at the end of a nested substitution, revert to the outer level string.
If we are at the end of a scan line, set curx back to the beginning If we are interlaced, bump the cury to the appropriate spot, otherwise, just increment it.
If we are at the end of an assertion group or a non-capturing atomic group, stop matching and return MATCH_MATCH, but record the current high water mark for use by positive assertions.
If we are at the end of an internal nested string, revert to the outer string.
If we are at the end of the subject, give up immediately.
If we are at the start of a conditional assertion group, *both* the conditional assertion *and* what follows the condition must satisfy the test for start of line.
If we are creating a set for an "expr IN (SELECT ...)" construct, then there should be a single item on the stack.
If we are creating a set for an "expr IN (SELECT ...)".
If we are doing a different kind of flattening - a flattening other than a compound-subquery flattening - then this loop only runs once.
If we are doing a reverse order scan on an ascending index, or a forward order scan on a descending index, interchange the  start and end terms (pRangeStart and pRangeEnd).
If we are drawing this AA, then redraw the border with AA lines.
If we are going to print something, make sure that we have a separator first.
If we are going to print something, we'll need to print a blank before we print something else.
If we are holding a PENDING lock that ought to be released, then release it now.
If we are in a UTF mode, it may be a multi-unit literal character.
If we are in a negated POSIX class within a non-negated overall class, characters with code points greater than 255 must all match.
If we are in the pre-compile phase, accumulate the length used for the previous cycle of this loop.
If we are just shaving the last few pages off the end of the cache, then there is no point in scanning the entire hash table.
If we are not at the pattern start, reset the greedy defaults and the case value for firstchar and reqchar.
If we are not debugging and the reduce action popped at least one element off the stack, then we can push the new element back onto the stack here, and skip the stack overflow test in yy_shift().
If we are not in a pool, we cannot expand this name now
If we are not using shared cache, then there is no need to use mutexes to access the BtShared structures.
If we are on an architecture with mixed-endian floating  points (ex: ARM7) then swap the lower 4 bytes with the  upper 4 bytes.
If we are rereading the sqlite_master table create the in-memory record of the table.
If we are returning a large unsigned value, we have to convert it back to a string since PHP only supports signed values.
If we are the only user, then take this opportunity to set the max.
If we are to be thread-safe, include the pthreads header and define the SQLITE_UNIX_THREADS macro.
If we are too close to the start to move back, this match function fails.
If we are trying to delete from a view, realize that view into a ephemeral table.
If we are trying to delete from a view, realize that view into an ephemeral table.
If we are trying to update a view, realize that view into a ephemeral table.
If we are trying to update a view, realize that view into an ephemeral table.
If we are unable to rollback, quit and return the error code.
If we are unable to satisfy all memory requirements by reusing the opcode array tail, then the second pass will fill in the remainder using a fresh memory allocation.
If we are unable to satisfy all memory requirements by reusing the opcode array tail, then the second pass will fill in the rest using a fresh allocation.
If we are unsure of the base, it indicates that we are in base 8 or base 16 (if it is followed by an 'x').
If we are using "at most" rules in the main axis.
If we are using XPG specifiers, make sure that we grow to a large enough size.
If we are, we also want to check whether we've finished activating the modules (RINIT phase).
If we assume that writing a single disk sector is atomic, then this mode provides assurance that the journal will not be corrupted to the point of causing damage to the database during rollback.
If we backed up to a THEN, check whether it is within the current branch by comparing the address of the THEN that is passed back with the end of the branch.
If we broke out of the loop early, we found reduce_innersize
If we can CWD to it, it's a directory (maybe a link, but we can't tell)
If we can't find the required character, break the matching loop, forcing a match failure.
If we can't match the separator, return -2.
If we can't obtain a timestamp (that means file is possibly socket) we won't cache it
If we cannot open the rollback journal file in order to see if it has a zero header, that might be due to an I/O error, or it might be due to the race condition described above and in ticket #3883.
If we cannot open the rollback journal file in order to see if its has a zero header, that might be due to an I/O error, or it might be due to the race condition described above and in ticket #3883.
If we cannot prove that the expressions are identical, we return 2 just to be safe.
If we cloned a document then we must create new doc proxy
If we come here, output unbound LONG and/or BINARY column data to the client
If we compile with SQLITE_OMIT_TRIGGER, all of the computation needed to recognize the end of a trigger can be omitted.
If we compile with the SQLITE_TEST macro set, then the following block of code will give us the ability to simulate a disk I/O error.
If we compiled with the SQLITE_NO_SYNC flag, then syncing is a no-op
If we compiled with the SQLITE_NO_SYNC flag, then syncing is a no-op.
If we created a new conch file (not just updated the contents of a  valid conch file), try to match the permissions of the database
If we crossed a month boundary, do following instead
If we crossed a month boundary, do preceding instead
If we didn't do anything on the last loop (or an error) check to see if we should retry or exit.
If we didn't get any error, then let's return it to PHP.
If we didn't, then this is unexpected.
If we disabled in (1), we'd get the wrong answer.
If we do (e.g. corrupt image inputs), cur_bits might be negative, so flag it to return early.
If we do attempt to use such a constraint, some rows might be repeated in the output.
If we do it after free_reference/dtor then we might crash
If we do not block illegal combinations here, it could trigger assert() statements in deeper layers.
If we do not care about the difference between NULL and FALSE, then just return false.
If we do not do that and close the socket, the data in the send buffer may be discarded.
If we do not do this and we encounter a power failure, the directory entry for the journal might not exist after we reboot.
If we do not zero it, subsequent bind() will fail.
If we don't determine the token type so far, it is an error.
If we don't have free slots in the buffer, allocate a new one and set it's address to GC_ROOT_BUFFER_MAX_ENTRIES that have special meaning.
If we don't memset stat structure to zero, mtime will have garbage and strftime() will segfault later on in print_dir_entry().
If we don't need to measure the cross axis, we can skip the entire flex step.
If we dynamically allocated space to hold the data (in the sqlite3VdbeMemFromBtree() call above) then transfer control of that dynamically allocated space over to the pDest structure.
If we end up here we didn't find a position for "charset_token", so we need to set it to the start of the yet unextracted data.
If we end up here, we should report an error back to the DB engine, but that's not possible.
If we end up with a forward reference, first check that the bracket does occur later so we can give the error (and position) now.
If we ever need another pickle format, increment the version number.
If we exhausted the dst block, refresh it
If we exhausted the src block, refresh it
If we fail anywhere, undo everything, return NULL.
If we find that a given named parameter has been used twice, we will raise an error, as we can't be sure that it is safe to bind multiple parameters onto the same zval in the underlying driver
If we follow the usual indentation conventions, each case should be indented by 6 spaces.
If we get a NaT, just return it
If we get a NaT, raise an error
If we get here it means the result set contains one or more "*" operators that need to be expanded.
If we get here, they have the same number of integer digits.
If we get this (the above doesn't check) then we'll retry as well.
If we get this far, it means that the reader will want to use the WAL to get at content from recent commits.
If we get this far, it means that the xfer optimization is at least a possibility, though it might only work if the destination table (tab1) is initially empty.
If we get this far, it means we need to compute the table names.
If we get to the end of the branch, check the length against that of the other branches.
If we get to this point, the path name should almost certainly be a purely relative one (i.e. not a UNC name, not absolute, and not volume relative).
If we got any data, don't worry about it.
If we got dimensions and dtype instead of an array
If we had a fancy index, we may have had a boolean array index. So check if this had the correct shape now that we can find out which axes it acts on.
If we had a pure transparency color, add it as the last palette entry.
If we had a thumbnail in a SUB_IFD we have ANOTHER image in NEXT IFD
If we have HOWMANY bytes, it indicates that the data might have been truncated, probably even before this function was called.
If we have Unicode property support, we can use it to test the other case of the character, if there is one.
If we have a redirect_url then our script_filename and script_name point to the php executable
If we have a timeout to check, figure out how much time has elapsed since we started.
If we have a timeout, we switch to non-blocking mode for the duration of the operation, using select to do our waits.
If we have a transparent color (the alphaless mode of transparency), we must reserve a palette entry for it at the end of the palette.
If we have already a handler, release it
If we have already made a copy of the data, then use that as the output array
If we have already seen an xclass item or one may follow (we have to assume that it might if this is not the end of the class), explicitly match all wide codepoints.
If we have an extra_op given, need to prepare it.
If we have any lock, then the lock file already exists.
If we have determined that a buffer may be needed, allocate one.
If we have determined that a buffer may be needed, allocate the appropriate transfer functions
If we have determined that we need to deviate from the correct algorithm, flip bit 16 in initial expanded key.
If we have fewer than 2 bytes, give up.
If we have found the required character, save the point where we found it, so that we don't search again next time round the loop if the start hasn't passed this character yet.
If we have just passed a CR and the newline option is ANY or ANYCRLF, and we are now at a LF, advance the match position by one more character.
If we have matched a delimiter
If we have matched an empty string, mimic what Perl's /g options does.
If we have more than 2 NOPS then JMP over them
If we have not already resolved the name, then maybe  it is a new.* or old.* trigger argument reference
If we have not found this recursion on the forward reference list, adjust the recursion's offset if it's after the start of this group.
If we have not seen this color before, find nearest colormap
If we have not seen this color before, find nearest colormap entry
If we have not yet set a firstchar in this branch, take it from the subpattern, remembering that it was set here so that a repeat of more than one can replicate it as reqchar if necessary.
If we have some preps defined, find the one of highest priority
If we have some wraps defined, find the one of highest priority
If we have something like C:
If we have tried all the alternative branches, the assertion has failed.
If we haven't matched any alternatives in any iteration, check to see if a previous iteration matched.
If we haven't read everything
If we haven't registered a server_context yet, then don't bother flushing.
If we hit 'cols', stop.
If we hit ALT or KET, it means we haven't found anything mandatory in this branch, though we might have found something optional.
If we hit a bracket or a positive lookahead assertion, recurse to set bits from within the subpattern.
If we hit an unclosed bracket, we return "empty" - this means we've struck an inner bracket whose current branch will already have been scanned.
If we hit the duplicate rowid constraint (or any other error) while doing so, return immediately.
If we hit the end of the string (file), return -1.
If we looped all the way to the end, one stride works.
If we lost our position on the file, we will have to seek.
If we meet some day, and you think this stuff is worth it, you can buy me a beer in return.
If we might modify it, we continue to scan the tag, otherwise we simply copy the complete HTML stuff to the result buffer.
If we own our own data, then no-problem
If we previously set PCRE_NOTEMPTY_ATSTART after a null match, this is not necessarily the end.
If we reach here rng and mask are one and off is zero
If we reach something we don't understand, it means a new opcode has been created that hasn't been added to this code.
If we reach the end of the pattern without matching, display a warning.
If we reach this line, isc_wait_for_event() did return, but we don't know which event fired.
If we reach this point, flattening is permitted.
If we reach this point, it means that execution is finished with an error of some kind.
If we reach this point, it means that pExpr refers to a table that is in the FROM clause of the aggregate query.
If we reach this point, it means that the database connection has closed all sqlite3_stmt and sqlite3_backup objects and has been passed to sqlite3_close (meaning that it is a zombie).
If we reach this point, it means that we are not comparing string-to-string.
If we reach this point, it means the two subterms can be combined
If we reach this point, that means the index pIdx is usable
If we reach this point, that means the transformation is required.
If we reach this point, the frame is valid.
If we reach this points it means that the new candidate path needs to be added to the set of best-so-far paths.
If we reached the maximum recursion depth without hitting one of the above cases, and obj isn't a sequence-like object, the output dtype should be either OBJECT or a user-defined type.
If we see any continuations at a higher level, process them.
If we see that the page does not contain a well-formed database page, then return  SQLITE_CORRUPT.
If we see whitespace in the format, skip whitespace in the string.
If we set a first char from the group, and didn't set a required char, copy the latter from the former.
If we skipped the flex step, then we can't rely on the measuredDims because they weren't computed.
If we still got an array which can hold references, stop because it could point back at 'v'.
If we succeed, we return non-zero and the NetWare Loader will leave us up, otherwise we fail to load and get dumped.
If we succeeded in making the shared memory handle, map it.
If we survive all prior tests, that means this term is worth hinting
If we time out, or we have an error report that back to PHP
If we were called via fclose, the cookie_closer unsets the fclose_stdiocast flags, so we can be sure that we only reach here when PHP code calls php_stream_free.
If we were to allow this, the casting lookup table for built-in types needs to be modified, as cancastto is not checked for them.
If we write nothing to this pointer-map slot, then the optimistic overflow chain processing in clearCell() may misinterpret the uninitialized values and delete the wrong pages from the database.
If we're being asked to size the content with an at most constraint but there is no available width, the measurement will always be zero.
If we're being asked to use an exact width/height, there's no need to measure the children.
If we're going to overwrite the argv area, count the available space.
If we're in compile time, in practice, it's quite possible that we'll never reach this class declaration at runtime, so we shut up about it.
If we're not already in a string, start one.
If we're not and __call() handler exists, invoke it, otherwise error out.
If we're not being asked to perform a full layout, we can handle a number of common cases here without incurring the cost of the remaining function.
If we're out of colors, go for the closest color
If we're past the end, nothing to copy
If we're still missing one or the other dimension, measure the content.
If we've a valid pointer, return the SMTP server response so the error message contains more information
If we've found a possible browser, we need to do a comparison of the number of characters changed in the user agent being checked versus the previous match found and the current match.
If we've got a small unsigned scalar, and the 'to' type is not unsigned, then make it signed to allow the value to be cast more appropriately.
If while inserting cells into the parent page (pParent) the parent page becomes overfull, this buffer is used to store the parent's overflow cells.
If work was actually accomplished...
If working on new submatrix, choose shift direction (from larger end diagonal element towards smaller)
If wrOnly is false then all cursors are counted.
If writable static data is unsupported on the target, we have to locate the state vector at run-time.
If writing out a page causes the database file to grow, Pager.dbFileSize is updated accordingly.
If writing this  page caused the database file to grow, update dbFileSize.
If writing to memory or generating a set only a single column may be output.
If writing to the value in 'op' is desired, set the boolean 'writeable' to 1.
If x is a blob, then we count bytes.
If x is a lower-case ASCII character, then its upper-case equivalent is (x - 0x20).
If x is text, then we actually count UTF-8 characters.
If x is within the range, this method returns the value x.
If x(j) could overflow, scale x by 1/(2*XMAX).
If xFilter returns 0, changes is not tracked.
If xInit is not on the list, then this routine is a no-op.
If xMutexInit fails in any way, it is expected to clean up after itself prior to returning.
If xOpen() is called from a different process id, indicating that a fork() has occurred, the PRNG will be reset.
If xOutput is not NULL, then the changeset/patchset is returned to the user via one or more calls to xOutput, as with the other streaming interfaces.
If xRead() returns SQLITE_IOERR_SHORT_READ it must also fill in the unread portions of the buffer with zeros.
If xRoundup returns 0,  that causes the corresponding memory allocation to fail.
If xclass_has_prop is false and class_one_char is 1, we have the first single character in the class, and there have been no prior ranges, or XCLASS items generated by escapes.
If you (as a subprogram) store your registers on the stack and find that you are past the contents of B67, you have overflowed the segment.
If you are not running in the context of a fiber this method will return the root fiber.
If you are unlucky, one of those deleted indices or tables might have the same rootpage number as the real table or index that is being moved.
If you are using this code as a model for alternative VFSes, do not copy this retry logic.
If you can't access member variable of VT_RECORD OLE object directly, use this method.
If you can't set value of member of VT_RECORD OLE object directly, use this method.
If you change the logic here, please also update the error message in ps_modules appropriately
If you change this value then also change bug24640.phpt.
If you close a file descriptor that points to a file that has locks, all locks on that file that are owned by the current process are released.
If you compile on Red Hat 7.2 without this option, LFS is enable.
If you declare any globals in php_enchant.h uncomment this:
If you declare any globals in php_extname.h uncomment this: ZEND_DECLARE_MODULE_GLOBALS(extname)
If you define some other weird order in jmorecfg.h, you'll get compile errors until you extend this logic.
If you do not set an mtime, the default value will be the time when compression started.
If you don't compile for a mac, then the "unix-afp" VFS is not available.
If you don't have a nice square root function for longs, you can use this hack
If you don't pass a namespace uri, then you can't set a prefix
If you don't provide proper ubf(), your program will not stop for Control+C or other shutdown events.
If you don't want +.+ and +..+ and want directories, consider Pathname#children.
If you find this method returns true, then you may finish +:never+ blocks.
If you get a failure here you may be missing a system certificate store or may be missing the intermediate certificates.
If you have any resources which should free before throwing exception, you need use rb_protect() in `func' and return a value which represents exception was raised.
If you need a stable identifier across Ruby invocations and implementations you will need to generate one with a custom method.
If you need local IP address, use Socket.ip_address_list.
If you need some encoding object even for unknown locale, Encoding.find("locale") can be used.
If you need the behavior like read(2) system call, consider +ARGF.readpartial+.
If you need to access Ruby you must use this function rb_thread_call_with_gvl().
If you need to call ruby functions either use rb_thread_call_with_gvl() or read source code of C APIs and confirm safety by yourself.
If you need to communicate between threads, please consider to use another way such as Queue.
If you need to deserialize untrusted data, use JSON or another serialization format that is only able to load simple, 'primitive' types such as String, Array, Hash, etc.
If you pass the year with nothing else time will default to January 1 of that year at 00:00:00 with the current system timezone.
If you plan on using it, please consider adding more utility functions here to accommodate new features.
If you recompile and load this file, then usermem.o will not be loaded from qhull.a or qhull.lib See libqhull.h for data structures, macros, and user-callable functions.
If you recompile and load this file, then userprintf.o will not be loaded from qhull.a or qhull.lib See libqhull.h for data structures, macros, and user-callable functions.
If you recompile and load this file, then userprintf_rbox.o will not be loaded from qhull.a or qhull.lib See libqhull.h for data structures, macros, and user-callable functions.
If you redefine one of these functions you must redefine all of them.
If you specify textaddr, a text-printable version of the address will be emalloc'd and returned.
If you subtract pseg from the current end of the stack, you get the address of the previous stack segment's end.
If you use #scan_until, then the match can occur anywhere after the scan pointer.
If you use PyArray_Converter, you must DECREF the array when finished as you get a new reference to it.
If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
If you want modify argument in callback, you could use this method instead of WIN32OLE_EVENT#on_event.
If you want stuff in the System V ascftime routine, add the SYSV_EXT define.
If you want to get the result value of argument passed by reference, you can use WIN32OLE::ARGV or WIN32OLE_VARIANT.
If you want to keep the associated IO object open, you may call Zlib::GzipFile#finish method in the block.
If you want to modify reference argument in callback, return hash in callback.
If you want to return value to OLE server as result of callback use `return' or :return.
If you want to use this code to quantize a non-RGB color space, you'll probably need to change these scale factors.
If you're going to subclass Thread, be sure to call super in your +initialize+ method, otherwise a ThreadError will be raised.
If you're not getting focus, check to make sure you're returning true from the mouse click in HandleInputEvent.
If your architecture is little-endian, make sure it also defines LITTLE_ENDIAN and that the two (BYTE_ORDER and LITTLE_ENDIAN) are equivalent.
If your stack is a linked list of frames, you have to provide an "address metric" ADDRESS_FUNCTION macro.
If z is a NULL pointer, set pMem to contain an SQL NULL.
If zDatabase is 0, all databases are searched for the table and the first matching index is returned.
If zDatabase is 0, all databases are searched for the table and the first matching table is returned.
If zDb is NULL, or if the buffer zDb points to contains a zero-length string, all attached databases are  checkpointed.
If zDb is not NULL (or a zero length string) and is not the name of any attached database, SQLITE_ERROR is returned to the caller.
If zFilename is ":memory:" then  all information is held in cache.
If zFilename is ":memory:" then an in-memory database is created that is automatically destroyed when it is closed.
If zFilename is NULL then a randomly-named temporary file is created and used as the file to be cached.
If zFilename is NULL then an ephemeral database is created.
If zKey is NULL, then this foreign key is implicitly mapped to  the PRIMARY KEY of table pParent.
If zKey is non-NULL, then this foreign key was declared to map to an explicit list of columns in table pParent.
If zMaster is a NULL pointer (occurs for a single database transaction),  this call is a no-op.
If zName is NULL, the upper layer is requesting a temp file.
If zName is specified, operate on only the one system call specified.
If zName is the not the name of a table in the schema created using CREATE, then check to see if it is the name of an virtual table that can be an eponymous virtual table.
If zNode is a root node, then the buffer comes from a SELECT statement.
If zNum is too big for a 64-bit integer and is not 9223372036854775808  or if zNum contains any non-numeric text, then return 1.
If zNum represents an integer that will fit in 32-bits, then set pValue to that integer and return true.
If zSql returns rows, then each row will have exactly one column.
If zTable is NULL it means that the form of the name is Z and that columns from any table can be used.
If zTbl does not exist, or if it does not have a primary key, this function is a no-op (but does not return an error).
If zTerm is not NULL, and this segment is not stored entirely on its root node, the range of leaves scanned can be reduced.
If zType contains more than one of the substrings, entries toward the top of  the table take priority.
If zWhere is NULL, delete the entire contents of the table.
If zWhere is not NULL, delete all entries  associated with the table zWhere.
If zero is passed as an argument, no changes are made to the spill size setting, so using mxPage of 0 is a way to query the current spill size.
If zero, it is disabled.
If,  when a transaction is committed, the dbFileSize variable indicates  that the database file is larger than the database image (Pager.dbSize),  pager_truncate() is called.
If, after the statement has run, its immediate constraint counter is greater than zero, it returns SQLITE_CONSTRAINT_FOREIGNKEY and the statement transaction is rolled back.
If: - unbuffered result - first row has not been read - last_row has been read
Ignore 'trivial' solution
Ignore COLLATE or affinity on this tree
Ignore EBADF here, it's caused by the fact that STDIN/STDOUT/STDERR streams are/could be closed before fflush() is called.
Ignore ECONNRESET of FreeBSD
Ignore IFD2 if it purportedly exists
Ignore SIGPIPE signal, so if browser cancels the request, it won't kill the whole process.
Ignore TEMP and :memory: databases
Ignore and just look for RBRACE
Ignore any empty string at end which _internal._commastring can produce
Ignore any input table columns that begin with "rbu_".
Ignore invalid signal number
Ignore libxml warnings during WSDL parsing
Ignore malformed URLs
Ignore pushed registers and SLJIT_LOCALS_OFFSET when computing the aligned local size.
Ignore size specifier.
Ignore tables with no primary keys
Ignore terms with these prereqs
Ignore the MSVC warning about no initializer
Ignore the case SSL_shutdown returns -1.
Ignore the delivered argv and argc, read from W API.
Ignore the last nIgnore fields
Ignore this many fields at the end
Ignore this option altogether.
Ignore too long entries that may overflow path buffer
Ignore trailer headers
Ignore wal frames before this one
Ignored by the IDNA2003 implementation.
Ignores `locale' stuff.
Ignoring this column and  considering only any trailing columns and the sample hash value, this function returns true if sample pNew is to be preferred over pOld.
Illegal confirmation request
Illegal use of this function
Illegal value to initialize
Images with an alpha channel are only able to resolve down to '1/128th opaque' instead of '1/256th', and this conversion is also automatic.
Images with more than 8 bits per channel are reduced to 8 bits.
Immediate caching is not supported as it would be an operation on constant arguments.
Immediate constraints are usually handled similarly.
Immediate is prefered as second argument by most architectures.
Immediate values are not passed by reference but are passed by value: +nil+, +true+, +false+, Fixnums, Symbols, and some Floats.
Immediately after an iterator is created by sqlite3changeset_start(), it does not point to any change in the changeset.
Immediately after obtaining the SHARED lock, the file-system is checked for a hot-journal, which is played back if present.
Immediately following the configuration cookie, the record begins with three varints:  + number of levels, + total number of segments on all levels, + value of write counter.
Immediately following the wal-header are zero or more frames.
Implement Buffer Protocol ****************************
Implement Mapping Protocol ***************************
Implement Number Protocol ****************************
Implement Sequence Protocol **************************
Implement a co-routine that will return a single row of the result set on each invocation.
Implement a memory barrier or memory fence on shared memory.
Implement logic from libxml xmlTextConcat to add suport for comments and PI
Implement steps 3, 4, and 5 of the pcache1Fetch() algorithm described in the header of the pcache1Fetch() procedure.
Implement the main merge loop
Implement this as not Z (space or separator) and not C (other), except for Cf (format) with a few exceptions.
Implement this by temporarily adjusting end_subject so that we stop scanning at a newline.
Implementation details: the value thrown is the recursive list which is proper to the current method and unlikely to be caught anywhere else.
Implementation for palette images can be done at a later point.
Implementation in the proxy-lock division, but used by unixOpen() if SQLITE_PREFER_PROXY_LOCKING is defined.
Implementation note:  This routine merely checks to see if any cursors need to be saved.
Implementation notes: Floats are handled by mapping them to 64 bits integers.
Implementation of API function xQueryPhrase().
Implementation of FTS3 xRename method.
Implementation of FTS5 xRename method.
Implementation of POSIX opendir/closedir/readdir for Windows.
Implementation of SQL scalar function rbu_fossil_delta().
Implementation of SQLite REGEXP operator.
Implementation of a scalar function that decodes r-tree nodes to human readable strings.
Implementation of a special SQL scalar function for testing tokenizers  designed to be used in concert with the Tcl testing framework.
Implementation of bm25() function.
Implementation of fts5_source_id() function.
Implementation of highlight() function.
Implementation of matchinfo() function.
Implementation of offsets() function.
Implementation of random().
Implementation of randomblob(N).
Implementation of snippet() function.
Implementation of the "simple" full-text-search tokenizer.
Implementation of the "unicode" full-text-search tokenizer.
Implementation of the NULLIF(x,y) function.
Implementation of the QUOTE() function.
Implementation of the SQL scalar function for accessing the underlying  hash table.
Implementation of the TRIM(), LTRIM(), and RTRIM() functions.
Implementation of the abs() function.
Implementation of the changes() SQL function.
Implementation of the full-text-search tokenizer that implements a Porter stemmer.
Implementation of the instr() function.
Implementation of the json_QUOTE(VALUE) function.
Implementation of the json_array(VALUE,...) function.
Implementation of the json_object(NAME,VALUE,...) function.
Implementation of the language Header() function
Implementation of the last_insert_rowid() SQL function.
Implementation of the length() function
Implementation of the like() SQL function.
Implementation of the matchinfo() function for FTS3
Implementation of the non-aggregate min() and max() functions
Implementation of the offsets() function for FTS3
Implementation of the printf() function.
Implementation of the round() function
Implementation of the scalar function fts3_tokenizer_internal_test().
Implementation of the scalar function icu_load_collation().
Implementation of the snippet() function for FTS3
Implementation of the special optimize() function for FTS3.
Implementation of the sqlite3_pcache.xCachesize method.
Implementation of the sqlite3_pcache.xCreate method.
Implementation of the sqlite3_pcache.xDestroy method.
Implementation of the sqlite3_pcache.xFetch method.
Implementation of the sqlite3_pcache.xInit method.
Implementation of the sqlite3_pcache.xPagecount method.
Implementation of the sqlite3_pcache.xRekey method.
Implementation of the sqlite3_pcache.xShrink method.
Implementation of the sqlite3_pcache.xShutdown method.
Implementation of the sqlite3_pcache.xTruncate method.
Implementation of the sqlite3_pcache.xUnpin method.
Implementation of the sqlite_compileoption_get() function.
Implementation of the sqlite_compileoption_used() function.
Implementation of the sqlite_log() function.
Implementation of the sqlite_source_id() function.
Implementation of the sqlite_version() function.
Implementation of the stat_get(P,J) SQL function.
Implementation of the stat_init(N,C) SQL function.
Implementation of the stat_init(N,K,C) SQL function.
Implementation of the substr() function.
Implementation of the total_changes() SQL function.
Implementation of the upper() and lower() SQL functions.
Implementation of the xBestIndex method for FTS3 tables.
Implementation of the xBestIndex method for FTS5 tables.
Implementation of the xBestIndex method.
Implementation of the xSetAuxdata() method.
Implementation of xBegin() method.
Implementation of xCommit() method.
Implementation of xOpen method.
Implementation of xRollback().
Implementation of xSync() method.
Implementation which is common between PyArray_Correlate and PyArray_Correlate2.
Implementations of scalar functions for case mapping - upper() and  lower().
Implementations of the SQL scalar upper() and lower() functions for case mapping.
Implemented as a co-routine
Implements Jenkins's one-at-a-time hashing algorithm as presented on http://www.burtleburtle.net/bob/hash/doobs.html.
Implements a UNIQUE constraint
Implements boolean indexing assignment.
Implements boolean indexing.
Implements: IStream* wrapper for PHP streams.
Implied first min-heap entry
Implies V_FLAG_POLICY_CHECK
Import an integer into a buffer.
Import the array object
Import the array objects
Important: 's_headers_almost_done' must be the last 'header' state.
Imports the PyDateTime functions so we can create these objects.
In  that case the convertToWithoutRowidTable() routine will replace the Noop with a Goto to jump over the VDBE code generated below.
In  that case we do not support atomic multi-file commits, so use the  simple case then too.
In (1), the term is not disabled.
In 1.7, the code has been updated to compute a view onto 'self', but it still copies this array before returning, as well as setting the internal WARN_ON_WRITE flag.
In 4.1 we use CLIENT_SECURE_CONNECTION and thus the len of the buf should be passed
In 8 bit mode, this must always be TRUE.
In 8 bit, non-UTF mode, OP_CLASS and OP_NCLASS are the same.
In 8.13, the code was changed as below for ONCE, so that backups pass through the group and thereby reset captured values.
In ARM instruction words.
In ARM, we don't need to touch the arguments.
In BP_VAR_IS mode only return a proper node if it actually exists.
In CGI mode, we consider the environment to be a part of the server variables
In DER, every value has a finite length associated with it.
In EUC output, SSO is used.
In HTML5, entities may take up to 33 bytes
In IEEE arithmetic, the code works correctly if one matrix element is infinite.
In JIS output, ESC-(-I is used.
In Linux, `int setpgrp(void)' is equivalent to setpgid(0, 0).
In May 2006, when it was observed to cause compiler warnings about unused values, I took it out again.
In OCB mode, the length must be supplied both when encrypting and when decrypting, and must be before specifying an IV.
In OS X 10.7 (Lion), pthread_cond_signal and pthread_cond_broadcast return EAGAIN after retrying 8192 times.
In OpenSSL 1.0.2, the automatic selection has to be enabled explicitly.
In PAGER_ERROR state, Pager.errCode  is always set to SQLITE_FULL, SQLITE_IOERR or one of the SQLITE_IOERR_XXX  sub-codes.
In PPC, we don't need to touch the arguments.
In Perl, unescaped square brackets may also appear as part of class names.
In Py3K, int is no longer a fixed-width integer type, so don't inherit numpy.int_ from it.
In RBU_STAGE_CAPTURE mode, all xRead() calls on the wal file, and all xWrite() calls on the target database file perform no IO.
In SQLite version 3.5.0 and 3.5.1, it was possible to define the SQLITE_OMIT_MEMORY_ALLOCATION which would cause the built-in implementation of these routines to be omitted.
In SQLite, we never try to destroy a parser that was not successfully created in the first place.
In UTF-8 mode we can only do this properly if Unicode properties are supported.
In UTF-8 mode, STAR, MINSTAR, POSSTAR, QUERY, MINQUERY, POSQUERY, UPTO, MINUPTO, and POSUPTO and their caseless and negative versions may be followed by a multibyte character.
In UTF-8 mode, for characters greater than 127, we can only do the caseless thing when Unicode property support is available.
In UTF-8 mode, long characters have their length in c, with the UTF_LENGTH bit as a flag.
In UTF-8 mode, opcodes that are followed by a character may be followed by a multi-byte character.
In UTF-8 mode, the bits in a bit map correspond to character values, not to byte values.
In UTF-8 mode, we can only do a direct setting for bytes less than 128, as otherwise there can be confusion with bytes in the middle of UTF-8 characters.
In UTF8 mode, the result is in characters rather than bytes.
In Unicode, there are 8-bit characters that have alternate cases that are greater than 255 and vice-versa.
In WRITER_LOCKED state, all locks  required to start a write-transaction are held, but no actual  modifications to the cache or database have taken place.
In Y format we must always have something in Y2, since it has no fnop, so this conveys that Y2 must always be used.
In a "traditional" environment, the tables will only recognize ASCII characters anyway, but in at least one Windows environment, some higher bytes bits were set in the tables.
In a FIFO queue, the first tasks added are the first retrieved.
In a NATURAL join, omit the join columns from the  table to the right of the join
In a future release of Bison, this section will be replaced by #include "json_parser.tab.h".
In a future release of Bison, this section will be replaced by #include "phpdbg_parser.h".
In a future release, it will become NPY_SAME_KIND_CASTING.
In a future version, it will simply return a view onto self.
In a join with a USING clause, omit columns in the using clause from the table on the right.
In a loop back-edge (back-join edge), the successor dominates the predecessor.
In a multi-threaded application, the application-defined logger function must be threadsafe.
In a phar.zip or phar.tar archive, the default stub is used only to identify the archive to the extension as a Phar object.
In a phrase merge, the output contains a copy of each position from the right-hand input doclist for which there is a position in the left-hand input doclist exactly nDist tokens before it.
In a similar way to cworkspace, it can be expanded using malloc() if necessary.
In a table record, all serial types are stored at the start of the record, and the blobs of data at the end.
In addition to its current configuration, have the Fts3MultiSegReader passed as the 4th argument also scan the doclist for term zTerm/nTerm.
In addition to the two coroutines (called selectA and selectB) there are 7 subroutines:  outA:    Move the output of the selectA coroutine into the output of the compound query.
In addition, TOTAL always returns a float where SUM might return an integer if it never encounters a floating point value.
In addition, an uppercase "T" character MUST be used to separate date and time, and an uppercase "Z" character MUST be present in the absence of a numeric time zone offset.
In addition, the proxy is now able to handle properties of COM objects that smell like PHP arrays.
In addition, the width of string (e.g. leading zeros) is handled appropriately.
In all case we no longer have a previous item.
In all cases new databases created using the ATTACH command are created to use the same default text encoding as the main database.
In all cases the repeat_max now specifies the number of additional copies needed.
In all cases they are in the order in which they appear in the pattern.
In all cases, an appropriate error code is returned and *ppPage is set to NULL.
In all cases, if an error occurs the final contents of the changegroup is undefined.
In all cases, if an xInput callback returns an error, all processing is abandoned and the streaming API function returns a copy of the error code to the caller.
In all cases, the special comment must be enclosed in the usual slash-asterisk...asterisk-slash comment marks, with no spaces between the  asterisks and the comment text.
In all cases, when you get here, the value and location stacks have just been pushed.
In all other cases only one of them was specified, and that can goes to TMP1.
In all other cases this function returns SQLITE_MISUSE.
In all other cases we loop through the available transtion times to find the correct entry
In all other cases, SQLITE_OK is returned.
In all other cases, tempcode will be pointing to the repeat opcode, and will be less than code, so the value of len will be greater than 0.
In all other cases, the caller may initialize the allocated operand to a value before beginning iteration.
In all other cases, we do.
In all other cases, we have to make another call to match().
In an EMail message to Landon, they named it the ``Fowler/Noll/Vo'' or FNV hash.
In an SQLite index record, the serial type is stored directly before the blob of data that it corresponds to.
In an UPDATE operation, if this index is the PRIMARY KEY index  of a WITHOUT ROWID table and there has been no change the primary key, then no collision is possible.
In an affine transform composed of scaling, rotation, shearing, and translation, returns the amount of scaling.
In an effort to address this, newer versions of SQLite (version 3.3.8 and later) include support for additional result codes that provide more detailed information about errors.
In any case base is pointing to something that we need to DECREF -- either a view or a buffer object
In any case it is tokenized and a phrase object consisting of all tokens returned.
In any case, all savepoints with an index greater than iSavepoint  are destroyed.
In any case, it's not unsigned.
In any case, strings should be strictly conformed to numeric representation.
In any case, the perturbation will be at most some small multiple of max( SMIN, ulp*norm(ca A - w D) ).
In any case, values larger than INT_MAX for a chunk size make no sense.
In any event, remove the block from the chain.
In applications that need to be able to suspend compression due to output overrun, a FALSE return indicates that the buffer cannot be emptied now.
In both ASC and DESC order.
In both cases the vdbe has already been allocated.
In both cases, a zero repeat forces firstchar to "none".
In both cases, backtracking will then try other alternatives, if any.
In both cases, the original bucket is unlinked from its brigade.
In both cases, the query is augmented with "LIMIT 1".
In both phases, for recursions, we can now go to the code than handles numerical recursion.
In case COPY or UPDATEIFCOPY occurred
In case an error occurs
In case it failed, no data will be read (better than block).
In case it's sensitive
In case of Array's #each, all elements in the Array instance are yielded to the supplied block in sequence.
In case of IS_LONG we do nothing, it is ok, in case of string, we just need to set current_type.
In case of Incomplete MIME, no MIME decode
In case of an error, we should have place to put it
In case of error the reference will be released in free_result_internal() called indirectly by our caller
In case of failure it changes shifts, and tries again until output is positive.
In case of failure, set a PyExc_Overflow exception
In case of failure, we
In case of the 'a+b' append mode, the handler is responsible to handle any rewind problems (see flatfile handler).
In case of ucp_Cf, we overwrite the result.
In case previously set by assertion
In case procs chained enumerator traversing all proc entries manually
In case the blob is ever cast to text
In case the blob is ever converted to text
In case the child is position absolute and has left/top being defined, we override the position to whatever the user said (and margin/border).
In case the cursor has been used before, clear it now.
In case this callback is called from include_once, require_once or it's a main FastCGI request, the key must be already calculated, and cached persistent script already found
In case this cursor is being reused, close and zero it.
In case this is such a statement, close any statement transaction opened by this VM before returning control to the user.
In case this page turns out to be an overflow page, delete all overflow page-map caches held by open cursors.
In case we aborted during script execution, we may not reset CG(unclean_shutdown)
In case we did yield from, the Exception must be rethrown into its calling frame (see above in if (check_yield_from).
In case we don't have PCRE support (for whatever reason...) simply do nothing and return the unmodified header
In client mode, returns the list of client CAs sent from the server.
In contrast to exif_process_string this function does always return a string buffer
In current implementation, we only need to don't call RUBY_VM_CHECK_INTS().
In debug mode, we mark all persistent databases as sharable even when they are not.
In default (Perl) mode, it is treated as a data character.
In direct mode, reference the sorting index rather than the source table
In doing so it also sets the BtShared.db member of each of the BtShared structures, ensuring that the correct busy-handler callback is invoked if required.
In dotfile locking, either a lock exists or it does not.
In each such row, the stat column will be a string consisting of a list of integers.
In earlier versions of PCRE, all the offsets were unset at the start of matching, but this doesn't work because atomic groups and assertions can cause a value to be set that should later be unset.
In earlier versions of the IJG code, this module quantized in YCbCr color space, processing the raw upsampled data without a color conversion step.
In earlier versions, the whole set of potential capturing offsets was set to -1 each time round the loop, but this is handled differently now.
In either case exit the loop.
In either case it is possible to have an object that tests as a sequence but doesn't behave as a sequence and consequently, the PySequence_GetItem call can fail.
In either case leave an error message in pParse and return non-zero.
In either case,  if the pager is not in no-sync mode, sync the journal file immediately  after writing or truncating it.
In either case, SQLITE_TOOBIG is returned.
In either case, before playback commences the Pager.dbSize variable is reset to the value that it held at the start of the savepoint  (or transaction).
In either case, invoke the notify callback immediately.
In either case, pager_truncate() may cause the file to become smaller or larger.
In either case, the edge is a directed edge -- either the zone you are advancing into is to its left or right, or you are actually drawing it.
In either case, the elements of the array must be monotone (or sorted) with respect to the block.
In either case, the elements of the range must be monotone (or sorted) with respect to the block.
In either case, the journal file can be deleted.
In extended mode, skip white space and comments.
In fact, all dates after the 3rd month are consistent from year to year (once it is known whether it is a leap year).
In fact, because we do the check for a number below, the paths that would actually be in error are never taken.
In fact, it can be used as a standalone dom implementation.
In fact, the VFS is required to either truncate or zero the header of the wal-index when the last connection to it closes.
In fact, the repeated ones could be re-implemented independently so as not to need this, but for the moment we rely on the code for repeating groups.
In fact, the value ESC_g is returned only for these cases.
In fact, there are only two possible starting bytes for characters in the range 128 - 255.
In fact, this can happen for a non-forward reference because another group with the same number might be created later.
In general it's also possible to do it for any CV variable as well, but it would require complex dataflow and/or type analysis.
In general, the interface to this function is not very good, but changing it is difficult because it's a public API.
In general, writeOnly is false if the transaction being rolled back modified the database schema.
In global scope, we know nothing
In hex representations, this is displayed as two periods to the left of the digits.
In many cases this can lead to remote code execution if the Marshal data is loaded from an untrusted source.
In many cases, method (1) above is the best approach.
In most cases IS_TMP_VAR operand may be used only once.
In most cases cases, this routine sets *pMode to 0, which will become an indication to robust_open() to create the file using SQLITE_DEFAULT_FILE_PERMISSIONS adjusted by the umask.
In most cases, generating a warning message and inserting a fake EOI marker is the best course of action --- this will allow the decompressor to output however much of the image is there.
In most cases, the pointer argument passed with this file-control is NULL.
In most cases, the root sought is the smallest in magnitude, though it might not be in some extremely rare situations.
In most cases, this routine sets *pMode to 0, which will become an indication to robust_open() to create the file using SQLITE_DEFAULT_FILE_PERMISSIONS adjusted by the umask.
In most cases, we should be able to acquire the lock we want without having to go through the ascending lock procedure that follows.
In most cases, we should be able to acquire the lock we want without having to go throught the ascending lock procedure that follows.
In most cases, with the default chunk size of 8K, we will only incur that overhead once.
In most cases, you can compute the value of nRec from the size of the journal file.
In multi-threaded environments, we have to init thread safely
In no circumstance will any local variables in the loaded file be propagated to the loading environment.
In no event will the authors be held liable for any damages arising from the use of this software.
In no reference was obtained (because the pointer-map was used to obtain the value for *pPgnoNext), then ppPage is set to zero.
In non-RAC, we always get a brand new connection at the end of the loop and in RAC, we can get a good connection from a different instance before flushing out all bad ones.
In non-UTF-8 mode, the two bit maps are completely compatible.
In normal matching start_match will aways be greater than the first position at this stage, but a failed *SKIP can cause a return at the same point, which is why the first test exists.
In normal use, marshaling can only load data written with the same major version number and an equal or lower minor version number.
In numpy 1.6 and earlier, this was NPY_UNSAFE_CASTING.
In old Linux, several special files under /proc and /sys don't handle select properly.
In order for the operator to be optimizible, the RHS must be a string literal that does not begin with a wildcard.
In order for this mem3.iMaster replacement to work, the master chunk must be linked into the hash tables.
In order to  perform this abort without corrupting the database, we need to make sure that the statement is protected by a statement transaction.
In order to allow the caller to extract keys from the sorter in sorted order, all PMAs currently stored on disk must be merged together.
In order to avoid an upsize followed by a downsize of the buffer, overestimate by the step size (which is 2K).
In order to avoid problems with upper layers, we need to report this file size as zero even though it is really 1.
In order to be able to rollback, an in-memory database must journal the page we are moving from.
In order to be consistent, we have to make sure we add the good amount of nulls depending on the current number of elements.
In order to be so cheap we may have some flickering effect with some slow terminal, but the lesser sequences the more compatible.
In order to ensure that there are no database readers, an EXCLUSIVE lock is obtained here before the *-oal is moved to *-wal.
In order to facilitate testing on a WinNT system, the test fixture can manually set this value to 1 to emulate Win98 behavior.
In order to get pager_unlock() to do this, set Pager.eState to PAGER_ERROR now.
In order to invoke the connections busy-handler, this function should be invoked with the second (void *) in the array as the only argument.
In order to maintain backwards compatibility with older code, these functions continue  to be supported.
In order to maintain backwards compatibility with older versions of SQLite, we will continue to restrict the number of entries to usableSize/4 - 8 for now.
In order to position the elements in the main axis, we have two controls.
In order to securely export a key you may export it with a pass phrase.
In order to set the context, the variable +self+ is set to _obj_ while the code is executing, giving the code access to _obj_'s instance variables and private methods.
In order to set the context, the variable +self+ is set to _obj_ while the code is executing, giving the code access to _obj_'s instance variables.
In order to use this constructor, you must first require the Pathname standard library extension.
In order to use this macro, the entire data structure must be represented as a series of unsigned integers.
In other  words, rows should be sorted using the destination table PRIMARY KEY  fields before they are inserted into the data_xxx tables.
In other cases, the error is returned to the b-tree layer.
In other words we assume that very common tokens occur exactly once in each  column of each row of the table.
In other words, ALWAYS and NEVER are added for defensive code.
In other words, S is a buffer and E is a pointer to the first byte after the end of buffer S.
In other words, SHARED, RESERVED, and PENDING locks are the same thing as an EXCLUSIVE lock.
In other words, a prefix of (pTerm/nTerm) that is one byte longer than the longest prefix (pTerm/nTerm) shares with the previous term.
In other words, all b+-trees with level values between 0 and 1023 (inclusive) belong to index 0, all levels between 1024 and 2047 to index 1, and so on.
In other words, at most 13 bytes.
In other words, compute an approximation for 10*log2(x).
In other words, cursor P1 becomes an alias for the  MEM_Blob content contained in register P2.
In other words, delimiters all must have values of 0x7f or lower.
In other words, each log-summary is opened only once per process.
In other words, each wal-index is opened only once per process.
In other words, from the most recent successful call to  sqlite3rbu_close() or this function.
In other words, if an INSERT occurs between two TESTs where the TESTs have the same batch nubmer, then the value added by the INSERT will not be visible to the second TEST.
In other words, if iSyncPoint is in between iOffset and iOffset+iAmt, first write the part before iSyncPoint, then sync, then write the rest.
In other words, if the cursor is already open, do not reopen it.
In other words, if the page size is 512, then the reserved space size cannot exceed 32.
In other words, if the phrase is "A B C", and "B" is deferred, the expression is advanced to the next row that contains an instance of "A * C",  where "*" may match any single token.
In other words, if the string looks like a number, convert it into a number.
In other words, if the xUpdate() returns SQLITE_CONSTRAINT, the database contents must be exactly as they were before xUpdate was called.
In other words, if we assume that the cardinalities of the selected column for pNew and pOld are equal, is pNew to be preferred over pOld.
In other words, it disables all mutexing and puts SQLite into a mode where it can only be used by a single thread.
In other words, make it so that any TEXT or BLOB content is stored in memory obtained from malloc().
In other words, make sure all the pages that have been written to the journal have actually reached the surface of the disk and can be restored in the event of a hot-journal rollback.
In other words, move all segments being promoted to level -1, setting the "idx" fields as appropriate to keep them in the same order.
In other words, nPkField is the number of fields in the true primary key of the table.
In other words, partially  applied transactions are not visible to other clients.
In other words, restore the cache to the state it was in prior the most recent Push.
In other words, return TRUE if it is ok to change the content of the page.
In other words, return TRUE if no sync() occurs on the disk files.
In other words, return true if this CHECK constraint can be skipped when validating the new row in the UPDATE statement.
In other words, return true if z contains at least one vowel that is followed by a consonant.
In other words, separateCache is true for mode (1) where no mutexing is required.
In other words, skip the first -YYN actions for this state because they are default actions.
In other words, strings will compare equal to one another as long as they differ only in the number of spaces at the end.
In other words, the Next and Prev opcodes do not work after this operation.
In other words, the Next and Prev opcodes will not work following this opcode.
In other words, the WAL can fill up with frames and then be checkpointed and then new frames can overwrite the old ones.
In other words, the analysis stops as soon as reg(P1) errors are  seen.
In other words, the busy handler is not reentrant.
In other words, the code within VVA_ONLY() will only run during verification processes.
In other words, the cursor is configured to use Next, not Prev.
In other words, the cursor is configured to use Prev, not Next.
In other words, the cursor will be used only for equality key searches.
In other words, the expression must not refer to any non-deterministic function nor any table other than iCur.
In other words, the first varint in the footer is the byte offset of the first term, the second is the byte offset of the second less that of the first, and so on.
In other words, the soft heap limit  is advisory only.
In other words, the time returned is always the time of the first call.
In other words, the value is converted into the desired affinity even if that results in loss of data.
In other words, the value returned is the same integer value that would be used in the SQL statement to indicate the column.
In other words, the zero-based numbers are used for all external interfaces and the one-based values are used internally.
In other words, this function *DOES NOT* associate or convert a NON-Ruby thread to a Ruby thread.
In other words, this opcode causes all following opcodes up through P2 (but not including P2) to run just once and to be skipped on subsequent times through the loop.
In other words, this routine is the destructor for an RtreeGeomCallback objecct.
In other words, this:  SELECT DISTINCT xyz FROM ...
In other words, we are searching for a function that takes a variable number of arguments.
In other words, we should be able to convert generic units into any more specific unit.
In other words, when iterating through a changeset or when applying a changeset to a database, all changes related to a single table are processed before moving on to the next table.
In other words, write into *piNow the number of milliseconds since the Julian epoch of noon in Greenwich on November 24, 4714 B.C according to the proleptic Gregorian calendar.
In particular the function PyArray_GetDTypeTransferFunction is implemented here.
In particular, both the traditional hash table entries and the storage for the linked lists to which they point are stored in the same shared memory array.
In particular, if pthread_equal() is not an atomic operation, then these routines might delivery incorrect results.
In particular, it cannot be passed into a function that requires a true pointer to a fixed-size array.
In particular, the function signature and output format are not guaranteed to be compatible in future versions of ruby.
In particular, this ensures that the file can be deleted even whilst it's open.
In particular, this routine is called after seeing tokens "CREATE" and "TABLE" and the table name.
In pass 1 just add in the length
In phpdbg mode, we consider the environment to be a part of the server variables
In place of a legal notice, here is a blessing:  May you do good and not evil.
In practice this should not be a problem since the user would have to repeatedly create, document, and throw away ufuncs.
In practice, most SQL never has more than 3 or 4 terms.
In practice, we're assuming that statfs() doesn't fail very often.
In previous versions, 1's were prepended to the shape as needed.
In previous versions, core dimensions of size 1 would broadcast against other core dimensions with the same label.
In previous versions, most significant bits (MSBs) of the seed affect only MSBs of the state array.
In principle it may be possible to replace the whole function by PyIndex_AsSSize_t after deprecation.
In principle, we could implement several newline "types", each referring to a different set of newline characters.
In prior versions of SQLite, sharing was enabled or disabled for each thread separately.
In pure-Python, SAME_SLOTS can be replaced by getattr(m1, op_name) is getattr(m2, op_name)
In reduction buffering mode, there's a double loop being tracked in the buffer part of the iterator data structure.
In rollback mode the journal file is opened (if it is not already open) and a header written to the start of it.
In ruby, you can create rational object with Rational, to_r, rationalize method or suffixing r to a literal.
In secure-delete mode, the dropCell() routine will overwrite the entire cell with zeroes.
In shared cache mode, a single Schema object can be shared by multiple Btrees that refer to the same underlying BtShared object.
In short, it copies the value  of the specified PRAGMA setting from dbRbu to dbMain.
In short, it's a 0-based index into bytes of the string.
In short, it's a 0-based index into the string.
In sljit, the code is under BSD licence.
In some (obscure) circumstances, this variable may also be set to UNKNOWN_LOCK.
In some applications, it would be better to match all instances of "first place" or "1st place" regardless of which form the user specified in the MATCH query text.
In some cases a single trigger may generate more than one  SubProgram (if the trigger may be executed with more than one different  ON CONFLICT algorithm).
In some cases this optimization prevents the table from ever being read, which can yield a significant performance boost.
In some cases, a brief description will follow.
In some cases, such as structured arrays and the __array__ interface, a data type needs to be used to make sense of the object.
In some cases, the call to btreeMoveto() below is a no-op.
In some cases, the pcache module may choose not to allocate a new page object and may reuse an existing object with no outstanding references.
In some circumstances, we are able to run the xfer optimization only if the destination table is initially empty.
In some places we need to check if the number NUM is almost zero.
In some places we need to check if the number NUM is zero.
In some places we need to check if the number is negative.
In some rare cases destructors of regular arrays may be changed
In some rare ocasions we may need future patches.
In standard SQL, such a table must be a simple name: ID.
In such a case, the value of nRec computed from the file size would be too large.
In such cases the, mutex must be exited an equal number of times before another thread can enter.
In test mode, increase the size of this structure a bit so that  it is larger than the struct CrashFile defined in test6.c.
In that alternative use, pRight points to the next entry in the list, pLeft points to the tree, and v is unused.
In that case keys may not be written in strictly sorted order.
In that case lookup is done by a linear search of the global list.
In that case only the column names and types will be used, so there is no need to test for namespace collisions.
In that case the hash-table does not grow, but SQLITE_OK is returned anyway.
In that case this function is a no-op.
In that case we are not in any hurry.
In that case you'll probably want to tweak the histogram sizes too.
In that case, also set YYMSG_ALLOC to the required number of bytes.
In that case, construct a new virtual term that is  pTerm converted into an IN operator.
In that case, delete the subtrees pLeft and pRight.
In that case, do not regenerate the code to manifest a view or the co-routine to implement a view.
In that case, don't check for expected tokens because there are none.
In that case, each connection has it own instance of this object.
In that case, if memory pressure forces page pPg out of the cache, the data does need  to be written out to disk so that it may be read back in if the  current transaction is rolled back.
In that case, it might take longer than normal for the lock to free.
In that case, just regenerate strides from shape.
In that case, just report a simple "syntax error".
In that case, only verify 4-byte alignment.
In that case, reduce them using `op`.
In that case, set all bits of the colUsed mask (to ensure that the virtual table implementation makes all columns available).
In that case, the calling routine should implement the IN operator using a sequence of Eq or Ne comparison operations.
In that case, the database should have never been written in the first place so it is OK to simply abandon the rollback.
In that case, the error code and message may or may not be set.
In that case, the free-list will be truncated to zero after this function returns, so it doesn't  matter if it still contains some garbage entries.
In that case, the sqlite3VdbeRecordCompare() may read up to two varints past the end of the allocated buffer before it realizes it is dealing with a corrupt record.
In that case, this routine generates code for the xfer optimization but also does a test to see if the destination table is empty and jumps over the xfer optimization code if the test fails.
In that case, this routine returns FALSE so that the caller will know to go ahead and generate an unoptimized transfer.
In that case, this routine works like sqlite3ExprDup().
In that case, we allow yet more memory, just in case.
In that case, we do not really need shared memory.
In that case, we need to return right away and not make any changes to pExpr.
In that cases, the constants below can be ORed together.
In the "trigHash" hash table (part of the sqlite3* that represents the  database).
In the "trigHash" hash table (part of the sqlite3* that represents the database).
In the 'reset' position, this value is zero.
In the 'terminated' position (i.e. the string is exhausted), this value is the bytesize of the string.
In the 'terminated' position (i.e. the string is exhausted), this value is the size of the string.
In the 16-bit and 32-bit libraries, codepoints greater than 255 may be encountered even when UTF is not supported.
In the 8-bit library, this opcode is encountered only when UTF-8 mode mode is supported.
In the Gregorian calendar, this is equivalent to the week which includes January 4.
In the IEEE 754 standard, zero is signed.
In the above example, the standard output in the child process is not specified.
In the above example, there will be two elements in this array, "nacl_module" and "2".
In the above examples Enumerator.grep is used.
In the absence of explicit truth probabilities, use heuristics to guess a reasonable truth probability.
In the absence of other comments, this synopsis becomes the comment on the opcode.
In the absence of sqlite_stat4 ANALYZE data, or if such data cannot be used, a single range inequality reduces the search space by a factor of 4.
In the absence of sqlite_stat4 ANALYZE data, or if such data cannot be used, each range inequality reduces the search space by a factor of 4.
In the actual code below, the value "16" is replaced with the  pre-processor macro FTS_MAX_APPENDABLE_HEIGHT.
In the actual compile, there is nothing to do.
In the amalgamation, the os_unix.c and os_win.c source files come before this source file.
In the block context, a new line may start a simple key.
In the block context, additional checks are required.
In the block context, extra checks are required.
In the block context, we may need to add the BLOCK-MAPPING-START token.
In the case of YYABORT or YYACCEPT, an incorrect destructor might then be invoked immediately.
In the case of YYERROR or YYBACKUP, subsequent parser actions might lead to an incorrect destructor call or verbose syntax error message before the lookahead is translated.
In the case of a NOTFOUND or DATA conflict, the result will be SQLITE_OK with 0 rows modified.
In the case of a subquery on the LHS, append TK_SELECT_COLUMN expressions.
In the case of a zero minimum, the first one was set up above.
In the case of arange(datetime, timedelta), convert the timedelta into a datetime by adding the start datetime.
In the case of reqchar, save the previous value for reinstating.
In the case of sqlite3changeset_start_strm(), the xInput callback may be invoked by the sessions module at any point during the lifetime of the iterator.
In the case of the function is called and returns non-zero value, the child process exits with non-+EXIT_SUCCESS+ value (normally 127).
In the case someone doesn't read all the lines this will save time.
In the case where two connects were being made, without closing the first connect, access violations were occurring.
In the case where we had to get some local store to hold offsets for backreference processing, copy those that we can.
In the case where we have large paths, though, it gets a little tricker, and I like writing lockless data structures :P
In the caseful case, we can just compare the bytes, whether or not we are in UTF-8 mode.
In the changeset format, the records that are part of INSERT or DELETE changes never contain any undefined (type byte 0x00) fields.
In the child process, just returns 0 if +chfunc+ is +NULL+.
In the colUsed field, the high-order bit (bit 63) is set if the table contains more than 63 columns and the 64-th or later column is used.
In the compile phase, check for empty string matching.
In the course of balancing the page and its siblings, cells may be inserted into or removed from the parent page (pParent).
In the current implementation the cache is traversed by a linear search from most-recent to least-recent.
In the current implementation, the rSetup value is either zero or the cost of building an automatic index (NlogN) and the NlogN is the same for compatible WhereLoops.
In the current implementation, they are the stride of the next-fastest index.
In the descriptions that follow, when we talk about the integer value of _stat_, we're referring to this 16 bit value.
In the diagram that follows, the vertical arrows represent inheritance, and the parentheses metaclasses.
In the early years, the beginning of the year varied, sometimes based on the ascension of rulers.
In the event of a rollback, it may not be possible to restore the database to its original configuration.
In the event that an invalid digit is found, halt the conversion and return the portion which has been converted thus far.
In the example below, the two processes close the ends of the pipe that they are not using.
In the first case, if the conflict-handling mode is REPLACE, then the conflicting row can be removed before proceeding.
In the first case, return NULL.
In the first case, set *piEndBlock  to the integer value and *pnByte to zero before returning.
In the first form, if no arguments are sent, the new array will be empty.
In the first form, keys and values occur in pairs, so there must be an even number of arguments.
In the first pass over the image, we accumulate a histogram showing the usage count of each possible color.
In the fixed position argument style, zero as a step (i.e. num.step(limit, 0)) is not allowed for historical compatibility reasons.
In the flow context, do nothing.
In the following examples, we present whole documents together with the produced tokens.
In the former case a NULL pointer is returned the user and the later is an internal programming error.
In the former case a NULL pointer is returned the user and the latter is an internal programming error.
In the former case, we do not have to allocate any handles
In the future, full Unicode case mapping adapted for Lithuanian (keeping the dot on the lower case i even if there is an accent on top).
In the future, we'll allow someone to register an error handler
In the latter case, *newlen will be 0.
In the latter case, a recursive call to match() is always required, unless the second alternative doesn't exist, in which case we can just plough on.
In the latter case, all inner func are short-circuited by throw.
In the latter case, no database will be created.
In the legacy version, the original SQL text is not saved in the prepared statement and so if a schema change occurs, SQLITE_SCHEMA is returned by sqlite3_step().
In the more common case where writable static data is supported, wsdHooks can refer directly to the "sqlite3Hooks" state vector declared above.
In the more common case where writable static data is supported, wsdPrng can refer directly to the "sqlite3Prng" state vector declared above.
In the more common case where writable static data is supported, wsdStat can refer directly to the "sqlite3Autoext" state vector declared above.
In the more common case where writable static data is supported, wsdStat can refer directly to the "sqlite3Stat" state vector declared above.
In the new version, the original SQL text is retained and the statement is automatically recompiled if an schema change occurs.
In the normal case (8+3 filenames disabled) the journal filename is guaranteed to contain a '-' character.
In the other hands, we shouldn't call rb_thread_wakeup_timer_thread() if running on timer thread because it may make endless wakeups.
In the pathelogical case where no blanks are found, then the wrap occurs at the first blank.
In the places where this routine is used, it does not hurt to get an extra 2 - that just might result in some slightly slower code.
In the positive case, it can cause firstchar to be set.
In the pre-compile phase, accumulate the length of any extra data and reset the pointer.
In the pre-compile phase, do a syntax check, remember the longest name, and then remember the group in a vector, expanding it if necessary.
In the pre-compile phase, do a syntax check.
In the pre-compile phase, however, the code pointer can have that value after the start, because it gets reset as code is discarded during the pre-compile.
In the pre-compile phase, update the length by the length of the group, less the brackets at either end.
In the pre-compile phase, we can move the code pointer back to where it was for the start of the first branch.
In the pre-compile phase, we don't actually do the replication.
In the previous versions, MSBs of the seed affect
In the real compile phase, go back through the alternative branches and reverse the chain of offsets, with the field in the BRA item now becoming an offset to the first alternative.
In the real compile phase, just check the workspace used by the forward reference list.
In the real compile phase, there is some post-processing to be done.
In the real compile this will be picked up and the reference wrapped with OP_ONCE to make it atomic, so we must space in case this occurs.
In the real compile we do the work of looking for the actual reference.
In the real compile, search the name table.
In the real version, B is passed to DLASDQ and multiplied internally by Q'.
In the real version, B is passed to SLASDQ and multiplied internally by Q'.
In the recommended keyword argument style, either or both of +step+ and +limit+ (default infinity) can be omitted.
In the second ::handle_interrupt block we can purposefully handle RuntimeError exceptions.
In the second case, SQLITE_CONSTRAINT must be returned regardless of the conflict-handling mode specified by the user.
In the second case, we can use tail recursion to avoid using another stack frame, unless we have an an atomic group or an unlimited repeat of a group that can match an empty string.
In the second form this pragma sets the text encoding to be used in new database files created using this database handle.
In the second form, the primary key is (a,b,...)
In the second pass we must see if the name is duplicated.
In the second phase this is a sufficient test.
In the second,  set *piEndBlock to the first value and *pnByte to the second.
In the second, deprecated, form, a generated Enumerator iterates over the given object using the given method with the given arguments passed.
In the second, increment the ref-count on *pStruct and return a copy of the pointer to it.
In the statement  INSERT INTO t(a,b,c) ...
In the third form, we have to use a intermediate table to store the results of the select.
In the third form, we have to use an intermediate table to store the results of the select.
In the usual case where WSD is supported, the SQLITE_WSD and GLOBAL macros become no-ops and have zero performance impact.
In theory it would be Ok to update the cache of the header only at this point.
In theory this code could just pass SQLITE_TRANSIENT as the final argument to sqlite3ValueSetStr() and have the copy created  automatically.
In theory we could just set events to D.
In theory we should allow an extra byte below, since we don't need the NULL.
In theory, it is only necessary to write the 28 bytes that the  journal header consumes to the journal file here.
In theory, the call to unixFileLock() cannot fail because another process is holding an incompatible lock.
In theory, the close(fd) call is sub-optimal.
In theory, this branch should never be hit, as this function should only be called after a locking-related function (i.e. fcntl()) has returned non-zero with the value of errno as the first argument.
In theory, you could get away with only having pipes and not using the linked lists at all.
In these cases the fk constraint counters might be set incorrectly if any OP_FkCounter related scans are  omitted.
In these cases the parameters are named as per the usual conventions.
In these cases we can just copy the pointer.
In these cases, instances of the following structure are used to store the file descriptor while waiting for an opportunity to either close or reuse it.
In these cases, signals may have been sent to preceding processes.
In these cases, therefore, an indirection via a local function is used.
In these routine, the letters are in reverse order.
In these three cases, if an index is negative, it is counted from the end of the string.
In this branch is execute only when DIFF_ASSOC.
In this branch, the RHS of the IN might contain a NULL and the presence of a NULL on the RHS makes a difference in the outcome.
In this case  allocate the array used to accumulate the matchinfo data and initialize those elements that are constant for every row.
In this case (*pRegFree) may be set to the number of a temporary register to be freed by the caller before returning.
In this case (*pnOut) is set to the size of the output buffer in bytes.
In this case *piOff is always set to -1.
In this case *pp is set to 0 and the function returns.
In this case *ppVfs is set to point to the VFS that should be used to open the database file.
In this case Expr.iTable is set to 1 for the new.* pseudo-table, or 0 for the old.* pseudo-table.
In this case N is the number of simple select statements in the compound sub-query.
In this case PCRE_INCLUDED is defined.
In this case SQLITE_NOMEM is returned and *ppStmt set to NULL.
In this case SQLite runs a "DELETE FROM xxx" on the table being dropped before actually dropping it in order to check FK constraints.
In this case SQLite should continue accessing the database using the xRead() and xWrite() methods.
In this case Table.tnum  refers VDBE cursor number that holds the table open, not to the root page number.
In this case Vdbe.aOp and Parse.nOpAlloc remain  unchanged (this is so that any opcodes already allocated can be  correctly deallocated along with the rest of the Vdbe).
In this case Vdbe.aOp and Vdbe.nOpAlloc remain  unchanged (this is so that any opcodes already allocated can be  correctly deallocated along with the rest of the Vdbe).
In this case a new blob handle is required.
In this case abandon processing and return the error.
In this case all co-resident pages must have been written to the journal file before returning.
In this case all that is required is to call vdbePmaReaderNext() on each PmaReader to point it at its first key.
In this case an error is left in pParse.
In this case avoid the all to nodeWrite().
In this case b-tree root pages may be moved or deleted from the database altogether, making it unsafe for read cursors to continue.
In this case btreeMoveto() recognizes that the cursor is already where it needs to be and returns without doing any work.
In this case call the balance_deeper() function to create a new child for the root-page and copy the current contents of the root-page to it.
In this case calling Fts3SegReaderPending might segfault, as the data structures used by  fts4aux are not completely populated.
In this case checkpoint the database and unlink both the wal and wal-index files.
In this case configure the iterator so that it points to the first rowid on this page.
In this case delete the contents of all three tables and throw away any data in the pendingTerms hash table.
In this case do not skip forward 2 bytes.
In this case either  the update or pre-update hook, or both, may be invoked.
In this case exit early.
In this case foreign keys are parsed, but no other functionality is  provided (enforcement of FK constraints requires the triggers sub-system).
In this case foreign keys are parsed, but no other functionality is provided (enforcement of FK constraints requires the triggers sub-system).
In this case free the pMerger argument before returning.
In this case if sqlite3BtreeEnter() were to be called, it might collide with some other operation on the database handle that owns *p, causing undefined behavior.
In this case ignore stat3 data.
In this case invalidate all incrblob cursors open on any row within the table with root-page pgnoRoot.
In this case invalidate only those incrblob cursors open on that specific row.
In this case it is likely enough that the redundant xSync() call will be changed to a no-op by the OS anyhow.
In this case it is necessary to add a term to the b-tree hierarchy that is (a) larger than the largest term  already written to the segment and (b) smaller than or equal to this term.
In this case it is not possible to determine the size of the segment, and so segment promotion does not take place.
In this case it is the responsibility of the caller to eventually free the buffer using a call to sqlite3_free().
In this case it returns 1.
In this case it sets the default encoding that will be used for the main database file if a new file is created.
In this case it sets the output variable to the total number of known foreign key violations in the destination database and returns SQLITE_OK.
In this case it should be freed along with the Parse object.
In this case jump to the address specified as the p2 of the calling OP_Program.
In this case just update the pager cache, not the database file.
In this case leave the iterator empty.
In this case no foreign key functionality is available.
In this case no operations are required on index b-trees.
In this case none of the code in this module is executed as a result of calls made on the journal file-handle.
In this case pager_truncate() is called unconditionally (which means there may be a call to xFilesize() that is not strictly required).
In this case parameter regSelect should be the first in an array of registers containing the results of the sub-select.
In this case pnOut is set to the number of bytes in the output doclist.
In this case processing is immediately abandoned and the streaming API function returns a copy of the xOutput error code to the application.
In this case remove the conflicting row before reattempting the INSERT.
In this case retry the operation, but pass NULL as the final argument so that sessionApplyOneOp() ignores the SQLITE_CHANGESET_DATA problem.
In this case run the balancing algorithm on the leaf node first.
In this case see the discussion below for details.
In this case set bSkipnext to true.
In this case set the BTS_PENDING flag to 0.
In this case stop reading  the journal file here.
In this case the  contents of the entire transaction are rolled back.
In this case the  correct response for the end-of-loop code (the OP_Return) is to  fall through to the next instruction, just as an OP_Next does if called on an uninitialized cursor.
In this case the auto-vacuum applies as per normal.
In this case the buffer will be used to store the converted string to, and may be resized (made larger) if needed.
In this case the buffers consist of a delta-encoded list of rowids only.
In this case the call to sqlite3OsTruncate() below will fix the size of the file.
In this case the caller attempts to remove the conflicting row before invoking this function again, this time with pbReplace set  to NULL.
In this case the caller is required to call releasePage() on *ppChild exactly once.
In this case the caller must call sqlite3DbFree(db, ) on *pzErr.
In this case the caller will invoke this function again, this time with pbRetry set to NULL.
In this case the existing value within the target database table must be of type BLOB.
In this case the file will be updated when the current transaction is committed.
In this case the first 28 bytes of the journal file may be written as part of committing the transaction.
In this case the first call to balance() repairs the tree, and the if(...) condition is never true.
In this case the journal file is flushed to disk either when it grows larger than nSpill bytes in size, or when sqlite3JournalCreate() is called.
In this case the journal file is just deleted using OsDelete, *pExists is set to 0 and SQLITE_OK is returned.
In this case the journal file should be closed and deleted.
In this case the journal file will never be created for this transaction.
In this case the last page is never written out to disk, leaving the database file undersized.
In this case the locking-mode must be set on all attached databases, as well as the main db file.
In this case the memory image of the  page is initialized to all zeros.
In this case the node-size is determined by inspecting the root node of the tree.
In this case the non-PK fields are omitted entirely.
In this case the pcache already contains an initialized copy of the page.
In this case the position-list is not populated at all.
In this case the previous term is not available, so just write a copy of (pTerm/nTerm) into the parent node.
In this case the purpose of this call is to estimate the number of rows returned by the overall query.
In this case the return value of this  function should never be used.
In this case the returned value is  undefined.
In this case the row change  count is incremented by the number of rows in the table being cleared.
In this case the subspace iterator is not buffered.
In this case the user is required to provide a rowid explicitly.
In this case the value is assumed to be an SQL NULL,  The expression is a bound variable, and this is a reprepare, or  The expression is a literal value.
In this case the values written to output parameters *pnLog and *pnCkpt are undefined.
In this case the whole cell needs to be parsed, a buffer allocated and accessPayload() used to retrieve the record into the buffer before VdbeRecordCompare() can be called.
In this case the xDelete, if any, is not invoked.
In this case there have been no changes to the database file, so the playback operation can be skipped.
In this case there is a separate term for each of (x) and (y).
In this case there is no "blocking connection", so invoking sqlite3_unlock_notify() results in the unlock-notify callback being invoked immediately.
In this case there is no need to make a copy of the data, just return a  pointer into the buffer to the caller.
In this case there is no way of knowing which of the pages that have been copied into the destination database are still  valid and which are not, so the entire process needs to be restarted.
In this case there is room on the trunk page to insert the page being freed as a new leaf.
In this case there may exist a Pager.pMap mapping that appears to be the right size but is not actually valid.
In this case there need not be overflow if certain parts of the pattern were not used, even though there are more capturing parentheses than vector slots.
In this case this function is a no-op.
In this case this function runs a blocking checkpoint.
In this case this line will also update Z_STRVAL_P(op2) to point to the new string.
In this case this routine will return a false-positive.
In this case this value is all that is required.
In this case vdbePmaReaderNext() is called on all child PmaReaders and the current PmaReader set to point to the first key in its range.
In this case we accept the default page size and delay actually opening the file until the first call to OsWrite().
In this case we are only interested in rows changed, not rows retrieved.
In this case we can mark the page as clean, since there will be no need to write it out to the database.
In this case we cannot use an incremental phrase.
In this case we ignore all text in the remainder of the path, name or value currently being parsed.
In this case we must scan the list of groups to which the name refers, and use the first one that is set.
In this case we need an additional EOC (one for the explicit part and one for the Constructive itself.
In this case we simply fallback to interpreter.
In this case we would like to delete the journal file.
In this case zWhere is passed to sqlite3DbFree() before returning.
In this case,  because the index contains entries for both "first" and "1st", prefix queries such as 'fi*' or '1s*' will match correctly.
In this case, *pzErrmsg may also be set to point to an error message.
In this case, Expr.zSpan is typically the text of a column expression as it exists in a SELECT statement.
In this case, add zero token entries to the hash table and  return early.
In this case, all BtShared mutexes and the mutex associated with the database handle itself must be held.
In this case, append or insert the specified token into the token queue.
In this case, assume that the Pager.pageSize variable is already set to the correct page size.
In this case, call balance_nonroot() to redistribute cells between pPage and up to 2 of its sibling pages.
In this case, do not set the no-content flag.
In this case, errno is set appropriately (by fcntl()).
In this case, even if SQLITE_ENABLE_STAT3/4 was defined  during compilation and the sqlite_stat3/4 table is present, no data is  read from it.
In this case, fts5 assumes that the final value of *ppOut  is undefined.
In this case, generate code to evaluate the expression and leave the result in register iReg.
In this case, if argument pzErrMsg is not NULL, *pzErrMsg may be set to point to a buffer containing an English language error  message.
In this case, if isDirect is non-zero, then the database file is updated directly by writing an updated version of page 1 using a call to the  sqlite3OsWrite() function.
In this case, if the checksum of the wal-index-header following recovery is not the same as the checksum saved in the RbuState object, then the rbu handle is set to DONE state.
In this case, instead of sorting the records and writing the PMA to a temporary file itself, the calling thread usually launches a worker thread to do so.
In this case, instead of using a counter, an exception is thrown immediately if the INSERT violates a foreign key constraint.
In this case, it is guaranteed that the database page  pPg refers to will not be written to again within this transaction.
In this case, it is not considered.
In this case, it is only safe to reuse the buffer if the amount of data copied is not more then the current axes, as is the case when reuse_reduce_loops was active already.
In this case, jump to the next row.
In this case, keys are always delivered to the sorter in order of the primary key, which happens to be make up the final part  of the records being sorted.
In this case, loop returns the "result" value stored in the exception.
In this case, no temporary files are required and subsequent calls to Rowkey(), Next() and Compare() read records  directly from main memory.
In this case, no work is done on iAbsLevel - fall through to the next iteration of the loop  to start work on some other level.
In this case, on UNIX, if the state database is not already present in the file-system, it is created with the same permissions as the target db is made.
In this case, proceed.
In this case, set iDb to -1 here, to indicate that the VDBE should verify the integrity of all attached databases.
In this case, set the column type to NULL, even though it should really be "INTEGER".
In this case, the  In the above example, this means that the tokenizer returns the same token for inputs "first" and "1st".
In this case, the RHS is an index b-tree.
In this case, the RHS is the ROWID of table b-tree
In this case, the RHS is the ROWID of table b-tree and so we also know that the RHS is non-NULL.
In this case, the buffer is always being used
In this case, the buffer is being used
In this case, the custom VFS must be explicitly created by the user before the RBU handle is opened.
In this case, the eventual  call to fts3InsertData() (either just below or further on in this function) will return SQLITE_MISMATCH.
In this case, the first call to sqltie3Fts4DoclistPrev() below would also move the iterator to point to the last entry in the  doclist.
In this case, the integrity of database iDb only is verified by the VDBE created below.
In this case, the map will fail and we have to sleep some time (until the child releases the mapping object) and retry.
In this case, the remaining permission bits will be synthesized to resemble typical values.
In this case, the salt will have changed.
In this case, the token BLOCK-SEQUENCE-START is not produced:  key: - item 1    # BLOCK-SEQUENCE-START is NOT produced here.
In this case, the transaction has already been committed  (by deleting a master journal file) and the caller will ignore this  functions return code.
In this case, the transfer function has a 'decsrcref' transfer function, so we can use it to do the decrement.
In this case, use an intkey B-Tree to store the set of IN(...) values instead of the usual (slower) variable length keys B-Tree.
In this case, we can reuse the reduce loops
In this case, we can't reuse the reduce loops
In this case, we do what Perl does: advance the matching position by one character, and continue.
In this circumstance, Perl ignores the SKIP entirely.
In this class, BCE years are counted astronomically.
In this document, "input buffer" means the buffer for input, and "output buffer" means the buffer for output.
In this document, the astronomical Julian day number is same as the original Julian day number.
In this document, the astronomical modified Julian day number is same as the original modified Julian day number.
In this document, when the term "Julian day number" simply appears, it just refers to "chronological Julian day number", not the original.
In this document, when the term "modified Julian day number" simply appears, it just refers to "chronological modified Julian day number", not the original.
In this encoding mb-trail bytes doesn't mix with single bytes.
In this environment, fi and i, and fc and c, can be the same variables.
In this first example, we don't reap the first child process, so it appears as a zombie in the process status display.
In this implementation, a single file can hold one or more separate  BTrees.
In this implementation, error checking is provided for testing and debugging purposes.
In this instance, IO.open returns the value of the block.
In this instance, that is ok because we want binary zero to be flagged as a meta-character, which in this sense is any character that terminates a run of data characters.
In this mode, write each query result to the key of the temporary table iParm.
In this module the prescan simply updates the histogram, which has been initialized to zeroes by start_pass.
In this routine, the "p" parameter is a pointer to the outer query.
In this say, all root pages are kept at the beginning of the database file, which is necessary for AUTOVACUUM to work right.
In this situation, the compressor will return to its caller (possibly with an indication that it has not accepted all the supplied scanlines).
In this situation, the decompressor will return to its caller (with an indication of the number of scanlines it has read, if any).
In this state the integer just read was a docid.
In this state the transaction may be committed simply by finalizing the journal file.
In this state we are expecting either a 1, indicating that the following integer will be a column number, or the start of a position list for column 0.
In this version of BtreeMoveto, pKey is a packed index record such as is generated by the OP_MakeRecord opcode.
In this version the elements of A are accessed sequentially with one pass through A.
In this version the elements of A are accessed sequentially with one pass through the triangular part of A.
In this version, it is assumed that each SegReader points to an entry in a doclist for identical terms.
In this version, keys are Class object or Symbol object.
In this version, keys are symbol objects.
In this way the topmost value on the stack is always belong to the current backtrack code path.
In this way, if rScore is the same for all SearchPoints, then iLevel becomes the deciding factor and the result is a depth-first search, which is the desired default behavior.
In this way, if the  higher level code is using pointer to the old allocation, it is  much more likely to break and we are much more liking to find the error.
In this way, if there is a race condition such that another thread has already populated the first page of the database, no damage is done.
In this way, terms get disabled if derived virtual terms are tested first.
In this way, the first chunk has an index of 1.
In this way, the initialization of the sqlite3_context object occurs only once, rather than once for each evaluation of the function.
In this way, the initialization of the sqlite3_context only happens once, instead of on each call to the step function.
In this way, we know that the memory is safe to be overwritten or altered.
In those cases,  the bitmap becomes dense with high cardinality.
In those cases, the following call to btreeInitPage() will likely return SQLITE_CORRUPT.
In those classes, this is so-called "civil".
In those classes, this is so-called "mjd".
In those classes, this is so-called "ordinal".
In those classes, this so-called "commercial".
In those classes, those are so-called "ajd" and "jd".
In threaded environments, we have to mutex lock to do this init, but we don't want to use a mutex every time to check that it was Inited.
In which case the bIncr flag is set.
In xShmLock(), one can go from unlocked to shared and back or from unlocked to exclusive and back.
In-memory journal file
In-memory list of records
Include btree.h in the middle of sqliteInt.h
Include btreeInt.h in the middle of btmutex.c
Include code that is common to all os_*.c files
Include fts3.h in the middle of main.c
Include fts3Int.h in the middle of fts3.c
Include fts3_hash.h in the middle of fts3Int.h
Include fts3_tokenizer.h in the middle of fts3Int.h
Include hash.h in the middle of sqliteInt.h
Include hidden columns in output
Include hwtime.h in the middle of os_common.h
Include hwtime.h in the middle of vdbe.c
Include kanji filter main part
Include keywordhash.h in the middle of tokenize.c
Include msvc.h in the middle of sqliteInt.h
Include mutex.h in the middle of sqliteInt.h
Include opcodes.h in the middle of vdbe.h
Include os.h in the middle of sqliteInt.h
Include os_common.h in the middle of mutex_w32.c
Include os_common.h in the middle of os_unix.c
Include os_common.h in the middle of os_win.c
Include os_setup.h in the middle of os.h
Include os_win.h in the middle of mutex_w32.c
Include pager.h in the middle of sqliteInt.h
Include parse.h in the middle of sqliteInt.h
Include pcache.h in the middle of sqliteInt.h
Include pragma.h in the middle of pragma.c
Include rtree.h in the middle of main.c
Include sqlite3.h in the middle of sqliteInt.h
Include sqlite3ext.h in the middle of loadext.c
Include sqlite3rbu.h in the middle of sqlite3rbu.c
Include sqliteLimit.h in the middle of sqliteInt.h
Include sqliteicu.h in the middle of main.c
Include standard header files as necessary
Include stuff ************************************************************
Include the configuration header output by 'configure' if we're using the autoconf-based build
Include the current year, so subtract 2.
Include the header file for the Windows VFS.
Include the header file used to customize the compiler options for MSVC.
Include the malloc.h header file, if necessary.
Include the primary Windows SDK header file.
Include vdbe.h in the middle of sqliteInt.h
Include vdbeInt.h in the middle of status.c
Include vxworks.h in the middle of sqliteInt.h
Include wal.h in the middle of pager.c
Include whereInt.h in the middle of where.c
Include whereInt.h in the middle of wherecode.c
Includes definition for u_char
Includes the ALL keyword
Including a description of file format and an overview of operation.
Including formatting, parsing errors, etc.
Including the return address saved by the call instruction.
Incorrectly concluding that the GNU version is available  could lead to a segfault though.
Incr-merge parameter A
Increase security by not caching privileged oci_pconnect() connections.
Increase the allocation size to provide an extra nExtra bytes of 8-byte aligned space after the Index object and return a pointer to this extra space in *ppExtra.
Increase the flow level and resize the simple key list if needed.
Increase the flow level.
Increase the indentation level.
Increase the leaves written counter
Increase the list size if necessary
Increase the reference count of a supplied page by 1.
Increase the size of the aTo set by one
Increase the size of the memory allocation for StrAccum if necessary.
Increase the total number of bytes written to account for the new entry.
Increases the stack pointer.
Increasing NN above 1 (to 2 or 3) gives a modest improvement in SELECT and DELETE performance in exchange for a larger degradation in INSERT and UPDATE performance.
Increasing the STR_PTR here requires one less jump in the most common case.
Incref all objects found at this record
Incref before decref to avoid the possibility of the reference count being zero temporarily.
Increment Parse.nHeight by the height of the largest expression tree referred to by this, the parent select.
Increment constraint counter by this
Increment if we need to change the format.
Increment iteration count
Increment our pretend rowid value.
Increment pSpace by nOff to align it
Increment the "number of sequential leaves without a term" counter.
Increment the entry counter accordingly.
Increment the free page count on pPage1
Increment the generation count.
Increment the last counter.
Increment the max so the range is inclusive of max
Increment the nRef value on all name contexts from TopNC up to the point where the name matched.
Increment the r-tree reference count.
Increment the reference count for page pPg.
Increment the reference count of an existing page
Increment the reference count of node p.
Increment the row counter
Increment the value just read and write it back to byte 24.
Increment the value of P1 so that OP_Once opcodes will jump the first time they are evaluated for this run.
Increment the value stored in the P2 operand of the OP_Rowid.
Incremental loading is used for b-tree nodes FTS3_NODE_CHUNK_THRESHOLD  bytes and larger.
Incremental merges happen nMin segments at a time.
Incrementally read one PMA
Incrementally write one PMA
Incremented with each busy call
Incremented with each change
Incrementing a digit always results in another digit, and incrementing a letter results in another letter of the same case.
Incrementing nonalphanumerics uses the underlying character set's collating sequence.
Incrementing the refcount of obj and inf would confuse the garbage collector.
Indeed, using PHP_POLLREADABLE results in select failing only due to the timeout and not immediately as would be expected when a connection is actively refused.
Indentation treatment.
Independent implementation of MD5 (RFC 1321).
Index (0..Fts3Table.nIndex-1)
Index 0 is an index of all the terms that appear in the document set.
Index 0 is the main database file and index 1 is the file used for temporary tables.
Index Name      Table Name
Index added to make the name unique
Index btrees (used for indexes and also WITHOUT ROWID tables) contain an arbitrary key and no data.
Index error, since that is the usual error for raise mode
Index everything by number
Index for the variable is stored using the numeric value of the pointer to the zend_refcounted struct
Index identifier string
Index in aData of first cell pointer
Index in pWC of the next virtual term
Index in the parent table
Index interior and leaf nodes
Index into aSub array
Index into input list
Index into pNode into which pCell is written
Index into the cache with adjusted pixel value
Index into the cell pointer array
Index into the table below with the first byte of a UTF-8 sequence to get the number of trailing bytes that are supposed to follow it.
Index is a slice object.
Index is an ellipsis (`...`)
Index is np.newaxis/None
Index key to query for
Index level just updated
Index of "the page" in pParent
Index of *output* segment in iAbsLevel+1
Index of PmaReader to advance
Index of VdbeCursor that writes the sqlite_stat1 table
Index of WhereLoop in pPath being processed
Index of a host parameter
Index of candidate output segment
Index of cell to delete
Index of changed index field
Index of child node in parent
Index of column in child table
Index of column in first table
Index of column in pFrom
Index of column in pTab
Index of column in parent tbl
Index of column in second table
Index of column in table
Index of column matching zCol
Index of column this phrase must match
Index of column to create snippet from
Index of column to read value from
Index of column zName applies to
Index of conflict record value to fetch
Index of constrained coordinate
Index of constraint to use
Index of containing database.
Index of current page in apPage
Index of current sample accessed by stat_get()
Index of database containing pTab
Index of database containing table/index
Index of database holding TABLE
Index of database housing pTab
Index of database to analyze
Index of first cell currently on page
Index of first cell to add
Index of first cell to the left of right sibling
Index of first record in sub-journal
Index of first table to join in pSrc
Index of first token in snippet
Index of free page to move pLastPg to
Index of function argument.
Index of iDelete cell in pLeaf
Index of iterator to advance
Index of last frame read
Index of last valid frame in the WAL
Index of left-hand Fts5SegIter
Index of loop to report on
Index of new first cell on page
Index of new output segment
Index of new, merged, PMA
Index of new.* value to retrieve
Index of next byte to read from input
Index of next byte to write to output
Index of next entry to replace
Index of next field to compare
Index of next free chunk
Index of next token to be returned
Index of old.* value to retrieve
Index of parent of each node
Index of previous free chunk
Index of rbu_control column
Index of right-hand Fts5SegIter
Index of right-most cell in left sibling
Index of second table in pSrc
Index of statement to evaluate
Index of sub-iterator just advanced
Index of the OR-term to be analyzed
Index of the cell within the node
Index of the column in the table
Index of the column to extract
Index of the database containing the table to lock
Index of the database holding pTab
Index of the database that is being written
Index of the database to use
Index of the equality term within this level
Index of the new VdbeCursor
Index of the parameter to bind
Index of the table column
Index of the term to be analyzed
Index of this phrase in matchinfo() results
Index of top element in stack
Index of zColumn in row-record
Index on key columns in pTo
Index on parent covering the foreign key
Index structure corresponding to u1.zIndexedBy
Index structure corresponding to zIndex, if any
Index that owns this iterator
Index to consider domain of
Index to match column of
Index to read column names from
Index used to optimize scan, or NULL
Index within level of segment to modify
Index within level, or 0x7FFFFFFF for PT
Index.aiRowEst may already be set here if there are duplicate  sqlite_stat1 entries for this index. In that case just clobber the old data with the new instead of allocating a new array.
Index.nSample is non-zero at this point if data has already been loaded from the stat4 table.
Indexable AND  subterms have their eOperator set to WO_AND and they have u.pAndInfo set to a dynamically allocated WhereAndTerm object.
Indexed column is an expression
Indexed column is the rowid
Indexed columns affinity
Indicate a non-UTF class which was created by negation
Indicate that a reduction is occurring
Indicate that all subsequent calls to sqlite3Fts5IndexWrite() pertain to the document with rowid iRowid.
Indicate that byte order or alignment needs fixing
Indicate that registers between iReg..iReg+nReg-1 are being overwritten.
Indicate that some of the perm entries are negative, and that it's not (strictly speaking) the identity perm.
Indicate that sqlite3ParserFree() will never be called with a null pointer.
Indicate that subsequent calls to sqlite3Fts5IndexWrite() pertain to document iDocid.
Indicate that the accumulator load should be skipped on this iteration of the aggregate loop.
Indicate that the holidays weren't allocated by us
Indicate that there is a global colour map
Indicate that this .c file is allowed to include the header
Indicate that this is a fancy index that comes from a 0d boolean.
Indicate that this operand needs casting
Indicate that this was a special value, and is a date (unit 'D').
Indicate that this was a special value, and recommend generic units.
Indicate that this was a special value, and use 's' because the time() function has resolution seconds.
Indicate to query, that result is released
Indicate to result, that query is released
Indicate whether to use the min_scalar_type function
Indicate which REDUCE operands have stride 0 at the current level
Indicate which REDUCE operands have stride 0 in the inner loop
Indicate which pass we are on (if interlace)
Indicates a pending lock has been obtained
Indicates a reserved lock has been obtained
Indicates an exclusive lock has been obtained
Indicates caselessness
Indicates in the itflags that whether the iteration order was forced.
Indicates that dbm_open() should open the database in read-only mode
Indicates that dbm_open() should open the database in read/write mode
Indicates that dbm_open() should open the database in read/write mode, and create it if it does not already exist
Indicates that dbm_open() should open the database in read/write mode, create it if it does not already exist, and delete all contents if it does already exist.
Indicates the certificate has been revoked either permanently or temporarily (on hold).
Indicates the certificate is not revoked but does not necessarily mean the certificate was issued or that this response is within the certificate's validity interval
Indicates the responder does not know about the certificate being requested.
Indicates which iterator to reset with new base pointers each iteration step.
Indices are selected and used to speed the search when doing so is applicable.
Indices built on an undefined collating sequence may not be read or written.
Indices of 2 or more are used for attached databases.
Indices of various locking bytes.
Indirect offsets are not valid at level 0.
Individual OS interface implementations will want to subclass this object by appending additional fields for their own use.
Individual bits may be set or cleared one at a time.
Individual characters in zCharSet
Inequality constraint at range end
Inequality constraint at range start
Inferno libmach/8db.c http://code.google.com/p/inferno-os/source/browse/utils/libmach/8db.c
Infinite length encodings are always constructed.
Infinite length encodings are not allowed in strict DER, so strictly speaking the result of such an encoding would be a BER-encoding.
Infinity or NaN, convert to inf or nan with sign.
Infinity or Nan, convert to inf or nan like printf
Info about index keys needed by index cursors
Info about locks on this inode
Info about the callback functions
Info for single OR-term scan
Info from: http://sc.openoffice.org/compdocfileformat.pdf  N.B.
Info on how to code the DISTINCT keyword
Info on how to code the ORDER BY clause
InfoZip stores valid values in local header even when data descriptor is used.
Information about AUTOINCREMENT counters
Information about aggregates at this level
Information about an AUTOINCREMENT
Information about each column
Information about each format field
Information about each nest loop in WHERE
Information about each nested IN operator
Information about how to do the compare
Information about most recent match
Information about the ORDER BY clause
Information about the WHERE clause
Information about the current state of the WAL file and where the next fsync should occur - passed from sqlite3WalFrames() into walWriteToLog().
Information about the function
Information about the record format
Information about this WHERE
Information and control of an open file handle.
Information for internal btree tables
Information for virtual tables
Information held in the "sqlite3" database connection object and used to manage user authentication.
Information is passed back and forth as PgHdr1 pointers.
Information is passed from codeCursorHint() down to individual nodes of the expression tree (by sqlite3WalkExpr()) using an instance of this structure.
Information on the ORDER BY clause
Information stored includes:  +  The state number for the parser at this level of the stack.
Information used by aggregate queries
Information used during initialization
Information used while coding trigger programs.
Information was available, but we were denied access.
Informational stream wrapper constants
Infrastructure for working with persistent COM objects.
Inherit special functions if needed
Inherit the interfaces, only if they're not already inherited by the class
Inidcates the distacne the autofocus camera is focused to.
Init all digests, ciphers
Init auto-global strings
Init nFree to non-freeblock free space
Init: initialize coroutine registers yield coA if eof(A) goto EofA yield coB if eof(B) goto EofB Cmpr: Compare A, B Jump AltB, AeqB, AgtB End: ...
Initiailize our structure
Initial DOT must be matched literally.
Initial bulk allocation size
Initial checksum value input
Initial cost estimate
Initial hash value H for SHA-256:
Initial hash value H for SHA-384
Initial hash value H for SHA-512
Initial key schedule permutation
Initial number of leaf cells on trunk page
Initial number of pages on free-list
Initial permutation/expansion table
Initial size is zero for global storage is zero
Initial size of write buffer
Initial sources code is avaibable in the Gems Source Code Packages: http://www.acm.org/pubs/tog/GraphicsGems/GGemsIII.tar.gz
Initial space for EQP output string
Initial split checking via dqd and Li's test.
Initial value of write-counter
Initial working space
Initialise FastCGI request structure
Initialise columns k+1:n to columns of the unit matrix
Initialise rows k+1:m to rows of the unit matrix
Initialization context
Initialization function for the module
Initialize API pointer table, if required.
Initialize CV variables (skip arguments)
Initialize F90 module objects
Initialize PmaReader pReadr to scan through the PMA stored in file pFile starting at offset iStart and ending at offset iEof-1.
Initialize Ruby internal seeds.
Initialize VP routines
Initialize WORK(IWK3).
Initialize Z, if necessary
Initialize a DbFixer structure.
Initialize a PMA-writer object.
Initialize a SelectDest structure.
Initialize a WHERE clause scanner object.
Initialize a WhereMaskSet object
Initialize a file-writer object.
Initialize a lookahead iterator for each phrase.
Initialize a node-reader object to read the node in buffer aNode/nNode.
Initialize a number NUM by making it a copy of zero.
Initialize a preallocated WhereClause structure.
Initialize a string accumulator
Initialize a string accumulator.
Initialize a term iterator for each term in the phrase
Initialize a tokenizer iterator to iterate through column iCol.
Initialize access to the PyDateTime API
Initialize all array objects to NULL to make cleanup easier if something goes wrong.
Initialize all database files - the main database file, the file used to store temporary tables, and any additional database files created using ATTACH statements.
Initialize all iterators
Initialize all term iterators in the NEAR object.
Initialize all term iterators in the pNear object.
Initialize all the operands and dtypes to NULL
Initialize an array of N Mem element.
Initialize an array that records the number of times a variable is assigned to by the format string.
Initialize and deinitialize the mutex subsystem.
Initialize and deinitialize the operating system interface.
Initialize and fill this JsonParse object
Initialize and shutdown the page cache subsystem
Initialize any AUTOINCREMENT data structures required.
Initialize best-distance for each cell of the update box
Initialize buffer data (must set the buffers and transferdata to NULL before we might deallocate the iterator).
Initialize bulk memory to be a consistent Mem object.
Initialize context as NULL
Initialize destination --- called by jpeg_start_compress before any data is actually written.
Initialize divide loop.
Initialize each of the component segment iterators.
Initialize execute_data
Initialize for "real" parentheses
Initialize for pre-compile phase
Initialize for use in FirstVisit, which may be called before the buffers are filled and the reduce pos is updated.
Initialize from environment variables before processing command-line options: the latter override the former.
Initialize generator state with seed See Knuth TAOCP Vol 2, 3rd Ed, p.106 for multiplier.
Initialize global handles if they weren't initialized before
Initialize here for LIMIT_MATCH/RECURSION
Initialize iLast, the "lastest" rowid any iterator points to.
Initialize in case this module hasn't been loaded yet
Initialize instance interface and scriptable object class.
Initialize iterator pIter to scan through the PMA stored in file pFile starting at offset iStart and ending at offset iEof-1.
Initialize locking callbacks, needed for thread safety.
Initialize memory locations used by GROUP BY aggregate processing
Initialize memory that will be converted into a BtCursor object.
Initialize module globals
Initialize no first byte, no required byte.
Initialize nonzerocoord based on the first coordinate
Initialize one box containing whole space
Initialize registers with the prev.
Initialize return array
Initialize return object
Initialize return value
Initialize returned array
Initialize some basic variables
Initialize some reference arrays.
Initialize source --- called by jpeg_read_header before any data is actually read.
Initialize sqlite3_vtab_cursor base class
Initialize structure containing state of computation.
Initialize structure with current time
Initialize target object
Initialize the 32-char bit map to all zeros.
Initialize the 4-byte leaf-page header to 0x00.
Initialize the BLOB value of a ROWID
Initialize the Compression routines
Initialize the INTEGER value of a ROWID.
Initialize the JsonString object
Initialize the MemPage.pBt and MemPage.aData elements if needed.
Initialize the MergeEngine object passed as the second argument.
Initialize the PCache object.
Initialize the VDBE program
Initialize the auxiliary information for a disk block.
Initialize the buffer
Initialize the buffers to the current iterindex
Initialize the contents of sLocal to avoid a compiler warning.
Initialize the contents of the SnippetIter object.
Initialize the contents of the unixFile structure pointed to by pId.
Initialize the count of rows to be inserted
Initialize the count of updated rows
Initialize the counter of the number of rows deleted, if we are counting rows.
Initialize the destination to all zeros
Initialize the error-limiting transfer function (lookup table).
Initialize the first page of the database file (creating a database consisting of a single page and no schema objects).
Initialize the fts3 extension.
Initialize the iterator object indicated by the final parameter to  iterate through coalesced phrase instances in column iCol.
Initialize the iterator object pIter to iterate through the entries in segment pSeg.
Initialize the iterator structure passed as the second argument.
Initialize the iterators.
Initialize the local lockdata
Initialize the locking parameters
Initialize the master block.
Initialize the memory allocation subsystem.
Initialize the memory allocator
Initialize the memory allocator.
Initialize the mutex system.
Initialize the name-context
Initialize the new float type
Initialize the next page.
Initialize the node to no-match
Initialize the number of element in the table
Initialize the object pIter to point to term pTerm/nTerm within segment pSeg.
Initialize the object pIter to point to term pTerm/nTerm within the in-memory hash table.
Initialize the operating system interface.
Initialize the output buffer
Initialize the output fields of the sqlite3_index_info structure
Initialize the output to all zeros
Initialize the output variables to -1 in case an error occurs.
Initialize the pParse structure as needed.
Initialize the perm to the identity
Initialize the pointers.
Initialize the result string
Initialize the result to the reduction unit if possible, otherwise copy the initial values and get a view to the rest.
Initialize the return array
Initialize the return value as an array.
Initialize the return_value as an array.
Initialize the rowset register to contain NULL.
Initialize the scanner and produce the STREAM-START token.
Initialize the shared memory if we're supposed to
Initialize the simple key stack.
Initialize the state of the random number generator once, the first time this routine is called.
Initialize the strideperm values to the identity.
Initialize the strides to invalid values
Initialize the structure.
Initialize the subtract.
Initialize the temporary index cursor just opened as a sorter cursor.
Initialize the upper limit on the number of worker threads
Initialize the variables.
Initialize this module.
Initialize time struct
Initialize to point to the op_axes arrays
Initialize top heap pointers
Initialize types in numpymemoryview.c
Initialize various tables.
Initialize vdbe cursor object
Initialize zType for the new view or table.
Initialized only to suppress erroneous warning from Clang
Initializer for Vp routines and constants used.
Initializes the Ruby VM and builtin libraries.
Initializing the tail of the buffer is not necessary.
Initilize notice message hash at MINIT only
Initilize session ID from non cookie values
Injecting a fault at this point  confuses the test scripts - the COMMIT comand returns SQLITE_NOMEM but the transaction is committed anyway.
Injecting a fault at this point confuses the test scripts - the COMMIT comand returns SQLITE_NOMEM but the transaction is committed anyway.
Injects SNMP properties into object on first call
Inlining simple patterns.
Inner loop contiguous array means its stride won't change when switching between buffering and not buffering
Inner loop for unravel_index
Inner loop like REDUCE
Inode information need not be flushed.
Inotify Ocaml binding - C glue
Input "x" is a sequence of unsigned characters that represent a big-endian integer.
Input JSON text to be parsed
Input and output files
Input and output images
Input buffer or stream
Input character index
Input code assumption
Input contains fewer than nChar chars
Input data may be supplied either as a single large buffer (e.g. sqlite3changeset_start()) or using a stream function (e.g. sqlite3changeset_start_strm()).
Input flags to control the opening
Input is good at this point
Input path for each iteration of loop
Input pointer (updated)
Input stream call (or NULL)
Input string argument
Input text being tokenized
Input types are the result type
Input/Output pointers
Input: Mask of columns used by statement
Inputs: A pointer to the function used to allocate memory.
Inputs: code:   A n_bits-bit integer.
Insert 'ch' at position 'pos'  Returns 1 if the line needs to be refreshed, 2 if not and 0 if nothing was inserted (no room)
Insert a fake EOI marker
Insert a new FuncDef into a FuncDefHash hash table.
Insert a new cell on pPage at cell index "i".
Insert a new record into the BTree.
Insert a new row into the FTS content table.
Insert a new value into a RowSet.
Insert a zero after the decimal.
Insert an OP_CursorHint instruction if it is appropriate to do so.
Insert an OP_Halt at the end of the sub-program.
Insert an automatic callout point       *
Insert an element into the hash table pH.
Insert an implicit AND operator.
Insert cell pCell into node pNode.
Insert code into "v" that will push the record in register regData into the sorter.
Insert code to test every subexpression that can be completely computed using the current set of tables.
Insert data into the table of this cursor
Insert divider cells into pParent as necessary.
Insert fake frame in case of include or magic calls
Insert into dictionary
Insert into hash collision list
Insert magic constant and build info
Insert name into nameslist
Insert new divider cells into pParent.
Insert on a main table b-tree
Insert or remove data to or from the index. Each time a document is  added to or removed from the index, this function is called one or more times.
Insert or replace a WhereLoop entry using the template supplied.
Insert or replace a decomposition.
Insert padding manually
Insert the actual char
Insert the code in order.
Insert the contents of cell pCell into node pNode.
Insert the end of a co-routine
Insert the i-th overflow cell before the aiOvfl-th non-overflow cell
Insert the new divider cell into pParent.
Insert the new freeblock into the freelist
Insert the new index entries and the new record.
Insert the new record into the r-tree
Insert the new sample
Insert the recursion/subroutine item.
Inserting a single row into a parent table cannot cause (or fix) an immediate foreign key violation.
Inserting a single row into a parent table cannot cause an immediate foreign key violation.
Insertion failed because database is full
Inserts are grouped into a transaction.
Inserts can be intermixed with tests to see if a given rowid has been previously inserted into the RowSet.
Inside a class (and only there) it is treated as backspace.
Inside chunk it's managed by pages of fixed size 4096B.
Inspired by "How to Print Floating-Point Numbers Accurately" by Guy L.
Inspired by http://stackoverflow.com/questions/6161776/convert-windows-filetime-to-second-in-unix-linux
Inspired loosely by William D.
Install our own signal handler.
Install the diff hooks on the session object passed as the only argument.
Install the pre-update hooks on the session object passed as the only argument.
Installers may consider modifying the STOP statement in order to call system-specific exception-handling facilities.
Instance methods appear as methods in a class when the module is included, module methods do not.
Instance of shared memory on this file
Instances are never allocated any other way.
Instances of struct TriggerStep are stored in a singly linked list (linked using the "pNext" member) referenced by the "step_list" member of the  associated struct Trigger instance.
Instances of struct TriggerStep are stored in a singly linked list (linked using the "pNext" member) referenced by the "step_list" member of the associated struct Trigger instance.
Instances of this structure are used to build strings or binary records.
Instead delete and recreate.
Instead it creates "imposter" tables using the SQLITE_TESTCTRL_IMPOSTER interface that it uses to update each b-tree individually.
Instead modify the script and run it to regenerate this code.
Instead of a lock on the table/index rooted at page iRoot, the caller may hold a write-lock on the schema table (root page 1).
Instead of a true 3-D array, we use a row of pointers to 2-D arrays.
Instead of doing that, set the cursor state to "invalid".
Instead of invoking the conflict handler, append the change blob to the SessionApplyCtx.constraints buffer.
Instead of printing a message and stopping the execution, a ValueError is raised with the message.
Instead of reading the value out of the header, it instead loads the "DataVersion" from the pager.
Instead of recomputing the entire layout every single time, we cache some information to break early when nothing changed
Instead of resolving full real path name each time we need to identify file, we create a key that consist from requested file name, current working directory, current include_path, etc
Instead of trying to balance the 3 right-most leaf pages, just add a new page to the right-hand side and put the one new entry in that page.
Instead of using a prefix-index (if one exists),  evaluate the prefix query using the main FTS index. This is used for internal sanity checking by the integrity-check in debug  mode only.
Instead simply initialize the global in win32/time.c for gettimeofday() use later on
Instead the frame and page numbers that would be read and written are recorded.
Instead they are used to allocate space for VdbeCursor/BtCursor structures.
Instead use __name__ and __module__.
Instead, Win32OLE provides WIN32OLE::ARGV or WIN32OLE_VARIANT object.
Instead, a process that requests an EXCLUSIVE lock may actually obtain a PENDING lock.
Instead, a special call of pcre_exec() * is made with the PCRE_NOTEMPTY_ATSTART and PCRE_ANCHORED flags set.
Instead, any extra data allocated with the buffer is released only in array_dealloc.
Instead, create a synthetic root node that contains nothing but a  pointer to the single content node.
Instead, forget about the specific key values and just allocate and initialize per-thread storage until we find a key that writes to the memory location we want.
Instead, if an error occurs, true is returned (indicating that  data is available) and the error code returned when xColumn or some other method is next invoked on the save virtual table cursor.
Instead, invoke the unlock-notify callback with the context array already accumulated.
Instead, it assumes a hot-journal exists and obtains an EXCLUSIVE lock on the database file before attempting to roll it back.
Instead, it is linked into the Vdbe.pDelFrame list.
Instead, it is recommended you specify the type of events you want to use.
Instead, it should be called via macro osGetpagesize().
Instead, it stores the same values (A, B and C above) in a register array and makes a single invocation of VUpdate.
Instead, it tests that the same set of pgno/rowid combinations are  visited regardless of whether the doclist-index identified by parameters iSegid/iLeaf is iterated in forwards or reverse order.
Instead, just count through the strings.
Instead, just supply small dummy tables.
Instead, mark the stream as OK to auto-clean
Instead, pager_unlock() is called.
Instead, reports on the link itself.
Instead, set output variables *paRoot and *pnRoot to contain the root node.
Instead, simply invoke the syntax error routine and continue going as if nothing had happened.
Instead, sort the VdbeSorter.pRecord list.
Instead, store a boolean result (either 0, or 1, or NULL) in register P2.
Instead, the canonical data storage is a covering index btree.
Instead, the divider  cell consists of the integer key for the right-most cell of  the sibling-page assembled above only.
Instead, the entire table should be passed to sqlite3_free_table() when the calling procedure is finished using it.
Instead, the error code is returned to the caller.
Instead, the integer values is written into u.iValue and the EP_IntValue flag is set.
Instead, the number is converted to a string and back again using strtod().
Instead, the term is inserted into the parent of pTree.
Instead, they are moved from the Table.pVTable list to another linked list headed by the sqlite3.pDisconnect member of the corresponding sqlite3 structure.
Instead, they use win_reserve()
Instead, this function serves only to release outstanding resources.
Instead, upgrade the priority of the highest priority existing sample that shares this prefix.
Instead, we catch it when the OP_END is reached.
Instead, we compute with fewer bits and propagate the carry if necessary when rounding the final digit up.
Instead, we simply count through to the one we want - this isn't a performance issue because these strings are used only when there is a compilation error.
Instead, we use CTRL+BREAK signal.
Instr Prefix or media op
Instr Prefix or media op extension
Instruction always returns double, the conversion is certainly fine
Instruction bit sections.
Instruction number of OP_Function
Instruction number of OP_Function opcode
Instruction pc is the OP_Program that invoked the sub-program  currently being halted.
Instruction pcx is the OP_Program that invoked the sub-program  currently being halted.
Instruction to jump to for RAISE(IGNORE)
Instruction to open the Ephemeral table
Instruction to open the Ephermeral table
Instructions after the current alternative is successfully matched.
Instructions before the first alternative.
Instructions take this many bytes.
Instructions that cannot be bundled are padded out with nops, rather than fnops.
Insufficient room for saving captured contents.
Int to accommodate truecolor single-color transparency
Intead, open the *-oal.
Integer a equals rational a/1 mathematically.
Integer key for tables.
Integer overflow check
Integer primary key index
Integer primary key is autoincrement
Integer to fixed point
Integer value contained in u.iValue
Integer value of left operand
Integer value of limit
Integer value of right operand
Integer value used when MEM_Int is set in flags
Integer values: An 8-byte big-endian integer value.
Integers of known sizes.
Integration of ICU and SQLite collation sequences.
Integrity check context
Integrity checking context
Intended for user save handlers.
Intentionally the other opcode.
Interchange to search points in a cursor.
Interface can only inherit other interfaces
Interface routines refer to a Mem using the name sqlite_value
Interface to automatically generated code in fts5_unicode2.c.
Interface to code in fts5.c.
Interface to code in fts5_aux.c.
Interface to code in fts5_buffer.c.
Interface to code in fts5_config.c.
Interface to code in fts5_expr.c.
Interface to code in fts5_hash.c.
Interface to code in fts5_index.c.
Interface to code in fts5_storage.c.
Interface to code in fts5_tokenizer.c.
Interface to code in fts5_varint.c.
Interface to code in fts5_vocab.c.
Interface to the rest of the where.c subsystem follows.
Interface to the testing logic.
Interfaces for opening a shared library, finding entry points within the shared library, and closing the shared library.
Interfaces to extend FTS5.
Interior nodes are written using InteriorWriter, and read using InteriorReader.
InteriorWriters are created as needed when SegmentWriter creates new leaf nodes, or when an interior node itself grows too big and must be split.
Internal change requires this for API compatibility.
Internal data pointers
Internal data structure corruption will result otherwise.
Internal doclist index nodes are:  Flags byte.
Internal error constants
Internal error in issuer
Internal function prototypes
Internal helper functions private to this file
Internal href try and find node
Internal interface definitions for SQLite.
Internal logic error in SQLite
Internal method used to provide marshalling support.
Internal parameter types honor strict_types
Internal promote types function which handles unsigned integers which fit in same-sized signed integers specially.
Internal return types are always strict
Internal stack (for component operators).
Internal types used by SQLite.
Internal variant with calloc argument for PyArray_Zeros.
Internal-use-only converters allowed
Internal/core SQLite code should call sqlite3MemoryAlarm.
Internal/core SQLite code should call sqlite3TransferBindings.
Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, -1).
Internally, +spawn+ uses an extra file descriptor to resolve such cyclic file descriptor mapping.
Internally, each RBU connection uses a separate SQLite database  connection to access the target and rbu update databases.
Internally, the vdbe manipulates nearly all SQL values as Mem structures.
Internationalized format string.
Interned strings are not duplicated when stored in HashTable, but all the interned strings created during HTTP request are removed at end of request.
Interned strings support
Interpolation using THREE most relevant poles
Interpret the argument as a blob.
Interpret the argument as a unicode codepoint.
Interpret the given string as a boolean value.
Interpret the given string as a locking mode value.
Interpret the given string as a safety level.
Interpret the given string as a temp db location.
Interpret the given string as an auto-vacuum mode value.
Interpreted as follows:  FTS5_SEGITER_ONETERM: If set, set the iterator to point to EOF after the current doclist  has been exhausted.
IntlDateFormatter functions
Introduce constants included in OP_ALL.
Introduction   The following notes assume that you are familiar with the YAML specification (http://yaml.org/spec/cvs/current.html).
Introspection for algorithmic converters
Invalid 0xfe or 0xff bytes
Invalid chunk length, truncate
Invalid parameters were passed to ldap_explode_dn
Invalid query fails at execution anyway.
Invalid rule to return a more explicit parse error with proper line number
Invalid sequence, so just return the byte
Invalid value for ISPEC
Invalidate all cached KeyInfo objects for database connection "db"
Invalidate all ephemeral cursor row caches
Invalidate all incrblob cursors open on table iTable (assuming iTable is the root of a table b-tree - if it is not, the following call is a no-op).
Invalidate all prepared statements whenever the TEMP database schema is changed.
Invalidate any prior representations.
Invalidate cached hash value
Invalidate temp storage, either when the temp storage is changed from default, or when 'file' and the temp_store_directory has changed
Invalidate the cached results.
Invalidate the current position list for phrase pPhrase.
Invalidate the existing cache, otherwise reads can fail, see note in main/streams/filter.c::_php_stream_filter_append
Invalidate the overflow cache of the cursor passed as the first argument.
Invalidate the overflow page-list cache for all cursors opened on the shared btree structure pBt.
Invariant: If the closure is unscoped or static, it has no bound object.
Invert a changeset object.
Invert the P-box permutation, and convert into OR-masks for handling the output of the S-box arrays setup above.
Invert the S-boxes, reordering the input bits.
Invert the key compression permutation.
Invert the key permutation and initialise the inverted key compression permutation.
Invert the result for DESC sort order.
Invert the triangular Cholesky factor U or L.
Inverts the bits in an integer.
Invoke  the busy callback if the lock is currently not available.
Invoke AFTER DELETE trigger programs.
Invoke BEFORE DELETE trigger programs.
Invoke MustBeInt to coerce the child key value to an integer (i.e.  apply the affinity of the parent key).
Invoke SQLITE_FCNTL_MMAP_SIZE based on the current value of szMmap.
Invoke a virtual table constructor (either xCreate or xConnect).
Invoke any destructors registered for collation sequence user data.
Invoke either the xSavepoint, xRollbackTo or xRelease method of all virtual tables that currently have an open transaction.
Invoke it and retry the lock until either the lock is successfully obtained or the busy-handler returns 0.
Invoke sqlite3_declare_vtab() to declare the schema for the FTS3 table passed as the first argument.
Invoke sqlite3_log() to provide the source code location where a low-level error is first detected.
Invoke sqlite3_wal_checkpoint if the number of frames in the log file is greater than sqlite3.pWalArg cast to an integer (the value configured by wal_autocheckpoint()).
Invoke the 'collation needed' callback to request a collation sequence in the encoding enc of name zName, length nName.
Invoke the OP_AggFinalize opcode for every aggregate function in the AggInfo structure.
Invoke the VDBE coverage callback, if that callback is defined.
Invoke the __toString() method
Invoke the authorization callback for permission to read column zCol from table zTab in database zDb.
Invoke the authorization callback.
Invoke the busy handler for a btree.
Invoke the callback function if required
Invoke the callback once for each node of the expression, while decending.
Invoke the callback once for each node of the expression, while descending.
Invoke the callback once if the
Invoke the conflict handler for the change that the changeset iterator currently points to.
Invoke the coroutine to extract information from the SELECT and add it to a transient table srcTab.
Invoke the destructor function associated with FuncDef p, if any.
Invoke the given busy handler.
Invoke the main loop body as a subroutine
Invoke the pre-update hook, if any
Invoke the pre-update hook.
Invoke the pre-update-hook if required.
Invoke the profile callback if there is one
Invoke the profile callback.
Invoke the stat_init() function.
Invoke the supplied conflict handler callback to resolve any conflicts encountered while applying the change.
Invoke the token callback
Invoke the tokenizer destructor to free the tokenizer.
Invoke the update-hook if required.
Invoke the virtual table constructor
Invoke the virtual table xBestIndex() method
Invoke the xBegin method.
Invoke the xCommit method of all virtual tables in the  sqlite3.aVTrans array.
Invoke the xFileControl method on a particular database.
Invoke the xFilter method
Invoke the xNext method of an Fts5ExprNode object.
Invoke the xNext() method of the module.
Invoke the xRollback method of all virtual tables in the  sqlite3.aVTrans array.
Invoke the xSync method of all virtual tables in the sqlite3.aVTrans array.
Invoke this callback routine
Invoke this macro on memory cells just prior to changing the value of the cell.
Invoke this routine to register the "dbstat" virtual table module
Invoke xProgress() when nVmStep reaches this
Invoke'd args are in reverse order
Invoked at every commit.
Invoked by sqlite3FaultSim()
Invoked to set output variables.
Invoked when a user calls Phar::mapPhar() from within an executing .phar to set up its manifest directly
Invoking Api.xUserData() returns a copy of the pointer passed as  the third argument to pUserData.
Involve the rest of the password 8 characters at a time.
Is Fortran variable or array (not allocatable)
Is Parent waiting for children to exit
Is a label of an object
Is an alias for a result set column
Is converted to an array after op flags are retrieved
Is is misuse to call this routine with statements from different database connections.
Is the PRIMARY KEY for the table
Is the function static
Is used while compiling a function, using the context to keep track of an approximate size to avoid to relocate to often.
IsOrdinaryHiddenColumn() only works for non-virtual tables (ordinary tables and views) and is always false unless SQLITE_ENABLE_HIDDEN_COLUMNS is defined.
IsScalar(o2, Floating)
Isolated 10xx xxxx byte
Issue a STREAM-END event.
Issue a STREAM-START event.
Issue an error message if it does.
Issues to be discussed: - Thread safe-ness must be checked - Return values.
Issues to be discussed: - Thread safe-ness must be checked.
It  cannot be dropped as there are currently active SQL statements.
It  invokes callbacks registered with sqlite3_wal_hook() as required.
It  is not considered an error if the iterator reaches EOF.
It  is therefore not possible for an in-memory pager to enter the ERROR  state.
It  just sets the internal state of the pager object so that the  truncation will be done when the current transaction is committed.
It *target is NULL then we allocate a large enough buffer, store the converted string into it, and make target point to it.
It adds entries for each term in the new record to the pendingTerms hash table.
It ain't gonna proceed to real execution anyway, but the correct descriptor is needed already.
It allows a short password or passphrase to be used to create a secure encryption key.
It allows line break in the middle of the base64 encoding.
It allows to specify multiple curve names and OpenSSL will select automatically from them.
It already handles the boolean array special case for fancy indexing, i.e. if the index type is boolean, it is exactly one matching boolean array.
It also accepts EUC-JP.
It also assumes that if two files are created in the same file-system directory (i.e. a database and its journal file) that the sector size will be the same for both.
It also assumes that the path is not empty
It also checks that non-blank dims will match with the corresponding values in arr dimensions.
It also contains code to merge FTS3 b-tree segments.
It also contains definitions of "finder" functions.
It also contains part of the implementation of the SQLITE_CONFIG_PAGECACHE and sqlite3_release_memory() features.
It also decrements the VTable ref count.
It also doesn't worry about multi-byte characters.
It also guarantees the most significant two digits will not be '11'(bin), '77'(oct), 'ff'(hex) or '00'.
It also helps build the error message
It also may not - the GROUP BY may use a database index that causes rows to be grouped together as required but not actually sorted.
It also may not - the GROUP BY might use a database index that causes rows to be grouped together as required but not actually sorted.
It also records the original primary key and other column values of any deleted or updated rows.
It also sets Mem.flags to MEM_Null.
It also sets a flag in local variable "flags" to indicate the memory management (one of MEM_Dyn or MEM_Static).
It also simplifies the handling of Z_ADDREF_P because we don't need to check if only either NUM or ASSOC is set but not both.
It also specified that there would be exactly 12 months per year and 365.25 days per year with every 4th year being a leap year.
It also updates the arrays VF and VL, the first and last components of all the right singular vectors of the original bidiagonal matrix.
It always marks the initial point, crosses at least one zone, and marks the final point.
It always returns SQLITE_OK.
It an error if database zFrom does not exist or does not contain the required compatible table.
It appears that Perl allows any characters whatsoever, other than a closing parenthesis, to appear in arguments, so we no longer insist on letters, digits, and underscores.
It appears that configure will set SETPGRP_VOID
It appears that the service API is a little bit confused about which flag to use for the source and destination in the case of a restore operation.
It assumes that EMAX + abs(EMIN) sum approximately to a power of 2.
It assumes that names are unique.
It behaves as if it had been called after setlocale(LC_CTYPE, ""), that is it looks at the locale environment variables.
It blocks on the situation IO#sysread causes Errno::EWOULDBLOCK as if the fd is blocking mode.
It blocks only when no data immediately available.
It builds a tree of MergeEngine/IncrMerger/PmaReader objects that  can be used to incrementally merge all PMAs on disk.
It caches the current key in  variables nKey/aKey.
It calculates a hash based on the primary key values of the old.* or  new.* row currently available and, assuming no error occurs, writes it to piHash before returning.
It calls out to saveCursorsOnList() in the (unusual) event that cursors are in need to being saved.
It came out of the approach we used above, and it's not any worse than any other choice we could make.)  It is crucial that we don't do the same to the expanded key used in the main Eksblowfish loop.
It can be a string such as "+09:00" or a number of seconds such as 32400.
It can be a symbol or a string which is the constant name with or without PF_ prefix such as :INET, :INET6, :UNIX, "PF_INET", etc.
It can be a symbol or a string which is the constant name with or without SOCK_ prefix such as :STREAM, :DGRAM, :RAW, "SOCK_STREAM", etc.
It can be acquired only when it is zero.
It can be observed by Encoding::InvalidByteSequenceError#readagain_bytes and Encoding::Converter#primitive_errinfo.
It can be omitted and everything will still work.
It can be specified in query string, or in the POST data.
It can be used to clean up  any outstanding resources before process shutdown, if required.
It can be used to provide more operating system specific functionality than the protocol-specific socket classes.
It can either be a value or a callable object.
It can happen for fancy indexing or with newaxis.
It can still happen if the user locks the underlying tables directly  instead of accessing them via FTS.
It can take a single integer argument (a numeric index), a pair of arguments (start and length) or a range.
It cannot be negative.
It cannot dynamically allocate memory because it might be called while the memory allocator mutex is held.
It cannot normally ever be NULL.
It cannot transition between SHARED and EXCLUSIVE.
It causes an assert() to fire if either operand to a comparison operator is NULL.
It checks if the existing segment with index value iIdx at absolute level  (iAbsLevel+1) can be appended to by the incremental merge.
It checks that the primitives for serializing and deserializing characters in each encoding are inverses of each other.
It checks that the sqlite3.nTransaction variable is correctly set to the number of non-transaction savepoints currently in the  linked list starting at sqlite3.pSavepoint.
It checks to see if, instead of appending to the current log file, it is possible to overwrite the start of the existing log file with the new frames (i.e. "reset" the log).
It checks whether a safe prime and a suitable generator are used.
It clears all cached data  specific to the previous row stored by the cursor object.
It closes the directory and file handles, if they are valid, and sets all fields of the unixFile structure to 0.
It considerably speeds things up to do a normal load before trying using an atomic operation.
It consists of three parts.
It constructs a string where each character of the string is the unicode character for the corresponding integer argument.
It contains bitset of free pages, few bitset for available runs of predefined small sizes, map of pages that keeps information about usage of each page in this CHUNK, etc.
It contains service information about all pages.
It contains socket #family, control message (cmsg) #level, cmsg #type and cmsg #data.
It converts input kanji code to designated kanji code such as ISO-2022-JP, Shift_JIS, EUC-JP, UTF-8 or UTF-16.
It converts the expression given in its argument from a TK_STRING into a TK_ID if the expression is just a TK_STRING with an optional COLLATE clause.
It converts the first argument and returns converted result.
It converts up to ucs4len characters of UCS2  It returns the number of characters converted which can be less than ucs2len if there are surrogate pairs in ucs2.
It could be an array, a 0-d array is handled a bit weird however, so need to special case it.
It could be any of the following:  - The original ndbm library is released in 4.3BSD.
It could be done with a sort and sweep algorithm, but the structured dtype representation is rather ugly right now, so writing something better can wait until that representation is made sane.
It could be that the work of the "thread" is done by the main thread at either the sqlite3ThreadCreate() or sqlite3ThreadJoin() call.
It could be used later.
It could conceivably fail on hexadecimal or decimal machines without guard digits, but we know of none.
It could even be done at compile time, if the compiler were capable of that sort of thing.
It could then potentially be written out into the database file before its journal file segment is synced.
It creates the environment variables that indicates call graph mode.
It currently recognizes ISO-2022-JP, Shift_JIS, EUC-JP, UTF-8 and UTF-16.
It decides which operands need a buffer, and copies the data into the buffers.
It defines dbm_pagfno() and dbm_dirfno() as macros.
It depends on a particular ordering of TK_xx
It depends on session data change.
It determines if the current pre-update-hook change affects the same row as the change stored in argument pChange.
It determines the number of and names of the columns of the new FTS4 table.
It determines whether or not the features related to  SQLITE_CONFIG_MEMSTATUS are available by default or not.
It determines whether the layout request is redundant and can be skipped.
It differs from mask in being the opposite (True where a region exists, versus the mask, which is True where a data point is bad), and in that it marks zones, not points.
It distributes the remaining space amongst the items whose min/max constraints didn't trigger in pass 1.
It do not change over-length encodings to 0xfffd as some systems recommend.
It does *not* invoke the busy handler when upgrading from SHARED to RESERVED, or when upgrading from SHARED to EXCLUSIVE (which occurs during hot-journal rollback).
It does not account for hexadecimal or decimal machines without guard digits (we know of none).
It does not add  extra data to the FTS index or require FTS5 to query for multiple terms, so it is efficient in terms of disk space and query speed.
It does not change over-length encodings to 0xfffd as some systems recommend.
It does not check that the expression does not exceed the  maximum allowable depth.
It does not contribute to  FTS functionality, or even the integrity-check, in any way.
It does not do expression rebalancing.
It does not explicitly say so, but this implies that it overrides locks set by the same process using a different file descriptor.
It does not function in an ordinary build.
It does not happen for IO-like objects such as OpenSSL::SSL::SSLSocket.
It does not have a set first character (relevant if it is repeated, because it will then be wrapped with ONCE brackets).
It does not have any networking code.
It does not make a copy of the position-list size field.
It does not matter if the  PRIMARY KEY is an "INTEGER PRIMARY KEY" (rowid alias) or not.
It does not matter if the PRIMARY KEY is an "INTEGER PRIMARY KEY" (rowid alias) or not.
It does not modify the b-tree.
It does not move the input pointer.
It does not need to be destroyed.
It does not really matter.
It does not record to the history if the inputted line is empty or the same it as last one.
It does not support ExtHeaders as defined in the spec.
It does not support vertical inline directions (top-to-bottom or bottom-to-top text).
It does not unlink the table data structure from the hash table.
It does not work to bind to a new array, and continue.
It does so by validating +sig+ using the public key of this DSA instance.
It does the work of the thread in the main thread, when either the thread is created or when it is joined
It does this by scanning through all stat4 samples, comparing values extracted from pLower and pUpper with the corresponding column in each sample.
It does work if you subtract pt.
It does, however, expect the extra short to be allocated for each element.
It doesn't block if some data available.
It doesn't cause Errno::EWOULDBLOCK and Errno::EINTR.
It doesn't provide dbm_pagfno() and dbm_dirfno().
It doesn't seem worth having a separate .h file just for this.
It doesn't store the length in the first short, as with VARCHAR fields.
It ensures that the result currently stored in *pRes is the correct result of comparing the current positions of the two iterators.
It exists solely for verifying the correct operation of the SQLite library.
It extends Enumerable module, so it behaves just like an array.
It figures out how many disjoint curves there will be, and identifies slits for the two level case or open contours for the single level case, and removes all but the actual start markers.
It fills the array of index_info structs correctly.
It finds the first available slot using pthread_key_create and uses it as the offset value for runtime.tlsg.
It first tries "sqlite3_extension_init".
It found Tishri 1 at the end of the year.
It found Tishri 1 at the start of the year.
It frees the memory allocated for the tokenizer hash table.
It furthermore allows a non-sorted traversal of all key-value pairs.
It gets harder and harder to shut off unwanted compiler warnings.
It has a different name to distinguish its use.
It has all the context it needs
It has been modified to return the converted value as a * parameter.
It has emerged from apache snprintf.
It has its own equivalent internal routines.
It has no method for destructive update.
It has nothing to do with __ufunc_api.c
It has one position 70 (72-2) and then terminates with the 0 at K.
It has to be a real table with multiple rows.
It has to be used in one particular way.
It has, however, been hacked around a lot, so he is not to blame for the current way it works.
It implements atomic commit and rollback through the use of a journal file that is separate from the database file.
It initializes the most fundamental classes and their metaclasses.
It is *not* necessary to hold the mutex when this routine is called, even on VxWorks.
It is Adar II or later - don't need the year length.
It is Kislev - must find the year length.
It is Tevet, Shevat or Adar I - don't need the year length.
It is Tishri or Heshvan - don't need the year length.
It is a bad situation.
It is a good idea to use alloca(0) in your main control loop, etc.
It is a grievous error for the application to try to use a prepared statement after it has been finalized.
It is a hack intended for Windows only.
It is a little slower when the integer is two or more bytes.
It is a malloc'd array that is freed by qh_freebuffers.
It is a no-op unless SQLITE_ENABLE_8_3_NAMES is defined.
It is a non-escaped non-blank character.
It is a number computed by the pager.
It is a part of the unitary matrix that reduces the full dense Hermitian matrix to a (reducible) symmetric tridiagonal matrix.
It is a plausibility check for the function parameters (requirements engineering).
It is a public value that can be safely stored along with the password (e.g. if PBKDF2 is used for password storage).
It is a read-only number computed by the pager.
It is a subclass of IndexError.
It is a type of message authentication code (MAC) involving a hash function in combination with a key.
It is a warning message
It is acceptable to use a read-only (mmap) page for any page except page 1 if there is no write-transaction open or the ACQUIRE_READONLY flag was specified by the caller.
It is added into the firstchar or reqchar variables to record the case status of the value.
It is added to certain comparison operators to prove that the operands are always NOT NULL.
It is against the rules to open a column to which either of these descriptions applies for writing.
It is allocated by compile_matchingpath, and contains the arguments for compile_backtrackingpath.
It is allocated on the stack, but if it is too small, it is expanded using malloc(), in a similar way to the workspace.
It is allocated when the first character is generated via big2str_alloc.
It is already known that pMem contains an unterminated string.
It is also defined in the file "loadext.c".
It is also needed by FTS3 when FTS3 is included in the amalgamation.
It is also possible to use just the second pass to map to an arbitrary externally-given color map.
It is also used in various digital signature schemes.
It is always sent to PHP at the start of a request.
It is amended  so that the accompanying values are as if the row was updated once  by the existing change and then again by the new change.
It is an asymmetric public key algorithm that may be used similar to e.g. RSA.
It is an error for P1 to be negative.
It is an error for P3 to be less than 1.
It is an error for register ranges P1..P1+P3-1 and P2..P2+P3-1 to overlap.
It is an error for the '-' indicator to occur in the flow context, but we let the Parser detect and report about it because the Parser is able to point to the context.
It is an error if leaf iLeafPgno does not exist or contains no rowids.
It is an error if the string is already of the desired encoding, or if *pMem does not contain a string value.
It is an error to call this function if pPager is opened on an in-memory database.
It is an error to call this function if the page is already  part of the PGroup LRU list.
It is an error to specify non-NULL values for both docid and some other rowid alias.
It is announced 6 months before the leap second.
It is around 3KB smaller than the correct size calculated by thinfo.__pi_stackend - thinfo.__pi_stackaddr.
It is assigned a node number when nodeWrite() is called to write the node contents out to the database.
It is assumed that it is not already a part of the list.
It is assumed that the buffer associated with pNode is already large enough to accommodate the new entry.
It is assumed that the caller has allocated sufficient space.
It is assumed that the caller holds appropriate locks.
It is assumed that the cell content has been copied someplace else.
It is assumed that the mutex associated with the BtShared object corresponding to the source database is held when this function is called.
It is assumed that the page is not already a part of the free-list.
It is assumed that the sqlite3BtreeCursorZero() has been called on pCur to initialize the memory space prior to invoking this routine.
It is assumed that there is a SHARED or greater lock on the file already.
It is bad to have uninitialized OBJECT pointers which could also be sub-fields of a VOID array
It is based on dbm library in Unix Version 7 but has different API to support multiple databases in a process.
It is best to avoid this because if FTS3 returns any error when  committing a transaction, the whole transaction will be rolled back.
It is better  not to risk breaking vxworks support for the sake of such an obscure  feature.
It is better to eject a page that does not require a journal sync than one that does.
It is better to execute the op on an index, as indexes are almost always spread across less pages than their corresponding tables.
It is called by an LAPACK routine if an input parameter has an invalid value.
It is called from could_be_empty() below and from compile_branch() when checking for an unlimited repeat of a group that can match nothing.
It is called from many different places.
It is caller's responsibility to free the returned value.
It is cleared (set to false) whenever an exclusive lock is  relinquished on the database file.
It is common for the entire key and data to fit on the local page and for there to be no overflow pages.
It is considered impossible for an index to use more than 1024 levels.
It is copied here from SQLite source code file utf8.c.
It is defined as a constant under the Encoding namespace.
It is defined for connection oriented socket such as TCPSocket.
It is derived directly from the text of the RFC and not from the reference implementation.
It is difficult to guess the future.
It is documented that this happens.
It is done like this so that those without OP_RECURSE that are not fixed length get a diagnosic with a useful offset.
It is done this way to save having to use another function argument, which would take up space on the stack.
It is easier just to erase the whole table.
It is enabled using the SQLITE_ENABLE_FTS3 macro.
It is especially useful in threaded programming when information must be exchanged safely between multiple threads.
It is essentially a facade for all of these, and more.
It is essentially equivalent to  localtime_r() available under most POSIX platforms, except that the  order of the parameters is reversed.
It is even worse than that.
It is eventually freed along with the rest of the foreign key object by  sqlite3FkDelete().
It is expected that the table has nCol columns.
It is expected to return a single row.
It is experimental, and intended for future debugging.
It is faster for the common case where the integer is a single byte.
It is filled concurrently by the workers.
It is flushed to disk whenever xSync(), xRelease() or xSavepoint() is called.
It is guaranteed not to be whitespace or # when the extended flag is set.
It is guaranteed that the initial value of ptr is greater than the start of the string that is being processed.
It is guaranteed that the initial value of ptr is less than the end of the string that is being processed.
It is guaranteed that the page said hash-table and array reside on is already mapped.
It is guaranteed that zTerm is larger (according to memcmp) than the previous term.
It is harmless to call this on a VM that is in the SQLITE_MAGIC_HALT state.
It is harmless to register the same VFS multiple times.
It is helpful to detect this before calling freePage2(), as  freePage2() may zero the page contents if secure-delete mode is enabled.
It is illegal for both pazCol and pabPK to be NULL.
It is illegal to call sqlite3PagerAcquire() until after this function has been successfully called.
It is illegal to call sqlite3PagerGet() until after this function has been successfully called.
It is illegal to drop a table if any cursors are open on the database.
It is illegal to drop the sqlite_master table on page 1.
It is illegal to open, release or rollback any such savepoints while the statement transaction savepoint is active.
It is illegal to use this instruction on a register that does not contain an integer.
It is illegal to write to  virtual module tables in this case, so return SQLITE_LOCKED.
It is implemented below.
It is implemented by the pluggable module.
It is important that it is created as an auto-vacuum capable db.
It is important to check for IMAGE_FILETYPE_TIFF JPEG does not use absolute pointers instead its pointers are relative to the start of the TIFF header in APP1 section.
It is important to note that you cannot register callbacks for normal events and internal events simultaneously because they are different purpose.
It is important to run this code, but we don't want to run it too often and soak up CPU cycles for no reason.
It is important to verify that allocations that might have been satisfied by lookaside are not passed back to non-lookaside free() routines.
It is important, therefore, to check the length along the reference, not along the subject (earlier code did this wrong).
It is in the public domain.
It is in widespread use in public key infrastuctures (PKI) where certificates (cf.
It is included for historical compatibility and is not documented.
It is included only for the very lazy.
It is incremented by SQLite whenever the database schema is modified (by creating or dropping a table or index).
It is incremented each time the wal file is restarted.
It is initialized to a BLOB by the P4_SUBPROGRAM processing logic below
It is initialized to the current system time if no argument is given.
It is intended that this variable be set once as part of process initialization and before any SQLite interface routines have been called and that this variable remain unchanged thereafter.
It is intentional that the condition for natstr is HAVE_TRUE_LONG_LONG instead of HAVE_LONG_LONG or LONG_LONG.
It is intentional to use long long instead of LONG_LONG.
It is invoked after an error occurs in an OS function and errno has been set.
It is invoked by SQLite each time a row is to be inserted, updated or deleted.
It is invoked for each untrusted certificate in the chain.
It is just copied onto the P2 register exactly as  it is found in the database file.
It is known that the final (nSegment-nSuspect) members are already in sorted order (according to the comparison function provided).
It is left uninitialized so that multiple parsers can coexist.
It is misuse to call this routine with statements from different database connections.
It is modelled after the VACUUM command in PostgreSQL.
It is more accurate than the one evaluated inside this routine (if someone wants to do so).
It is more efficient to let the coming OP_Insert replace the existing entry than it is to delete the existing entry and then insert a new one.
It is mostly useful if you want to learn how the Ruby VM works, but it also lets you control various settings for the Ruby iseq compiler.
It is much less likely that the two ends of the journal record will be correct and the middle be corrupt.
It is my intent that you should be able to use this on your system, as part of a software package, or anywhere else to improve security, ensure compatibility, or for any other purpose.
It is necessary to scan the entire hash table
It is needed if the Table object  contains lookaside memory.
It is never called in the ERROR state.
It is never written to disk.
It is no longer supported.
It is not  considered an error if the iterator reaches EOF, or if it is already at  EOF when this function is called.
It is not a documented part of the tokenizer interface.
It is not a general purpose header file.
It is not always meaningful.
It is not an error if a value cannot be extracted from pExpr.
It is not an error if database zDb is not attached to the database when the session object is created.
It is not an error if the named table does not exist in the database.
It is not an error if there are no matches.
It is not an error to find no matches.
It is not clear when the current rule based calendar replaced the observation based calendar.
It is not considered an error code if an iterator reaches EOF.
It is not considered an error code if the current rowid is  not a match.
It is not considered an error if the query does not match any documents.
It is not enabled by default.
It is not included in production compiles.
It is not necessary to check if it is part of a parent key, as parent key columns must be indexed.
It is not necessary to fill the buffer entirely, only to obtain at least one more byte.
It is not portable, though.
It is not possible for a record associated with an INSERT change to contain a field set to "undefined".
It is not possible for an OOM to occur in this block.
It is not possible for an UPDATE change to represent a change that modifies the values of primary key columns.
It is not possible for eType to be SQLITE_NULL here.
It is not possible for rc to be other than SQLITE_OK if this branch is taken, as pager_wait_on_lock() is a no-op for temp-files.
It is not possible for this routine to fail if the second argument is NO_LOCK.
It is not possible to call _recvfrom_ on a socket after _shutdown_ has been invoked.
It is not possible to change the behavior of the tokenizer with respect to these codepoints.
It is not possible to create a database for which the final page is either a pointer-map page or the pending-byte page.
It is not possible to determine if the old.rowid or new.rowid column is  accessed by triggers.
It is not possible to do a full assert_pager_state() here, as this function may be called from within PagerOpen(), before the state of the Pager object is internally consistent.
It is not possible to enable both STAT3 and STAT4 at the same time.
It is not possible to lower the locking level one step at a time.
It is not possible to release (commit) a savepoint if there are  active write statements.
It is not possible to represent a range larger than 1023 codepoints  using this format.
It is not possible to turn this limit off.
It is not reset by zend engine, set it to 200.
It is not safe to allow the reader to continue here if frames may have been appended to the log before READ_LOCK(0) was obtained.
It is not safe to call this function and then continue writing to the database.
It is not safe to read or modify this variable in more than one thread at a time.
It is not safe to return a pointer to the memory cell itself as the caller may modify the value text encoding.
It is not used  when opening a hot journal file to roll it back.
It is not used by by this, the native b-tree engine of SQLite, but it is available to alternative storage engines that might be substituted in place of this b-tree system.
It is not used in production code, only for debugging.
It is now a structure that holds the integer file descriptor and a pointer to a structure that describes the internal locks on the corresponding inode.
It is now impossible to match real values against php constants.
It is one of the last 6 months of the year.
It is only  passed to keep OP_OpenRead happy.
It is only applied with constant shift counts.
It is only available if the SQLITE_SOUNDEX compile-time option is used when SQLite is built.
It is only called from the top-level
It is only changed back to a real locking state after a successful call to xLock(EXCLUSIVE).
It is only considered a vector if it has two or more result columns.
It is only here for testing and debugging.
It is only legal to reduce a pristine expression tree from the parser.
It is only required to be valid until the next call to xNext() or xClose().
It is only there to disambiguate functions that can take varying numbers of arguments.
It is only used by  the balance_shallower() and balance_deeper() procedures, neither of which are called often under normal circumstances.
It is only used here so that the buffered data warning is not displayed.
It is only useful after a lot of deletions in the database.
It is only useful if invoked immediately after the main database i
It is only valid to call this function from within the xCreate() or xConnect() of a virtual table module.
It is only valid when NPY_ITER_MULTI_INDEX was passed to the constructor.
It is painful to recover from incorrectly-computed hashes - merely fixing whatever broke is not enough.
It is passed a symbol for the undefined constant, and returns a value to be used for that constant.
It is passed three arguments:  1) The complete text of the CREATE TABLE statement being modified, 2) The old name of the table being renamed, and 3) The new name of the table being renamed.
It is possible for the schema to change multiple times and for the cookie to be set back to prior value.
It is possible that a buffered stream was switched to non-buffered, so we drain the remainder of the buffer before using the "raw" read mode for the excess
It is possible that a non-fatal OOM error occurs in this function.
It is possible that calling this routine itself caused a stack overflow.
It is possible that external processes may have truncated the database file and then extended it back to its original size while this process was not holding a lock.
It is possible that the OCSP request takes a few seconds or the time is not accurate.
It is possible that the range of returned leaf nodes does not contain  the specified term or any terms for which it is a prefix.
It is possible that there is a checkpointer thread running  concurrent with this code.
It is possible to append to this segment.
It is possible to create multiple session objects attached to a single database handle.
It is possible to have a Blob value that has some non-zero content followed by zero content.
It is probably best used as a fast and easy alternative to a Hash for processing large amounts of data.
It is provide only to avoid breaking legacy code.
It is provided "as is" without express or implied warranty of any kind.
It is provided for compatibility with Hash.
It is provided to support rare applications with unusual needs.
It is recommended that a library should have one subclass of StandardError or RuntimeError and have specific exception types inherit from it.
It is recommended that when a database filename actually does begin with a ":" character you should prefix the filename with a pathname such as "./" to avoid ambiguity.
It is recursive invocation of triggers, at the SQL level, that is  disabled.
It is replaced by the result of applying the specified fossil delta to itself.
It is replicated here solely to avoid cluttering  up the real code with the UNUSED_PARAMETER() macros.
It is reported that an attempt to close a handle might sometimes fail.
It is required to set a temporary folder on Windows Runtime (WinRT).
It is rescued by Kernel#loop.
It is reset to ' ' by non-numeric formats
It is responsible for setting the layout.direction and layout.measuredDimensions fields for the input node as well as the layout.position and layout.lineIndex fields for its child nodes.
It is retained for historical compatibility.
It is retained in the header file for backwards compatibility only.
It is safe to always return here, but the resulting tree would be unbalanced
It is safe to use the original SGEMV if we are not using AVX on Mavericks or the input arrays A, X and Y are all aligned on 32 byte boundaries.
It is same as mtch.regexp.names.
It is searched by binary chop, so must be in collating sequence of name.
It is set to 2 for xDestroy method calls and 1 for all other methods.
It is set to a copy of dbSize when the write-transaction is first opened, and updated when VFS calls are made to write or truncate the database file on disk.
It is set to true when the change-counter field is updated, which  can only happen if an exclusive lock is held on the database file.
It is set to zero in all other states.
It is similar to a changeset, but leaves undefined those fields that are not useful if no conflict resolution is required when applying the changeset.
It is simple, and it seems to work, and it is pretty fast.
It is simply a matter of writing a transport.
It is slightly faster than calling sqlite3StrICmp() directly, but produces larger code.
It is sometimes called the "minor" token.
It is still ambiguous
It is the  responsibility of the caller to at some point free the buffer using  sqlite3_free().
It is the  responsibility of the caller to eventually call sqlite3_free() to release this buffer.
It is the  responsibility of the caller to eventually free the object using sqlite3_free().
It is the  responsibility of the caller to eventually release the structure by passing the pointer returned by this function to sqlite3_free().
It is the  responsibility of the caller to set it correctly.
It is the author's view, that this API is intended for simple data types, and a "fault" is a complex data type consisting of multiple simple data types.
It is the block's responsibility to store the value in the hash if required.
It is the caller's responsibility to free it.
It is the callers responsibility to arrange for the returned array to be eventually freed using the  vdbeFreeOpArray() function.
It is the callers responsibility to call sqlite3_free() to release this memory.
It is the callers responsibility to use subjRequiresPage() to check  that it is really required before calling this function.
It is the first on the page.
It is the responsibility of the caller to (eventually) free this buffer using sqlite3_free().
It is the responsibility of the caller to call releasePage() on *ppPage to free the reference.
It is the responsibility of the caller to ensure that it is eventually freed.
It is the responsibility of the caller to ensure that it is safe to overwrite this part of the cell-pointer array.
It is the responsibility of the caller to ensure that the returned string is eventually freed using sqlite3DbFree().
It is the responsibility of the caller to eventually call sqlite3_free() on the *ppOut pointer to free the buffer allocation following a successful  call to this function.
It is the responsibility of the caller to eventually deallocate the allocated  Fts3Expr structure (if any) by passing it to sqlite3_free().
It is the responsibility of the caller to eventually free any  such buffer using sqlite3_free().
It is the responsibility of the caller to eventually free any  such error message using sqlite3_free().
It is the responsibility of the caller to eventually free any such error message using sqlite3_free().
It is the responsibility of the caller to eventually free it using sqlite3_free().
It is the responsibility of the caller to eventually free it.
It is the responsibility of the caller to eventually free the buffer  using sqlite3_free().
It is the responsibility of the caller to eventually free the returned buffer using sqlite3_free().
It is the responsibility of the caller to eventually free this buffer using sqlite3_free().
It is the responsibility of the caller to eventually free this memory using sqlite3_free().
It is the responsibility of the caller to eventually release this buffer by calling sqlite3_free().
It is the responsibility of the caller to free all sqlite_value structures using sqlite3_free().
It is the responsibility of the caller to free the buffer when it is no longer required.
It is the responsibility of the caller to free the elements of the returned list.
It is the responsibility of the caller to free the error message buffer using sqlite3DbFree().
It is the responsibility of the caller to free the output buffer using sqlite3_free() when it is no longer required.
It is the responsibility of the caller to free this allocation by eventually passing the *pazCol value to sqlite3_free().
It is the responsibility of the caller to free this buffer using sqlite3_free().
It is the responsibility of the caller to free this error message buffer using sqlite3_free().
It is the responsibility of the caller to free this object by eventually passing it to fts3SegReaderCursorFree()   SQLITE_OK is returned if no error occurs, otherwise an SQLite error code.
It is the responsibility of the caller to malloc and free memory for insertion into the queue.
It is the responsibility of the caller to set it correctly.
It is the responsibility of the caller to use  sqlite3_free() to release the memory.
It is the reverse of PQescapeBytea.
It is the state of the database at an instant in time.
It is the the same as a no-op.
It is then stored as a member of the Index structure for subsequent use.
It is therefore fortunate that  this circumstance cannot arise.
It is therefore not useful for programs intended to be portable to DOS machines.
It is thus a re-entrant opcode.
It is to allow a proc object to be a target of +when+ clause in a case statement.
It is unavailable when using "mincore.lib" on Win10.
It is undefined which value is actually picked up at each iteration.
It is unfortunate that C does not provide an operator for cyclic rotation.
It is unlikely, but could happen.
It is unsigned, so if a negative came from userspace, it'll convert to UINT_MAX, but we wan't to keep the userspace value.
It is updated with the results of type promotion.
It is used as the encoding of resulted string, but the name of the month and weekday are always US-ASCII.
It is used by both pcre_exec() and pcre_def_exec().
It is used by the implementation of  the sqlite3_declare_vtab() and sqlite3_vtab_config() APIs, both of which are invoked only from within xCreate and xConnect methods.
It is used during rollback, and to determine whether or not pages need to be journalled before being modified.
It is used for overflow checking.
It is used for reporting errors.
It is used for stateful encodings.
It is used in assert() statements to ensure that the optimized code in sqlite3VdbeRecordCompare() returns results with these two primitives.
It is used in the journal to signify that the remainder of the journal file  is devoted to storing a master journal name - there are no more pages to roll back.
It is used only as a sanity check.
It is used to implement sqlite3ExprAnalyzeAggregates().
It is used to store pointers to all registered FTS5 extensions - tokenizers and auxiliary functions.
It is used when duplicated names are permitted.
It is used when no other memory allocator is specified using compile-time macros.
It is useful either for creating backups of databases or for copying in-memory databases to or from persistent files.
It is useful to think of an sqlite3 pointer as an object.
It is valid for a JP2 file to contain multiple individual codestreams.
It is valid in PAGER_READER and higher states (all states except for OPEN and ERROR).
It is valid to scan an empty directory but we have an invalid handle in this case (no first file found).
It is very important that sizeof(header) agree with malloc alignment chunk size.
It is very important that sizeof(header) agree with malloc() alignment chunk size.
It is written back to the database by the fts5StructureRelease() call below.
It is written out separately for speed and cleanliness.
It is written so that NUM and RESULT can be the same pointers.
It is:  Rowid, as a varint Position list, without 0x00 terminator.
It leads to a song and dance at the end of strtod.
It loads SSL library dynamically and changes NULLs to the actual addresses of respective functions.
It logs a message using sqlite3_log() containing the current value of errno and, if possible, the human-readable equivalent from strerror() or strerror_r().
It logs a message using sqlite3_log() containing the current value of error code and, if possible, the human-readable equivalent from  FormatMessage.
It logs a message using sqlite3_log() containing the current value of error code and, if possible, the human-readable equivalent from FormatMessage.
It looks ahead to see if it really is a quantifier or not.
It loops through all the opcodes and fixes up some details.
It makes sure you don't walk off the string.
It makes the appropriate calls to DLAED4 and then stores the new matrix of eigenvectors for use in calculating the next level of Z vectors.
It makes the appropriate calls to DLASD4 and then updates the singular vectors by matrix multiplication.
It makes the appropriate calls to DLASD4, and stores, for each  element in D, the distance to its two nearest poles (elements in DSIGMA).
It makes the appropriate calls to SLAED4 and then stores the new matrix of eigenvectors for use in calculating the next level of Z vectors.
It makes the appropriate calls to SLASD4 and then updates the singular vectors by matrix multiplication.
It makes the appropriate calls to SLASD4, and stores, for each  element in D, the distance to its two nearest poles (elements in DSIGMA).
It matches at beginning and exit of every call
It may (only) be 1 or 2.
It may also be helpful to use the Abbrev library to generate completions.
It may also do other house-keeping, such as issuing warnings on arrays which are transitioning to become views.
It may as well be now.
It may be 60 which is a leap second.
It may be ENC_CODERANGE_UNKNOWN.
It may be changed in future.
It may be ignored on some platform.
It may be only temporary disabled
It may be that the BEFORE triggers moved the cursor or of already deleted the row that the cursor was pointing to.
It may be that this trigger has already been coded (or is in the process of being coded).
It may be used by applications for any purpose.
It may fail, the destruction code must handle this case
It may go away at any time.
It may not be called from within a transaction.
It may not compile or execute correctly on other systems.
It may only be called after changeset_next() has returned SQLITE_ROW.
It may or may not be of class JournalFile.
It may reached here when finalize
It may remain unchanged, or it may be set to an invalid value.
It may return a Bignum.
It may roll back all of this connections data, then proceed to rolling back the old, out-of-date data that follows it.
It may therefore only be used if sqlite3_libversion_number() returns a value greater than or equal to 3009000.
It means symlinks in the path is resolved.
It merely means that we might do some extra work to journal a  page that does not need to be journaled.
It merely prevents new constructs that exceed the limit from forming.
It merely reverses the sense of each individual change.
It merges all these doclists into one, the doclist for the specified prefix.
It might be a big thing to extend, thus just a local handling for now.
It might be larger that what is really needed.
It might be more appropriate to include it in the 8859 set instead of the ASCII set, but it's got to be included in *something* we recognize or EBCDIC files aren't going to be considered textual.
It might be possible to form an IN operator with either table1.column or table2.column as the LHS if either is common to every term of the OR clause.
It might be the case that multiple tables are indexable.
It might just as well be a procedure (returning void) but we continue to return an integer result code for historical reasons.
It might still be a (purely) bool special case, a 0-d integer array (an array scalar) or something invalid.
It must be a mov operation, so tmp1 must be free to use.
It must be an integer, unlike family and socktype.
It must be at least NA.
It must be directly removed from SG(sapi_header) because sapi_add_header_ex() removes all of matching cookie.
It must be harmless to invoke xMutexInit() multiple times within the same process and without intervening calls to xMutexEnd().
It must be the case that N is sufficient to make a Rowset.
It must check the list of such references for the group we are dealing with.
It must exist before the call.
It must have only one branch.
It must not return FAILURE for non-existent session data.
It must start with an "r" otherwise it will cause an error.
It needs fixing for other locales.
It needs to be revisited.
It needs to be rolled back.
It needs to happen before argv is used in any way.
It needs to happen right before exiting.
It neither reads nor writes the sqlite_stat2 table.
It never attempts to read or write that page.
It never updates the change-counter field, so the changeCountDone flag is always set.
It no longer has relation with the database session.
It no longer need to be registered.
It only comes into play when the SQLITE_MEMDEBUG compile-time option is used.
It only guarantees that a dangerous checkpoint or  log-wrap (either of which would require an exclusive lock on WAL_READ_LOCK(mxI)) has not occurred since the snapshot was valid.
It only happens in b-trees used to evaluate "IN (SELECT ...)" and similar clauses.
It only shows that we failed to detect any corruption.
It passed all the overlap tests
It passes back up the tree (causing captured values to be reset) until the original atomic group level is reached.
It performs a single unit of work towards an incremental vacuum.
It provides dbm_pagfno() and dbm_dirfno() as macros.
It reads the integer and sets *pnOut to the value read, then  sets *pp to point to the byte immediately following the last byte of the integer value.
It records whether the operating system is Win9x or WinNT.
It registers several user-defined scalar functions useful with FTS5.
It remains to check the validity of comments (2.) since it's referred to an "old" OS/2 version.
It represent digits under microsecond.
It returns (0) if the input is not known to be JSON.
It returns +true+ if no tricks apply.
It returns -1 if division by zero is tried.
It returns 0 if the division is ok and the result is in QUOT.
It returns 1 if both of the following are true:  1.
It returns Errno::EPERM against exec() in multiple threads.
It returns a list pointer shifted to the next value, of NULL if the end of the list found.
It returns a m,e,s (mantissa, exponent, sign).
It returns a negative, zero or positive integer if key1 is less than, equal to or  greater than key2.
It returns a new TCPSocket object.
It returns a new Time object.
It returns a new UNIXSocket object.
It returns a pointer to a Trigger structure containing a trigger equivalent to the ON UPDATE or ON DELETE action specified by pFKey.
It returns a pointer to a static sqlite3_mem_methods struct populated with the memsys5 methods.
It returns a pointer to the buffer which is NULL on error, and the size of the buffer in retbuflen.
It returns a string even if EOF is met at beginning.
It returns an sqlite3_tokenizer_cursor object that may be used to tokenize a specific input buffer based on the tokenization rules supplied by a specific sqlite3_tokenizer object.
It returns false if it is safe to retrieve the page from the pager layer with the 'no-content' flag set.
It returns false otherwise.
It returns nil if +self+ is not IPv4 mapped/compatible IPv6 address.
It returns nil if an EOF was encountered before anything could be read.
It returns nil if no appropriate information.
It returns the address of the allocated chunk.
It returns the last part of the converted string.
It returns the new CREATE TABLE statement.
It returns the new file descriptor which is an integer.
It returns the number of auxilliary indexes on the table.
It returns the number of the first one that was set in a pattern match.
It returns the number of times GC occurred since the process started.
It returns the total number of pages in the database.
It returns true if such a lock exists and false otherwise.
It returns true if the rows really will be sorted in the specified order, or false otherwise.
It returns true if the two strings are equal, otherwise false.
It returns zero if the change that caused the callback was made immediately by a user SQL statement.
It searches up the characters, looking for ranges of characters in the "other" case.
It seeks the b-tree cursor associated with blob handle p to point to row iRow.
It seems that early versions of GCC stored the two words of a 64-bit float in the wrong order.
It seems that the appearance of a nested POSIX class supersedes an apparent external class.
It seems to be the only way to do such a check at compile time, as the sizeof() operator does not work in the C preprocessor.
It serves two purposes at once:  1.
It sets *ppValue to point to an sqlite3_value structure containing the iVal'th value in the new.* record.
It sets *ppValue to point to an sqlite3_value structure containing the iVal'th value in the old.* record.
It sets up either VdbeSorter.pMerger (for single threaded sorters) or pReader (for multi-threaded sorters) so that it can be used to iterate through all records stored in the sorter.
It sets variable pg1 to the identifier of the first page of the sector pPg is located on.
It should  be the  integer part of log to the base beta of a,  however it is safer to determine  t by powering.
It should  be the  integer part of log to the base beta of a,  however it is safer to determine t by powering.
It should be called prior to execute().
It should be deleted using sqlite3Fts3ExprFree() in this case.
It should be freed  when the expression node is.
It should be in principle OK when the idim loop returns immidiatly.
It should be noted that all mutexes require initialization on the Win32 platform.
It should be passed a pseudo-random value (i.e.  one obtained from sqlite3_randomness()).
It should be passed some bitwise combination of the PAGER_* flags.
It should be possible to remove this when we no longer care about versions of clang before 3.8.
It should be re-added after the 1.7 branch is done, and a convenience API to replace the typical use-cases for mutable names should be implemented.
It should be set to 0 if we require matching b and d values, or 1 otherwise.
It should be updated if more commands are added to this function.
It should be used for informational purposes, and not for security.
It should be used in all cases, but for consistency with earlier versions of dtoa, it is optional when MULTIPLE_THREADS is not defined.
It should never occur otherwise, but just in case it does, have something ready to print.
It should not be called.
It should not be zero.
It should on POSIX, though.
It should raise error, when there is 3rd parameter
It should take input string and return an array of completion candidates.
It should take the user's input and the index of the character in question as input, and return a boolean (true if the specified character is escaped).
It should work in the presence of threads.
It should work under any C implementation that uses an actual procedure stack (as opposed to a linked list of frames).
It shouldn't be possible for fullfsync to fail on the local  file system (on OSX), so failure indicates that FULLFSYNC isn't supported for this file system.
It shouldn't be used in practice, though, standardized protocols should always be preferred.
It simplifies code elsewhere.
It skips over things that do not influence this.
It still happens even though I set it to null, so something weird is going on.
It still makes no sense to do it as Windows addresses are virtual per se and can or should be randomized anyway through Address Space Layout Radomization (ASLR).
It still points to the same term though - just a different rowid.
It still uses a password, a salt, and additionally a number of iterations that will slow the key derivation process down.
It stores all the requested values in ZCG(include_paths) shared hash table, current value in ZCG(include_path)/ZCG(include_path_len) and one letter "path key" in ZCG(include_path_key).
It takes a bit more work in UTF-8 mode.
It tests if there is a hot journal present in the file-system for the given pager.
It tests the value of length for (2 + 2*LINK_SIZE) in the pre-compile phase to find out whether anything has yet been compiled or not.
It then calls the output subroutine and resets the aggregate accumulator registers in preparation for the next GROUP BY batch.
It then calls this function to actually insert the  data into the intkey B-Tree.
It then checkpoints all frames in the log file and syncs the database file.
It then dequotes any of the strings that appear to be quoted.
It then returns the sqlite3_io_methods object that implements that strategy.
It therefore implements an autoload feature similar to Kernel#autoload and Module#autoload.
It turns out that on some non-Unix-like systems there are problems with programs that use a lot of stack.
It turns out this is useful for other purposes, such as parsing config files.
It updates the checksums for all frames written to the wal file by the current transaction starting with the earliest to have been overwritten.
It updates the phrases current position list to include only those positions that are really instances of the phrase (after considering deferred tokens).
It updates the virtual stack, or creates it if this is the first method entry in the thread.
It used to be required that a statement transaction was not active, but this restriction has been removed (CREATE INDEX needs to move a page when a statement transaction is active).
It used to be that sqlite3PcacheMakeClean(pPg) was called here.
It used to be the case that setting this value to zero would turn the limit off.
It used to be used to recover from a malloc() failure, but SQLite now does this automatically.
It used to set an alarm callback that was invoked when memory usage grew too large.
It uses only the public interface defined here.
It uses the RDTSC opcode to read the cycle count value out of the processor and returns that value.
It uses the information in node.style, which is treated as a read-only input.
It uses the output of the operations by C99 as the reference to check the implementation of complex numbers in Go.
It was checked in mime_integrity.
It was coded primarily to act as a go-between for expat and xmlrpc.
It was designed with consideration of the flaws in various other generators.
It was determined by inspection of the character codes stored in Microsoft font symbol.
It was found so go ahead and provide it
It was not always the first of January.
It was written by following the Python "Extending and Embedding" tutorial.
It wasn't a handle after all.
It will also fail if the value supplied for EMIN is too large (i.e. too close to zero), probably with overflow.
It will always be exactly zero.
It will be AddRef()ed for the caller.
It will be automatically closed  when the last lock is cleared.
It will be automatically closed when the last lock is cleared.
It will be configured by the _opts_ hash.
It will be moved back after the names have been resolved.
It will be released when sqlite3DeleteIndex() is called.
It will be replaced by the real entry in code generated at sqlite3EndTable().
It will be set to zero if no error occurs, a negative number if an argument is in error, or a positive number if  ca A - w D  had to be perturbed.
It will be used as an internal node of the new tree.
It will get casted to -sys.maxint-1.
It will immediately return an object of array type or will convert to a NPY_ARRAY_CARRAY any other object.
It will not be NULL except PS_OPEN_FUNC().
It will not work on Windows, because Windows requires that the +socket+ is bound by calling _bind_ before it can _listen_.
It will round at 255 as this is unsigned char.
It will then try to allocate the new page and will only fail to allocate a new page on an OOM error.
It will verify, amongst other things, that it matches the checksum generated by inspecting the index itself.
It will work on machines with a guard digit in add/subtract, or on those binary machines without guard digits which subtract like the Cray X-MP, Cray Y-MP, Cray C-90, or Cray-2.
It will work on machines with a guard digit in add/subtract, or on those binary machines without guard digits which subtract like the Cray XMP, Cray YMP, Cray C 90, or Cray 2.
It works for objects as small as two bytes.
It works in a similar way to sqlite3_value_text(), except the data returned is in the encoding specified by the second parameter, which must be one of SQLITE_UTF16BE, SQLITE_UTF16LE or SQLITE_UTF8.
It works like ExprSetProperty() during VVA processes but is a no-op for delivery.
It would also be correct to set pIter and iDocid to zero.
It would be better, IMHO, to skip the C from the S part of the encoding.
It would be done in rshutdown anyway but the handler will have had it's dtor called by then.
It would be harmless to repeat the conversion if  there is already a string rep, but it is pointless to waste those CPU cycles.
It would be more consistent to return "c:." but that would require making the string *longer*.
It would be nice to find a better solution to this problem in the future.
It would be simpler to detect this as part of the loop below, but we do the detection here in order to avoid populating the pager cache with two separate objects associated with the same page number.
It would not be unreasonable to make this value much larger.
It'd be better to detect fullfsync support once and avoid  the fcntl call every time sync is called.
It's FIFO's semantics.
It's a bit baroque to remove a signal stack here only to add one in minit, but it's a simple change that keeps NetBSD working like other OS's.
It's a block algorithm
It's a bug#26426 , so we have to set it correctly ourselves.
It's a hashtable that contains all the dependencies between Hack objects.
It's a simple layout, since all the above tests passed
It's a syntax sugar to hide "call".
It's all in one stride in the inner loop dimension
It's all in one stride in the reduce outer loop
It's already a closure
It's also only valid for Great Brittain and it's colonies.
It's an explicit blank class.
It's an overflow on 32 bit, however it won't fix as long as zend_long is 32 bit.
It's better to raise error for this, but disabled error for better compatibility
It's better to use additional FREE opcode and simplify the FETCH handlers their selves
It's crazy wrong IMHO.
It's defined in a macro so that the definition is next to the definition of the opcodes in pcre_internal.h.
It's done like this so that the start of the bracket has a zero offset until it is closed, making it possible to detect recursion.
It's easier to write this out separately than try to macrify it.
It's ensuring that the format string after the first character doesn't have a single quote, a lowercase l, or a percent.
It's future work (if compile time was bottle neck).
It's nonsense, but is for symmetry.
It's not a block algorithm
It's not possible to express native-only data types in non-native npy_byte orders
It's not possible to use this option in conjunction with the *create_additions* option.
It's not really clear how to get out of this state.
It's not really the closest* molad that we want here.
It's not until you try to reference the file that it even matters whether the file exists or not.
It's not worth generating an error over.
It's odd to simulate an io-error here, but really this is just using the io-error infrastructure to test that SQLite handles this function failing.
It's okay to return an empty array if no filters are registered
It's pointless to match character encodings here.
It's possible to override this general case in the activate() callback, if necessary.
It's probably "Too many connections, which has SQL state 08004".
It's purpose it to accumulate statistical data and/or samples in the Stat4Accum object about the index being analyzed.
It's safe to reread without freeing
It's similar to #scan, but without returning the matched string.
It's similar to #scan_until, but without returning the intervening string.
It's supposed to return an array of property names to be serialized.
It's the md argument of match(), which never changes.
It's too flawed to consider.
It's unclear if XHTML 1.0 allows C1 characters.
It's very rare and useless case.
It's written in old-style C for maximal portability.
Itemsize needs to be considered as an additional dimension with stride 1 and size itemsize.
Iterate forwards through a doclist.
Iterate in descending rowid order
Iterate over all the elements to count the nonzeros
Iterate over all the fields and compare for castability
Iterate over first and second operands and call ufunc for each pair of inputs
Iterate over the format string filling in the result objects until we reach the end of input, the end of the format string, or there is a mismatch.
Iterate over the hash to construct the argv array.
Iterate through all dirty pages currently stored in the cache.
Iterate through all phrase nodes in an FTS3 query, except those that are part of a sub-tree that is the right-hand-side of a NOT operator.
Iterate through all segments, from oldest to newest.
Iterate through input hash and create a sort key for each value.
Iterate through levels, segments
Iterate through tables
Iterate through the b-tree hierarchy.
Iterate through the contents of the WAL, copying data to the db file
Iterate through the contents of the WAL, copying data to the db file.
Iterate through the phrases in the expression to count them.
Iterates over keys and objects in a weakly referenced object
Iterates over the entries (files and subdirectories) in the directory, yielding a Pathname object for each entry.
Iterates over values and objects in a weakly referenced object
Iterates through set of root pages
Iterates through snippet candidates
Iterating in RPO here would converge faster
Iteration count is in ITER.
Iteration needs API access
Iterative loop for norm reduction
Iterator allocated outputs get the input's wrapping
Iterator for WHERE terms
Iterator for input string
Iterator for looping through Pager.aSavepoint
Iterator for output string
Iterator for skipping through tbl/idx
Iterator for this term
Iterator object to initialize
Iterator opened on pData/nData
Iterator pIter currently points to a valid entry (not EOF).
Iterator pIter currently points to the first rowid in a doclist.
Iterator pIter currently points to the first rowid of a doclist.
Iterator pIter must point to an SQLITE_INSERT entry.
Iterator pIter was used to iterate through the input segments of on an incremental merge operation.
Iterator to advance to next page
Iterator to read from
Iterator to read input data
Iterator to read values from
Iterator to run through pList with.
Iterator to skip through changeset
Iterator used for several purposes
Iterator used to gather data from index
Iterator used while populating OLD.*
Iterator variable for various purposes
Iterators at EOF are considered to be greater than all other iterators.
Its "next" field will get set by the caller.
Its actual size is stored in the MemJournal.nChunkSize variable.
Its advantage is that it is guaranteed to return a color index in one search over the color table.
Its associated encoding is also set to the other encoding.
Its content needs to  be initialized.
Its contents are now stored either on real database pages or within the  new pSpace buffer, so it may be safely freed here.
Its contents will be re-inserted later on.
Its days begin at midnight on local time.
Its dtype will be op_dtype.
Its elements will be concatenated together to form a single multidimensional array.
Its job is to fill in the TabResult structure appropriately, allocating new memory as necessary.
Its job is to identify tokens that are the first in a sentence.
Its key is an undefined character encoded in the source encoding of current transcoder.
Its length field points back to the previous branch while the bracket remains open.
Its purpose is to set the object pointer for the object when you can't possibly know its value until you have parsed the arguments from the constructor function.
Its purpose is to unify error messages and automatically generate clickable html error messages if correcponding ini setting (html_errors) is activated.
Its used by just about every call to ts_resource_ex().
Its value can be any encoding until it can be converted into the destination encoding of the transcoder.
JCE: Arrange HAVE_LIBPNG so that it can be set in gd.h
JCE: arrange HAVE_LIBJPEG so that it can be set in gd.h
JEWISH DATE TO SERIAL DAY NUMBER  The year number is used to find which 19 year metonic cycle contains the date and which year within the cycle (this is a division and modulus).
JIS X 0201 Katakana in 8bit JIS
JIS X 0208 Katakana to JIS X 0201 Katakana
JIS X 0212 Supplemental Kanji (row 16 ..
JIS X 0212 hojo-kanji
JIS should be tanslated to MB or we leave it to the user - leave it to the user
JIT decreases this value less frequently than the interpreter.
JMP L, L: RETURN to immediate RETURN
JMP to the next block - strip it
JMP_SET result can't be false either
JOB must be the same as the argument JOB supplied to CGEBAL.
JOB must be the same as the argument JOB supplied to DGEBAL.
JOB must be the same as the argument JOB supplied to SGEBAL.
JOB must be the same as the argument JOB supplied to ZGEBAL.
JP2 is a wrapper format for JPEG 2000.
JPEG 2000 components can be vastly different from one another.
JPEG do we have the data area and what to do with it
JPEG: 'JFIFF' AND (additional 'JFXX')
JSON formatted without any backslash-escapes
Jack Dongarra, Argonne National Lab.
Jack Dongarra, Argonne National Laboratory.
JavaScript/CSS/etc...
Jeremy Du Croz, Nag Central Office.
Jeremy Du Croz, Numerical Algorithms Group Ltd.
Join all outstanding threads launched by SorterWrite() to create  level-0 PMAs.
Join the whitespaces or fold line breaks.
Join two expressions using an AND operator.
Journal file must be open.
Journal files begin with the following magic string.
Journal of the Association for Computing Machinery, Volume 21, Number 8, July 1974, pages 491-499.
Journaled and ready to modify
Journalmode changes can only happen when the database is unmodified.
July 2008: There is now a script called maint/GenerateUtt.py that can be used to generate this data automatically instead of maintaining it by hand.
Jump by as many weeks as we can
Jump destination for skipping partial index entries
Jump destination or storage location
Jump directly to the delete logic
Jump from here if number of rows is zero
Jump here (skipping the main loop body subroutine) if the current sub-WHERE row is a duplicate from prior sub-WHEREs.
Jump here for an error that occurs after successfully allocating curMain and calling sqlite3BtreeEnter().
Jump here for next cycle
Jump here for next iteration of skip-scan
Jump here if LHS is not contained in the RHS
Jump here if a comparison is not true in step 6
Jump here if database corruption is detected after m has been allocated.
Jump here if malloc fails
Jump here if the UNIQUE constraint is satisfied
Jump here if the jump is taken
Jump here if the key is OK
Jump here if the results are unknown due to NULLs
Jump here if the row had already been deleted before any BEFORE trigger programs were invoked.
Jump here if we hit the LIMIT
Jump here on any error
Jump here to break out of UPDATE loop
Jump here to break out of the inner loop
Jump here to break out of the loop
Jump here to continue next step of UPDATE loop
Jump here to continue with next cycle
Jump here to continue with next record
Jump here to continue with next row
Jump here to continue with the next loop cycle
Jump here to exit loop
Jump here to skip excluded rows
Jump here to skip the current record
Jump here to skip this query
Jump here to start the next IN combination
Jump here when done, ex: LIMIT reached
Jump here when skipping the initialization
Jump instructions that get retargetted
Jump optimization for each block
Jump or Call flag - no operand
Jump out of the pTerm loop
Jump over the subroutines
Jump to P2 if they are different.
Jump to addrBrk to break out of a loop.
Jump to cont to go immediately to the next iteration of the loop.
Jump to here for any other kind of fatal error.
Jump to here if a malloc() fails.
Jump to here if a string or blob larger than SQLITE_MAX_LENGTH is encountered.
Jump to here if not distinct
Jump to here if the sqlite3_interrupt() API sets the interrupt flag.
Jump to the P2 parameter of that OP_Yield.
Jump to the P2 parameter of that Yield.
Jump to the appropriate pragma handler
Jump to the end of the loop if the LIMIT is reached.
Jump to the faster loop when skipping is done
Jump to the this point in order to terminate the query.
Jump to this label on an OE_Ignore resolution
Jump to this label to skip a row
Jumps here in order to return true.
Junk the truecolor pixels
Just a copy, but with a reduction
Just a dumb implementation for now.
Just a flag to suppress char handling below
Just a straight one-element copy.
Just adjust level and punt on outta here.
Just an endian character is invalid
Just assign the first few digits of a with considering
Just assign the last few digits of a to c because b has no
Just assign the last few digits of b to c because a has no
Just assign the values which are the BASE subtracted by
Just be sure not to block.
Just before substitute
Just before the shared-btree is closed, the function passed as the  xFree argument when the memory allocation was made is invoked on the  blob of allocated memory.
Just checking that the page is large enough.
Just do the same as found in PostgreSQL sources...
Just don't forget to remove the Bcc: from the header afterwards.
Just fill in the content with zeros for now.
Just for compatibility to IO.
Just guess on ASCII-8BIT
Just in case inavlid locale e.g. '-x-xyz' or '-sl_Latn'
Just in case it is not.
Just in case the algo has internally allocated resources
Just like PyArray_Squeeze, but allows the caller to select a subset of the size-one dimensions to squeeze out.
Just log the error and move on.
Just move the page out of the way.
Just need to adjust the exponent and shift
Just not compatible for extensions that need persistency.
Just pretend that everyone is a superuser.
Just recording the address.
Just set the zero flag.
Just some tweaking to optimize the code, and get the end statements work in a general manner.
Just specifying the zend_class_unserialize_deny handler is not enough, because it is only invoked for C unserialization.
Just to check if user passed valid resoruce
Just to make sure the prototypes match the actual definitions
Just use C-order strides (TODO: allow also F-order)
Just use the first '#define' to allow all the prints...
Justification of ALWAYS():  A correct vtab constructor must allocate the sqlite3_vtab object if successful.
Justification of ALWAYS():  The xConstructor method is required to create a valid sqlite3_vtab if it returns SQLITE_OK.
K       (input) INTEGER The number of elementary reflectors whose product defines the matrix Q.
K       (input) INTEGER The number of terms in the rational function to be solved by DLASD4.
K       (input) INTEGER The number of terms in the rational function to be solved by SLASD4.
K       (input) INTEGER The offset for the reduction.
K      (input) INTEGER Contains the dimension of the non-deflated matrix, This is the order of the related secular equation.
K      (input) INTEGER array, dimension ( N ).
K      (output) INTEGER Contains the dimension of the non-deflated matrix, This is the order of the related secular equation.
K      (output) INTEGER Contains the dimension of the non-deflated matrix, this is the order of the related secular equation.
K      (output) INTEGER The number of non-deflated eigenvalues, and the order of the related secular equation.
K must be at least  zero.
K must be at least zero.
K1      (input) INTEGER The first element of IPIV for which a row interchange will be done.
K2      (input) INTEGER The last element of IPIV for which a row interchange will be done.
KAME uses the 2nd 16bit word of link local IPv6 address as interface index internally
KEEPORDER needs some analysis of the strides
KL      (input) INTEGER The lower bandwidth of A.
KU      (input) INTEGER The upper bandwidth of A.
Kahan of the University of California at Berkeley.
Kahan's compensated summation algorithm
Kahan, LAPACK Working Note #3 (or SIAM J.
Kahan, LAPACK Working Note #3, for a detailed description of the algorithm.
Kanji conversion is performed before encoding, so this cannot be used as a picture encoder.
Keep a copy of bound variable in the bind hash
Keep advancing iterators until they all point to the same document
Keep clrBack as color index if required
Keep compiler happy by referencing function argument
Keep dividing  A by BETA until (gradual) underflow occurs.
Keep on comparing from the current point.
Keep picky compilers happy
Keep reading until we get enough entropy
Keep running the loop until the Queue is empty
Keep the STR_PTR on the top of the stack.
Keep the column cache up-to-date.
Keep the following function as private.
Keep the original link size.
Keep the original object around for futher operations.
Keep the result in realpath_cache
Keep this as the last member to be freed, as there are dependencies (like env) on the session pool
Keep to zero when no symbol should be popped.
Keep track of cloned copies to avoid invoking curl destructors for every clone
Keep track of the maximum allocation request.
Keep track of the mxChoice best paths at each generation
Keep track of the number of rows to be deleted
Keeping the pids around to make asserts.
Keeps track of the names we already used
Key associated with this element
Key columns for SRT_Queue and SRT_DistQueue
Key content for indexes.
Key for ARRAY objects in json_tree()
Key for WITHOUT ROWID tables
Key for each cache entry is dirname(PATH_TRANSLATED).
Key value (page number)
Key1 and Key2 do not have to contain the same number of fields.
KeySize() cannot fail
Keyinfo for scanned index
Keying information for the group by clause
Keys and elements are compared by user supplied functions.
Keys and values must be strings.
Keys are compared by user supplied function.
Keys are used to do more restrictive check
Keys are used to do more restrictive check and they are compared by using a user-supplied callback.
Keys are used to do more restrictive check.
Keys less than 1024 bits should be considered insecure.
Keys smaller than 1024 bits should be considered insecure.
Keys smaller than 1024 should be considered insecure.
Keywords and unquoted identifiers
Keywords are ignored for now
Keywords arguments will considered as a single additional argument, that argument being mandatory if any keyword argument is mandatory.
Keywords include: in1, in2, in3, out2, out3.
Keywords include: in1, in2, in3, out2_prerelease, out2, out3.
Kill all the processes in our process group
Kill temporary time and restore original sse
Kill the filter (safely)
Kill this branch of the original AST, as it was already destroyed.
Kinds of hints that can be passed into the sqlite3BtreeCursorHint() interface.
Knott's relatively-prime secondary probe.
Knowing the bitmask for all tables to the left of a left join is important.
Known at compile-time.
Known to ../../../liblink/sym.c:/468 and to ../sys_darwin_386.s:/468  This is truly disgusting and a bit fragile, but taking care of it here protects the rest of the system from damage.
Known to src/cmd/link/internal/ld/sym.go:/0x1d0 and to src/runtime/sys_linux_amd64.s:/0x1d0 or /GOOS_android.
Known to src/cmd/link/internal/ld/sym.go:/0xf8 and to src/runtime/sys_linux_386.s:/0xf8 or /GOOS_android.
Knuth multiplicative hashing.
Knuth's PRNG as used in the Mersenne Twister reference implementation
Knuth, THE ART OF COMPUTER PROGRAMMING, Volume 3: "Sorting And Searching", pages 473-480.
L0 is the even-numbered input bits
L1 is the odd-numbered input bits
LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
LARGE   (input/output) DOUBLE PRECISION On entry, the overflow threshold as computed by DLAMCH.
LARGE   (input/output) REAL On entry, the overflow threshold as computed by SLAMCH.
LBETA,  LIEEE1,  LT and  LRND  are the  local values  of  BE TA, IEEE1, T and RND.
LBETA,  LIEEE1,  LT and  LRND  are the  local values  of  BETA, IEEE1, T and RND.
LBETA, LT, LRND, LEPS, LEMIN and LRMIN  are the local values of BETA, T, RND, EPS, EMIN and RMIN.
LCS for the current iterator positions
LCS value for this column
LDA     (input) INTEGER The first dimension of the array A.
LDA     (input) INTEGER The leading dimension of A.
LDA     (input) INTEGER The leading dimension of the array A.
LDA must be at least max( 1, m ).
LDA must be at least max( 1, n ).
LDB     (input) INTEGER The leading dimension of B.
LDB     (input) INTEGER The leading dimension of the array B.
LDB    (input) INTEGER The leading dimension of B in the calling subprogram.
LDB    (input) INTEGER The leading dimension of B.
LDB must be at least max(1,MAX( M, N ) ).
LDB must be at least max(1,N).
LDBX   (input) INTEGER The leading dimension of BX.
LDC     (input) INTEGER The leading dimension of the array C.
LDC   (input) INTEGER On entry, LDC  specifies the leading dimension of C as declared in the calling (sub) program.
LDC must be at least 1.
LDDIFR  (input) INTEGER The leading dimension of DIFR, must be at least K.
LDGCOL (input) INTEGER The leading dimension of GIVCOL, must be at least N.
LDGCOL (input) INTEGER leading dimension of GIVCOL, must be at least N.
LDGNUM (input) INTEGER The leading dimension of GIVNUM and POLES, must be at least N.
LDGNUM (input) INTEGER The leading dimension of GIVNUM, must be at least N.
LDGNUM (input) INTEGER The leading dimension of arrays DIFR, POLES and GIVNUM, must be at least K.
LDH     (input) INTEGER The leading dimension of the array H.
LDQ     (input) INTEGER The leading dimension of the array Q.
LDQ    (input) INTEGER The leading dimension of the array Q.
LDQ2   (input) INTEGER The leading dimension of the array Q2.
LDQS   (input) INTEGER The leading dimension of the array QSTORE.
LDS     (input) INTEGER The leading dimension of S.
LDT     (input) INTEGER The leading dimension of the array T.
LDU     (input) INTEGER The leading dimension of the array U.
LDU    (input) INTEGER On entry, leading dimension of U.
LDU    (input) INTEGER The leading dimension of the array U.
LDU   (input) INTEGER On entry, LDU  specifies the leading dimension of U as declared in the calling (sub) program.
LDU must be at least max( 1, NRU ) .
LDU2   (input) INTEGER The leading dimension of the array U2.
LDV     (input) INTEGER The leading dimension of the array V.
LDVL    (input) INTEGER The leading dimension of the array VL.
LDVR    (input) INTEGER The leading dimension of the array VR.
LDVT    (input) INTEGER The leading dimension of the array VT.
LDVT   (input) INTEGER On entry, leading dimension of VT.
LDVT   (input) INTEGER The leading dimension of the array VT.
LDVT  (input) INTEGER On entry, LDVT specifies the leading dimension of VT as declared in the calling (sub) program.
LDVT must be at least 1.
LDVT2  (input) INTEGER The leading dimension of the array VT2.
LDW     (input) INTEGER The leading dimension of the array W.
LDX     (input) INTEGER The leading dimension of X.
LDX     (input) INTEGER The leading dimension of the array X.
LDY     (input) INTEGER The leading dimension of the array Y.
LDY     (output) INTEGER The leading dimension of the array Y.
LDZ     (input) INTEGER The leading dimension of the array Z.
LEFT DOUBLE QUOTATION MARK
LEFT SINGLE QUOTATION MARK
LFS is only supported on Mac OS X 9 and later.
LHS fields are not reordered
LHS is entirely deferred.
LHS of LIKE/GLOB operator
LIBC_SCCS and not lint
LIFO flag makes the iterator traverse the structure as a LastInFirstOut
LIKE range processing address
LIKE range processing counter register (times 2)
LIKE/GLOB distinguishes case
LIKEFUNC(zName, nArg, pArg, flags) Used to create a scalar function definition of a function zName  that accepts nArg arguments and is implemented by a call to C  function likeFunc.
LIKEFUNC(zName, nArg, pArg, flags) Used to create a scalar function definition of a function zName that accepts nArg arguments and is implemented by a call to C function likeFunc.
LIMIT if wctrlFlags has WHERE_USE_LIMIT
LIMITATIONS  An "RBU update" transaction is subject to the following limitations:  The transaction must consist of INSERT, UPDATE and DELETE operations only.
LINTED bug in header macro
LIST variable will be deleted later by FREE
LIWORK  (input) INTEGER The dimension of the array IWORK.
LOAD DATA LOCAL INFILE
LOCATE_VIEW or LOCATE_NOERR
LOCKFILE_FAIL_IMMEDIATELY is undefined on some Windows systems.
LOCK_EX - get an exclusive lock
LOCK_SH - get a shared lock
LOG_AUTHPRIV:: Security or authorization messages which should be kept private.
LOG_CONSOLE:: System console message.
LOG_CRON:: System task scheduler (cron or at).
LOG_DAEMON:: A system daemon which has no facility value of its own.
LOG_FTP:: An FTP server.
LOG_KERN:: A kernel message (not sendable by user processes, so not of much use to Ruby, but listed here for completeness).
LOG_LOCAL0 to LOG_LOCAL7:: Locally-defined facilities.
LOG_LPR:: Line printer subsystem.
LOG_MAIL:: Mail delivery or transport subsystem.
LOG_NDELAY:: Open the connection now, rather than waiting for the first message to be written.
LOG_NEWS:: Usenet news system.
LOG_NOWAIT:: Don't wait for any child processes created while logging messages.
LOG_NTP:: Network Time Protocol server.
LOG_SECURITY:: General security message.
LOG_SYSLOG:: Messages generated internally by syslog.
LOG_USER:: Generic user-level message.
LOG_UUCP:: UUCP subsystem.
LRU list of unpinned pages
LRWORK  (input) INTEGER The dimension of the array RWORK.
LSAPI protocol version
LVL    (output) INTEGER On exit, the number of levels on the computation tree.
LWORK   (input) INTEGER The dimension of the array WORK.
LWORK   (input) INTEGER The length of the array WORK.
LWORK must be at least 1.
Label "C" in templates 3 and 4
Label A, the target of the Gosub above, jumps to the instruction right after the Goto.
Label for the end of the insertion loop
Label for the end of the overall SELECT stmt
Label for the start of the merge algorithm
Label resolution and unwinding adjustments happen in pass two.
Label resolved to end of generated code
Label to jump to if WHEN is false
Labels and jump lists.
Lanczos3 filter, default radius 3
Lanczos8 filter, default radius 8
Lane's stdio versions.
Langid of recently inserted document
Language 1 indexes are allocated immediately following language 0.
Language being queried
Language being queried for
Language id for current row
Language id for tokenizer
Language id of row being written
Language id to return cksum for
Language id to use in tokenizing
Language id used with tokenizer
Language-id to search
Large - a number of 4096K pages inside a CHUNK.
Large blocks are always aligned on page boundary.
Large file support can be disabled using the -DSQLITE_DISABLE_LFS switch on the compiler command line.
Larger allocations are an array of these structures where the size of the array is a power of 2.
Larger types otherwise.
Larger values of this parameter result in better compression at the expense of memory usage.
Largest allocation (exclusive of internal frag)
Largest block id written to database
Largest defined DBSTATUS
Largest docid for all iterators
Largest idx in level (iAbsLevel+1)
Largest ignored word can be 999 characters (this seems sane enough), and it takes 3 bytes to represent that (see pspell_config_ignore)
Largest key seen since xTruncate()
Largest leaf block id written to db
Largest payload of any cell on this page
Largest payload size of all cells
Largest permissible value of i
Largest possible freeblock offset
Largest serialized key seen so far
Largest valid xSavepoint integer
Last UPDATE used (for PK b-tree updates only), or NULL.
Last byte of buffer to write
Last chance verification.
Last character before the first wildcard
Last digit is defined by scale.
Last element in link-list.
Last entry on the pEntry list
Last field of the record
Last filter returned data via PSFS_PASS_ON Do something with it
Last in the list, or single charset specified.
Last insert rowid (sqlite3.lastRowid)
Last key written to the current block
Last known position of the requested byte.
Last leaf page number in segment
Last memory cell in new array
Last one doesn't nest
Last page in WAL for this reader
Last position from pp1
Last position from pp2
Last possible cell index
Last possible cell or freeblock offset
Last result returned from the iterator
Last sector might be truncated
Last statement is orphaned TEMP trigger
Last step, update free_size
Last synced page in dirty page list
Last token in coalesced phrase instance
Last update statement (or NULL)
Last walked character
Lastest rowid any iterator points to
Late addition:  construct the table according to file size for noticeable speed improvement on small files.
Later accel_getcwd() can use stored value and avoid getcwd() call.
Later code assumes the PRIMARY KEY contains no repeated columns.
Later, the calling routine should invoke sqlite3WhereEnd() with the return value of this function in order to complete the WHERE clause processing.
Later, when the label is resolved to a specific address, the VDBE will scan through its operation list and change all values of P2 which match the label into the resolved address.
Later, when we remove the Bcc: out of the header we know it was the last thing.
Later: if a malloc() or IO error occurs during a Movepage() call, then the page may not be in the cache either.
Latest MIPS architecture.
Latest update build anc tested on Linux 2.2.14  This has been built and tested on Solaris 2.6 and Linux 2.1.122.
Launch a background thread for this operation
Launch a background thread to run xTask(pIn).
Lazy Enumerator methods
Leading '-' sign for negative year
Leading separators, if any
Leaf cursor in SKIPNEXT state
Leaf node containing record iDelete
Leaf nodes are written using LeafWriter, and read using LeafReader (to iterate through a single leaf node's data) and LeavesReader (to iterate through a segment's entire leaf layer).
Leaf on which the required cell resides
Leaf page (iLeafPgno+1)
Leaf page number to load dlidx for
Leaf pages in a "unit" of work
Leap years are every fourth year (year 3, 7, 11, etc.)  TESTING  This algorithm has been tested from the year 1 to 14.
Leap years can be from 383 to 385 days and common years can be from 353 to 355 days.
Leap years occur in a fixed pattern of 19 years called the metonic cycle.
Least recently used entry has the smallest value
Leave STATIC_MASTER mutex
Leave WhereLoop.pLTerm intact.
Leave an error in pParse and return early.
Leave any error code here
Leave any error messages in the pParse structure.
Leave cursor pointing at NEXT or PREV
Leave error message here
Leave error messages here
Leave if the match is failed.
Leave rc unchanged at 0
Leave the desired default from the caller for NULL/Py_None
Leave the output variables *piDataCur and *piIdxCur uninitialized so that valgrind can detect if they are used by mistake in the caller.
Leave() is only required by threadsafe builds.
Leaves are numbered sequentially starting from 1.
Leaving a corrupt image in the database file.
Leaving the value of the nonterminal uninitialized is utterly harmless as long as the value is never used.
Lee, all rights reserved.
Left alphanum vs right general category
Left alphanum vs right particular category
Left general category, right particular category
Left hand child expression
Left hand serial type
Left hand side of comparison
Left operands take precedence over right operands.
Left side of comparison
Left space vs right general category
Left space vs right particular category
Left subtree (smaller entries)
Left table being joined
Left word vs right general category
Left word vs right particular category
Left-hand Fts5SegIter
Left-most SELECT statement
Left-most of SELECT of a compound
Legacy behavior (sqlite3_close() behavior) is to return SQLITE_BUSY if the connection can not be closed immediately.
Legacy mode deliberately not inside php_mt_rand_range() to prevent other functions being affected
Legacy save handler may not support update_timestamp API.
Legacy save handler may not support validate_sid API.
Legal values for BtCursor.curFlags
Length in bytes of master journal name
Length in bytes of zFrom
Length is non-zero, we can match real repeats.
Length of UTF-8 character
Length of a token prefix
Length of aDoclist in bytes
Length of an instruction word
Length of an instruction word Both for mips-32 and mips-64
Length of an instruction word Both for sparc-32 and sparc-64
Length of an instruction word.
Length of database filename - dbPath
Length of each character in zCharSet
Length of element + equal sign + length of key + null
Length of longest segment
Length of needed storage
Length of position list
Length of string zMaster
Length of the current match
Length of the destination buffer
Length of the function name in bytes
Length of the keyword
Length of the keyword in characters
Length of the parameter token
Length of the resulting string
Length of the source data
Length of the source file
Length of the string so far
Length of z in bytes (excl.
Length of zAbsoluteName string
Length of zDb in bytes
Length of zInput in bytes
Length of zSql in bytes.
Length of zTerm in bytes
Lenstra, ''Hard equality constrained integer knapsacks'', Lecture Notes in Computer Science 2337, 350-366 (2002).
Less commonly used but valid nonetheless.
Less than 0 if a frame is not needed.
Less than 0 if not needed.
Less than 19 digits, so we know that it fits in 64 bits
Let I be an integer between 0 and N.
Let K be the 1-based index of the largest entry in the mapping section.
Let N be the number of rows and M be the number of columns.
Let N be the total amount of memory available for allocation.
Let X be the first thread to enter this routine.
Let Y be some other thread.
Let any sequence of one or more vowels be represented by V and let C be sequence of one or more consonants.
Let be portable instead.
Let caller sort them out.
Let n be the size of the largest allocation divided by the minimum allocation size (after rounding all sizes up to a power of 2.)  Let M be the maximum amount of memory ever outstanding at one time.
Let nOther be the number of other phrases for which it is certain that one or more tokens will not be deferred.
Let say it fails as no valid op has been given
Let the first unused slot be at index iUnused.
Let the row packet fill our buffer and skip additional malloc + memcpy
Let the row packet fill our buffer and skip additional mnd_malloc + memcpy
Let the timer thread sleep a while.
Let's assume this least common denominator
Let's check for this.
Let's double the table size
Let's go back and see if there are further encoded words or bare content, and hope they might actually have a valid character set.
Let's going ahead and wind anything in the buffer through this filter
Let's have some space, which we can use, if not enough, we will allocate new buffer
Let's increment the counter.
Let's play it safe and admit that's the case
Let's say you make an nditer with an output dtype of a 2-double array.
Let's try with no cache
Let's use O_NONBLOCK.
Lets let the cookie code clean it all up.
Level 0 means everything is permitted, the same behavior as previous versions of OpenSSL.
Level 1 is the same as asynchronous (no syncs() occur and there is a high probability of damage)  Level 2 is the default.
Level 2 Blas routine.
Level 3 Blas routine.
Level 3 reduces the probability of damage to near zero but with a write performance reduction.
Level at which to change to MATCH_NOMATCH
Level for the new search point
Level of current node or entry
Level of segments to scan
Level offering the most input segments
Level to add scanstatus() entry for
Level to iterate (-1 for all)
Level to read input from
Level to select (relative level)
Level/index to create new segment at
Levels of indentation
Libcurl commit d021f2e8a00 fix this issue and should be part of 7.28.2
Libcurl is doing connection caching.
Libmach-based disassembler for use in reference tests.
Library used incorrectly
Libxml 2.9.2 prefixes local paths with file:/ instead of file://, thus the php stream wrapper will fail on a valid case.
Like FULL but wait for for readers
Like RESTART but also truncate WAL
Like SRT_Fifo, but unique results only
Like SRT_Queue, but unique results only
Like SYNC_FLUSH, using FULL_FLUSH too often can seriously degrade compression.
Like YYERROR except do call yyerror.
Like boundAxisWithinMinAndMax but also ensures that the value doesn't go below the padding and border amount.
Like ceil(value), but check for overflow.
Like free() but works for allocations obtained from sqlite3MemMalloc() or sqlite3MemRealloc().
Like malloc(), but remember the size of the allocation so that we can find it later using sqlite3MemSize().
Like mgt0 above except we are looking for a value of m which is exactly 1
Like optimization range constraints always occur in pairs
Like perl we only support string increment
Like snprintf(), but never returns negative value, or the value that is larger than a supplied buffer.
Like sqlite3ExprIfFalse() except that a copy is made of pExpr before code generation, and that copy is deleted after code generation.
Like sqlite3MPrintf(), but call sqlite3DbFree() on zStr after formatting the string and before returnning.
Like the File class, the Socket library subclasses from IO (such as TCPSocket or UDPSocket).
Like the generic numpy equivalent the product sum is over the last dimension of a and the second-to-last dimension of b.
Like the other angle in libGD, in which increasing y moves downward, this is a counterclockwise rotation.
Like this:  "database.table".
Like this:  goto Init coA: coroutine for left query (A) coB: coroutine for right query (B) outA: output one row of A outB: output one row of B (UNION and UNION ALL only) EofA: ...
Likewise for the final N2 elements.
Likewise, registering a callback using sqlite3_wal_hook() disables the automatic checkpoint mechanism configured by this function.
Limit register for select-A
Limit the error using transfer function set by init_error_limit.
Limit the length of the LIKE or GLOB pattern to avoid problems of deep recursion and N*N behavior in patternCompare().
Limitations are MRI version specific.
Limitations of this algorithm, compared to the full standard: Display property is always assumed to be 'flex' except for Text nodes, which are assumed to be 'inline-flex'.
Limitations on Rights to Redistribute This Code  Unicode, Inc.
Limits in the regex override only if they are smaller.
Line number extended opcode name.
Line number of the event
Line separation as a factor of font height.
Lines are assumed to be separated by _sep_.
Link an element into the hash table
Link list of trigger program steps
Link pNew element into the hash table pH.
Link pParent into the free node list.
Link the SubProgram object passed as the second argument into the linked list at Vdbe.pSubProgram.
Link the chunk at index i into either the appropriate small chunk list, or into the large chunk hash table.
Link the foreign key to the table as the last step.
Link the new Index structure to its table and to the other in-memory database structures.
Link the new savepoint into the database handle's list.
Linked List Management
Linked list node to create.
Linked list of VDBEs with the same Vdbe.db
Linked list of all foreign keys in this table
Linked list of all sub-programs used by VM
Linked list of all unfreed memory
Linked list of auxdata allocations
Linked list of coded triggers
Linked list of main db files
Linked list of records
Linux 2.4 introduces struct ip_mreqn to fix this problem.
Linux 2.6.18 fails with EINVAL
Linux 2.6.18 silently ignore it.
Linux and Solaris doesn't work if msg_iov is NULL.
Linux getrandom(2) syscall
Linux man page says, syscall(2) function prototype is below.
Linux version for the architecture must support syscall memfd_create
List for thread to write to a PMA
List is linked together via the pointer normally used for hash chains - RtreeNode.pNext.
List may have been edited in place by fts3EvalNearTrim()
List of Authoritative Name Servers Process when only requesting addtl so that we can skip through the section
List of SQL indexes on this table.
List of Table objects to delete after code gen
List of VALUES() to be inserted
List of VTable objects.
List of active savepoints
List of active virtual machines
List of all WhereLoop objects
List of all chunk allocations
List of all unixInodeInfo objects
List of attached tables
List of available buffers
List of binary trees of entries
List of columns in pTableName to insert into
List of columns to extract.
List of decomposition.
List of dirty pages in LRU order
List of dirty pages to revert
List of dirty pages to write
List of docids for full-text queries
List of entries using pRight
List of explicit column names, or NULL
List of expressions or a sub-SELECT
List of expressions to scan
List of field names to be indexed
List of frame objects to free on VM reset
List of frames to log
List of free mmap page headers (pDirty)
List of function arguments
List of global functions to be inserted
List of in-memory records
List of indexed columns
List of locks held on this shared-btree struct
List of methods defined in the module
List of names of LHS of the assignment
List of nodes removed during a CondenseTree operation.
List of operands to the LIKE operator
List of other sharable Btrees from the same db
List of properties expected to be found in the Unicode Character Database including some implementation specific properties.
List of statements inside the trigger body
List of table triggers, if required
List of tables in FROM clause
List of tables in current patch
List of tables in the join
List of tables to select from
List of triggers on pTab, if required
List of triggers on table pTab
List of triggers stored in pSchema
List of triggers to (potentially) fire
List of triggers to return
List of unused pcache-local pages
List of user defined columns
List of values being extracted
List order does not matter, and there are no duplicates.
List the colors in the color table.
List to scan and in which to make substitutes
List to which to add the span.
List to which to append.
Lists of free blocks.
Lite does not support C API
LiteSpeed PHP module starts here
Literals are truncated to actual size in the second compiler pass (pass_two()).
Live ranges have to be sorted by "start" field
Load all automatic extensions.
Load an incr-merge hint from the database.
Load an unaligned and unsigned 32-bit integer
Load and activate user ini files in path starting from DOCUMENT_ROOT
Load and parse one file.
Load automatic extensions - extensions that have been registered using the sqlite3_automatic_extension() API.
Load composition exclusion data
Load doclist-index for this leaf
Load magic initialization constants.
Load new statistics out of the sqlite_stat1 table
Load original PNG, which should contain alpha channel information.
Load table details if required
Load the FTS index structure
Load the Parse object passed as the first argument with an error  message of the form:  "sub-select returns N columns - expected M"
Load the TypeLib by GUID
Load the built-in tokenizers into the hash table
Load the content of the sqlite_stat1 and sqlite_stat3/4 tables.
Load the doclists for each phrase in the query associated with FTS3 cursor pCsr.
Load the entire doclist for the phrase into memory in this case.
Load the entire master journal file into space obtained from sqlite3_malloc() and pointed to by zMasterJournal.
Load the extension into this database connection
Load the file as an object one
Load the full doclist for the phrase into memory.
Load the history at startup
Load the history from the specified file.
Load the initial configuration
Load the integer value into a VFP register.
Load the lowest cost path into pWInfo
Load the next document of the stream.
Load the next leaf page into the segment iterator.
Load the next term on the node into zBuffer.
Load the sqlite3.iSysErrno field if that is an appropriate thing to do based on the SQLite error code in rc.
Load the statistics from the sqlite_stat4 table.
Load the ufunc operators into the array module's namespace
Load the value for the inequality constraint at the end of the range (if any).
Load the values for  all columns not modified by the update statement into their  registers in case this has happened.
Load the whole number.
Local cache of vfs pointer
Local copy of UTF flag for speed
Local copy of initial highlight-mask
Local copy of the flag
Local nicknames or unqualified names MUST NOT be used.
Local reference to page 1
Local variables: c-file-style: "ruby" End:
Local variables: mode: c c-file-style: ruby indent-tabs-mode: nil End:
Local variables: tab-width: 4 c-basic-offset: 4 End:
Local variables: tab-width: 4 c-basic-offset: 4 indent-tabs-mode: t End:
Local variables: tab-width: 4 c-basic-offset: 4 indent-tabs-mode: t End:  vim:noexpandtab:
Local zend_object creation (on stack) Load the 'other' object Create a new empty object (See spl_filesystem_object_new_ex) Open the directory Clone other members (properties)
Locale identifier - (eg.
Locate a VFS by name.
Locate a user function given a name, a number of arguments and a flag indicating whether the function prefers UTF-16 over UTF-8.
Locate and if necessary initialize the target table object
Locate and return an entry from the db.aCollSeq hash table.
Locate either the insertion point or range for the code.
Locate or create an AutoincInfo structure associated with table pTab which is in database iDb.
Locate symbol for the system pthread_create function.
Locate the PRIMARY KEY index.  Or, if this table was originally an INTEGER PRIMARY KEY table, create a new PRIMARY KEY index.
Locate the colormap entries close enough to an update box to be candidates for the nearest entry to some cell(s) in the update box.
Locate the combining class code.
Locate the cursor number of the Current table
Locate the end of the CREATE VIEW statement.
Locate the first character property field.
Locate the in-memory structure that describes  a particular index given the name of that index and the name of the database that contains the index. Return NULL if not found.
Locate the in-memory structure that describes a particular database table given the name of that table and (optionally) the name of the database containing the table.
Locate the index named by the INDEXED BY clause, if any.
Locate the insertion point for the code.
Locate the insertion point.
Locate the next offset that is not 0xffff.
Locate the pragma in the lookup table
Locate the required virtual table module
Locate the second character property field.
Locate the table identified by *p.
Locate the table in question
Locate the table into which we will be inserting new information.
Locate the table the column is being extracted from in NameContext.pSrcList.
Locate the table which we want to delete.
Locate the table which we want to update.
Location in parent of right-sibling pointer
Location of current replacement in the result
Location of last match
Location of new mapping
Lock a mutex. A return value of 0 indicates success
Lock a region for exclusive use
Lock all btrees used by the statement
Lock offset to lock for checkpoint
Lock the PENDING_LOCK byte if we need to acquire a PENDING lock or a SHARED lock.
Lock the database file to level eLock, which must be either SHARED_LOCK, RESERVED_LOCK or EXCLUSIVE_LOCK.
Lock the destination database, if it is not locked already.
Lock the source database handle.
Lock the virtual table so that it cannot be disconnected.
LockFile() prevents not just writing but also reading by other processes.
Locking behavior is correct if the appliation uses the newer Native Posix Thread Library (NPTL) on linux - with NPTL a lock created by thread A can override locks in thread B.
Locking done in library if set
Locking in windows is manditory.
Locking primitives for the proxy uber-locking-method.
Locking style specific state
Locks are added (or upgraded from READ_LOCK to WRITE_LOCK) when a cursor  is opened on the table with root page BtShared.iTable.
Locks are either shared or exclusive.
Locks are removed from this list when a transaction is committed or rolled back, or when a btree handle is closed.
Locks are within range
Locks block if the mask is exactly UNIX_SHM_C and are non-blocking otherwise.
Locks held  by database connection db have been released.
Locks obtained by this instance of winFile
Log a I/O error retry episode.
Log an error and return true if it has been finalized (or is otherwise invalid).
Log an error that is an API call on a connection pointer that should not have been used.
Log base 2 of TILEGX_BUNDLE_ALIGNMENT_IN_BYTES.
Log base 2 of TILEGX_BUNDLE_SIZE_IN_BYTES.
Log base 2 of minimum allocation size in bytes
Log the error, but continue normal operation using xRead/xWrite
Log2 Size of this block
Log2 of iFullSz/POW2_MIN
Logarithm of table size
Logarithm of the number of rows in the table
Logarithmic, so 0 really means 1
Logging is disabled if the function pointer is NULL.
Logically, the '+' notation is just syntactic sugar, taken from Sun's Java package, but the special opcodes can optimize it.
Long long failed, try unsigned long long
Long-term TODO list: - Fix the expat library so you can install your own memory manager functions
Longer repr, like 'float64'
Look ahead to get the available data amount to read.
Look ahead to match +pattern+, and advance the scan pointer to the _end_ of the match.
Look at lines above and below and start paints
Look at the "path" extension and figure what mime type it has.
Look at the current letter in the word
Look at the next letter in the word
Look at this function as an iterator on the mbi integers it spits out.
Look for a magic "hhi" elf section and read it out, if it exists.
Look for a matching node at this level
Look for a single small subdiagonal element.
Look for an existing WhereLoop to replace with pTemplate
Look for binary search function
Look for ctor, dtor, clone If it's an old-style constructor, store it only if we don't have a constructor already.
Look for two consecutive small subdiagonal elements.
Look in Misc/lapack_lite for information on remaking this file.
Look it up in symbol-table
Look past the end of the item to see if there is repeat information following.
Look to see if there is an existing winShmNode that can be used.
Look two letters down.
Look up an index by name.
Look up every table named in the FROM clause of the select.
Look up that table in the symbol table and return a pointer.
Look up the table being altered.
Lookahead token as an internal (translated) token number.
Lookaside allocations are only allowed for objects that are associated with a particular database connection.
Lookaside malloc configuration
Lookaside malloc is a set of fixed-size buffers that can be used to satisfy small transient memory allocation requests for objects associated with a particular database connection.
Lookaside memory is used if not NULL.
Lookbehind assertions have an OP_REVERSE item at the start of each branch to move the current point backwards, so the code at this level is identical to the lookahead case.
Lookbehind or named define
Looking at the OS X headers, the conflicting typehints are gated with these definitions, so this was the easiest workaround for me.
Looking for second unique point.
Looking for third unique point.
Looks up a phar archive in the filename map, connecting it to the alias (if any) or returns null
Lookup for the lang_tag match
Lookup key for the unixInodeInfo
Lookup table for factors between datetime units, except for years and months.
Lookup the name in the hash
Loop counter 0..nSnippet-1
Loop counter over the terms of the join
Loop counter:  Field of the foreign key
Loop counter:  Foreign key number for pTab
Loop counter:  Next table in schema
Loop doesn't have freeable variable
Loop exits by "break"
Loop for all the alternatives.
Loop for comment characters
Loop for each alternative
Loop for each alternative branch
Loop for each alternative branch.
Loop for items in this branch
Loop for multiple comments
Loop for searching the highest bit.
Loop for second and subsequent matches
Loop over Boolean array
Loop over all elements
Loop over all indices
Loop over passwords file
Loop over pattern segments until end of pattern or until segment with meta character found.
Loop over the format string
Loop over the tables in the join, from left to right
Loop termination flag
Loop through all candidate snippets.
Loop through all columns of the table being considered for snippets.
Loop through all indices on the table, checking each to see if it makes the DISTINCT qualifier redundant.
Loop through all of the arguments passed by the user to the FTS3/4 module (i.e. all the column names and special arguments).
Loop through all rows of the table, inserting index records into the sorter.
Loop through all the foreign key constraints for which pTab is the child table (the table that the foreign key definition is part of).
Loop through all the foreign key constraints that refer to this table.
Loop through all the types, promoting them
Loop through each expression in the result set and expand them one by one.
Loop through list and close all statements
Loop through table entries that match term pOrTerm.
Loop through the Boolean array  and copy coordinates for non-zero entries
Loop through the chunks.
Loop through the elements of inptr.
Loop through the elements that will make up the record to figure out how much space is required for the new record.
Loop through the indentation levels in the stack.
Loop through the program looking for P2 values that are negative on jump instructions.
Loop through the returned columns.
Loop through the table columns, appending offset information to  string-buffer res for each column.
Loop through the tables in the main database.
Loop, searching for OP_REVERSE items, and process those that do not have their length set.
Looping over other all cursors
Loops are numbered starting from zero.
Loops may be overwritten if the following  conditions are met:  (1)  They have the same iTab.
Loosely based on a tempnam() implementation by UCLA
Low accuracy coordinate
Low byte is accessible.
Low byte is not accessible.
Low level access to the FTS index stored in the database file.
Low-level file information
Low-level memory allocation interface
Low-level mutex interface
Low-level page-cache interface
Lower bound on the range.
Lower half of a symmetric band matrix
Lower priorities are more favorable for scheduling.
Lower the locking level on file descriptor id to locktype.
Lower the locking level on file descriptor pFile to eFileLock.
Lower triangular matrix
Lower values have a higher precedence (i.e. group more tightly).
Lowercase constant name in a separate literal
Lowercased unqualfied name
Luckily currently we aren't using app_data.
Luckily, in 5.0 an error always aborts execution of a statement, wherever it is a multi-statement or a stored procedure, so it should be safe to unconditionally turn off the flag here.
Luckily, the value of CHAR_VT is 0x0b in both ASCII and EBCDIC, so we could just adjust the appropriate bit.
Lucky us, we can free a bit of memory from the pool.
M       (input) INTEGER On entry, M specifies the number of rows of A.
M       (input) INTEGER The number of columns of the matrix V.
M       (input) INTEGER The number of rows of the input matrix A.
M       (input) INTEGER The number of rows of the matrix A.
M       (input) INTEGER The number of rows of the matrix C.
M       (input) INTEGER The number of rows of the matrix Q or P**H to be returned.
M       (input) INTEGER The number of rows of the matrix Q or P**T to be returned.
M       (output) INTEGER The number of columns in the arrays VL and/or VR actually used to store the eigenvectors.
M  must  be at least  zero.
M - Any values pushed by the current alternative.
M is an integer, 2 or 3, that indices how many different ways the branch can go.
M must be at least zero.
M points to last element of unconverged part of matrix
M(j) could overflow, set XBND to 0.
MACRO's to guard objects from GC by keeping them in stack
MAIN DTYPE TRANSFER FUNCTION
MAP_ANON is deprecated, but not in macosx
MAP_FIXED leads to discarding of the old mapping, so it can't be used.
MAP_NORESERVE is because we want a lot more virtual memory than what we are actually going to use.
MARK, and PRUNE/SKIP/THEN with an argument must skip over the argument string.
MASKED TRANSFER WRAPPER
MATCH 'a OR (b NEAR c)'  is matched against a row containing:  'a b d e'  then any snippet() should ony highlight the "a" term, not the "b" (as "b" is part of a non-matching NEAR clause).
MATCH_ONCE is returned when the end of an atomic group is successfully reached, but subsequent matching fails.
MD5 Message-Digest Algorithm (RFC 1321).
MD5 Message-Digest Algorithm" in all material mentioning or referencing the derived work.
MD5 Message-Digest Algorithm" in all material mentioning or referencing this software or this function.
MD5 calculates a digest of 128 bits (16 bytes).
MD5 password encryption.
MD5(pw,salt,pw), valid.
MD5C.C - RSA Data Security, Inc., MD5 message-digest algorithm
MD5Update blocks the data and converts bytes into longwords for this routine.
MEM cell holding data for the record to be inserted
MEM cell holding key  for the record
MEM_END or MEM_END_MARK
MERGE_COUNT controls how often we merge segments.
MIME mode B base64, Q hex
MIME preprocessor fifo
MINGW typedefs pid_t to int.
MINSIZE is the minimum size of a dictionary.
MJ checksum value read from journal
MM      (input) INTEGER The number of columns in the arrays VL and/or VR.
MNTHR Path 5 (M at least N, but not much larger) Reduce to bidiagonal form without QR decomposition
MNTHR Path 5t (N greater than M, but not much larger) Reduce to bidiagonal form without LQ decomposition
MNTHR2 Path 6 (M at least N, but not much larger) Reduce to bidiagonal form without QR decomposition Use CUNMBR to compute singular vectors
MNTHR2 Path 6 (M at least N, but not much larger) Reduce to bidiagonal form without QR decomposition Use ZUNMBR to compute singular vectors
MNTHR2 Path 6t (N greater than M, but not much larger) Reduce to bidiagonal form without LQ decomposition Use CUNMBR to compute singular vectors
MNTHR2 Path 6t (N greater than M, but not much larger) Reduce to bidiagonal form without LQ decomposition Use ZUNMBR to compute singular vectors
MRGcoplanar or MRGanglecoplanar
MS Access, for instance, doesn't support SQLDescribeParam, so we need to guess
MSDN docs indicate that this might be ignored in current win32 implementations, but at least we are doing the right thing in readiness for the day that it does work
MSG_CMSG_CLOEXEC is available since Linux 2.6.23.
MSG_DONTWAIT avoids the race condition between fcntl and recvfrom.
MSIE doesn't delete a cookie when you set it to a null value so in order to force cookies to be deleted, even on MSIE, we pick an expiry date in the past
MSUB   (input) INTEGER.
MSVC defines its own IN macro, undefine it here
MSVC doesn't have mode_t
MSVC generates a warning, nevertheless.
MSVC is picky about pulling func ptrs from va lists.
MSVCRT doesn't set errno...
MULTI_QUERY support - eat up all unfetched result sets
MUST BE LAST (see below)
MUTEX_STATIC_LRU or NULL
MW: I think it would better to disallow switching from READONLY to WRITEABLE like this...
MYSQLND specific code
MYSQLND_COMPRESSION_ENABLED
MYSQLND_STRING_TO_INT_CONVERSION
Mac OS X and OpenBSD have __syscall but don't define it in headers
Mac OS X makes KERN_PROTECTION_FAILURE when thread touch guard page.
Mac OS X with dlopen (10.3 or later)
Machine code is generated for the checker itself and for the actions depending on the result of the checker.
Machines with very recent ANSI C headers, can use the uintXX_t definintions from inttypes.h by defining SHA2_USE_INTTYPES_H during compile or in the sha.h header file.
Macro IfNotOmitAV(x) returns (x) if SQLITE_OMIT_AUTOVACUUM is not  defined, or 0 if it is.
Macro for disabling flag of translation of non-basic entities where this isn't supported.
Macro for incrementally adding the unsigned 64-bit integer n to the unsigned 128-bit integer (represented using a two-element array of 64-bit words):
Macro for setting individual bits in class bitmaps.
Macro likely() surrounds a boolean expression that is usually true.
Macro that decides whether a character should be output as a literal or in hexadecimal.
Macro that does padding.
Macro to return the number of elements in an array.
Macro used to suppress compiler warnings for unused parameters.
Macros are used to achieve this so that the actual code doesn't look very different to what it always used to.
Macros determining the rowids used by segment leaves and dlidx leaves and nodes.
Macros for converting digits to letters and vice versa
Macros for copying blocks of memory and for zeroing out ranges of memory.
Macros for looping over all elements of a hash table.
Macros for performance tracing.
Macros for testing whether or not optimizations are enabled or disabled.
Macros for troubleshooting.
Macros indicating that conditional expressions are always true or false.
Macros make the argument variables come from the current frame
Macros to Set(), Clear() and Test() cursor flags.
Macros to compute minimum and maximum of two numbers.
Macros to determine if a column is hidden.
Macros to determine the number of bytes required by a normal Expr  struct, an Expr struct with the EP_Reduced flag set in Expr.flags  and an Expr struct with the EP_TokenOnly flag set.
Macros to determine the number of bytes required by a normal Expr struct, an Expr struct with the EP_Reduced flag set in Expr.flags and an Expr struct with the EP_TokenOnly flag set.
Macros to determine whether the machine is big or little endian, and whether or not that determination is run-time or compile-time.
Macros to enter and leave the PCache LRU mutex.
Made code more complicated.
Magic IV for 64 Blowfish encryptions that we do at the end.
Magic Mersenne Twister constants
Magic characters count 0
Magic entries with no description get a bonus because they depend on subsequent magic entries to print something.
Magic number 1 is the WAL_CKPT_LOCK lock.
Magic number for detect library misuse
Magic number for sanity checking
Magic number to detect structure corruption.
Magic size needed by npy_cffti
Magic size needed by npy_rffti
Magic value read from WAL header
Magic values subtracted from a buffer value during UTF8 conversion.
Main database page size
Main database structure
Main file for the SQLite library.
Main function for the watching thread
Main loop to read CSV fields
Main loop to update the values of the array   DELTA
Main loop to update the values of the array   DELTA and WORK
Main part of the matching
Main pcre_jit_exec entry.
Main sorter structure.
Mainly, this library is for (memory) profiler developers and MRI developers who need to know about MRI memory usage.
Maintain a linked list of the child nodes that can shrink and/or grow.
Maintain reference count             *
Maintenance is more error-prone, but frequent changes to this data are unlikely.
Make 'dates' into an array
Make 'dates_begin' into an array
Make 'dates_end' into an array
Make 'offsets' into an array
Make *pConchPath point to the new name.
Make *pzErr point to any syntax error in zPath
Make a copy of a string in memory obtained from sqliteMalloc().
Make a copy of an sqlite3_value object
Make a copy of the actual pattern.
Make a copy of the cell contents and return a pointer to it.
Make a copy of the entire SELECT statement that defines the view.
Make a copy of the input 'dts' to modify
Make a copy of the input dictionary
Make a copy of the metadata before merging with the input metadata so that this data-type descriptor has it's own copy
Make a copy of the npy_datetimestruct we can modify
Make a copy of the src data if it's a different dtype than 'dst' or isn't aligned, and the destination we're copying to has more than one element.
Make a few "tile_" variables to simplify common code between architectures.
Make a full copy of pFrom into pTo.
Make a local copy and adjust rve to be in terms of s
Make a new NPY_TIMEDELTA, and copy the datetime's metadata
Make a new NPY_TIMEDELTA, and copy type1's metadata
Make a new NPY_TIMEDELTA, and copy type2's metadata
Make a new directory within a phar archive
Make a new empty array, of the passed size, of a type that takes the priority of ap1 and ap2 into account.
Make a new pointer to a KeyInfo object
Make a pointer to the free space int the buffer
Make a range of all surrogates and assume some default properties.
Make a reasonable guess that if the buffer is 1024 times bigger than the length of the format string, it's not failing for lack of room.
Make a transient copy of expression pExpr and then code it using sqlite3ExprCode().
Make alloca work the best possible way.
Make an entry in the sqlite_master table
Make an extension type.
Make an shallow copy of pFrom into pTo.
Make any required updates to pointer map entries associated with  cells stored on sibling pages following the balance operation.
Make attention so that the root of each subtree of the Generators tree is referenced once per leaf
Make compilers happy.
Make copies of constant WHERE-clause terms in the outer query down inside the subquery.
Make copies of relevant WHERE clause terms of the outer query into the WHERE clause of subquery.
Make coverage arrays empty so old covered files are no longer tracked.
Make diagonal elements equal.
Make every page in the cache clean.
Make fts5yytestcase() the same as testcase()
Make it safe to call it repeatedly for PS - better free and allocate a new because the number of field might change (select *) with altered table.
Make it so the fetch occurs on the first Implicit Result Set
Make lowercase for easy comparison against 'standard' headers
Make modifiable copy of the auth header
Make nMaxCells a multiple of 4 in order to preserve 8-byte alignment
Make necessary adjustments to the CellInfo structure.
Make new strides -- alwasy C-contiguous
Make no changes but still report the old value if the new limit is negative.
Make no changes if if the argument is zero.
Make no changes if mxPage is zero or negative.
Make obj into an ASCII string
Make obj into an ASCII string if it is UNICODE
Make object size a multiple of 16
Make one OLD object per RGENGC_OLD_NEWOBJ_CHECK WB protected objects creation.
Make opaque types, etc.
Make our own copy that can persist after we return.
Make output image interlaced (progressive, in the case of JPEG)
Make pRoot, the root page of the b-tree, writable.
Make sEnd point to the end.
Make space in the table and break the loop for an earlier name.
Make stdin, stdout and stderr accessible from PHP scripts
Make sure "isView" and other macros defined above are undefined.
Make sure 'out' is an array if it's provided
Make sure 'shape' is a tuple
Make sure X is always used by clearing the EP_Collate flag from Y.
Make sure YYID is used.
Make sure a corrupt database has not given us an oversize header.
Make sure a mutex is held on the table to be accessed
Make sure all SELECTs in the statement have the same number of elements in their result sets.
Make sure all arrays are actual array objects.
Make sure all entries are strings
Make sure all objects are contained in this database
Make sure all the flags are good
Make sure all the indices are constructed correctly.
Make sure all writes to a particular file are committed to disk.
Make sure an empty php_ini_scanned_path ends up as NULL
Make sure at least one set of Win32 APIs is available.
Make sure cell keys are in order.
Make sure chunk size is valid.
Make sure cursor numbers have been assigned to all entries in the FROM clause of the SELECT statement.
Make sure every column of the PRIMARY KEY is NOT NULL
Make sure every core dimension exactly matches all other core dimensions with the same label.
Make sure every page in the file is referenced
Make sure initialized even if FullPathname() fails
Make sure integer cell keys are in order.
Make sure it is not a system table being altered, or a reserved name that the table is being renamed to.
Make sure it is small enough so that at least minFanout cells can will fit on one page.
Make sure it looks like a float
Make sure no core dimension is unspecified.
Make sure no key is greater than or equal to zUpperBound.
Make sure no key is less than or equal to zLowerBound.
Make sure no sibling connections hold locks that will block this lock.
Make sure only one of the weekmask/holidays and busdaycal is supplied
Make sure pToRelease is still writeable.
Make sure page is marked dirty
Make sure some idiot didn't include a vector as a child of itself and thus it would have already free'd these.
Make sure sufficient number of registers have been allocated
Make sure that a SIGSEGV in Go causes a run-time panic.
Make sure that any level 0 "default" line is last (if one exists).
Make sure that cells and freeblocks do not overlap but combine to completely cover the page.
Make sure that destructors are protected from previously thrown exceptions.
Make sure that rand_s() is available on Windows systems with MSVC 2005 or higher.
Make sure that the compiler intrinsics we desire are enabled when compiling with an appropriate version of MSVC unless prevented by the SQLITE_DISABLE_INTRINSIC define.
Make sure that the memory subsystem is initialized prior to invoking sqliteRealloc.
Make sure that the preinit sequence has run.
Make sure that there is at least one character in string
Make sure that xValue  is one of these to guarantee that it is safe to ignore the return  in the code below.
Make sure the BtCursor* given in the argument has a valid BtCursor.info structure.
Make sure the INTERFACE macro is defined.
Make sure the SQLITE_OPEN_URI flag is set to indicate to the VFS xOpen  method that there may be extra parameters following the file-name.
Make sure the TEMP database is open and available for use.
Make sure the Tcl calling convention macro is defined.
Make sure the abstract declaration is compatible with previous declaration
Make sure the allocated memory does not assume that it is set to zero or retains a value from a previous allocation
Make sure the arrays are of the same size.
Make sure the buffer contains at least 10 bytes of input data, or all remaining data if there are less than 10 bytes available.
Make sure the cell sizes at idx, idx+1, ..., idx+N-1 have been computed.
Make sure the column name is unique.
Make sure the copy is reasonable
Make sure the cursor p is ready to read or write the row to which it was last positioned.
Make sure the database schema is loaded if the pragma requires that
Make sure the exponent has at least 2 digits
Make sure the flags argument is set.
Make sure the given internal_date string matches the RFC specifiedformat
Make sure the hard limits are set to reasonable values
Make sure the isInit flag is clear
Make sure the itemsize isn't made too small
Make sure the iterator is reset
Make sure the last argument, if passed, is an array
Make sure the lock has been released before closing.
Make sure the locking sequence is correct
Make sure the locking sequence is correct (1) We never move from unlocked to anything higher than shared lock.
Make sure the locking sequence is correct.
Make sure the minimum of value_sz is 1 to avoid ORA-3149  when both in/out parameters are bound with empty strings
Make sure the mutex subsystem is initialized.
Make sure the new file size is written into the inode right away.
Make sure the new table name does not collide with an existing index or table name in the same database.
Make sure the number of columns in the source data matches the number of columns to be inserted into the table.
Make sure the number of reserved bits is the same in the destination pager as it is in the source.
Make sure the ordering..
Make sure the output register has a buffer large enough to store  the new record.
Make sure the pDone bit corresponding to the *pOffset page is set prior to returning.
Make sure the page is marked as clean.
Make sure the page is marked as dirty.
Make sure the results agree with the result obtained using the hash indexes above.
Make sure the schema version is at least 3.
Make sure the signature can't match by dumb luck -- TBB
Make sure the sort order is compatible in an ORDER BY clause.
Make sure the trait method is compatible with previosly declared abstract method
Make sure there is enough workspace for copying forward references before doing the copy.
Make sure there is no ORDER BY or LIMIT clause on prior SELECTs.
Make sure this analysis did not leave any unref() pages.
Make sure this array is sized to be on a 4-byte boundary at compile time.
Make sure this does not cause any problems.)  This instruction only works on tables.
Make sure this is not an attempt to ALTER a view.
Make sure we __autoload() only during run-time (doesn't impact functionality of __autoload()
Make sure we can call this stuff from C++.
Make sure we detect we are a cgi - a bit redundancy here, but the default case is that we have to check only the first one.
Make sure we do not overflow buffer and the envp array
Make sure we don't go round the fork loop any more
Make sure we don't have malformed output
Make sure we have an array
Make sure we have latest lookahead translation.
Make sure we hold a reference count during the destructor call otherwise, when the destructor ends the storage might be freed when the refcount reaches 0 a second time
Make sure we hold them.
Make sure we only increase the currently running processes semaphore once each execution (this function can be called more than once on each execution)
Make sure we pass back the pointer to the bit vector in the external block, not the internal copy (with flipped integer fields).
Make sure we're dealing with strings and do the replacement.
Make sure we're dealing with strings.
Make sure zData points to enough of the record to cover the header.
Make the INT_PART and FRAC_PART positive.
Make the IdChar function accessible from ctime.c
Make the JSON in p the result of the SQL function.
Make the JsonNode the return value of the function.
Make the context ready to start over
Make the given Mem object MEM_Dyn.
Make the new connection a child of the unixShmNode
Make the new connection a child of the winShmNode
Make the old transparent color opaque again
Make the page containing the entry to be  deleted writable.
Make the page containing the entry to be deleted writable.
Make the parent page writable, so that the new divider cell may be inserted.
Make the perm entry negative so get_multi_index knows it's flipped
Make the qsort stable by next comparing the perm order.
Make the return value an array only if we need to pass back more than one result.
Make the subnormal significand
Make the tree as deep as it needs to be in order to contain the entire list.
Make them sufficiently negative to avoid the external error codes.
Make this EXPR node point to the selected column
Make this function work for a regex with integers either byte order.
Make this point to any syntax error
Make this process to use file-cache only
Make up and send the status line
Make year always a positive number.
Make yytestcase() the same as testcase()
Makes OP_Jump below testable
Makes X509 from X509_REQuest
Makes a copy of the iterator.
Makes from X509 X509_REQuest
Makes the check less complicated below.
Malformed header - probably all zeros
Malformed library file
Malformed number or name
Malformed or multiple newlines.
Malloc a buffer to read frames into.
Malloc and Free functions
Malloc failed while inserting the new entry.
Malloc function used by SQLite to obtain space from the buffer configured using sqlite3_config(SQLITE_CONFIG_PAGECACHE) option.
Malloc function used within this file to allocate space from the buffer configured using sqlite3_config(SQLITE_CONFIG_PAGECACHE) option.
Malloc may fail when setting the page-size, as there is an internal buffer that the pager module resizes using sqlite3_realloc().
Malloc must have failed
Malloc must have failed inside HashInsert()
Malloc'd buffer to load entire frame
Malloc'd child-journal file descriptor
Malloc'd master-journal file descriptor
Malloc'd output buffers
Malloc'd space (possibly) used for zTerm
Malloced memory used by some conversion
Malloced string that needs to be freed
Manage pPage's participation on the dirty list.
Mangled key - ignore and wait for runtime
Manual call of compile_assert_matchingpath.
Manual call of compile_bracket_matchingpath and compile_bracket_backtrackingpath.
Many (perhaps most) of these colors will remain marked open.
Many IO methods exist in two forms,  one that returns +nil+ when the end of file is reached, the other raises EOFError +EOFError+.
Many compilers we encounter do not define constants for the minimum and maximum 64-bit integers, or they define them inconsistently.
Many objects can be used to represent a data-type which in NumPy is quite a flexible concept.
Many of the examples in this section use the File class, the only standard subclass of IO.
Many of the flag-pragmas modify the code generated by the SQL  compiler (eg.
Many of the following variables are used only in small blocks of the code.
Many of these methods return platform-specific values, and not all values are meaningful on all systems.
Many older versions of linux use the LinuxThreads library which is not posix compliant.
Many operating systems allow signals to be sent to running processes.
Many subclasses should probably call __setitem__ with a base class ndarray view to avoid this.
Many system calls are accessed through pointer-to-functions so that they may be overridden at runtime to facilitate fault injection during testing and sandboxing.
Many systems (examples: AIX) are unable to fsync a directory, so ignore errors on the fsync.
Map cursor numbers to bitmasks
Map errors 1:1 up to +- MAXJSAMPLE/16
Map errors 1:2 up to +- 3*MAXJSAMPLE/16
Map from pIdx cols to child table cols
Map from parent key columns to child table columns
Map from vector field to index column
Map only part of SHM to have access opcache shared globals
Map some rows of pixels to the output colormapped representation.
Map the requested memory region into this processes address space.
Map's the T to its new index
Mapping failed, wait for mapping object to get freed and retry
Mapping from Index fields to RHS fields
Mapping from ORDER BY terms to result set columns
Mapping from columns of pTab to entries in pChanges
Mapping from table to index column numbers
Mapping of bundle issue slot to assigned pipe.
Mapping of byte from char (8bit) to long for machine endian
Mapping of columns in pFrom to columns in zTo
Mapping retries: When Apache2 restarts, the parent process startup routine can be called before the child process is killed.
Mappings of bytes from int (machine dependent) to int for machine endian
Mappings of bytes from longs (32bit) for all endian environments
Mappings of bytes from quads (64bit) for all endian environments
Mappings of bytes from shorts (16bit) for all endian environments
Maps private data offset to each opcode.
Maps qhull facet id to triangle index.
Mark a data page as writeable.
Mark a function parameter as unused, to suppress nuisance compiler warnings.
Mark a page as unpinned (eligible for asynchronous recycling).
Mark a single data page as writeable.
Mark a single page as clean
Mark all dirty list pages as clean
Mark all of these as Other Neutral to preserve compatibility with older versions.
Mark all temporary registers as being unavailable for reuse.
Mark every PRIMARY KEY column as NOT NULL (except for imposter tables)
Mark every prepared statement associated with a database connection as expired.
Mark literals of specific types
Mark message copied if any
Mark node i of pParse as being a child of iParent.
Mark non-alphanumeric ASCII characters as delimiters
Mark off any other ORDER BY terms that reference pLoop
Mark password as unchanged by PHP during the duration of the database session
Mark some of them with "register" because they are used a lot in loops.
Mark term iChild as being a child of term iParent
Mark that we reference the connection, thus it won't be be destructed till there is open statements.
Mark the VDBE as one that can only be run multiple times.
Mark the VDBE as one that can only be run one time.
Mark the connection as usable again
Mark the database file just opened as an RBU target database.
Mark the page as clean.
Mark the page as dirty  and if the pager requires a journal-sync, then mark the page as  requiring a journal-sync before it is written.
Mark the page as dirty.
Mark the page that is about to be modified as dirty.
Mark the table as Ephemeral prior to deleting it, so that the sqlite3DeleteTable() routine will know that it is not stored in  the schema.
Mark this cursor as an incremental blob cursor.
Marker for "currently visiting"
Markers x30 - x3F do not have a segment
Marking - Marking stack
Marks the end of extra data
Marshal versioning is independent of Ruby's version numbers.
Marshaled data has major and minor version numbers stored along with the object information.
Mask against sqlite3_index_constraint.op
Mask for four values above
Mask for the current column
Mask for three values above
Mask of FTS5INDEX_QUERY_X flags
Mask of FTS5INDEX_XXX flags
Mask of FTS5_TOKENIZE_* flags
Mask of FTS5_TOKEN_* flags
Mask of NEW.* columns accessed by BEFORE triggers
Mask of OLD.* columns in use
Mask of ORDER BY terms satisfied so far
Mask of ORDER BY terms that need reversing
Mask of SQLITE_INDEX_SCAN_* flags
Mask of WO_xx values describing operator
Mask of affinity bits
Mask of all ORDER BY terms
Mask of all non-compound WO_* values
Mask of all possible WO_* values
Mask of all well-ordered loops
Mask of bits to set or clear.
Mask of columns used by this cursor
Mask of configuration flags
Mask of cursor flags (see below)
Mask of cursors that are not available
Mask of events to be traced
Mask of exclusive locks held
Mask of function arguments that are constant
Mask of locks held by siblings
Mask of locks to take or release
Mask of new.* columns referenced
Mask of old.* columns referenced
Mask of phrases already covered
Mask of phrases covered by this snippet
Mask of pipes used by this bundle.
Mask of query phrases covered
Mask of rev-order loops for (..)
Mask of shared locks held
Mask of snippet terms to highlight
Mask of src visited by (..)
Mask of tables that must be used.
Mask of terms not to omit
Mask of the OPFLG_* flags in opcodes.h
Mask of the bit in sqlite3.flags to set/clear
Mask of tokens to highlight in snippet
Mask of trigger times
Mask of usable tables
Mask off the SQLITE_SYNC_* values
Mask to isolate flags related to iterators
Masked asynchronous interrupts are delayed until they are enabled.
Masks of old.*, new.* columns accessed
Master routine for color selection
Master thread adds accepted socket to a queue
Master thread could wake us up without putting a socket.
Match a back reference, possibly repeatedly.
Match a bit-mapped character class, possibly repeatedly.
Match a negated single one-byte character repeatedly.
Match a negated single one-byte character.
Match a regular expression        *
Match a single byte, even in UTF-8 mode.
Match a single character repeatedly.
Match a single character, casefully
Match a single character, caselessly.
Match an extended Unicode sequence.
Match an extended character class.
Match any single character whatsoever.
Match character against an XCLASS        *
Match characters up to the end of the reference.
Match extended Unicode grapheme clusters.
Match extended Unicode sequences.
Match from current position            *
Match these columns only
Match up the fields to copy
Matched CTE (or NULL if no match)
Matched an empty string
Matchinfo context object
Matchinfo format string
Matchinfo specification
Matching column in the left table
Matching failed: handle error cases
Matching literals may be more than one character in length.
Math on large arrays of basic C types is rather efficient.
Matrix vector multiplication -- Level 2 BLAS
Max args passed to user function by sub-program
Max cache entries for pcacheDump()
Max database page to write
Max dlidx tree height of 32
Max frame that can be backfilled
Max iDivisor is max(u32) / BITVEC_NPTR + 1.
Max length of an SQL string
Max level number for this index/langid
Max limit of recursions.
Max main dimension of all the lines.
Max pending data before flush to disk
Max seg id number 65535
Max tokens per snippet
Maximum PMA size, in bytes.
Maximum Sorter PMA size
Maximum allowed allocation.
Maximum allowed page size
Maximum allowed segments per level
Maximum allowed size of the database
Maximum allowed string length
Maximum allowed string or blob size
Maximum amount of payload held locally
Maximum back reference and backref bitmap.
Maximum bytes of data to store
Maximum cost of a set of paths
Maximum depth of an SQLite B-Tree structure.
Maximum depth of recursion for triggers.
Maximum difference in token positions
Maximum docid to return
Maximum error message length (in chars) for WinRT.
Maximum exponent is LONG_MAX.
Maximum file pathname length
Maximum first byte of cell for a 1-byte payload
Maximum instantaneous currentCount
Maximum instantaneous currentOut
Maximum iterations for calculating sqrt.
Maximum length (in bytes) of the pattern in a LIKE or GLOB operator.
Maximum length of a varint encoded integer.
Maximum length of output string in bytes
Maximum length of zSql in bytes.
Maximum length value to check against when making sure that the integer that holds the compiled pattern length does not overflow.
Maximum local payload in a LEAFDATA table
Maximum local payload in non-LEAFDATA tables
Maximum nColumn is BMS-2, not BMS-1, so that we can compute BITMASK(nExpr) without overflowing
Maximum nOut value on the set of paths
Maximum number of PMAs that a single MergeEngine can merge
Maximum number of bytes of memory that may be locked into RAM.
Maximum number of cells for pNode
Maximum number of entries in hash table before  sub-dividing and re-hashing.
Maximum number of instructions in a bundle (2 for X, 3 for Y).
Maximum number of ints of offset to save on the stack for recursive calls.
Maximum number of iterations exceeded, failure to converge
Maximum number of pages in one database file.
Maximum number of prefix indexes on single FTS5 table.
Maximum number of prepared UPDATE statements held by this module
Maximum number of rounds.
Maximum number of samples to accumulate
Maximum number of segments to merge in a single pass.
Maximum number of simultaneous paths tracked
Maximum number of stack segments so far.
Maximum number of tokens a phrase may have to be considered for the incremental doclists strategy.
Maximum number of values to append
Maximum of 4 fragments per snippet
Maximum page size is 64KiB
Maximum pathname length (in bytes) for Win32.
Maximum pathname length (in bytes) for WinNT.
Maximum pathname length (in chars) for Win32.
Maximum pathname length (in chars) for WinNT.
Maximum relative level value in db
Maximum salt string length.
Maximum segments permitted in a single index
Maximum session lifetime in seconds.
Maximum size (in Mem3Blocks) of a "small" chunk.
Maximum size of files that the process may create.
Maximum size of regions mapped by sorter
Maximum size of the core file.
Maximum size of the process's data segment.
Maximum size of the process's virtual memory (address space) in bytes.
Maximum size of the socket buffer.
Maximum size of the stack, in bytes.
Maximum string length
Maximum supplementary groups are platform dependent.
Maximum supported path-length.
Maximum supported symbolic links
Maximum unsorted cost of a set of path
Maximum value for szMmap
Maximum value of yyidx
Maxoutside is calculated elsewhere so a DISTround error may have occured.
May be NULL in which case the initial buffer is malloced.
May be called recursively
May be changed in the future.
May be changed on output by having lowest order bit set to zero on Cray X-MP, Cray Y-MP, Cray-2, or Cray C-90, as described above.
May be different than the difference between start and end indicates because we skip over absolute-positioned items.
May be used as a hint for encoding a value either implicitly or explicitly by setting it either to +:IMPLICIT+ or to +:EXPLICIT+.
May be used by the server, e.g. to prevent replay.
May be used to disable renegotiation entirely.
May change dynamically
May destroy all locals and registers except TMP2.
May look weird to null it here, but it is to catch the right case in the first_try later on
May need to remove leading 1s and transpose dimensions.
May need to swap axes so that second operand is iterated over correctly
May not be called on an object id passed as a parameter to a finalizer.
May not be necessary for NPY_RELAXED_STRIDES_CHECKING (see comment)
May or may not be root.
May raise an EngineError if the engine is unavailable
May you find forgiveness for yourself and forgive others.
May you share freely, never taking more than you give.
Maybe L*a*b* and Delta-E will give better results (and a better granularity).
Maybe also accept a local address
Maybe another cursor on the same btree
Maybe any signal is ok, but we chose SIGVTALRM.
Maybe it's better to compile the file instead of just searching,
Maybe someone should try and see if anyone notices.
Maybe that wouldn't add very much to the time taken, but character matching *is* what this is all about...
Maybe the row it was pointed to was deleted out from under it.
Maybe we can make it automatic by checking what's the value of max_allowed_packet_size on the server and resending the data.
Maybe we waste some space because of short jumps.
Mean anomaly of the Sun
Mean longitude of perihelion
Means to add one more preceding zero
Means we found it in the table Columns are 0 indexed
Meanwhile, the second reader using K1 will see additional values that were inserted later, which is exactly what reader two wants.
Measure the number of characters needed to output the given identifier.
Measure the text under the current constraints.
Mem address holding flag indicating that at least one row of the input to the aggregator has been processed
Mem address which causes query abort if positive
Mem is an opaque structure visible only within the VDBE.
Mem.eSubtype is valid
Mem.i contains count of 0s appended to blob
Mem.xDel is might not be initialized if MEM_Dyn is clear.
Mem.z points to a static string
Mem.z points to an agg function context
Mem.z points to an ephemeral string
MemPage is the extension added by the btree.c module containing information such as the database page number and how that database page is used.
MemPage.isInit is marked  "MUST BE FIRST" for this purpose.
MemTranslate() may return SQLITE_OK or SQLITE_NOMEM.
Memory Mapping interface for streams
Memory allocated by this function should be manually freed afterwards.
Memory allocation counter
Memory allocation function
Memory allocation functions used throughout sqlite.
Memory available for allocation
Memory available for allocation.
Memory available to be allocated
Memory avaliable for allocation
Memory barriers are used to prevent the compiler or the hardware from reordering the reads and writes.
Memory cell (nMem-1) stores the blob of memory associated with cursor 1, etc.
Memory cell containing record
Memory cell hold array of subprogs
Memory cell holding key of row to be deleted
Memory cell pMem contains the context of an aggregate function.
Memory cell to set to string value
Memory cell to write value into
Memory cell used for change counting
Memory cell used for the row counter
Memory cell used to implement LEFT OUTER JOIN
Memory cell used to store aggregate context
Memory cells (nMem+1-nCursor)..nMem, inclusive, will never be used by the vdbe program.
Memory cells for cursors are allocated at the top of the address space.
Memory cells provide growable allocations.
Memory corruption, a segmentation fault, or other severe error might result if sqlite3_free() is called with a non-NULL pointer that was not obtained from sqlite3_malloc() or sqlite3_realloc().
Memory extents don't overlap
Memory for registers, parameters, cursor, etc, is allocated in one or two passes.
Memory for registers, parameters, cursor, etc, is allocated in two passes.
Memory for this node and for the pToken argument is a single allocation obtained from sqlite3DbMalloc().
Memory in use by any SQLite pager allocated by the current thread may be sqlite3_free()ed.
Memory is allocated in chunks so most INSERTs do no allocation.
Memory is not available in the SQLITE_CONFIG_PAGECACHE pool.
Memory is retrived from OS by chunks of fixed size 2MB.
Memory location that acts as accumulator
Memory management strategy for zName
Memory map or remap the file opened by file-descriptor pFd (if the file is already mapped, the existing mapping is replaced by the new).
Memory mapped page to return
Memory outside of that mmap does not need to be reserved, so we don't call memfd_reserve on things like the temporary mmap used by hh_collect.
Memory register holding the rowid counter
Memory register used by AUTOINC
Memory remaining after qh_memfreeshort.
Memory space from which to build Expr object
Memory streams use a dynamic memory buffer to emulate a stream.
Memory to hold the UTF-8 string is obtained from sqlite3_malloc and must be freed by the calling function.
Memory to hold the text of the statement is obtained from sqliteMalloc() and must be freed by the calling function.
Memory to memory move.
Memory usable by this allocator
Memory usage statistics
Memory used to cache database pages to improve performance is an example of non-essential memory.
Merge all level iLevel segments in the database into a single  iLevel+1 segment.
Merge all the metadatas, starting with the first one
Merge current hashtable with object's default properties
Merge engine containing PmaReaders to compare
Merge engine thread reads data from
Merge engine to return
Merge equal constants
Merge lower order eigensystems (of size MSD2 and MATSIZ - MSD2) into an eigensystem of size MATSIZ.
Merge of a non-existing value
Merge the doclist aDoclist/nDoclist into the TermSelect object passed as the first argument.
Merge the entire database so that there is one segment for each  iIndex/iLangid combination.
Merge the forest into a single sorted list on first call
Merge the two position lists.
Merge the two sorted lists p1 and p2 into a single list.
Merge them all into a single doclist.
Merge two lists of RowSetEntry objects.
Merge two lists of pages connected by pDirty and in pgno order.
Merge two position-lists as required by the NEAR operator.
MergeEngine to initialize
Message from strerror() or equivalent
MessageFormatter functions
Messages encrypted with a public key can only be decrypted by recipients that are in possession of the associated private key.
Messages marked DEAD below are no longer used.
Method (2) offers a midpoint between (1) and (3).
Methods above are valid for version 1
Methods above are valid for version 2
Methods above are valid for version 3
Methods for an open file
Methods for the module
Methods on Object are available to all classes unless explicitly overridden.
Microsoft UCS Mapping Compatible
Microsoft Visual C does not define M_PI and others by default
Microsoft Visual C++ -- warn about 64-bit issues
Microsoft Visual C++ -- warning level 4
Microsoft headers don't like old POSIX names
Might add new entries.
Might be a hidden SCOND.
Might be a key record for WITHOUT ROWID tables.
Might be an empty repeat.
Might be defined in sys/types.h.
Might contain WHERE_GROUPBY or WHERE_DISTINCTBY
Might happen if EMPTY_RESULT_CALLBACKS are on
Might have been lookaside memory
Might learn more from the magic(4) entry
Might only need this if isatty(0) is true
Mimic ruby_xmalloc, but need not rb_objspace.
Min and max heap requests sizes
Min-heap used for analyzing cell coverage
Min-heap used for checking cell coverage
Min/Max sizes in the main axis are not honored when resolving flexible lengths.
MinGW don't have F_GETFD and FD_CLOEXEC.
Minimum PMA size, in bytes
Minimum allowable value for the VdbeSorter.nWorking variable
Minimum amount of incr-merge work to do
Minimum amount of payload held locally
Minimum and maximum number of arguments allowed
Minimum cell size is 4
Minimum chunk size used by streaming versions of functions.
Minimum docid to return
Minimum file format for writable database files
Minimum legal index key size
Minimum local payload in a LEAFDATA table
Minimum local payload in non-LEAFDATA tables
Minimum number of pages reserved
Minimum number of regions required to be mapped.
Minimum number of rounds.
Minimum number of segments to merge
Minimum required file size
Minor point: If this is the case, then the expression will be re-evaluated for each reference to it.
Minus (hyphen) at the end of a class is treated as a literal, so put back the pointer and jump to handle the character that preceded it.
Minus or SQL-style comment
Mirror i such as it is guaranteed to be positive
Miscellaneous initialization
Miscoded characters are removed.
Misses trailing 1s, these are handled later
Missing /tmp or similar directory
Mitchell filter, default radius 2.0
Mix sz bytes of entropy into p.
Mixed allows both index and key/val combinations.
Mixed key types: A string key is considered as larger
Mixing the instructions for the two checks.
Mode 1 uses more memory (since PCache instances are not able to rob unused pages from other PCaches) but it also operates without a mutex, and is therefore often faster.
Mode 2 requires a mutex in order to be threadsafe, but recycles pages more efficiently.
Mode can be PCRE_STUDY_JIT_COMPILE and others.
Mode parameter for allocateBtreePage()
Mode to be passed to OCISessionPoolCreate
Mode to pass to walCheckpoint()
Modified 9 Jan 2002 by Makoto Matsumoto.
Modified according to LibC definition
Modified on 14-October-1993 to inline the call to CLASSQ.
Modified on 14-October-1993 to inline the call to DLASSQ.
Modified on 14-October-1993 to inline the call to SLASSQ.
Modified on 14-October-1993 to inline the call to ZLASSQ.
Modified to use Winsock (NOVSOCK2.H), at least for now
Modifies '*days_' to be the day offset within the year, and returns the year.
Modify each term of the ORDER BY clause is a constant integer between 1 and N where N is the number of columns in the compound SELECT.
Modify the .nOut and maybe .rRun fields
Modify the CREATE TABLE statement.
Modify the page-size after the cache has been created.
Modify the sqlite_master table to use the new table name.
Modify this pointer so that it points to iTo.
Modify values DLAMDA(i) to make sure all DLAMDA(i)-DLAMDA(j) can be computed with high relative accuracy (barring over/underflow).
Modify values DSIGMA(i) to make sure all DSIGMA(i)-DSIGMA(j) can be computed with high relative accuracy (barring over/underflow).
Modifying the iterator here is not great
Modifying the returned group does not affect +key+.
Module destructor function
Module functions are copies of the original, and so may be changed independently.
Module holding Syslog facility constants
Module holding Syslog level constants
Module holding Syslog option constants
Module holding Syslog utility macros
Module holding all Syslog constants.
Module initialization
Module initialization routine for 2-pass color quantization.
Mongoose configuration parameters
Months may be specified by numbers from 1 to 12, or by the three-letter English month names.
More ARRAY/OBJECT entries at u.iAppend
More complicated way of expressing exposure time, so only use this value if we don't already have it from somewhere else.
More info about these values can be found in +vm_core.h+.
More informative error message
More precisely, the "same schema" means the same columns, types,  collation sequences.
More relevant info always comes earlier, so only use this field if we don't have appropriate aperture information yet.
More siblings are taken from one side, however,  if there are fewer than NN siblings on the other side.
More specifically, a statement transaction is opened iff the database connection is currently not in autocommit mode, or if there are other active statements.
More specifically, this function attempts to re-organize the database so  that the last page of the file currently in use is no longer in use.
More specificly, this function attempts to re-organize the database so  that the last page of the file currently in use is no longer in use.
More terms for ARRAY and OBJECT
More than two literals may be specified.
More-or-less horizontal.
More-or-less vertical.
Morris and Ken Thompson, Communications of the ACM, vol.
Most BSD systems and Linux define u_intXX_t types.
Most European countries used the Julian calendar prior to the Gregorian.
Most SQL functions are deterministic.
Most SQL statements are evaluated outside of any trigger.
Most SQLite builds come with a single default VFS that is appropriate for the host computer.
Most Schema objects are associated with a Btree.
Most database people will tell you that in a well-normalized database, you usually should not have more than a dozen or so columns in any table.
Most finder functions return a pointer to a fixed sqlite3_io_methods object.
Most finders simply return a pointer to a fixed sqlite3_io_methods object.
Most functions are just 'wrappers' for standard file functions.
Most ideas are taken from jemalloc and tcmalloc implementations.
Most jump operations do a goto to this spot in order to update the pOp pointer.
Most malloc failures are non-benign.
Most memory allocators round up memory allocations at least to the next multiple of 8.
Most modern algorithms partition a message to be digested into a sequence of fix-sized blocks that are processed consecutively.
Most new allocations occur off of this chunk.
Most of it is going to remain virtual.
Most of the "enhancements" have been backed out so that the functionality is now the same as standard printf().
Most of the built-in functions above are part of the global function set.
Most of the code in this file may be omitted by defining the SQLITE_OMIT_VACUUM macro.
Most of the effort here is involved in coalesing adjacent free blocks into a single big free block.
Most of the ideas used here can be traced back to Heckbert's seminal paper Heckbert, Paul.
Most of the supported digest algorithms can be considered broken in this sense, even the very popular MD5 and SHA1 algorithms.
Most of the time, this NotImplemented either got returned directly to the user (who can't do anything useful with it), or got passed back out of a special function like __mul__.
Most of the work of this routine is checking to see if there are indices that can be used to speed up the loop.
Most of this code adapted from hphp/util/embedded-data.cpp.
Most operations expect sign extended arguments.
Most options must be set at compile time for the JIT code to be usable.
Most recent error code (SQLITE_*)
Most recent error message
Most recent seek operation on this cursor
Most senior NEAR ancestor (or pExpr)
Most significant nails bits of each word are filled by zero.
Most significant nails bits of each word are ignored.
Mostly this is a container for one or more WhereTerms.
Mostly this means putting  double-quotes around strings and returning the unquoted string "null" when given a NULL input.
Mostly used by vprintf_alloc for non-C99 compliant snprintfs, this is like vsprintf_alloc except it takes a "suggested" size
Move a page here to make room for the root-page
Move a statvfs cursor to the next entry in the file.
Move an existing blob handle to point to a different row of the same database table.
Move cursor far right and report cursor position
Move data out of a btree key or data field and into a Mem structure.
Move existing slots that come after the newly inserted slots out of the way
Move level -1 to level iAbsLevel
Move on to the next alternative
Move on to the options
Move pPage to the front of the list
Move page iDbPage from its current location to page number iFreePage
Move q's to the front.
Move remaining bytes into internal buffer.
Move the *-oal file to *-wal.
Move the STR_PTR to the private_data_ptr.
Move the arguments to S registers.
Move the content of pSrc into pDest
Move the current contents to sContext.s so in case the user-function  can use the already allocated buffer instead of allocating a  new one.
Move the current position of the file handle passed as the first  argument to offset iOffset within the file.
Move the current position of the file handle passed as the first argument to offset iOffset within the file.
Move the cursor down to a new child page.
Move the cursor down to the left-most leaf entry beneath the entry to which it is currently pointing.
Move the cursor down to the right-most leaf entry beneath the page to which it is currently pointing.
Move the cursor so that it points to an entry near the key  specified by pIdxKey or intKey.
Move the cursor to point to the root page of its b-tree structure.
Move the cursor to the first entry in the table.
Move the cursor to the last entry in the table.
Move the cursor up to the parent page.
Move the decimal point on n1 by n2's scale.
Move the deflated rows of BX to B also.
Move the denominator of the fraction.
Move the entry to the top of the linked list
Move the iterator passed as the first argument to the next term in the segment.
Move the iterator passed as the only argument to the previous entry.
Move the iterator to the next entry at or following iMatch.
Move the iterator to the next entry.
Move the newly created element to the head of the hashtable
Move the null char too
Move the open database page pDbPage to location iFreePage in the  database.
Move the page currently at pgnoRoot to pgnoMove.
Move the page pPg to location pgno in the file.
Move the page to the head of the dirty list.
Move the pager to the error  state to indicate that the contents of the cache may not be trusted.
Move the pointer to ctx.s so in case the user-function can use the already allocated buffer instead of allocating a new one.
Move the raw pointers.
Move the remaining bytes in the raw buffer to the beginning.
Move the rest of the updating row to Z.
Move the seg-iter so that it points to the first rowid on page iLeafPgno.
Move the subject pointer back.
Move the unread characters to the beginning of the buffer.
Move the write position of the WAL back to iFrame.
Move to end of path and count trailing X's.
Move to next element already now -- this mirrors the approach used by foreach and ensures proper behavior with regard to modifications.
Move to next element closer to the head of the queue.
Move to the next document   Return SQLITE_OK if successful, or an SQLite error code otherwise.
Move to the next entry that matches the configured constraints.
Move to the next matching rowid that occurs at or after iMatch.
Move to the next matching rowid.
Move to the next matching term/rowid.
MoveFileEx has to be used
MoveFileEx returns 0 on failure, other way 'round for this function
Moved after symbol table cleaners, because  some of the cleaners can call destructors, which would use EG(symtable_cache_ptr) and thus leave leaks
Moves references from src to dst
Moves the data associated to key1 to key2.
Moving an existing blob handle to a new row can be faster than closing the existing handle and opening a new one.
Multi-byte op code - Auxiliary table
Multi-segment-reader handle
Multi-threaded programs that use this may experience problems.
MultiByteToWideChar() doesn't work with code page 51932
Multiline mode: assert before any newline, or before end of subject unless noteol is set.
Multiline mode: start of subject unless notbol, or after any newline.
Multiple  threads may safely make multiple concurrent calls to sqlite3_backup_step().
Multiple by log(M) where M is the number of output rows.
Multiple character line break or forced cut
Multiple copies of a single function are created when create_function() is called with SQLITE_ANY as the encoding.
Multiple dictionaries may be provided.
Multiple instructions are required.
Multiple merges might occur in an attempt to  write the quota of nMerge leaf blocks.
Multiple polling thread (i.e. concurrent deadlock check) introduces new race conditions.
Multiple synonyms may be specified for a single token by making multiple calls to xToken(FTS5_TOKEN_COLOCATED) in sequence.
Multiple threads can run this routine at the same time.
Multiple variant values as variant0, variant1 ,variant2
Multiple-shift QR step
Multiplication by a scalar -- Level 1 BLAS if ap1shape is a matrix and we are not contiguous, then we can't just blast through the entire array using a single striding factor
Multiply B by right bidiagonalizing vectors of A.
Multiply B by right bidiagonalizing vectors of L.
Multiply B by right bidiagonalizing vectors of R.
Multiply B by transpose of left bidiagonalizing vectors of L.
Multiply B by transpose of left bidiagonalizing vectors of R.
Multiply B by transpose of left bidiagonalizing vectors.
Multiply B by transpose(Q).
Multiply Blocks at CURR and CURR+1 Determine size of these matrices.
Multiply Q in A by left singular vectors of R in WORK(IR), storing result in U (CWorkspace: need N*N) (RWorkspace: 0)
Multiply Q in A by left singular vectors of R in WORK(IR), storing result in U (Workspace: need N*N)
Multiply Q in A by left singular vectors of R in WORK(IU), storing result in WORK(IR) and copying to A (CWorkspace: need 2*N*N, prefer N*N+M*N) (RWorkspace: 0)
Multiply Q in A by left singular vectors of R in WORK(IU), storing result in WORK(IR) and copying to A (Workspace: need 2*N*N, prefer N*N+M*N)
Multiply Q in A by left singular vectors of bidiagonal matrix in WORK(IU), storing result in WORK(IR) and copying to A (Workspace: need 2*N*N, prefer N*N+M*N)
Multiply Q in A by real matrix RWORK(IRU), storing the result in WORK(IU), copying to A (CWorkspace: need M*M, prefer M*N) (Rworkspace: need 3*M*M, prefer M*M+2*M*N)
Multiply Q in A by real matrix RWORK(IRU), storing the result in WORK(IU), copying to A (CWorkspace: need N*N, prefer M*N) (Rworkspace: need 3*N*N, prefer N*N+2*M*N)
Multiply Q in A by right singular vectors of bidiagonal matrix in WORK(IVT), storing result in WORK(IL) and copying to A (Workspace: need 2*M*M, prefer M*M+M*N)
Multiply Q in U by left singular vectors of R in WORK(IU), storing result in A (CWorkspace: need N*N) (RWorkspace: 0)
Multiply Q in U by left singular vectors of R in WORK(IU), storing result in A (Workspace: need N*N)
Multiply Q in U by real matrix RWORK(IRU), storing the result in A, copying to U (CWorkspace: 0) (Rworkspace: need 3*N*N)
Multiply Q in U by real matrix RWORK(IRU), storing the result in A, copying to U (CWorkspace: need 0) (Rworkspace: need 3*M*M)
Multiply Q in U by real matrix RWORK(IRU), storing the result in A, copying to U (CWorkspace: need 0) (Rworkspace: need N*N+2*M*N)
Multiply Q in U by real matrix RWORK(IRVT) storing the result in WORK(IVT), copying to U (Cworkspace: need 0) (Rworkspace: need 2*M*M)
Multiply RWORK(IRVT) by P**H in A, storing the result in WORK(IVT), copying to A (CWorkspace: need M*M, prefer M*N) (Rworkspace: need 2*M*M, prefer 2*M*N)
Multiply a fixed by a fixed
Multiply all the offsets by the src item size
Multiply and subtract.
Multiply axis dimension by 8
Multiply by an additional factor of 3.0.
Multiply real matrix RWORK(IRVT) by P**H in VT, storing the result in A, copying to VT (Cworkspace: need 0) (Rworkspace: need 3*N*N)
Multiply real matrix RWORK(IRVT) by P**H in VT, storing the result in A, copying to VT (Cworkspace: need 0) (Rworkspace: need M*M+2*M*N)
Multiply real matrix RWORK(IRVT) by P**H in VT, storing the result in WORK(IU), copying to VT (Cworkspace: need 0) (Rworkspace: need 3*N*N)
Multiply right singular vectors of L in WORK(IL) by Q in A, storing result in VT (Workspace: need M*M)
Multiply right singular vectors of L in WORK(IL) by Q in A, storing result in WORK(IL) and copying to A (CWorkspace: need 2*M*M, prefer M*M+M*N)) (RWorkspace: 0)
Multiply right singular vectors of L in WORK(IVT) by Q in A, storing result in WORK(IL) and copying to A (Workspace: need 2*M*M, prefer M*M+M*N)
Multiply right singular vectors of L in WORK(IVT) by Q in VT, storing result in A (CWorkspace: need M*M) (RWorkspace: 0)
Multiply right singular vectors of L in WORK(IVT) by Q in VT, storing result in A (Workspace: need M*M)
Multiply transpose(Q) by B.
Multiply utility routines
Multiplying produces a well-mixed value in the high bits of the result.
Multithreading does not affect these static variables, since they store built-in CPU features.
MurmurHash described in http://murmurhash.googlepages.com/
Must allocate a new entry in the literal pool.
Must be a load instruction with immediate offset.
Must be a multiple of 8.
Must be a user-defined type --- check to see which scalar it inherits from.
Must be able to broadcast over first operand.
Must be after the matchingpath label.
Must be broadcastable.
Must be called after the hack server is done initializing.
Must be called before any other call to 'collator_object_...' functions.
Must be called before any other call to 'spoofchecker_object_...' functions.
Must be called by every worker before any operation is performed
Must be called inside a transaction.
Must be compatible with this index
Must be compatible with this index, if not NULL
Must be compiled with +HAVE_STRUCT_GROUP_GR_PASSWD+.
Must be divisible by 2.
Must be explicitly loaded
Must be free'd by caller.
Must be less than 65536
Must be of the form  INSERT INTO ...
Must be right after "base"
Must be same scheme (ftp/ftp or ftps/ftps), same host, and same port (or a 21/0 0/21 combination which is also "same") Also require paths to/from
Must be the first member of its descendants.
Must disable after (*ACCEPT)
Must follow tightly the previous instruction (to be able to convert it to bl instruction).
Must have at least one page for the WAL commit flag.
Must make sure nOverflow is reset to zero even if the balance() fails.
Must not be called while there are outstanding database connections or memory allocations or while any part of SQLite is otherwise in use in any thread.
Must not find value when custom filter returns false
Must not use thinfo.__pi_stacksize for size.
Must set PS module data(void **mod_data) to NULL.
Must set XMLREADER_LOADDTD or XMLREADER_VALIDATE parser option prior to the first call to read or this method will always return FALSE
Must set non-NULL session data to (zend_string **val) for SUCCESS.
Must set non-NULL valid module data (void **mod_data) with SUCCESS, NULL(default) for FAILUREs.
Must use gd_strtok_r becasuse strtok() isn't thread safe
Mutex configuration options are only available in a threadsafe compile.
Mutex controlling the lock
Mutex for accessing the following:
Mutex to access this object
Mutex to control access to the memory allocation subsystem.
Mutex to protect pMain
Mutex to serialize access
Mutex used by sqlite3_initialize()
Mutex used to control access to shared lock
Mutexes created using SQLITE_MUTEX_RECURSIVE can be entered multiple times by the same thread.
My attempt to incorporate alpha channel into the result worked poorly and degraded the quality of palette conversion even when the source contained no alpha channel data.
My gut feeling is that it will modify the size field to reflect that so lets be safe and set it to the BIND_OPTS2 size again
My intuition is that this might extend through 2x or 4x the pagesize.
My normal style of coding would have declared them within each of those blocks.
MySQL Native Password
MySQL gives us n + 1 result sets for CALL proc() and n result sets returned by the proc itself.
N       (input) INTEGER On entry, N specifies the number of columns of A.
N       (input) INTEGER The dimension of the symmetric tridiagonal matrix.
N       (input) INTEGER The length of the array D.
N       (input) INTEGER The number of columns and rows of the matrix B and the number of columns of the matrix C.
N       (input) INTEGER The number of columns in the matrix A.
N       (input) INTEGER The number of columns of A.
N       (input) INTEGER The number of columns of the input matrix A.
N       (input) INTEGER The number of columns of the matrix A.
N       (input) INTEGER The number of columns of the matrix C.
N       (input) INTEGER The number of columns of the matrix Q or P**H to be returned.
N       (input) INTEGER The number of columns of the matrix Q or P**T to be returned.
N       (input) INTEGER The number of columns of the matrix Q.
N       (input) INTEGER The number of rows and columns in the Q matrix.
N       (input) INTEGER The number of rows of the matrix V.
N       (input) INTEGER The order of the matrix A.
N       (input) INTEGER The order of the matrix B.
N       (input) INTEGER The order of the matrix H.
N       (input) INTEGER The order of the matrix T.
N       (input) INTEGER The order of the matrix.
N      (input) INTEGER The dimension of the  bidiagonal matrix.
N      (input) INTEGER The dimension of the symmetric tridiagonal matrix.
N      (input) INTEGER The row and column dimensions of the upper bidiagonal matrix.
N      (input) INTEGER The row dimension of the upper bidiagonal matrix.
N     (input) INTEGER On entry, N specifies the number of rows and columns in the matrix.
N Compression method not supported
N Containing zip archive was closed
N Entry has been changed
N Entry has been deleted
N File already exists
N Multi-disk zip archives not supported
N Zip archive inconsistent
N between YY_MIN_SHIFTREDUCE       Shift to an arbitrary state then and YY_MAX_SHIFTREDUCE           reduce by rule N-YY_MIN_SHIFTREDUCE.
N between fts5YY_MIN_SHIFTREDUCE       Shift to an arbitrary state then and fts5YY_MAX_SHIFTREDUCE           reduce by rule N-fts5YY_MIN_SHIFTREDUCE.
N bytes of memory are available at pSpace.
N bytes: Unqualified table name (encoded using UTF-8).
N indicates which compression process
N is usually small - often between 0 and 2.
N must be at least 0.
N must be at least zero.
N must be non-negative for StatusDown().
N1      (input) INTEGER The location of the last eigenvalue in the leading submatrix.
N1     (input) INTEGER The location of the last eigenvalue in the leading sub-matrix.
N1 is added to N2 and the result placed into RESULT.
N1 is used first, N2 second, and so on, and unused problem dimensions are passed a value of -1.
N2 is subtracted from N1 and the result placed in RESULT.
N2 times N1 is put int PROD with the scale of the result being MIN(N2 scale+N1 scale, MAX (SCALE, N2 scale, N1 scale)).
NAME: tst  SYNOPSIS: tst  DESCRIPTION: "tst" is a test driver for the function "strftime".
NATURAL joins also create extra WHERE clause terms.
NB      (input) INTEGER The number of columns to be reduced.
NB      (input) INTEGER The number of leading rows and columns of A to be reduced.
NB      (input) INTEGER The number of rows and columns to be reduced.
NB EXACT doesn't have repeat_type
NB is the total number of pages that participate, including the target page and NN neighbors on either side.
NB may be at most NBMAX, where NBMAX is used to define the local array T.
NB refers to the optimal block size for the immediately following subroutine, as returned by ILAENV.
NB refers to the optimal block size for the immediately following subroutine, as returned by ILAENV.)
NB this routine will return a single null entry for a blank line
NB:  If you define USE_PREAD or USE_PREAD64, then it might also be necessary to define _XOPEN_SOURCE to be 500.
NB:  The sqlite3OpcodeName() function is implemented by code created by the mkopcodeh.awk and mkopcodec.awk scripts which extract the information from the vdbe.c source text
NB: Although gd RGB values are ints, their max value is 255 (see the documentation for gdImageColorAllocate()) -- perfect for 8-bit JPEG encoding (which is the norm)
NB: Most other code will NOT use the PHP_STREAM_CAST_INTERNAL flag when casting.
NB: This assumes that argv has already been copied out of the way.
NB: always correctly aligned for uint32_t.
NB: always correctly aligned for uint64_t.
NB: codes C4 and CC are NOT SOF markers
NB: doesn't handle binary strings...
NB: don't want to include the data_source in the error message as it might contain a password
NB: for PHP4 compat only, it should be using 'Z' instead
NB: nData can only be less than nDim*2+3 if the rtree is mis-declared with "column" that are interpreted as table constraints.
NB: php_msgbuf is 1 char bigger than a long, so there is no need to allocate the extra byte.
NB: static objects initialized to zero
NB: to fit things in six character monocase externals, the stdio code uses the prefix `__s' for stdio objects, typically followed by a three-character attempt at a mnemonic.
NB: zFilename exists and remains valid until the file is closed according to requirement F11141.
NBITS is the total number of bits needed to store a floating-point number.
NCC     (input) INTEGER The number of columns of the matrix C.
NCC   (input) INTEGER On entry, NCC specifies the number of columns of the matrix C.
NCC must be at least 0.
NCVT    (input) INTEGER The number of columns of the matrix VT.
NCVT  (input) INTEGER On entry, NCVT specifies the number of columns of the matrix VT.
NCVT must be at least 0.
NC_IsCheck or NC_PartIdx
NC_IsCheck or NC_PartIdx or NC_IdxExpr
ND     (output) INTEGER On exit, the number of nodes on the tree.
NDEBUG and SQLITE_DEBUG are opposites.
NDIML  (output) INTEGER array, dimension ( N ) On exit, row dimensions of left children.
NDIMR  (output) INTEGER array, dimension ( N ) On exit, row dimensions of right children.
NDIV   (output) INTEGER Number of divisions.
NEAR is treated as AND.
NEC special characters
NEC-selected IBM extended characters (without symbols)
NEED_SYNC can be set independently of WRITEABLE.
NEIGHBOR_NOT_CHAR is returned if invalid character or the range has only one character.
NEVER(x) asserts x is false.
NEVER(x) is a constant 0.
NEW_DLL_ENVIRONMENT_VAR
NFAIL  (output) INTEGER Number of times shift was too big.
NKF supports following codesets and those codeset name are case insensitive.
NL     (input) INTEGER The row dimension of the upper block.
NN is the number of neighbors on either side of the page that participate in the balancing operation.
NN, End of codestream
NN, Start of codestream
NO ACTION is the default.
NO NEED, for valgrind
NO, End of packet header
NO, Packet length tile part header
NO, Packet packet headers tile part header
NO, Start of packeter default
NODE_LIT is always not true
NOIN  (input) INTEGER The value of N0 at start of EIGTEST.
NOMATCH and PRUNE advance by one character.
NORMAL    The journal is synced once before writes begin on the database.
NOT NULL, CHECK, and UNIQUE constraints are all checked.
NOT flag for header lines fetch
NOT* safe for binary strings
NOTE that the real ob_gzhandler is an alias to "zlib output compression".
NOTE(jsing, minux): we can't free oldtcb without causing double-free problem.
NOTE(lsm): due to a bug in MSIE, we do not compare the URI TODO(lsm): check for authentication timeout
NOTE(lsm): order is important here.
NOTE:  These values must match the corresponding PAGER_ values in pager.h.
NOTE:  source files should *not* #include this header file directly.
NOTE: - Save handlers _MUST_NOT_ change/refer PS() values.
NOTE: An additional digit is needed for the compatibility to the version 1.2.1 and the former.
NOTE: Default php_session_create_id() does not check collision.
NOTE: Each cache entry config_hash contains the combination from all user ini files found in the path starting from doc_root throught to dirname(PATH_TRANSLATED).
NOTE: Evaluation of the c argument should not have any side-effects
NOTE: Features for gzip files of Ruby/zlib are written from scratch and using undocumented feature of zlib, negative wbits.
NOTE: If an exception is raised in `func', this function DOES NOT protect (catch) the exception.
NOTE: If dtype is not NULL, steals the dtype reference.
NOTE: If for some reason someone wishes to use REDUCE_OK, be careful and fix the error message replacement at the end.
NOTE: If tmp_arr was not allocated yet, mit should handle the allocation.
NOTE: In short, this API is difficult to use safely.
NOTE: In the interests of speed, this routine does not check the inputs for errors.
NOTE: In this case, need to call PyErr_Occurred() after basepointer resetting (buffer allocation)
NOTE: Most of these are in sha2.h
NOTE: On some sub-platforms, the InterlockedCompareExchange "function" is really just a macro that uses a compiler intrinsic (e.g. x64).
NOTE: Releasing GVL and re-acquiring GVL may be expensive operations for a short running `func()'.
NOTE: Return type is signed so we can return -1 on error.
NOTE: Signed due to -1 on error.
NOTE: The FNV-1a initial basis is the same value as FNV-1 by definition.
NOTE: The WinRT sub-platform is always assumed to be based on the NT kernel.
NOTE: The naming of these userland functions was quite unlucky
NOTE: The outer iteration (and subspace if requested buffered) is created with DELAY_BUFALLOC.
NOTE: The underlying constant Z_ASCII was deprecated in favor of Z_TEXT in zlib 1.2.2.
NOTE: These should not be accessed directly from outside this library -- they are intended for private internal visibility/use only.
NOTE: These values must match the corresponding BTREE_ values in btree.h.
NOTE: This feature is an example usage of internal event tracing APIs.
NOTE: This function is copied from datetime.c in multiarray, because umath and multiarray are not linked together.
NOTE: This function should not be called by a thread which was not created as Ruby thread (created by Thread.new or so).
NOTE: This is easier to specify with the type_resolver in the ufunc object.
NOTE: This is generated code.
NOTE: This small limitation should practically not matter.
NOTE: Updating access timestamp at PS_READ_FUNC() may extend life of obsolete session data.
NOTE: We are dealing with a relative path name and the data directory has been set.
NOTE: While this is unlikely to be a performance problem, if it is it could be reverted to a simple positive/negative check as the previous system used.
NOTE: Windows CE is handled differently here due its lack of the Win32 API LockFile.
NOTE: Windows CE is handled differently here due its lack of the Win32 API LockFileEx.
NOTE: Windows CE is handled differently here due its lack of the Win32 API UnlockFile.
NOTE: You should not return Ruby object at (2) because such Object will not be marked.
NOTE: can't guarantee that output or input/output parameters are set until this fella returns SQL_NO_DATA, according to MSDN ODBC docs
NOTE: changed path to make it compile on linux
NOTE: data must be zero terminated
NOTE: for backward compatibility (esp.
NOTE: forward declare this rather than including crt_externs.h as not all SDKs provide it
NOTE: modifying 'collator_XX_args' do not forget to modify approptiate 'collator_XX_args' for the procedural API.
NOTE: must print before printstatistics()
NOTE: pad_char may be set to '0' because of the 0 flag.
NOTE: pointers to data and base should be NULL
NOTE: preprocess away the availability information to allow use of unsupported APIs on certain targets (i.e. tvOS)
NOTE: realpath resolution should have happened at compile time - no reason to do it here again
NOTE: the number of data units matched may differ, because in UTF-8 there are some characters whose upper and lower case versions code have different numbers of bytes.
NOTE: the performance of this routine is critically dependent on your compiler and machine architecture.
NOTE: the purposes are added as integer keys - the keys match up to the X509_PURPOSE_SSL_XXX defines in x509v3.h
NOTE: tidy does not support iterative/cumulative parsing, so chunk-sized output handler is not possible
NOTES Be careful to rewind any vector passed in to you if you expect to iterate through the entire list.
NOTES ON DATA STRUCTURE USED FOR N-WAY MERGES:  As keys are added to the sorter, they are written to disk in a series of sorted packed-memory-arrays (PMAs).
NOTES ON THE DESIGN OF THE PAGER ************************  This comment block describes invariants that hold when using a rollback journal.
NOTES ON TRANSACTIONS:   SQLite invokes the following virtual table methods as transactions are  opened and closed by the user:  xBegin():    Start of a new transaction.
NOTES SEE ALSO XMLRPC_VectorRewind () SOURCE
NOTES SEE ALSO xml_elem_free () xml_elem_free_non_recurse () SOURCE
NOTES SEE ALSO xml_elem_serialize_to_stream () xml_elem_parse_buf () SOURCE
NOTES This code incorporates ideas from expat-ensor from http://xml.ensor.org.
NOTES This code was written primarily for xmlrpc, but has found some other uses.
NOTES This is a utility function.
NOTES WARNING*** This function is not thread safe.
NOTES Welcome to XMLRPC.
NOTES all values are of type xmlrpc_type_empty until set.
NOTES use XMLRPC_GetValueType() to be sure if 0 is real value or not SEE ALSO XMLRPC_SetValueDateTime () XMLRPC_GetValueDateTime_ISO8601 () XMLRPC_CreateValueDateTime () SOURCE
NOTES use XMLRPC_GetValueType() to be sure if 0 is real value or not SEE ALSO XMLRPC_SetValueDouble () XMLRPC_CreateValueDouble () SOURCE
NOTES xmlrpc_none is returned if value is not a vector Deprecated for public use.
NOTICE: This needs changing later so it is more general than simply pairs.
NOTPLUSI, NOTMINPLUSI
NOTQUERY, NOTMINQUERY
NOTQUERYI, NOTMINQUERYI
NOTSTARI, NOTMINSTARI
NOTUPTOI, NOTMINUPTOI
NO_FLUSH is the default flush method and allows deflate to decide how much data to accumulate before producing output in order to maximize compression.
NO_RECURSE not defined
NO_SSL_DL Dynamically load SSL library.
NO_SSL_DL Initialize SSL crap
NOerrors returned (qh_pointid, QhullPoint::id) design: checks maxsize scans set for atelem
NPY_ANYORDER - Fortran if prototype is Fortran, C otherwise.
NPY_ARRAY_FORCECAST will cause a cast to occur regardless of whether or not it is safe.
NPY_ARRAY_UPDATEIFCOPY flag sets this flag in the returned array if a copy is made and the base argument points to the (possibly) misbehaved array.
NPY_FORTRANORDER - Fortran-contiguous result.
NPY_ITER_ALLOCATE can make sense here.
NPY_KEEPORDER - Keeps the axis ordering of prototype.
NPY_NOSCALAR is not scalar
NPY_NO_CASTING or NPY_EQUIV_CASTING was specified
NPY_RELAXED_STRIDES_CHECKING
NPY_RELAXED_STRIDES_CHECKING: If the strides logic is changed, the order specific stride setting is not necessary.
NPY_RELAXED_STRIDES_CHECKING: size check is unnecessary when set.
NQ is the order of Q and NW is the minimum dimension of WORK
NQ is the order of Q or P and NW is the minimum dimension of WORK
NR     (input) INTEGER The row dimension of the lower block.
NR is the order of G.
NRHS    (input) INTEGER The number of right hand sides, i.e., the number of columns of the matrices B and X.
NRHS    (input) INTEGER The number of right hand sides, i.e., the number of columns of the matrix B.
NRHS   (input) INTEGER The number of columns of B and BX.
NRHS   (input) INTEGER The number of columns of B.
NRHS must be at least 1.
NRU     (input) INTEGER The number of rows of the matrix U.
NRU   (input) INTEGER On entry, NRU specifies the number of rows of the matrix U.
NRU must be at least 0.
NT will let us know if we don't really have permission to do something.
NUL terminate, as every buffer is handled here.
NULL creates a new SrcList
NULL fields are 0 length, 0 is not more than 0 String of zero size, definitely can't be the next max_length.
NULL if queue IsEmpty.
NULL if there is no limit
NULL if there is none
NULL indicates an out-of-memory condition.
NULL is also returned if the system call is currently undefined.
NULL is automatically added
NULL is returned if the result column is an expression or constant or anything else which is not an unabiguous reference to a database column.
NULL is returned if the result column is an expression or constant or anything else which is not an unambiguous reference to a database column.
NULL is returned if there is an allocation error.
NULL is used for the default character tables.
NULL may be accepted only by nullable hints (this is already checked)
NULL means Object class.
NULL means an output the iterator should allocate
NULL operands must be automatically allocated outputs
NULL or constants 0 or 1
NULL or empty string args are not allowed.
NULL out the unbound function
NULL return value checks from php_session_create_id() is not required generally.
NULL set by OP_Null, not from data
NULL terminate the buffer once, when finished, for use with the rest of PHP
NULL value means deleted
NULL values result in NULL pointers.
NULL works for text and blob and whatever is in the payloadSize64 variable will work for everything else.
NULL(default) for FAILUREs.
NULL, name length, filename length, last accepting char position length
NULL-terminate modifications
NULL-terminate the list
NULL-terminate the subscripts string
NULL-terminate values
NULL-terminated version of pName
NULL: unestablished, "": BINARY
NULL_LENGTH (0xFB) comes from COM_FIELD_LIST when the default value is NULL.
NUM (with SIZE digits) is multiplied by DIGIT and the result is placed into RESULT.
NUM is written in base O_BASE using OUT_CHAR as the routine to do the actual output of the characters.
NUM2LONG() may call size.to_int, ary can be frozen, modified, etc
NUM2ULONG(v) uses v.to_int conceptually.
NUMPY_API  ArangeObj,  this doesn't change the references
NUMPY_API  Determines whether the data type 'thistype', with scalar kind 'scalar', can be coerced into 'neededtype'.
NUMPY_API  Get New ArrayFlagsObject
NUMPY_API  Get type-descriptor from an object forcing alignment if possible None goes to DEFAULT type.
NUMPY_API  Get type-descriptor from an object forcing alignment if possible None goes to NULL.
NUMPY_API  Given a ``FILE *`` pointer ``fp``, and a ``PyArray_Descr``, return an array corresponding to the data encoded in that file.
NUMPY_API  Given a pointer to a string ``data``, a string length ``slen``, and a ``PyArray_Descr``, return an array corresponding to the data encoded in that string.
NUMPY_API  Included at the very first so not auto-grabbed and thus not labeled.
NUMPY_API  Precondition: 'arr' is a copy of 'base' (though possibly with different strides, ordering, etc.).
NUMPY_API  Removes the axes flagged as True from the array, modifying it in place.
NUMPY_API  Return either an array or the appropriate Python object if the array is 0d and matches a Python type.
NUMPY_API  Search the sorted array op1 for the location of the items in op2.
NUMPY_API  This function does nothing if obj is writeable, and raises an exception (and returns -1) if obj is not writeable.
NUMPY_API  This function populates the first ndim elements of strideperm with sorted descending by their absolute values.
NUMPY_API  This function returns true if the two typecodes are equivalent (same basic kind and same itemsize).
NUMPY_API  Use advanced indexing to iterate an array.
NUMPY_API  return a new view of the array object with all of its unit-length dimensions squeezed out if needed, otherwise return the same array.
NUMPY_API  steals a reference to dtype (which cannot be NULL)
NUMPY_API A Neighborhood Iterator object.
NUMPY_API Adjusts previously broadcasted iterators so that the axis with the smallest sum of iterator strides is not iterated over.
NUMPY_API Allocate a new iterator for more than one array object, using standard NumPy broadcasting rules and the default buffer size.
NUMPY_API Allocate a new iterator for multiple array objects, and advanced options for controlling the broadcasting, shape, and buffer size.
NUMPY_API Allocate a new iterator for one array object.
NUMPY_API Allocates memory for array data.
NUMPY_API Allocates zeroed memory for array data.
NUMPY_API ArgPartition an array
NUMPY_API ArgSort an array
NUMPY_API Assumes contiguous
NUMPY_API Builds a set of strides which are the same as the strides of an output array created using the NPY_ITER_ALLOCATE flag, where NULL was passed for op_axes.
NUMPY_API Cast Scalar to c-type
NUMPY_API Cast to an already created array.
NUMPY_API Check the type coercion rules.
NUMPY_API Checks to see whether this is the first time the elements of the specified reduction operand which the iterator points at are being seen for the first time.
NUMPY_API Compare Lists
NUMPY_API Compute the size of an array (in number of items)
NUMPY_API Concatenate  Concatenate an arbitrary Python sequence into an array.
NUMPY_API Construct an empty array from dimensions and typenum
NUMPY_API Convert an object to FORTRAN / C / ANY / KEEP
NUMPY_API Convert an object to NPY_RAISE / NPY_CLIP / NPY_WRAP
NUMPY_API Convert an object to an array of n NPY_CLIPMODE values.
NUMPY_API Convert an object to true / false
NUMPY_API Convert any Python object, *obj*, to an NPY_CASTING enum.
NUMPY_API Convert object to endian
NUMPY_API Convert object to searchsorted side
NUMPY_API Convert object to select kind
NUMPY_API Convert object to sort kind
NUMPY_API Convert to a 1D C-array
NUMPY_API Convert to a 2D C-array
NUMPY_API Copy an Array into another array -- memory must not overlap Does not require src and dest to have "broadcastable" shapes (only the same number of elements).
NUMPY_API Copy an Array into another array.
NUMPY_API Copy an array.
NUMPY_API Copy and Transpose  Could deprecate this function, as there isn't a speed benefit over calling Transpose and then Copy.
NUMPY_API Counts the number of non-zero elements in the array.
NUMPY_API Create a datetime value from a filled datetime struct and resolution unit.
NUMPY_API Create a timdelta value from a filled timedelta struct and resolution unit.
NUMPY_API Creates a new array with the same shape as the provided one, with possible memory layout order and data type changes.
NUMPY_API Deallocate an iterator
NUMPY_API Decrement all internal references for object arrays.
NUMPY_API Diagonal  In NumPy versions prior to 1.7,  this function always returned a copy of the diagonal array.
NUMPY_API Does not check for NPY_ARRAY_ENSURECOPY and NPY_ARRAY_NOTSWAPPED in flags Steals a reference to newtype --- which can be NULL
NUMPY_API Empty  accepts NULL type steals referenct to type
NUMPY_API Fill the datetime struct from the value and resolution unit.
NUMPY_API Fill the timedelta struct from the timedelta value and resolution unit.
NUMPY_API For backward compatibility  Cast an array using typecode structure.
NUMPY_API For debugging
NUMPY_API For object arrays, increment all internal references.
NUMPY_API Free memory for array data.
NUMPY_API Free pointers created if As2D is called
NUMPY_API Generic new array creation routine.
NUMPY_API Get 0-dim array from scalar  0-dim array from array-scalar object always contains a copy of the data unless outcode is NULL, it is of void type and the referrer does not own it either.
NUMPY_API Get Iterator broadcast to a particular shape
NUMPY_API Get Iterator that iterates over all but one axis (don't use this with PyArray_ITER_GOTO1D).
NUMPY_API Get Iterator.
NUMPY_API Get MultiIterator,
NUMPY_API Get Priority from object
NUMPY_API Get a cast function to cast from the input descriptor to the output type_number (must be a registered data-type).
NUMPY_API Get a pointer to the index, if it is being tracked
NUMPY_API Get a pointer to the size of the inner loop  (when HasExternalLoop is true)  This function may be safely called without holding the Python GIL.
NUMPY_API Get a subset of bytes from each element of the array steals reference to typed, must not be NULL
NUMPY_API Get a typeobject from a type-number -- can return NULL.
NUMPY_API Get an Array Scalar From a Python Object  Returns NULL if unsuccessful but error is only set if another error occurred.
NUMPY_API Get an array of strides which are fixed.
NUMPY_API Get axis from an object (possibly None) -- a converter function,  See also PyArray_ConvertMultiAxis, which also handles a tuple of axes.
NUMPY_API Get dictionary showing number functions that all arrays will use
NUMPY_API Get intp chunk from sequence  This function takes a Python sequence object and allocates and fills in an intp array with the converted values.
NUMPY_API Get pointer to one of correct type for array
NUMPY_API Get pointer to zero of correct type for array.
NUMPY_API Get scalar-equivalent to a region of memory described by a descriptor.
NUMPY_API Get the array of data pointers (1 per object being iterated)  This function may be safely called without holding the Python GIL.
NUMPY_API Get the array of data pointers (1 per object being iterated), directly into the arrays (never pointing to a buffer), for starting unbuffered iteration.
NUMPY_API Get the array of data type pointers (1 per object being iterated)
NUMPY_API Get the array of objects being iterated
NUMPY_API Get the array of strides for the inner loop (when HasExternalLoop is true)  This function may be safely called without holding the Python GIL.
NUMPY_API Get typenum from an object -- None goes to NULL
NUMPY_API Gets an array of read flags (1 per object being iterated)
NUMPY_API Gets an array of write flags (1 per object being iterated)
NUMPY_API Gets the array of strides for the specified axis.
NUMPY_API Gets the broadcast shape if a multi-index is being tracked by the iterator, otherwise gets the shape of the iteration as Fortran-order (fastest-changing index first).
NUMPY_API Gets the current iteration index
NUMPY_API Gets the number of dimensions being iterated
NUMPY_API Gets the number of elements being iterated
NUMPY_API Gets the number of operands being iterated
NUMPY_API Gets the range of iteration indices being iterated
NUMPY_API Gets the size of the buffer, or 0 if buffering is not enabled
NUMPY_API If arr is a scalar (has 0 dimensions) with a built-in number data type, finds the smallest type size/kind which can still represent its data.
NUMPY_API If the iterator is tracking an index, sets the iterator to the specified index.  Returns NPY_SUCCEED on success, NPY_FAIL on failure.
NUMPY_API Initialize arrfuncs to NULL
NUMPY_API LexSort an array providing indices that will sort a collection of arrays lexicographically.
NUMPY_API Like FromDimsAndData but uses the Descr structure instead of typecode as input.
NUMPY_API Makes a copy of the iterator
NUMPY_API Move the memory of one array into another, allowing for overlapping data.
NUMPY_API Multiply a List
NUMPY_API Multiply a List of Non-negative numbers with over-flow detection.
NUMPY_API Multiply a List of ints
NUMPY_API New shape for an array
NUMPY_API Nonzero  TODO: In NumPy 2.0, should make the iteration order a parameter.
NUMPY_API Numeric.correlate(a1,a2,mode)
NUMPY_API Numeric.innerproduct(a,v)
NUMPY_API Numeric.matrixproduct(a,v) just like inner product but does the swapaxes stuff on the fly
NUMPY_API Numeric.matrixproduct2(a,v,out) just like inner product but does the swapaxes stuff on the fly
NUMPY_API Partition an array in-place
NUMPY_API Prints the raw data of the ndarray in a form useful for debugging low-level C issues.
NUMPY_API Produce a pointer into array
NUMPY_API Produces the result type of a bunch of inputs, using the UFunc type promotion rules.
NUMPY_API Produces the smallest size and lowest kind type to which both input types can be cast.
NUMPY_API Put values into an array
NUMPY_API Put values into an array according to a mask.
NUMPY_API PyArray_CheckAxis  check that axis is valid convert 0-d arrays to 1-d arrays
NUMPY_API PyArray_IntTupleFromIntp
NUMPY_API PyArray_IntpFromSequence Returns the number of integers converted or -1 if an error occurred.
NUMPY_API Ravel Returns a contiguous array
NUMPY_API Reallocate/resize memory for array data.
NUMPY_API Register Casting Function Replaces any function currently stored.
NUMPY_API Register Data type Does not change the reference count of descr
NUMPY_API Register a type number indicating that a descriptor can be cast to it safely
NUMPY_API Removes an axis from iteration.
NUMPY_API Removes multi-index support from an iterator.
NUMPY_API Removes the inner loop handling (so HasExternalLoop returns true)
NUMPY_API Repeat the array.
NUMPY_API Resets the iterator to a new iterator index range  If errmsg is non-NULL, it should point to a variable which will receive the error message, and no Python exception will be set.
NUMPY_API Resets the iterator to its initial state  If errmsg is non-NULL, it should point to a variable which will receive the error message, and no Python exception will be set.
NUMPY_API Resets the iterator to its initial state, with new base data pointers.
NUMPY_API Resize (reallocate data).
NUMPY_API Retrieves the array parameters for viewing/converting an arbitrary PyObject* to a NumPy array.
NUMPY_API Return Transpose.
NUMPY_API Return descr object from array scalar.
NUMPY_API Return the tuple of ordered field names from a dictionary.
NUMPY_API Return the typecode of the array a Python object would be converted to  Returns the type number the result should have, or NPY_NOTYPE on error.
NUMPY_API Returns 1 if the array object may be cast to the given data type using the casting rule, 0 otherwise.
NUMPY_API Returns a view to the i-th object with the iterator's internal axes
NUMPY_API Returns the built-in (at compilation time) C API version
NUMPY_API Returns true if data of type 'from' may be cast to data of type 'to' according to the rule 'casting'.
NUMPY_API ScalarKind  Returns the scalar kind of a type number, with an optional tweak based on the scalar value itself.
NUMPY_API See if array scalars can be cast.
NUMPY_API Set a subset of bytes from each element of the array steals reference to dtype, must not be NULL
NUMPY_API Set internal structure with number functions that all arrays will use
NUMPY_API Set the array print function to be a Python function.
NUMPY_API Set variance to 1 to by-pass square-root calculation and return variance Std
NUMPY_API Sets the 'base' attribute of the array.
NUMPY_API Sets the allocation event hook for numpy array data.
NUMPY_API Sets the iterator position to the specified iterindex, which matches the iteration order of the iterator.
NUMPY_API Sets the iterator to the specified multi-index, which must have the correct number of entries for 'ndim'.
NUMPY_API Simulate a C-array steals a reference to typedescr -- can be NULL
NUMPY_API Sort an array in-place
NUMPY_API This function is scheduled to be removed  TO BE REMOVED - NOT USED INTERNALLY.
NUMPY_API Typestr converter
NUMPY_API Update Several Flags at once.
NUMPY_API View steals a reference to type -- accepts NULL
NUMPY_API Whether the buffer allocation is being delayed
NUMPY_API Whether the inner loop can grow if buffering is unneeded
NUMPY_API Whether the iteration could be done with no buffering.
NUMPY_API Whether the iteration loop, and in particular the iternext() function, needs API access.
NUMPY_API Whether the iterator handles the inner loop
NUMPY_API Whether the iterator is buffered
NUMPY_API Whether the iterator is tracking a multi-index
NUMPY_API Whether the iterator is tracking an index
NUMPY_API Zeros  steals a reference to type.
NUMPY_API base cannot be NULL
NUMPY_API leaves reference count alone --- cannot be NULL  PyArray_CanCastTypeTo is equivalent to this, but adds a 'casting' parameter.
NUMPY_API new reference -- accepts NULL for mintype
NUMPY_API return true an object is exactly a numpy scalar
NUMPY_API steals a reference to descr -- accepts NULL
NUMPY_API steals reference to newtype --- acc.
NUM_BUF_SIZE is the size of the buffer used for arithmetic conversions which can be at most max length of double
NaCl modules do not need to handle the document load function.
NaN - propagate the flag in the significand...
NaT is signaled in the year
Name assigned to this module
Name context for container
Name context for parent SELECT statement
Name context for processing aggregate information
Name context for resolving pE
Name context for sub-vdbe
Name context of this SELECT
Name context to resolve expressions in
Name means:  "Distinct Fifo".
Name of ICU function that failed
Name of OS function that failed
Name of VFS module to use
Name of a table or index
Name of attached database
Name of attached database (e.g. "main")
Name of attached database (or NULL)
Name of automatically created rbu vfs
Name of collating sequence
Name of column in child table
Name of column in parent table
Name of column in the right table
Name of column in zTo.
Name of content table
Name of current table
Name of database (e.g. "main")
Name of database (e.g. "main", "temp")
Name of database containing pTab
Name of database containing r-tree table
Name of database file
Name of database file for pPager
Name of database file to open
Name of database holding pTab
Name of database holding this table
Name of database session is attached to
Name of database within pDestDb
Name of database within pSrcDb
Name of db (e.g. "main")
Name of db (i.e. "main", "temp" etc.)
Name of file to be deleted
Name of file to check
Name of file to delete
Name of file to delete when closing
Name of index or table
Name of indexed column
Name of left-most parent key column
Name of master journal file if any
Name of new SQL function
Name of new table or NULL
Name of new table, or database name
Name of rank and rowid columns
Name of rank function
Name of rbu db table (or null)
Name of system call to override
Name of table containing column, or NULL
Name of table into which we are inserting
Name of table or index
Name of table or index being scanned
Name of table that the key points to (aka: Parent)
Name of target db index (or null)
Name of target db table
Name of that semaphore
Name of the VFS to use
Name of the collating sequence
Name of the collating sequence, UTF-8 encoded
Name of the column of the table
Name of the column we are looking for
Name of the common-table
Name of the conch file
Name of the connection operator, used for error messages.
Name of the constraint currently being parsed
Name of the container - used for error messages
Name of the database containing pTable
Name of the database containing table, or NULL
Name of the database file
Name of the database file to open
Name of the database holding this table
Name of the database to use internally
Name of the database.
Name of the default collating sequence
Name of the file (UTF-8)
Name of the file being opened
Name of the file containing the BTree database
Name of the file to be locked or unlocked
Name of the file used for SHM
Name of the function.
Name of the identifier
Name of the journal file
Name of the master database table.
Name of the mmapped file
Name of the module for the virtual table
Name of the new SQL function
Name of the null device
Name of the open file
Name of the other table
Name of the proxy lock file
Name of the result column
Name of the shared library containing extension
Name of the system call
Name of the table into which we are inserting
Name of the table into which we insert
Name of the table or index to be reindexed
Name of the table or view
Name of the table to add to the FROM clause
Name of the table to be locked
Name of the table to be updated
Name of the table we are looking for
Name of the term in the USING clause
Name of the view, trigger, or index
Name of the virtual table
Name of this database
Name of this database.
Name of this virtual file system
Name passed to create_module()
Name we are searching for
Name:  Ack Input: Output: Description: Get the response from the server.
Name:  MailConnect Input:   None Output:  None Description: Connect to the mail host and receive the welcome message.
Name:  Post Input: Output: Description: Author/Date:  jcar 20/9/96 History:
Name:  PostHeader Input:       1) return path 2) Subject 3) destination address 4) headers Output:      Error code or Success Description: Author/Date:  jcar 20/9/96 History:
Name:  SendText Input:       1) RPath:   return path of the message Is used to fill the "Return-Path" and the "X-Sender" fields of the message.
Name:  char *GetSMErrorText Input:   Error index returned by the menber functions Output:  pointer to a string containing the error description Description: Author/Date:  jcar 20/9/96 History:
Name:  unsigned long GetAddr (LPSTR szHost) Input: Output: Description: Given a string, it will return an IP address.
Name: Big5  (preferred MIME name) MIBenum: 2026 Source: Chinese for Taiwan Multi-byte set.
Name: Big5-HKSCS MIBenum: 2101 Source: http://www.iana.org/assignments/charset-reg/Big5-HKSCS Source: http://www.ogcio.gov.hk/ccli/eng/hkscs/mapping_table_2008.html Alias: None
Name: CP949 Link: http://www.microsoft.com/globaldev/reference/dbcs/949.mspx Link: http://en.wikipedia.org/wiki/EUC-KR#EUC-KR
Name: CP950 Source: http://msdn.microsoft.com/en-us/goglobal/cc305155.aspx
Name: EUC-JIS-2004 Link: http://ja.wikipedia.org/wiki/EUC-JIS-2004
Name: EUC-JP MIBenum: 18 Link: http://www.iana.org/assignments/character-sets Link: http://home.m05.itscom.net/numa/cde/sjis-euc/sjis-euc.html Link: http://home.m05.itscom.net/numa/uocjleE.pdf
Name: Emacs-Mule Link: http://www.m17n.org/mule/pricai96/mule.en.html
Name: GB18030 MIBenum: 114 Link: http://www.iana.org/assignments/charset-reg/GB18030
Name: GBK MIBenum: 113 Link: http://www.iana.org/assignments/character-sets Link: http://www.iana.org/assignments/charset-reg/GBK Link: http://www.microsoft.com/globaldev/reference/dbcs/936.mspx
Name: MacJapanese Link: http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/JAPANESE.TXT Link: http://ja.wikipedia.org/wiki/MacJapanese
Name: PCK Link: http://download.oracle.com/docs/cd/E19253-01/819-0606/x-2chn0/index.html Link: http://download.oracle.com/docs/cd/E19253-01/819-0606/appb-pckwarn-1/index.html  Solaris's SJIS variant.
Name: Shift_JIS MIBenum: 17 Link: http://www.iana.org/assignments/character-sets Link: http://ja.wikipedia.org/wiki/Shift_JIS
Name: TIS-620 MIBenum: 2259 Link: http://en.wikipedia.org/wiki/Thai_Industrial_Standard_620-2533
Name: Windows-874 Link: http://www.microsoft.com/globaldev/reference/sbcs/874.mspx
Name: windows-1250 MIBenum: 2251 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1250.mspx Link: http://en.wikipedia.org/wiki/Windows-1250
Name: windows-1251 MIBenum: 2251 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1251.mspx Link: http://en.wikipedia.org/wiki/Windows-1251
Name: windows-1252 MIBenum: 2251 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1252.mspx Link: http://en.wikipedia.org/wiki/Windows-1252
Name: windows-1253 MIBenum: 2253 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1253.mspx Link: http://en.wikipedia.org/wiki/Windows-1253
Name: windows-1254 MIBenum: 2254 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1254.mspx Link: http://en.wikipedia.org/wiki/Windows-1254
Name: windows-1255 MIBenum: 2255 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1255.mspx Link: http://en.wikipedia.org/wiki/Windows-1255
Name: windows-1256 MIBenum: 2256 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1256.mspx Link: http://en.wikipedia.org/wiki/Windows-1256
Name: windows-1257 MIBenum: 2257 Link: http://www.iana.org/assignments/character-sets Link: http://www.microsoft.com/globaldev/reference/sbcs/1257.mspx Link: http://en.wikipedia.org/wiki/Windows-1257
NameContexts can be nested.
Named POSIX semaphore
Named POSIX semaphores (VXWorks only), 7.
Named capturing brackets.
Named semaphore locking is only available on VxWorks.
Named semaphore locking uses the file path so it needs to be included in the semLockingContext
Namely:  FORDELETE cursors may treat all SEEK and DELETE operations as no-ops, and any READ operation against a FORDELETE cursor may return a null row: 0x01 0x00.
Names of result columns
Names of table columns
Names of the various JSON types:
Namespace logic is separate and only when uri passed in to insure no BC breakage
Namespace to resolve expressions in.
Narrowing integer initialization to doubles
Nav the tree evey time as this is LIVE
Nearly all instructions are unmovable in the following sequence.
Need a clean separation whether it's a remote or local prompt.
Need a ref count of two here because of ENGINE_free being called internally by OpenSSL when moving to the next ENGINE and by us when releasing the ENGINE reference
Need at least 5 characters to convert from boolean to 'True' or 'False'.
Need at least year/month/day attributes
Need braces because of following else
Need convertCompoundSelectToSubquery()
Need expansion, recurse.
Need new dimensions and strides arrays
Need some type of error here
Need special handling for control characters.
Need this to be version dependent on account of the slot check
Need to INCREF just the PyObject portion
Need to INCREF typecode because PyArray_NewFromDescr steals a reference below and we still need to access typecode afterwards.
Need to add element number to name
Need to call Mem.xDel() on Mem.z
Need to call sqlite3ExprDelete(db, pExpr)
Need to choose an output array that can hold a sum -- use priority to determine which subtype.
Need to create a new array as if the old one never existed.
Need to do a nested reset so all the iterators point at the right data
Need to encode backslash, nl and cr
Need to fill the first axisdata, even if the iterator is 0-d
Need to free the WhereTerm.u.pAndInfo obj
Need to free the WhereTerm.u.pOrInfo object
Need to invoke convertCompoundSelectToSubquery()
Need to keep track of things to free
Need to let pgm process this and the following args
Need to locate the insertion point.
Need to make a copy of path if we extracted the value from the conch file or the path was allocated on the stack
Need to make sure the shape is compatible 3.
Need to read this page properly.
Need to reorder the LHS fields according to aiMap
Need to set the axis remapping for the extra_op.
Need to sqlite3DbFree() Expr.zToken
Need to use the arrays in the iterator, not op, because a copy with a different-sized type may have been made.
Need to work with reporter to figure out what goes wrong
Needed because some systems do not allow to write to the original file contents with O_APPEND being set.
Needed for gmp_random()
Needed for restoring the STR_PTR before the next alternative.
Needed for schema access
Needed for the definition of va_list
Needed for various definitions...
Needed to make MS Access happy
Needed to save important temporary registers.
Needle doesn't occur, shortcircuit the actual replacement.
Needs investigation, though.
Needs to be a multiple of 3
Needs to know the start position anytime.
Negate the year if necessary
Negative assert is stronger than positive assert.
Negative assertion: all branches must fail to match for the assertion to succeed.
Negative boundary case
Negative dimension indicates "newaxis", which can be discarded for printing if it's a leading dimension.
Negative indices count backward from the end of the array (-1 is the last element).
Negative indices count backwards from the end of the array, where +-1+ is the last element.
Negative indices start counting from the end, with -1 being the last element.
Negative indices will count backward from the end of the array.
Negative length given, nothing to write
Negative offset counts from the end of the string.
Negative or floating point values for +max+ are allowed, but may give surprising results.
Negative phoneme length is meaningless
Negative shape entries are deduced from the operands
Negative values for the firstchar and reqchar flags
Negative values of +index+ count from the end of the array.
Negative values of +start+ count from the end of the array, where +-1+ is the last element.
Neither X nor Y have COLLATE operators, but X has a non-default collating sequence.
Neither are quick, thus the clients of this function are obligated to do what they are asked for.
Neither argument is immediate.
Neither capturing brackets nor recursions are found in the block.
Neither file is allowed to grow to more than mxSz bytes in  size.
Neither is a candidate to replace the other.
Neither of the PmaReaders are advanced.
Neither of these  functions are threadsafe.
Neither of these parameters may be NULL.
Neither of these two scenarios are possible during a savepoint rollback.
Neither operand is NULL.
Neither quote character is included in the buffer.
Neither side of the comparison is a column.
Neither sqlite3changeset_old or sqlite3changeset_new can fail if the argument iterator points to a suitable entry.
Neither table may have __hidden__ columns
Neither the RHS or LHS are deferred.
Neither the application code nor the VFS implementation should use the pNext pointer.
Neither the name of Intel Corporation nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither the name of the Lite Speed Technologies Inc nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither the name of the University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither the name of the University of Cambridge nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither the name of the author nor the names of other contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Neither the name of the project nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
Nelson Computer Science Department, 9062 Western Washington University Bellingham, WA 98226-9062
Nesting only happens one level deep.
Nesting should only be of limited depth
Net change in number of documents
Net deferred constraints this transaction.
Net deferred immediate constraints
Net2:/usr/src/sys/net/if_dl.h.
NetBSD 4 and FreeBSD 5 documented it.
NetBSD 6.0+ uses off_t instead of fpos_t in funopen
NetBSD returns required size for all interfaces.
Networking trampolines These are used to avoid socket startup/shutdown overhead in case the socket routines aren't used.
Never allow user input to specify arbitrary types to deserialize into.
Never automatically store sessions in the internal store.
Never back out opcodes iFixedOp-1 or earlier
Never called on page 1
Never called with prior errors
Never gets this far otherwise
Never happens because JNODE_RAW is only set by json_set(), json_insert() and json_replace() and those routines do not call jsonReturn()
Never has other case.
Never mind, carry on, see what happens
Never need to buffer this operand
Never occurs on an ORDER BY query
Never pass untrusted data (including user supplied input) to this method.
Never set both isSaveLeft and isExact for the same invocation.
Never strip to length 0.
Nevertheless, a dotlock is an appropriate locking mode for use if no other locking strategy is available.
Nevertheless, be sure  to test the case where a malloc error occurs while trying to set  a bit in a bit vector.
Nevertheless, it is formally deprecated in Bison 2.4.2's NEWS entry, where a plan to phase it out is discussed.
Nevertheless, some published applications that were originally written for version 3.6.23 or earlier do in fact depend on SQLITE_MISUSE  returns, and those were broken by the automatic-reset change.
Nevertheless, some regular expressions can cause it to recurse to a great depth.
Nevertheless, there is a built-in protection when sending a command packet, that checks if the line is clear - useful for debug purposes and to be switched off in release builds.
Nevertheless, we include a NEVER() test for the error state as a safeguard against future changes.
New BETA is at most 1, at least SAFMIN
New Pager.aSavepoint array
New Rule: never repair potential malicious user input
New SOAP SSL Method Constants
New Select.pEList for RHS
New VFSes can be registered and existing VFSes can be unregistered.
New aggregate function implementations should keep their own counts within their aggregate context.
New applications should not use deprecated interfaces - they are support for backwards compatibility only.
New applications should not use deprecated interfaces - they are supported for backwards compatibility only.
New applications should not use this constant.
New arrays are aligned and need no cast
New arrays are aligned need no cast, and in the case of scalars, always have stride 0 so never need buffering
New binary node to insert into expression tree
New cell becomes the i-th cell of the page
New chunk is required to extend the file.
New code should be placed in the correct division and should be clearly labeled.
New colset object to return
New column to add to colset object
New configuration options may be added in future releases of SQLite.
New data is spilled to a new interior node at the same height when the current node exceeds INTERIOR_MAX bytes (default 2048).
New data is spilled to a new leaf node when the current node exceeds LEAF_MAX bytes (default 2048).
New data which itself is larger than STANDALONE_MIN (default 1024) is placed in a standalone node (a leaf node with a single term and doclist).
New db size (or 0 for non-commit frames)
New dimensions get a zero stride
New documents (actually, document updates) are tokenized and written individually (using LeafWriter) to a level 0 segment, with incrementing idx.
New element added to the pH
New error codes may be added in future versions of SQLite.
New estimate of the number of rows
New fields may be appended in figure versions.
New fields may be appended in future versions.
New hashtable for the stack
New level-0 PMA merger
New memory is allocated from the first available free block.
New name of FTS5 table
New option added for Z to remain in-line with the Perl implementation
New path replaces the prior worst to keep count below mxChoice
New reference in returned value of _set_constant if array object
New row data is stored here
New rowid value (for a rowid UPDATE)
New run-time limit categories may be added in future releases.
New save handlers MUST use PS_MOD_UPDATE_TIMESTAMP macro
New segment within pStruct
New session ID, create data file
New slots are zeroed.
New table object (if required)
New threads can still be started in an enclosed ThreadGroup.
New tracing constants may be added in future releases.
New value for iStartBlock
New vdbe frame to execute in
New verbs may be added in future releases of SQLite.
New version of subfile tag
New versions of OpenLDAP do it this way
New virtual expression
New virtual table object
Newly allocated SegReader object
Newly allocated session object
Newly allocated winShmNode
Newly cloned object deliberately does not inherit error state from original object
Newly created threads belong to the same group as the thread from which they were created.
Next FKey with the same in pFrom.
Next WhereLoop object in the WhereClause
Next and previous elements in the table
Next and previous entry on the min-heap
Next are the tables used to determine what action to take based on the current state and lookahead token.
Next available cursor
Next available select ID for EXPLAIN output
Next available unixShm.id value
Next available winShm.id value
Next backup associated with source pager
Next buffer in the list of free buffers
Next byte to write in WAL file
Next character in the format string
Next character may be a '.' indicating fractional seconds
Next character must be a '-' or the end of the string
Next character must be a ':' or the end of the string
Next character must be a 'T', ' ', or end of string
Next chunk in the journal
Next chunk on list of them all
Next comes an optional integer denominator
Next comes the unit itself, followed by either '/' or the string end
Next copy the rows of B that correspond to unchanged rows in the bidiagonal matrix to BX.
Next cursor in Fts5Cursor.pCsr list
Next database page to write
Next element in list of dirty pages
Next element of the cell pointer array
Next entry in Parse.pTriggerPrg list
Next entry in sorted order
Next entry is not on the current page
Next entry is on the current page
Next entry is on the next page
Next execution will also need to resend the type.
Next fetch the relevant cert chain from the store
Next field of pPKey2 to compare
Next frame to read from wal file
Next free argvIndex value
Next function with same name
Next hash entry with same hash-key
Next in BtShared.pLock list
Next in LRU list of unpinned pages
Next in a list of them all
Next in hash table chain
Next in linked list (see above)
Next in list of all blocked connections
Next in list of all winShmNode objects
Next in list of deferred tokens
Next in the link-list
Next info block in a list of them all
Next integer will be a column number.
Next integer will be a docid.
Next is all token values, in a form suitable for use by makeheaders.
Next is not allowed to follow SeekLT, SeekLE, or OP_Last.
Next method for this node.
Next node in this hash collision chain
Next object in linked list
Next offset to read from log file
Next offset to write to
Next on a list of sharable BtShared structs
Next on the Parse.pZombieTab list
Next one may be an array or a list of sort flags.
Next outer name context.
Next pattern and input string chars
Next phrase instance index
Next registered auxiliary function
Next registered tokenizer module
Next select to the left in a compound
Next session object on same db.
Next sub-program already visited
Next the case-flipping table
Next three are just to avoid slow checks
Next time a read transaction is opened, attempt to read from the snapshot it  identifies.
Next time we will return from the same ptr.
Next trigger associated with the table
Next unixShm with the same unixShmNode
Next unparsed byte of the header
Next unread data byte
Next unread header byte
Next unused file descriptor on same file
Next unused scratch buffer
Next value in position list
Next value in trailing position list
Next we have the really interesting routines: selection of a colormap given the completed histogram.
Next winShm with the same winShmNode
Next with a different name but the same hash
Next with the same zTo.
Next() is noop if positive
Next() is noop if positive.
Next(), Rowkey(), and Compare() can only occur in between Rewind() and Close()/Reset().
Next, the color-selection step begins with a box representing the whole color space, and repeatedly splits the "largest" remaining box until we have as many boxes as desired colors.
Next, we begin to convert actual values.
Nice for thumbnails but there's no support for fussy adjustment of the assumed properties of inks and paper.
Nil means the two values could not be compared.
Nishimura, "Mersenne Twister: A 623-Dimensionally Equidistributed Uniform Pseudo-Random Number Generator", ACM Transactions on Modeling and Computer Simulation, Vol.
Nkf* is a yet another kanji code converter among networks, hosts and terminals.
No  nul-terminator byte is written.
No '.' but allow '.' as full path
No 'else' here please :)
No DISTINCT keyword and no aggregate functions
No E box is used, as it's replaced by some ANDs, shifts, and ORs.
No FD_CLOEXEC on Windows
No Handlefrees for session pool connections
No I/O or other system calls are done while the locks are held, so the locks should not be held for very long.
No INSERTs may occurs after a SMALLEST.
No LIMIT means no OFFSET
No UTF-8 support, or not in UTF-8 mode: count is byte count
No action is needed if we're timed out because zero seconds are just ignored.
No aggregate functions and no GROUP BY clause
No allocation required.
No alternative is available.
No application should ever ship with VDBE branch coverage measuring turned on.
No attempt is made to lock the database file for reading or writing.
No attempt was made to determine the language in which files of this type were written.
No base available for copyswp and no swap required.
No behaving filter should cause this.
No candidate table+column was found.
No changes are made if mxPage is 0 or negative.
No changes are made to disk by this routine.
No character is accepted.
No checking is done to make sure that page iTable really is the root page of a b-tree.
No claims are made as to fitness for any particular purpose.
No collation sequence of this type for this encoding is registered.
No commit or rollback needed if the program never started or if the SQL statement does not read or write a database file.
No comp_func means we're doing pointer comparisons
No compression, passes through data untouched.
No concurrent write/read and write/write.
No constraint handling mode except for "OR ROLLBACK" is supported.
No copyswap or cast was requested, so all we're doing is copying the data to fill the buffer and produce a single stride.
No current or conflicting row information is provided.
No destination, doesn't need to setup flags.
No digits have been scanned.
No directory only file name
No discussions, no tests.
No dynamic allocation is required.
No effect to result currently.
No eigenvalues deflated.
No error has occurred.
No error if the table already exists
No events after the end of the stream or error.
No exception will be raised regardless of the result, nor will NotImplementedError be raised even if the platform does not support the feature.
No exit handlers are run.
No expansion, do next segment.
No extra storage is allocated to hold the integer text and the dequote flag is ignored.
No floating point operations will be done.
No foreign key violations are detected or reported.
No foreign keys against expression indexes
No form with immediate operand (except imm 0, which is represented by a ZERO register).
No form with immediate operand.
No function of the specified name was found.
No further bytes to check for 0x80.
No further checks necessary
No further checks necessary, most common case
No harm comes from returning 0.
No hope to find a big-enough block
No idea what to do if an error occures.
No index cursor is opened at this time though.
No index is created for INTEGER PRIMARY KEYs.
No information is required by the code-generator before coding an INSERT operation.
No leap seconds before.
No locking occurs in temporary files
No locks are held on any other files (since the main file was committed at the btree level).
No longer required OpenEphemeral instr.
No match, so don't add it
No memory allocation is ever used on mem1.
No memory is freed until DESTROY.
No more data than necessary is read by this routine.
No more remaining characters.
No more rows obviously
No more rows, or no fetched row
No more than 1GiB per allocation
No multithreading issues as we don't share the connection :) This will free the object too, of course because references has reached zero.
No mutual exclusion is provided.
No need for _r variant, return of __toString should always be a string
No need for a binary search.
No need for a separate index
No need to  search for a matching row in the parent table.
No need to FREE_ALLOCA as we can reuse the 'lengths' and 'fields' arrays.
No need to Rewind or Next such cursors.
No need to allocate new space if can just re use the old one
No need to check further.
No need to check notempty conditions.
No need to check the return value, if we failed then whatever.
No need to create a new view
No need to lock: new process
No need to log a failure to lock
No need to mess with the file on disk.
No need to rollback on disconnect
No need to search  iChild.
No need to shift the value.
No need to skip more bytes - we know it's a 1-byte character
No need to use cachedCellSize() here.
No need to waste time with special character handling
No new error processing will occur until three tokens have been shifted successfully.
No new record numbers are allowed to be less than this value.
No nul-terminator is written.
No other args are permitted here as there is no interactive mode
No other flags may be set in this case.
No other row with the new.* primary key.
No overflow is possible, so we can just return
No overflow is required.
No page should ever be explicitly rolled back that is in use, except for page 1 which is held in use in order to keep the lock on the database active.
No page with a page-number greater than this value is played back.
No parameters given, default to "return all"
No point in a buffer bigger than the iteration size
No prefix as loc_range
No progress was made on the last round.
No race condition, even without setpgid from the parent.
No read or write transaction is active.
No real data will follows after it.
No recursion at top level
No renegotiation rate-limiting
No return value check, as it can only fail if the input parameters are broken (which we manually supply)
No room for more colors
No rows or no more rows
No session caching for client or server
No shared memory file is created.
No shared-memory support
No significant digits
No slash found, therefore return '.'
No sort order specified
No state is carried between rbox requests
No subqueries or non-deterministic functions allowed
No subspace iteration is necessary, so the extra_op can be included into the index iterator (it will be buffered) 2.
No term was written to this page.
No terminator (POS_END or POS_COLUMN) is written to the output.
No test for singularity or near-singularity is included in this routine.
No timedelta parser yet
No timezone in struct, fallback to reference if possible
No tokens after STREAM-END or error.
No tokens to defer in this case.
No triggers will be fired.
No updates or AFTER triggers are  required.
No user-visible "rowid" column
No values trivially succeeds
No warranties of any kind are expressed or implied.
No way this can happen
No work is performed in this case.
No zero digits have been scanned.
No, go back to positional (even though there aren't any)
No, so try to allocate it
No, we aren't bothering to check IPv6 addresses.
No-op Locking **********************************  Of the various locking implementations available, this is by far the simplest:  locking is ignored.
No-op if we do not support a codec
No-op routine for the parse-tree walker.
No-op stubs to use when memory-mapped I/O is disabled
No-op to set a breakpoint on, immediately after the real chdir.
No-op versions of all memory allocation routines
No-op versions of the explainXXX() functions and macros.
Node most recently inserted into the tree
Node must have already been started.
Node number of parent node
Node pPhrase belongs to
Node pRight always needs a node number, as it was created by nodeNew() above.
NodeWriter for root node
Nodes are loaded in chunks of FTS3_NODE_CHUNKSIZE bytes.
Nodes are stacked in document order.
Nodes at EOF are the largest of all.
Nominal steps between cell centers ("x" in Thomas article)
Non persistent connection
Non-NULL anchor is expected.
Non-NULL document is required.
Non-NULL document object is expected.
Non-NULL emitter object expected.
Non-NULL emitter object is expected.
Non-NULL emitter object is required.
Non-NULL event object expected.
Non-NULL event object is expected.
Non-NULL file object expected.
Non-NULL for UPDATE operations
Non-NULL handler object expected.
Non-NULL input string expected.
Non-NULL output string expected.
Non-NULL parser object expected.
Non-NULL parser object is expected.
Non-NULL read handler expected.
Non-NULL token object expected.
Non-NULL token object is expected.
Non-NULL value is expected.
Non-Posix functions which are common
Non-Unix systems may define it a different value, though.
Non-alphanumerics are literals.
Non-capturing bracket
Non-capturing brackets
Non-capturing or atomic group, except for possessive with unlimited repeat and ONCE group with no captures.
Non-capturing possessive bracket with unlimited repeat.
Non-clock_gettime clocks are provided by symbol clk_id.
Non-composite foreign keys do not require the aiCol array.
Non-descriptor streams will only "work" if they have previously buffered the data.
Non-error returns from the match() function.
Non-locking sqlite3_file methods *****************************  The next division contains implementations for all methods of the  sqlite3_file object other than the locking methods.
Non-logarithmic number of rows in the index
Non-logarithmic stat1 data for this index
Non-negative integer value if EP_IntValue
Non-persistent conns use shared session pool to allow for optimizations such as caching the physical connection (for DRCP) even when the non-persistent php connection is destroyed.
Non-possessive quantifier
Non-recursive mutex required to access this object
Non-sharable Btrees (in-memory databases for example), do not have associated mutexes.
Non-strided N-dim buffers must be C-contiguous
Non-suggogate BMP codepoint
Non-threadsafe build, use strerror().
Non-truecolor case, restored to its more or less original form
Non-zero P2 arguments to jump instructions are automatically adjusted so that the jump target is relative to the first operation inserted.
Non-zero if an error has occurred
Non-zero if connection is in exclusive mode
Non-zero if in an error state
Non-zero if locking is disabled.
Non-zero if the rowid or PRIMARY KEY changed
Non-zero if this is a v-tab with an xRename()
Non-zero is returned if an imposter table are created, or zero otherwise.
Non-zero is returned if it does, or zero otherwise.
Non-zero is returned if the structure is sqlite3_realloced as part of adding the entry.
Non-zero on any differences
Non-zero to append " AND "
NonTerminal BASE index
None are allocated yet
None means all of the axes
None of the existing best-so-far paths match the candidate.
None of the preupdate_old(), preupdate_new() or SerializeValue() calls below may fail as all required values and encodings have already been cached in memory.
None of the remaining opcodes are required to match a character.
None of them matched.
None of these objects has any associated storage, so all we have to do is copy their entries from the SQLITE_MASTER table.
None of this happens in a production build.
None signals to not call any wrapping
Nonzero if an error occurred.
Nonzero means print parse trace.
Nor are they ever temporary files.
Nor does it detect cells or freeblocks that encrouch into the reserved bytes at the end of the page.
Nor does it detect when the cell content area exceeds the value in the page header.
Nor is it an error if the named table does not have a PRIMARY KEY.
Nor is it possible to create a session object attached to a database handle for which a pre-update hook is already defined.
Nor should the pager attempt to upgrade to exclusive-mode following such an error.
Nor will it be considered to be a hot-journal by this or any other database connection.
Nor will it ever be greater than the actual length of the string.
Normal (non-error) return.
Normal accuracy limits and built-in errors of binary Float arithmetic apply.
Normal assignments allows broadcasting away leading 1s, but the transposing code does not like this.
Normal case - r-tree scan.
Normal case of an integer array
Normal connections use existing pconnections.
Normal form variable, safe to read all data into memory
Normal hash selection/retrieval call
Normal http request (possibly with proxy)
Normal ldr/str instruction.
Normal operation (without SQLITE_TEST_REALLOC_STRESS) is to double the current size of the op array or add 1KB of space, whichever is smaller.
Normal read/write connection
Normal token_get_all() should not throw.
Normalization Table by Apple
Normalization form constants
Normalize left eigenvectors and make largest component real
Normalize right eigenvectors and make largest component real
Normalize string (converting it to UTF-16 first).
Normalize the address
Normalize the holidays list
Normalized weights of neighboring pixels
Normally Q is the orthogonal matrix generated by DORGHR after the call to DGEHRD which formed the Hessenberg matrix H.
Normally Q is the orthogonal matrix generated by SORGHR after the call to SGEHRD which formed the Hessenberg matrix H.
Normally Q is the unitary matrix generated by CUNGHR after the call to CGEHRD which formed the Hessenberg matrix H.
Normally Q is the unitary matrix generated by ZUNGHR after the call to ZGEHRD which formed the Hessenberg matrix H.
Normally block ciphers don't allow changing the IV length, but some make use of IV for 'nonce'.
Normally sqlite3SelectExpand() will be called first and will have already expanded this SELECT.
Normally the session cache is checked for expired sessions every 255 connections.
Normally this is convenient.
Normally this is set when '(' is read
Normally this returns the exception's message or name.
Normally we don't worry about that warning, but some users do, and we want to make it easy for users to remove YYFAIL uses, which will produce warnings from Bison 2.5.
Normally you would call zval_copy_ctor( pz_ch ), or SEPARATE_ZVAL, but those create new zvals, which is already being done in add_assoc_resource
Normally, a PmaReader object iterates through an existing PMA stored  within a temp file.
Normally, a connection open in exclusive mode is never in PAGER_OPEN state.
Normally, iSavepoint is greater than or equal to zero.
Normally, if a back reference hasn't been set, the length that is passed is negative, so the match always fails.
Normally, if a transaction is rolled back, any backup processes are updated as data is copied out of the rollback journal and into the database.
Normally, if an error occurs while the pager layer is attempting to  finalize the underlying journal file, this function returns an error and the upper layer will attempt a rollback.
Normally, new pages allocated by this block can be requested from the pager layer with the 'no-content' flag set.
Normally, no code is required.
Normally, the hash table is populated as documents are inserted/updated/deleted in a transaction and used to create a new segment when the transaction is committed.
Normally, they would, yielding a fat-brush effect.
Normally, this function sets *pbDone to 1 before returning.
Normally, two subsequent bytes describe a Unicode character.
Normally, whenever a table is dropped, all associated triggers are dropped too.
Normally, zero is written to this value at this time.
Not UTF-8 mode, or character is less than 127.
Not UTF-mode, or no UCP
Not WITHOUT ROWID table.
Not Yet Implemented though defined in libxml as of 2.6.9dev PHP_ME(xmlreader, resetState, NULL, ZEND_ACC_PUBLIC)
Not a compound SELECT
Not a correlated subquery
Not a duplicate with same number
Not a duplicated name
Not a recursive common table expression.
Not a single-element data type
Not a valid start character
Not all WHERE terms resolved by outer loop
Not all flags are available on all platforms, but a flag value of zero will work on all platforms.
Not all signals are available on all platforms.
Not allowed on leftward elements
Not always defined in the headers as it ought to be
Not always meaningful.
Not an SSI tag, pass it
Not appropriate for html_entity_decode/htmlspecialchars_decode
Not available for complex numbers.
Not available on all platforms.
Not available on windows, the query is possible but there is no DNS_HINFO_DATA structure
Not because vxworks would not benefit from the change (it might, we're not sure), but because no way to test it is currently available.
Not being done as this means a behavior change.
Not clear that being smart is worth any trouble anyway --- large skips are infrequent.
Not conditional branch.
Not currently enforced.
Not enough for block, just pass into buffer
Not enough room in dst, add NUL and traverse rest of src
Not enough room in dst, add NUL and traverse rest of src.
Not enough work space for the optimal NB, consider using a smaller block size.
Not enough workspace to use optimal NB:  determine the minimum value of NB, and reduce NB or force use of unblocked code.
Not enough workspace to use optimal NB:  reduce NB and determine the minimum value of NB.
Not every statement has a result set attached
Not every value is representable.
Not everything is nestable.
Not found - try it as a special keyword.
Not found, lookup by querying PostgreSQL system tables
Not full path given or extension_dir is not set
Not fully initialized object that is being cleaned up
Not going to worry about Path: because we shouldn't be changing urls so path dont matter too much
Not ideal, but better than nothing.
Not implemented on all platforms.
Not impossible though.
Not in the NUMPY API at this time, maybe later.
Not last chunk, if the user asks for less, give it to him
Not multiline mode: assert before a terminating newline or before end of subject unless noteol is set.
Not multiline mode: start of subject assertion, unless notbol.
Not necessarily effective on all platforms.
Not needed for the moment
Not nice to convert between enums but we only have place for one error type
Not originating in the ON clause of an OUTER JOIN 4.
Not part of an OR optimization
Not previously opened
Not pushed if there are no alternatives.
Not pushed if there is no alternatives.
Not really essential, but these routines were used extensively in GD, so they were moved here.
Not required due to the previous to assert() statements
Not setting this callback explicitly means not supporting the ALPN extension on the server - any protocols advertised by the client will be ignored.
Not setting this callback explicitly means not supporting the NPN extension on the client - any protocols advertised by the server will be ignored.
Not supplying an error message will have no adverse effect on SQLite.
Not sure I can fix this.
Not sure if this is correct (never seen float used in Exif format)
Not sure if this was an implementation artifact or an intentional decision when fts3 was first implemented.
Not sure what should be done here if it's a static method
Not sure which smartass came up with this idea in the first though :)
Not sure why it's a needed but it marks that the whole stream will include many result sets.
Not sure why the memset is necessary here, but without it, we get a bogus stack size out of pthread_attr_getstacksize.
Not that TRUE is returned even if xCond() fails and no substitution occurs.
Not the best thing, but in practice it should be good-enough
Not the best way to use IO.select.
Not too pretty, but it works.
Not yet implemented in the engine
Not-a-time is returned as the string "NaT".
NotImplementedError is raised on other platforms, such as Windows, which doesn't provide the function.
Notably, there is a barrier between the nonlinear years and months units, and all the other units.
Note 2:  C is only used for STAT3 and STAT4.
Note 2: At first glance it may seem like SQLite could simply omit all OP_FkCounter related scans when either CASCADE or SET NULL applies.
Note : DLASQ2 defines a logical variable, IEEE, which is true on machines which follow ieee-754 floating-point standard in their handling of infinities and NaNs, and false otherwise.
Note : SLASQ2 defines a logical variable, IEEE, which is true on machines which follow ieee-754 floating-point standard in their handling of infinities and NaNs, and false otherwise.
Note about reference counting ----------------------------- If the caller returns the array to Python, it must be done with Py_BuildValue("N",arr).
Note also that it does not work to make a EXPRDUP_REDUCE copy of a reduced expression.
Note also that it does not work to make an EXPRDUP_REDUCE copy of a reduced expression.
Note also that the numeric types are grouped together so that testing for a numeric type is a single comparison.
Note also that when the IN operator appears in the WHERE clause, it might result in additional nested loops for scanning through all values on the right-hand side of the IN.
Note in a server context some ciphers require the appropriate certificates.
Note in particular that this includes atomic brackets OP_ONCE and OP_ONCE_NC because the number of characters matched by .* cannot be adjusted inside them.
Note in particular that we must go ahead and allocate the record number for the table entry now.
Note in particular the content of freelist leaf pages can be changed arbitarily without effecting the logical equivalence of the database.
Note in particular the content of freelist leaf pages can be changed arbitrarily without affecting the logical equivalence of the database.
Note is a letter is a 'break' in the word
Note negative special
Note on intent(cache,out,..) --------------------- Don't expect correct data when returning intent(cache) array.
Note slight error in 16-bit case:  up to 256 16-bit shades may get mapped to a single 8-bit shade, and only one of them is supposed to be transparent.
Note that  max(abs(A(i,j)))  is not a  matrix norm.
Note that "equivalent" doesn't necessarily mean "identical", e.g., two alpha-converted types are "equivalent" though not literally byte- identical.
Note that (for historcal reasons) the PAGER_SYNCHRONOUS_* macros differ from the SQLITE_DEFAULT_SYNCHRONOUS value by 1.
Note that *legal* UTF-8 values can't have 4 or 5-bytes.
Note that +false+ must be passed, not +nil+.
Note that +limit+ is included, and the range of the argument and the return value depends on environments.
Note that 0 is reasonable value for most protocols, except raw socket.
Note that Adar II is assigned the month number 7 and Elul is always 13.
Note that BTREE_HINT_FLAGS with BTREE_BULKLOAD is the only hint used by standard SQLite.
Note that GCM accepts an arbitrary length tag between 1 and 16 bytes.
Note that H is not hermitian.
Note that I.1 and D.1 are very similar operations, as are I.2 and D.2.
Note that ICU uses int32_t as string length and PHP uses size_t.
Note that LONGLONG is a 64-bit value
Note that M is very tiny
Note that NPY_ARRAY_ENSURECOPY is enough to guarantee NPY_ARRAY_C_CONTIGUOUS, NPY_ARRAY_ALIGNED and NPY_ARRAY_WRITEABLE and therefore it is redundant to include those as well.
Note that ON cannot be a database, table or column name, so there is no need to worry about syntax like  "CREATE TRIGGER ...
Note that OP_DIGIT etc.
Note that OleView is unable to generate C headers for this particular tlb...
Note that POS_END and POS_COLUMN occur  in the same logical place as the position element, and act as sentinals ending a position list array.
Note that RowKey and RowData are really exactly the same instruction
Note that Ruby comes with the source code for SDBM, while the DBM and GDBM standard libraries rely on external libraries and headers.
Note that SSLSocket#close doesn't close the underlying socket by default.
Note that VarToUtf8() does not guarantee the NULL terminator on the returned string.
Note that Windows does not allow a file to be deleted if some other process has it open.
Note that `ubf()' may not be called with the GVL.
Note that a "regular journal-handle" may be a wrapper capable of caching the first portion of the journal file in memory to implement the atomic-write optimization (see  source file journal.c).
Note that a return of SQLITE_OK does not guarantee that the page is well-formed.
Note that a simpler linear search through the functions loop is still done, but switching to a simple array lookup for built-in types would be better at some point.
Note that abs(M) .le.
Note that additional bits may be set in the returned options: these are used internally by the regular expression code.
Note that addrinfo.protocol is filled by 0.
Note that all "rb_" prefix APIs need GVL to call.
Note that any existing per-session public/private keys will *not* get encoded, just the Diffie-Hellman parameters will be encoded.
Note that assign_pipes may have re-ordered the instrs (by inserting no-ops in lower slots) so we need to reset them.
Note that at this point we can encounter only the "basic" bracket opcodes such as BRA and CBRA, as this is the place where they get converted into the more special varieties such as BRAPOS and SBRA.
Note that attempts to set such parameters with insufficient security are also blocked.
Note that axis is already valid.
Note that because the AXISDATA has been reversed from C order, this is sorting from smallest stride to biggest stride.
Note that case sensitivity depends on your system (so File::FNM_CASEFOLD is ignored), as does the order in which the results are returned.
Note that changing these values does not affect VM execution.
Note that consecutive pages need to be merged in order to avoid watchpoints spanning page boundaries to have part of their data in the one page, part in the other page
Note that control characters are already translated in AsciiChar
Note that control chars require an extra column
Note that elements in the second half of this permutation must first have CUTPNT added to their values in order to be accurate.
Note that elements in the second half of this permutation must first have N1 added to their values.
Note that encryption will only be effective for a private key, public keys will always be encoded in plain text.
Note that entity tables are defined in terms of unicode code points
Note that entries are added in order of increasing K.
Note that even though the freeblock list was checked by btreeInitPage(), btreeInitPage() did not detect overlapping cells or freeblocks that overlapped cells.
Note that even though the freeblock list was checked by btreeInitPage(), that routine will not detect overlap between cells or freeblocks.
Note that exprAnalyze() might add new virtual terms onto the end of the WHERE clause.
Note that failures to solve can occur due to integer overflows, or effort required solving the problem exceeding max_work.
Note that fds which close-on-exec flag is already set are closed regardless of :close_others option.
Note that files save handler supports splitting session data into multiple directories.
Note that first_significant_code() skips over backward and negative forward assertions when its final argument is TRUE.
Note that for backwards compatibility reasons, setting an IV is not explicitly mandated by the Cipher API.
Note that fork(2) is not available on some platforms like Windows and NetBSD 4.
Note that here, we do *not* go through self.__getitem__ for subclasses (defchar array failed then, due to uninitialized values...)
Note that if +certs+ is nil or not given, flag OpenSSL::OCSP::NOCERTS is enabled.
Note that if ::trace_object_allocations_start is called n-times, then tracing will stop after calling ::trace_object_allocations_stop n-times.
Note that if an error is returned, the caller must free the non-zero references in out_dtype.
Note that if an error is returned, the caller must free the non-zero references in out_op.
Note that if an error occurred, it might be the case that no VDBE code was generated.
Note that if any index could potentially invoke a REPLACE conflict resolution  action, then we need to open all indices because we might need to be deleting some records.
Note that if one of the dynamic mutex parameters (SQLITE_MUTEX_FAST or SQLITE_MUTEX_RECURSIVE) is used then sqlite3_mutex_alloc() returns a different mutex on every call.
Note that if the current char is a control character, we need one extra col.
Note that if there is an INTEGER PRIMARY KEY into which a NULL is being inserted, that NULL will be translated into a unique ID for the row.
Note that if you present a bogus address (one not in any segment), you will get a different number back, formed from subtracting the address of the first block.
Note that in UTF-8 mode, '.' matches a character of any length, but for the other character types, the valid characters are all one-byte long.
Note that in caseless UTF-8 mode, the number of subject bytes matched may be different to the number of reference bytes.
Note that in that book's description of DES the lookups for the initial, pbox, and final permutations are inverted (this has been brought to the attention of the author).
Note that it is illegal for the driver to take a reference to param, as it resides in transient storage only at this time.
Note that it is not possible for a negative or extremely large varint to occur within an uncorrupted position  list.
Note that it is not safe to retry close() after EINTR since the file descriptor might have already been reused by another thread.
Note that it is possible for the library compile-time options to override this setting
Note that libqhull uses macros to iterate through collections.
Note that memchr() and memcmp is *not* async-signal-safe in POSIX.
Note that n may be negative if broadcasting extends into the core dimensions.
Note that n must be an Integer.
Note that no brackets are used below.
Note that not all AEAD ciphers support this method.
Note that on 80x86 machines, the pointer row is in near memory but the actual arrays are in far memory (same arrangement as we use for image arrays).
Note that on Win32 CWD is per drive (heritage from CP/M).
Note that on Windows (NTFS), returns creation time (birth time).
Note that once a table is  attached, xFilter will not be called again.
Note that only run-time accessed data need to be cleaned up, pre-defined data can not contain objects and thus are not probelmatic
Note that only the pointer (the 2nd parameter) matters.
Note that pCsr must be open on a BTREE_INTKEY table and saveCursorPosition() and hence saveAllCursors() cannot fail on a BTREE_INTKEY table, hence saveAllCursors can only return SQLITE_OK.
Note that pCsr must be open on a INTKEY table and saveCursorPosition() and hence saveAllCursors() cannot fail on a BTREE_INTKEY table, hence saveAllCursors can only return SQLITE_OK.
Note that phpdbg_help_text is not assumed to be collated in key order.
Note that processing for WHERE_GROUPBY and WHERE_DISTINCTBY is not as strict.
Note that setting READ_UNCOMMITTED overrides most lock detection, but it does *not* override schema lock detection, so this all still works even if READ_UNCOMMITTED is set.
Note that simply defining an accessor does not create the corresponding instance variable.
Note that some libraries define sequence-like classes but want them to be treated as objects, and they expect numpy to treat it as an object if __len__ is not defined.
Note that some of the more obscure formatting options from recent C-library standards are omitted from this implementation.
Note that subspace may be used.
Note that the "rd" argument of RMATCH isn't actually used in this definition.
Note that the "rw" argument of RMATCH isn't actually used in this definition.
Note that the C99 standard does not specify what the leading digit should be for non-zero numbers.
Note that the SQLITE_TEXT constant was also used in SQLite version 2 for a completely different meaning.
Note that the Scanner still produce the KEY token whenever it encounters a simple key.
Note that the Unicode property types will be present only when SUPPORT_UCP is defined, but we don't wrap the little bits of code here because it just makes it horribly messy.
Note that the _LENGTH and _TYPEOF values must correspond to OPFLAG_LENGTHARG and OPFLAG_TYPEOFARG.
Note that the above match the definitions of SQLITE_INTEGER, SQLITE_TEXT and so on in sqlite3.h.
Note that the affinity conversions are stored back into the input registers P1 and P3.
Note that the call to sqlite3ResultSetOfSelect() will expand any "*" elements in the results set of the view and will assign cursors to the elements of the FROM clause.
Note that the checkpoint need not have completed for this to cause problems.
Note that the current accepted value for the tropical year is 365.242199 days, not 365.25.
Note that the datatype of the PRIMARY KEY must be INTEGER for this field to be set.
Note that the exact list of the constants depends on OS.
Note that the expression in the result set should have already been resolved by the time the WHERE clause is resolved.
Note that the first 5 fields of this structure are identical to sqlite3_rtree_geometry.
Note that the generated buffer will not contain a methodCall.
Note that the imaginary parts of the diagonal elements need not be set and are assumed to be zero.
Note that the imaginary parts of the diagonal elements need not be set,  they are assumed to be zero,  and on exit they are set to zero.
Note that the imaginary parts of the diagonal elements need not be set, they are assumed to be zero, and on exit they are set to zero.
Note that the initialization is not thread-safe, but relies on the CPython GIL to be correct.
Note that the integer representation is always preferred, even if the affinity is REAL, because an integer representation is more space efficient on disk.
Note that the last_match is local to the thread and method scope of the method that did the pattern match.
Note that the loop starting at 1 is intentional, since we've already done the first round of the algorithm.
Note that the mapping is not necessarily ordered.
Note that the nesting is not copied.
Note that the number is in the usual order, not reversed as with integer conversions.
Note that the order of the first four values is in order of precedence when parsing expressions.
Note that the pager will not actually attempt to load or journal  content for any page that really does lie past the end of the database file on disk.
Note that the passed `rb_debug_inspector_t' will be disabled after `rb_debug_inspector_open'.
Note that the relationship between SHAREd and EXCLUSIVE locks is a little different here than in posix.
Note that the repeated item starts at tempcode, not at previous, which might be the first part of a string whose (former) last char we repeated.
Note that the result may not be equal to the source encoding of the encoding converter if the conversion has multiple steps.
Note that the return size is incomplete.
Note that the returned size is incomplete.
Note that the second parameter, headers_lc, is actually a lowercased version of headers.
Note that the sqlite3_vfs.pNext field of the VFS object is modified by the SQLite core when the VFS is registered.
Note that the statement journal format differs from the standard journal format in that it omits the checksums and the header.
Note that the static mutex allocated in xInit does  not need to be freed.
Note that the stream may be filtered, in which case the stat result may be inaccurate, as the filter may inflate or deflate the number of bytes that we can read.
Note that the structure of the sqlite3_vfs object changes in the transaction between SQLite version 3.5.9 and 3.6.0 and yet the iVersion field was not modified.
Note that the table for "space" includes everything "isspace" gives, including VT in the default locale.
Note that the times, +revocation_time+, +this_update+ and +next_update+ can be specified in either of Integer or Time object.
Note that the translated binary data is not portable.
Note that the trunk page is not really full until it contains usableSize/4 - 2 entries, not usableSize/4 - 8 entries as we have coded.
Note that the values returned are one less that the values that should be passed into sqlite3BtreeSetSafetyLevel().
Note that the virtual term must be tagged with TERM_VNULL.
Note that there are substantial restrictions on the use of suspension --- see the documentation.
Note that there is no code from the gd package in this file
Note that there may be an auto-callout at the start of a condition.
Note that these are different than fiber local values.
Note that these are local to threads, and not to fibers.
Note that these values are always the ASCII ones, even in EBCDIC environments.
Note that this also affects what script_path_translated points to.
Note that this assumes fd_set is structured as bitmap.
Note that this behavior is observable by pid obtained (return value of spawn() and IO#pid for IO.popen) is the pid of the invoked command, not shell.
Note that this call deletes the  saved position info stored by saveCursorPosition(), so there can be at most one effective restoreCursorPosition() call after each  saveCursorPosition().
Note that this can never happen in an SQLite data file, as all cells are at least 4 bytes.
Note that this code only handles characters in the BMP.
Note that this feature introduces a huge performance decrease and huge memory consumption.
Note that this format is MRI specific and version dependent.
Note that this function is assumed to be used even times for a given array.
Note that this function is called only for ANY or ANYCRLF.
Note that this function returns 0 when numwords is zero and INTEGER_PACK_2COMP is set but INTEGER_PACK_NEGATIVE is not set.
Note that this implementation requires a version of pthreads that supports recursive mutexes.
Note that this information is incomplete.
Note that this is a temporary hack that should be fixed soon.
Note that this is only done once per call to linenoise rather than every time the line is refreshed for efficiency reasons.
Note that this may be an under estimate because there are 6939.6896 days in a metonic cycle not 6940, but it will never be an over estimate.
Note that this method can wakeup without explicit Thread#wakeup call.
Note that this method does *NOT* return total malloc'ed memory size.
Note that this only affects how the datetime becomes a string.
Note that this operation leaves the array unchanged.
Note that this pattern is not a regexp, it's closer to a shell glob.
Note that this read relies on the __sync call above preventing the compiler from caching the value read out of memory.
Note that this routine is only used when one or more of various non-standard compile-time options is enabled.
Note that this will ignore any methodCall.
Note that using the same column more than once cannot be an error because that would  break backwards compatibility - it needs to be a warning.
Note that we always assume the path is not empty and nul terminated
Note that we assume that the buffer contains a valid UTF-8 sequence.
Note that we cannot use the BASE64 alphabet here, because it contains "/" and "+": both are unacceptable for simple inclusion into URLs.
Note that we cannot use the value of "length" to check for sufficient bytes left, because the other case of the character may have more or fewer bytes.
Note that we change the 'simple_key_allowed' flag.
Note that we don't call EquivTypes, because usually the exact same dtype object will appear, and we don't want to slow things down with a complicated comparison.
Note that we don't try to then combine the second and third instr into a single bundle.
Note that we may wind up marking no points.
Note that we must do this before changing the order of the axes
Note that we must not include the OP_KETRxxx opcodes here, because they all imply an unlimited repeat.
Note that we only handle HTTP requests and don't handle any redirects in this example, so this is insufficient for serious use.
Note that we really just look for LF terminated lines.
Note that we rely on the semaphores being zeroed when they are created.
Note that we truncate to zero bytes as truncating to the journal_size_limit might leave a corrupt WAL file on disk.
Note that we use memcpy() rather than strncpy() in case there are binary zeros in the string.
Note that when reading a DH instance from data that was encoded from a DH instance by using DH#to_pem or DH#to_der the result will *not* contain a public/private key pair yet.
Note that when there are multiple overflow cells, it is always the case that they are sequential and adjacent.
Note that when type conversions occur, pointers returned by prior calls to sqlite3_column_blob(), sqlite3_column_text(), and/or sqlite3_column_text16() may be invalidated.
Note that you should not use this method in your application.
Note that zNum must contain exactly 19 characters.
Note that zip- based phar archives cannot support signatures.
Note that zlib allows larger values to enable different inflate modes.
Note that, for Perl compatibility, SKIP with an argument does NOT set nomatch_mark.
Note these type of +ScriptErrors+ are not +StandardError+ and will not be rescued unless it is specified explicitly (or its ancestor +Exception+).
Note this call checks the environment values TMP and TEMP (in order) first.
Note we need not unload belowerrN because it is for the dummy column before or after the actual array.
Note* do not depend on current event set, as this list is subject to change.
Note, eta should be positive if w is negative, and eta should be negative otherwise.
Note, however, that the subtrees in Expr.x.pList or Expr.x.pSelect are always separately allocated, regardless of whether or not EP_Reduced is set.
Note, that now (4.1.3) we always send metadata in reply to COM_STMT_EXECUTE (even if it is not necessary), so either this or previous branch always works.
Note, this will not match Unix-like hidden files (dotfiles).
Note: A break point must always set the correct id and type A set breakpoint function must always map new points
Note: Always base class, because subclasses might mess with the shape.
Note: FILE_SEARCH and FILE_REGEX do not actually copy anything, but setup pointers into the source
Note: In SSE3, we could also use MOVDDUP and MOVSLDUP.
Note: On this implementation, 'stride' is same as sizeof(RVALUE).
Note: SPACE and PXSPACE used to be different because Perl excluded VT from "space", but from Perl 5.18 it's included, so both categories are treated the same here.
Note: Solaris 11 (POSIX.1-2008 compliant) has dirfd(3C).
Note: The contents of the returned hash is implementation defined.
Note: The following set of if(...) statements must be in the same order as the corresponding entries in the struct at the top of fts5BestIndexMethod().
Note: The last form is compatible with IPSocket#addr and IPSocket#peeraddr.
Note: These functions cope with default_internal not being set
Note: These keyword arguments are implementation and version dependent.
Note: This block also runs if one of the special errors handled  above has occurred.
Note: This list isn't exhaustive, but should cover common cases.
Note: This method is disabled on MacOS X 10.7 and iOS version 5.0 and will always return SQLITE_MISUSE.
Note: This method is not safe for use with multi-byte characters as it will truncate them.
Note: We pass in the pointer to the server_context in case this is handled by a different thread.
Note: _not_ MATCH_ACCEPT
Note: a zero length key is no key at all
Note: all input quantities are assumed to be smaller than overflow by a reasonable factor.
Note: can_cache is called only for binary operators.
Note: clicks on NaCl modules will give focus only if you handle the click event.
Note: do not free the original file handler, let original compile_file() or caller do that.
Note: during a reduce, the only symbols destroyed are those which appear on the RHS of the rule, but which are *not* used inside the C code.
Note: during a reduce, the only symbols destroyed are those which appear on the RHS of the rule, but which are not used inside the C code.
Note: errorptr points to *previous* column's array entry.
Note: for global settings sake we check from root to path
Note: gdbm 1.10 works with O_CLOEXEC.
Note: if sub is called, accum must be larger that what is being subtracted.
Note: rb_wait_for_single_fd already retries on EINTR/ERESTART
Note: src1 is NOT immediate.
Note: strchr includes the terminating zero in the characters it considers.
Note: that some objects of builtin classes are reused for optimization.
Note: the calls to BtreeKeyFetch() and DataFetch() below assert()  that both the BtShared and database handle mutexes are held.
Note: the test here for php_stream_udp_socket_ops is important, because we want the default to be TCP sockets so that the openssl extension can re-use this code.
Note: there must not be a mixture of XPG3 specs and non-XPG3 specs in the same format string.
Note: this cast is safe, because the origin data point was an int that was cast to a (const char *).
Note: this code is harmless on little-endian machines.
Note: when reporting iJVM_EVENT_TYPE_ENTER_NIDS, there is no need to fill in the stack_id field in the iJIT_Method_NIDS structure, as VTune fills it.
Note:* Seconds range from zero to 60 to allow the system to inject leap seconds.
Note:* The new object will use the resolution available on your system clock, and may include fractional seconds.
Note:* This does not invoke the scheduler, see #run for more information.
Note:* this method is obsolete, please use TracePoint instead.
Note:: +syscall+ is essentially unsafe and unportable.
Notes ----- Binary search is used to find the indexes.
Notes On Invalid UTF-8:  This routine never allows a 7-bit character (0x00 through 0x7f) to be encoded as a multi-byte character.
Notes:  A pager is never in WRITER_DBMOD or WRITER_FINISHED state if the connection is open in WAL mode.
Nothing (not even the first header) has been written to the journal.
Nothing actually happens until the cursor is used to read a record.
Nothing else can go wrong, so otherwise SQLITE_OK is returned.
Nothing in SQLite requires multiple threads.
Nothing in this file or anywhere else in SQLite does any kind of encryption.
Nothing is guaranteed in this state - the file may or may not be locked and the database size is unknown.
Nothing matched the range, stop processing
Nothing points to this buffer now, free it
Nothing stored during the first run.
Nothing to do at end-of-loop for a single-pass
Nothing to do if we got an empty string
Nothing to do, we already have a decimal point and a digit after it.
Nothing to read, just create an empty array of the requested type
Nothing to store for UPSERT/LOAD DATA
Nothing will be appended if an empty string ("") or nil is specified.
Nothing will break if it doesn't work.
Notice because Python does not describe a mechanism to write raw data to the pickle, this performs a copy to a string first
Notice is thrown after creation of the property, to avoid EG(std_property_info) being overwritten in an error handler.
Notice that because of the way SQLite parses compound SELECTs, the individual selects always group from left to right.
Notice that when returning from a function the stack pointer is the address of the function return.
Notice the difference between moveToLeftmost() and moveToRightmost().
Notification that the given NaCl module has gained or lost focus.
Notifications from sqlite3_log()
Notify of page size changes
Notwithstanding the foregoing, the authors grant the U.S.
Now 'shift' the result of the reduction.
Now -LEXP is less than or equal to EMIN, and -UEXP is greater than or equal to EMIN.
Now I0:N0 is unreduced.
Now `shift' the result of the reduction.
Now a bit of recursion - read from the read buffer, if the data which we have just read from the wire is not enough, then the recursive call will try to satisfy it until it is satisfied.
Now add carry the longer integer part.
Now add the remaining fraction part and equal size integer parts.
Now adjust all forward reference offsets for the group.
Now allocate memory of array, array of pointers
Now an optional 4th parameter specifying the cursor type defaulting to the cursors default
Now apply back the right singular vectors.
Now begin substituting subquery result set expressions for  references to the iParent in the outer query.
Now build the character set.
Now chain through the pending brackets, and fill in their length fields (which are holding the chain links pro tem).
Now check if what we have left is a sequence for recursion
Now check that the iter.nEmpty leaves following the current leaf (a) exist and (b) contain no terms.
Now check that there is at least one non-zero bytes at the start of the journal file.
Now check to see if the object is registered in typeDict
Now compare the magnitude.
Now conquer each subproblem bottom-up.
Now convert from the data-buffer
Now copy the subarray of the first element along each reduction axis, then return a view to the rest.
Now copy, and magnify as we do so
Now count remaining bytes.
Now create RMAX, the largest machine number, which should be equal to (1.0 - BETA**(-P)) * BETA**EMAX .
Now deal with various "verbs" that can be introduced by '*'.
Now determine whether rounding or chopping occurs,  by addin g a bit  less  than  beta/2  and a  bit  more  than  beta/2  to a.
Now determine whether rounding or chopping occurs,  by adding a bit  less  than  beta/2  and a  bit  more  than  beta/2  to  a.
Now do the equal length scale and integer parts.
Now do the pre-compile.
Now emit the colormap index for this cell
Now encode the result...
Now ensure that the reqchars match
Now fill in object's state.
Now fill in the ITERSIZE member
Now fill in the complete length of the item
Now fill the next block with 56 bytes
Now find  the  mantissa, t.
Now fire up the session
Now for the full divide algorithm.
Now for the remaining rounds to 64:
Now for the remaining rounds up to 79:
Now get last part - the description
Now get result of this (32 bytes) and add it to the other context.
Now get result of this (64 bytes) and add it to the other context.
Now get the read-lock
Now get the read-lock SHARED_LOCK
Now handle repetition for the different types of item.
Now handle the original range.
Now hook it up to the source
Now if we weren't inside restart, restart would not begin until we remove usage lock
Now into new section that parses buf for delimiter/enclosure fields
Now just need to create the correct subspace iterator.
Now let's read from the wire, decompress it and fill the read buffer
Now loop over all cells in box, updating distance per Thomas method
Now loop through the file and do the magic quotes thing if needed
Now make a tuple of views, one per index
Now make the extraction
Now make the output string
Now manipulate the actual database free-list structure.
Now multiply by BETA**EMAX to get RMAX.
Now pass our field back to php
Now perform addition until every digits of b will be
Now perform subtraction until every digits of b will be
Now persistent_script structure is ready in process memory
Now process the operands, filling in the axisdata
Now pull in the remote sections into our address space.
Now read CGI reply into a buffer.
Now reconnect using the same handle
Now return the state which is at least byteorder, subarray, and fields
Now save the offset data
Now scan built-in mime types
Now scan remaining volume of box and compute population
Now search for a zipvfs instance lower down in the VFS stack.
Now search pTab for the exact column.
Now search through the history for a match
Now see if the situation is what we want
Now see if we need to remove any special characters.
Now set up for the next call to readdir
Now set up the correct time stuff
Now start processing the opcodes.
Now start, stop, and step have their values and matching metadata
Now test for equivalence if both characters are alphabetic.
Now that it is known how many phrases there are, allocate and zero the required space using malloc().
Now that no other errors can occur, finish filling in the BtCursor variables and link the cursor into the BtShared list.
Now that pcre_maketables is a function visible to the outside world, we make use of its code from here in order to be consistent.
Now that the axes are finished, check whether we can apply the single iteration optimization to the iternext function.
Now that the shift has been done, check if the initial "..." are required.
Now that there are no outstanding references to the pager, it can safely move back to PAGER_OPEN state.
Now that there is a read-lock on the source database, query the source pager for the number of pages in the database.
Now that we have the flags - convert all the ops to arrays
Now that we placed the element, we need to update the variables.
Now that we've identified that we've a Bcc list, remove it from the current header.
Now that we've permuted things, complete f().
Now the active submatrix is in rows and columns L to I.
Now the base data pointer is calculated, set it everywhere it's needed
Now the current buffer content
Now the datetimestruct data is in the final form for the string representation, so ensure that the data is being cast according to the casting rule.
Now the hard part -- adjusting rv to the correct value.
Now there are two general cases how extra_op is used: 1.
Now this method checks generational consistency if RGenGC is supported.
Now try to discover other details about the file.
Now tuneable thanks to Wez Furlong
Now update the actual sibling pages.
Now wait for the next char.
Now we are going to compile the regular expression pattern, and handle * and errors that are detected.
Now we can call the fast-clip function
Now we can check the axis
Now we can construct the result string.
Now we can destroy the result set
Now we can get on with it
Now we can scan the table and, for each entry, print the number, the name, and the substring itself.
Now we have nd0 digits, starting at s0, followed by a decimal point, followed by nd-nd0 digits.
Now we have to check the semantics.
Now we know that no cell in the update box is more than minmaxdist away from some colormap entry.
Now we know that our FIN is ACK-ed, safe to close
Now we need to replace the pointers and strides with values from the new array.
Now we need to replace the pointers and strides with values from the temporary array.
Now we're on a valid business day
Now when 1 and 2 are destroyed, 3 can still access 2 in its destructor, with very problematic results
Now, do the IO operation.
Now, if comps exist, write them out.
Now, if number mappings exist, write them out.
Now, if the table is not stored in the temp database, reload any temp  triggers.
Now, if we have to wait some time, and we're supposed to be blocking, wait for the socket to become available.
Now, it is experimental.
Now, php_pollfd_for uses select to wait up to our time_left value only...
Now, search for the parameter
Now, this method is not affected by Exception#set_backtrace().
Now, tokens:  STREAM-START(encoding)          # The stream start.
Now, we know newin is a usable array for fastclip, we need to make sure the output array is available and usable
Nowadays we allow for larger numbers in UTF-8 mode and 16-bit mode, but no more than 3 octal digits.
Nowadays, we always stop the timer thread completely to allow redirects.
NpyArg_ParseKeywords  Utility function that provides the keyword parsing functionality of PyArg_ParseTupleAndKeywords without having to have an args argument.
NpyIter cleanup and information:
Nul-terminate the request cause parse_http_request() uses sscanf
Nul-terminated URI to parse
Nul-terminated entry key
Nul-terminated string containing "A,B"
Nul-terminated string containing boolean
Null passed to nullable type
Null terminate and eat *trailing* return
Null-terminate the destination
Null-terminate the string, so strdup can work even if the packets have a string at the end, which is not ASCIIZ
Null-terminated column definition
NumPy Unicode is always 4-byte
NumPyOS_ascii_format*: - buffer: A buffer to place the resulting string in - buf_size: The length of the buffer.
NumPyOS_ascii_ftolf: fp: FILE pointer value: Place to store the value read  Similar to PyOS_ascii_strtod, except that it reads input from a file.
NumPyOS_ascii_isalnum:  Same as isalnum under C locale
NumPyOS_ascii_isalpha:  Same as isalpha under C locale
NumPyOS_ascii_isdigit:  Same as isdigit under C locale
NumPyOS_ascii_isspace:  Same as isspace under C locale
NumPyOS_ascii_strncasecmp:  Same as strncasecmp under C locale
NumPyOS_ascii_strtod:  Work around bugs in PyOS_ascii_strtod
NumPyOS_ascii_tolower:  Same as tolower under C locale
Number bytes in cell content header
Number from first found
Number instances seen so far
Number of 8-bit characters
Number of Blowfish rounds, this is also hardcoded into a few places
Number of CA certificates to walk when verifying a certificate chain.
Number of COLNAME_xxx symbols
Number of CTEs in the WITH clause
Number of DNS Types Supported by PHP currently
Number of Journal Records
Number of OP_Once instructions
Number of OP_Once instructions so far
Number of ORDER BY clause terms
Number of ORDER BY terms satisfied by indices
Number of PMAs currently in file
Number of PMAs stored in pTemp1
Number of PMAs to read
Number of PRIMARY KEY memory cells
Number of PtrMap pages to be freed
Number of RBU VFS in the stack
Number of Records in the journal
Number of SELECT statements seen
Number of SHARED locks held
Number of SQL function arguments
Number of TryBeginRead attempts
Number of UChar elements in pInput
Number of UTF-8 characters in zTabName
Number of VDBEs currently running
Number of VM memory registers
Number of WAL frames backfilled into DB
Number of XOR operations done
Number of active OP_VDestroy operations
Number of active VDBEs that read and write
Number of active VDBEs that read or write
Number of additional bytes
Number of aliased result set columns
Number of args (always 2)
Number of arguments in subprograms
Number of arguments to VUpdate
Number of arguments to the function
Number of arguments to the module
Number of arguments used so far
Number of assigned cursor values
Number of attached databases
Number of backends currently in use
Number of backtraces on this alloc
Number of backup operations reading this btree
Number of bits in the bitmap array.
Number of bits that are set - only valid for aHash element.
Number of block extensions.
Number of buckets in the hash table
Number of buffers currently checked out
Number of bytes actually read from file
Number of bytes available on the local btree page
Number of bytes in 'buf'
Number of bytes in a page
Number of bytes in a varint
Number of bytes in aData
Number of bytes in aPoslist
Number of bytes in aRec
Number of bytes in buffer pA
Number of bytes in buffer pB
Number of bytes in buffer z
Number of bytes in buffer zRoot
Number of bytes in buffer zTerm
Number of bytes in current position list
Number of bytes in current term
Number of bytes in header
Number of bytes in input
Number of bytes in key
Number of bytes in lhs input
Number of bytes in nKey
Number of bytes in new PMA
Number of bytes in pList
Number of bytes in rhs input
Number of bytes in string zName
Number of bytes in term prefix
Number of bytes in term suffix
Number of bytes in text at z
Number of bytes in the BLOB
Number of bytes in the content of a field
Number of bytes in the key
Number of bytes in the record
Number of bytes in token
Number of bytes in zFunc
Number of bytes in zPathname
Number of bytes in zTerm
Number of bytes of URI args at *zUri
Number of bytes of available data
Number of bytes of cell payload
Number of bytes of data
Number of bytes of data space
Number of bytes of data to be bound
Number of bytes of extra space to alloc
Number of bytes of header space
Number of bytes of leaf data written
Number of bytes of memory available to this allocator
Number of bytes of prefix compression
Number of bytes of space to allocate
Number of bytes of the blob to include in output
Number of bytes of the string text to include in output
Number of bytes required for *p
Number of bytes required on leaf page
Number of bytes still to come
Number of bytes to allocate
Number of bytes to allocate for iterator
Number of bytes to copy
Number of bytes to lock
Number of bytes to lock or unlock
Number of bytes to read
Number of bytes to return.
Number of bytes to write
Number of bytes written
Number of bytes written by seekAndWrite
Number of bytes yet to be written
Number of captured subpatterns
Number of cells in page pPage
Number of cells on page
Number of cells on the page
Number of cells on this page, local and ovfl
Number of cells to add to pPg
Number of characters in function name
Number of characters in the name
Number of characters in this token
Number of characters in zCharSet
Number of characters in zName
Number of characters so far in this 'packet'
Number of chars in 'buf' (utf-8 chars)
Number of child nodes
Number of child processes that will get created to service requests
Number of children of returned node
Number of children that must disable us
Number of cols in current table
Number of columns beyond the key columns
Number of columns forming the key
Number of columns in current object
Number of columns in index
Number of columns in index + pk/rowid
Number of columns in index + rowid
Number of columns in index being sampled
Number of columns in one row of the result set
Number of columns in pIdx.
Number of columns in parent key
Number of columns in record
Number of columns in result set
Number of columns in stat4 records
Number of columns in table
Number of columns in table zName
Number of columns in the FTS table
Number of columns in the PRIMARY KEY
Number of columns in the constructed index
Number of columns in the data
Number of columns in the recursive table
Number of columns in the result
Number of columns in the result set
Number of columns in the sorting index
Number of columns in this key
Number of columns in this table
Number of columns in zTab
Number of columns indexed by pIdx
Number of columns must be the same in tab1 and tab2
Number of columns of data
Number of columns or fields in the key
Number of columns stored in the index
Number of columns that show through to the output.
Number of columns to test for changes
Number of components of the PRIMARY KEY
Number of compound terms processed so far
Number of conch taking failures
Number of constraint terms
Number of constraints in p
Number of contiguous term-less nodes
Number of coordinates
Number of cursors for child frame
Number of cursors required
Number of databases with an active write-transaction
Number of databases with an active write-transaction that are candidates for a two-phase commit using a master-journal
Number of days since 1st day of year
Number of db changes made since last reset
Number of deferred fk violations
Number of deferred imm fk.
Number of digits in a double variable.
Number of dirty pages as a percentage of the configured cache size
Number of distinct values in index
Number of docs in database
Number of elements along histogram axes.
Number of elements in a bitmap array.
Number of elements in aIndent
Number of elements in aList
Number of elements in apVal
Number of elements in argv array
Number of elements in list aMerge
Number of elements in pTabList
Number of elements in regKey for WITHOUT ROWID
Number of elements in the data array
Number of elements in the input array
Number of elements left to test
Number of elements summed
Number of entries currently in hash
Number of entries in Index.aAvgEq
Number of entries in a hash table
Number of entries in aConstraint
Number of entries in aMem
Number of entries in aOnceFlag
Number of entries in apCsr
Number of entries in apSub
Number of entries in array
Number of entries in the cursor RtreeNode cache.
Number of entries in the hash table
Number of entries in the input hashtable
Number of entries in this segment
Number of entries in this table
Number of entries on one ptrmap page
Number of entries with this hash
Number of entries without a matching leave
Number of equality constraints
Number of errors encountered
Number of errors encountered while resolving names
Number of errors reported
Number of errors seen
Number of expressions on the list
Number of extra 0 bytes to append to data
Number of extra columns needed
Number of extra copies of last page
Number of extra registers before regResult
Number of extra registers needed
Number of extra registers to allocate
Number of fields in PRIMARY KEY.
Number of fields in pRec
Number of fields in test sample
Number of fields in the header
Number of fields in the record
Number of fields in the table or index
Number of fragmented bytes on pPage
Number of fragmented bytes on the page
Number of fragments in this snippet
Number of frames in pFrame list
Number of free bytes on the page
Number of freelist hash slots
Number of full pages read from DB
Number of full pages written to DB
Number of function arguments
Number of function parameters
Number of hash collisions
Number of hash collisions remaining
Number of header fields parsed so far
Number of hidden columns if TABLE is virtual
Number of identifiers on the list
Number of index columns including rowid
Number of index columns w/o the pk/rowid
Number of indices that need updating
Number of initial index columns to skip
Number of input segments
Number of input segments on best level
Number of instance matches this row
Number of instructions in the program
Number of integers output by cArg
Number of internal buffer hits.
Number of items on the currently line.
Number of iterators in aIter not at EOF
Number of iterators used
Number of iterators/phrases
Number of key columns
Number of key columns in pIndex
Number of key columns in the index
Number of key fields in each record
Number of labels used
Number of leaf blocks added this trans
Number of leaf pages flushed
Number of leaf pages in unit of work
Number of leaf pages left to write
Number of leaf pages per optimize step
Number of leaf pages written
Number of leaf pages yet to  be written
Number of leaves on the trunk of the freelist
Number of left-most columns to skip
Number of level-0 PMAs to merge
Number of levels in this index
Number of loaded extensions
Number of locks in aTableLock
Number of locks to acquire or release
Number of locks to hold
Number of malloc size increments to track.
Number of matchable phrases in query
Number of matching column names
Number of matching table names
Number of memory cells for child frame
Number of memory cells in the row key
Number of memory cells required
Number of memory cells used so far
Number of memory locations currently allocated
Number of memory registers for sub-program
Number of messages written to zErrMsg so far
Number of mmap pages currently outstanding
Number of names resolved by this context
Number of neighbors on either side of pPage
Number of nested brackets
Number of nested calls to VdbeExec()
Number of nested calls to sqlite3BtreeEnter()
Number of nested calls to the parser/code generator
Number of nested loop
Number of nested statement-transactions
Number of non-benign errors
Number of non-transaction savepoints
Number of non-wildcard prefix characters
Number of objects currently in use
Number of objects on pFresh
Number of opcodes for progress callback
Number of opcodes to add
Number of open cursors
Number of open transactions (read + write)
Number of output leaves just written
Number of outputs for the new entry
Number of outputs for this subquery
Number of outstanding file locks
Number of outstanding xFetch references
Number of outstanding xFetch refs
Number of overflow pages to load doclist
Number of padding characters (total - input size)
Number of pages in database after autovacuuming
Number of pages in database file
Number of pages in pList
Number of pages in the LRU list
Number of pages in the database
Number of pages in the database according to hdr
Number of pages in the database file
Number of pages left to copy
Number of pages on the freelist
Number of pages on the freelist initially
Number of pages on the overflow chain
Number of pages per doc loaded
Number of pages starting at pg1 to journal
Number of pages still on the free-list
Number of pages to use in the cache
Number of pages written to journal
Number of parameters to the SQL function
Number of pending entries in the queue
Number of phrase instances
Number of phrases in expression
Number of phrases in query
Number of phrases seen so far
Number of pointers to this Table
Number of pointers to this structure
Number of pragmas: 56 on by default, 69 total.
Number of pragmas: 60 on by default, 73 total.
Number of prefix indexes
Number of previously allocated VDBE cursors
Number of prior equality constraints on same index
Number of purgeable pages allocated
Number of queued entries by iLevel
Number of reader locks obtained
Number of records written to sub-journal
Number of referenced pages
Number of references to columns in other FROM clauses
Number of references to columns in pSrcList
Number of references to this KeyInfo object
Number of references to this node
Number of references to this one
Number of references to this structure
Number of registers (some are magic, such as network I/O).
Number of registers allocated
Number of registers left to copy
Number of registers to allocate
Number of remaining savepoints after this op.
Number of reported tokens (one for the "unexpected", one per "expected").
Number of result columns
Number of result columns returned by SELECT
Number of result columns written here
Number of result rows written here
Number of right-hand side symbols in the rule
Number of rows already processed for the current table/index.  RBU_STATE_PROGRESS: Trbul number of sqlite3rbu_step() calls made so far as part of this rbu update.
Number of rows for a single term
Number of rows in index
Number of rows in table
Number of rows in the entire table
Number of rows in the result
Number of rows in the table
Number of scratch buffers
Number of segment-iters in use
Number of segments in incr-merge
Number of segments not deleted
Number of segments that share a docid
Number of segments to merge
Number of sets used so far
Number of sign chars.
Number of significant digits returned
Number of sorting key columns, including OP_Sequence
Number of sub-vdbes seen so far
Number of subqueries that the label is moving
Number of symbolic links followed so far
Number of syntax errors so far.
Number of szAtom sized blocks in zPool
Number of table columns
Number of tables or subqueries in the FROM clause
Number of tables to check.
Number of terms contributing to sumEq
Number of terms in subquery FROM clause
Number of terms in the ORDER BY clause
Number of terms in the join
Number of terms in the result set
Number of terms written to node so far
Number of the page to fetch
Number of the page to get
Number of the rule by which to reduce
Number of times each op has been executed
Number of times lookaside has been disabled
Number of times stack has grown.
Number of times table has been busy
Number of times this instruction was executed
Number of tokens desired for snippet
Number of tokens in each fragment
Number of tokens in extracted snippet
Number of tokens in phrase
Number of tokens in query
Number of tokens in table
Number of tokens in the phrase
Number of tokens seen so far
Number of tokens to shift before error messages enabled.
Number of tokens to shift snippet by
Number of trailing arguments for rank()
Number of u32 elements in match-info
Number of u32 values in hash table.
Number of unixShm objects pointing to this
Number of unused bytes at end of each page
Number of unused bytes on page
Number of unused bytes on the page
Number of unused pcache slots
Number of usable bytes on a page
Number of usable bytes on each page
Number of user columns in table
Number of users of pInitMutex
Number of users of this page
Number of valid bytes in zDb
Number of valid fields currently in pRec
Number of values in record
Number of values to buffer
Number of vector elements in comparison
Number of virtual machine steps
Number of virtual tables to lock
Number of winShm objects pointing to this
Number of words in this segment.
Number of work-quanta to perform
Number of zero bytes at the end of the record
Number of zero-bytes to append
Number terms in the ORDER BY clause
Number used to identify the index
Numbered group recursion test
Numbered group used test
Numbers are always smaller than strings int this function as it anyway doesn't make much sense to compare two different data types.
Numbers are converted using sqlite3_snprintf().
Numbers for RMATCH calls.
Numeric SQL variables
Numeric achieves this by converting itself to a Float then invoking Float#ceil.
Numeric allows instantiation of heap-allocated objects.
Numeric constants that encode the journalmode.
Numeric implements this by converting an Integer to a Float and invoking Float#floor.
Numeric implements this by converting its value to a Float and invoking Float#truncate.
Numeric implements this by converting itself to a Float and invoking Float#round.
Numeric pack types will return numbers, a and A will return strings, f and d will return doubles.
Numeric session.name won't work at all
Numeric type of left operand
Numeric type of right operand
Numeric types are converted directly (with floating point numbers being truncated).
Numerics are immutable values, which should not be copied.
O+ disables creation of interned strings by regular PHP compiler, instead, it creates interned strings in shared memory when saves a script.
O+ overrides PHP chdir() function and remembers the current working directory in ZCG(cwd) and ZCG(cwd_len).
O+ tracks changes of "include_path" directive.
OBJECTS_FIXME: This whole extension needs going through.
OBSOLETE COMMENT 1: Restriction 3:  If the subquery is a join, make sure the subquery is  not used as the right operand of an outer join.
OBSOLETE COMMENT 2: Restriction 12:  If the subquery is the right operand of a left outer join, make sure the subquery has no WHERE clause.
OCI likes to stick non-terminated strings in things
OCIClientVersion only available 10.2 onwards
OCIPing available 10.2 onwards
OCISessionBegin returns OCI_SUCCESS_WITH_INFO when user's password has expired, but is still usable.
OCaml: Fsnotify.fsenv
OE and Rc flag (see ALT_SET_FLAGS).
OE_Abort for IMMEDIATE, OE_Rollback for DEFERRED
OE_Abort, OE_Ignore, OE_Replace, or OE_None
OK to convert here since if str_len were big, convert above would fail
OK to factor out constants
OK to return IN_INDEX_NOOP
OK to spill pager cache
OK to update SQLITE_MASTER
OK, get an integer and set the index.
OK, now we are ready to create a new one.
OK, now we can do the recursion.
OK, now we can get on with the real code of the function.
OK, we can now run the match.
OMIT_TEMPDB is set to 1 if SQLITE_OMIT_TEMPDB is defined, or 0 afterward.
ON CONFLICT algorithm.
ON CONFLICT policy to code trigger program with
ON DELETE and ON UPDATE actions, respectively
ON and USING clauses are converted into extra terms of the WHERE clause.
ON and USING clauses are shifted into WHERE statements Wildcards "*" and "TABLE.*" in result sets are expanded.
ON clause terms may not be used with an index on left table of a LEFT JOIN.
ON, Packed packet headers main header
ON, Packet length main header
ON, Tile part length main header
ONE     (input) REAL Must contain the value 1.0 This is passed to prevent the compiler from optimizing away this code.
ONEPASS defaults to OFF
ONEPASS is ok with multiple rows
ONEPASS is valid for multiple rows
ONEPASS valid for a single row update
ONEPASS_MULTI:  One-pass approach - any number of rows may be deleted.
ONEPASS_OFF or _SINGLE or _MULTI
ONEPASS_OFF, _SINGLE, or _MULTI.
ONEPASS_OFF, or _SINGLE, or _MULTI
ONEPASS_SINGLE: One-pass approach - at most one row deleted.
ONIG_DEBUG_PARSE_TREE
ONIG_DEBUG_STATISTICS
OO, Coding style component
OO, Progression order default
OO, Quantization component
OO, Region of interest
OOB data is not supported in the communication domain associated with +socket+, or +socket+ is unidirectional and supports only send operations Errno::ESHUTDOWN - +socket+ has been shutdown.
OOM detected prior to this routine
OOM will cause exit after sqlite3Select()
OPEN_ALWAYS mode sets the last error to ERROR_ALREADY_EXISTS but the CreateFile operation succeeds
OPFLAG_FORDELETE or zero, as appropriate
OPTIMIZATION-IF-FALSE
OPTIMIZATION-IF-FALSE       - This branch is allowed to alway be true and the correct answer is still obtained, though perhaps more slowly.
OPTIMIZATION-IF-TRUE        - This branch is allowed to alway be false and the correct answer is still obtained, though perhaps more slowly.
OPTS    (input) CHARACTER*(*) The character options to the subroutine NAME, concatenated into a single character string.
OPT_CALL_CFUNC_WITHOUT_FRAME
OPT_CALL_THREADED_CODE
OP_CCLASS can match mb-code.
OP_Column never called on virtual table
OP_Column only used for length()
OP_Column only used for typeof()
OP_Column/OP_Rowid references to this table
OP_Column: Ephemeral output is ok
OP_Compare: use the permutation
OP_Copy must be used instead.
OP_Delete does pre-update-hook only
OP_Delete: index in a DELETE op
OP_Delete: keep cursor position
OP_Destroy 5 0  and root page 5 happened to be the largest root-page number in the database, then root page 5 would be moved to page 4 by the  "OP_Destroy 4 0" opcode.
OP_Destroy stores an in integer r1.
OP_Found will use a composite key
OP_Found will use an unpacked key
OP_KETRPOS is a possessive repeating ket.
OP_MaxPgcnt enforces this
OP_ONCE removes everything in case of a backtrack, so we don't need to explicitly release the STR_PTR.
OP_Open should use BTREE_FORDELETE
OP_Open** cursor uses EQ seek only
OP_Open** used to open bulk cursor
OP_OpenEphem opcodes related to this select
OP_OpenRead or OP_OpenWrite
OP_OpenWrite cursors for the ONEPASS opt
OP_RECURSE items contain an offset from the start of the regex to the group that is referenced.
OP_Rowid becomes OP_Null.
OP_Seek always uses a single rowid
OP_XCLASS cannot occur in 8-bit, non-UTF mode.
OR in the Bits per Pixel
OR using multiple indices
ORA-00022: invalid session id
ORA-00955: name is already used by an existing object
ORA-03133: end of file on communication channel
ORA-12154: TNS:could not resolve service name
ORDER BY correctly sorts the inner loop
ORDER BY of joins via index
ORDER BY or GROUP BY or DISTINCT clause to check
ORDER BY processing for max() func
ORDER BY processing for min() func
ORDER BY terms that are already an integer between 1 and N are unmodified.
ORDER BY terms that are expressions are matched against result set expressions of compound SELECT beginning with the left-most SELECT and working toward the right.
ORDER BY terms that are integers outside the range of 1 through N generate an error.
ORDER BY terms to skip
ORDER BY xyz  is transformed to:  SELECT xyz FROM ...
ORDERBY+LIMIT on the inner loop
OS code for Amiga hosts
OS code for Atari hosts
OS code for CP/M hosts
OS code for MSDOS hosts
OS code for Mac OS hosts
OS code for OS2 hosts
OS code for QDOS hosts
OS code for RISC OS hosts
OS code for TOPS-20 hosts
OS code for UNIX hosts
OS code for VM OS hosts
OS code for VMS hosts
OS code for Win32 hosts
OS code for Z-System hosts
OS code for unknown hosts
OS functions to use for IO
OS has to be configured properly (e.g. https://wiki.debian.org/Hugepages#Enabling_HugeTlbPage) You may verify huge page usage with the following command: `grep "Huge" /proc/meminfo`
OS support note: BSDs have explicit_bzero().
OSX doesn't return a from result for connection-oriented sockets
OTHERWISE:  If neither case 1 nor case 2 apply, then leave the eOperator set to zero.
OTHERWISE:  If none of cases 1, 2, or 3 apply, then leave the eOperator set to zero.
OUT params result set.
OUT: "Score" for this snippet
OUT: *ppToken is the token text
OUT: *pzToken is the token text
OUT: 0 for MATCH, or else an op2 value
OUT: A pointer to the prepared statement
OUT: Acquired page object
OUT: Allocated Fts3SegReader
OUT: Allocated Wal handle
OUT: Allocated seg-reader cursor
OUT: Array of boolean - true for PK cols
OUT: Array of booleans - true for PK col
OUT: Array of column names for table
OUT: Array of indexes for this table
OUT: Best snippet found
OUT: Bitmask of phrases covered
OUT: Bitmask of terms to highlight
OUT: Blob data in malloc'd buffer
OUT: Block id of last entry written
OUT: Block number in next layer down
OUT: Buffer containing changeset
OUT: Buffer containing output changeset
OUT: Byte offset of end of token in input buffer
OUT: Byte offset of token in input buffer
OUT: Bytes actually loaded
OUT: Bytes in returned value
OUT: Bytes of string content
OUT: Bytes stored locally
OUT: Caller should free this pointer
OUT: Changeset iterator handle
OUT: Columns for imposter table
OUT: Compiled statement
OUT: Configuration object
OUT: Created tokenizer
OUT: Created tokenizer cursor
OUT: Data for root node
OUT: Database page number for frame
OUT: Deserialized object
OUT: Docid and doclist for new entry
OUT: Docid for row just inserted
OUT: End of parsed string
OUT: End-of-file flag
OUT: Ending offset of token
OUT: Error message (if any)
OUT: Error message (sqlite3_malloc)
OUT: Error message, if any
OUT: Error number if error occurs
OUT: Expression element
OUT: Filename component of URI
OUT: Final checksum value output
OUT: First token of proposed snippet
OUT: Frame number (or zero)
OUT: Global maximum cache size
OUT: Head of merged list
OUT: Imposter PK clause
OUT: Inverse of input
OUT: Inverse of pChangeset
OUT: Jump to this label to skip partial index
OUT: Length of *ppOffsetList in bytes
OUT: List length pointer
OUT: Malloc'd array of column names
OUT: Malloc'd doclist
OUT: Malloced result buffer
OUT: Map of index columns in pFKey
OUT: Mask of WhereLoops to run in reverse order
OUT: MemPage handle (may be NULL)
OUT: New changeset iterator handle
OUT: New cursor object
OUT: New db size (or 0 if not commit)
OUT: New iterator object
OUT: New merge-engine
OUT: New session object
OUT: New sqlite3_vtab object
OUT: New tokenizer handle
OUT: New value (or NULL pointer)
OUT: New value object (or NULL)
OUT: New virtual table
OUT: Next free index at iAbsLevel+1
OUT: Next overflow page number
OUT: Normalized text for token
OUT: Number of FK violations
OUT: Number of backfilled frames in WAL
OUT: Number of bytes at *paToken
OUT: Number of bytes consumed
OUT: Number of bytes in output changeset
OUT: Number of bytes in token
OUT: Number of columns in table
OUT: Number of entries in output array
OUT: Number of frames in WAL
OUT: Number of leaf pages in b-tree
OUT: Number of phrases in query
OUT: Number of tokens in query
OUT: Number of tokens returned before this one
OUT: Old value (or NULL pointer)
OUT: Parsed query structure
OUT: Permissions of zFile
OUT: Permissions to open file with
OUT: Pointer to buffer containing data
OUT: Pointer to current position-list
OUT: Pointer to doclist for pTerm
OUT: Pointer to hash index
OUT: Pointer to mapping
OUT: Pointer to output buffer
OUT: Pointer to page number array
OUT: Pointer to position list
OUT: Pointer to table name
OUT: Pointer to unused portion of zSql
OUT: Position integer of token
OUT: Prepared SELECT statement
OUT: Prepared statement handle
OUT: Rank function arguments
OUT: Rank function name
OUT: Result of comparison
OUT: Results of parse
OUT: Return data in this Mem structure.
OUT: Return the Pager structure here
OUT: Returned database handle
OUT: SQLITE_INSERT, DELETE or UPDATE
OUT: SQLite db handle
OUT: Score of snippet pFragment
OUT: SegReader for pending-terms
OUT: Selected child node
OUT: Selected leaf page
OUT: Set for new term
OUT: Set to malloced error message
OUT: Set to point to affinity string
OUT: Set to true if EOF
OUT: Set to true if PK row is found
OUT: Set to true if call is a no-op
OUT: Set to true if constraint may cause a replace
OUT: Set to true if dequoting required
OUT: Set to true if really a match
OUT: Set to true if row really does exist
OUT: Size of WAL log in frames
OUT: Size of array *pazCol
OUT: Size of blob data
OUT: Size of buffer at *ppChangeset
OUT: Size of buffer at *ppOut
OUT: Size of current key in bytes
OUT: Size of doclist in bytes
OUT: Size of output buffer in bytes
OUT: Size of position list in bytes
OUT: Size of record in bytes
OUT: Size of root node in bytes
OUT: Space to write result to
OUT: Starting offset of token
OUT: Statement handle
OUT: Store cursor handle here
OUT: Sum of PCache1.nMin for purgeable caches
OUT: Temp register to free
OUT: The affected (or effected) rowid
OUT: The page number of the next page
OUT: Tokenization cursor
OUT: Tokenizer (if applicable)
OUT: Total number of OR nodes in expr.
OUT: Total number of frames checkpointed
OUT: Total number of pages available for recycling
OUT: Total number of pages cached
OUT: Total number of tokens in phrase.
OUT: Trbul number of columns
OUT: True for an 'indirect' change
OUT: True if *might* be new term
OUT: True if change is indirect
OUT: True if iterator is at EOF
OUT: True if plan uses an IN(...) op
OUT: True if there are NULL values in PK
OUT: True if value was extracted
OUT: True to remove PK row and retry
OUT: UPDATE statement handle
OUT: Unique index on parent table
OUT: User data for *pxFunc
OUT: Value from conflicting row
OUT: Value of original database size field
OUT: Value read from the nRec field
OUT: Values appended to the record
OUT: WITH clause return value belongs to
OUT: Wal frame index of next page
OUT: Write encoded frame here
OUT: Write new node image here
OUT: Write the answer here
OUT: Write the cell contents here
OUT: Write the score here
OUT: Write the thread object here
OUT: bm25-data object for this query
OUT: gid to set on the file
OUT: malloc'd buffer containing str/bw
OUT: number of columns
OUT: pointer to doclist
OUT: score for the cell
OUT: size of doclist in bytes
OUT: sqlite3_malloc'd error message
OUT: stats written here
OUT: term (nul-terminated)
OUT: uid to set on the file
OUT: visibility of the cell
OUTPUT: Collation sequence name
OUTPUT: Declared data type
OUTPUT: True if NOT NULL constraint exists
OUTPUT: True if column is auto-increment
OUTPUT: True if column part of PK
OUT_CHAR is the actual routine for writing the characters.
OVECTOR(0) is never equal to SLJIT_S2.
OVECTOR(1) contains the "string begin - 1" constant.
OVERVIEW   The RBU extension requires that the RBU update be packaged as an SQLite database.
O_CLOEXEC is available since Linux 2.6.23.
O_NOFOLLOW to prevent us from following evil symlinks
O_NONBLOCK and O_NOCTTY is meaningless if /dev/urandom correctly points to a urandom device.
Object being parsed at the point of error
Object comparisons may raise an exception in Python 3
Object completely outside of query region
Object containing old values
Object describing the transient index
Object for iterating through a single segment, visiting each term/rowid pair in the segment.
Object for iterating through the merged results of one or more segments, visiting each term/rowid pair in the merged data.
Object for pair-wise doclist merging
Object fully contained within query region
Object handlers for Transliterator class (and subclasses)
Object inherits from BasicObject which allows creating alternate object hierarchies.
Object iterator for column names
Object mixes in the Kernel module, making the built-in kernel functions globally accessible.
Object partially overlaps query region
Object reference count
Object store not available during request shutdown
Object to allocate and return
Object to pass to xBestIndex()
Object used to iterate through all "coalesced phrase instances" in  a single column of the current row.
Object used to lock page 1
Object used to represent a single file opened and mmapped to provide shared memory.
Object used to represent an shared memory buffer.
Object used to write leaf nodes
Object used to write to disk
Object used to write to the file
ObjectSpace also provides support for object finalizers, procs that will be called when a specific object is about to be destroyed by garbage collection.
Objects are rarely larger than 2MiB limit of a 3-byte varint.
Objects created via ZEND_NEW are only fully initialized after the DO_FCALL (constructor call)
Objects that are marked as tainted will be restricted from various built-in methods.
Obsoleted by DTrace probes
Obtain a CHECKPOINT lock and then backfill as much information as we can from WAL into the database.
Obtain a RESERVED lock on the database file.
Obtain a buffer containing a changeset representing the concatenation of all changesets added to the group so far.
Obtain a changeset object containing all changes recorded by the  session object passed as the first argument.
Obtain a lock on the table whose root page is iTab.
Obtain a patchset object containing all changes recorded by the  session object passed as the first argument.
Obtain a pointer to a mapping of a single 32KiB page of the *-shm file.
Obtain a pointer to the iPage'th page of the wal-index. The wal-index is broken into pages of WALINDEX_PGSZ bytes.
Obtain a reference to a memory mapped page object for page number pgno.
Obtain a reference to an r-tree node.
Obtain a reference to the index structure and allocate a new segment-id for the new level-0 segment.
Obtain a reference to the leaf node that contains the entry  about to be deleted.
Obtain a reference to the root node to initialize Rtree.iDepth
Obtain a snapshot handle for the snapshot of database zDb currently  being read by handle db.
Obtain all b-tree mutexes before making any calls to BtreeRollback().
Obtain an exclusive lock on all byte in the locking range not already locked by the caller.
Obtain an indication as to the current stage of an RBU update or vacuum.
Obtain authorization to do a recursive query
Obtain or release the WRITER lock.
Obtain or release the mutex needed to access global data structures.
Obtain permyriadage (permyriadage is to 10000 as percentage is to 100)  progress indications for the two stages of an RBU update.
Obtain relevant filename and lineno
Obtain the BtShared mutex associated with B-Tree handle p.
Obtain the STATIC_MASTER mutex.
Obtain the active umask.
Obtain the average docsize (in pages).
Obtain the current thread id
Obtain the file timestamps, *before* actually compiling them, otherwise we have a race-condition.
Obtain the page at pgnoRoot
Obtain the page from this cache
Obviously the CRT version will be useful more often.
Obviously, in a real application you might want to do things other than print them.
Of course, it is not POSIX compliant.
Of course, this constant is MRI specific.
Of course, updating the input segments also involves deleting a bunch of blocks from the segments table.
Of these, we don't use "min content" because we don't support default minimum main sizes (see above for details).
Offset could be treated as a long
Offset from start of page to first cell pointer
Offset from the beginning of the file
Offset from the start of data to return bytes from.
Offset in CREATE TABLE stmt to add a new column
Offset in pointer map page
Offset in zDoc of end of token
Offset in zDoc of start of token
Offset into the file to begin writing at
Offset is set zero to mark that this bracket is still open
Offset must be treated as a string
Offset of entry in pointer map
Offset of first byte to lock
Offset of first rowid on leaf
Offset of first term on leaf
Offset of first type in header
Offset of free space in list.aMemory
Offset of header in journal file
Offset of header on pPage
Offset of header on pPg
Offset of journal header being read
Offset of pFd to begin writing at
Offset of pFile to begin writing at
Offset of page in file
Offset of record to playback
Offset of space for 4-byte poslist size
Offset of start of buffer in file
Offset of this term from read positions
Offset on new first leaf page
Offset the negative minutes
Offset the negative seconds
Offset to beginning of page header
Offset to cell content of cell being deleted
Offset to first byte to be locked/unlocked
Offset to get elements from
Offset to linkage control of previous segment of stack.
Offset to next unparsed byte of the header
Offset to overflow page number.
Offset to stack base.
Offset to start writing file at
Offset to the cell content area
Offset to the cell pointer array
Offset to the page header
Offset to the second branch
Offset to the start of the cell content area
Offset to the start of the cell pointer array
Offset within aMemory of next record
Offset within buffer to read from
Offset within poslist
Offsets into aPoslist for current row
Offsets of each character in utf-8 input
Often, sample i of each block of N effective samples has (i+1) fields.
Often, v-tables store their data in other SQLite tables, which are queried from within xNext() and other v-table methods using prepared queries.
Oh, and it is also binary safe, ie it can handle strings with embedded NULLs, so long as the real length is passed in.
Oid is unsigned int, we don't need this code, where LONG is wider
Ok for sqlite3_open_v2()
Ok to return a row more than once
Ok to use one-pass algorithm for UPDATE/DELETE
Ok, parse the command line, building a list of CmdLineElements.
Ok, we're doing some weirdness here...
Old FromDims set memory to zero --- some algorithms relied on that.
Old fashioned tar archive
Old session creation semantics when session pool cannot be used Eg: privileged connect/password change
Old value for iStartBlock
Old version of subfile tag
Older versions of RowSet allowed that, but as the capability was not used by the code generator, it was removed for code economy.
Older versions of SQLite used an optional THREADSAFE macro.
Olympus has this padded with trailing spaces.
Olympus specific tags
Omit all terms smaller than this
Omit children but continue walking siblings
Omit constant folding optimizations
Omit error if index already exists
Omit this entire file if SQLITE_ENABLE_UNLOCK_NOTIFY is not defined.
Omit this section if SQLITE_ENABLE_LOCKING_STYLE is turned off
Omit this section if SQLITE_ENABLE_LOCKING_STYLE is turned off or if compiling for VXWORKS.
Omit unused tables in joins
Omitted if leaf flag is set.
Omitted if no overflow  Overflow pages form a linked list.
Omitted if the zerodata flag is set.
On 2nd and subsequent uses, the original AutoincInfo structure is used.
On 32-bit SPARC, GCC by default generates SPARC V7 code that may require 8-byte word alignment.
On ASCII machines, this is just an upper-to-lower case map.
On CRuby implementation, _BlockingOperation_ is any operation executed without GVL.
On EBCDIC machines we also need to adjust the encoding.
On EOF, put NUL into the buffer and return.
On Linux (mainly Ubuntu 13.04) /etc/nsswitch.conf has mdns4 and it cause getaddrinfo to return EAI_SYSTEM/ENOENT.
On Linux, memfd_reserve is only used to reserve memory that is mmap'd to the memfd file.
On Lion, the base moved a little, so while the math above still applies, the base is different.
On Mac OS X (Mountain Lion), NGROUPS is 16.
On Mac OS X 10.5.x (Leopard) or earlier, exec() may return ENOTSUP if the process have multiple threads.
On NetBSD, a new thread inherits the signal stack of the creating thread.
On OS X on an msdos filesystem, the inode number is reported incorrectly for zero-size files.
On Py3, allow only non-empty Unicode strings as field names
On Solaris because resuming any Fiber caused SEGV, for some reason.
On Unix use the (usual) TMPDIR environment variable.
On Unix, the stack can be large, and this works fine.
On Unix-based systems, permissions are viewed as a set of three octets, for the owner, the group, and the rest of the world.
On VxWorks, a unique file id must be based on the canonical filename.
On Win32 locked files that are closed without being explicitly unlocked will be unlocked only when "system resources become available".
On WinNT/2K/XP systems, LockFileEx() and UnlockFileEx() are available, which means we can use reader/writer locks.
On Windows 8 or greater, we use a more precise symbol to obtain the system time, which is dynamically.
On Windows we don't have ability to extend huge blocks in-place.
On Windows, SO_REUSEADDR is recommended only for broadcast UDP sockets
On Windows, we expect regular chgrp to fail silently by default
On Windows, we expect regular chown to fail silently by default
On a 2's complement machine, negating the most negative integer results in a number that cannot be represented as a signed integer.
On a 32 bit system, BASE is 10000, indicating that calculation is done in groups of 4 digits.
On a 60 MHz Pentium this takes 34 msec, so you would need 30 seconds to build a 1000 entry dictionary...
On a UDP-datagram socket this error indicates a previous send operation resulted in an ICMP Port Unreachable message.
On a big-endian architecture, it returns the value that would be produced by intepreting the 4 bytes of the input value as a little-endian integer.
On a big-endian architecture, it returns the value that would be produced by interpreting the 4 bytes of the input value as a little-endian integer.
On a checkpoint, the WAL is first VFS.xSync-ed, then valid content of the WAL is transferred into the database, then the database is VFS.xSync-ed.
On a little-endian architecture, it returns the u32 value that results from interpreting the 4 bytes as a big-endian value.
On a machine with IEEE extended-precision registers, it is necessary to specify double-precision (53-bit) rounding precision before invoking strtod or dtoa.
On a permanent failure (such an I/O error or an SQLITE_BUSY because another process is running recovery) return a positive error code.
On an INSERT, pkChng will only be true if the INSERT statement provides an integer value for either the rowid column or its INTEGER PRIMARY KEY alias.
On average, only two or three slots in each index block need to be examined in order to either find the last entry for page P, or to establish that no such entry exists in the block.
On big-endian machines, we must arrange the bytes in the right order.
On binary machines with a guard digit (almost all machines) it does not change DLAMDA(I) at all.
On binary machines with a guard digit (almost all machines) it does not change DSIGMA(I) at all.
On calling this method, both the input and the output buffers of the stream are flushed.
On commit, recalculate checksums from here
On destruct return 1 else 0.
On each iteration over the MapIterArray object created above, we'll take the current data pointers from that and reset this NpyIter object using those data pointers, and then trigger a buffer copy.
On entry D(1:NL,1:NL) contains the singular values of the upper block, and D(NL+2:N) contains the singular values of the lower block.
On entry,  ALPHA specifies the scalar  alpha.
On entry,  BETA  specifies the scalar  beta.
On entry,  K  specifies  the number of columns of the matrix op( A ) and the number of rows of the matrix op( B ).
On entry,  M  specifies  the number  of rows  of the  matrix op( A )  and of the  matrix  C.
On entry,  N  specifies the number  of columns of the matrix op( B ) and the number of columns of the matrix C.
On entry,  N specifies the order of the matrix C.
On entry, ALPHA specifies the scalar alpha.
On entry, BETA specifies the scalar beta.
On entry, DIFL(I) is the distance between I-th updated (undeflated) singular value and the I-th (undeflated) old singular value.
On entry, DIFR(I, 1) contains the distances between I-th updated (undeflated) singular value and the I+1-th (undeflated) old singular value.
On entry, GIVNUM(*, 2 *I -1 : 2 * I) records the C- and S- values of Givens rotations performed on the I-th level on the computation tree.
On entry, GIVPTR( I ) records the number of Givens rotations performed on the I-th problem on the computation tree.
On entry, INCX specifies the increment for the elements of X.
On entry, INCY specifies the increment for the elements of Y.
On entry, LDA specifies the first dimension of A as declared in  the  calling  (sub)  program.
On entry, LDA specifies the first dimension of A as declared in the calling (sub) program.
On entry, LDB specifies the first dimension of B as declared in  the  calling  (sub)  program.
On entry, LDB specifies the first dimension of B as declared in the calling (sub) program.
On entry, LDC specifies the first dimension of C as declared in  the  calling  (sub)  program.
On entry, M specifies the number of rows of B.
On entry, M specifies the number of rows of the matrix A.
On entry, N specifies the number of columns of B.
On entry, N specifies the number of columns of the matrix A.
On entry, N specifies the order of the matrix A.
On entry, PERM(*, I) records permutations done on the I-th level of the computation tree.
On entry, POLES(*, 2 * I -1: 2 * I) contains the new and old singular values involved in the secular equations on the I-th level.
On entry, Q contains the orthogonal matrix used to reduce the original matrix to tridiagonal form.
On entry, U contains the left singular vector matrices of all subproblems at the bottom level.
On entry, VT' contains the right singular vector matrices of all subproblems at the bottom level.
On entry, Z contains the orthogonal matrix used to reduce the original matrix to tridiagonal form.
On entry, Z contains the unitary matrix used to reduce the original matrix to tridiagonal form.
On entry, Z must contain the orthogonal matrix used to reduce the original matrix to tridiagonal form.
On entry, Z must contain the unitary matrix used to reduce the original matrix to tridiagonal form.
On entry, Z(1, I) contains the components of the deflation- adjusted updating row vector for subproblems on the I-th level.
On entry, for each I, GIVCOL(*, 2 * I - 1: 2 * I) records the locations of Givens rotations performed on the I-th level on the computation tree.
On entry, if the I-th subproblem is not square, C( I ) contains the C-value of a Givens rotation related to the right null space of the I-th subproblem.
On entry, if the I-th subproblem is not square, S( I ) contains the S-value of a Givens rotation related to the right null space of the I-th subproblem.
On entry, ptr is pointing past the bracket character, but on return it points to the closing bracket, or vertical bar, or end of string.
On entry, ptrptr is pointing at the P or p.
On entry, the entries of E contain the offdiagonal entries of the bidiagonal matrix whose SVD is desired.
On entry, the maximum row dimension each subproblem at the bottom of the tree can be of.
On error, error is filled in and -1 is returned.
On error, errorcode will be set non-zero, so we don't need to look at the result of the function here.
On exit D contains the trailing (N-K) updated singular values (those which were deflated) sorted into increasing order.
On exit D(1:N) contains the singular values of the modified matrix.
On exit U contains the left singular vectors of the bidiagonal matrix.
On exit U contains the trailing (N-K) updated left singular vectors (those which were deflated) in its last N-K columns.
On exit VT' contains the right singular vectors of the bidiagonal matrix.
On exit VT' contains the trailing (N-K) updated right singular vectors (those which were deflated) in its last N-K columns.
On exit from the switch, s points to the string that must be printed, s_len has the length of the string The precision requirements, if any, are reflected in s_len.
On exit,  A is overwritten by the balanced matrix.
On exit, A has been destroyed.
On exit, A has been overwritten.
On exit, A is overwritten by the updated matrix.
On exit, B is overwritten by the N-by-NRHS solution matrix X.
On exit, C is overwritten by H*C or H'*C or C*H or C*H'.
On exit, C is overwritten by Q' * C.
On exit, C is overwritten by Q*C or Q'*C or C*Q' or C*Q.
On exit, C is overwritten by Q*C or Q**H*C or C*Q**H or C*Q or P*C or P**H*C or C*P or C*P**H.
On exit, C is overwritten by Q*C or Q**H*C or C*Q**H or C*Q.
On exit, C is overwritten by Q*C or Q**T*C or C*Q**T or C*Q or P*C or P**T*C or C*P or C*P**T.
On exit, C is overwritten by Q*C or Q**T*C or C*Q**T or C*Q.
On exit, D contains the trailing (N-K) updated eigenvalues (those which were deflated) sorted into increasing order.
On exit, DIFR(I, 1) is the distance between I-th updated (undeflated) singular value and the I+1-th (undeflated) old singular value.
On exit, E has been destroyed.
On exit, E is overwritten.
On exit, Q contains the eigenvectors of the tridiagonal matrix.
On exit, Q contains the trailing (N-K) updated eigenvectors (those which were deflated) in its last N-K columns.
On exit, RHO has been modified to the value required by DLAED3.
On exit, RHO has been modified to the value required by SLAED3.
On exit, SCALE is overwritten with  scl , the scaling factor for the sum of squares.
On exit, SCALE is overwritten with the value  scl .
On exit, SUMSQ is overwritten with  smsq , the basic sum of squares from which  scl  has been factored out.
On exit, SUMSQ is overwritten with the value  ssq .
On exit, U is overwritten by U * Q.
On exit, V is overwritten by the transformed eigenvectors.
On exit, VF contains the first K components of the first components of all right singular vectors of the bidiagonal matrix.
On exit, VF contains the first components of all right singular vectors of the bidiagonal matrix.
On exit, VL contains the first K components of the last components of all right singular vectors of the bidiagonal matrix.
On exit, VL contains the last components of all right singular vectors of the bidiagonal matrix.
On exit, VT is overwritten by P' * VT.
On exit, X is overwritten by the solution vector x.
On exit, X is overwritten with conjg(X).
On exit, X is overwritten with the solution vector x.
On exit, X is overwritten with the tranformed vector x.
On exit, Y is overwritten by the updated vector y.
On exit, entries 1 to N hold the eigenvalues in decreasing order, Z( 2*N+1 ) holds the trace, and Z( 2*N+2 ) holds the sum of the eigenvalues.
On exit, if LOG10(LARGE) is sufficiently large, the square root of LARGE, otherwise unchanged.
On exit, if LOG10(LARGE) is sufficiently large, the square root of SMALL, otherwise unchanged.
On exit, if WANTT is .TRUE., H is upper quasi-triangular in rows and columns ILO:IHI, with any 2-by-2 diagonal blocks in standard form.
On exit, if WANTT is .TRUE., H is upper triangular in rows and columns ILO:IHI, with any 2-by-2 diagonal blocks in standard form.
On exit, it is on the final character of the escape sequence.
On exit, it is overwritten with the value beta.
On exit, it is overwritten with the vector v.
On exit, it is pointing at the final character of the escape sequence.
On exit, its eigenvalues.
On exit, the (triangular) inverse of the original matrix, in the same storage format.
On exit, the M-by-N matrix Q or P**H.
On exit, the M-by-N matrix Q or P**T.
On exit, the M-by-N matrix Q.
On exit, the N-by-N orthogonal matrix Q.
On exit, the N-by-N unitary matrix Q.
On exit, the array  C  is overwritten by the  m by n  matrix ( alpha*op( A )*op( B ) + beta*C ).
On exit, the contents of Z are destroyed by the updating process.
On exit, the contents of Z have been destroyed by the updating process.
On exit, the eigenvalues in ascending order.
On exit, the eigenvalues of the repaired matrix.
On exit, the eigenvectors of the repaired tridiagonal matrix.
On exit, the lower triangular part of the array  C is overwritten by the lower triangular part of the updated matrix.
On exit, the lower triangular part of the array A is overwritten by the lower triangular part of the updated matrix.
On exit, the m by n matrix Q.
On exit, the m-by-n matrix Q.
On exit, the norms will be computed and stored in CNORM.
On exit, the permuted matrix.
On exit, the solution matrix X.
On exit, the trailing (N-K) updated eigenvalues (those which were deflated) sorted into increasing order.
On exit, the upper or lower triangle of the (Hermitian) inverse of A, overwriting the input factor U or L.
On exit, the upper or lower triangle of the (symmetric) inverse of A, overwriting the input factor U or L.
On exit, the upper triangular part of the array  C is overwritten by the upper triangular part of the updated matrix.
On exit, the upper triangular part of the array A is overwritten by the upper triangular part of the updated matrix.
On exit, they are overwritten by the elements of the standardised Schur form.
On failure, returns NULL and leaves *strp alone.
On first call to routine, get machine parameters for possible scaling to avoid overflow
On first evaluation, the FuncDef stored in P4 is converted into an sqlite3_context and the opcode is changed.
On gdbm 1.8, fast mode is default behavior.
On hexadecimal and decimal machines with a guard digit, it slightly changes the bottommost bits of DLAMDA(I).
On hexadecimal and decimal machines with a guard digit, it slightly changes the bottommost bits of DSIGMA(I).
On iOS, Go tests and apps under development are run by lldb.
On input, *buf should point to the first character after # and on output, it's the last byte read, no matter if there was success or insuccess.
On linux, when the path begins with a NUL byte we are referring to an abstract namespace.
On little-endian machines, we can process properly aligned data without copying it.
On machines like Cray, we are reducing EMAX by one unnecessarily.
On machines with a small stack size, you can redefine the SQLITE_PRINT_BUF_SIZE to be something smaller, if desired.
On mode:a+, though it can write only FILE_END, it can read from everywhere.
On mode:a, it can write only FILE_END.
On most platforms, pthread_equal() is a  comparison of two integers and is therefore atomic.
On most systems, this would mean that any file consisting only of characters in the range 0x00 ...
On my FreeBSD system, this additional code can be removed by compiling with NDEBUG defined.
On non-Posix operating systems, there may be only the ability to make a file read-only or read-write.
On non-boundary i-edges, it is responsible for removing start markers on the first pass.
On normal exit, D contains the singular values in ascending order.
On normal exit, D contains the singular values in decreasing order.
On normal exit, E will contain 0.
On our experience, NetBSD doesn't support using setcontext() and pthread simultaneously.
On output IDXP(2:K) points to the nondeflated D-values and IDXP(K+1:N) points to the deflated singular values.
On output INDXP(1:K) points to the nondeflated D-values and INDXP(K+1:N) points to the deflated eigenvalues.
On output the columns 1 to K contain the updated eigenvectors.
On output, B contains the solution X in rows 1 through N.
On output, B contains the solution X.
On py3 we skip the warning, though, b/c it would just be immediately be followed by an exception anyway.
On recent Windows platforms, the localtime_s() function is available as part of the "Secure CRT".
On return, RT1 is the eigenvalue of larger absolute value, and RT2 is the eigenvalue of smaller absolute value.
On return, SSMIN is the smaller singular value and SSMAX is the larger singular value.
On some platform, it may set the name to pthread and/or kernel.
On some platforms the string will not be null-terminated, so return the effective length into *displen.
On some platforms, all combinations of this flags and raw/cooked mode may not be valid.
On some platforms, there might be race conditions that can cause these routines to deliver incorrect results.
On some systems (e.g., some HP systems), it may be necessary to #define NAN_WORD0 appropriately -- to the most significant word of a quiet NaN.
On some systems raise() fails with errno 3: No such process
On some systems, calls to fchown() will trigger a message in a security log if they come from non-root processes.
On success 0 is returned otherwise -1 is returned.
On success return SQLITE_OK.
On success, *ppVal is made to point to the extracted value.
On success, count number of cpus.
On success, make *pp point to the newly allocated WalInterator object return SQLITE_OK.
On success, return SQLITE_OK.
On success, the *pDifferentRow parameter is false if the cursor is left pointing at exactly the same row.
On such machines, you can #define Just_16 to store 16 bits per 32-bit Long when doing high-precision integer arithmetic.
On such systems, when INFNAN_CHECK is #defined, strtod checks for Infinity and NaN (case insensitively).
On switch statements where multiple cases go to the same block of code, testcase() can insure that all cases are evaluated.
On systems with ample stack space and that support alloca(), make use of alloca() to obtain space for large automatic objects.
On the Android platform, bypassing the logic below could lead to a corrupt database.
On the contrary, if a bound is strictly inside the array, then limits correspond to the array range.
On the first call to sqlite3_step(), pSub will hold a NULL.
On the first pass, we try to reuse unused memory at the  end of the opcode array.
On the first pass, we try to reuse unused space at the  end of the opcode array.
On the get we are permuting the returned object, but on setting we are permuting the object-to-be-set.
On the initial downward pass, only condition (1) above needs to be tested because (2) will always be true from the previous step.
On the off chance we were given nothing but crap...
On the other hand Standard SQL does not allow the GROUP BY clause to contain references to result-set columns.
On the other hand, Oracle Solaris Studio seems to generate SPARCV8PLUS code with unaligned memory access instructions.
On the other hand, a false negative (returning FALSE when the result could be NULL) will likely result in an incorrect answer.
On the other hand, if SQLITE_OMIT_MEMORYDB has been defined, then ":memory:" is just a regular file-name.
On the other hand, if bCommit is greater than zero, then keep looping until a free-page located within the first nFin pages of the file is found.
On the other hand, it does burn CPU cycles every time through the evaluator loop.
On the other hand, the extra seeks could end up being significantly more expensive.
On the other hand, they can be made connection wide default through SetConnectOption - but will be overidden by calls to SetStmtOption() in odbc_prepare/odbc_do
On the other platforms, just returns pid.
On the upward pass, both conditions are always true, so the upwards pass simply processes pages that were missed on the downward pass.
On the upwards pass, or...
On this version of MRI, they have 3 types of Symbols (and 1 total counts).
On those systems, sqlite3_mutex_try() will always return SQLITE_BUSY.
On to the metaphoning
On way to solve this is to just re-allocate the buffer size.
On windows, __cdecl specification is needed in case if project is built with __stdcall convention.
On windows, if read_set and write_set are empty, select() returns "Invalid parameter" error (at least on my Windows XP Pro).
On x86-32, there is no red zone, so this should work (no need for a local variable).
Once GCC version 2 has supplanted version 1, this can go.
Once a call to sqlite3rbu_step() has returned a value other than SQLITE_OK, all subsequent calls on the same RBU handle are no-ops that immediately return the same value.
Once a journal  file has been finalized it is not possible to use it to roll back a  transaction.
Once a session object has been deleted, the results of attempting to use pSession with any other session module function are undefined.
Once a stream is in binary mode, it cannot be reset to non-binary mode.
Once a stream is in binary mode, it cannot be reset to nonbinary mode.
Once a thread is asleep, you can use the instance method #wakeup to mark your thread as eligible for scheduling.
Once again, we may have to adjust any OP_RECURSE calls inside the group.
Once all references to the file are dropped, it is automatically released.
Once all the cookies have been verified and transactions opened,  obtain the required table-locks.
Once all the other databases have been initialized, load the schema for the TEMP database.
Once an overflow page is allocated, as many bytes as possible are moved into the overflow pages without letting the cell size drop below the min embedded payload fraction.
Once an overflow page-list cache has been allocated, it may be invalidated if some other cursor writes to the same table, or if the cursor is moved to a different row.
Once any conversions have taken place, and neither value is NULL,  the values are compared.
Once before the original record is deleted from the table using the calling convention described for DELETE.
Once bound, the code may be called in different contexts and still access those variables.
Once in WRITER_FINISHED state, it is  not possible to modify the database further.
Once it has entered the ERROR state, any attempt to use the pager to read or write data returns an error.
Once somebody had pointed out RFC 3629 to me (it obsoletes 2279), additional restrictions were applied.
Once sqlite3_initialize() has been called, the amount of memory available to SQLite is fixed and cannot be changed.
Once the EXCLUSIVE lock is released, any other database readers detect the new *-wal file and read the database in wal mode.
Once the RBU update is finished, the RBU extension does not  automatically remove any zState database file, even if it created it.
Once the SELECT has been coded by sqlite3Select(), it is in a suitable state to query for the column names and types to be used by the new table.
Once the VM has finished passing records to the sorter, or when the in-memory buffer is full, the list is sorted.
Once the balance starts, the cell offset section of the btree page will be overwritten and we will no long be able to find the cells if a pointer to each cell is not saved first.
Once the leaf is located, this  function is called to determine its ancestry.
Once the lock has been upgraded and, if necessary, the file opened, the pages are written out to the database file in list order.
Once the memory available to (2) or (3) is exhausted, subsequent allocations fail over to the general-purpose memory allocator (1).
Once the molad that starts a year is determined the actual start of the year (Tishri 1) can be determined.
Once the object which owns the data is set, it doesn't make sense to change it.
Once the sorter has been populated by calls to sqlite3VdbeSorterWrite, this function is called to prepare for iterating through the records in sorted order.
Once the sorter has been populated, this function is called to prepare for iterating through its contents in sorted order.
Once the tracepoint is created, you can use rb_tracepoint_enable to enable the tracepoint.
Once there are FTS3_MERGE_COUNT segments of level N, they are merged into a single segment of level N+1.
Once this estimate has been obtained, the caller will invoke this function a second time, passing the estimate as the nRowEst parameter.
Once this extraction process has started, no new elements may be inserted.
Once this flag is set, it remains set.
Once this function has been called successfully on an Fts3Phrase, it may be used with fts3EvalPhraseNext() to iterate through the matching docids.
Once this function has been called, the transaction must either be rolled back or committed.
Once this function returns, the first key of merged data may be read from the  MergeEngine object in the usual fashion.
Once this is done the transaction is irrevocably committed.
Once this is routine has returned, the only thing required to commit the write-transaction for this database file is to delete the journal.
Once this much has been released, the function returns.
One (or both) of the named databases did not exist or an OOM error was hit.
One bit for each page in the database file
One byte past end of position list
One byte past the end of usable data
One character past the end of input text
One column in the result set
One could argue that this is wrong.
One created using an sqlite3_rtree_geometry_callback() SQL user function.
One day we might  have binary strings...
One eigenvalue just deflated.
One element of this array for each open cursor
One entry for each identifier on the list
One entry for each of nCol columns
One entry for each token in the phrase
One extra bucket is added to catch overflow in case something ever changes to make the previous sentence incorrect.
One first call, qh_memalloc is not initialized.
One for each column cache entry
One for every 32KB page in the wal-index
One for the zero integer part.
One format that is acceptable to both is Weekday, DD-Mon-YY HH:MM:SS TIMEZONE TIMEZONE can be any timezone name (3 or more letters)
One has to do a run-time check to discover the behavior of the current process.
One instruction is enough.
One iterator for each phrase
One may expect the number of extended result codes will increase over time.
One might also try: PROCESS_MODE_BACKGROUND_BEGIN
One must call either sqlite3_enable_load_extension(db) or sqlite3_db_config(db, SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION, 1, 0) to turn on extension loading.
One must call sqlite3_enable_load_extension() to turn on extension loading.
One of OE_None, OE_Cascade etc.
One of PASSIVE, FULL and RESTART
One of PASSIVE, FULL or RESTART
One of SHARED_LOCK, RESERVED_LOCK etc.
One of SQLITE_INSERT, UPDATE, DELETE
One of SQLITE_UPDATE, INSERT, DELETE
One of TK_ALL, TK_UNION, TK_EXCEPT, TK_INTERSECT
One of TK_BEFORE, TK_AFTER, TK_INSTEAD
One of TK_DELETE, TK_UPDATE, TK_INSERT
One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT
One of TK_INSERT, TK_UPDATE, TK_DELETE
One of TK_UNION, TK_EXCEPT etc.
One of TK_UPDATE, TK_INSERT, TK_DELETE
One of TRIGGER_BEFORE, TRIGGER_AFTER
One of UPDATE, DELETE, INSERT
One of ap1 or ap2 is a scalar
One of our parent classes are the same as the scope, and it contains a private function with the same name that has the same scope.
One of several kinds of errors
One of the COLNAME_* constants
One of the CURSOR_XXX constants (see below)
One of the CURTYPE_* values above
One of the FTSQUERY_XXX values defined below
One of the INCRINIT_XXX constants
One of the JSON_ type values
One of the P4_xxx constants for p4
One of the PAGER_JOURNALMODE_* values
One of the PAGER_JOURNALMODE_XXX symbols
One of the RTREE_COORD_* constants
One of the SQLITE_AFF_...
One of the SQL_XXX constants above
One of the SRT_ operations to apply to self
One of the WHERE_* flags defined in sqliteInt.h
One of the WHERE_DISTINCT_* operators
One of the WHERE_DISTINCT_* values
One of the WHERE_DISTINCT_* values below
One of the WhereLoop objects
One of the cells in node pNode is guaranteed to have a 64-bit  integer value equal to iRowid.
One of the following two instructions is replaced by an OP_Noop.
One of the journals pointed to by the master journal exists.
One of the most unique faculty of *nkf* is the guess of the input kanji encodings.
One of the three will be 1.
One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT
One or both of the subtrees can be NULL.
One or both operands are NULL
One or more aggregate functions seen
One or more calls to MsrIncrNext() may also have been made.
One or more character type fudges the pointer and restarts, knowing it will hit a single character type and stop there.
One or more of FLAG_ constants below
One or more of the following flags are set to indicate the validOK representations of the value stored in the Mem struct.
One or more of the following warnings have already been issued.
One or more phrases that must appear within a certain token distance of each other within each matching document.
One or more records packed end-to-end in order of ascending keys.
One or more segments have just been removed from absolute level iAbsLevel.
One or more tables used to resolve names
One or more terms that must appear in a contiguous sequence within a document for it to match.
One or the other is used, depending on whether the check is for a general or a particular category.
One or the other of the two processes must give way or there can be no progress.
One particular FROM clause in a nested query
One past the last escaped input char
One permutation of all possible is created
One register allocated to each index
One register assigned to each index to be updated
One release per successful fetch.
One row interchange is initiated for each of rows K1 through K2 of A.
One side is a column, the other is not.
One slot of the outer query (the middle slot) is used by the subquery.
One usually wants to use hw.acctivecpu for MT decisions, but not here
One way around this problem is to check the extended error code returned by an sqlite3_step() call.
One way to improve the situation is to sort the operations on each index by index key before applying them to the b-tree.
One-time setup cost (ex: create transient index)
One-time test address
One-way functions offer some useful properties.
Onepass is only used if the virtual table  implementation indicates that pWhere may match at most one row.
Only 'unsafe' and 'same_kind' allow data loss
Only 1x temporary space and only 1x writes would be required if the copy of step (3) were replace by deleting the original database and renaming the transient database as the original.
Only 1x temporary space and only 1x writes would be required if the copy of step (3) were replaced by deleting the original database and renaming the transient database as the original.
Only AUTO_CALLOUT can insert this opcode.
Only JUMP opcodes and the short list of special opcodes in the switch below need to be considered.
Only NPY_NO_CASTING prevents byte order conversion
Only OCI_RESULT_TYPE_SELECT is supported by Oracle DB 12cR1
Only SLJIT_INT_OP or SLJIT_SINGLE_OP is allowed.
Only SOF0-SOF2 are now in common use
Only WORD actually needs all four entries, but using repeats for the others means they can all use the same code below.
Only a BTREE_SINGLE database can be BTREE_UNORDERED
Only a few cases are supported.
Only a privileged process may make this call.
Only a process with superuser privileges may change the owner of a file.
Only a single process can read or write the database file at a time.
Only a username for example may still be a valid address at the destination system.
Only allocate new memory space when pBuf is NULL.
Only allow sensible combinations of bits in the flags argument.
Only allow tracing if SQLITE_DEBUG is defined.
Only alphabetic characters and underscores need to be translated.
Only attempt the conversion to TEXT if there is an integer or real representation (blob and NULL do not get converted) but no string representation.
Only autocomplete when the callback is set.
Only available if ruby was built with +CALC_EXACT_MALLOC_SIZE+.
Only back references and those types that consume a character may be repeated.
Only built-in functions have access to this feature.
Only built-in memory allocators can be used.
Only call promote if the types aren't the same dtype
Only call this method after calling Cipher#encrypt or Cipher#decrypt.
Only call this method after setting the authentication tag and passing the entire contents of the ciphertext into the cipher.
Only call this right before exiting.
Only called if really needed
Only change the method to the constructor if the constructor isn't called __construct we check for __ so we can be binary safe for lowering, we should use ZEND_CONSTRUCTOR_FUNC_NAME
Only change the value of sqlite.enc if the database handle is not initialized.
Only changes made to real  tables are counted.
Only check if utf8 string is valid, and compute utf16 length
Only check simple variables on the RHS, as only CVs cause issues with this.
Only check the salt if it's not EXT_DES
Only check when open_basedir is available
Only checking MAY_MERGE for IS_NULL here  is because only IS_NULL can be default value for class type hinting(RECV_INIT).
Only clean and unpinned pages can be reclaimed.
Only code the 1st table in pTabList
Only compatible with ISO-2022-JP
Only concurrent reads allowed.
Only constraints in the ON clause are allowed
Only creates a single-dimensional array of variants.
Only decimal digits ('0'..'9') may be part of an integer value.
Only do local time within a reasonable year range.
Only do the loop if the iteration size is non-zero
Only do the open_basedir check at runtime
Only do the safemode/open_basedir check at runtime
Only do the trivial loop check for the unmasked version.
Only do this if SSL is active.
Only dom uses _private
Only enforce the 'date units' vs 'time units' barrier with 'same_kind' casting.
Only flags that can be set are SAVEPOISTION and AUXDELETE
Only for cumulative operations.
Only for the bool type, sets the destination to 1
Only free statement if db-connection is still open
Only happens if NULLs are everywhere
Only happens when no variables are specified
Only has meaning after compile
Only here for API compatibility
Only http/https is allowed.
Only http/https should be handled.
Only if it is the 3rd month is both the start and end of the year required.
Only if no flags are set (optimization)
Only if the day number is actually found to be in the ambiguous period of 29 to 31 days is the other molad calculated.
Only indices entries of less than 2GiB are support - anything large must be database corruption.
Only insert it into the fields dictionary if it is a string and if it is not the same as the name.
Only keep closing bracket on same line for empty arrays/objects
Only keep the FREE for the loop var
Only lookup the real file path and add it to the included_files list if already opened otherwise it will get opened and added to the included_files list in zend_execute_scripts
Only make Fortran strides if not contiguous as well
Only need mutex for popen() in Windows and NetWare because it doesn't chdir() on UNIX
Only need to actually do something if there is more than 1 dim
Only needed by assert() statements
Only needed if the user requested a buffer size.
Only one byte may be pushed back before a subsequent read operation (that is, you will be able to read only the last of several bytes that have been pushed back).
Only one character may be pushed back before a subsequent read operation (that is, you will be able to read only the last of several characters that have been pushed back).
Only one curve can be set, and this has no effect for TLS clients.
Only one flag value allowed
Only one has a type declaration and the other one doesn't
Only one of (2) or (3) can be used.
Only one of SQLITE_ENABLE_STAT3 or SQLITE_ENABLE_STAT4 can be defined.
Only one of WHERE_OR_SUBCLAUSE or WHERE_USE_LIMIT
Only one of those deletes is considered the "primary" delete.
Only one previous position is remembered, and it changes with each scanning operation.
Only one recursive reference is permitted.
Only one watchpoint may point to one element.
Only one writer allowed at a time.
Only operate the lookaside when zero
Only parse errors are currently reported in err, not structural errors.
Only pcache.c communicates with this module.
Only perform conversion if variant not already of type passed
Only persistent  connections get hashed up.
Only port number is specified.
Only promise is that after a write, the one thread which did the write will see data in the table (though it may be slightly different data than what was written, see above about equivalent data).
Only public and protected singleton methods are returned.
Only real table changes are counted.
Only referenced if one of NCVT, NRU, or NCC is nonzero, and if N is at least 2.
Only replace TypeError's here, which are the normal errors.
Only report line terminators if we find one other than LF, or if we find none at all.
Only resolve symbols as the code that references them is executed.
Only return NULL if allocating a new page is effectively impossible.
Only routines in the source file sqliteVdbe.c are allowed to see the insides of this structure.
Only save cursor with this iRoot.
Only scan those hash slots that might contain pages that need to be removed.
Only screw with the buffer if we can seek, otherwise we lose data buffered from fifos and sockets
Only set swap if it's still ambiguous
Only set the lastErrno if the error code is a real error and not  a normal expected return code of SQLITE_BUSY or SQLITE_OK
Only shared Btrees are on the list.
Only some operating systems (e.g. Solaris) use the -R option.
Only some strategies  actually use them.
Only sort the current set of entiries if they need it
Only supports a architecture-dependent binary dump format at the moment.
Only tables that have a PRIMARY KEY defined may be attached.
Only the admin user is allowed to know that the sqlite_user table exists
Only the best N_OR_COST elements are retained.
Only the column names are computed.
Only the data content may only be modified, it is not possible to  change the length of the data stored.
Only the elements in positions K1 through K2 of IPIV are accessed.
Only the first error is ok
Only the following combinations are supported.
Only the following values of flags are currently in use.
Only the hashes of the objects are stored, so this uses relatively little memory.
Only the inner loop gets the buffering and no inner flags
Only the integer return code is currently used.
Only the journal header is written.
Only the last (right-most) SELECT in the series may have an ORDER BY or LIMIT.
Only the master can perform this operation.
Only the non-zero members must be set.
Only the row can be changed.
Only the rowid is required for a table btree
Only the strides of the first operand are used to reorder the dimensions, no attempt to consider all the strides together is made, as is done in the NpyIter object.
Only the value 1 matters for class_one_char, so don't increase it if it is already 2 or more ...
Only these flags are set.
Only those entries corresponding to saddle zones have nonzero values in this array.
Only thread A can modify the lock.
Only to silence a warning.
Only trivial solution for 0-variable problem
Only trivial solution for 1-variable problem
Only truncate if it is an in-memory sub-journal.
Only use a point that is in the image.
Only used for the update hook
Only used for threading, if negative (this means that it is larger then ssize_t before axes removal) assume that the actual problem is large enough to be threaded usefully.
Only used in legacy parse mode
Only used to silence a warning.
Only used to suppress a compiler warning.
Only valid for Gregorian calendar, commented out as we don't handle Julian calendar.
Only valid for real tables, no pseudotables
Only valid if cacheStatus matches Vdbe.cacheCtr.
Only valid in paren mode
Only virtual tables are written to directly.
Only warn if we'll make it past the non-negative check
Only warn once per array
Only way this happens is if file is opened with NO_DEFAULT_CONTEXT param, but then something is called which requires a context.
Only when enough arguments have been supplied to satisfy the method signature, will the method actually be called.
Only works for user-defined data-types.
Only works if nothing else is referencing this array and it is contiguous.
Only works on i486 hardware.
Only works with FreeTDS.
Only write cursors are counted if wrOnly is true.
Only write cursors are tripped if writeOnly is true but all cursors are tripped if writeOnly is false.
Oops, someone binding the same variable - clone
Oops:  The first two arguments of sqlite3_snprintf() are backwards from the snprintf() standard.
Op for vtab MATCH/LIKE/GLOB/REGEXP terms
Op when arg present, or -1 if not allowed
Op when no arg, or -1 if arg mandatory
Opaque type used by code in vdbesort.c
Opaque type used by the explainer
Opcode 5 is used to deliberately induce a fault in order to confirm that error detection works.
Opcode 5 works on the linear array only, not on the Bitvec.
Opcode for update hook: SQLITE_UPDATE or SQLITE_INSERT
Opcode that opens the sorter
Opcode to access the value of the IN constraint
Opcode to add sorter record to sorter
Opcode:  EndCoroutine P1 * * * *  The instruction at the address in register P1 is a Yield.
Opcode:  EndCoroutine P1 * * * *  The instruction at the address in register P1 is an OP_Yield.
Opcode:  Gosub P1 P2 * * *  Write the current address onto register P1 and then jump to address P2.
Opcode:  Goto * P2 * * *  An unconditional jump to address P2.
Opcode:  Halt P1 P2 * P4 P5  Exit immediately.
Opcode:  Return P1 * * * *  Jump to the next instruction after the address in register P1.
Opcode:  Yield P1 P2 * * *  Swap the program counter with the value in register P1.
Opcode: AutoCommit P1 P2 * * *  Set the database auto-commit flag to P1 (1 or 0).
Opcode: Checkpoint P1 P2 P3 * *  Checkpoint database P1.
Opcode: Clear P1 P2 P3  Delete all contents of the database table or index whose root page in the database file is given by P1.
Opcode: Close P1 * * * *  Close a cursor previously opened as P1.
Opcode: CollSeq P1 * * P4  P4 is a pointer to a CollSeq struct.
Opcode: ColumnsUsed P1 * * P4 *  This opcode (which only exists if SQLite was compiled with SQLITE_ENABLE_COLUMN_USED_MASK) identifies which columns of the table or index for cursor P1 are used.
Opcode: CursorHint P1 * * P4 *  Provide a hint to cursor P1 that it only needs to return rows that satisfy the Expr in P4.
Opcode: Delete P1 P2 * P4 *  Delete the record at which the P1 cursor is currently pointing.
Opcode: Delete P1 P2 P3 P4 P5  Delete the record at which the P1 cursor is currently pointing.
Opcode: Destroy P1 P2 P3 * *  Delete an entire database table or index whose root page in the database file is given by P1.
Opcode: DropIndex P1 * * P4 *  Remove the internal (in-memory) data structures that describe the index named P4 in database P1.
Opcode: DropTable P1 * * P4 *  Remove the internal (in-memory) data structures that describe the table named P4 in database P1.
Opcode: DropTrigger P1 * * P4 *  Remove the internal (in-memory) data structures that describe the trigger named P4 in database P1.
Opcode: ElseNotEq * P2 * * *  This opcode must immediately follow an OP_Lt or OP_Gt comparison operator.
Opcode: Expire P1 * * * *  Cause precompiled statements to become expired.
Opcode: Expire P1 * * * *  Cause precompiled statements to expire.
Opcode: If P1 P2 P3 * *  Jump to P2 if the value in register P1 is true.
Opcode: IfNot P1 P2 P3 * *  Jump to P2 if the value in register P1 is False.
Opcode: IncrVacuum P1 P2 * * *  Perform a single step of the incremental vacuum procedure on the P1 database.
Opcode: Init * P2 * P4 * Synopsis:  Start at P2  Programs contain a single instance of this opcode as the very first opcode.
Opcode: Init P1 P2 * P4 * Synopsis: Start at P2  Programs contain a single instance of this opcode as the very first opcode.
Opcode: InitCoroutine P1 P2 P3 * *  Set up register P1 so that it will OP_Yield to the co-routine located at address P3.
Opcode: InitCoroutine P1 P2 P3 * *  Set up register P1 so that it will Yield to the coroutine located at address P3.
Opcode: IntegrityCk P1 P2 P3 * P5  Do an analysis of the currently open database.
Opcode: IntegrityCk P1 P2 P3 P4 P5  Do an analysis of the currently open database.
Opcode: JournalMode P1 P2 P3 * *  Change the journal mode of database P1 to P3.
Opcode: LoadAnalysis P1 * * * *  Read the sqlite_stat1 table for database P1 and load the content of that table into the internal index hash table.
Opcode: MaxPgcnt P1 P2 P3 * *  Try to set the maximum page count for database P1 to the value in P3.
Opcode: MustBeInt P1 P2 * * *  Force the value in register P1 to be an integer.
Opcode: Next P1 P2 P3 P4 P5  Advance cursor P1 so that it points to the next key/data pair in its table or index.  If there are no more key/value pairs then fall through to the following instruction.
Opcode: NextIfOpen P1 P2 P3 P4 P5  This opcode works just like Next except that if cursor P1 is not open it behaves a no-op.
Opcode: NextIfOpen P1 P2 P3 P4 P5  This opcode works just like OP_Next except that if cursor P1 is not open it behaves a no-op.
Opcode: Noop * * * * *  Do nothing.
Opcode: NullRow P1 * * * *  Move the cursor P1 to a null row.
Opcode: Once P1 P2 * * *  Check if OP_Once flag P1 is set.
Opcode: Once P1 P2 * * *  If the P1 value is equal to the P1 value on the OP_Init opcode at instruction 0, then jump to P2.
Opcode: Pagecount P1 P2 * * *  Write the current number of pages in database P1 to memory cell P2.
Opcode: Param P1 P2 * * *  This opcode is only ever present in sub-programs called via the  OP_Program instruction.
Opcode: ParseSchema P1 * * P4 *  Read and parse all entries from the SQLITE_MASTER table of database P1 that match the WHERE clause P4.
Opcode: Permutation * * * P4 *  Set the permutation used by the OP_Compare operator to be the array of integers in P4.
Opcode: PrevIfOpen P1 P2 P3 P4 P5  This opcode works just like OP_Prev except that if cursor P1 is not open it behaves a no-op.
Opcode: PrevIfOpen P1 P2 P3 P4 P5  This opcode works just like Prev except that if cursor P1 is not open it behaves a no-op.
Opcode: Program P1 P2 P3 P4 P5  Execute the trigger program passed as P4 (type P4_SUBPROGRAM).
Opcode: ReadCookie P1 P2 P3 * *  Read cookie number P3 from database P1 and write it into register P2.
Opcode: RealAffinity P1 * * * *  If register P1 holds an integer convert it to a real value.
Opcode: ResetCount * * * * *  The value of the change counter is copied to the database handle change counter (returned by subsequent calls to sqlite3_changes()).
Opcode: ResetSorter P1 * * * *  Delete all contents from the ephemeral table or sorter that is open on cursor P1.
Opcode: Savepoint P1 * * P4 *  Open, release or rollback the savepoint named by parameter P4, depending on the value of P1.
Opcode: Seek P1 * P3 P4 * Synopsis: Move P3 to P1.rowid  P1 is an open index cursor and P3 is a cursor on the corresponding table.
Opcode: SetCookie P1 P2 P3 * *  Write the content of register P3 (interpreted as an integer) into cookie number P2 of database P1.
Opcode: SetCookie P1 P2 P3 * *  Write the integer value P3 into cookie number P2 of database P1.
Opcode: Sort P1 P2 * * *  This opcode does exactly the same thing as OP_Rewind except that it increments an undocumented global variable used for testing.
Opcode: ToBlob P1 * * * *  Force the value in register P1 to be a BLOB.
Opcode: ToInt P1 * * * *  Force the value in register P1 to be an integer.
Opcode: ToReal P1 * * * *  Force the value in register P1 to be a floating point number.
Opcode: ToText P1 * * * *  Force the value in register P1 to be text.
Opcode: Transaction P1 P2 P3 P4 P5  Begin a transaction on database P1 if a transaction is not already active.
Opcode: VBegin * * * P4 *  P4 may be a pointer to an sqlite3_vtab structure.
Opcode: VCreate P1 * * P4 *  P4 is the name of a virtual table in database P1.
Opcode: VCreate P1 P2 * * *  P2 is a register that holds the name of a virtual table in database  P1.
Opcode: VDestroy P1 * * P4 *  P4 is the name of a virtual table in database P1.
Opcode: VNext P1 P2 * * *  Advance virtual table P1 to the next row in its result set and jump to instruction P2.
Opcode: VOpen P1 * * P4 *  P4 is a pointer to a virtual table object, an sqlite3_vtab structure.
Opcode: VRename P1 * * P4 *  P4 is a pointer to a virtual table object, an sqlite3_vtab structure.
Opcode: Vacuum * * * * *  Vacuum the entire database.
Opcode: Vacuum P1 * * * *  Vacuum the entire database P1.
Opcodes that are used as the bottom of a loop (OP_Next, OP_Prev, OP_VNext, OP_RowSetNext, or OP_SorterNext) all jump here upon completion.
Opcodes that must match a character
Open ICU Transliterator.
Open a connection to the WAL file zWalName.
Open a cursor on zDoc/nDoc.
Open a cursor to iterate through the contents of the oldest nSeg  indexes of absolute level iAbsLevel.
Open a database file.
Open a directory handle within a phar archive
Open a file descriptor to the directory containing file zFilename.
Open a handle to begin or resume an RBU VACUUM operation.
Open a new Fts5Index handle.
Open a new database handle.
Open a new iterator to iterate though all rowid that match the  specified token or token prefix.
Open a new iterator to iterate though all rowids that match the  specified token or token prefix.
Open a new statvfs cursor.
Open a phar file for streams API
Open a read-only cursor on the index being analyzed.
Open a read-only cursor on the table.
Open a read-only cursor, execute the OP_Count, close the cursor.
Open a read-transaction on the snapshot idendified by pSnapshot.
Open a shared-memory area associated with open database file pDbFd.
Open a statement transaction if the table is a virtual table.
Open a temporary file.
Open a token cursor on the document.
Open a transaction on the database file.
Open a virtual index to use for the distinct set.
Open all tables in the pTabList and any indices selected for searching those tables.
Open an Fts3MultiSegReader to scan the doclist for term zTerm/nTerm.
Open an RBU handle to perform an RBU vacuum on database file zTarget.
Open an already loaded phar
Open an ephemeral index to use for the distinct set.
Open an in-memory journal file.
Open an rbu file handle.
Open and close a Pager connection.
Open and close a connection to a write-ahead log.
Open and return a new RBU handle.
Open connection to the WAL file
Open destination file
Open every index that needs updating.
Open existing file, or create if it doesn't exist
Open file descriptor of file being opened
Open file descriptor on path
Open file handle on the write-ahead log file.
Open it and check if it points at the master journal.
Open it now if this is the case.
Open it now so this can happen.
Open page 1 of the file for writing.
Open session handler first
Open the RBU database
Open the backend database driver
Open the case.dat file.
Open the cmbcl.dat file.
Open the comp.dat file.
Open the connection to the log file.
Open the ctype.dat file.
Open the database file.
Open the database handle and attach the RBU database as "rbu".
Open the decomp.dat file.
Open the dynamic library located at zPath and return a handle.
Open the file indicated and write a log of all unfreed memory  allocations into that log.
Open the given file and temporary file
Open the index sub-system
Open the journal file for pager pPager and write a journal header to the start of it.
Open the journal file if it is not already open.
Open the kdecomp.dat file.
Open the master journal.
Open the num.dat file.
Open the output file.
Open the second temp file, if it is not already open.
Open the shared-memory area associated with database file pDbFd.
Open the sorter cursor if we are to use one.
Open the sqlite_master table stored in database number iDb for writing.
Open the sqlite_stat1 table on this cursor
Open the storage sub-system
Open the sub-journal, if it has not already been opened
Open the target, RBU and state databases
Open transactions both databases.
Open write cursors are moved to the root of the table.
OpenBSD 5.2 (amd64): time_t: int (signed 32bit integer) tv_sec: long (signed 64bit integer)  MinGW-w64 (x64): time_t: long long (signed 64bit integer) tv_sec: long (signed 32bit integer)
OpenBSD and older Darwin lack TLS support
OpenSSL 1.0.2 deprecates RSA_generate_key
OpenSSL does not have SSL_CTX_set1_curves_list()...
OpenSSL had a bug that it doesn't use the certificates in x509s for verifying the chain.
OpenSSL limits parameters according to the level.
OpenSSL provides SSL, TLS and general purpose cryptography.
OpenSSL requires passwords for PEM-encoded files to be at least four characters long.
OpenSSL ruby extension version
OpenSSL will pick the most appropriate one from it.
OpenSSL::Cipher) they are often used to establish a symmetric key shared between two parties that are in possession of each other's public key.
OpenSSL::Digest) to compute a digest of the document that is then encrypted (i.e. signed) using the private key.
OpenSSL::HMAC has a similar interface to OpenSSL::Digest.
OpenSSL::OCSP implements Online Certificate Status Protocol requests and responses.
OpenSSL::PKey::EC::Group
OpenSSL::PKey::EC::Point
OpenSSL::X509::Certificate) often are issued on the basis of a public/private RSA key pair.
Opening a directory is a security risk (we are told) so making it overrideable allows the chromium sandbox to replace this routine with a harmless no-op.
Opens a file, only if it exists.
Opens the file for reading or writing.
Opens the referenced directory.
Operand decoding codes
Operand size override
Operand-sized immediate (no sign extension unless 64 bits)
Operand-sized immediate (no sign extension)
Operand-sized immediate (sign extended)
Operand-sized immediate, possibly 64 bits
Operand-sized immediate, possibly big
Operands are not equal
Operands of the opcode used to ends the loop
Operands which are always/never buffered have fixed strides, and everything has fixed strides when ndim is 0 or 1
Operates at least on doubleword.
Operation       Savepoint Name
Operation performed by this node
Operation terminated by sqlite3_interrupt()
Operations on a single table are grouped together, but may occur in any order (i.e. deletes, updates and inserts are all mixed together).
Operations on page references.
Operator for the combined expression
Operator(s) to scan for
Operators and special symbols
Opposed to PyArray_IntpFromSequence it uses and returns npy_intp for the number of values.
Optimal text encoding
Optimization for if no strip flags are set
Optimization for unstructured dtypes
Optimization possible:
Optimize adding the first item.
Optimize for pattern with * at end or before /.
Optimize one-character ranges.
Optimize register allocation: use a real register.
Optimize the case of adding the range to the end.
Optimize the cases of extending the last range and adding new ranges to the end.
Optimize using call-graph
Optimized for English alphabet.
Optimizing character pairs, if their difference is power of 2.
Option for nontransitional processing in ToASCII().
Option for nontransitional processing in ToUnicode().
Option to allow processing of unassigned codepoints in the input
Option to check for whether the input conforms to the BiDi rules.
Option to check for whether the input conforms to the CONTEXTJ rules.
Option to check if input conforms to STD-3 ASCII rules
Option to prohibit processing of unassigned codepoints in the input and do not check if the input conforms to STD-3 ASCII rules.
Optional WHERE clause to be added
Optional block size to use
Optional column name list for the table
Optional database for lookaside.
Optional list of result-set columns
Optional list of view column names
Optional parameter +mode+ is one of +:read+, +:write+, or +:read_write+.
Optional second parameter is a regular expression for filtering directory contents.
Optional work factor to use
Optional:  "offsets" --- integers indicating the offset into the record of the start of the field.
Optionally takes +file+, +path+, and +line+ which describe the filename, absolute path and first line number of the ruby code in +source+ which are metadata attached to the returned +iseq+.
Optionally takes +options+, which can be +true+, +false+ or a +Hash+, to modify the default behavior of the Ruby iseq compiler.
Optionally you can pass a range, which will return an array containing the entries within the specified range.
Optionally, the connect can be made asynchronously, which will implicitly enable non-blocking mode on the socket.
Options and Configuration
Options that are interpreted here include "vfs" and those that correspond to flags that may be passed to the sqlite3_open_v2() method.
Or  the string "rowid" otherwise.
Or 10, if the estimated number of rows  in the table is less than that.
Or GC will break living objects
Or NULL If the cursor id does not exist.
Or NULL if those keywords are omitted.
Or a nonblocking connect call is in progress on the +socket+.
Or an SQLite error code otherwise.
Or break out of the loop if it is not.
Or else it will cause ORA-1406 error in OCIStmtExecute
Or if N is negative, then -1024*N bytes of memory are allocated and used for as many pages as can be accomodated.
Or if P4 is blank, use the string returned by sqlite3_sql().
Or if a malloc failure occurred.
Or if a trigger program throws a  RAISE(IGNORE) exception.
Or if any argument is a BLOB, throw an error.
Or if any name is not a string or if any value is a BLOB, throw an error.
Or if it is +false+, or +:numeric+, hostname is same as numeric_address.
Or if it is +nil+ or omitted, obeys to +ipsocket.do_not_reverse_lookup+.
Or if it is a non-periodic sample.
Or if it is the default DESC, numerically smaller rowids are larger.
Or if the  specified PK does exist, then (nIndex*2) such operations are required (one delete and one insert on each index b-tree).
Or if the SQLITE_STOREP2 flag is set in P5 store the result of comparison (0 or 1 or NULL) into register P2.
Or if the SQLITE_STOREP2 flag is set in P5, then store the result of comparison in register P2.
Or if the contents do not match, set *pbOk to false before returning.
Or if the operation would have resulted in an overflow, leave *pA unchanged and return 1.
Or if the threshold is -1, statement journals are always held exclusively in memory.
Or if the writeOnly flag is set to 1, then only trip write cursors and leave read cursors unchanged.
Or if this is the first instance of the wildcard, the next sequenial variable number is assigned.
Or if this is the first instance of the wildcard, the next sequential variable number is assigned.
Or if zWord is not a keyword, return 0.
Or in a trigger one of the special names "old" or "new".
Or insert a No-op and add the comment to that new instruction.
Or it can be 1 to represent a 65536-byte page.
Or it could be the case that the same database connection is being used by two or more threads at the same moment in time.
Or it returns NULL if JSON is not well-formed.
Or it will return +nil+ if the arguments are not comparable.
Or maybe the btree was rebalanced.
Or no initial values if the row was inserted.
Or no rows otherwise.
Or one of 719 other combinations might be used.
Or query for the current value of N.
Or return -1 if p is not a floating point value between 1.0 and 0.0.
Or return zDflt if the column  has no declared type.
Or sets value specified by the member name of VT_RECORD OLE variable.
Or the PK cursor for WITHOUT ROWID
Or the implementation might recognize that a database file will be doing page-aligned sector reads and writes in a random order and set up its I/O subsystem accordingly.
Or the key itself if intkey flag is set.
Or the only record if currently generating a patchset.
Or the template will be ignored and no insert will occur if an existing WhereLoop is faster and has fewer dependencies than the template.
Or there is a transaction open on the destination database.
Or there never was a  blocking transaction.
Or to a non-unique first byte after study
Or to just after a linebreak for a multiline match
Or use them with deep understanding about this method.
Or we reference multiple rows using a "rowid IN (...)" construct.
Or when  implicit "x IN (SELECT x FROM tbl)" terms are added for skip-scans.
Or you need to read the source code of this function and understand what this function does.
Or, create an ephemeral index capable of holding primary keys in the case of a WITHOUT ROWID.
Or, create an ephermeral index capable of holding primary keys in the case of a WITHOUT ROWID.
Or, equivalently, the number of equality constraints optimized by the proposed index scan.
Or, even if a larger default MMAP_SIZE is specified at compile-time, make sure that it does not exceed the maximum mmap size.
Or, if  there already exists a mapping for this file, and there are still  outstanding xFetch() references to it, this function is a no-op.
Or, if P2 is 0, raise an SQLITE_CORRUPT error.
Or, if SQLITE_ENABLE_FTS3_PARENTHESIS is defined, then it uses the new syntax.
Or, if a phrase contains one or more deferred tokens and one or more non-deferred tokens, then the expression is advanced to the  next possible match, considering only non-deferred tokens.
Or, if aBuf is NULL, the only thing this function does is set *pnWrite.
Or, if abPK is other than NULL, then the record contains only the PK fields (in other words, it is a patchset DELETE record).
Or, if all rows are scanned, NULL is returned.
Or, if an  error has already occurred when this function is called, return NULL  immediately without attempting the allocation or modifying the stored error code.
Or, if an OOM error occurs within a call to sqlite3_value_text() (may fail if the db is utf-16))  SQLITE_NOMEM is returned.
Or, if an OOM is encountered, SQLITE_NOMEM is returned (and the output variables are undefined).
Or, if an error  occurs, an SQLite error code (e.g. SQLITE_NOMEM) is returned.
Or, if an error  occurs, return some other error code.
Or, if an error (e.g. SQLITE_NOMEM) occurs within this function (*pRc) is set accordingly before returning.
Or, if an error (e.g. an OOM or IO error) occurs, return an SQLite  error code.
Or, if an error does occur, return an SQLite error code.
Or, if an error does occur, set *pRc to SQLITE_ERROR.
Or, if an error does occur, set *ppOut to NULL and return an SQLite error code.
Or, if an error has already occurred when this function is called, NULL is returned immediately, without attempting the allocation or modifying the stored error code.
Or, if an error has occurred, free the iterator object and set the output variable to NULL.
Or, if an error occurs (e.g. an OOM condition or IO error), an appropriate SQLite error code is  returned.
Or, if an error occurs during the execution of this function, it sets the error code in the sqlite3rbu object indicated by the first argument and returns zero.
Or, if an error occurs while querying the database, return an SQLite  error code.
Or, if an error occurs, (*ppVal) is set to NULL and an SQLite error code returned.
Or, if an error occurs, an SQLite  error code should be returned.
Or, if an error occurs, an SQLite error code is returned and both output variables set  to 0.
Or, if an error occurs, an SQLite error code is returned and the final value  of *ppOut is undefined.
Or, if an error occurs, an SQLite error code is returned.
Or, if an error occurs, an SQLite error code.
Or, if an error occurs, return an SQLite error code.
Or, if an out-of-memory condition occurs during processing, this function returns SQLITE_NOMEM.
Or, if argument zTab is NULL, then changes are recorded for all tables in the database.
Or, if bIncrRowid is non-zero, then each OP_Rowid is transformed into an instruction to increment the value stored in its output register.
Or, if bOptOk is non-zero, then one or more tokens within the expression may be loaded incrementally, meaning doclist.aAll/nAll is not available.
Or, if boolean index P1 is initially empty, leave P3 unchanged and jump to instruction P2.
Or, if conflict handling is not required, bind just the PK column values and, if it exists, set (nCol+1) to false.
Or, if iCol is non-negative but less than the number of columns in the table, return the total number of tokens in column iCol, considering all rows in  the FTS5 table.
Or, if iCol is non-negative but less than the number of columns in the table, set pnToken to the number of tokens in column iCol of the current row.
Or, if iFrom is valid - each iterator that points to a rowid before iFrom.
Or, if iIdx is equal to the total number of cells in pParent, that page number iChild is the right-child of the page.
Or, if iIdxNoSeek is not a valid cursor number, the position of iDataCur should be preserved instead.
Or, if iLevel is zero or greater, data from the first nSegment segments on level iLevel is merged.
Or, if isPrefix is true, to scan the doclist for all terms for which  zTerm/nTerm is a prefix.
Or, if isPrefixIter is non-zero, it iterates through each term and its prefixes.
Or, if it fails, it returns INVALID_SET_FILE_POINTER.
Or, if it is a floating point value, it may continue with either a decimal point or an 'E' character.
Or, if it is set, then the rule only applies to every second codepoint in the range, starting with codepoint C.
Or, if it is still in main memory but is being truncated to zero bytes in size, ignore
Or, if it is too small to bother with, discards it.
Or, if it is zero, in ascending order.
Or, if it points to a DELETE or UPDATE, bind values from the old.* record.
Or, if it returns CHANGESET_ABORT, the changeset is rolled back.
Or, if nLoop is greater than zero, set isOrdered to -1, indicating that the result set may or may not be ordered,  depending on the loops added to the current plan.
Or, if no error occurs and it seems the current row does match the FTS query, return 0.
Or, if no error occurs but the table has no primary key, sqlite3_session.rc is left set to SQLITE_OK and non-zero returned to indicate that updates on this table should be ignored.
Or, if no such row is found in the table, a DELETE  change is added to the changeset.
Or, if one cannot but no error occurs, set *pp to 0 and return SQLITE_OK.
Or, if one or more or the pager caches are shared, the value returned by this call will be smaller than that returned by DBSTATUS_CACHE_USED.
Or, if pCtx is not NULL, it is assumed that the caller will free any allocated object in all cases.
Or, if pExpr is NULL (due do a memory allocation failure) then delete the pSelect object.
Or, if pExpr is a TK_VECTOR, one field is populated for each of the vector components that match either of the two latter criteria listed above.
Or, if pLast is non-NULL, then it is the page that contains the last rowid.
Or, if pNear is not NULL, phrase pPhrase is appended to it and the results returned.
Or, if pbReplace is not NULL, invoke it with CHANGESET_CONFLICT.
Or, if pbRetry is not NULL and a CHANGESET_DATA conflict occurs, invoke the conflict handler.
Or, if running in multi-threaded mode, then a background thread is launched to merge the existing PMAs.
Or, if some error occurs before the query completes or is aborted by the callback, an SQLite error code is returned.
Or, if sqlite3.nVdbeExec is greater than 1,  then the returned string holds a copy of zRawSql with "-- " prepended to each line of text.
Or, if that particular value is not included in the record (because the change is an UPDATE and the field was not modified and is not a PK column), set *ppValue to NULL.
Or, if that particular value is not included in the record (because the change is an UPDATE and the field was not modified), set *ppValue to NULL.
Or, if the  allocation comes from the pSpace/szSpace buffer, *ppFree is set to NULL before returning.
Or, if the EXCLUSIVE lock cannot be obtained, SQLITE_BUSY is returned.
Or, if the IncrMerger is single threaded, the same function is called using the current thread.
Or, if the P4 argument is a P4_MEM use the value of the P4 argument as the result.
Or, if the RHS of the IN() is not  a sub-query, that the LHS is a vector of size 1.
Or, if the argument position list does not contain any entries for column iCol, return 0.
Or, if the buffer contains a changeset, so must have the earlier calls to this function.
Or, if the change was made by a trigger program, it returns the number of trigger programs currently on the stack (1 for a top-level trigger, 2 for a trigger fired by a  top-level trigger etc.).
Or, if the children are satisfied by an index, the original BETWEEN term is skipped.
Or, if the close-quote is not  found, -1 is returned.
Or, if the conditions above are not met, *ppMinMax is set to 0 and WHERE_ORDERBY_NORMAL is returned.
Or, if the conflict handler returns an invalid value,  SQLITE_MISUSE.
Or, if the contents of the FTS index are incorrect, return SQLITE_CORRUPT_VTAB.
Or, if the current delete will not cause a rebalance, then the cursor will be left in CURSOR_SKIPNEXT state pointing to the entry immediately before or after the deleted entry.
Or, if the expression is a sub-select, return the number of columns in the sub-select.
Or, if the fourth parameter is 2, then the connection being passed as the second parameter is being closed.
Or, if the input buffer is exhausted, xTokenize() should return SQLITE_OK.
Or, if the inputs were patchsets, the output is also a patchset.
Or, if the iterator has reached EOF, set *pbEof to true.
Or, if the iterator is "ORDER BY rowid DESC", then it means the minimum rowid.
Or, if the master chunk is not large enough, return 0.
Or, if the name of a WITHOUT ROWID table is supplied instead, find the PRIMARY KEY index for that table.
Or, if the on-conflict mode is other than REPLACE, then this method must detect the conflict and return SQLITE_CONSTRAINT before beginning to modify the database file.
Or, if the page size has already been fixed, return SQLITE_READONLY  without changing anything.
Or, if the sorter is running in multi-threaded mode then up to (N+1) temporary files may be opened, where N is the configured number of worker threads.
Or, if the table does have an external primary key index, then *piPk is set to the root page number of the primary key index before returning.
Or, if the third argument is NULL, then this function is being called  to inform the VFS layer that, according to POSIX, any existing mapping  may now be invalid and should be unmapped.
Or, if the third argument is NULL, then this function is being called to inform the VFS layer that, according to POSIX, any existing mapping may now be invalid and should be unmapped.
Or, if the tokenization was abandoned early because the callback returned another non-zero value, it is assumed to be an SQLite error code and returned to the caller.
Or, if the tree that the node is part of has been marked as EOF, but the node itself is not EOF, then it may point to an earlier entry.
Or, if the virtual table has reached the end of its result set, then fall through to the next instruction.
Or, if the zParent parameter is passed NULL,  then the new RBU VFS uses the default system VFS to access the file-system.
Or, if there already exists a mapping for this file, and there are still outstanding xFetch() references to it, this function is a no-op.
Or, if there are no segments at all  within level iAbsLevel, set *piIdx to zero.
Or, if there are not nByte bytes remaining in the input, that all available data is in the buffer.
Or, if there is no stat3/stat4 data, using some other estimate.
Or, if they do overlap (share one or more tokens in common), each set of overlapping instances is treated as a single match.
Or, if this is a temporary file, leave both nPathname and zPathname set to 0.
Or, if this is not possible, it may return SQLITE_CONSTRAINT, in which case SQLite falls back to OR ABORT  constraint handling.
Or, if this module is being built as a loadable extension,  sqlite3Fts5Init() is omitted and the two standard entry points sqlite3_fts_init() and sqlite3_fts5_init() defined instead.
Or, if this rbu is in the RBU_STAGE_OAL state, use heap memory for *-shm space  instead of a file on disk.
Or, if using the onepass strategy, jump to here if the scan visited zero rows.
Or, if writeOnly is false, all cursors are  tripped.
Or, if xOutput is NULL, then (*ppOut) is populated with a pointer to a buffer containing the output changeset before this function returns.
Or, if zName is not a system table, zero is returned.
Or, if zState is non-NULL, it must be a path to a database file in which  the RBU extension can store the state of the update.
Or, it  may mean that the pager was in the error-state when this function was called and the journal file does not exist.
Or, it could be that the journal is  preserved because of JOURNALMODE_PERSIST or JOURNALMODE_TRUNCATE.
Or, it might be the case that the file on disk is smaller than  nPage pages.
Or, it might might be the case that the file on disk is smaller than  nPage pages.
Or, on LinuxThreads, there is one of these structures for each inode opened by each thread.
Or, set the memory at +start+ until +length+ with the contents of +string+, the memory from +dl_cptr+, or the memory pointed at by the memory address +addr+.
Or, that if SQLITE_MIXED_ENDIAN_64BIT_FLOAT is defined that 64-bit floating point values really are mixed endian.
Or, the freeblock is off the end of the page
Or, this symbol can be set manually, if desired.
Oracle LOBS are 1-based, but PHP is 0-based
Oracle doc says don't free Implicit Result Set handles
Order eigenvalues and eigenvectors.
Order of Phis is importent, Pis must be placed before Phis
Order of execution important.
Order of subpattern matches
Ordinarily, if no value is explicitly provided, SQLite creates databases with page size SQLITE_DEFAULT_PAGE_SIZE.
Ordinary Step 3, for the case where FALSE and NULL are distinct
Original Berkeley DB was limited to 2GB of data.
Original I/O methods for close
Original KeyInfo on the sorter table
Original SQL parameter values
Original SQL values of parameters
Original algorithm for the implementation of rk_interval function from Richard J.
Original and Extended methods added 2005
Original list of tables
Original lockingcontext to restore on close
Original name of the table
Original number of pages in file
Original schema cookie in destination
Original text of the default value
Original text of the expression
Original text: "The subquery does not use aggregates or the outer query  does not use LIMIT."  (11)  The subquery and the outer query do not both have ORDER BY clauses.
Original value of iSize
Original, innermost WhereClause
Originally, PCRE did not allow repetition of assertions, but now it does, for Perl compatibility.
Originally, it was either part of sibling page iOld (possibly an overflow cell),  or else the divider cell to the left of sibling page iOld.
Originally, the table contained pointers to the name strings in the first field of each entry.
Originally, this function checked according to RFC 2279, allowing for values in the range 0 to 0x7fffffff, up to 6 bytes long, but ensuring that they were in the canonical format.
Originally, this space was supposed to be taken from the current stack frame of the caller, but that method cannot be made to work for some implementations of C, for example under Gould's UTX/32.
Originated in ON or USING clause of a join
Originates in ON/USING clause of outer join
Other  compilers might be similar.
Other OSes may have the same limitation for sendfile() which allow us to bypass maygvl_copy_stream_wait_read()...
Other Ruby threads can not run in parallel any more.
Other Ruby threads may run in parallel.
Other bits in *pOutFlags may be set.
Other brackets simply allocate the next entry.
Other cases already resolved by constant folding
Other characters: check option setting
Other classes are built from combinations.
Other compilers don't.
Other conditions use OP_CREF/OP_DNCREF/OP_RREF/OP_DNRREF, and all need to skip at least 1+IMM2_SIZE bytes at the start of the group.
Other conflict types work in the same way as for changesets.
Other conversion functions
Other core numeric classes such as Integer are implemented as immediates, which means that each Integer is a single immutable object which is always passed by value.
Other drivers will bork
Other elements are only meaningful when result is :invalid_byte_sequence, :incomplete_input or :undefined_conversion.
Other fields are set to the values that made up the row before the UPDATE that the change records took place.
Other initializations.
Other interfaces will accept either a protected or an unprotected sqlite3_value.
Other keys are matched again the table on the first len characters.
Other kinds of condition fail.
Other kinds of conversion are done in place when it is possible, but sometimes they are not possible and in those cases prior pointers are invalidated.
Other matching errors are not recoverable.
Other metadata is left along.
Other parts of the system access this functionality via the interface defined in fts5Int.h.
Other processes may hold and obtain new SHARED locks.
Other recursion is handled here.
Other than that this function should correctly handle all reshapes, including axes of length 1.
Other than this, no guarantees are made as to the size of the chunks of data returned.
Other than this, session module may call any PS_*_FUNC() at any time.
Other than true/false setting
Other things people escape, but shouldn't need to, so we disallow them
Other threads might append new content to the WAL and wal-index but that extra content is ignored by the current thread.
Other types are error.
Other unhandled cases
Other values default to the minimum value for that field (and may be +nil+ or omitted).
Other values in the md block are used only during "normal" pcre_exec() processing, not when the JIT support is in use, so they are set up later.
Other values of n (P4_STATIC, P4_COLLSEQ etc.) indicate that zP4 points to a string or structure that is guaranteed to exist for the lifetime of the Vdbe.
Others complain about 0x7ffffffffffffffffLL.
Others have strcasecmp().
Others use open(const char*,int,...).
Otherwise (if the flag is clear) then this opcode is part of an INSERT operation.
Otherwise +chfunc+ will be called with +charg+, and then the child process exits with +EXIT_SUCCESS+ when it returned zero.
Otherwise +unused_bits+ indicates the number of bits that are to be ignored in the final octet of the +BitString+'s +value+.
Otherwise --- type is a sub-type of an array scalar not corresponding to a registered data-type object.
Otherwise ILO and IHI should be set to 1 and N respectively.
Otherwise PHP-compare.
Otherwise SQLITE_OK is returned.
Otherwise Table.iPKey is negative.
Otherwise a cast is necessary
Otherwise a moveToChild() or moveToRoot() call would have detected corruption.
Otherwise a new WhereLoop is added based on the template.
Otherwise an SQLite error code.
Otherwise an error would have been thrown during name resolution and we would not have gotten this far
Otherwise an out-of-order write following a WAL restart could result in database corruption.
Otherwise an overriding method in a child class may be called.
Otherwise assume it's a Python TZInfo, or acts like one
Otherwise calculate the number of days to start
Otherwise convert through a datetimestruct
Otherwise convert to an array and do an array-based copy
Otherwise convert to an array to do the assignment
Otherwise convert to the provided unit metadata
Otherwise create a plain descr from the type number
Otherwise create and use an iterator to count the nonzeros.
Otherwise create new dtype object from type num.
Otherwise discard it and return zero.
Otherwise do a casting transformation
Otherwise fall back to the default logging location, if we have one
Otherwise fall back to the named semaphore method.
Otherwise fall through to delete char to right of cursor
Otherwise fall through to the next case
Otherwise fall through to the next instruction.
Otherwise fall through.
Otherwise further processing may be required.
Otherwise getput_arg_fast would capture it.
Otherwise if the pre-update-hook does not affect the same row as pChange, it returns false.
Otherwise if the stream has some content, it returns the data in the stream.
Otherwise if the stream is reached to EOF, it raises EOFError.
Otherwise it is +e+ (for the natural logarithm).
Otherwise it is a lowercase u letter.
Otherwise it is a lowercase x letter.
Otherwise it is false.
Otherwise it leads to false matches in memdup check.
Otherwise it needs to clear out its own stack frame and continue the execution on the backtrack code paths.
Otherwise it returns +true+ and the following data of full flush point is preserved in the buffer.
Otherwise it returns the number of TCHARs written to the output buffer, excluding the terminating null char.
Otherwise it returns with a value outside the range.
Otherwise it returns with zero.
Otherwise it was last year's highest week, which is this year's week 0.
Otherwise it will return a Process::Status instance.
Otherwise it will return the character that should be handled next.
Otherwise it's a cross-join edge.
Otherwise it's guaranteed to be a fixed stride if the stride is 0 for all the dimensions.
Otherwise it's the maximum 'ndim' from the operands
Otherwise iterate over the whole operand, but tell the inner loop to skip the elements we already copied by setting the skip_first_count.
Otherwise just pass in the dtype
Otherwise look for the name.
Otherwise no conversion occurs.
Otherwise only allow 1 (enabled), and error on disabling
Otherwise original str param.
Otherwise output the error message
Otherwise parse the data in place
Otherwise propagate the error
Otherwise read mode is used.
Otherwise return +left or -right depending on which is defined.
Otherwise return 0 and set view to point to a new view into arr for the given fields.
Otherwise return NULL.
Otherwise return SQLITE_OK.
Otherwise return a date
Otherwise return false.
Otherwise returns NOT_AVAILABLE or NOT_INITIALIZED
Otherwise returns false.
Otherwise returns nil.
Otherwise see if some other process holds it.
Otherwise simple pairwise merging is used.)
Otherwise strings are returned, which is also the default.
Otherwise take the path literally.
Otherwise the behavior is undefined.
Otherwise the browser will bubble the event and give focus to the element on the page that actually did end up consuming it.
Otherwise the changes made by this write cursor would be visible to the read cursors in the other database connection.
Otherwise the collation sequence for the right hand expression is used, or the default (BINARY) if neither expression has a collating type.
Otherwise the file would typically be slightly larger.
Otherwise the iMax-th mapping entry of the current index block corresponds to the last entry that references  page P.
Otherwise the initialization process would never complete.
Otherwise the journal might resurrect following a power loss and cause the last transaction to roll back.
Otherwise the location of the value may be freed.
Otherwise the pager should have already dropped back to OPEN state.
Otherwise the returned array won't guarantee it -- it will depend on the object as to whether or not it has such features.
Otherwise the strides can change if the operand is sometimes buffered, sometimes not.
Otherwise the string is length encoded.
Otherwise the user wanted to delete the group.
Otherwise thely may interfere with compilation of other functions in this file (or in another file, if this file becomes part of the amalgamation).
Otherwise there is just one following character
Otherwise they may interfere with compilation of other functions in this file (or in another file, if this file becomes part of the amalgamation).
Otherwise this case would be handled by the normal code path.
Otherwise ties are broken by biased rounding (add half and chop).
Otherwise unless _signal_ is a +String+ or a +Symbol+, and a known signal name, +ArgumentError+ will be raised.
Otherwise update the main code pointer to the end of the group.
Otherwise use "AT_MOST" in the cross axis.
Otherwise use CanCastTypeTo
Otherwise use extra data.
Otherwise use no affinity.
Otherwise use separate caches (mode-1)
Otherwise use the dtype's setitem function
Otherwise use the provided metadata
Otherwise useTempTable is true
Otherwise uses the provided 'inout_meta' for all the conversions.
Otherwise we can fall through and treat it the same as any other subpattern.
Otherwise we could have been able to skip that step.
Otherwise we have data available to PASS_ON Swap the brigades and continue
Otherwise we must pick up the subject character.
Otherwise we will have to do send two TCP packets, or do new alloc and memcpy.
Otherwise we would need a facility to handle such exceptions in that handler.
Otherwise we're in runtime
Otherwise you get the following error.
Otherwise,  SQLITE_OK.
Otherwise,  an SQLite error code.
Otherwise,  if the allocation fails, return SQLITE_NOMEM.
Otherwise,  return the actual number of bytes written (which may be less than nBuf).
Otherwise,  syncing an in-memory journal is a no-op.
Otherwise, *ppExpr is set to 0 and SQLITE_NOMEM (out of memory error) or SQLITE_ERROR (parse error) is returned.
Otherwise, *ppOut is set to point to the new object and SQLITE_OK returned.
Otherwise, +nil+ is returned.
Otherwise, 0 is returned and the output part of the sqlite3_index_info structure is left populated.
Otherwise, 0 is returned.
Otherwise, 0x00 is returned, indicating no affinity for the expression.
Otherwise, Contains a copy of the first K eigenvectors which will be used by DLAED7 in a matrix multiply (DGEMM) to update the new eigenvectors.
Otherwise, Contains a copy of the first K eigenvectors which will be used by SLAED7 in a matrix multiply (SGEMM) to update the new eigenvectors.
Otherwise, Expr.x.pList is  valid.
Otherwise, Expr.x.pList is valid.
Otherwise, Friday, Saturday or Sunday, the week number is OK, but if it is 0, it needs to be 52 or 53.
Otherwise, GzipWriter will be not able to write the gzip footer and will generate a broken gzip file.
Otherwise, ParseContext.isNot is set to zero.
Otherwise, Ruby tries adding ".rb", ".so", and so on to the name until found.
Otherwise, SQLITE_ERROR is returned and no changes are added to the changegroup.
Otherwise, SQLITE_MISUSE is returned.
Otherwise, SQLITE_OK is returned after a callback has been made for all eligible phrase nodes.
Otherwise, SQLITE_OK is returned and the output variables are set as described above.
Otherwise, SQLITE_OK is returned and the output variables are set to the size of and a  pointer to the output buffer, respectively.
Otherwise, SQLITE_OK is returned and the output variables populated as described above.
Otherwise, SQLITE_OK is returned.
Otherwise, SQLITE_OK.
Otherwise, SQLite will not check for a *-wal file.
Otherwise, SQLite will not check for the existance of a *-wal file.
Otherwise, THEN is passed back to an outer alternative.
Otherwise, a copy of *paOne is returned and *pnVal set to the number of bytes in the value at *paOne.
Otherwise, a copy of the buffer is made.
Otherwise, a copy of the first K eigenvectors which will be used by DLAED7 in a matrix multiply (DGEMM) to update the new eigenvectors.
Otherwise, a copy of the first K eigenvectors which will be used by SLAED7 in a matrix multiply (SGEMM) to update the new eigenvectors.
Otherwise, a different close routine (e.g. nolockClose()) would be called instead.
Otherwise, a new page object is allocated and populated with data read from the database file.
Otherwise, a power loss might leave modified data in the database file without an entry in the rollback journal that can restore the database to its original form.
Otherwise, add a noop OP_Delete to invoke the pre-update hook.
Otherwise, after balancing the leaf node, walk the cursor up the tree to the internal node and balance it as  well.
Otherwise, allocate an instance of the default tokenizer (unicode61) now.
Otherwise, allocate and fill in an array of results
Otherwise, allocate and return a new page buffer.
Otherwise, an IO error code is returned.
Otherwise, an SQLite error code is  returned.
Otherwise, an SQLite error code is returned and *pp is set to 0.
Otherwise, an SQLite error code is returned and the final values of the various fields enumerated above are undefined.
Otherwise, an SQLite error code is returned and the value of *piVal after returning is not defined.
Otherwise, an SQLite error code is returned.
Otherwise, an SQLite error code.
Otherwise, an error code (perhaps SQLITE_IOERR_FSTAT) is returned and *pnPage is left unmodified.
Otherwise, an error code and message is  left in the RBU handle passed as the first argument.
Otherwise, an error code and message is left in the RBU handle and a copy of the error code returned.
Otherwise, an error is returned.
Otherwise, an error message is written to context pContext and SQLITE_ERROR returned.
Otherwise, any active savepoints are released.
Otherwise, any existing buffer is freed and the pointer copied.
Otherwise, append a blob of data to the buffer.
Otherwise, append a serialized table header (part of the binary  changeset format) to buffer *pBuf.
Otherwise, append a single byte to the buffer.
Otherwise, append a single varint to the buffer.
Otherwise, append a string to the buffer.
Otherwise, append an entry to the hint stored in blob *pHint.
Otherwise, append the string representation of integer iVal to the buffer.
Otherwise, append the string zStr enclosed in quotes (") and with any embedded quote characters escaped to the buffer.
Otherwise, arrange to run another match at the same point to see if a non-empty match can be found.
Otherwise, artifacting occurs.
Otherwise, assuming no error has occurred, save the current state of the RBU update appliation to the RBU database.
Otherwise, at least a savepoint  transaction must be rolled back to restore the database to a  consistent state.
Otherwise, attempt to obtain the lock using sqlite3OsLock().
Otherwise, be sure to call super in your +initialize+ method.
Otherwise, break everywhere.
Otherwise, carry on scanning after the subpattern.
Otherwise, check for recursion here.
Otherwise, do nothing.
Otherwise, does a type promotion on the MinScalarType of all the inputs.
Otherwise, either SQLITE_BUSY or an SQLITE_IOERR_XXX error code is  returned.
Otherwise, either SQLITE_NOMEM (out of memory error) or SQLITE_ERROR (tokenization error) is returned and *ppExpr set to 0.
Otherwise, ensure the vector for holding the return data is large enough.
Otherwise, estimate the number of rows using the method described in the header comment for this function.
Otherwise, fall through to the next  instruction.
Otherwise, fall through to the next instruction.
Otherwise, fall thru into the TK_COLUMN case
Otherwise, flush the current node of layer iLayer to disk.
Otherwise, for a composite foreign key (more than one column), allocate space for the aiCol array (returned via output parameter *paiCol).
Otherwise, for an xCreate(), use 64 bytes less than the database page-size.
Otherwise, for deferred constraints, increment the deferred constraint counter by nIncr for each row selected.
Otherwise, free the buffer and proceed to step 5.
Otherwise, fts3EvalPhraseStart() is called on all phrases within the expression.
Otherwise, if "previous" is NULL, reset the current code pointer to the start.
Otherwise, if *pRc is initially SQLITE_OK and an error occurs while flushing buffers to disk, *pRc is set to an SQLite error code before returning.
Otherwise, if *target is non-NULL, we assume that it points to a dynamically allocated buffer of *target_len bytes length.
Otherwise, if +Encoding.default_external+ has been set, that value is returned.
Otherwise, if +options+ is not +nil+ or +false+, the regexp will be case insensitive.
Otherwise, if P1 is zero, the  statement counter is incremented (immediate foreign key constraints).
Otherwise, if P4 is an integer  value, it is set to the number of columns in the table, or to the largest index of any column of the table that is actually used.
Otherwise, if P4 is an integer  value, it is set to the number of columns in the table.
Otherwise, if aLeft contains a value, copy it.
Otherwise, if abPK is not NULL, it points to an array nCol elements in size.
Otherwise, if all changes in the changeset have already been visited, SQLITE_DONE is returned.
Otherwise, if an OOM condition is encountered, set *pRc to SQLITE_NOMEM and return non-zero.
Otherwise, if an OOM error is encountered by this function, NULL is returned and *pRc is set to SQLITE_NOMEM.
Otherwise, if an OOM error is encountered trying to resize the buffer, return SQLITE_NOMEM.
Otherwise, if an OOM occurs within this function, *pRc is set to SQLITE_NOMEM before returning.
Otherwise, if an error does occur, set *ppStmt to NULL and return an SQLite error code.
Otherwise, if an error is encountered (i.e. an IO error or database corruption) an SQLite error code is returned.
Otherwise, if an error occurs during execution, *pRc is set to an SQLite error code.
Otherwise, if an error occurs, *pRc is set to an SQLite error code before returning.
Otherwise, if an error occurs, *pRc is set to an SQLite error code.
Otherwise, if an error occurs, *pp is set to zero and an SQLite error code is returned.
Otherwise, if an error occurs, *ppStmt is set to NULL and an error code returned.
Otherwise, if an error occurs, an SQLite error code is returned and  expression (*pp) freed.
Otherwise, if an error occurs, an SQLite error code is returned and the final values of (*pz) and (*pn) are undefined.
Otherwise, if an error occurs, an SQLite error code is returned.
Otherwise, if an error occurs, an SQLite error code is stored in *pRc before returning.
Otherwise, if an error occurs, return an SQLite error code.
Otherwise, if an error occurs, set *pnMax to zero and return an SQLite error code.
Otherwise, if another thread holds the mutex and it cannot be obtained, return SQLITE_BUSY.
Otherwise, if argument isClearTable is false, then the row with rowid iRow is being replaced or deleted.
Otherwise, if eMode is any value other than INCRINIT_ROOT, then use  vdbePmaReaderIncrMergeInit() to initialize each PmaReader that feeds data  to pMerger.
Otherwise, if forked successfully, the value of +status+ is undetermined.
Otherwise, if iNext is less than FTS3_MERGE_COUNT, allocate index iNext.
Otherwise, if it is one of two or more, none of the columns can be considered to match an ORDER BY term.
Otherwise, if it were done after calling sqlite3PcacheMakeDirty(), then an error might occur and the pager would end up in WRITER_LOCKED state with pages marked as dirty in the cache.
Otherwise, if minimizing, keep trying the rest of the expression and advancing one matching character if failing, up to the maximum.
Otherwise, if nByte is less than zero, then the  requested size is the size of the file on disk.
Otherwise, if nByte is less than zero, then the requested size is the size of the file on disk.
Otherwise, if no IO or malloc errors  occur, SQLITE_OK is returned.
Otherwise, if no OOM error occurs, it is set to SQLITE_OK.
Otherwise, if no OP_Explain is coded, zero is returned.
Otherwise, if no error occurs and the iterator is successfully advanced, *pbEof is set to 0.
Otherwise, if no error occurs, SQLITE_OK is  returned.
Otherwise, if no error occurs, this function returns SQLITE_OK if the update has been partially applied, or SQLITE_DONE if it has been  completely applied.
Otherwise, if no row is found and no error has occured, the statement is reset and SQLITE_OK is returned.
Otherwise, if no sqlite_stat1 entry is available, use  RTREE_DEFAULT_ROWEST.
Otherwise, if no such child journal can be found, file zMaster is deleted from the file-system using sqlite3OsDelete().
Otherwise, if no such function exists, return NULL.
Otherwise, if one or  more changes have been recorded, return zero.
Otherwise, if op is  SAVEPOINT_RELEASE, then the xRelease method of each virtual table with an open transaction is invoked.
Otherwise, if pExpr is NULL, then SQLITE_IGNORE is treated as SQLITE_DENY.
Otherwise, if pKeyInfo is NULL, the caller expects a table b-tree.
Otherwise, if pTemp1 contains more than SORTER_MAX_MERGE_COUNT PMAs, initialize interators for SORTER_MAX_MERGE_COUNT of them.
Otherwise, if paRec and pnRec are not NULL, then a pointer to the change record is written to *paRec before returning and the number of bytes in the record to *pnRec.
Otherwise, if pgno is not in the wal file, set *piRead to zero.
Otherwise, if successful, SQLITE_OK is returned.
Otherwise, if the allocation succeeds, (*pRc) is left unchanged.
Otherwise, if the callback function does not return an error, this function returns SQLITE_OK.
Otherwise, if the cells are added successfully, zero is returned.
Otherwise, if the command was simply "PRAGMA integrity_check" (or "PRAGMA quick_check"), then iDb is set to 0.
Otherwise, if the connection does not already have an EXCLUSIVE lock on  the database file, an attempt is made to obtain one.
Otherwise, if the entry deleted was on an internal node page, then pCur is pointing to the leaf page from which a cell was removed to replace the cell deleted from the internal node.
Otherwise, if the inserted row is exactly the same  as the deleted row, the existing DELETE is simply discarded.
Otherwise, if the only argument does not match the above pattern, an SQL NULL is returned.
Otherwise, if the optimization is both enabled and applicable, then call pager_incr_changecounter() to update the change-counter in 'direct' mode.
Otherwise, if the page is loaded and written again in this transaction, it may be written to the database file before it is synced into the journal file.
Otherwise, if the realloc() fails, *pIdx is set to -1, *pnEntry remains unchanged and a copy of pArray returned.
Otherwise, if the return value is non-zero or the xFilter argument to this function is NULL, all changes related to the table are attempted.
Otherwise, if the second argument is non-zero, then this function is  being called indirectly by sqlite3Stat4ProbeSetValue().
Otherwise, if the statement cannot be recompiled because another connection has locked the sqlite3_master table, return SQLITE_LOCKED.
Otherwise, if there are no triggers or the recursive-triggers flag is not set, but the table has one or more indexes, call  GenerateRowIndexDelete().
Otherwise, if there are one or more outstanding references, the page content is reloaded from the database.
Otherwise, if there is an open read-transaction, return SQLITE_ERROR and leave an error  message in database handle db.
Otherwise, if there is no primary key match, it is a NOTFOUND.
Otherwise, if there's a dval or no need to check for a full match, stop when there are too many digits for a long
Otherwise, if they are not NULL, variable *pnCol is set to the number of columns in the database table and variable *pzTab is set to point to a nul-terminated copy of the table name.
Otherwise, if this is not a WAL database or the WAL file is empty, return 0.
Otherwise, if we know what the first byte has to be, save it, because that speeds up unanchored matches no end.
Otherwise, insert the integer in P3 into the RowSet and continue on to the next opcode.
Otherwise, insert the key into the temp table and proceed with processing the row.
Otherwise, invoke it for the database named zDb only.
Otherwise, it adds a single row of output to the EQP result, where the caption is of the form:  "USE TEMP B-TREE FOR xxx"  where xxx is one of "DISTINCT", "ORDER BY" or "GROUP BY".
Otherwise, it advances the expression passed as the second argument to point to the next matching row in the database.
Otherwise, it arranges things so that the next call to sqlite3rbu_step() continues on from where the previous rbu handle left off.
Otherwise, it has to be merged into an in-memory  doclist and then traversed.
Otherwise, it invokes the vdbePmaReaderIncrMergeInit() function with the parameters passed to this routine to initialize the incremental merge.
Otherwise, it is 1 plus the number of overflow pages consumed by a record B bytes in size.
Otherwise, it is always set to zero.
Otherwise, it is assumed that the doclist is simply a list of docids stored as delta encoded  varints.
Otherwise, it is not truncated.
Otherwise, it is quoted using double-quotes.
Otherwise, it is set to point to an allocated array of size N, where N is the number of columns in the parent key.
Otherwise, it may pass NULL.
Otherwise, it means we have failed to find a non-empty-string match at a point where there was a previous empty-string match.
Otherwise, it must be initialized.
Otherwise, it points to an array of flags nTblCol elements in size.
Otherwise, it returns SQLITE_OK.
Otherwise, it returns nil.
Otherwise, it should return some other SQLite error code.
Otherwise, it switches the pager to PAGER_OPEN state.
Otherwise, it tests whether or not after considering NEAR operators and deferred tokens the current row is still a match for the expression.
Otherwise, it will become a leaf of the first trunk page in the current free-list.
Otherwise, it's this year.
Otherwise, just insert the unique subpattern number.
Otherwise, just report that they are block special files and go on to the next file.
Otherwise, just store a copy of the pointer.
Otherwise, keep going.
Otherwise, leave it unchanged.
Otherwise, leave nUp pointing to the number of statements currently in the cache and pUp to the last object in the list.
Otherwise, leave the firstchar value alone, and don't change it on a zero repeat.
Otherwise, load it into memory.
Otherwise, mPrereq is a mask of all FROM clause entries that occur before the virtual table in the FROM clause and are separated from it by at least one LEFT or CROSS JOIN.
Otherwise, make arrangements to invoke xNotify when pOther drops its locks.
Otherwise, on entry, Q contains the eigenvectors of the partially solved system which has been previously updated in matrix multiplies with other partially solved eigensystems.
Otherwise, only column iCol is considered.
Otherwise, pNode is advanced until it does point to a match or EOF is reached.
Otherwise, pPrev contains a copy of the  previous term.
Otherwise, pass back the return code unaltered.
Otherwise, pointer pabPK.
Otherwise, populate the NodeReader structure output  variables for the new entry.
Otherwise, read the next varint from *pp, increment the current value of *pi by the value read, and set *pp to point to the next value before returning.
Otherwise, read them from the frame header of the previous frame.
Otherwise, request the page from the PCache layer.
Otherwise, results may correspond to a matrix modified by perturbations of size near the underflow threshold.
Otherwise, return  SQLITE_NOMEM if the attempt to allocate Pager.pInJournal fails, or  an IO error code if opening or writing the journal file fails.
Otherwise, return  SQLITE_OK.
Otherwise, return -ve if the pSeg term is less than zTerm/nTerm, 0 if the two terms are equal, or +ve if the pSeg term is greater than zTerm/nTerm.
Otherwise, return NULL to indicate a parse error.
Otherwise, return SQLITE_OK and set *pRes to a negative, zero or positive value, depending on whether key1 is smaller, equal to or larger than key2.
Otherwise, return SQLITE_OK.
Otherwise, return a copy of the argument.
Otherwise, return a copy of the second parameter, iDefault.
Otherwise, return an SQLite error code and set ppPage to zero.
Otherwise, return an SQLite error code.
Otherwise, return an error code to the caller.
Otherwise, return an error code.
Otherwise, return an error.
Otherwise, return non-zero.
Otherwise, return zero.
Otherwise, returns Qnil.
Otherwise, returns a new array built by concatenating the +int+ copies of +self+.
Otherwise, returns an array with both a +numeric+ and +num+ represented as Float objects.
Otherwise, returns another curried proc that takes the rest of arguments.
Otherwise, returns the array's data type.
Otherwise, scan the individual branches of the group.
Otherwise, set *pRes to a negative, zero or positive value if the key in pVal is smaller than, equal to or larger than the current sorter key.
Otherwise, set *pbRes to 0.
Otherwise, set *pp to NULL and return an SQLite error code.
Otherwise, set *ppFd to 0 and return an SQLite error code.
Otherwise, set *ppFile to 0 and return an SQLite error code.
Otherwise, set *pzErr to an error message and return SQLITE_ERROR.
Otherwise, set Fts3SegReader.iDocid to the next docid and Fts3SegReader.pOffsetList to point to the next offset list before returning.
Otherwise, set it NULL.
Otherwise, set the flag and fall through to the next instruction.
Otherwise, set the length to the length of what was matched by the referenced subpattern.
Otherwise, sync the database file for the btree pBt.
Otherwise, the +fork+ call returns twice, once in the parent, returning the process ID of the child, and once in the child, returning _nil_.
Otherwise, the actions required depend on the journal-mode and the  device characteristics of the file-system, as follows:  If the journal file is an in-memory journal file, no action need be taken.
Otherwise, the argument is a column name.
Otherwise, the argument is enclosed in single quotes with single-quote escapes.
Otherwise, the caller should call Tcl_UtfCharComplete() before calling this routine to ensure that enough bytes remain in the string.
Otherwise, the child node is guaranteed to have advanced at least as far as rowid iLast.
Otherwise, the content of this template is copied straight through into the generate parser source file.
Otherwise, the cursor is set to point to the first cell located on the root (or virtual root) page and the cursor state is set to CURSOR_VALID.
Otherwise, the entire doclist is loaded into memory within this call.
Otherwise, the error code is propagated upwards.
Otherwise, the expression is resolved in the usual way - using sqlite3ResolveExprNames().
Otherwise, the first parameter should be the name of an +Exception+ class (or an object that returns an +Exception+ object when sent an +exception+ message).
Otherwise, the following function call is a no-op.
Otherwise, the following line sets YYVAL to garbage.
Otherwise, the given +name+, as a string,  is loaded if available to your runtime, and returns true.
Otherwise, the given command or block will be run.
Otherwise, the kernel might terminate the process with `SIGBUS`.
Otherwise, the label is #N where is an integer that is incremented with each SELECT statement seen.
Otherwise, the length of the string is determined using strlen().
Otherwise, the name of this struct will appear as a constant in class Struct, so it must be unique for all Structs in the system and must start with a capital letter.
Otherwise, the next time a read transaction is opened the cache will be flushed (as the change-counter values will not match).
Otherwise, the old.* record contains all primary key values and the  original values of any fields that have been modified.
Otherwise, the original item is left in place and, if the maximum is greater than 1, we use OP_UPTO with one less than the maximum.
Otherwise, the original owner will not be able to connect.
Otherwise, the page is not synced until the xSync method of the VFS is called successfully on the file containing the page.
Otherwise, the result is 1 if the string matches the pattern, or 0 otherwise.
Otherwise, the samples would be out of order.
Otherwise, the scanner returns +nil+.
Otherwise, the schema is loaded.
Otherwise, the semantics would be subtly different from IN or NOT IN.
Otherwise, the snippet is shifted by the number of tokens available.
Otherwise, the state of the RBU  update application is saved in the RBU database for later  resumption.
Otherwise, the term is not added to the new node, it is left empty for now.
Otherwise, the value inserted into the child key column will have INTEGER affinity applied to it, which may not be correct.
Otherwise, there can be no first char if this item is first, whatever repeat count may follow.
Otherwise, they are calculated by interpreting  all data as 32-bit little-endian words.
Otherwise, this function assumes that an "IS NOT NULL" term has a likelihood of 0.50, and any other term a likelihood of 0.25.
Otherwise, throw an SQL exception.
Otherwise, treat the ORDER BY term as an ordinary expression
Otherwise, typedef it to int, because that's what libjpeg does if HAVE_BOOLEAN is not defined.
Otherwise, up to three octal digits are read to form an escaped byte.
Otherwise, update the cell in the parent node so that it tightly contains the updated node.
Otherwise, use "rbu_rowid".
Otherwise, use RTREE_DEFAULT_ROWEST.
Otherwise, use a recursive call to add the additional range.
Otherwise, use gemm for all other cases.
Otherwise, use in-line code for the dot product.
Otherwise, use strerror_r().
Otherwise, use the ON CONFLICT policy that was specified as part of the trigger step statement.
Otherwise, use the explicitly specified behavior for the index.
Otherwise, use the normal shared-memory.
Otherwise, use the standard rules
Otherwise, various features that require the use of temporary files may fail.
Otherwise, we can check only ASCII characters.
Otherwise, we can use the vector supplied, rounding down its size to a multiple of 3.
Otherwise, we face nasty hang up.
Otherwise, we found the natural type of the reduction, replace otype and search again
Otherwise, we have a match.
Otherwise, we have our own implementation that works on most systems.
Otherwise, we have to copy and/or swap to aligned temporaries
Otherwise, we look if we have a TimeZone identifier
Otherwise, we need to find the next part of the namespace
Otherwise, we need to overcorrect and set the adjustment to the main timezone + 3600 seconds.
Otherwise, we need to wait again (up to time_left or we get an error)
Otherwise, when the transaction is rolled back, the logic in playback_one_page() will think that the page needs to be restored in the database file.
Otherwise, when we are doing the actual compile phase, check to see whether this group is one that could match an empty string.
Otherwise, zero the 28-byte header at the start of the journal file.
Otherwise, zero the new portion in case a  malloc failure occurs while populating it in the for(...) loop below.
Otherwise, zero them and free any allocation made.
Otherwise:  All of the matrix A is set.
Otherwise:  The page number of the next overflow page in the linked list is  written to *pPgnoNext.
Otherwse, it appends the serialized version of the value stored in column iCol of the row that SQL statement pStmt currently points to to the buffer.
Our custom signal handler that calls the appropriate php_function
Our little 7-bit alpha channel trick costs us a bit here.
Our method of efficiently finding nearest colors is based on the "locally sorted search" idea described by Heckbert and on the incremental distance calculation described by Spencer W.
Our safety measure is meant to protect from such many-buggy to one-correct collisions, by deviating from the correct algorithm in such cases.
Out of bounds, flag with -1
Out of memory during sorting or buffer creation
Out-of-Order hidden columns
Out-of-range pages are also skipped.
Outer reduce loop advances by one item
Output argument one may also be in a keyword argument
Output arrays may be specified as a keyword argument, either as a single array or None for single output ufuncs, or as a tuple of arrays and Nones.
Output buffer must be twice as big as input, because each byte takes 2 bytes in string representation
Output character index
Output dimensions, etc.
Output each row of result
Output encoding must be set.
Output flags returned to SQLite core
Output formatting for SQLITE_TESTCTRL_EXPLAIN
Output leaf pages left to write
Output of a bcd number.
Output of stat() on database file
Output parameter *pbIn is set to true if the plan added to pBuilder uses one or more WO_IN terms, or false otherwise.
Output parameter *pbMatch is set to true if this is really a match, or false otherwise.
Output parameter *pbOk is set to true if a value is extracted, or false  otherwise.
Output parameter *ppSegcsr is set to 0 if an error occurs.
Output register from the sorter
Output should be DISTINCT
Output string - not real JSON
Output string with quoted characters
Output success/failure
Output the final row of result
Output the single row in Current
Output type is always boolean
Output values used by 'row' and 'col' tables
Output variable *ppStmt is set to NULL in this case.
Output vector starting point.
Outputs: A pointer to a parser.
Outputs: Outputs code to the file.
Outside a character class, the digits are read as a decimal number.
Overflow is possible only if RT1 is within a factor of 5 of overflow.
Overflow page pointer-map entry page
Overflow pages are allocated and filled in as necessary.
Overflow pages are specified by appending a '+' character and a  six-digit hexadecimal value to the path to the cell they are linked from.
Overflow payload available for local storage
Overflow will not occur unless the largest singular value itself overflows or is within a few ulps of overflow.
Overflow will not occur unless the largest singular value itself overflows, or is within a few ulps of overflow.
Overflow,count exponent and set fraction part be 1
Overflows are sequential
Overflows in sorted order
Overlap check for the 1D case.
Overload the start of match pointer to do this.
Override "include_path" modifier callback
Override SAPI callbacks
Override chdir() function
Override file_exists(), is_file() and is_readable()
Override for an alias symbol for sgemv_ in Accelerate
Override onError to this if not OE_Default
Override path resolver function (to eliminate stat() calls caused by include_once/require_once statements
Override stream opener function (to eliminate open() call caused by include/require statements )
Override the gcc computation in this case.
Override the itemsize if provided
Override them with ours
Overrides the global parameters buffer size, error mask, and error object
Overwhelmingly the most common.
Overwrite U by left singular vectors of A (Workspace: need M*M+2*M, prefer M*M+M+M*NB)
Overwrite U by left singular vectors of A and VT by right singular vectors of A (Workspace: need 2*M+N, prefer 2*M+N*NB)
Overwrite U by left singular vectors of A and VT by right singular vectors of A (Workspace: need 3*M, prefer 2*M+M*NB)
Overwrite U by left singular vectors of A and VT by right singular vectors of A (Workspace: need 3*N, prefer 2*N+N*NB)
Overwrite U by left singular vectors of A and VT by right singular vectors of A (Workspace: need N*N+2*N+M, prefer N*N+2*N+M*NB)
Overwrite U by left singular vectors of L and VT by right singular vectors of L (Workspace: need M*M+3*M, prefer M*M+2*M+M*NB)
Overwrite U by left singular vectors of L and WORK(IVT) by right singular vectors of L (Workspace: need 2*M*M+3*M, prefer 2*M*M+2*M+M*NB)
Overwrite U by left singular vectors of L and WORK(IVT) by right singular vectors of L (Workspace: need M*M+3*M, prefer M*M+2*M+M*NB)
Overwrite U by left singular vectors of R and VT by right singular vectors of R (Workspace: need N*N+3*N, prefer N*N+2*N+N*NB)
Overwrite VT by right singular vectors of A (Workspace: need N*N+2*N, prefer N*N+N+N*NB)
Overwrite WORK(IU) by left singular vectors of A (Workspace: need N*N+2*N, prefer N*N+N+N*NB)
Overwrite WORK(IU) by left singular vectors of R and VT by right singular vectors of R (Workspace: need 2*N*N+3*N, prefer 2*N*N+2*N+N*NB)
Overwrite WORK(IU) by left singular vectors of R and VT by right singular vectors of R (Workspace: need N*N+3*N, prefer N*N+2*N+N*NB)
Overwrite WORK(IVT) by left singular vectors of A (Workspace: need M*M+2*M, prefer M*M+M+M*NB)
Overwrite cell iCell of node pNode with the contents of pCell.
Overwrite deleted information with zeros when the secure_delete option is enabled
Overwrite existing values that do exist.
Overwrite freed memory with the 0x55 bit pattern to verify that it is not used after being freed
Overwrite the passed-in value for subpatterns with an empty array.
P       (input) INTEGER The number of base BETA digits in the mantissa of a floating-point value.
P       (output) DOUBLE PRECISION Q       (output) DOUBLE PRECISION The scalars p and q in the above expression.
P       (output) REAL Q       (output) REAL The scalars p and q in the above expression.
P-box and S-box tables initialized with digits of Pi.
P.106 for multiplier.
P1 can be either an ordinary table or a virtual table.
P1 contains the address of the memory cell that contains the first memory  cell in an array of values used as arguments to the sub-program.
P1 is 0 for "main", and 2 or more for an attached database.
P1 is a 32-bit bitmask indicating whether or not each argument to the  function was determined to be constant at compile time.
P1 is a boolean flag.
P1 is a cursor number.
P1 is the index of the database file on which the transaction is started.
P1 is the memory location that is the accumulator for the aggregate.
P1 is the result code returned by sqlite3_exec(), sqlite3_reset(), or sqlite3_finalize().
P1 must have been opened prior to this opcode or the program will segfault.
P1 must not be pseudo-table.
P2  contains the address to jump to if the sub-program throws an IGNORE  exception using the RAISE() function.
P2 contains the root-page of the table to lock.
P2 is an address to jump to if the filtered result set is empty.
P2 is the number of arguments that the step function takes and P4 is a pointer to the FuncDef for this function.
P2 is the number of columns in the ephemeral table.
P2 to OP_Open** is a register number
P2 values are contiguous memory cells starting at P3 to pass to the xUpdate  invocation.
P3 Value for OP_VFilter
P3 is a flag that provides a hint to the b-tree layer that this insert is likely to be an append.
P3 is always either 0 or 1.
P3 is an integer rowid.
P3 is the number of fields in the records that will be stored by the pseudo-table.
P3 must be one of the PAGER_JOURNALMODE_XXX values.
P4 contains a pointer to the name of the table being locked.
P4 is a 32-bit signed integer
P4 is a 64-bit floating point value
P4 is a 64-bit integer (P4_INT64) in which the first 63 bits are one for each of the first 63 columns of the table or index that are actually used by the cursor.
P4 is a 64-bit signed integer
P4 is a KeyInfo structure that defines collating sequences and sort orders for the comparison.
P4 is a pointer to BtreeNext() or BtreePrev()
P4 is a pointer to a CollSeq structure
P4 is a pointer to a FuncDef structure
P4 is a pointer to a KeyInfo structure
P4 is a pointer to a Mem*    structure
P4 is a pointer to a SubProgram structure
P4 is a pointer to a Table structure
P4 is a pointer to a transient string
P4 is a pointer to an Expr tree
P4 is a pointer to an sqlite3_context object
P4 is a pointer to an sqlite3_context object that is used to run the function.
P4 is a pointer to an sqlite3_vtab structure
P4 is a pointer to the FuncDef structure that specifies the function.
P4 is a pointer to the VM containing the trigger program.
P4 is a string obtained from sqlite3_mprintf()
P4 is a string that is P2 characters long.
P4 is a vector of 32-bit integers
P4 is always of type P4_ADVANCE.
P4 is either NULL or a string that was generated by the xBestIndex method of the module.
P4 may be a string that is P2 characters long.
P4 may be an array of integers (type P4_INTARRAY) containing one entry for each column in the P3 table.
P4 must be either -1 or non-negative.
P4 of the OP_Program  is a pointer to the sub-vdbe containing the trigger program.
P4_STATIC or P4_TRANSIENT
P5 is a value between 0 and 4, inclusive, that modifies the P4 string.
P5 is the error actions (OE_Replace, OE_Fail, OE_Ignore, etc) to apply in the case of a constraint failure on an insert or update.
P5 value for OP_Column
P5 value for OP_Column + FLAGS
P5 value for OP_Open* opcodes (except on WITHOUT ROWID)
PAGERID() takes a pointer to a Pager struct as its argument.
PAGER_GET_NOCONTENT or PAGER_GET_READONLY
PAGER_GET_READONLY or 0
PARAMETERS: PS_CLOSE_ARGS in php_session.h RETURN VALUE: SUCCESS.
PARAMETERS: PS_CREATE_SID_ARGS in php_session.h RETURN VALUE: Valid session ID(zend_string *) or NULL for FAILURE.
PARAMETERS: PS_DESTROY_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARAMETERS: PS_GC_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARAMETERS: PS_OPEN_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARAMETERS: PS_READ_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARAMETERS: PS_UPDATE_TIMESTAMP_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARAMETERS: PS_VALIDATE_SID_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARAMETERS: PS_WRITE_ARGS in php_session.h RETURN VALUE: SUCCESS or FAILURE.
PARSE THE ATTOSECONDS (0 to 6 digits)
PARSE THE DAY (2 digits)
PARSE THE HOURS (2 digits)
PARSE THE MICROSECONDS (0 to 6 digits)
PARSE THE MINUTES (2 digits)
PARSE THE MONTH (2 digits)
PARSE THE PICOSECONDS (0 to 6 digits)
PARSE THE SECONDS (2 digits)
PARSE THE YEAR (digits until the '-' character)
PARSE_STRING is used by parse_str() function
PARTLY_WITHIN or FULLY_WITHIN
PASSIVE, FULL or RESTART
PASSIVE, FULL, RESTART, or TRUNCATE
PATCHSET FORMAT:  A patchset is also a collection of changes.
PATH section entries are used per-request from down to top, each overriding previous if one exists.
PATH_INFO and PATH_TRANSLATED should always be munged
PATH_TRANSLATED should be defined at this stage
PATH_TRANSLATED should be defined at this stage but better safe than sorry :)
PC1 rotation schedule
PC1ROT - bit reverse, then PC1, then Rotate, then PC2.
PC2ROT - PC2 inverse, then Rotate (once or twice), then PC2.
PCL Symbol Set Id: 18T Alias: csBig5
PCRE DEMONSTRATION PROGRAM           *
PCRE added it at release 8.34.
PCRE does not allow closing square brackets in POSIX class names.
PCRE is a library of functions to support regular expressions whose syntax and semantics are as close as possible to those of the Perl 5 language.
PCRE is thread-clean and doesn't use any global variables in the normal sense.
PCRE might get stuck if the input buffer is too big.
PCRE specific options
PCRE supports POSIX class stuff inside a class.
PCRE was changed at release 8.34.
PCRE_DEBUG is not defined when building a production library.
PCRE_ERROR_NULL means that the selected normal or partial matching mode is not compiled.
PCRE_EXTRA enables extensions to Perl in the matter of escapes.
PCRE_UTF16 has the same value as PCRE_UTF8.
PCache.pDirty points to the first (newest) element in the list and pDirtyTail to the last (oldest).
PDO error (if any) has already been raised at this point.
PEM_BUFSIZE is currently used as the second argument of pem_password_cb, that is +max_len+ of ossl_pem_passwd_cb()
PEM_def_callback(buf, max_len, flag, StringValueCStr(pass)) does not work because it does not allow NUL characters and truncates to 1024 bytes silently if the input is over 1024 bytes
PENDING:   A single process may hold a PENDING lock on a file at any one time.
PENDING_BYTE defines the beginning of the locks.
PENDING_LOCK may not be passed directly to sqlite3OsLock().
PEP 3118 buffer interface
PEP 3118 buffer protocol  Implementing PEP 3118 is somewhat convoluted because of the desirata:  - Don't add new members to ndarray or descr structs, to preserve binary compatibility.
PERM   (input) INTEGER array, dimension ( LDGCOL, NLVL ).
PERM   (input) INTEGER array, dimension ( N ) The permutations (from deflation and sorting) applied to the two blocks.
PERM   (input) INTEGER array, dimension (N lg N) Contains the permutations (from deflation and sorting) to be applied to each eigenblock.
PERM   (output) INTEGER array, dimension ( N ) The permutations (from deflation and sorting) to be applied to each block.
PERM   (output) INTEGER array, dimension ( N ) The permutations (from deflation and sorting) to be applied to each singular block.
PERM   (output) INTEGER array, dimension (N) Contains the permutations (from deflation and sorting) to be applied to each eigenblock.
PERM   (output) INTEGER array, dimension (N) The permutations (from deflation and sorting) to be applied to each eigenblock.
PGHDR flags defined below
PG_VERSION - libpq version
PGroup this cache belongs to
PHP 5.2 is the minimum supported version for OCI8 2.0
PHP 7 is the minimum supported version for OCI8 2.1
PHP Authentication support
PHP Change:  add length check
PHP Sendmail for Windows.
PHP-5.4 and above return "double", but we use 1 sec precision
PHP3 Internationalization support program.
PHP_CAN_SUPPORT_PROC_OPEN
PHP_GDIMG_TYPE_GIF PHP_GDIMG_TYPE_PNG PHP_GDIMG_TYPE_JPG PHP_GDIMG_TYPE_WBM PHP_GDIMG_TYPE_WEBP
PHP_HASH_MD5_NOT_IN_CORE
PHP_HASH_SHA1_NOT_IN_CORE
PHP_INI_ENTRY("session.encode_sources", "globals,track", PHP_INI_ALL, NULL)
PHP_OCI_MAX_DATA_SIZE,
PHP_OCI_RETURN_LOBS means that we want the content of the LOB back instead of the locator
PIE (position-independent executable)
PK array for current table
PKCS #5 uses a Cipher, a pass phrase and a salt to generate an encryption key.
PKCS #5 v2.0 recommends at least 8 bytes for the salt, the number of iterations largely depends on the hardware being used.
PLEASE KEEP THE STRUCTURE OF THIS FILE INTACT.
POLES  (input) DOUBLE PRECISION array, dimension ( LDU, 2 * NLVL ).
POLES  (input) REAL array, dimension ( LDU, 2 * NLVL ).
POLLIN, POLLOUT have a different meanings from select(2)'s read/write bit.
PORTABILITY Coded on RedHat Linux 6.2.
POSIX collating elements are not supported
POSIX defines it as "times() shall return the elapsed real time, in clock ticks, since an arbitrary point in the past (for example, system start-up time)".
POSIX doesn't specify it.
POSIX locale extensions, ignored for now
POSIX locking (the default), 2.
POSIX locks will work fine to synchronize access for threads in separate processes, but not threads within the same process.
POSIX named classes are supported only within a class
POSIX.1, 4.5.1 time() - Get System Time already covered by PHP
POSIX.1, 4.6.1 getenv() - Environment Access already covered by PHP
POSIX.1, 4.8.1 sysconf() - TODO POSIX.1, 5.7.1 pathconf(), fpathconf() - TODO POSIX.1, 5.1.2 opendir(), readdir(), rewinddir(), closedir() POSIX.1, 5.2.1 chdir() already supported by PHP
POSIX.1, 5.3.x open(), creat(), umask() POSIX.1, 5.4.1 link() already supported by PHP.
POSIX.1, 5.5.1 unlink() POSIX.1, 5.5.2 rmdir() POSIX.1, 5.5.3 rename() POSIX.1, 5.6.x stat(), chmod(), utime() already supported by PHP.
POSIX.1, 6.x most I/O functions already supported by PHP.
POSIX.1, 7.x tty functions, TODO POSIX.1, 8.x interactions with other C language functions POSIX.1, 9.x system database access
POST_INC/DEC write the result variable before performing the inc/dec.
POTENTIAL PROBLEMS  The rename() call might not be portable.
PPC doesn't like you re-using a va_list...
PQunescapeBytea - converts the null terminated string representation of a bytea, strtext, into binary, filling a buffer.
PQunescapeBytea returned an error
PQunescapeBytea() from PostgreSQL 7.3 to provide bytea unescape feature to 7.2 users.
PRAGMA compile_options  Return the names of all compile-time options used in this build, one option per row.
PRAGMA index_info (legacy version)
PRAGMA index_xinfo (newer version with more rows and columns)
PRAGMA secure_delete is enabled
PRAGMA shrink_memory  IMPLEMENTATION-OF: R-23445-46109 This pragma causes the database connection on which it is invoked to free up as much memory as it can, by calling sqlite3_db_release_memory().
PRAGMA shrink_memory  This pragma attempts to free as much memory as possible from the current database connection.
PREPARATION  An "RBU update" is stored as a separate SQLite database.
PREVENTS-HARMLESS-OVERREAD
PREVENTS-HARMLESS-OVERREAD  - This branch prevents a buffer overread that would be harmless and undetectable if it did occur.
PRIMARY KEY changed in a WITHOUT ROWID table
PRIMARY KEY fields contain the values identifying the table row to update, and fields associated with modified columns contain the new column values.
PRIMARY KEY index for WITHOUT ROWID tables
PRIMARY KEY index, or NULL for rowid tables
PRIMARY KEY is the key
PRINT_ENTER_EXIT_TICK
PRMPTR (input) INTEGER array, dimension (N lg N) Contains a list of pointers which indicate where in PERM a level's permutation is stored.
PRMPTR(i+1) - PRMPTR(i) indicates the size of the permutation and also the size of the full, non-deflated problem.
PRMPTR(i+1) - PRMPTR(i) indicates the size of the permutation and incidentally the size of the full, non-deflated problem.
PRNGs are currently implemented as a modified Mersenne Twister with a period of 2**19937-1.
PROT_AUTH_RESP_PACKET
PROT_CHANGE_AUTH_RESP_PACKET
PROT_CHG_USER_RESP_PACKET
PROT_PREPARE_RESP_PACKET
PROT_RSET_HEADER_PACKET
PROT_SHA256_PK_REQUEST_PACKET
PROT_SHA256_PK_REQUEST_RESPONSE_PACKET
PS has already allocated it
PS(id) may be changed by calling session_regenerate_id().
PS_* functions are called as follows with standard usage.
PS_CLOSE_FUNC() - Clean up module data created by PS_OPEN_FUNC().
PS_CLOSE_FUNC() must set *mod_data to NULL.
PS_CLOSE_FUNC() should not fail.
PS_CREATE_SID() and/or PS_VALIDATE_SID() - PS_CREATE_ID() is called if session ID(key) is not provided or invalid.
PS_CREATE_SID_FUNC() must check collision.
PS_DESTROY_FUNC() must remove the session data specified by *key from session data storage unconditionally.
PS_GC_FUNC()    - Perform GC.
PS_GC_FUNC() must remove session data that are not accessed 'session.maxlifetime'(seconds).
PS_OPEN_FUNC()  - Create module data that manages save handler.
PS_READ_FUNC()  - Read data from storage.
PS_UPDATE_TIMESTAMP_FUNC() updates time stamp(mtime) so that active session data files will not be purged by GC.
PS_USE_CHANGE_ARGV or PS_USE_CLOBBER_ARGV
PS_VALIDATE_SID() is called to verify session ID already exists or not to mitigate session adoption vulnerability risk.
PS_WRITE_FUNC() must write session data(zend_string *val) unconditionally.
PS_WRITE_FUNC() or PS_UPDATE_TIMESTAMP()  - Write session data or update session data timestamp.
PTRMAP_BTREE: The database page is a non-root btree page.
PTRMAP_FREEPAGE: The database page is an unused (free) page.
PTRMAP_ISPAGE implements this test.
PTRMAP_OVERFLOW1: The database page is the first page in a list of  overflow pages.
PTRMAP_OVERFLOW1: pPage is a btree-page.
PTRMAP_OVERFLOW2: The database page is the second or later page in a list of overflow pages.
PTRMAP_OVERFLOW2: pPage is an overflow-page.
PTRMAP_PAGENO returns the database page number of the pointer-map page that stores the required pointer.
PTRMAP_PTROFFSET returns the offset of the requested map entry.
PTRMAP_ROOTPAGE: The database page is a root-page.
PURPLE (GC_PURPLE)  - Possible root of cycle.
Pacify GCC's 'empty if-body' warning.
Pacify GCC's `empty if-body' warning.
Pacify compilers like GCC when the user code never invokes YYERROR and the label yyerrorlab therefore never appears in user code.
Package helper routines
Packed key if the btree is an index
Packed packet headers, main header
Packed packet headers, tile part header
Packet length, main header
Packet length, tile-part header
Pad block to 56 bytes
Pad state to finalize
Pad transactions out to the next sector
Padding value obviously
Page 1 also has a 100-byte file header that occurs before the page header.
Page 1 of the database file
Page Allocation/SQLITE_CONFIG_PCACHE Related Functions
Page cache allocations
Page cache buffer management: These routines implement SQLITE_CONFIG_PAGECACHE.
Page containing pPayload
Page containing the cell
Page in use, not on the LRU list
Page into which we are copying
Page is on the PCache.pDirty list
Page is pinned until released.
Page iter.iLeaf must now be the rightmost leaf-page in the segment
Page not on the PCache.pDirty list
Page number PAGER_MJ_PGNO is never used in an SQLite database (it is reserved for working around a windows/posix incompatibility).
Page number array for hash table
Page number corresponding to btterm
Page number for first page in the list
Page number for this page
Page number is 1 or more
Page number of current leaf page
Page number of first child page.
Page number of free-list trunk page
Page number of fts index leaf page.
Page number of the frame
Page number of the new child page
Page number of the next source page to copy
Page number of the page to check
Page number to obtain
Page numbers of new pages before shuffling
Page obtained by prior PcacheFetch() call
Page p itself has already been visited.
Page pParent is an internal (non-leaf) tree page.
Page paths:  The value of the 'path' column describes the path taken from the  root-node of the b-tree structure to each page.
Page references obtained by calling this function should be released by calling pagerReleaseMapPage().
Page size (szPage) and the purgeable flag (bPurgeable) are set when the cache is created.
Page size according to the log
Page size can no longer be changed
Page size for host database
Page size must be a power of 2
Page size of main database
Page that were previously rolled back out of the main journal (and are hence in pDone) will be skipped.
Page to delete cell from
Page-size field of journal header
Page-type flage for the root page of new table
Pager associated with pBt
Pager object associated with page pPg
Pager object to allocate and return
Pager state (OPEN, READER, WRITER_LOCKED..)
Pager.eLock may only be set to UNKNOWN_LOCK when the pager is in  PAGER_OPEN state.
Pager.pageSize bytes of space for tmp use
PagerRollback() is a no-op if called in READER or OPEN state.
Pages are added to pDone as they are played back.
Pages are connected by pDirty pointers.
Pages are then played back from the sub-journal file, starting with the PagerSavepoint.iSubRec and continuing to the end of the journal file.
Pages from root to current page
Pages in wal - keys for the sort
Pages journalled since last j-header written
Palette based to palette based
Palette image, or something coerced to be one
Parameter "idx" identifies the specific loop to retrieve statistics for.
Parameter P2 is one of SQLITE_CHECKPOINT_PASSIVE, FULL or RESTART.
Parameter P2 is one of SQLITE_CHECKPOINT_PASSIVE, FULL, RESTART, or TRUNCATE.
Parameter P4 may point to a Table structure, or may be NULL.
Parameter P4 may point to a string containing the table-name, or may be NULL.
Parameter T is set to half the value of the memory threshold used  by Write() above to determine when to create a new PMA.
Parameter adjustments
Parameter anSize must point to an array of size nCol, where nCol is the number of user defined columns in the FTS table.
Parameter chngRowid is set to true if the UPDATE statement modifies the rowid fields of the table.
Parameter eLock must be either READ_LOCK or  WRITE_LOCK.
Parameter eMode is one of SQLITE_CHECKPOINT_PASSIVE, FULL or RESTART.
Parameter eMode must be one of PAGER_LOCKINGMODE_QUERY, PAGER_LOCKINGMODE_NORMAL or  PAGER_LOCKINGMODE_EXCLUSIVE.
Parameter eMode must be one of the PAGER_JOURNALMODE_XXX constants defined in pager.h.
Parameter eStat must be either SQLITE_DBSTATUS_CACHE_HIT or SQLITE_DBSTATUS_CACHE_MISS.
Parameter eType describes the type of pointer to be modified, as  follows:  PTRMAP_BTREE:     pPage is a btree-page.
Parameter iCol is the index of the leftmost column involved in the constraint failure.
Parameter iDocid is the docid of the new row.
Parameter iPg is the page number of said page.
Parameter ignoreJump is the instruction that control should jump to if a trigger program raises an IGNORE exception.
Parameter isNew must be either 1 or 0.
Parameter nFin is the number of pages that this database would contain were this function called until it returns SQLITE_DONE.
Parameter nIncr is passed -1 when inserting a row (as this may decrease the number of FK violations in the db) or +1 when deleting one (as this may increase the number of FK constraint problems).
Parameter number to bind to
Parameter op is always either SAVEPOINT_ROLLBACK or SAVEPOINT_RELEASE.
Parameter orconf is the default conflict resolution algorithm for the trigger program to use (REPLACE, IGNORE etc.).
Parameter pBuf points to an allocation large enough to contain 'n' buffers of 'sz' bytes each.
Parameter pEnd points 1 byte past the end of the buffer.
Parameter passed through to xFilter()
Parameter regNew is passed zero in this case.
Parameter to the watching thread
Parameter tr_tm must be a mask with one or both of the TRIGGER_BEFORE and TRIGGER_AFTER bits set.
Parameter zIn contains a rank() function specification.
Parameter zMaster is the name of a master journal file.
Parameter zName is the name of a table that is about to be altered (either with ALTER TABLE ...
Parameter zName points to a UTF-8 encoded string nName bytes long.
Parameter zName points to a nul-terminated buffer containing the name of a database ("main", "temp" or the name of an attached db).
Parameter zSrcData points to a buffer containing the data for  page iSrcPg from the source database.
Parameters ---------- op1 : PyArrayObject * Array to be searched, must be 1-D.
Parameters ---------- src: char * Pointer to buffer containing UCS4 unicode.
Parameters : format     The format string.
Parameters passed to SQL geom function
Parameters to CREATE TABLE statement
Parameters z and n contain a pointer to and length of a buffer containing an fts3 query expression, respectively.
Parameters: ----------- srname: Subroutine name to use in error message, maximum six characters.
Parameters: Input parameters are the same as layoutNodeImpl (see above) Return parameter is true if layout was performed, false if skipped
Parameters: dst - Where to store the resulting affine transform  Returns: GD_SUCCESS on success or GD_FAILURE
Parameters: dst - Where to store the resulting affine transform angle - Rotation angle in degrees  Returns: GD_SUCCESS on success or GD_FAILURE
Parameters: dst - Where to store the resulting affine transform angle - Shear angle in degrees  Returns: GD_SUCCESS on success or GD_FAILURE
Parameters: dst - Where to store the resulting affine transform m1 - First affine matrix m2 - Second affine matrix  Returns: GD_SUCCESS on success or GD_FAILURE
Parameters: dst - Where to store the resulting affine transform offset_x - Horizontal translation amount offset_y - Vertical translation amount  Returns: GD_SUCCESS on success or GD_FAILURE
Parameters: m - The affine transformation  Returns: GD_TRUE if the affine is rectilinear or GD_FALSE
Parameters: m1 - The first affine transformation m2 - The first affine transformation  Returns: GD_SUCCESS on success or GD_FAILURE
Parameters: scale_x - X scale factor scale_y - Y scale factor  Returns: GD_SUCCESS on success or GD_FAILURE
Paranoid check for integer overflow
Parent context (if any)
Parent key index for this FK
Parent node (or NULL for root node)
Parent of this frame, or NULL if parent is main
Parent page of siblings being balanced
Parent row data starts here
Parent savepoint (if any)
Parent table of FK constraint pFKey
Parent table of FK pFKey
Parent table of foreign key pFKey
Parent table that child points to
Parent tokenizer instance
Parent tokenizer module
Parents of root pages return 1, and so forth.
Parse +str+ as Ruby Integer, i.e., underscores, 0d and 0b prefixes.
Parse Composite Document Files, the format used in Microsoft Office document files before they switched to zipped XML.
Parse HTTP headers from the given buffer, advance buffer to the point where parsing stopped.
Parse HTTP request, fill in mg_request_info structure.
Parse a "special" CREATE VIRTUAL TABLE directive and update configuration object pConfig as appropriate.
Parse a MATCH expression.
Parse a cell content block and fill in the CellInfo structure.
Parse a complete JSON string.
Parse a timezone extension on the end of a date-time.
Parse all indices into the `indices` array of index_info structs
Parse an explicit document.
Parse an implicit document.
Parse any width specifier.
Parse authorization header
Parse context for sub-vdbe
Parse context structure pFrom has just been used to create a sub-vdbe (trigger program).
Parse context to store any error in
Parse date-time string, and return the corresponding time_t value
Parse extra document end indicators.
Parse of the input JSON
Parse structure for main program (or NULL)
Parse the filename/URI argument.
Parse the fts3 query expression found in buffer z, length n.
Parse the input unit if provided
Parse the instructions in the bundle.
Parse the integer, make sure it's the rest of the string
Parse the metadata string into a metadata struct
Parse the stream end.
Parse them all and write the resulting time into the DateTime structure p.
Parse through the leading whitespace, and display a warning if we get to the end without encountering a delimiter.
Parse through the options, setting appropriate flags.
Parse times of the form HH:MM or HH:MM:SS or HH:MM:SS.FFFF.
Parsed Authorization header
Parsed MATCH query string
Parsed information on cells being balanced
Parser parses the tokens and passes the name/value pairs to the callback function which stores them in the configuration hash table.
Parser state when parsing URI
Parses (almost) standard ISO 8601 date strings.
Parses an index that has no fancy indexing.
Parses the metadata string into the metadata C structure.
Parses the positional and keyword arguments for a generic ufunc call.
Parsing and code generating context
Parsing context for error messages
Parsing context to record errors
Parsing context used to create this Vdbe
Parsing succeeded as a multi-byte sequence
Part of a compound query
Part of a multi-token phrase.
Part of a parenthesized FROM clause
Part of the RBU implementation uses a custom VFS object.
Part of the message block expansion:
Part of the record being decoded
Partial Index Expression
Partial index inappropriate for this query
Partial matching mode.
Partition D( START:ENDD ) and stack parts, largest one first Choose partition entry as median of 3
Pass an empty array to include only the signer certificate.
Pass back current position
Pass back the character offset and error code for an invalid string if a results vector is available.
Pass back the position in the pattern so that it can be displayed to the user for diagnosing the error.
Pass iSavepoint as the second argument to the virtual table method invoked.
Pass invalid mode to OCIConnectionPoolCreate
Pass the expected checksum down to the FTS index module.
Passed as opaque in malloc callbacks
Passing NULL remove the existing comment
Passing NULL to HeapFree is undefined.
Passing a NULL pointer to sqlite3_free() is harmless.
Passing a value greater than zero enables it.
Passing a value less than or equal to zero turns off all busy handlers.
Passing a value less than zero does not modify the current value of the indirect flag, and may be used to query the current state of the  indirect flag for the specified session object.
Passing a value less than zero is a  no-op, and may be used to query the current state of the session.
Passing a zero or  negative value indicates no limit.
Passing an empty string ("") or SQL NULL value as the second argument is the same as invoking the 1 argument version of upper() or lower().
Passing any other pointer in to this routine results in undefined and probably undesirable behavior.
Passing modules with full path is not supported for dynamically loaded extensions
Passing more parameters than number of attributes will raise an ArgumentError.
Passing them can be complex as it involves examining your system headers to determine the correct definition.
Passing zero or a negative value as the nFrame parameter disables automatic checkpoints entirely.
Passing zero to this function disables the session.
Password used to authenticate
Patch up the ORDER BY clause
Path 1 - overdetermined or exactly determined.
Path 1a - overdetermined, with many more rows than columns
Path 1a - overdetermined, with many more rows than columns.
Path 2 - remaining underdetermined cases.
Path 2 - underdetermined.
Path 2a - underdetermined, with many more columns than rows and sufficient workspace for an efficient algorithm.
Path 2a - underdetermined, with many more columns than rows.
Path 5 (M at least N, but not much larger)
Path 5 (M much larger than N, but not as much as MNTHR1)
Path 5t (N greater than M, but not much larger)
Path 5t (N much larger than M, but not as much as MNTHR1)
Path 6 (M at least N, but not much larger)
Path 6t (N greater than M, but not much larger)
Path by which to filter zJson
Path of file (possibly) being created
Path of the file being run
Path of the file to examine
Path to page from root
Path to state db (or NULL if zRbu)
Pathname is immutable.
Pathname of file to be opened
Pathname represents the name of a file or directory on the filesystem, but not the file itself.
Pause time in microseconds
Payload 4     First page of the overflow chain.
Payload to be inserted
Payload with which to construct the cell
Pcache object page handle
Peek the next token in the token queue.
Pending terms hash table to add entry to
Pending terms table for this index
Pending-terms doclists are always built up in ascending order, so we have to iterate through them backwards here.
People who don't like const sys_error
Pepper Module callbacks
Per RFC 4514, a leading and trailing space must be escaped
Per request and per thread, if applicable
Perform 1st shear (horizontal)
Perform Delaunay triangulation.
Perform IO (read or write) to an SSL socket.
Perform QR iteration, accumulating Schur vectors in VL (CWorkspace: need 1, prefer HSWORK (see comments) ) (RWorkspace: none)
Perform QR iteration, accumulating Schur vectors in VL (Workspace: need N+1, prefer N+HSWORK (see comments) )
Perform QR iteration, accumulating Schur vectors in VR (CWorkspace: need 1, prefer HSWORK (see comments) ) (RWorkspace: none)
Perform QR iteration, accumulating Schur vectors in VR (Workspace: need N+1, prefer N+HSWORK (see comments) )
Perform QR iterations on rows and columns ILO to I until a submatrix of order 1 or 2 splits off at the bottom because a subdiagonal element has become negligible.
Perform QR iterations on rows and columns ILO to I until a submatrix of order 1 splits off at the bottom because a subdiagonal element has become negligible.
Perform a read or write operation on a blob
Perform a reduce action and the shift that must immediately follow the reduce.
Perform a shift action.
Perform a single step of an incremental-vacuum.
Perform addition: N1 is added to N2 and the value is returned.
Perform bidiagonal SVD, compute singular values only (CWorkspace: 0) (RWorkspace: need BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of R in WORK(IRU) and computing right singular vectors of R in WORK(IRVT) (CWorkspace: need 0) (RWorkspace: need BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagoal matrix in U and computing right singular vectors of bidiagonal matrix in VT (Workspace: need N+BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagonal matrix in U and computing right singular vectors of bidiagonal matrix in VT (Workspace: need M+BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagonal matrix in U and computing right singular vectors of bidiagonal matrix in VT (Workspace: need N+BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagonal matrix in U and computing right singular vectors of bidiagonal matrix in WORK(IVT) (Workspace: need M*M+BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagonal matrix in U and computing right singular vectors of bidiagonal matrix in WORK(IVT) (Workspace: need M+M*M+BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagonal matrix in U, and computing right singular vectors of bidiagonal matrix in WORK(IVT) (Workspace: need M+M*M+BDSPAC)
Perform bidiagonal SVD, computing left singular vectors of bidiagonal matrix in WORK(IU) and computing right singular vectors of bidiagonal matrix in VT (Workspace: need N+N*N+BDSPAC)
Perform bidiagonal SVD, computing singular values only (Workspace: need M+BDSPAC)
Perform bidiagonal SVD, computing singular values only (Workspace: need N+BDSPAC)
Perform bidiagonal SVD, only computing singular values (Workspace: need M+BDSPAC)
Perform bidiagonal SVD, only computing singular values (Workspace: need N+BDSPAC)
Perform lazy binding.
Perform median-cut to produce final box list
Perform multiple-shift QR iterations on rows and columns ILO to I until a submatrix of order at most MAXB splits off at the bottom because a subdiagonal element has become negligible.
Perform subtraction: N2 is subtracted from N1 and the value is returned.
Perform the requested scanning operation.
Perform whatever processing is required and return.
Performance note: It might be tempting to extract commonly used fields from the md structure (e.g. utf, end_subject) into individual variables to improve performance.
Performance statistics
Performance* Some common ndarray cases are easy for the algorithm: - Two arrays whose memory ranges do not overlap.
Performed when YYTABLE does not specify something else to do.
Performed when YYTABLE doesn't specify something else to do.
Performs an Invoke on the given com object.
Perhaps even use queue itself to have a list of cursors.
Perhaps it is best to leave it un-implemented.
Perhaps the caller will want to call strcmp to break the tie.
Perhaps the most important point is the difference between MEMTYPE_HEAP and MEMTYPE_LOOKASIDE.
Perhaps the name is a reference to the ROWID
Perhaps the next process to come along will be able to rollback the database.
Perhaps use FILE_ID_BOTH_DIR_INFO Structure.
Perhaps we are on a serial terminal.
Perhaps we should just compute leading 28 bits of S once and for all and pass them and a shift to quorem, so it can do shifts and ors to compute the numerator for q.
Perhaps we should keep this brigade hanging around and try to write it later.
Periodically test totbuffer.
Periodically, the content of the WAL is transferred back into the database file in an operation called a "checkpoint".
Perl 5.8 + named group
Perl and POSIX space are the same
Perl compatible options
Perl gives an error if they are encountered at the top level, so we'll do that too.
Perl has changed over the years.
Perl recursion/subroutine syntax
Perl space used to exclude VT, but from Perl 5.18 it is included, which means that Perl space and POSIX space are now identical.
Perl style string increment
Perl treats a hyphen as a literal in such circumstances.
Perl users often call this approach a Schwartzian Transform, after Randal Schwartz.
Perl-Compatible Regular Expressions       *
Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:  1.
Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions: 1.
Permissions to create file with
Permitted values of the SrcList.a.jointype field
Permutation of columns for OP_Compare
Permutation size from argument
Permutation to isolate eigenvalues if possible
Persistent connection stubs are also counted as they have private session pools
Persistent connections have private session pools
Persistent connections: For old close semantics we artificially bump up the refcount to prevent the non-persistent destructor from getting called until request shutdown.
Persistent connections: two list-types le_pconn, le_conn and a plist where hashed connection info is stored together with index pointer to the actual link of type le_pconn in the list.
Persistent font cache until explicitly cleared
PgHdr is added by the pcache.c layer and contains information used to keep track of which pages are "dirty".
PgHdr1 contains information needed to look up a page by its page number.
PgHdr1 is an extension added by this module (pcache1.c).
Phase 1: hash password
Phase 3: hash scramble + sha2
Phrase and token index, respectively
Phrase expression node
Phrase matches are numbered starting from zero, so the iIdx argument should be greater than or equal to zero and smaller than the value output by xInstCount().
Phrase number (numbered from zero)
Phrase object to advance to next docid
Phrase object to initialize
Phrase to advance token of
Phrase to merge pList/nList into
Phrase to return doclist for
Phrases are numbered starting from zero.
Pick rows in this db only
Pick up where we left off
Pick which browser pattern replaces the least amount of characters when compared to the original user agent string...
Pickled arrays created with previous versions encoded flags as an int even though it actually was a char in the PyArray_Descr structure
Pierre: crop everything sounds bad
Ping loop: Ping and loop till we get a good connection.
Ping-pong is controlled by PP (alternates between 0 and 1).
Place debugging traps here.
Place for at least two instruction (doesn't matter whether the first has a literal).
Place this one in lexicographic order.
Plain old inconsistency/typo/bug
Plan with no prereqs and no IN(...) seen
Planning to make it even more clever in the future.
Platform-specific time_t typedef.
Playback and delete the journal.
Playback savepoint pSavepoint.
Playback the journal and thus restore the database file to the state it was in before we started making changes.
Please INCREF if you will be hanging on to it.
Please confer Constructive and Primitive for the mappings between ASN.1 data types and Ruby classes.
Please define either SHA2_USE_MEMSET_MEMCPY or define SHA2_USE_BZERO_BCOPY depending on which function set you choose to use:
Please feel free to add more valitions.
Please follow this convention for the convenience of others editing your code.
Please give us feedback.
Please keep the same order as in fpm_conf.h and in php-fpm.conf.in
Please note that it is not possible to encode Constructive without the +infinite_length+ attribute being set to +true+, use OpenSSL::ASN1::Sequence or OpenSSL::ASN1::Set in these cases instead.
Please note that most of this public API is currently not guaranteed to stay the same between versions.
Please note that several assumptions that are valid for ASCII-only case conversions do not hold for more general case conversions.
Please note that since you should never be using ECB mode, an IV is always explicitly required and should be set prior to encryption.
Please note that the choice of "1" as a serial number is considered a security flaw for real certificates.
Please preserve the runtime self-test.
Please report your problem related on it.
Please see the overview for further details.
Please send bug reports to David M.
Pluggable cache module
Plus 1 if this entry carries the "delete" flag.
PmaReader from which to take the blob
PmaReader to populate
PmaReaders should be normally initialized in order, as if they are reading from the same temp file this makes for more linear file IO.
Point p to the end of the file name
Point p to variable value
Point s to the end of the value
Point the object iterator at the first object
Point to the base of the buffer object if present
Pointer into the body of aDoclist
Pointer map 'page-no' entry for pDbPage
Pointer map 'type' entry for pDbPage
Pointer map entries associated with divider cells are set by the insertCell() routine.
Pointer map page data
Pointer map page index
Pointer p currently points at the first byte of an offset list.
Pointer p now points at the first byte past the varint we are  interested in.
Pointer to 1 byte past end of doclist
Pointer to 1 byte past the end of *ppFrom buffer
Pointer to BtShared that this page is part of
Pointer to DNS_RECORD structure
Pointer to Fts5Global object
Pointer to Fts5InsertCtx object
Pointer to Fts5IntegrityCtx object
Pointer to HighlightContext object
Pointer to INTERFACEINFO structure
Pointer to MatchInfo structure
Pointer to TK_STRING expression with pattern prefix
Pointer to a new child page
Pointer to a prior allocation
Pointer to a single WhereLoop object
Pointer to a static string
Pointer to a string obtained from sqliteMalloc()
Pointer to allocated object to return
Pointer to allocated vtab
Pointer to allocation
Pointer to an array of results
Pointer to application-specific data
Pointer to array of page numbers
Pointer to blob containing changeset
Pointer to block from malloc()
Pointer to buffer containing block data
Pointer to buffer containing changeset
Pointer to buffer containing changeset A
Pointer to buffer containing changeset B
Pointer to buffer containing doclist
Pointer to buffer containing name
Pointer to buffer containing record
Pointer to buffer containing root node
Pointer to buffer containing string
Pointer to buffer containing term
Pointer to buffer containing token
Pointer to buffer to copy data from
Pointer to busy-handler function
Pointer to bytes counter
Pointer to cell to delete
Pointer to cell-pointer area
Pointer to changeset buffer
Pointer to child node
Pointer to corresponding expr token
Pointer to current cell in pPage
Pointer to current file mapping
Pointer to current key
Pointer to current poslist
Pointer to current term
Pointer to cursor object to return
Pointer to data for pPage
Pointer to data for pPg
Pointer to data for string (char array) types
Pointer to data part of aFrame buffer
Pointer to data to append to buffer
Pointer to database schema (possibly shared)
Pointer to disk image of the page data
Pointer to doclist buffer
Pointer to doclist for this term
Pointer to doclist of current entry
Pointer to entire doclist
Pointer to filter object
Pointer to first byte after the header
Pointer to first entry with this hash
Pointer to first in list of synonyms
Pointer to function information
Pointer to function information.
Pointer to hash bucket
Pointer to hash table
Pointer to hash table to clear
Pointer to input string
Pointer to interior tree structure
Pointer to left-most node of this depth
Pointer to list of ongoing backup processes
Pointer to mapping of entire file
Pointer to module implementation
Pointer to multitasking thread giveup.
Pointer to new Btree object written here
Pointer to new system call value
Pointer to next docid
Pointer to next record in list
Pointer to node data (or NULL)
Pointer to nul-term of zCopy
Pointer to one byte after EOF
Pointer to one journal within MJ file
Pointer to one of the indices
Pointer to output buffer
Pointer to padding string
Pointer to page cache object
Pointer to page data (for checksum)
Pointer to phrase counter
Pointer to phrase expression
Pointer to position list following iDocid
Pointer to position list for phrase
Pointer to previous term buffer
Pointer to rbu object (rbu target only)
Pointer to right-sibling
Pointer to sampled record
Pointer to save as auxdata
Pointer to shared header
Pointer to space allocated by sqlite3BtreeSchema()
Pointer to sqlite3_int64 variable
Pointer to start of phrase position list
Pointer to string from which to read char
Pointer to sub-list content
Pointer to task common address block.
Pointer to term buffer
Pointer to the "extra" space
Pointer to the appropriate info structure
Pointer to the cell text.
Pointer to the conversion buffer
Pointer to the data to be bound
Pointer to the end of the file
Pointer to the end of the last xRead()
Pointer to the index object
Pointer to the minor token to shift in
Pointer to the rbu_vfs object
Pointer to the rightmost select in sub-query
Pointer to the root node of a tree
Pointer to the start of cell content
Pointer to the start of payload
Pointer to the subexpression that is this term
Pointer to tokenizer hash table
Pointer to top element of the stack
Pointer to vfs object
Pointer to virtual tables needing locking
Pointer to vtab instance
Pointer to wal-index content in memory
Pointer to write buffer
Pointers must fit into 2 * size.
Pointers to cell bodies
Pointers to instances of struct Trigger are stored in two ways.
Pointers to names of parameters
Pointers to phrase objects
Pointers to structures of this type are cast and returned as  opaque sqlite3_pcache* handles.
Pointers to the body of overflow cells
Pointers to the cells are in the cell pointer array that immediately follows the page header.
Pointers to the extension init functions
Points after the current instruction.
Points to conflicting row, if any
Points to definition if a view.
Points to our private memory word on the stack.
Points to the last matched capture block index.
Points to the marked string.
Points to the starting opcode.
Points to the starting position of the current match.
Points to the structure shared across all PHP processes
Poking around in these bits is platform dependent.
Pop DISCARD_EXCEPTION from unwind stack
Pop FAST_CALL from unwind stack
Pop all X509 from Stack and free them, free the stack afterwards
Pop all events from the shared list
Pop an authorization context that was previously pushed by sqlite3AuthContextPush
Pop indentation levels from the indents stack until the current level becomes less or equal to the column.
Pop the current state because it cannot handle the error token.
Pop the indentation level.
Pop the indentation stack by one level.
Pop the loop variable stack separator
Pop the parser's stack once.
Populate buffer zOut with the full canonical pathname corresponding to the pathname in zPath.
Populate key if passed
Populate new node buffer
Populate our return value data structure here.
Populate the Fts5Config.zContentExprlist string.
Populate the OLD.* pseudo-table register array.
Populate the PagerSavepoint structures just allocated.
Populate the StatCursor fields with the values to be returned by the xColumn() and xRowid() methods.
Populate the argument registers.
Populate the array of registers beginning at regNew with the new row data.
Populate the buffer pointed to by zBufOut with nByte bytes of  random data.
Populate the buffer zErrMsg (size nByte bytes) with a human readable utf-8 string describing the most recent error encountered associated  with dynamic libraries.
Populate the change object.
Populate the coverage-checking heap for leaf pages
Populate the low-level memory allocation function pointers in sqlite3GlobalConfig.m with pointers to the routines in this file.
Populate the new SessionTable object and link it into the list.
Populate the output  variables to point into the body of the page object.
Populate the output variable and return success.
Populate the overflow cache.
Populate the register containing the index name.
Populate the structure pointed to by pCell with the results.
Populate this structure before returning.
Populated object for xBestIndex
Populated on demand from vtab.xColumn().
Populates out_dimensions, out_strides, and out_offset.
Portions of this code are based on Berkeley's uuencode/uudecode implementation.
Position at the first row
Position in FROM clause of table for this loop
Position just read from pList
Position list (no 0x00 term)
Position list data following iHead
Position list data following iTail
Position list for deferred tokens
Position list to iterate through
Position lists for current row
Position of last value written
Position of next token
Position of term for entry to add
Position of token in phrase
Position of token in zText
Position of token within column
Position read from poslist
Position the read cursor on the first sorted element.
Position-list terminator
Positive forward assertions
Positive forward assertions and conditions
Positive infinity value.
Posix Advisory Locking ****************************  POSIX advisory locks are broken by design.
Poslist buffer to iterate through
Poslist of this iterator
Possessifying an EXACT quantifier has no effect, so we can ignore it.
Possessive quantifiers can use a special case.
Possible Content-Type:
Possible E_STRICT error message
Possible covering index for WHERE_MULTI_OR
Possible error  codes include SQLITE_CORRUPT (if the changeset buffer is corrupt) or  SQLITE_NOMEM.
Possible values for +options+ include +true+, which enables all options, +false+ which disables all options, and +nil+ which leaves all options unchanged.
Possible values for FuncDef.flags.
Possible values for Rtree.eCoordType:
Possible values for RtreeConstraint.op
Possible values for WAL.readOnly
Possible values for flags
Possible values for the sqlite.magic field.
Possible values for the sqlite3.flags.
Possibly because the free-list is empty, or possibly because the  first trunk in the free-list is full.
Possibly monotonic increasing
Possibly new term to test
Possibly overload the function if the first argument is a virtual table column.
Possibly relative input path
Possibly single byte.
Possibly, skip spaces/tabs at the end of line
Post handlers are stored in the thread-local context.
PostgreSQL 7.4 or later
PostgreSQL wants params in the connect string to be separated by spaces, if the PDO standard semicolons are used, we convert them to spaces
Posts the given C string as a message.
Posts the given Ruby VALUE as a message.
Potential covering index (or NULL)
Potential error situation - eg: no space on device.
Potential failure modes: - Array extent sum(stride*(shape-1)) is too large (for int64).
Potential simple keys.
Potential values for BtCursor.eState.
Powers of two are not biased
Powersafe overwrite is on by default.
Pragma "quick_check" is reduced version of  integrity_check designed to detect most database corruption without most of the overhead of a full integrity-check.
Pragma Name     1st arg or NULL
Pre Ruby 1.8, these bits were exposed directly to the Ruby program.
Pre-allocated UnixUnusedFd
Pre-condition is that the zvals in the result_bind buffer have been  ZVAL_NULL()-ed or to another simple type (int, double, bool but not string).
Pre-existing files can be appended, truncated, or read.
Pre-fork or spawn, if required
Pre-initialize the runtime synchronization objects
Preallocated space for the PCache
Preallocated, blank file handle
Precious guess is invalid.
Precision may be negative.
Precision of the current field
Precompiled statements used by the implementation.
Precompute GCD and bounds transformations
Precompute the cost of sorting the final result set, if the caller to sqlite3WhereBegin() was concerned about sorting
Precomputed device characteristics
Predefined entities will expand unless no cdata handler is present
Prefer native types, to cater for Cython
Prefer to null the destructor
Preference to built-in funcs
Preferred text encoding
Prefix for optional rounds specification.
Prefix length (0 for main terms index)
Prefix parameter value (or NULL)
Prefix the character ch to the string str Increase length Set the has_prefix flag
Prepare Etag, Date, Last-Modified headers
Prepare a statement used to insert rows into the "rbu_tmp_xxx" table.
Prepare a virtual machine for execution for the first time after creating the virtual machine.
Prepare all the operands
Prepare an npy_index_object from the python slicing object.
Prepare buffer (dirname never changes)
Prepare for final transform:
Prepare for input from a gdIOCtx stream.
Prepare for main iteration loop for the singular values (MAXIT is the maximum number of passes through the inner loop permitted before nonconvergence signalled.)
Prepare for output to a stdio stream.
Prepare for the next iteration on K.
Prepare for the next round.
Prepare for the real work.
Prepare full path to the index file
Prepare points array to pass to qhull.
Prepare socket address
Prepare the IDXQ sorting permutation.
Prepare the INDXQ sorting permutation.
Prepare the INDXQ sorting premutation.
Prepare the SQL statement in buffer zSql against database handle db.
Prepare the arguments.
Prepare the environment block
Prepare the next buffers and set iterend/size
Prepare the option character and the argument string.
Prepare the two insert statements - Fts5Storage.pInsertContent and Fts5Storage.pInsertDocsize - if they have not already been prepared.
Prepare to begin tokenizing a particular string.
Prepare to use Francis' double shift (i.e. 2nd degree generalized Rayleigh quotient)
Prepare translation table  Make it persistent so that it uses malloc() and allocated blocks won't be taken from space which is freed by efree in memdup.
Prepare variable name
Prepared statement being queried
Prepared statement for which info desired
Prepared statement in use by the cursor
Prepared statement under construction
Prepared statements under construction
Prepares a a constructor operand.
Prepares shape and strides for a simple raw array iteration.
Prepend to it by chaining our new linked list node to whatever the head already points to then making the head point to our node.
Prepends 'val' to the linked list of values associated with 'key'.
Preprocess format into formatcodes and formatargs
Preprocessor macros are available so that the types can be conveniently redefined at compile-type.
Prerequesites of pExpr
Prerequisites of the new entry
Prescan some rows of pixels.
Preserve the application id
Preserve the default page cache size
Preserve the text encoding
Preserve the user version
Preset error values: no error propagated to first pixel from left
Presumably, the prior OP_NotExists opcode has already positioned the cursor correctly.
Presumably, the prior OP_NotExists or OP_SeekRowid opcode has already positioned the cursor correctly.
Presumably, when this routine is used for Walker.xExprCallback then  Walker.xSelectCallback is set to do something useful for every  subquery in the parser tree.
Pretend to compile the pattern while actually just accumulating the length of memory required.
Pretend we already have a lock
Pretend we are in EXCLUSIVE locking mode
Pretend we are in EXCLUSIVE mode
Pretend we have a string_key here
Prev is not allowed to follow SeekGT, SeekGE, or OP_Rewind.
Prev() is noop if negative.
Prevent ON clause terms of a LEFT JOIN from being used to drive an index for tables to the left of the join.
Prevent any values from flowing into irreducible loops by replacing all incoming values with explicit phis.
Prevent by getAndInitPage()
Prevent compiler "uninitialized" warning
Prevent derived classes from restricting access that was available in parent classes
Prevent endless loops on corrupt database files
Prevent overflow error/crash
Prevent overflow error/crash ...
Prevent reentrant calls to the same user ticks function
Prevent reentrant handler calls
Prevent the single-thread code below
Prevent unnecessary deep recursion when we run out of entries
Prevent update of the snmpapp.conf file
Preventing SQLite from taking this  prevents it from checkpointing the database from sqlite3_close().
Preventing SQLite from taking this lock also prevents any checkpoints from occurring.
Prevents a race condition.
Previous block size: 0 - This is the first block of the memory chunk.
Previous docid stored in doclist
Previous element in list of dirty pages
Previous id read from aDoclist
Previous in LRU list of unpinned pages
Previous index in the loop
Previous result register.
Previous revisions of the code would do explicit cleanups, but simply running the self-test after hash computation is more reliable.
Previous row data is stored here
Previous rowid value written to page
Previous rowid written to current leaf
Previous term written to new node
Previous thread used to flush PMA
Previous value read from pgidx
Previous value written into pgidx
Previous versions of SQLite used to check if the root-page flags were sane at this point and report database corruption if they were not, but this check has since moved into the btree layer.
Previous with the same zTo
Previously generated index key
Previously obtained value for P4
Previously saw an Implicit Result Set in an earlier invocation of php_oci_fetch_row
Previously set handler must have been saved before.
Previously we used strtol here, not is_numeric_string, and strtol gives you LONG_MAX/_MIN on overflow.
Primary key declaration for imposter
Primary key flags array
Prime machines:  ASCII+128
Primitive documentation for details on sub-classes and their respective mappings of ASN.1 data types to Ruby objects.
Primitive values can never be infinite length encodings, thus it is not possible to set the +infinite_length+ attribute for Primitive and its sub-classes.
Primitive values that are encoded with "infinite length" are typically constructed (their values come in multiple chunks) and are therefore represented by instances of Constructive.
Print Unicode property value             *
Print a WhereLoop object for debugging purposes
Print a sequence of chars in printable format, stopping at the end of the subject if the requested.
Print a single opcode.
Print a string containing C character escapes.
Print a summary line giving, the command, its alias and tip
Print an IOTRACE message showing SQL content.
Print an error with magic line number.
Print error message to the opened error log stream.
Print first entry - link to a parent directory
Print into memory obtained from sqlite3_malloc()().
Print into memory obtained from sqlite3_malloc().
Print into memory obtained from sqliteMalloc().
Print its message, with a blank before it if the previous item printed and this item isn't empty.
Print message header according to RFC 822
Print out aliases for all commands except help as this one comes last
Print out aliases for help as this one comes last, with the added text on how aliases are used
Print out information about all locking operations.
Print out the compiled data if debugging is enabled.
Print single- or multi-byte character    *
Print the SQL that was used to generate a VDBE program.
Print the content of a WhereTerm object
Print the digits on the stack.
Print the fixed strides when there's no inner loop
Print the instructions in the bundle.
Print the value of a register for tracing purposes:
Print tracing information for a SHIFT action
Print uchar string (regardless of utf)        *
Print weeks with the same precision as days.
Printable character: same as graphic, with the addition of Zs, i.e. not Zl and not Zp, and U+180E.
Printf format string to append
Prints +prompt+ unless it is +nil+.
Prints errors and calls exit(3) if an error occurred.
Prior contents of pTo are freed before the copy is made.
Prior contents of pTo are freed.
Prior select in a compound select statement
Prior to 8.13, all atomic groups were handled this way.
Prior to version 3.1.2, when LIMIT and OFFSET had to be simple constants, not arbitrary expressions, we allowed some combining of LIMIT and OFFSET because they could be computed at compile-time.
Prior to version 3.1.2, when LIMIT and OFFSET had to be simple constants, not arbitrary expresssions, we allowed some combining of LIMIT and OFFSET because they could be computed at compile-time.
Prior to version 3.6.5, this optimization caused the row change count (the value returned by  API function sqlite3_count_changes) to be set incorrectly.
Prior versions of SQLite will not understand those serial types.
Priority is given to SQLITE_ENABLE_STAT4.
Priority queue for search points
Private and protected methods are included in the search only if the optional second parameter evaluates to +true+.
Private control structure number for microtasking.
Private flags added to firstchar and reqchar.
Private interfaces - callable only by other where.c routines.
Private objects used by the sorter
Probability of truth for this expression
Probe for stat4 (if required)
Problem reported by Andreas Pfaller.
Proc.new with no block will raise an exception in the future versions
Proceeding may generate a false "no such table: xxx" error if pSelect reads from a CTE named "xxx".
Process HTTP status codes
Process ID for pid based multi-tasking.
Process LEN bytes of BUFFER, accumulating context into CTX.
Process NATURAL keywords, and ON and USING clauses of joins.
Process a "special" query.
Process a final partial block.
Process a modifier to a date-time stamp.
Process a pragma statement.
Process all bytes in the buffer with 128 bytes in each round of the loop.
Process all bytes in the buffer with 64 bytes in each round of the loop.
Process all the continuations of that match before returning.
Process all the operands, copying new references so further processing can replace the arrays if copying is necessary.
Process an UPDATE statement.
Process an initial partial block.
Process as many complete blocks as we can
Process as many whole blocks as remain
Process available complete blocks.
Process data in 64-byte chunks
Process died before the signal was sent
Process each potentially referenced group.
Process from the end to the start, so that 'strides' and 'out_strides' can point to the same memory.
Process handles seem act like pointers to a process.
Process ktharray even if using sorting to do bounds checking
Process nested bracketed regex. First check for parentheses nested too deeply.
Process old session data
Process python arguments and call Delaunay implementation method.
Process string values only.
Process symbolic control-flow constraints
Process the LIMIT and OFFSET clauses, if they exist
Process the ORDER BY clause for singleton SELECT statements.
Process the data as runs of unmasked values
Process the endian character.
Process the header info
Process the innermost dimension
Process the next pattern item.
Process the remaining bytes in the internal buffer and the usual prolog according to the standard and write the result to RESBUF.
Process time function arguments.
Process unmasked values
Process unmasked values (assumes unmasked loop doesn't mess with the 'args' pointer values)
Process.kill("TERM", pid)  produces: Debug now: true Debug now: false Terminating...
Process.kill("USR1", pid) # ...
Processes all pending input and flushes pending output.
Processing a sub-WHERE as part of the OR optimization
Processing continues and no error is reported.
Processing continues and no error is returned.
Processing continues with the next row.
Processing for aggregates with GROUP BY is very different and much more complex than aggregates without a GROUP BY.
Processing for ref-cursor out binds
Produce L in A, zeroing out above it
Produce L in A, zeroing out other entries
Produce R in A, zeroing out below it
Produce R in A, zeroing out other entries
Produce a VERSION-DIRECTIVE or TAG-DIRECTIVE token.
Produce the ALIAS or ANCHOR token.
Produce the BLOCK-ENTRY token.
Produce the DOCUMENT-START or DOCUMENT-END token.
Produce the FLOW-ENTRY token.
Produce the FLOW-SEQUENCE-END or FLOW-MAPPING-END token.
Produce the FLOW-SEQUENCE-START or FLOW-MAPPING-START token.
Produce the KEY token.
Produce the SCALAR(...,literal) or SCALAR(...,folded) tokens.
Produce the SCALAR(...,plain) token.
Produce the SCALAR(...,single-quoted) or SCALAR(...,double-quoted) tokens.
Produce the STREAM-END token and shut down the scanner.
Produce the TAG token.
Produce the VALUE token.
Produce the multibyte output
Produces a string representation for a structured dtype
Produces a string representation for a subarray dtype
Producing a date as a local time is always 'unsafe'
Program Counter in parent (calling) frame
Program implementing pTrigger/orconf
Program instructions for parent frame
Programs can use this to help determine what kind of completing to do.
Programs may make subclasses of Exception, typically of StandardError or RuntimeError, to provide custom classes and add additional information.
Programs that require multiple threads of execution are a perfect candidate for Ruby's Thread class.
Progression order change
Promote any segments that should be promoted as a result.
Promote anything this size or smaller
Promote the newest segment on level  iLvl to level iTst.
Promoted types are always native byte order
Propagate WARN_ON_WRITE through views.
Propagate all EP_Propagate flags from the Expr.x.pList into Expr.flags.
Propagate these bits up tree
Properties must be set after open() or XML() and before the first read() is called
Properties of opcodes.
Properties such as "out2" or "jump" that are specified in comments following the "case" for each opcode in the vdbe.c are encoded into bitvectors as follows:
Property already exist - make array
Protect against corrupt headers
Protect from CGI code disclosure.
Protect the quoted characters.
Protects class' refcount, copies default properties, functions and class name
Protocol must be "tcp" or "udp"
Prototypes for the VDBE interface.
Prove this using the following assert().
Provide a default value for SQLITE_TEMP_STORE in case it is not specified on the command-line
Provide access to the history buffer.
Provide flag hints to the cursor.
Provide hints to the cursor.
Provide multidimensional arrays as a basic object type in python.
Provide the ability to easily simulate an I/O error during testing
Provide the ability to override linkage features of the interface.
Provides VI and Emacs editing mode.
Provides a case-sensitive comparison operator for pathnames.
Provides a convenient Ruby iterator which executes a block for each entry in the /etc/group file.
Provides a policy for allowed casting
Provides a string length to use for converting datetime objects with the given local and unit settings.
Provides access to a certificate's attributes and allows certificates to be read from a string, but also supports the creation of new certificates from scratch.
Provides an ordering for the dtype 'kind' character codes
Provides an ordering for the dtype 'kind' character codes, to help determine when to use the min_scalar_type function.
Provides leaky bucket handhsake renegotiation rate-limiting
Provides mmap function.
Providing the ability to disable the optimization allows the older, buggy application code to work without change even with newer versions of SQLite.
Proxy HTTP Authentication
Proxy locking is a meta-layer over top of the primitive locking implemented above.
Proxy locking is only available on MacOSX
Pseudo I/O on String object.
Pseudo pass through to catch level validating code
Pseudo-random byte sequences generated by ::pseudo_bytes will be unique if they are of sufficient length, but are not necessarily unpredictable.
Pseudo-random number used for sampling
PseudoTable input register
Pseudotable used to decode sorting results
Ptr to head of pagers backup list
Public (MADE PRIVATE UNTIL SOMEBODY WILL NEED THEM)
Public API declarations.
Public and protected methods are matched.
Public interfaces:  sqlite3ConnectionBlocked() sqlite3ConnectionUnlocked() sqlite3ConnectionClosed() sqlite3_unlock_notify()
Pull a 32-bit integer from the generator state Every other access function simply transforms the numbers extracted here
Pull data from this table
Pull the requested columns.
Pulling in the header ensures that the array gets flagged as "someone outside this compilation unit might reference this" and so it will always be supplied to the linker.
Pure red always maps to 6 in this implementation.
Purge the cache before playing back the hot-journal so that we don't end up with an inconsistent cache.
Purge the range of registers from the column cache.
Push DISCARD_EXCEPTION on unwind stack
Push FAST_CALL on unwind stack
Push a new element onto the priority queue
Push a new event in the shared list and wakeup the OCaml thread
Push a new indentation level.
Push a separator to the loop variable stack
Push an authorization context.
Push an empty string, so that we at least have an xslt result...
Push its first rowid up to the new root.
Push the current indentation level to the stack and set the new indentation level.
Push the current indentation level to the stack and set the new level the current column is greater than the indentation level.
Pushing the constant pool into the instruction stream.
Pushing the starting string pointer.
Put -(initial shift) into DMIN.
Put a character to the output buffer.
Put a copy of the Table struct in Parse.pNewTable for the sqlite3AddColumn() function and friends to modify.
Put a line break to the output buffer.
Put accepted socket structure into the queue
Put all the names into a single string, in order to reduce the number of relocations when a shared library is dynamically linked.
Put any active cursors into REQUIRE_SEEK state.
Put buffered data together with inbound for a single block
Put checksum in context given as argument.
Put docstring first or FindMethod finds it...
Put error message here if not 0
Put in the magic number, and save the sizes, initial options, internal flags, and character table pointer.
Put last bytes from data into context's buffer
Put out the final code.
Put result from CTX in first 32 bytes following RESBUF.
Put result from CTX in first 64 bytes following RESBUF.
Put saved Parse.zAuthContext here
Put sent value in the target VAR slot, if it is used
Put the 128-bit file length in *bits* at the end of the buffer.
Put the 64-bit file length in *bits* at the end of the buffer.
Put the aux data into local variables
Put the expression object together.
Put the new key into this register if not 0
Put the new pages in accending order.
Put the pointer back and fall through
Put the temp file in place of real file
Put the tokens into the symbol table, so that GDB and other debuggers know about them.
Putting the top-level on the stack rather than malloc-ing them all gives a performance boost in many cases where there is not much "recursion".
Putting this code right at the start ensures that comments have no bad side effects.
PyArray_DESCR does not give us a reference
PyArray_GetAttrString_SuppressException:  Stripped down version of PyObject_GetAttrString, avoids lookups for None, tuple, and List objects, and doesn't create a PyErr since this code ignores it.
PyArray_IntpFromIndexSequence Returns the number of dimensions or -1 if an error occurred.
PyArray_NewFromDescr steals a ref, but we need to look at type later.
PyArray_SearchSorted needs an increasing array
PyArray_SearchSorted will make `x` contiguous even if we don't
PyExc_Exception should catch all the standard errors that are now raised instead of the string exception "multiarray.error" This is for backward compatibility with existing code.
PyNumber_Index(o) covers everything including arrays.
Python C-Api level item assignment (implementation for PySequence_SetItem)  Negative indices are not accepted because PySequence_SetItem converts them to positive indices before calling this.
Python C-Api level item subscription (implementation for PySequence_GetItem)  Negative indices are not accepted because PySequence_GetItem converts them to positive indices before calling this.
Python Universal Functions Object -- Math for all types, plus fast arrays math  Full description  This supports mathematical (and Boolean) functions on arrays and other python objects.
Python-style named subpattern handling
Q       (output) DOUBLE PRECISION array, dimension (LDQ,N) Initially the first K columns are used as workspace.
Q       (output) REAL array, dimension (LDQ,N) Initially the first K columns are used as workspace.
Q       (workspace) DOUBLE PRECISION array, dimension (LDQ,N) LDQ     (input) INTEGER The leading dimension of the array Q.
Q       (workspace) REAL array, dimension (LDQ,N) LDQ     (input) INTEGER The leading dimension of the array Q.
Q      (input) DOUBLE PRECISION array, dimension (N**2) Contains the square eigenblocks from previous levels, the starting positions for blocks are given by QPTR.
Q      (input) REAL array, dimension (N**2) Contains the square eigenblocks from previous levels, the starting positions for blocks are given by QPTR.
Q      (input/output) COMPLEX array, dimension (LDQ,N) On entry, Q must contain an QSIZ x N matrix whose columns unitarily orthonormal.
Q      (input/output) COMPLEX array, dimension (LDQ,N) On entry, the eigenvectors of the rank-1-perturbed matrix.
Q      (input/output) COMPLEX*16 array, dimension (LDQ,N) On entry, Q must contain an QSIZ x N matrix whose columns unitarily orthonormal.
Q      (input/output) COMPLEX*16 array, dimension (LDQ,N) On entry, the eigenvectors of the rank-1-perturbed matrix.
Q      (input/output) DOUBLE PRECISION array, dimension (LDQ, N) On entry, Q must contain an N-by-N orthogonal matrix.
Q      (input/output) DOUBLE PRECISION array, dimension (LDQ, N) On entry, the eigenvectors of the rank-1-perturbed matrix.
Q      (input/output) DOUBLE PRECISION array, dimension (LDQ,N) On entry, the eigenvectors of the rank-1-perturbed matrix.
Q      (input/output) REAL array, dimension (LDQ, N) On entry, Q contains the eigenvectors of two submatrices in the two square blocks with corners at (1,1), (N1,N1) and (N1+1, N1+1), (N,N).
Q      (input/output) REAL array, dimension (LDQ, N) On entry, Q must contain an N-by-N orthogonal matrix.
Q      (input/output) REAL array, dimension (LDQ, N) On entry, the eigenvectors of the rank-1-perturbed matrix.
Q      (input/output) REAL array, dimension (LDQ,N) On entry, the eigenvectors of the rank-1-perturbed matrix.
Q      (workspace) DOUBLE PRECISION array, dimension at least (LDQ,K).
Q      (workspace) REAL array, dimension at least (LDQ,K).
Q and P**H are defined as products of elementary reflectors H(i) and G(i) respectively.
Q and P**H are defined as products of elementary reflectors H(i) or G(i) respectively.
Q and P**T are defined as products of elementary reflectors H(i) and G(i) respectively.
Q and P**T are defined as products of elementary reflectors H(i) or G(i) respectively.
Q is equal to the unit matrix except in the submatrix Q(ilo+1:ihi,ilo+1:ihi).
Q2      (input) DOUBLE PRECISION array, dimension (LDQ2, N) The first K columns of this matrix contain the non-deflated eigenvectors for the split problem.
Q2      (input) REAL array, dimension (LDQ2, N) The first K columns of this matrix contain the non-deflated eigenvectors for the split problem.
Q2     (output) DOUBLE PRECISION array, dimension (N1**2+(N-N1)**2) A copy of the first K eigenvectors which will be used by DLAED3 in a matrix multiply (DGEMM) to solve for the new eigenvectors.
Q2     (output) REAL array, dimension (N1**2+(N-N1)**2) A copy of the first K eigenvectors which will be used by SLAED3 in a matrix multiply (SGEMM) to solve for the new eigenvectors.
QH7078 warns about using 'TCn' with 'QJn'
QL Iteration Look for small subdiagonal element.
QPTR   (input) INTEGER array, dimension (N+2) Contains a list of pointers which indicate where in Q an eigenblock is stored.
QPTR   (input/output) INTEGER array, dimension (N+2) List of indices pointing to beginning of submatrices stored in QSTORE.
QPTR points to beginning of the submatrices.
QQ: Isn't it quite better to call zval_dtor().
QR Iteration Look for small superdiagonal element.
QR iteration finished, go back and check convergence
QSIZ   (input) INTEGER The dimension of the orthogonal matrix used to reduce the full matrix to tridiagonal form.
QSIZ   (input) INTEGER The dimension of the unitary matrix used to reduce the dense or band matrix to tridiagonal form.
QSIZ   (input) INTEGER The dimension of the unitary matrix used to reduce the full matrix to tridiagonal form.
QSTORE (input/output) DOUBLE PRECISION array, dimension (N**2+1) Stores eigenvectors of submatrices encountered during divide and conquer, packed together.
QSTORE (input/output) REAL array, dimension (N**2+1) Stores eigenvectors of submatrices encountered during divide and conquer, packed together.
Q_Next only moves in the direction from the head of the queue to the tail.
Qfalse indicates that the Enumerator::Lazy has no method name
Qfalse indicates that the arguments are empty
Quadratic filter, default radius 1.5
QuadraticBSpline filter, default radius 1.5
Qualify the filename so that DosQueryAppType does not do extraneous searches.
Quantities of days, hours, minutes, and seconds can be specified without explicit unit markings.
Quantization component
Quasi-random value added to every checksum
Query FTS for the tokenizer implementation named zName.
Query a blob handle for the size of the data.
Query column to extract text from
Query for existance of table only
Query for next idx at level iLevel
Query status information for a single database connection
Query status information.
Query the BtShared.pHasContent vector.
Query the WAL sub-system for the database size.
Query the hash table for a doclist associated with term pTerm/nTerm.
Query the schema of the main database.
Query the size of the file in bytes.
Query the value of journalmode
Query to see if Btree handle p may obtain a lock of type eLock  (READ_LOCK or WRITE_LOCK) on the table with root-page iTab.
Query used to initialize the table
Queue cannot distinguish between pointers to literals and malloced memory.
Queue cursor left on position found item else at end.
Quick and dirty octal conversion.
Quick check to make sure anything actually needs to be done
Quick return if possible
Quick return if possible.
Quote character (if any )
Quoting the linux manpage: memfd_create() creates an anonymous file and returns a file descriptor that refers to it.
R       (output) DOUBLE PRECISION The nonzero component of the rotated vector.
R       (output) REAL The nonzero component of the rotated vector.
R/M field with byte register (/r)
R/M field with op code (/digit)
R/M field with register (/r)
RANK    (output) INTEGER The effective rank of A, i.e., the number of singular values which are greater than RCOND*S(1).
RANK   (output) INTEGER The number of singular values of A greater than RCOND times the largest singular value.
RBU_PK_EXTERNAL:      Table has an external PK index. RBU_PK_WITHOUT_ROWID: Table is WITHOUT ROWID.
RBU_PK_IPK:           Table has an explicit IPK column.
RBU_PK_NONE:          Table has an implicit rowid.
RBU_PK_NOTABLE:       No such table.
RBU_PK_VTAB:          Table is a virtual table.
RCOND   (input) DOUBLE PRECISION RCOND is used to determine the effective rank of A.
RCOND   (input) REAL RCOND is used to determine the effective rank of A.
RCOND  (input) DOUBLE PRECISION The singular values of A less than or equal to RCOND times the largest singular value are treated as zero in solving the least squares problem.
RCOND  (input) REAL The singular values of A less than or equal to RCOND times the largest singular value are treated as zero in solving the least squares problem.
RD and WR are never simultaneously asserted
READER ALGORITHM  To read a page from the database (call it page number P), a reader first checks the WAL to see if it contains page P.
READER is only possible if the pager is or was in  exclusive access mode.
READER:  In this state all the requirements for reading the database in  rollback (non-WAL) mode are met.
READ_LOCK or WRITE_LOCK
RECORD FORMAT:  The following record format is similar to (but not compatible with) that  used in SQLite database files.
RECURSION IN THE match() FUNCTION The match() function is highly recursive, though not every recursive call increases the recursive depth.
RECURSION IN THE match() FUNCTION Undefine all the macros that were defined above to handle this.
RECURSIVE never match dot files unless FNM_DOTMATCH is set
RECiProcal MONTgomery
REFERENCES  Conversions Between Calendar Date and Julian Day Number by Robert J.
REFERENCES  I have found no detailed, authoritative reference on this calendar.
REG_STARTEND is a BSD extension, to allow for non-NUL-terminated strings.
REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECT
REMARK: The all indices should be 0 or natural number and lower than or equal to max indices.
REMEMBER TO ADD MIME-TYPE TO FUNCTION php_image_type_to_mime_type
RENAME TO or ALTER TABLE ...
RENAME command to modify the definition of any foreign key constraints that use the table being renamed as the  parent table.
REPLACE means that preexisting database rows that caused a UNIQUE constraint violation are removed so that the new insert or update can proceed.
REQ_UNSET means "no char matching encountered yet".
RESERVED:  A single process may hold a RESERVED lock on a file at any time.
RESTRICT is the same as ABORT for IMMEDIATE foreign keys and the same as ROLLBACK for DEFERRED keys.
RESTRICT, SETNULL, and CASCADE actions apply only to foreign keys.
RESULT XMLRPC_VALUE - newly created value, or NULL if fatal error.
RESULT XMLRPC_VALUE a newly created struct vector representing the error, or null on error.
RESULT char* or NULL.
RESULT const char*  pointer to the newly allocated value string, or NULL SEE ALSO XMLRPC_GetValueString () XMLRPC_VALUE XMLRPC_VALUE_TYPE SOURCE
RESULT fault code, else 0.
RESULT fault string, else 0.
RESULT newly allocated XMLRPC_VALUE, or NULL SEE ALSO XMLRPC_GetValueBoolean () XMLRPC_CreateValueEmpty () XMLRPC_VALUE XMLRPC_VALUE_TYPE SOURCE
RESULT newly allocated XMLRPC_VALUE, or NULL SEE ALSO XMLRPC_GetValueInt () XMLRPC_CreateValueEmpty () XMLRPC_VALUE XMLRPC_VALUE_TYPE SOURCE
RESULT newly allocated XMLRPC_VALUE, or NULL SEE ALSO XMLRPC_GetValueString () XMLRPC_CreateValueEmpty () XMLRPC_VALUE XMLRPC_VALUE_TYPE SOURCE
RESULT newly allocated XMLRPC_VALUE, or NULL if error NOTES See XMLRPC_SetValueBase64 () SEE ALSO XMLRPC_GetValueBase64 () XMLRPC_SetValueBase64 () XMLRPC_VALUE SOURCE
RESULT void NOTES Data is set/stored/retrieved as passed in, but is base64 encoded for XML transfer, and decoded on the other side.
RESULT void NOTES Normally this function will be called for the topmost vector, thus free-ing all children.
RESULT void NOTES The returned data must be free'd by caller SEE ALSO xml_elem_serialize_to_string () xml_elem_free () SOURCE
RETURN_ADDR is not a saved register.
REX_W is not necessary (src is not immediate).
RFC 1724 section 3.3 suggests unnumbered interfaces specified by pseudo address 0.0.0.0/8.
RFC 3542 relaxes the condition - implementation must accept both as valid.
RFC 4007: IPv6 Scoped Address Architecture draft-ietf-ipv6-scope-api-00.txt: Scoped Address Extensions to the IPv6 Basic Socket API
RFC 793 uses "CLOSED", not "CLOSE"
RFC says that all initial whitespaces should be ingored
RFC3339, Appendix A: http://www.ietf.org/rfc/rfc3339.txt ISO 8601 also requires (in section 5.3.1.3) that a decimal fraction be proceeded by a "0" if less than unity.
RFC850, Section 2.1.4: http://www.ietf.org/rfc/rfc850.txt Format must be acceptable both to the ARPANET and to the getdate routine.
RGENGC analysis information
RGENGC: mark, unprotected, uncollectible, marking
RGENGC_DEBUG: 1: basic information 2: remember set operation 3: mark 4: 5: sweep
RGENGC_ESTIMATE_OLDMALLOC Enable/disable to estimate increase size of malloc'ed size by old objects.
RGENGC_FORCE_MAJOR_GC Force major/full GC if this macro is not 0.
RGENGC_PROFILE 0: disable RGenGC profiling 1: enable profiling for basic information 2: enable profiling for each types
RHO          (input) DOUBLE PRECISION Refer to the equation f(x) above.
RHO          (input) REAL Refer to the equation f(x) above.
RHO     (input) DOUBLE PRECISION The value of the parameter in the rank one update equation.
RHO     (input) REAL The value of the parameter in the rank one update equation.
RHO    (input) DOUBLE PRECISION Contains the subdiagonal element used to create the rank-1 modification.
RHO    (input) DOUBLE PRECISION The scalar in the symmetric updating formula.
RHO    (input) DOUBLE PRECISION The subdiagonal element used to create the rank-1 modification.
RHO    (input) DOUBLE PRECISION The subdiagonal entry used to create the rank-1 modification.
RHO    (input) REAL Contains the subdiagonal element used to create the rank-1 modification.
RHO    (input) REAL The scalar in the symmetric updating formula.
RHO    (input) REAL The subdiagonal element used to create the rank-1 modification.
RHO    (input) REAL The subdiagonal entry used to create the rank-1 modification.
RHO    (input/output) DOUBLE PRECISION Contains the off diagonal element associated with the rank-1 cut which originally split the two submatrices which are now being recombined.
RHO    (input/output) DOUBLE PRECISION On entry, the off-diagonal element associated with the rank-1 cut which originally split the two submatrices which are now being recombined.
RHO    (input/output) REAL Contains the off diagonal element associated with the rank-1 cut which originally split the two submatrices which are now being recombined.
RHO    (input/output) REAL On entry, the off-diagonal element associated with the rank-1 cut which originally split the two submatrices which are now being recombined.
RHO is modified during the computation to the value required by DLAED3.
RHO is modified during the computation to the value required by SLAED3.
RHS always has 2 or more terms...
RHS is entirely deferred.
RHS must not overlap with this mask
RHS of LIKE/GLOB ends with wildcard
RHS of LIKE/GLOB operator
RHS of the comparison
RIGHT DOUBLE QUOTATION MARK
RIGHT JOIN not (yet) supported
RIGHT SINGLE QUOTATION MARK
RIGHT_SHIFT provides a proper signed right shift of an INT32 quantity.
RIGHT_SHIFT rounds towards minus infinity, so adding 8 is correct for either sign of the error value.
RIP-relative in amd64 mode
RMAX    (output) DOUBLE PRECISION The largest positive number for the machine, given by BASE**EMAX * ( 1 - EPS ), where  BASE  is the floating point value of BETA.
RMAX    (output) REAL The largest positive number for the machine, given by BASE**EMAX * ( 1 - EPS ), where  BASE  is the floating point value of BETA.
RMD160 calculates a digest of 160 bits (20 bytes).
RMIN    (output) DOUBLE PRECISION The smallest normalized number for the machine, given by BASE**( EMIN - 1 ), where  BASE  is the floating point value of BETA.
RMIN    (output) REAL The smallest normalized number for the machine, given by BASE**( EMIN - 1 ), where  BASE  is the floating point value of BETA.
RN, Image and tile size
RO, Codeing style defaulte
RO, Quantization default
ROL(x, n) cyclically rotates x over n bits to the left
ROLLBACK processing means that a constraint violation causes the operation in process to fail and for the current transaction to be rolled back.
ROTATE is true if any singular vectors desired, false otherwise
ROTATE_LEFT rotates x left n bits.
ROUND_BIASED_without_Round_Up
ROWID already in regIdx+i
ROWID of most recent insert (see above)
ROWID value for this entry
RSA Data Security, Inc.
RSA is used in a wide field of applications such as secure (symmetric) key exchange, e.g. when establishing a secure TLS/SSL connection.
RSA_PKCS1_OAEP_PADDING is recommended for new applications.
RT1     (output) DOUBLE PRECISION The eigenvalue of larger absolute value.
RT1     (output) REAL The eigenvalue of larger absolute value.
RT1R    (output) DOUBLE PRECISION RT1I    (output) DOUBLE PRECISION RT2R    (output) DOUBLE PRECISION RT2I    (output) DOUBLE PRECISION The real and imaginary parts of the eigenvalues.
RT1R    (output) REAL RT1I    (output) REAL RT2R    (output) REAL RT2I    (output) REAL The real and imaginary parts of the eigenvalues.
RT2     (output) DOUBLE PRECISION The eigenvalue of smaller absolute value.
RT2     (output) REAL The eigenvalue of smaller absolute value.
RTD key is placed after lcname literal in op1
RTREE_COORD_REAL32 or RTREE_COORD_INT32
RTREE_GT or RTREE_GE,  or fallthrough of RTREE_EQ
RTREE_LE and RTREE_LT end here
RUBY_GC_HEAP_FREE_SLOTS
RUBY_GC_HEAP_FREE_SLOTS - Prepare at least this amount of slots after GC.
RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO (new from 2.4) - Allow to free pages when the number of free slots is greater than the value (total_slots * (this ratio)).
RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO (new from 2.4) - Allocate additional pages when the number of free slots is lower than the value (total_slots * (this ratio)).
RUBY_GC_HEAP_GROWTH_FACTOR (new from 2.1) - Allocate slots by this factor.
RUBY_GC_HEAP_INIT_SLOTS
RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR (new from 2.1.1) - Do full GC when the number of old objects is more than R * N where R is this factor and N is the number of old objects just after last full GC.
RWORK  (workspace) DOUBLE PRECISION array, dimension at least max ( N, (SMLSZ+1)*NRHS*3 ).
RWORK  (workspace) REAL array, dimension at least max ( N, (SMLSZ+1)*NRHS*3 ).
Raise BASE to the EXPO power, reduced modulo MOD.
Raise NUM1 to the NUM2 power.
Raise an error if anything else is present in the keyword dictionary.
Raise an error if the casting rule isn't followed
Raise an exception if it overlaps
Raise an exception if this is not the case.
Raise warning and return NULL by checking client_encoding.
Raises +ThreadError+ if +mutex+ was locked by the current thread.
Raises +ThreadError+ if +mutex+ wasn't locked by the current thread.
Raises +UncaughtThrowError+ if there is no +catch+ block for the _tag_.
Raises ArgumentError if +proc+ does not respond to the call method.
Raises IOError exception if one of below conditions are satisfied.
Raises NameError if the +member+ does not exist and IndexError if the +index+ is out of range.
Raises NotImplementedError if the using readline library does not support.
Raises NotImplementedError.
Raises SDBMError if the database is already closed.
Raises a SystemCallError if there are no child processes.
Raises a Zlib::NeedDict exception if a preset dictionary is needed for decompression.
Raises a Zlib::NeedDict exception if a preset dictionary is needed to decompress.
Raises a runtime exception if it is already open.
Raises a runtime exception if it is not open.
Raises an +ArgumentError+ if there isn't a current file.
Raises an +EOFError+ after the last byte of the last file has been read.
Raises an +EOFError+ after the last character of the last file has been read.
Raises an ArgumentError if any values are out of range.
Raises an EngineError if the +command+ fails.
Raises an OpenSSL::ASN1::ASN1Error if it fails.
Raises an SSLError if reading would block.
Raises an SSLError if writing would block.
Raises an exception if there is no reasonable GCD, such as with years and days.
Raises an exception on any error.
Ramachandran, ''Use of Extended Euclidean Algorithm in Solving a System of Linear Diophantine Equations with Bounded Variables''.
Ran out of input before finding an opening bracket.
Ran out of input before finding the table name.
Ran out of polynomials
Random access writes are not required by sqlite.
Random access writes are not required.
Random numbers are used by some of the database backends in order to generate random integer keys for tables or random filenames.
Random objects can be marshaled, allowing sequences to be saved and resumed.
Random.new will create a new PRNG with a state independent of Random::DEFAULT, allowing multiple generators with different seed values or sequence positions to exist simultaneously.
Random::DEFAULT::seed shouldn't provide a hint that an attacker guess siphash's seed.
Randomly chosen byte used as a shared lock
Range between -1 and -32768 is covered above.
Range constraints on queries
Range contraints that come from the LIKE optimization are always used in pairs.
Range of registers allocated for aCol and aFunc
Range of registers hold conent for pIdx
Range of registers holding conflicting PK
Ranges are immutable, so that they should be initialized only once.
Rank callback (or NULL)
Rare case of a really large header
Rate-limit client-initiated handshake renegotiation to prevent DoS
Rather than argue, it seems easier just to initialize the whole array and silence valgrind, even if that means less randomness in the random seed.
Rather than depending on error-prone ordered lists or syntactically unpleasant pass-by-reference, we return an object with named parameters (like *_fetch_object()).
Rather than have OS-specific code here, instead it is determined by setupext.py and passed in via the macro MPL_DEVNULL.
Rather than swallow a low surrogate, just stop if we hit a bad one.
Rather than swallow a surrogate, just stop if we hit one.
Rather than swallow random bytes, just stop if we hit a bad one.
Rather, it is intended to be plugged into apps or libraries with existing networking facilities, eg PHP, apache, perl, mozilla, home-brew application servers, etc.
Raw 64 bits of this slot.
Raw cell content as appears on disk
Raw hash value of the key
Raw index records are transferred in the same way.
Raw text of the SQL statement
Rayleigh quotient residual bound.
Rc flag (see ALT_SET_FLAGS).
Re-enable the lookaside buffer, if it was disabled earlier.
Re-initialization should be tried here.
Re-insert the contents of any underfull nodes removed from the tree.
Re-open the databases.
Re-position to original element
Re-set to the beginning
Re-show original buffer
Reached end of expression, either ')' or end of pattern.
Reached end of input for '*' repeater
Read (and consume) the next character from the input pattern.
Read a 32-bit integer from the given file descriptor.
Read a lookahead token if we need one and don't already have one.
Read a numeric value from a pointer, into the value union of a magic  pointer, according to the magic type.
Read a page from the write-ahead log, if it is present.
Read a regular token using the sqlite3_tokenizer interface.
Read a resource from a thread's resource storage
Read a single varint from the doclist at *pp and advance *pp to point to the first byte past the end of the varint.
Read a specific resource from the thread's resources.
Read a string from the file descriptor and print it.
Read a varint from the stream of data accessed by p.
Read additional PS_EXTRA_RAND_BYTES just in case CSPRNG is not safe enough
Read all fields metadata
Read all frames from the log file.
Read an entry from the pointer map.
Read an unsigned value.
Read and decode the "averages" record from the database.
Read and decode the next log frame.
Read and discard pending data.
Read and forward body data if any
Read and return an unsigned 32-bit big-endian integer from the buffer  passed as the only argument.
Read and uncompress an entire chunk.
Read and write return code from here
Read and write the xxx_node table
Read and write the xxx_parent table
Read and write the xxx_rowid table
Read blob data into this buffer
Read bytes from *pz and convert them into a positive integer.
Read cursors remain open and valid but are "saved" in case the table pages are moved around.
Read data from a blob handle.
Read data from a file into a buffer.
Read data from an rbuVfs-file.
Read data from the file.
Read data from the in-memory journal file.
Read data from the target and forward it to the client
Read each varint and append its string representation to buffer pBuf.
Read end of each pipe is closed inside timer thread for shutdown Write ends are closed by a normal Ruby thread during shutdown
Read field, leaving bptr pointing at start of next field
Read from IO channel - opened file descriptor, socket, or SSL descriptor.
Read from file, exit the loop on error
Read handler must be set.
Read in the WAL header.
Read in the complete content of the index entry
Read in the first 8 bytes of the journal header.
Read input from all segments in the input level
Read is required to make new session data at this point.
Read metadata only if there is actual result set.
Read nByte bytes of data from the stream of data iterated by object p.
Read new data from the remote socket.
Read next character when 0
Read or write a four-byte big-endian integer value.
Read part of the data associated with cursor pCur.
Read part of the key associated with cursor pCur.
Read position list size
Read session data from opened resource.
Read the DACL from the original file, so we can copy it to the temp file.
Read the PK into an array of temp registers.
Read the compressed header
Read the contents of frame iRead from the wal file into buffer pOut (which is nOut bytes in size).
Read the database schema.
Read the extra info in the gd2 header.
Read the first N bytes from the beginning of the file into memory that pDest points to.
Read the first integer value
Read the first three 32-bit fields of the journal header: The nRec field, the checksum-initializer and the database size at the start of the transaction.
Read the first token from the nul-terminated string at *pz.
Read the last entry (most recently pushed) from the hint blob *pHint and then remove the entry.
Read the length of the section.
Read the master journal name from the journal, if it is present.
Read the meta-information out of a database file.
Read the nKeep field of the next term.
Read the next UTF-8 character.
Read the next journal header from the journal file.
Read the next nByte bytes of data from the PMA p.
Read the old.* and new.* records for the update change.
Read the page number and page data from the journal or sub-journal file.
Read the page-size and sector-size journal header fields.
Read the rest of CGI output and send to the client
Read the rowid (the last field in the record) and store it in *rowid.
Read the schema cookie from the database.
Read the schema information out of the schema tables
Read the sector allocation table.
Read the serial types for the next element in each key.
Read the specified cookie value
Read the term data for the next term
Read the total number of levels and segments from the start of the structure record.
Read the values returned by the SELECT into local variables.
Read the varint and return the number of bytes read.
Read the wal-index header.
Read the whole section.
Read what's available and proceed disregarding whether len could be exhausted or not.
Read, deserialize and return the structure record.
Read-only page is acceptable
Read-only system table
Read/write cursors for all indices of pTab must be open as cursor number iIdxCur+i for the i-th index.  3.
Readdir just returns the current string pointer and bumps the string pointer to the next entry.
Reader to advance to next docid
Reader whose cursor is to be moved
Readers holding WAL_READ_LOCK(0) always ignore the entire WAL and read all content directly from the database.
Reading from a file or a string.
Reading should be disabled if buffering is enabled without also enabling NPY_ITER_DELAY_BUFALLOC.
Reading the hostname and its optional non-default port number
Readonly, so assigned also per thread.
Readr data from here after Rewind()
Readr data from the file.
Reads +length+ bytes from the SSL connection.
Reads a char from 'fd', waiting at most 'timeout' milliseconds.
Reads a complete utf-8 character and returns the unicode value, or -1 on error.
Reads a dependency graph from a file.
Reads all the pending commands and executes them
Reads the character into TMP1, keeps STR_PTR.
Reads the character type into TMP1, updates STR_PTR.
Reads the currently executed file (a phar) and registers its manifest.
Reads the precise character type of a character into TMP1, if the character is less than 128.
Readwrite would not allow broadcasting correctly, but such an operand always has the full size anyway.
Real *, variable to be checked.
Real 2x2 system  (w is real) Find the largest element in C
Real a equals complex a+0i mathematically.
Real drivers must be substituted using sqlite3_config() before SQLite will operate.
Real eigenvalues: reduce to upper triangular form
Real left eigenvector.
Real offset is memaddress from the original headers + difference of string found in the lowercase headrs + 3 characters to jump over the cc:
Real offset is memaddress from the original headers + difference of string found in the lowercase headrs + 4 characters to jump over the bcc:
Real offset is memaddress from the original headers + difference of string found in the lowercase headrs + 5 characters to jump over the from:
Real right eigenvector
Real roots: use Wilkinson's shift twice
Real value of left operand
Real value of right operand
Real value used when MEM_Real is set in flags
Real values: An 8-byte big-endian IEEE 754-2008 real value.
Realloc memory for smaller number of elements
Realloc the data so that don't keep extra memory tied up (assuming realloc is reasonably good about reusing space...)
Reallocate a dynamic memory block.
Reallocate space if needed
Reallocate string and return it
Really a cast to BLOB
Really complex instruction form for branches.
Really this is more of a scheduler yield than an actual delay.
Really, this is a generic string accumulator that can be and is used to create strings other than JSON.
Reapply the year 2038 year correction
Rearrange the actual queue into correct order
Reasons why pSnapshot might no longer be valid:  (1)  The WAL file has been reset since the snapshot was taken.
Reassembly the compound query so that it will be freed correctly by the calling function
Reassign page numbers so that the new pages are in ascending order.
Reattach the ORDER BY clause to the query.
Rebalance the expression.
Rebuild cookies, env vars etc.
Rebuild it from scratch instead.
Rebuild plain (optimized) op_array from CFG
Rebuild the expanded load path.
Recalculate checksums within the wal file if required.
Recast strcpy to handle unsigned chars used below.
Recently parsed phrase
Reclaim all malloced memory.
Reclaim all memory allocated by a JsonParse object.
Reclaim all memory of a Stat4Accum structure.
Reclaim all memory used by the VDBE
Reclaim all memory used.
Reclaim garbage, defined as all alloca'd storage that was allocated from deeper in the stack than currently.
Reclaim garbage, defined as all alloca()ed storage that was allocated from deeper in the stack than currently.
Reclaim memory used by a Stat4Sample
Reclaim the memory used by an index
Recode the buffer into the raw buffer.
Recognize flags: -, #, BLANK, +
Recommended number of samples for sqlite_stat4
Recompute all indices of all tables in all databases where the indices use the collating sequence pColl.
Recompute all indices of pTab that use the collating sequence pColl.
Recompute the master chunk as the largest free chunk.
Recomputes vertex set for each point.
Record a pointer to the logger function and its first argument.
Record best loops here, if not NULL
Record changes in the file format
Record consists of PK fields only
Record in the column cache that a particular column from a particular table is stored in a particular register.
Record pRec is equal to sample i
Record that it changed in the external options
Record that this module has started
Record the actual number of property lists.
Record the appropriate Givens rotation
Record the fact that an affinity change has occurred on iCount registers starting with iStart.
Record the fact that the schema cookie will need to be verified for database iDb.
Record the fact that we want to lock a table at run-time.
Record the final value.
Record the instruction used to terminate the loop.
Record the last eigenvalue.
Record the last singular value.
Record the number of outstanding lookaside allocations in schema Tables prior to doing any free() operations.
Record the number of times that we do a normal fsync() and  FULLSYNC.
Record the set of tables that satisfy case 2.
Record the set of tables that satisfy case 3.
Record the trait from which this alias was resolved.
Record this key/value pair.
Record to read varints from
Record where we ended
Records are always returned in ascending order of (name, path).
Recover the wal-index by reading the write-ahead log file.
Recovery action to do in case of an error
Recurse captures then.
Recurse to all candidates
Recurse, adding values as we go.
Recursion either matches the current regex, or some subexpression.
Recursion group number
Recursion or subroutine
Recursive brace globbing helper.
Recursive call for each sequence item
Recursive calls are specified by the macro RMATCH and RRETURN is used to return.
Recursive calls into the memory subsystem are allowed, but no new callbacks will be issued.
Recursive calls to this routine from thread X return immediately without blocking.
Recursive calls to this routine should not block, of course.
Recursive case, first check the sequence contains only one type
Recursive control verb management chain.
Recursive divide and conquer multiply algorithm.
Recursive function, which scans prefix literals.
Recursive invocation is disallowed if (a) the sub-program is really a trigger, not a foreign key action, and (b) the flag to enable recursive triggers is clear.
Recursive part w/o aColCache
Recursive representation
Recursive vs non-recursive multiply crossover ranges.
Recursively call checkTreePage on all children.
Recursively call the layout algorithm for this child with the updated main size.
Recursively check nested list()s
Recursively delete a Trigger structure
Recursively delete an expression tree.
Recursively descend until a primitive value is found.
Recursively determines the metadata for an NPY_DATETIME dtype.
Recursively determines the metadata for an NPY_TIMEDELTA dtype.
Recursively examines the object to determine an appropriate dtype to use for converting to an ndarray.
Recursively resolve names in all subqueries
Recursively walk the expressions of a SELECT statement and generate a bitmask indicating which tables are used in that expression tree.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1.
Reduce angle to within +180..+180 degrees
Reduce angle to within 0..360 degrees
Reduce columns i:i+nb-1 to tridiagonal form and form the matrix W which is needed to update the unreduced part of the matrix
Reduce fieldlen by 1 if we have char data.
Reduce first NB columns of lower triangle
Reduce its size to account for the portion used by the new allocation.
Reduce last NB columns of upper triangle
Reduce max_ndim_m1 to just items which match
Reduce rows and columns i:i+ib-1 to bidiagonal form and return the matrices X and Y which are needed to update the unreduced part of the matrix
Reduce rows and columns i:i+nb-1 to bidiagonal form and return the matrices X and Y which are needed to update the unreduced part of the matrix
Reduce the extra dimension of `temp` using `op`
Reduce the lower triangle of A
Reduce the required data amount to what is available, otherwise read() will block.
Reduce the upper triangle of A
Reduce the upper triangle of A.
Reduce to lower bidiagonal form
Reduce to upper Hessenberg form (CWorkspace: need 2*N, prefer N+N*NB) (RWorkspace: none)
Reduce to upper Hessenberg form (Workspace: need 3*N, prefer 2*N+N*NB)
Reduce to upper bidiagonal form
Reduction in fragmentation
Reduction in outer reduce loop
Reduction operands may be buffered with a different stride, so we must pass NPY_MAX_INTP to the transfer function factory.
Reductions are buffered with two levels of looping, to avoid frequent copying to the buffers.
Ref: ftp://ftp.ora.com/pub/examples/nutshell/ujip/doc/japan.inf-032092.sjs
Ref: http://www.iana.org/assignments/character-sets/character-sets.xhtml https://msdn.microsoft.com/en-us/goglobal/bb964653 http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/
Refcount for pOuterNC and outer contexts
Refer to ICU documentation for the differences between the two.
Refer to code and comments in where.c for details.
Refer to comments in the unixClose() function and the lengthy comment describing "Posix Advisory Locking" at the start of this file for  further details.
Refer to the comment describing the zipvfs_create_vfs() API below for details on using RBU with zipvfs.
Refer to the comments below and the header comment attached to  the implementation of each function in log.c for further details.
Refer to the delta_create() documentation above for a description of the delta file format.
Refer to the stacks through separate pointers, to allow yyoverflow to reallocate them elsewhere.
Reference counted destructor function
Reference or recursion
Reference to an unidentified subpattern.
Reference:  Meeus page 61
References to objects are treated as if the reference didn't exist
References to the page pPg remain valid.
References: "Mathematical Cryptology for Computer Scientists and Mathematicians," by Wayne Patterson, 1987, ISBN 0-8476-7438-X.
Referrals are not handled automatically.
Refine the salt first
Reflect pattern for debugging output
ReflectionType::__toString() is deprecated, but we currently do not mark it as such due to bad interaction with the PHPUnit error handler and exceptions in __toString().
Refs more than one table
Refuse to draw if no style is set.
Refuse to fill to a non-solid border
Refuse to load if this wasn't a threasafe library loaded
Reg array containing OLD.* and NEW.* values
Reg with value of this column.
Reg(P1) is updated with the number of errors remaining.
Regard empty password as no password - remove user record.
Regardless of mxPage, return the current maximum page count.
Regardless of the current state, a temp-file connection always behaves as if it has an exclusive lock on the database file.
Regardless of the journal mode, this transaction always uses a rollback journal.
Regardless of the strategy selected, FTS can deliver rows in rowid (or docid) order.
Regardless of the value of createFlag, the cache is searched for a  copy of the requested page.
Regardless of the value of iFrom, the iterator is always advanced at least once.
Regardless of the value of mxPage, return the maximum page count.
Regardless of whether or not an error is returned, it is the responsibility of the caller to call sqlite3_free() on the output array to free it.
Regardless of whether or not shared-cache mode is enabled by default, use a private cache.
Regardless of whether or not the call to xUnlock() succeeds, set the Pager.eLock variable to match the (attempted) new lock.
Regardless of whether or not the jump is taken, increment the the sequence value.
Regardless of whether this is a RELEASE or ROLLBACK, destroy all  savepoints nested inside of the savepoint being operated on.
Regardless, this function iterates from the end of the doclist to the beginning.
Register 'BreakIterator' class
Register 'Collator' PHP class
Register 'DateFormat' PHP class
Register 'IntlCalendar' PHP class
Register 'IntlException' PHP class
Register 'IntlIterator' PHP class
Register 'IntlPartsIterator' class
Register 'IntlTimeZone' PHP class
Register 'Locale' PHP class
Register 'Normalizer' PHP class
Register 'NumberFormatter' PHP class
Register 'ResourceBundle' PHP class
Register 'Spoofchecker' PHP class
Register 'Transliterator' PHP class
Register B67 contains the address of the end of the current stack segment.
Register P3 contains the address  of a memory cell in this (the parent) VM that is used to allocate the  memory required by the sub-vdbe at runtime.
Register P3 is as the accumulator.
Register P3 is the accumulator.
Register P3 must not be one of the function inputs.
Register P3+1 stores the argc parameter to be passed to the xFilter method.
Register PHP core ini entries
Register SNMP Class properties
Register SNMPException class
Register SQL function on this connection
Register SQLite 3 Class
Register SQLite 3 Prepared Statement Class
Register SQLite 3 Result Class
Register SoapClient class
Register SoapFault class
Register SoapParam class
Register SoapServer class
Register SoapVar class
Register Transliterator constants
Register Zend ini entries
Register __COMPILER_HALT_OFFSET__ constant
Register a 2nd-generation geometry callback named zScore that can be  used as part of an R-Tree geometry query as follows:  SELECT ...
Register a VFS with the system.
Register a callback function to be called for tab-completion.
Register a callback function to be called when a character is pressed
Register a callback to be invoked each time a row is updated, inserted or deleted using this database connection.
Register a callback to be invoked each time a transaction is rolled back by this database connection.
Register a callback to be invoked each time a transaction is written into the write-ahead-log by this database connection.
Register a collation sequence factory callback with the database handle db.
Register a function to be invoked when a transaction commits.
Register a geometry callback named zGeom that can be used as part of an R-Tree geometry query as follows:  SELECT ...
Register a new 2nd-generation geometry function for use with the r-tree MATCH operator.
Register a new auxiliary function with global context pGlobal.
Register a new collation sequence with the database handle db.
Register a new geometry function for use with the r-tree MATCH operator.
Register a new tokenizer.
Register a profile function.
Register a statically linked extension that is automatically loaded by every new database connection.
Register a trace callback using the version-2 interface.
Register a trace function.
Register all built-in functions, but do not attempt to read the database schema yet.
Register all built-in tokenizers with FTS5.
Register an unlock-notify callback.
Register any built-in FTS5 module before loading the automatic extensions.
Register built-in functions used to help implement ALTER TABLE
Register built-in functions used to help read ANALYZE data.
Register constant for options and errors
Register containing index name
Register containing table name
Register destination.
Register for RowSet object
Register for column value
Register for ephem table rowid
Register for new.* record
Register for new.* values
Register for rowset of rows to delete
Register holding Current table
Register holding NULL status.
Register holding ROWID value
Register holding an index key
Register holding an index record
Register holding assembled index record
Register holding assembled record for the table
Register holding assemblied index record
Register holding assemblied record for the table
Register holding block-output return address
Register holding co-routine entry-point
Register holding counter
Register holding data to be sorted
Register holding largest rowid for AUTOINCREMENT
Register holding max rowid
Register holding maximum rowid
Register holding operands
Register holding previous generated key
Register holding pseudotable content.
Register holding results
Register holding return address of addrFillSub
Register holding root page number for new objects
Register holding rowid
Register holding rowid of CREATE TABLE entry
Register holding the AUTOINCREMENT counter
Register holding the offset counter
Register hooks to call when sqlite3BeginBenignMalloc() and sqlite3EndBenignMalloc() are called, respectively.
Register iOffset+1 is initialized to LIMIT+OFFSET.
Register iRowid contains a rowid value just read from cursor iIdxCur, open on index pIdx.
Register in which Expr value is cached
Register in which to assemble record
Register keeping track of errors remaining
Register mangled variable
Register namespaces in the node
Register numbers are always positive
Register pRt is used to store the memory required to save the state of the current program, and the memory required at runtime to execute the trigger program.
Register storing resulting
Register that is true if RHS contains NULL values
Register that records whether NULLs exist in RHS
Register the ICU extension functions with database db.
Register the built-in LIKE and GLOB functions.
Register the derived class
Register the fts3aux module with database connection db.
Register the fts3tok module with database connection db.
Register the query expression parser test function fts3_exprtest()  with database connection db.
Register the r-tree module with database handle db.
Register this backup object with the associated source pager for callbacks when pages are changed or the cache invalidated.
Register to allocate runtime space
Register to copy from
Register to hold Stat4Accum object
Register to hold key for checking the FK
Register to hold name of table
Register to hold packed record
Register to hold temp table ROWID
Register used by each index.  0 for unused indices
Register used with OP_Gosub
Register(s) holding the LHS values
Registered as a destructor function with sqlite3_set_auxdata().
Registered sqlite3_vfs objects are kept on a linked list formed by the pNext pointer.
Registered using sqlite3_preupdate_hook()
Registers P1..P1+P3-1 are left holding a NULL.
Registers P3+2..P3+1+argc are the argc additional parameters which are passed to xFilter as argv.
Registers for holding the start boundary
Registers holding data and rowid
Registers holding results of a co-routine
Registers to allocate
Registers to hold a row from pTab
Registers used by LIMIT and OFFSET
Registration / unregistration
Regs for sorter record
Regular CHUNKs reserve a single page at start for special purpose.
Regular case with no overflow or underflow
Reinitialize page pTo so that the contents of the MemPage structure match the new data.
Reinstall the LIKE and GLOB functions.
Relabel R/G/B as components 0/1/2, respecting the RGB ordering defined in jmorecfg.h.
Relative accuracy desired
Relative number is not currently supported.
Relative paths are referenced from the current working directory of the process unless +dir_string+ is given, in which case it will be used as the starting point.
Relative to first byte of structure.
Release a lock acquired by winceMutexAcquire()
Release a page reference.
Release a reference to a node.
Release a reference to an Fts5Structure object returned by an earlier  call to fts5StructureRead() or fts5StructureDecode().
Release a reference to data record returned by an earlier call to fts5DataRead().
Release a reference to page pPg.
Release a thread shield, and return true if it has waiting threads.
Release a unixInodeInfo structure previously allocated by findInodeInfo().
Release all dynamic resources held by node-reader object *p.
Release all memory held by the SegmentWriter object passed as the  first argument.
Release all resources associated with an sqlite3_backup* handle.
Release all the table locks (locks obtained via calls to the setSharedCacheTableLock() procedure) held by Btree object p.
Release allocated heap frames         *
Release an SQLite statement handle obtained via an earlier call to sqlite3Fts5StorageStmt().
Release an array of N Mem elements
Release and destroy a thread shield, and return true if it has waiting threads.
Release any memory held by the Mem.
Release any memory resources held by the Mem.
Release memory back to the heap
Release memory from the SQLITE_CONFIG_SCRATCH allocation
Release memory used for the compiled pattern
Release our references to the ops and dtypes
Release resources associated with connection
Release the STATIC_MASTER mutex.
Release the array of temp registers
Release the checkpointer and writer locks
Release the connection to underlying pool.
Release the lock using an OS call only when all threads in this same process have released the lock.
Release the memory used for the compiled pattern
Release the page reference.
Release the provider handle.
Release the reader lock held while backfilling
Release the reference in dst
Release the reference in src
Release the reference to the new page.
Release the reference to the root node.
Release the references we got to the ops and dtypes
Release the semaphore if it has been acquired but not released.
Release the session (stubs are filtered out at the beginning)
Release the shared CKPT lock obtained above.
Release what we had, if we had
Release/Acquire the system-level lock
Releases a lock for SHM access
Releases the cgo traceback context.
Releasing a pending lock
Releasing a reader lock or an exclusive lock
Releasing a reserved lock
Reload array and position -- both may have changed
Reload the schema of the modified table.
Reload the table, index and permanent trigger schemas.
Relocate STACK from its old location to the new one.
Remap the PNG palette to put the entries with interesting alpha channel values first.
Remap to the palette available in the destination image.
Remapped operand shape
Remember file position of image data.
Remember how much was scanned to save rescanning
Remember if locale was changed
Remember new callback
Remember reference counters before calling destructors
Remember rowid changes made by xSFunc
Remember the SQL string for a prepared statement.
Remember the current column cache context.
Remember the current position, and return the MATCH_KETRPOS.
Remember the earliest consulted character for partial matching.
Remember the rowid of every item to be updated.
Remember to change this if the number of directives change
Remember to efree it when done with it.
Remember to free the pointer seq.ptr when done using PyDimMem_FREE(seq.ptr)**
Remember to update PHP_MINFO if updated
Remember where this code item starts so we can pick up the length next time round.
Remember where we started
Remember whether this is a variable length repeat
Remember, it's a colour circle
Remember, preserve vowels at the beginning
Remember, zeros on the end of num2 are wasted effort for dividing.
Remote end closed the connection
Remote socket address
Remote target in proxy mode
Remove PCRE cache entries with inconsistent keys
Remove a FD from the fd set
Remove a FD from the kevent queue
Remove a directory within a phar archive
Remove a potential simple key at the current flow level.
Remove a row from the FTS table.
Remove a single entry from the hash table given a pointer to that element and a hash on the element's key.
Remove a trigger from the hash tables of the sqlite* pointer.
Remove all data from the FTS3 table.
Remove all entries from a hash table.
Remove all records associated with segment iSegid.
Remove all redundant columns from the PRIMARY KEY.
Remove all terms from the full-text index.
Remove all terms smaller than zTerm/nTerm from segment iIdx in absolute  level iAbsLevel.
Remove all the core output dimensions from the iterator
Remove all trailing directory separator characters from the end of the path, and then append single directory separator character.
Remove all when this is the only rewrite var
Remove already sent session ID cookie.
Remove any and all aliases between the result set and the GROUP BY clause.
Remove any earlier holidays
Remove any entries of the sqlite_sequence table associated with the table being dropped.
Remove any later holidays
Remove any potential simple keys.
Remove any trailing dot
Remove any trailing slashes
Remove axes with dimension 1 from the old array.
Remove caseless flag for non-caseable chars
Remove cells from the start and end of the page
Remove connection db from the blocked connections list.
Remove connection p from the blocked connections list.
Remove connection p from the set of connections associated with pShmNode
Remove either the OP_OpenWrite or OpenRead.
Remove entries from the sqlite_statN tables (for N in (1,2,3)) after a DROP INDEX or DROP TABLE command.
Remove escaping backslashes
Remove everything after the first null
Remove for recursive calls
Remove for time being, it is declared in __ufunc_api.h
Remove from the column cache any entries that were added since the the previous sqlite3ExprCachePush operation.
Remove harmful bits from the flags parameter  The SQLITE_OPEN_NOMUTEX and SQLITE_OPEN_FULLMUTEX flags were dealt with in the previous code block.
Remove header or other part before conversion.
Remove if there's nothing to do at request end
Remove if there's nothing to do at request start
Remove leading/training white spaces on search_string
Remove multiple whitespace from the separator, and add a space to the beginning and end.
Remove newlines and spaces from start and end php_trim will estrndup()
Remove newlines and spaces from start and end.
Remove node pNode from the node hash table.
Remove obsolete potential simple keys.
Remove pPage from dirty list
Remove pParent from the original tree.
Remove page from cache
Remove page pPage from the list of dirty pages.
Remove result from a UNION index
Remove terms smaller than this
Remove the FK from the fkeyHash hash table.
Remove the cell from the node.
Remove the cell with index iCell from node pNode.
Remove the cursor from the Fts5Global.pCsr list
Remove the deleted foreign keys from the Schema.fkeyHash hash table.
Remove the entire input segment.
Remove the entry in the parent cell.
Remove the following function when you have successfully modified config.m4 so that your module can be compiled into PHP, it exists only for testing purposes.
Remove the hash entry if present
Remove the i-th cell from pPage.
Remove the inner loop axis from the outer iterator
Remove the key from the stack.
Remove the last opcode inserted
Remove the memory data structures associated with the given Table.
Remove the multi-index and inner loop
Remove the next token from the queue (must be called after PEEK_TOKEN).
Remove the node from the in-memory hash table and link it into the Rtree.pDeleted list.
Remove the page from the files free-list.
Remove the page supplied as an argument from the hash table  (PCache1.apHash structure) that it is currently stored in.
Remove the redundant segments from the input level
Remove the referenced directory.
Remove the remnants of that writers uncommitted transaction from  the hash-table before writing any new entries.
Remove the search point with the lowest current score.
Remove the shared lock before trying the range.
Remove the simple key.
Remove the slot from the free-list.
Remove the table entry from SQLite's internal schema and modify the schema cookie.
Remove the trailing ","
Remove the unserialised properties, since we now have the elements within the spl_fixedarray_object structure.
Remove the xxx_node entry.
Remove the xxx_parent entry.
Remove thumb mode flag.
Remove trailing newline
Remove trailing white space and nulls chars from unpacked data
Remove trailing zeros and the "." if no digits follow the "."
Remove unconsumed buckets from the brigade
Remove values captured in destructors
Remove xInit from the set of routines that is invoked for each new database connection, if it is currently on the list.
RemoveAxis also resets the iterator
RemoveAxis invalidates cached values
RemoveMultiIndex also resets the iterator
RemoveMultiIndex invalidates cached values
Removed -h because the user already knows that option.
Removed because this can not be safely done, e.g. in this situation: Object 1 creates object 2 Object 3 holds reference to object 2.
Removes a file or directory, using File.unlink if +self+ is a file, or Dir.unlink as necessary.
Removes a key from the hash table.
Removes an entry, either by actually removing it or by marking it.
Removes the char at 'pos'.
Removing a return type is not valid.
Removing the special case will cause segfaults, though it is unclear what exactly happens.
Removing user-defined functions or collating sequences, or changing an authorization function are the types of things that make prepared statements obsolete.
Rename an fts3 table.
Rename an fts5 table.
Rename the new to the old.
Renamed to php_pgsql_unescape_bytea()
Render a string given by "fmt" into the StrAccum object.
Reparse everything to update our internal data structures
Repeat  until the busy callback returns false or until the attempt to  obtain the lock succeeds.
Repeat the above with the next record to be updated, until all record selected by the WHERE clause have been updated.
Repeat while the next character is digit.
Repeated character flags.
Repeatedly run the collected hash value through SHA256 to burn CPU cycles.
Repeatedly run the collected hash value through SHA512 to burn CPU cycles.
Repeatedly select and split the largest box until we have enough boxes
Repeating a DEFINE group is pointless, but Perl allows the syntax, so we just ignore the repeat.
Replace Isalnum() return value with this
Replace all *_' with space.
Replace all the data types
Replace any previously installed collation sequence factory.
Replace every reference to a column in table number iTable with a copy of the iColumn-th entry in pEList.
Replace exception handling so the catchable fatal error that is thrown when a class without __toString is converted to string is converted into an exception.
Replace just the strides which were non-zero, and compute the base data address.
Replace nkf's getchar/putchar for variable modification
Replace pTo with the candidate.
Replace src_data/src_dtype
Replace the NULL data types
Replace the backslashes from the filename and lowercase it to derive a mutex name.
Replace the current "averages" record with the contents of the buffer  supplied as the second argument.
Replace the last part of the path to long name.
Replace the last recently used
Replace the trailing path to long name
Replace with JsonNode.iVal
Replace with NULL if there's nothing to do at request end
Replace with NULL if there's nothing to do at request start
Replace with a new descr which is in native byte order
Replacement value when JNODE_REPLACE
Replaces single character iterations with their possessive alternatives if appropriate.
Replaces the AXISDATA for the iop'th operand, broadcasting the dimensions as necessary.
Replicating strnlen with memchr, because Mac OS X lacks it
Report about uncaught exception in case of fatal errors
Report an error if any column is not found.
Report an error if the ID list contains a COLLATE clause or an ASC or DESC keyword, except ignore the error while parsing a legacy schema.
Report an error that an expression is not valid for a CHECK constraint.
Report an error that an expression is not valid for a partial index WHERE clause.
Report an out-of-memory (OOM) condition
Report errors here, if not NULL
Report failure to filter_alloc
Report malloc errors here
Report malloc errors to this connection
Report the allocated size of a prior return from xMalloc() or xRealloc().
Report the current page size and number of reserved bytes back to the codec.
Report the current state of file logs for all databases
Report the old value.
Report the shape of the original array if it exists
Report the wrong number of arguments for json_insert(), json_replace() or json_set().
Report two lines per PC returned by traceback, to test more handling.
Reporting only seconds, ignore milli seconds
Reports from the internet are that performance is always better if FILE_FLAG_RANDOM_ACCESS is used.
Reposition cursor P1 so that  it points to the largest entry that  is less than the key value.
Reposition cursor P1 so that  it points to the smallest entry that  is greater than or equal to the key value.
Reposition cursor P1 so that  it points to the smallest entry that  is greater than the key value.
Reposition cursor P1 so that it points to the largest entry that  is less than or equal to the key value.
Reprepare only called for prepare_v2() statements
Represents an unknown data type as guessed by deflate.
Represents binary data as guessed by deflate.
Represents text data as guessed by deflate.
Represents the rounding mode for floating point addition.
Reqchar followed non-literal item
Request a pointer to the required page from the VFS
Request alpha blending.
Request content, such as for POST requests
Request is out of range.
Request is valid, handle it
Request permission to read the parent key columns.
Request seems valid, but HTTP version is strange
Request the current charset, or it will be reset to the system one.
Requested snippet length (in tokens)
Requesting the lock proxy does not immediately take the conch, it is only taken when the first request to lock database file is made.
Require a write-lock on the table to perform this operation
Required collating sequence, if not NULL
Required for backward compatibility
Required length of string when converting from unsigned integer type.
Required lock type (READ_LOCK or WRITE_LOCK)
Required mapping size
Required space after adding zTerm
Required table locks for shared-cache mode
Required to catch very short invalid data.
Requires rather complex checks.
Requires two instruction.
Rerun the compilation of a statement after a schema change.
Reserve all memory space except the "huge" `global_size_b`.
Reserved for Cray Research.
Reserved for future use
Reserved space for locks
Reset / free active_ini_sectin global
Reset NpyIter data pointers which will trigger a buffer copy
Reset a JsonEachCursor back to its original state.
Reset a sorting cursor back to its original empty state.
Reset active ini section
Reset all of our flags
Reset an StrAccum string.
Reset and close the cache object
Reset and ready to run again
Reset any potential simple key on the current flow level.
Reset any potential simple keys on the current flow level.
Reset capture count for each branch
Reset flag as XML_SAX2_MAGIC is needed for xmlCreatePushParserCtxt so must be set in the handlers
Reset for start of next match attempt
Reset head and drop saved frame.
Reset high-water mark if true
Reset in-process realpath cache
Reset it to the correct value for this process.
Reset label length counter
Reset lineno for final opcodes and errors
Reset max_execution_time
Reset max_execution_time (no longer executing php code after response sent)
Reset request info attributes.
Reset schema after an error if positive
Reset stream's internal read buffer since the filter is "holding" it.
Reset string length, but don't free the reserved buffer
Reset the PRNG back to its uninitialized state.
Reset the SQL statement passed as the first argument.
Reset the aggregate accumulator.
Reset the automatic extension loading mechanism.
Reset the bracket count and the names_found field.
Reset the checkpoint-header.
Reset the code to MATCH_NOMATCH for subsequent checking.
Reset the cursor to the same state as rtreeOpen() leaves it in.
Reset the indentation level.
Reset the iterator dimensions and strides of each iterator object -- using 0 valued strides for broadcasting Need to check for overflow
Reset the iterator with the base pointers from the wrapped outputs
Reset the map iterator to the beginning
Reset the outer iterator
Reset the return code so as not to report a checkpoint failure just because there are active readers.
Reset the scan pointer (index 0) and clear matching data.
Reset the scanner for scanning the new file
Reset the schema for the database at index iDb.
Reset the simple key on the next level.
Reset the start of match point
Reset the tokenizer cursor passed as the only argument.
Reset the weekmask to the default
Reset the working variable associated with each extraction.
Reset their types and add them to the type inference worklist
Reset to an identity perm
Reset to previous allowed_classes in case this is a nested call
Reset to top of main for loop to allow for code to do necessary wrapping/encoding.
Reseting/initializing
Resets and initializes the stream.
Resets the process of reading the /etc/group file, so that the next call to ::getgrent will return the first entry again.
Resets the process of reading the /etc/passwd file, so that the next call to ::getpwent will return the first entry again.
Resize an Index object to hold N columns total.
Resize an allocation previously obtained from sqlite3MemMalloc().
Resize the Vdbe.aOp array so that it is at least nOp elements larger  than its current size.
Resize the Vdbe.aOp array so that it is at least one op larger than  it was.
Resize the array if necessary.
Resize the block of memory pointed to by p to n bytes.
Resize the hash table by doubling the number of slots.
Resize the hash table so that it cantains "new_size" buckets.
Resize the range list if necessary.
Resize the string to include the head.
Resize the unicode result
Resolve all names for all expression in an expression list.
Resolve all names in the ORDER BY term expression
Resolve an expression that was part of an ATTACH or DETACH statement.
Resolve and cache class name immediately to resolve ambiguity and avoid order-dependency on const_tbl
Resolve classes for all precedence operations.
Resolve function names
Resolve label "x" to be the address of the next instruction to be inserted.
Resolve names in all CHECK constraint expressions.
Resolve names in table-valued-function arguments
Resolve names in the SELECT statement p and all of its descendants.
Resolve names in the SELECT statement p and all of its descendents.
Resolve names in the result set.
Resolve open_basedir to resolved_basedir
Resolve path relatively to state and put the real path into state
Resolve symbolic names into TK_COLUMN operators for the current node in the expression tree.
Resolve the GROUP BY clause.
Resolve the ORDER BY on a compound SELECT after all terms of the compound have been resolved.
Resolve the column names in all the expressions in the WHERE clause.
Resolve the column names in all the expressions of the of the UPDATE statement.
Resolve the column names in the WHERE clause.
Resolve the expressions in the LIMIT and OFFSET clauses.
Resolve the label by setting the P2 value to its correct non-zero value.
Resolve the references in the WHERE clause.
Resolve the servers IP
Resolve ties by choosing the entry with the smallest area.
Resource tags is a big part of what we created, but NetWare doesn't ask us to free those.
ResourceBundle functions
Response for one-way opearation
Response has valid confirmations
Restart interation for expression pExpr so that the next call to fts3EvalNext() visits the first row.
Restart the backup process.
Restore Content-Type Header
Restore Z, VF, and VL.
Restore clip if required
Restore executor globals
Restore frozen call-stack
Restore fudged end_subject
Restore handler in case of error on Windows Not sure if this applicable on Win but just in case.
Restore if not zero length.
Restore original chunk size now that we're done with headers
Restore previous private_data_ptr
Restore saved collator.
Restore table -- usually faster then memset'ing the table on every invocation
Restore the R registers that need to be reserved.
Restore the S registers.
Restore the clients cache of the wal-index header to the state it was in before the client began writing to the database.
Restore the cursor if need be.
Restore the cursor to the position it was in (or as close to as possible) when saveCursorPosition() was called.
Restore the return address.
Restore the state of the PRNG to the last state saved using PRNG_SAVE.
Restoring previous options
Restrict matches to these columns
Restrict matches to this column
Restriction  (4) has since been expanded to exclude all DISTINCT subqueries.
Restriction 17: If the sub-query is a compound SELECT, then it must use only the UNION ALL operator.
Restrictions (22) and (24)
Restrictions on range of iteration
Restructure the arrays based on sorted indirect - this is mostly taken from zend_hash_sort() function.
Result code form Lock/UnlockFileEx()
Result code form fcntl()
Result code from subfunctions
Result code from subroutine call
Result code from this function
Result code of a subroutine
Result code stored here
Result code to return
Result codes from subroutines
Result from sqlite3Reprepare()
Result from sqlite3Step()
Result has at least n significant digits.
Result inherits from NPY_VOID.
Result is -1 if the field is invalid (all blank, or non-octal).
Result of a Windows lock call
Result of a successful parse
Result of an sqlite3BtreeLast()
Result of comparison operation
Result of custom function
Result of last OP_Compare operation
Result of last comparison
Result of previous sqlite3BtreeMoveto()
Result of prior MovetoUnpacked() call
Result of prior seek or 0 if no USESEEKRESULT flag
Result of query pNextIdx
Result of replacement
Result of special query
Result of sqlite3Strlen30(zTab)
Result of sqlite3_reset()
Result of strlen(zDb)
Result of strlen(zFts3)
Result of the comparison of pIn1 against pIn3
Result pgno must be greater than iMin
Result returned by the thread
Result returned from from sqlite3_get_table()
Result returned from sqlite3_get_table()
Result set can follow UPSERT statement, check server_status
Result set expression list
Result set n + 1 is about the procedure call itself.
Result set of the query
Result to set *pbRes to
Results are not equal
Results of parsing argc/argv
Results of stat() call
Results stored in register inReg
Results: FAILURE or SUCCESS.
Results: Returns non-zero if the character matches the given set.
Results: Returns the next format position.
Results: chPtr is filled with the Tcl_UniChar, and the return value is the number of bytes from the UTF-8 string that were consumed.
Retain the highest bracket number, in case resetting was used.
Retreive the text stored in column iCol.
Retries and formats text from the phpdbg help text table
Retrieve a copy of the file information on a single file within a phar, or null.
Retrieve a page from the pager cache.
Retrieve a pointer to a static mutex or allocate a new dynamic one.
Retrieve information about the current candidate snippet of snippet  iterator pIter.
Retrieve matchinfo() data.
Retrieve the current malloc() implementation
Retrieve the current mutex implementation
Retrieve the next token from the tokenizer cursor pCursor.
Retrieve the shape and strides from the axisdata
Retrieve unencoded data that is found before encoded data
Retrieves a weakly referenced object with the given key
Retry flock() calls that fail with EINTR
Retry ftruncate() calls that fail due to EINTR
Retry ftruncate() calls that fail due to EINTR  All calls to ftruncate() within this file should be made through this wrapper.
Retry with substituting invalid chars on fail.
Return  SQLITE_OK if successful, or an SQLite error code (i.e. SQLITE_NOMEM) if  an error occurs.
Return  SQLITE_OK if successful, or an SQLite error code if an error occurs.
Return "c:" on Win32 for dirname("c:").
Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.
Return -1 if an error occurs.
Return -1 if no such database exists.
Return -1 if not found.
Return -1 if the column is not contained in the table.
Return -1 on a memory allocation error, 0 on success, or non-zero for an error.
Return -1 on error, or month number
Return -ve if pLeft is smaller than pRight, 0 if they are equal or +ve if pRight is smaller than pLeft.
Return -ve if zLhs is smaller than zRhs, 0 if it is equal, or +ve if it is greater.
Return 0 for IN operators or if an error occurs.
Return 0 for OFF, 1 for ON or NORMAL and 2 for FULL.
Return 0 for OFF, 1 for ON or NORMAL, 2 for FULL, and 3 for EXTRA.
Return 0 for success, non-zero for failure.
Return 0 if *YYMSG was successfully written.
Return 0 if iCursor is not in the set.
Return 0 if index file has been found, -1 if not found.
Return 0 if it involves variables or function calls or terms from an ON or USING clause.
Return 0 if it is not open, or non-zero (but not 1) if it is.
Return 0 if new item added, error code if memory couldn't be allocated.
Return 0 if no changes are made and non-zero if one or more WHERE clause terms are duplicated into the subquery.
Return 0 if not found.
Return 0 if successfull
Return 0 if the RowSet is already empty.
Return 0 if the checksum is bad (i.e., probably not a tar archive), 1 for old UNIX tar file, 2 for Unix Std (POSIX) tar file, 3 for GNU tar file.
Return 0 if the input is not a well-formed JSON array.
Return 0 if the path itself is a directory, or -1 on error, 1 if OK.
Return 0 if the two expressions are completely identical.
Return 0 if there are no subqueries.
Return 0 if they are identical and  non-zero if they differ in any way.
Return 0 if xInit was not on the list.
Return 0 on success and 1 if there are any errors.
Return 0 on success and 1 if there is a problem.
Return 0 on success and an error code if anything goes wrong.
Return 0 on success or non-zero if there are any errors.
Return 0 on success, -1 on failure.
Return 0 to continue the search down the tree or 2 to abort the tree walk.
Return 1 for an empty or  unrecognized string argument.
Return 1 for file backed temporary databases, 2 for the Red-Black tree in memory database and 0 to use the compile-time default.
Return 1 if 'field1' can be cast to 'field2' according to the rule 'casting', 0 if not.
Return 1 if *YYMSG is not large enough to hold the message.
Return 1 if any of these are found.
Return 1 if authorized.
Return 1 if database is read-only or 0 if read/write.
Return 1 if it does and 0 if not.
Return 1 if request is authorised, 0 otherwise.
Return 1 if the contents are the same, 0 if not.
Return 1 if the expression contains a subquery of some kind.
Return 1 if the expression is constant and 0 if it involves variables or function calls.
Return 1 if the expression is constant or a function call with constant arguments.
Return 1 if the expression is constant that does no originate from the ON or USING clauses of a join.
Return 1 if the given data pointer for the loop specifies that it needs the arrays as the data pointer.
Return 1 if the iterator is at EOF or if it now points to the start of the position list for the next column.
Return 1 if the specified points arrays contain at least 3 unique points, or 0 otherwise.
Return 1 if the time and date cannot be found.
Return 1 if the transition is made and 0 if the WAL is already in exclusive-locking mode - meaning that this routine is a no-op.
Return 1 if there are 2 or more references to the page and 0 if if this is the first reference to the page.
Return 1 if there are 2 ore more references to the page and 0 if if this is the first reference to the page.
Return 1 if there is a parsing error and 0 on success.
Return 1 if they are the same, 0 if not.
Return 1 if they differ only by a COLLATE operator at the top level.
Return 1 if xInit was found on the list and removed.
Return 1 on success, 0 on failure (reader error or memory error).
Return 1 on success, 0 on failure.
Return 1024 times this value.
Return 2 if the required number of bytes is too large to store.
Return 2 if there are differences other than the top-level COLLATE operator.
Return Array Scalar if 0-d array object is encountered
Return Enumerator if no block
Return FAILURE for invalid key(non-existing session).
Return FAILURE, if querystring is empty
Return FALSE if doing an UPDATE or DELETE might change subsequent WHERE clause results.
Return FALSE if fsync()s are executed normally.
Return FALSE if no lock is ever required since it is not sharable.
Return FALSE if the USING clause is NULL or if it does not contain zCol.
Return FALSE if the database is (in theory) writable.
Return FALSE if the output needs to be sorted.
Return FALSE if there is no chance that the expression can be NULL.
Return FALSE if zFrom does not match.
Return FALSE to give up with an error.
Return False if pBuilder does not contain an ORDER BY clause or if there is no way for pIndex to be useful in implementing that ORDER BY clause.
Return HTTP header value, or NULL if not found.
Return MARK data if requested
Return N random bytes.
Return NPY_OBJECT for most exceptions
Return NULL if  malloc fails.
Return NULL if malloc fails.
Return NULL if not found or if there is an error.
Return NULL if not found.
Return NULL if the WhereLoop list contains an entry that can supplant pTemplate, in other words if pTemplate does not belong on the list.
Return NULL if the column has no default collating sequence.
Return NULL if the index is out of range or if the wildcard is unnamed.
Return NULL if the variable not found, or allocated 0-terminated value.
Return NULL if there are no matches.
Return NULL if there are no more matching WhereTerms.
Return NULL if there are no more.
Return NULL if there is no PATH element.
Return NULL if unable.
Return NULL if we run out of memory.
Return NULL if zName is not a recognized system call name.
Return NULL if zName is the last system call or if zName is not the name of a valid system call.
Return ONEPASS_OFF (0) if an UPDATE or DELETE statement is unable to operate directly on the rowis returned by a WHERE clause.
Return ONEPASS_SINGLE (1) if the statement can operation directly because only a single row is to be changed.
Return OpenSSL error message
Return SQLITE_ABORT in this case.
Return SQLITE_BUSY if unable.
Return SQLITE_CORRUPT if a page number greater than this, or the unused locking-page, is requested.
Return SQLITE_CORRUPT if any of the internal checks fail, or if the checksum does not match.
Return SQLITE_CORRUPT_VTAB.
Return SQLITE_DONE early if this takes us all the way to the end of  the input.
Return SQLITE_DONE if the update has been completely applied, or  SQLITE_OK if no error occurs but there remains work to do to apply the RBU update.
Return SQLITE_ERROR if the finalizer reports an error.
Return SQLITE_ERROR if the maximum depth of the expression tree passed  as the only argument is more than nMaxDepth.
Return SQLITE_ERROR if the time and date  cannot be found.
Return SQLITE_ERROR if the time and date cannot be found.
Return SQLITE_LOCKED if this or any other connection has an open  transaction on the shared-cache the argument Btree is connected to.
Return SQLITE_LOCKED_SHAREDCACHE if another user of the same shared  btree as the argument handle holds an exclusive lock on the  sqlite_master table.
Return SQLITE_NOMEM if a malloc fails, or SQLITE_OK otherwise.
Return SQLITE_NOMEM if the allocation fails.
Return SQLITE_NOTFOUND.
Return SQLITE_OK  if successful, or an SQLite error code if an error occurs.
Return SQLITE_OK if  successful, or an SQLite error code otherwise.
Return SQLITE_OK if all PK values are successfully bound, or an SQLite error code (e.g. SQLITE_NOMEM) otherwise.
Return SQLITE_OK if all bytes were read successfully and SQLITE_IOERR if anything goes wrong.
Return SQLITE_OK if all checks pass without error, or some other SQLite error code if another error (e.g. OOM) occurs.
Return SQLITE_OK if everything is successful, or an SQLite error  code if an error occurs.
Return SQLITE_OK if everything is successful.
Return SQLITE_OK if everything worked, or an error code is something goes wrong.
Return SQLITE_OK if everything works, or an error code otherwise.
Return SQLITE_OK if flushing the buffered data succeeds or is not  required.
Return SQLITE_OK if no error occurs, or an SQLite error code if one does.
Return SQLITE_OK if no error occurs, or an SQLite error code otherwise.
Return SQLITE_OK if nothing goes wrong.
Return SQLITE_OK if successful (or  if no allocation was required), or SQLITE_NOMEM otherwise.
Return SQLITE_OK if successful or SQLITE_NOMEM if a malloc failure occurs.
Return SQLITE_OK if successful or an SQLite error code otherwise.
Return SQLITE_OK if successful or an error code if an error occurs.
Return SQLITE_OK if successful or an error code if sqlite3_create_module() fails.
Return SQLITE_OK if successful or if no reseek was required, or an  error code if an error occurred.
Return SQLITE_OK if successful, or SQLITE_NOMEM if a memory allocation fails.
Return SQLITE_OK if successful, or SQLITE_NOMEM if an error occurs.
Return SQLITE_OK if successful, or an SQLite error code (i.e. SQLITE_NOMEM) if an error occurs.
Return SQLITE_OK if successful, or an SQLite error code if an error  occurs.
Return SQLITE_OK if successful, or an SQLite error code if an error occurs.
Return SQLITE_OK if successful, or an SQLite error code if not.
Return SQLITE_OK if successful, or an SQLite error code otherwise.
Return SQLITE_OK if successful, or an error code (i.e. SQLITE_NOMEM) if an error occurs.
Return SQLITE_OK if successful, or an error code if an error occurs.
Return SQLITE_OK if successful, or an error code otherwise.
Return SQLITE_OK if the database is still were it ought to be on disk.
Return SQLITE_OK if the lock may be obtained (by calling setSharedCacheTableLock()), or SQLITE_LOCKED if not.
Return SQLITE_OK if they do, or SQLITE_CORRUPT if not.
Return SQLITE_OK on success  or some other error code if we fail.
Return SQLITE_OK on success and SQLITE_ERROR if something goes wrong.
Return SQLITE_OK on success and SQLITE_NOMEM on an OOM error.
Return SQLITE_OK on success and an error code if we cannot obtain the lock.
Return SQLITE_OK on success or SQLITE_NOMEM if malloc fails.
Return SQLITE_OK on success or SQLITE_NOMEM if unable to obtain memory.
Return SQLITE_OK on success or SQLITE_NOMEM of a memory allocation error occurs.
Return SQLITE_OK on success or an error code (probably SQLITE_NOMEM) if unable to complete the resizing.
Return SQLITE_OK on success or an error code if anything goes wrong.
Return SQLITE_OK on success or an error code is something goes wrong.
Return SQLITE_OK on success or some other error code on failure.
Return SQLITE_OK on success, SQLITE_BUSY on failure.
Return SQLITE_OK on success.
Return SQLITE_OK opon successfully updating the system call pointer, or SQLITE_NOTFOUND if there is no configurable system call named zName.
Return SQLITE_OK or an error code.
Return SUCCESS for valid key(already existing session).
Return TRUE (non-zero) of the statement supplied as an argument needs to be recompiled.
Return TRUE if Mem X contains dynamically allocated content - anything that needs to be deallocated to avoid a leak.
Return TRUE if a KeyInfo object can be change.
Return TRUE if an UPDATE or DELETE statement can operate directly on the rowids returned by a WHERE clause.
Return TRUE if and only if all dirty pages should be flushed to disk.
Return TRUE if database connection db has unfinalized prepared statements or unfinished sqlite3_backup objects.
Return TRUE if it is and FALSE if not.
Return TRUE if it is so and false if not.
Return TRUE if pFile has been renamed or unlinked since it was first opened.
Return TRUE if that list is constant.
Return TRUE if the WHERE clause returns rows in ORDER BY order.
Return TRUE if the WHERE clause term pTerm is of a form where it could be used with an index to access pSrc, assuming an appropriate index existed.
Return TRUE if the cursor is not pointing at an entry of the table.
Return TRUE if the database file is opened read-only.
Return TRUE if the given SQL string ends in a semicolon.
Return TRUE if the given btree is set to safety level 1.
Return TRUE if the given expression is a constant which would be unchanged by OP_Affinity with the affinity given in the second argument.
Return TRUE if the given operator is one of the operators that is allowed for an indexable WHERE clause term.
Return TRUE if the given string is a row-id column name.
Return TRUE if the given yDbMask object is empty - if it contains no 1 bits.
Return TRUE if the iCol-th column of index pIdx is NOT NULL
Return TRUE if the innermost loop of the WHERE clause implementation returns rows in ORDER BY order for complete run of the inner loop.
Return TRUE if the jsonEachCursor object has been advanced off the end of the JSON object
Return TRUE if the mask of type in eType matches no bits of the type of the allocation p.
Return TRUE if the mask of type in eType matches the type of the allocation p.
Return TRUE if the name zCol occurs anywhere in the USING clause.
Return TRUE if the named file is really a directory.
Return TRUE if the page given in the argument was previously passed to sqlite3PagerWrite().
Return TRUE if the pager is in a state where it is OK to change the journalmode.
Return TRUE if the resize occurs and false if not.
Return TRUE if the result is a valid real number (or integer) and FALSE if the string is empty or contains extraneous text.
Return TRUE if the word ends in a double consonant.
Return TRUE if the word ends with three letters which are consonant-vowel-consonent and where the final consonant is not 'w', 'x', or 'y'.
Return TRUE if zFrom matches.
Return TRUE if zTable is the name of the system table that stores the list of users and their access credentials.
Return TRUE to retry.
Return True if it is possible that pIndex might be useful in implementing the ORDER BY clause in pBuilder.
Return True if we should reply 304 Not Modified.
Return UTF-16 encoded English language explanation of the most recent error.
Return UTF-8 encoded English language explanation of the most recent error.
Return WRC_Abort if there is an abort request.
Return WRC_Abort or WRC_Continue.
Return WRC_Continue under normal conditions.
Return WRC_Prune on success.
Return a  pointer to a buffer containing that representation.
Return a "position-list blob" corresponding to the current position of cursor pCsr via sqlite3_result_blob().
Return a +ve value if snapshot p1 is newer than p2.
Return a 32-bit hash of the page data for pPage.
Return a 32-bit integer value extracted from a string.
Return a 64-bit checksum for the FTS index entry specified by the arguments to this function.
Return a 64-bit integer value for a query parameter.
Return a Found Redirect if one is not already specified
Return a JSON array that contains all values given in arguments.
Return a JSON object that contains all name/value given in arguments.
Return a JSON value corresponding to the SQL value input.
Return a JsonNode and all its descendents as a JSON string.
Return a KeyInfo structure that is appropriate for the given Index.  The KeyInfo structure for an index is cached in the Index object.
Return a KeyInfo structure that is appropriate for the given Index.  The caller should invoke sqlite3KeyInfoUnref() on the returned object when it has finished using it.
Return a NULL pointer if any kind of error was encountered.
Return a bitmask where 1s indicate that the corresponding column of the table is used by an index.  Only the first 63 columns are considered.
Return a blob which is a pointer to the cursor.
Return a block of memory of at least nBytes in size.
Return a boolean value for a query parameter.
Return a checksum of all entries in the FTS index that correspond to language id iLangid.
Return a copy of index structure pStruct.
Return a copy of input string zInput enclosed in double-quotes (") and with all double quote characters escaped.
Return a copy of the value returned by sqlite3_reset().
Return a half-open range
Return a hexadecimal rendering as text.
Return a human-readable name for a constraint resolution action.
Return a list of all dirty pages in the cache, sorted by page number.
Return a meaningful error when no parameters were passed
Return a negative number if malloc fails.
Return a new SrcList which encodes is the FROM with the new term added.
Return a nul-terminated copy of the string indicated by pIn.
Return a pathname which is substituted by String#sub.
Return a pathname with +repl+ added as a suffix to the basename.
Return a pointer corresponding to database zDb (i.e. "main", "temp") in connection handle pDb.
Return a pointer to a TriggerPrg object containing the sub-program for trigger pTrigger with default ON CONFLICT algorithm orconf.
Return a pointer to a TriggerStep structure.
Return a pointer to a buffer containing a text representation of the expression passed as the first argument.
Return a pointer to a buffer containing the term associated with the  entry that the iterator currently points to.
Return a pointer to a buffer owned by the sorter that contains the  current key.
Return a pointer to a human readable string in a static buffer containing the state of the Pager object passed as an argument.
Return a pointer to a new Expr node that implements the COLLATE operator.
Return a pointer to a string containing the 'declaration type' of the expression pExpr.
Return a pointer to a subexpression of pVector that is the i-th column of the vector (numbered starting with 0).
Return a pointer to an sqlite3VdbeRecordCompare() compatible function suitable for comparing serialized records to the unpacked record passed as the only argument.
Return a pointer to an sqlite3_value structure containing the value bound parameter iVar of VM v.
Return a pointer to at least SIZE bytes of storage, which will be automatically reclaimed upon exit from the procedure that called alloca.
Return a pointer to data consisting of the "setting" followed by an encryption produced by the "key" and "setting".
Return a pointer to it.
Return a pointer to its binary value.
Return a pointer to payload information from the entry that the  pCur cursor is pointing to.
Return a pointer to static data consisting of the "setting" followed by an encryption produced by the "key" and "setting".
Return a pointer to static memory containing an SQL NULL value.
Return a pointer to that node, or NULL if zPath is malformed or if there is no such node.
Return a pointer to the "temporary page" buffer held internally by the pager.
Return a pointer to the FuncDef structure that defines that function, or return NULL if the function does not exist.
Return a pointer to the Pager.nExtra bytes of "extra" space  allocated along with the specified page.
Return a pointer to the Table structure for the table that a trigger is set on.
Return a pointer to the VTable object used by connection db to access  this virtual-table, if one has been created, or NULL otherwise.
Return a pointer to the WalCkptInfo structure in the wal-index.
Return a pointer to the WalIndexHdr structure in the wal-index.
Return a pointer to the allocated memory on success.
Return a pointer to the allocated memory.
Return a pointer to the allocated object to the caller
Return a pointer to the allocated object to the caller.
Return a pointer to the appropriate hash function given the key class.
Return a pointer to the buffer containing the record data for SorterRecord object p.
Return a pointer to the character immediately following the last in the gobbled word if successful, or a NULL pointer otherwise (failed to find close-quote character).
Return a pointer to the collation sequence that should be used by a binary comparison operator comparing pLeft and pRight.
Return a pointer to the column affinity string associated with index pIdx.
Return a pointer to the data for the specified page.
Return a pointer to the enlarged SrcList
Return a pointer to the first character following *pIn in  the string that is not a "bareword" character.
Return a pointer to the first character following *pIn in  the string that is not a white-space character.
Return a pointer to the first match.
Return a pointer to the first operation inserted.
Return a pointer to the inserted node, or return NULL if the append fails.
Return a pointer to the matching FuncDef if found, or 0 if there is no match.
Return a pointer to the new Expr node.
Return a pointer to the new RowSet object.
Return a pointer to the new UnpackedRecord structure if successful, or a NULL pointer if an OOM error is encountered.
Return a pointer to the new allocation.
Return a pointer to the new and completely uninitialized objected.
Return a pointer to the new object.
Return a pointer to the new tokenizer in *ppModule
Return a pointer to the new trigger step.
Return a pointer to the next prepared statement after pStmt associated with database connection pDb.
Return a pointer to the node on success.
Return a pointer to the page or NULL if the requested page is not  already in memory.
Return a pointer to the page, or 0 if the page is not in cache.
Return a pointer to the resulting string.
Return a pointer to the right-most SELECT statement in a compound.
Return a pointer to the root of the constructed binary tree.
Return a pointer to the symbol zSymbol in the dynamic library pHandle.
Return a pointer to the term.
Return a pointer to the vxworksFileId object.
Return a random blob that is N bytes long.
Return a random integer.
Return a sanitized version of the sector-size of OS file pFile.
Return a simple checksum value based on the arguments.
Return a static string containing the name corresponding to the error code specified in the argument.
Return a static string that describes the kind of error specified in the argument.
Return a string that describes the kind of error specified in the argument.
Return a success code.
Return a transient error.
Return a tuple of (callable object, arguments, object's state)
Return a tuple of (cleaned metadata dictionary, tuple with (str, num))
Return a variable number of PC values.
Return a vector of device characteristics.
Return address register for output subroutine
Return address register for reset subroutine
Return address register.
Return after either the input buffer is exhausted or a 0 value is read.
Return an 1-based index of the matching result-set entry.
Return an Expr object that refers to a memory register corresponding to column iCol of table pTab.
Return an Expr object that refers to column iCol of table pTab which has cursor iCur.
Return an SQLite error code if an error occurs, or SQLITE_OK otherwise.
Return an already opened filename.
Return an appropriate error code.
Return an approximation for the amount of memory currently used by all pagers associated with the given database connection.
Return an array  or tuple of arrays with the values
Return an empty array if this class implements no interfaces
Return an empty array in case no static variables exist
Return an empty string if the database is in-memory or a TEMP database.
Return an error code if an OOM fault or I/O error prevents us from positioning the cursor to its correct position.
Return an error code if an error occurs (SQLITE_NOMEM is possible).
Return an error code if anything goes wrong.
Return an error code to the caller if an IO error occurs.
Return an error code.
Return an error if we get here
Return an error message.
Return an expression that can be used in a WHERE clause to match the primary key of the current table.
Return an integer that records the current (uncommitted) write position in the WAL
Return an integer value for one of the parameters to the opcode pOp determined by character c.
Return an integer value representing the precedence of the operator.
Return an integer which is the result code.
Return and 0 if there are any variables.
Return any I/O error from the restore operation.
Return as a fraction in reduced form
Return back from CONN_QUERY_SENT
Return buffered data back if we haven't done that yet.
Return cde from function - usually 0
Return char value in TMP1, length in TMP2.
Return class or module of the method being called.
Return closest available color
Return code for this function
Return code from execution
Return code from fileWriterFinish()
Return code from service routines
Return code from sqlite3_create_collation_x()
Return code from sqlite3_exec()
Return code from sqlite3_prepare()
Return code from sqlite3_reset()
Return code from subfunctions
Return code from subprocedures
Return code from subroutines
Return code from the parse-tree walking primitives and their callbacks.
Return code of various sub-routines
Return code page number of the encoding.
Return collator's last error code.
Return control to the parent frame.
Return coordinate iCoord from cell iCell in node pNode.
Return copy for now (future plan to return the view above).
Return correct grandfathered language tag
Return early if  this is possible.
Return early if an error occurs here.
Return early if an error occurs.
Return early if not found.
Return early in this case as an optimization.
Return either SQLITE_OK (zero) or SQLITE_IGNORE or SQLITE_DENY.
Return either SQLITE_OK or an error code (usually SQLITE_CORRUPT).
Return either the pDef argument (indicating no change) or a  new FuncDef structure that is marked as ephemeral using the SQLITE_FUNC_EPHEM flag.
Return encoding index or UNSPECIFIED_ENCODING from encoding name
Return enumerator if no block
Return exact match color
Return failure if at end of input.
Return fake connection structure.
Return false (zero) for Win95, Win98, or WinME.
Return false if any invariant is violated.
Return false if it is ok.
Return false if it is something other than a directory, or if there is any kind of memory allocation failure.
Return false if pExpr references columns but not columns of tables found in pSrcList.
Return false if there is a disagreement.
Return false if trace was disabled.
Return false if we can't find argv.
Return false if we cannot complete the proof or if pE2 might be false.
Return false only if there is no match.
Return flag - no operand
Return formatter's last error code.
Return found 0-terminated word.
Return from sqlite3WhereBegin()
Return global server.
Return if don't need to do anything.
Return if the buffer contains enough characters.
Return if the frame is not valid.
Return if the raw buffer is full.
Return if we were only asked to check infinity arithmetic
Return info about compiled pattern      *
Return info about what features are configured *
Return information regarding the PRIMARY KEY and number of columns in the database table affected by the change that pIter currently points to.
Return last error message.
Return last line from the shell command
Return last read character
Return leaving the pointer at the terminating char.
Return merged result.
Return meta information about a specific column of a database table.
Return negative for a syntax error.
Return negative, zero, or positive if the first (i64) is less than, equal to, or greater than the second (double).
Return negative, zero, or positive if the first is less than, equal to, or greater than the second, respectively.
Return negative, zero, or positive if the first is less than, equal to, or greater than the second.
Return negative, zero, or positive if zNum is less than, equal to, or greater than the string.
Return newly allocated color
Return no rowids earlier than this
Return no rowids later than this
Return non-zero (SQLITE_READONLY_DBMOVED or some other error code from sqlite3OsAccess()) if the database has gone missing.
Return non-zero if a malloc() fails.
Return non-zero if a memory allocation error occurs.
Return non-zero if a read (or write) transaction is active.
Return non-zero if a transaction is active.
Return non-zero if a type is aligned in each item in the given array, AND, the descr element size is a multiple of the alignment, AND, the array data is positioned to alignment granularity.
Return non-zero if no changes to attached tables have been recorded by  the session object passed as the first argument.
Return non-zero if the cursor does not currently point to a valid  record (i.e if the scan has finished), or zero otherwise.
Return non-zero if the eponymous virtual table instance exists when this routine returns, and return zero if it does not exist.
Return non-zero if the expression is constant and 0 if it involves variables or function calls.
Return non-zero if the expression is constant for any single row of the table with cursor iCur.
Return non-zero if the expression is constant or a function call with constant arguments.
Return non-zero if the expression is constant that does no originate from the ON or USING clauses of a join.
Return non-zero if the table pTab in database iDb or any of its indices have been opened at any point in the VDBE program.
Return non-zero on an OOM error
Return non-zero on success, if this query can be handled by this no-frills query planner.
Return nonzero if S has any special globbing chars in it.
Return number of bytes read.
Return number of bytes written.
Return number of characters processed so far.
Return number of matching commands from a command table.
Return one of the SQLITE_ error codes to indicate success or failure.
Return one of the SQLITE_ success/failure codes.
Return one of the WHERE_DISTINCT_xxxxx values to indicate how this WHERE clause returns outputs for DISTINCT processing.
Return open Btree* here
Return optimal workspace in WORK(1)
Return permyriadage progress indications for the two main stages of an RBU update.
Return pointers to the hash table and page number array stored on page iHash of the wal-index. The wal-index is broken into 32KB pages numbered starting from 0.
Return previous translation mode.
Return qhull version string for assistance in debugging.
Return result of the comparison.
Return segments in order from oldest to newest.
Return some kind of integer value which is the best we can do at representing the value that *pMem describes as an integer.
Return some other SQLite error code if an error occurs while attempting to determine this.
Return status data for a single loop within query pStmt.
Return stringified MD5 hash for list of vectors.
Return the  address of the new instruction.
Return the  number of bytes written.
Return the 'affinity' of the expression pExpr if any.
Return the 0...11 month number.
Return the 64-bit integer value associated with cell iCell of node pNode.
Return the Btree pointer identified by zDbName.
Return the CollSeq* pointer for the collation sequence named zName for the encoding 'enc' from the database 'db'.
Return the MARK data if it has been requested.
Return the N-dimensional volumn of the cell stored in *p.
Return the N-th AND-connected subterm of pTerm.
Return the N-th compile-time option string.
Return the ON CONFLICT resolution mode in effect for the virtual table update operation currently in progress.
Return the P5 value that should be used for a binary comparison opcode (OP_Eq, OP_Ge etc.) used to compare pExpr1 and pExpr2.
Return the PRIMARY KEY index of a table
Return the ROWID of the most recent insert
Return the Rtree of a RtreeCursor
Return the SQL associated with a prepared statement
Return the SQL associated with a prepared statement with bound parameters expanded.
Return the SorterCompare function to compare values collected by the sorter object passed as the only argument.
Return the VDBE address or label to jump to in order to break out of a WHERE loop.
Return the VDBE address or label to jump to in order to continue immediately with the next row of a WHERE clause.
Return the VFS structure for the pager.
Return the address of the first operation added.
Return the address of the new instruction.
Return the address of the next instruction to be inserted.
Return the affinity character for a single column of a table.
Return the affinity for a single column of an index.
Return the amount cell p would grow by if it were unioned with pCell.
Return the amount of memory currently checked out.
Return the amount of time slept.
Return the appropriate collating sequence for the iCol-th column of the result set for the compound-select statement "p".
Return the approximate number of bytes of memory currently used by the pager and its associated cache.
Return the auxilary data pointer, if any, for the iArg'th argument to the user-function defined by pCtx.
Return the auxiliary data pointer, if any, for the iArg'th argument to the user-function defined by pCtx.
Return the best representation of pMem that we can get into a double.
Return the bitmask for the given cursor number.
Return the bits for this operand to be ORed into an existing bundle.
Return the bitwise-OR of all Expr.flags fields in the given ExprList.
Return the ceiling of the logarithm base 2 of iValue.
Return the class of +values+ for reentry check.
Return the collating function associated with a function.
Return the collation sequence for the expression pExpr.
Return the column declaration type (if applicable) of the 'i'th column of the result set of SQL statement pStmt.
Return the column of index pIdx that corresponds to table column iCol.
Return the cost of sorting nRow rows, assuming that the keys have  nOrderby columns and that the first nSorted columns are already in order.
Return the current file-size of an rbuVfs-file.
Return the current journal mode.
Return the current pager state
Return the current rowid that it points to.
Return the current rowid value
Return the current state of the RBU vacuum or update operation.
Return the current term.
Return the current time as a Julian Day number in *pTimeOut.
Return the current time for a statement
Return the current time for a statement.
Return the current timeout value if one is set.
Return the current value of a status parameter.
Return the current wal-index header checksum for the target database  as a 64-bit integer.
Return the currently defined page size
Return the cursor integer id number.
Return the data for this element if it is found, or NULL if there is no match.
Return the database associated with the Vdbe.
Return the database handle used by pRbu.
Return the day within the month
Return the declaration type and origin data for the result-set column of the sub-select.
Return the declaration type and origin info for the single column in the result set of the SELECT statement.
Return the declared type of a column.
Return the default_rc value.
Return the depth of a tree comprising nPMA PMAs, assuming a fanout of SORTER_MAX_MERGE_COUNT.
Return the device characteristic flags supported by an rbuVfs-file.
Return the device characteristics for the file.
Return the effective cache-spill size, which will be the larger of the szSpill and szCache.
Return the ending position of a variable name
Return the entries (files and subdirectories) in the directory, each as a Pathname object.
Return the equivalent native integer
Return the error code for the first error that occurs, or SQLITE_OK if all xSync operations are successful.
Return the estimated number of output rows from a WHERE clause
Return the expected  size of the database in pages following an auto-vacuum operation.
Return the explanation of a virtual machine.
Return the file handle for the database file associated with the pager.
Return the file handle for the journal file (if it exists).
Return the filename of the database associated with a database connection.
Return the fractional part of the number, as a BigDecimal.
Return the full pathname of the database file.
Return the full pathname of the journal file.
Return the full pathname of the underlying database file.
Return the generated binding object from event
Return the global mutex used by this PCACHE implementation.
Return the header size
Return the index i of the matching column, as an indication to the caller that it should sort by the i-th column.
Return the index in pList of the identifier named zId.
Return the index of a column in a table.
Return the index of the cell containing a pointer to node pNode in its parent.
Return the index of the first character past the end of the value parsed.
Return the index of the first register used to store the result.
Return the index of the new element.
Return the index of this cell.
Return the indices of the 3 triangles that are neighbors of the specified facet (triangle).
Return the indices of the 3 vertices that comprise the specified facet (i.e. triangle).
Return the integer part of the number, as a BigDecimal.
Return the integer unicode code-point value for the first character of the input string.
Return the length of YYSTR.
Return the length of decoded data.
Return the length of the data corresponding to the supplied serial-type.
Return the loop function + aux data
Return the major token number for the symbol popped.
Return the margin length of cell p.
Return the maximum amount of memory that has ever been checked out since either the beginning of this process or since the most recent reset.
Return the maximum height of any expression tree referenced by the select statement passed as an argument.
Return the memory allocator mutex. sqlite3_status() needs it.
Return the minimum number of 32KB shm regions that should be mapped at a time, assuming that each mapping must be an integer multiple of the current system page-size.
Return the module configuration
Return the most recent error code generated by an SQLite routine.
Return the mutex associated with a database connection.
Return the name of a directory in which to put temporary files.
Return the name of a wildcard parameter.
Return the name of the Nth column of the result set returned by SQL statement pStmt.
Return the name of the database from which a result column derives.
Return the name of the first system call after zName.
Return the name of the i-th column of the pIdx index.
Return the name of the method being called
Return the name of the table column from which a result column derives.
Return the name of the table from which a result column derives.
Return the new character
Return the new hash-key value.
Return the new journal mode
Return the new maximum, which might be less than requested.
Return the new name length.
Return the next entry on the list
Return the next pixel from the image
Return the number of  bytes read.
Return the number of JsonNode objects that are encoded.
Return the number of bytes actually read.
Return the number of bytes allocated for the expression structure  passed as the first argument.
Return the number of bytes currently allocated at address p.
Return the number of bytes in the first nChar unicode characters in pZ.
Return the number of bytes in the nChar character prefix of the buffer, or 0 if there are less than nChar characters in total.
Return the number of bytes in the sqlite3_value object assuming that it uses the encoding "enc"
Return the number of bytes in this text up to but excluding the first character in a host parameter.
Return the number of bytes of payload for the entry that pCur is currently pointing to.
Return the number of bytes of space at the end of every page that are intentually left unused.
Return the number of bytes of space occupied by the value (including the type byte).
Return the number of bytes of text that StrAccum is able to accept after the attempted enlargement.
Return the number of bytes read, or 0 on error.
Return the number of bytes read.
Return the number of bytes required to create a duplicate of the  expression passed as the first argument.
Return the number of bytes required to encode v as a varint
Return the number of bytes required to store a JournalFile that uses vfs pVfs to create the underlying on-disk files.
Return the number of bytes required to store a MemJournal file descriptor.
Return the number of bytes required to store value iVal as a varint.
Return the number of bytes that will be needed to store the given 64-bit integer.
Return the number of bytes written.
Return the number of cells in a node
Return the number of changes in the most recent call to sqlite3_exec().
Return the number of changes since the database handle was opened.
Return the number of characters advanced, or +nil+ if the match was unsuccessful.
Return the number of characters in the simplified name.
Return the number of columns in the result set for the statement pStmt.
Return the number of connections to the BtShared object accessed by the Btree handle passed as the only argument.
Return the number of consecutive JsonNode slots need to represent the parsed JSON at pNode.
Return the number of cursors open on pBt.
Return the number of days between jan 01 1601 and jan 01 of year.
Return the number of dirty pages currently in the cache, as a percentage of the configured cache size.
Return the number of elements evaluated.
Return the number of errors seen.
Return the number of errors.
Return the number of microseconds  actually slept.
Return the number of pages still to be backed up as of the most recent call to sqlite3_backup_step().
Return the number of phrases in expression pExpr.
Return the number of references to the page supplied as an argument.
Return the number of references to the pager.
Return the number of references to the specified page.
Return the number of rows inserted.
Return the number of rows that were changed.
Return the number of rows that were deleted.
Return the number of terms in the iPhrase'th phrase in pExpr.
Return the number of the wal-index page that contains the hash-table and page-number array that contain entries corresponding to WAL frame iFrame.
Return the number of times sqlite3MemMalloc() has been called.
Return the number of times the Step function of a aggregate has been  called.
Return the number of times the Step function of an aggregate has been  called.
Return the number of unicode characters in the string.
Return the number of values available from the current row of the currently executing statement pStmt.
Return the number of wildcards that can be potentially bound to.
Return the numeric type for pMem, either MEM_Int or MEM_Real or both or none.
Return the offset of frame iFrame in the write-ahead log file,  assuming a database page size of szPage bytes.
Return the opcode for a given address.
Return the page in this parameter
Return the page number and the new database size.
Return the page number associated with frame iFrame in this WAL.
Return the page number for page pPg.
Return the page to the freelist.
Return the page-size in bytes used by the database.
Return the pager associated with a BTree.
Return the pathname of the journal file for this database.
Return the peak depth of the stack for a parser.
Return the position of next non-white-space char in the string
Return the register in which the result is stored (or, if the  sub-select returns more than one column, the first in an array of registers in which the result is stored).
Return the register number for the register that holds the maximum rowid.
Return the register number where the results are stored.
Return the register where results are stored.
Return the rest of the data as unencoded, as it was either unencoded or was missing separators which rendered the remainder of the string impossible for us to decode.
Return the result code.
Return the result of the comparison.
Return the rowid of the entry that the iterator currently points to.
Return the rowid that the cursor currently points to.
Return the search point with the lowest current score.
Return the sector size in bytes of the underlying block device for the specified file.
Return the sector-size in bytes for an rbuVfs-file.
Return the serial-type for the value stored in pMem.
Return the size in bytes of a PCache object.
Return the size of a BtCursor object in bytes.
Return the size of a memory allocation previously obtained from sqlite3Malloc() or sqlite3_malloc().
Return the size of a pcache allocation
Return the size of an allocation
Return the size of an outstanding allocation, in bytes.
Return the size of the Nth element of the cell array
Return the size of the common prefix (if any) shared by zPrev and zNext, in bytes.
Return the size of the database file in pages.
Return the size of the database in pages (or zero, if unknown).
Return the size of the header added by this middleware layer in the page-cache hierarchy.
Return the size of the header added to each page by this module.
Return the size of the header on each page of this PCACHE implementation.
Return the size of the largest prefix of this  list nMax bytes or less in size.
Return the sqlite3* database handle to which the prepared statement given in the argument belongs.
Return the sqlite3_file object for the WAL file
Return the sum of the reference counts for all pages held by pPager.
Return the system page size.
Return the text of a syntax error message on a JSON path.
Return the the default_rc value.
Return the total number of key-value operations (inserts, deletes or  updates) that have been performed on the target database since the current RBU update was started.
Return the total number of outstanding page references
Return the total number of pages in the cache.
Return the total number of pages in the source database as of the most  recent call to sqlite3_backup_step().
Return the total number of pages stored in the cache
Return the total number of referenced pages held by the cache.
Return the total number of references to all pages held by the cache.
Return the total number of segments in index structure pStruct.
Return the trace object during event  Same as TracePoint#binding: trace.binding.eval('self')
Return the tree depth.
Return the type affinity that should be applied to both operands prior to doing the comparison.
Return the type of the argument.
Return the unicode value.
Return the unixInodeInfo object here
Return the value of a column
Return the value of a status counter for a prepared statement
Return the value of a system call.
Return the value of the 'auto-vacuum' property.
Return the value of the iSize parameter specified when Bitvec *p was created.
Return the value of the integer key or "rowid" for a table btree.
Return the value of the pending byte as it existing before this routine was called.
Return the value read.
Return the value stored within the RtreeCoord formatted as a RtreeDValue (double or int64).
Return the value to pass to a sqlite3_wal_hook callback, the number of frames in the WAL at the point of the last commit since sqlite3WalCallback() was called.
Return this as the encoding of the C/POSIX locale.
Return true (1) if they are the same and  false (0) if they are different.
Return true (1) if they are the same and false (0) if they are different.
Return true (non-zero) if the input is a integer that is too large to fit in 32-bits.
Return true (non-zero) if the input is an integer that is too large to fit in 32-bits.
Return true (non-zero) if we are running under WinNT, Win2K, WinXP, or WinCE.
Return true for this case to prevent the assert() in the callers frame from failing.
Return true if CHECK constraint pExpr does not use any of the changing columns (or the rowid if it is changing).
Return true if a memory cell is not marked as invalid.
Return true if a particular Btree requires a lock.
Return true if and only if an opcode was removed.
Return true if any register in the range iFrom..iTo (inclusive) is used as part of the column cache.
Return true if character 't' may be part of an FTS5 bareword, or false otherwise.
Return true if currently inside an sqlite3_declare_vtab() call.
Return true if descr is a builtin type
Return true if everything is OK.
Return true if expression pExpr is a vector, or false otherwise.
Return true if fsync() calls are disabled for this pager.
Return true if index X is a PRIMARY KEY index
Return true if index X is a UNIQUE index
Return true if it OK to factor constant expressions into the initialization code.
Return true if it can be and false if not.
Return true if it could be a zero-blob.
Return true if it desirable to avoid allocating a new page cache entry.
Return true if it does and false if it does not.
Return true if it does match, or false otherwise.
Return true if it is necessary to write page *pPg into the sub-journal.
Return true if pNew is to be preferred over pOld.
Return true if pTab is a contentless table.
Return true if the BtShared mutex is held on the btree, or if the B-Tree is not marked as sharable.
Return true if the BtShared.nRef counter reaches zero and return false if it is still positive.
Return true if the Btree passed as the only argument is sharable.
Return true if the DISTINCT expression-list passed as the third argument is redundant.
Return true if the Explain ends with a new-line.
Return true if the Mem object contains a TEXT or BLOB that is too large - whose size exceeds SQLITE_MAX_LENGTH.
Return true if the area covered by p2 is a subset of the area covered by p1.
Return true if the argument corresponds to a unicode codepoint classified as either a letter or a number.
Return true if the argument interpreted as a unicode codepoint is a diacritical modifier character.
Return true if the argument is non-NULL and the WAL module is using heap-memory for the wal-index. Otherwise, if the argument is NULL or the WAL module is using shared-memory, return false.
Return true if the current thread holds the database connection mutex and all required BtShared mutexes.
Return true if the cursor has a hint specified.
Return true if the cursor was opened using the OP_OpenSorter opcode.
Return true if the file-handle passed as an argument is  an in-memory journal
Return true if the floating point value is Not a Number (NaN).
Return true if the given BtCursor is valid.
Return true if the given Btree is read-only.
Return true if the heap is currently under memory pressure - in other words if the amount of heap used is close to the limit set by sqlite3_soft_heap_limit().
Return true if the index does cover the expression and false if the pExpr expression references table columns that are not found in the index pIdx.
Return true if the index with affinity idx_affinity may be used to implement the comparison in pExpr.
Return true if the iterator is at EOF or if an error has occurred.
Return true if the iterator passed as the only argument is at EOF.
Return true if the iterator passed as the second argument currently points to a delete marker.
Return true if the iterator reaches EOF, or false otherwise.
Return true if the m-value for z is 1 or more.
Return true if the page is already in the journal file.
Return true if the parser passed as the first argument is being used to code a trigger that is really a "SET NULL" action belonging to trigger pFKey.
Return true if the prepared statement is guaranteed to not modify the database.
Return true if the prepared statement is in need of being reset.
Return true if the requested permission is available, or false otherwise.
Return true if the result of comparison is equivalent to desiredResult.
Return true if the underlying VFS for the given pager supports the primitives necessary for write-ahead logging.
Return true if there have been no changes to monitored tables recorded by the session object passed as the only argument.
Return true if they do.
Return true if this "journal file" is currently stored in heap memory, or false otherwise.
Return true if this error is  considered fatal if encountered during a backup operation.
Return true if this is an in-memory or temp-file backed pager.
Return true if this is an in-memory pager.
Return true if this pager uses a write-ahead log instead of the usual rollback journal.
Return true if we are able to the IN operator optimization on a query of the form  x IN (SELECT ...)  Where the SELECT...
Return true if we can prove the pE2 will always be true if pE1 is true.
Return true if, for the purposes of tokenization, codepoint iCode is considered a token character (not a separator).
Return true if, for the purposes of tokenizing with the tokenizer passed as the first argument, codepoint iCode is considered a token  character (not a separator).
Return true immediately.
Return true on a match.
Return true or false.
Return tuple (triangles, neighbors).
Return updated scan pointer as function result.
Return user's home directory using environment variables combinations.
Return value - unused
Return value for this function
Return value from +:return+, +c_return+, and +b_return+ event
Return value from subprocedures
Return value in TMP1.
Return value is 0 if equal, -1 if N1 is less than N2 and +1 if N1 is greater than N2.
Return value is a angle in radians between the positive x-axis of cartesian plane and the point given by the coordinates (+x+, +y+) on it.
Return value is an array mapping phar index to actual files added.
Return value must be freed
Return value of DnsQuery_A() function
Return value: The pointer to the buffer with the converted string.
Return value: similar to fscanf.
Return values should be interpreted as follows:  SQLITE_RBU_STATE_OAL: RBU is currently building a *-oal file.
Return whatever integer value the test callback returns, or return SQLITE_OK if no test callback is installed.
Return with an error if the posted data is garbled
Return without doing anything
Return without further ado.
Return zero if no errors are seen.
Return zero if pTab is not an AUTOINCREMENT table.
Return zero if this query needs the  general-purpose query planner.
Return zero on success, EOF on error.
Return zero on success, or raise one of Errno::*.
Return zero on success.
Return zero solution.
Return-path, Received, Date, From, Subject, Sender, To, cc
Returned rejection message
Returning KERN_FAILURE lets the exception fall through to the next handler, which is the standard signal emulation code registered on the task port.
Returning KERN_SUCCESS intercepts the exception.
Returning NULL would require complicating append_http_status_line() to not segfault in that case, so let's just return a placeholder, since RFC 2616 requires a reason phrase.
Returning SQLITE_BUSY would confuse the upper layer (in practice it causes  an assert to fail).
Returning an error code will cause a rollback, undoing any changes made to the parent page.
Returning an error code won't help matters.
Returning false might cause a performance reduction, but it will always give the correct answer and is hence always safe.
Returning input array
Returning true might give a performance improvement.
Returns *strio* itself.
Returns +classpath+ of _klass_, if it is named, or +nil+ for anonymous +class+/+module+.
Returns +nil+ at end of file.
Returns +nil+ at the end of the stream.
Returns +nil+ if +module+ has no relationship with +other_module+, if +other_module+ is not a module, or if the two values are incomparable.
Returns +nil+ if _start_ is greater than the size of current execution stack.
Returns +nil+ if called at the end of the stream.
Returns +nil+ if command execution fails.
Returns +nil+ if no changes are made (that is, no duplicates are found).
Returns +nil+ if no changes were made, otherwise returns the array.
Returns +nil+ if no match is found.
Returns +nil+ if no modifications were made (i.e., the array contains no subarrays.)  The optional +level+ argument determines the level of recursion to flatten.
Returns +nil+ if the array is empty.
Returns +nil+ if the begin value of an exclusive range is equal to the end value.
Returns +nil+ if the begin value of the range is larger than the end value.
Returns +nil+ if the begin value of the range larger than the end value.
Returns +nil+ if the index (or starting index) are out of range.
Returns +nil+ if the index is out of range.
Returns +nil+ if the initial index falls outside the string or the length is negative.
Returns +nil+ if the loop has finished without getting interrupted.
Returns +nil+ if the named variable does not exist.
Returns +nil+ if the process is still alive.
Returns +nil+ if the regular expression does not match or the match string cannot be found.
Returns +nil+ if the signo is an invalid signal number.
Returns +nil+ if when the environment is empty.
Returns +str+ if a substitution was performed or +nil+ if no substitution was performed.
Returns +true+ if +key+ is registered
Returns +true+ if successful.
Returns +true+ if the lock was granted.
Returns +true+ if the scan pointer is at the end of the string.
Returns +true+ iff the last match was successful.
Returns +true+ iff the scan pointer is at the beginning of the line.
Returns +true+ immediately when buffered data is available.
Returns ------- new_reference: PyUnicodeObject
Returns -1 if an exception was raised, 0 otherwise.
Returns -1 if error or not in the open_basedir, else 0.
Returns -1 if no char is received within the time or an error occurs.
Returns -1 if not plausible, else the difference between the lowest and the highest fileposition reached
Returns -1 if the array is monotonic decreasing, +1 if the array is monotonic increasing, and 0 if the array is not monotonic.
Returns -1 on error, 0 on success, and 1 (with no error set) if obj doesn't have the neeeded date or datetime attributes.
Returns -1 on error, 0 on success.
Returns -1 on error, number of operands placed in op otherwise.
Returns -1 on error, the number of characters placed in subscripts otherwise.
Returns -1 on failure, or non-negative file descriptor on success.
Returns -1, 0, +1 or nil depending on whether +symbol+ is less than, equal to, or greater than +other_symbol+.
Returns 0 if no chars were removed or non-zero otherwise.
Returns 0 if successful, 1 if successful and wrote ZIP64 extra field.
Returns 0 if successful, otherwise an exception is raised.
Returns 0 if the conversion fails.
Returns 0 if there is an overflow.
Returns 0 if things went well, nonzero if errors occurred.
Returns 0 on success and -1 on failure.
Returns 0 on success, -1 (with exception raised) on validation failure.
Returns 0 on success, -1 if an exception is raised.
Returns 0 on success, -1 on error.
Returns 0 on success, -1 on failure (for example if the output string was too short).
Returns 0 on success, -1 on failure.
Returns 0 on success, negative on failure.
Returns 0 on success, sets an exception and returns -1 on failure.
Returns 0 unless an error occurred.
Returns 1 if a trivial loop is ok, 0 if it is not, and -1 if there is an error.
Returns 1 if it has a simple layout, 0 otherwise.
Returns 1 if the address is valid, 0 if not.
Returns 1 if the arrays have overlapping data, 0 otherwise
Returns 1 if the date is a holiday (contained in the sorted list of dates), 0 otherwise.
Returns 1 if the dep did not previously exist, else 0.
Returns 1 if the dimension names pointed by s1 and s2 are the same, otherwise returns 0.
Returns 1 if the given year is a leap year, 0 otherwise.
Returns 1 if the line needs to be refreshed, 2 if not and 0 if nothing was removed
Returns 1 on success and 0 on failure.
Returns 1 on success, 0 on error.
Returns 1 on success, 0 on failure.
Returns 1 when source len is 0.
Returns ID for the given name if it is interned already, or 0.
Returns IPv4 address of IPv4 mapped/compatible IPv6 address.
Returns NPY_NOTYPE without setting an error if no type can be found.
Returns NPY_SUCCEED on success, NPY_FAIL on failure.
Returns NPY_SUCCEED or NPY_FAIL.
Returns NULL if an error occurs.
Returns NULL if hash is full Returns pointer the actual hash entry on success key needs to be already allocated as it is not copied
Returns NULL if no splittable boxes remain
Returns NULL if not found, or a pointer to the start of the first match.
Returns NULL if there hasn't been an error yet.
Returns NULL if un-successful.
Returns NULL on error.
Returns NotImplemented on priority override.
Returns OLE event object.
Returns OLE variant type.
Returns PS_TITLE_SUCCESS if the OS supports this functionality and the init function was called.
Returns Ruby Hash object which represents VT_RECORD variable.
Returns Ruby object value from OLE variant.
Returns Ruby object wrapping OLE variant.
Returns SPECIAL_NONE if unrecognised, or -1 if EOF.
Returns SQLITE_OK if successful, or an error code (i.e. SQLITE_NOMEM)  if an error occurs.
Returns SQLITE_OK if the statement is successfully executed, or an SQLite error code otherwise.
Returns SUCCESS/FAILURE and sets *len to the number of bytes moved
Returns TRUE on success and FALSE on failure
Returns True if the value is Not a Number.
Returns True if the value is finite (not NaN or infinite).
Returns True if the value is zero.
Returns a File::Stat object.
Returns a Float in the range -PI..PI.
Returns a Kernel#caller style string representing this frame.
Returns a PyUnicodeObject initialized from a buffer containing UCS4 unicode.
Returns a boolean array with True for input dates which are valid business days, and False for dates which are not.
Returns a datetime or timedelta type with metadata based on the data.
Returns a floating point number when +ndigits+ is more than zero.
Returns a floating point number when +ndigits+ is positive, +self+ for zero, and ceil up for negative.
Returns a floating point number when +ndigits+ is positive, +self+ for zero, and floor down for negative.
Returns a floating point number when +ndigits+ is positive, +self+ for zero, and round down for negative.
Returns a floating point number when +ndigits+ is positive, +self+ for zero, and truncate up for negative.
Returns a hash where the keys are the evaluated result from the block and the values are arrays of elements in the collection that correspond to the key.
Returns a human-readable string representation of this instruction sequence, including the #label and #path.
Returns a module, where refined methods are defined.
Returns a more readable format than RFC2253.
Returns a multi-iterator object.
Returns a multiline format.
Returns a new Float object having approximately the same value as the BigDecimal number.
Returns a new Socket object and Addrinfo object.
Returns a new array populated with the given objects.
Returns a new array with the new shape from the data in the old array --- order-perspective depends on order argument.
Returns a new escaped string, or self if no characters are escaped.
Returns a new instance of Fiddle::Function.
Returns a new reference in *at, but the returned should not be modified as it may be one of the canonical immutable objects or a reference to the input obj.
Returns a new reference to a dtype object, or NULL if this is not possible.
Returns a new reference to type if it is already NBO, otherwise returns a copy converted to NBO.
Returns a new reference.
Returns a new session.
Returns a new string where runs of the same character that occur in this set are replaced by a single character.
Returns a nonnegative integer for methods that take a fixed number of arguments.
Returns a pointer to the previous hook or NULL.
Returns a string representation of a structured array, in a dict format.
Returns a string representation of a structured array, in a list format.
Returns a struct zip_cdir which contains the central directory  entries, or NULL if unsuccessful.
Returns a transfer function which DECREFs any references in src_type.
Returns a transfer function which sets a boolean type to ones.
Returns a transfer function which zeros out the dest values.
Returns a view which contains the remaining elements on which to do the reduction.
Returns all but the last component of the path.
Returns an Enumerator if no block was given.
Returns an RFC2253 format name.
Returns an SQLite error code.
Returns an array scalar holding the element desired
Returns an entry from the /etc/group file.
Returns an entry from the /etc/passwd file.
Returns an enumerator if no block was given.
Returns an incref'ed pointer to the proper wrapping object for a ufunc output argument, given the output argument 'out', and the input's wrapping function, 'wrap'.
Returns an inspect() string summarizing the object state.
Returns an interface pointer for the interface of the given name, or NULL if the interface is not supported.
Returns an unsigned 32 bit random integer.
Returns an unsigned 64 bit random integer.
Returns array of WIN32OLE_METHOD objects which represent OLE method defined in OLE type library.
Returns attribute value on success, 0 on failure.
Returns bytes of data in the input buffer.
Returns chartype in TMP1 and UCD offset in TMP2.
Returns copied alias name when the key is added for st_table, else returns NULL.
Returns current locale id (lcid).
Returns encoding index or UNSPECIFIED_ENCODING
Returns false if not.
Returns false otherwise.
Returns false when the are no more messages
Returns from recursive calls
Returns from set_start_bits()
Returns from this function
Returns guid string which specifies type library.
Returns input array with values inserted sequentially into places indicated by the mask
Returns integer result when possible
Returns nil for anonymous modules.
Returns nil if +ptr+ cannot be compared to +other+.
Returns nil if no information available.
Returns nil if the argument is an ASCII compatible encoding.
Returns nil if the database is empty.
Returns nil if the last conversion did not produce an error.
Returns nil, -1, or +1 depending on whether the value is finite, -Infinity, or +Infinity.
Returns non-zero if the character should be treated as a directory separator.
Returns non-zero if the specified path name should be used verbatim.
Returns non-zero if the specified path name starts with a drive letter followed by a colon character.
Returns non-zero when the encoding is Unicode series other than UTF-7 else 0.
Returns number of bytes added to buffer.
Returns number of bytes consumed from buf, or -1 on error.
Returns number of bytes of free spaces in output buffer.
Returns number of files in the argument list.
Returns number of freed bytes
Returns number of freed zvals
Returns number of significant digits of c
Returns number which represents type.
Returns old property if removed otherwise NULL
Returns or yields Pathname objects.
Returns pathname configuration variable using fpathconf().
Returns self if the value is non-zero, nil otherwise.
Returns self, for backward compatibility.
Returns size of dirent read if successful.
Returns strlen(src) + MIN(dsize, strlen(initial dst)).
Returns system configuration directory.
Returns system configuration variable using confstr().
Returns system configuration variable using sysconf().
Returns the "rest" of the string (i.e. everything after the scan pointer).
Returns the #dirname and the #basename in an Array.
Returns the BigDecimal version number.
Returns the Object#object_id of the internal object.
Returns the absolute path for the file.
Returns the absolute path of this instruction sequence.
Returns the absolute value, as a BigDecimal.
Returns the adler-32 checksum.
Returns the appropriate error code if if there's an error (like the functionality is compile time disabled, or the save_ps_args() was not called.
Returns the argument unchanged.
Returns the array itself.
Returns the associated IO object.
Returns the base label of this frame.
Returns the base label of this instruction sequence.
Returns the base opcode for repeated single character type opcodes.
Returns the bound socket, or -1 on failure.
Returns the byte position of the scan pointer.
Returns the character position of the scan pointer.
Returns the character that should be used as the directory separator.
Returns the code point in the target charset (whose mapping table was given) or 0 if the unicode code point is not in the table.
Returns the connected (or connecting) socket, or -1 on failure.
Returns the converted array or +nil+ if +obj+ cannot be converted for any reason.
Returns the current "recursive list" used to detect recursion.
Returns the current domain
Returns the current ps_buffer value into string.
Returns the current working directory as a Pathname.
Returns the data associated with key on success Returns NULL if data doesn't exist
Returns the deleted object (or objects), or +nil+ if the +index+ is out of range.
Returns the element of WIN32OLE_VARIANT object(OLE array).
Returns the encrypted data chunk.
Returns the exit status of the child for which PTY#check raised this exception
Returns the exponent of the BigDecimal number, as an Integer.
Returns the facility number used in the last call to open()
Returns the file name of this frame.
Returns the file's extension.
Returns the first contained array that matches (that is, the first associated array), or +nil+ if no match is found.
Returns the first contained array that matches +obj+.
Returns the first key-value pair (two-element array) that matches.
Returns the full file path of this frame.
Returns the function address that should be called, or NULL if no such function exists.
Returns the given +value+.
Returns the hash entry associated with key on success Returns NULL if it doesn't exist
Returns the hash table data if found and NULL if not.
Returns the identity string used in the last call to open()
Returns the image, or NULL upon error.
Returns the index for the first for which the evaluated value is non-false.
Returns the instruction sequence containing the given proc or method.
Returns the key-value pair (two elements array) or +nil+ if no match is found.
Returns the label of this frame.
Returns the label of this instruction sequence.
Returns the last component of the path.
Returns the last deleted item, or +nil+ if no matching item is found.
Returns the last matched string.
Returns the length of the match, or +nil+.
Returns the line number of this frame.
Returns the log priority mask in effect.
Returns the matched string if +return_string_p+ is true, otherwise returns the number of bytes advanced.
Returns the matched string if +return_string_p+ is true.
Returns the memory address of the reallocated memory, which may be different than the address passed in.
Returns the modulo of division of x by y.
Returns the new effective group ID if called without a block, and the return value of the block if one is given.
Returns the new effective group ID.
Returns the new effective user ID if called without a block, and the return value of the block if one is given.
Returns the new effective user ID.
Returns the new group ID.
Returns the new offset into the file.
Returns the new state.
Returns the new user ID.
Returns the next CRLF terminated line from the client
Returns the number of bytes advanced, or +nil+ if no match was found.
Returns the number of bytes allocated in the shared heap.
Returns the number of bytes allocated into the shared heap, or a negative number if nothing no new memory was allocated.
Returns the number of bytes consumed from buf by the first filter in the chain.
Returns the number of bytes moved.
Returns the number of bytes written.
Returns the number of converters in the conversion path.
Returns the number of dates left after removing weekmask-excluded dates.
Returns the number of file names in the argument list.
Returns the number of files processed.
Returns the number of objects found.
Returns the number of online processors.
Returns the number of required parameters and stores the maximum number of parameters in max, or UNLIMITED_ARGUMENTS if no max.
Returns the number of required parameters and stores the maximum number of parameters in max, or UNLIMITED_ARGUMENTS if there is no maximum.
Returns the number of the first source line where the instruction sequence was loaded from.
Returns the options bitmask used in the last call to open()
Returns the output if TRUE is specified for return, printing it otherwise.
Returns the path of this instruction sequence.
Returns the peer address in addr/addrlen (it will emalloc these, so be sure to efree the result).
Returns the previously defined error handler, or false on error
Returns the previously defined exception handler, or false on error
Returns the previously valid session cache size.
Returns the product of from, from-1, ..., from - how_many + 1.
Returns the real (absolute) pathname for +self+ in the actual filesystem.
Returns the real (absolute) pathname of +self+ in the actual filesystem.
Returns the same as calling +inspect+ on the string representation of #to_str
Returns the scale factor between the units.
Returns the session id.
Returns the sign of the value.
Returns the size of the most recent match (see #matched), or +nil+ if there was no recent match.
Returns the size of the value associated to a given key.
Returns the string being scanned.
Returns the string even if no changes were made.
Returns the substring up to and including the end of the match, advancing the scan pointer to that location.
Returns the system information obtained by uname system call.
Returns the total bytes of the input data to the stream.
Returns the total bytes of the output data from the stream.
Returns the type library file path.
Returns the type library major version.
Returns the type library minor version.
Returns the type library version.
Returns the type of the internal object.
Returns the unicode character at the given offset, or -1 if none.
Returns the value as an Integer.
Returns the value associated to a given key, and deserialize it.
Returns the value of +Infinity
Returns the value of -0
Returns the value of -Infinity
Returns the value of NaN
Returns the value of the last expression evaluated in the block.
Returns this request as a DER-encoded string
Returns true for IPv4 loopback address (127.0.0.0/8).
Returns true for IPv4 multicast address (224.0.0.0/4).
Returns true for IPv4-compatible IPv6 address (::/80).
Returns true for IPv4-mapped IPv6 address (::ffff:0:0/80).
Returns true for IPv6 link local address (ff80::/10).
Returns true for IPv6 loopback address (::1).
Returns true for IPv6 multicast address (ff00::/8).
Returns true for IPv6 multicast global scope address.
Returns true for IPv6 multicast link-local scope address.
Returns true for IPv6 multicast node-local scope address.
Returns true for IPv6 multicast organization-local scope address.
Returns true for IPv6 multicast site-local scope address.
Returns true for IPv6 site local address (ffc0::/10).
Returns true for IPv6 unique local address (fc00::/7, RFC4193).
Returns true for IPv6 unspecified address (::).
Returns true if it does, and false if the code indicates success or a warning.
Returns true if it succeeded, false otherwise
Returns true if the datetime metadata matches
Returns true if the key is present.
Returns true if the object is something that is best considered a Datetime or Timedelta, false otherwise.
Returns true if the object is something that is best considered a Datetime, false otherwise.
Returns true if the object is something that is best considered a Timedelta, false otherwise.
Returns true if the stream is closed.
Returns true if the stream is finished.
Returns true iff there is more data in the string.
Returns true otherwise.
Returns true to the fake Closure's __invoke
Returns true:  acquired the thread shield false: the thread shield was destroyed and no other threads waiting nil:   the thread shield was destroyed but still in use
Returns untrustworthy value on Win32/64.
Returns value of PyMapping_GetItemString but as a borrowed reference instead of a new reference.
Returns with 0 if not possible.
Returns with error when an invalid argument is passed.
Returns with the othercase.
Returns zero for null or garbage string.
Returns zero if no information available.
Returns zero if successful.
Returns:  0    Successful transformation.
Returns: 0 (success), -1 (integer overflow).
Returns: FAILURE/SUCCESS whether the input was correct (i.e. no range errors)
Reuse an existing one if present.
Reuse old pages where possible.
Reuse one of those pages.
Reuse the "use" set, as we no longer need it
Reuse the function descriptor if possible.
Reuse the same variable number as the prior appearance of the same name, or if the name has never appeared before, reuse the same variable number
Reusing an nonce ruins the security gurantees of GCM mode.
Reverse any negative strides
Reverse any negative strides of operand A
Reverse axis, since the iterator treats them that way
Reverse order to pop values off ctxt stack
Reverse the order of IN operators
Reverse the qd-array, if warranted.
Reverse unordered SELECTs
Revert a one dimensional array in-place  Return 0 on success, other value on failure
Reverting stack is needed.
Revision 1.5  2001/09/29 21:58:05  danda adding cvs log to history section  10/15/2000 -- danda -- adding robodoc documentation TODO Nicer external API.
Rewind the VDBE back to the beginning in preparation for running it.
Rewinddir resets the string pointer to the start
Richard Hanson, Sandia National Labs.
Richard Stevens p 298.
Right after that, the writer decided to wrap around to the start of the log.
Right alphanum vs left general category
Right alphanum vs left particular category
Right and left size of LIKE operator
Right general category, left particular category
Right hand child expression
Right hand serial type
Right hand side of comparison
Right now, there isn't any reason not to allow it.
Right side of comparison
Right space vs left general category
Right space vs left particular category
Right subtree (larger entries) or list
Right table being joined
Right thing to do, but it breaks some legacy code.
Right word vs left general category
Right word vs left particular category
Right-child page number (or 0)
Right-hand Fts5SegIter
Rm and Rd must not be the same register.
Roll the date to a business day
Rollback a transaction
Rollback all database files.
Rollback any active transaction and free the handle structure.
Rollback the transaction in progress.
Root BTree node for this table (see note above)
Root BTree page for this table
Root can execute any file that has any one of the execute bits set.
Root can read or write any file.
Root node of rtree structure
Root node of the tree.
Root node of tree for this task
Root of NEAR expression
Root of NEAR/AND cluster
Root of current AND/NEAR cluster
Root of the input tree
Root page number of the table to be locked
Root page of PK index
Root page of current object
Root page of scanned b-tree
Root page of table to open
Root page of the open btree cursor
Rootpage of table being initialized
Rosh Ha-Shanah   The first day of the Jewish year (Tishri 1).
Rotate subkeys and do compression permutation.
Rotate the matrix if it is lower bidiagonal.
Rotates an image by 180 degrees (counter clockwise)
Rotates an image by 270 degrees (counter clockwise)
Rotates an image by 90 degrees (counter clockwise)
Rotation is separate from addition to prevent recomputation.
Round down to the nearest multiple of 8
Round from the left hand side of the digits.
Round nByte up to the next valid power of two
Round relatively from the decimal point.
Round the union size down to the nearest pointer boundary, since that's how  it will be aligned within the Bitvec struct.
Round to NUMCOLORS levels of antialiasing for index color images since only 256 colors are available.
Round to the desired number of digits.
Round up a number to the next larger multiple of 8.
Round up a request size to the next valid allocation size.
Round up request size to allocation size
Round up the structure size to 16-byte boundary
Rounding is performed as necessary, as specified by BigDecimal.mode.
Rounding mode setting
Rounds 0 to 15 (unrolled):
Rounds a number to a certain number of decimal places in a certain rounding mode.
Rounds up m(plus one to final digit of m).
Routine for en/decoding data
Routine needed to support the testcase() macro.
Routine sqlite3AlterFinishAddColumn() will be called to complete coding the "ALTER TABLE ...
Routine to run in a separate thread
Routine to transform a unixFile into a proxy-locking unixFile.
Routines called by the parser as the column definition is parsed (i.e. sqlite3AddColumn()) add the new Column data to  the copy.
Routines for varint serialization and deserialization.
Routines in other files are for internal use by SQLite and should not be accessed by users of the library.
Routines to implement min() and max() aggregate functions.
Routines to implement the count() aggregate function.
Routines to read and write variable-length integers.
Routines to read or write a two- and four-byte big-endian integer values.
Routines used to compute the sum, average, and total.
Routines with file scope above.
Row (or column) of contribution weights
Row and column exchange.
Row is being deleted from this table
Row-major ever since gd 1.3
RowSetEntry objects are allocated in large chunks (instances of the following structure) to reduce memory allocation overhead.
Rowid argument passed to stat_push()
Rowid being deleted by OP_Delete
Rowid changed in a normal table
Rowid for current doc being written
Rowid for current entry
Rowid for record being decoded
Rowid for the inserted record
Rowid iRowid has just been appended to the current leaf page.
Rowid in main table of the key
Rowid in sqlite_sequence
Rowid is stored in this register, if not zero
Rowid of final block in segment (or 0)
Rowid of final leaf block to traverse
Rowid of first leaf block to traverse
Rowid of last value written
Rowid of row about to be deleted/updated
Rowid of the next row to insert
Rowid that P1 current points to
Rowid used for the averages record
Rowids are inserted into the RowSet in an arbitrary order.
Rows are coming out in undetermined order.
Rows are extracted from the Queue table one by one.
Rows come from source in GROUP BY order
Rows less than the lower bound
Rows less than the upper bound
Rows processed for all objects
Rows processed for current object
Rows visited by (pFrom+pWLoop)
Rows with NULL values stored in PRIMARY KEY fields may not be updated or deleted.
Rows within the changeset and changegroup are identified by the values in their PRIMARY KEY columns.
Rowset of rows to be updated
Rtree virtual table module xBestIndex method.
Rtree virtual table module xClose method.
Rtree virtual table module xColumn method.
Rtree virtual table module xConnect method.
Rtree virtual table module xCreate method.
Rtree virtual table module xDestroy method.
Rtree virtual table module xDisconnect method.
Rtree virtual table module xEof method.
Rtree virtual table module xFilter method.
Rtree virtual table module xNext method.
Rtree virtual table module xOpen method.
Rtree virtual table module xRowid method.
Ruby 1.9 chooses that the methods behaves fiber-local to save following idiom for dynamic scope.
Ruby BigDecimal(Variable decimal precision) extension library.
Ruby ensures this by preventing instantiation and duplication.
Ruby may support following resources.
Ruby must not switch to other thread until storing terminated_machine_stack
Ruby provides following types of +clock_id+ if available.
Ruby source files should declare its script encoding by a magic comment even when they only depend on US-ASCII strings or regular expressions.
Ruby threads are scheduled by OS thread scheduler.
Ruby to ASN1 converters
Ruby will convert pathnames between different operating system conventions if possible.
Ruby will use this internal encoding to transcode the data when it is read from the IO object.
Ruby's default implementation is to add the constants, methods, and module variables of this module to _mod_ if this module has not already been added to _mod_ or one of its ancestors.
Ruby's default implementation is to overlay the constants, methods, and module variables of this module to _mod_ if this module has not already been added to _mod_ or one of its ancestors.
Ruby's end of the pipe will be passed as a parameter to the block.
Rules:  For non-TEMP databases, always sync to disk.
Run a checkpoint on database iDb.
Run a checkpoint on the Btree passed as the first argument.
Run a separate WHERE clause for each term of the OR clause.
Run convergence test in backward direction First apply standard test to top of matrix
Run convergence test in forward direction First apply standard test to bottom of matrix
Run internal checks to ensure that the FTS index (a) is internally  consistent and (b) contains entries for which the XOR of the checksums as calculated by sqlite3Fts5IndexEntryCksum() is cksum.
Run out of points before 3 unique points found.
Run the BEFORE and INSTEAD OF triggers, if there are any
Run the actual search
Run the constructor if there is one
Run the integrity-check.
Run the next matching operation
Run the parser and code generator recursively in order to generate code for the SQL statement given onto the end of the pParse context currently under construction.
Run the parser on the given SQL string.
Run the progress counter just before returning.
Run through the tokenchars.
Run time client version
Run your data through this.
Run-cost of the new entry
Run-length encode the result
Run-time limits are intended for use in applications that manage both their own internal database and also databases that are controlled by untrusted external sources.
Running a read-statement here to ensure that doing so does not interfere with the "capture" process below.
Runs the VM finalization processes as well as ruby_finalize(), and frees resources used by the VM.
Runs the VM finalization processes.
Runtime cache relies on bound scope to be immutable, hence we need a separate rt cache in case scope changed
S       (output) DOUBLE PRECISION array, dimension (min(M,N)) The singular values of A in decreasing order.
S       (output) REAL array, dimension (min(M,N)) The singular values of A in decreasing order.
S       (workspace) REAL array, dimension (N1 + 1)*K Will contain the eigenvectors of the repaired matrix which will be multiplied by the previously accumulated eigenvectors to update the system.
S      (input) DOUBLE PRECISION array, dimension ( N ).
S      (input) REAL array, dimension ( N ).
S Closing zip archive failed
S Failure to create temporary file
S Renaming temporary file failed
SAPI Deactivate is called from two places: module init and request shutdown 2.
SAPI method returns an emalloc()'d string
SAPI related shutdown (free stuff)
SBDSDC can be used to compute all singular values, and optionally, singular vectors or singular vectors in compact form.
SCALE   (input) DOUBLE PRECISION array, dimension (N) Details of the permutation and scaling factors, as returned by DGEBAL.
SCALE   (input) DOUBLE PRECISION array, dimension (N) Details of the permutation and scaling factors, as returned by ZGEBAL.
SCALE   (input) REAL array, dimension (N) Details of the permutation and scaling factors, as returned by CGEBAL.
SCALE   (input) REAL array, dimension (N) Details of the permutation and scaling factors, as returned by SGEBAL.
SCALE   (input/output) DOUBLE PRECISION On entry, the value  scale  in the equation above.
SCALE   (input/output) REAL On entry, the value  scale  in the equation above.
SCALE   (output) DOUBLE PRECISION The scale factor that B must be multiplied by to insure that overflow does not occur when computing X.
SCALE   (output) DOUBLE PRECISION array, dimension (N) Details of the permutations and scaling factors applied to A.
SCALE   (output) REAL The scale factor that B must be multiplied by to insure that overflow does not occur when computing X.
SCALE   (output) REAL array, dimension (N) Details of the permutations and scaling factors applied to A.
SCALE and SUMSQ are overwritten by scl and ssq respectively.
SCALE_MIN is the minimum scale for the result.
SCALE_MIN is the minimum scale of the result.
SCALE_MIN is to set the minimum scale of the result.
SCC with a single element
SCRIPT_NAME set to a URL path that could identify the CGI script rather than the interpreter.
SDBM actually uses two physical files, with extensions '.dir' and '.pag'.
SEE ALSO XMLRPC_AddValueToVector () SOURCE
SEE ALSO XMLRPC_CleanupValue () XMLRPC_VALUE SOURCE
SEE ALSO XMLRPC_CreateValueEmpty () XMLRPC_SetIsVector () XMLRPC_GetValueType () XMLRPC_GetVectorType () XMLRPC_VALUE XMLRPC_VECTOR_TYPE XMLRPC_VALUE_TYPE SOURCE
SEE ALSO XMLRPC_GetDefaultIdCase () SOURCE
SEE ALSO XMLRPC_GetDefaultIdCaseComparison () SOURCE
SEE ALSO XMLRPC_GetResponseFaultCode () SOURCE
SEE ALSO XMLRPC_GetResponseFaultString () SOURCE
SEE ALSO XMLRPC_GetValueBase64 () XMLRPC_CreateValueBase64 () XMLRPC_VALUE SOURCE
SEE ALSO XMLRPC_GetValueDateTime_ISO8601 () XMLRPC_CreateValueDateTime_ISO8601 () XMLRPC_CreateValueDateTime () XMLRPC_VALUE SOURCE
SEE ALSO XMLRPC_GetValueFaultCode () SOURCE
SEE ALSO XMLRPC_GetValueFaultString () SOURCE
SEE ALSO XMLRPC_REQUEST_ToXML () XMLRPC_REQUEST_FromXML () XMLRPC_Free () XMLRPC_VALUE_ToXML () XMLRPC_REQUEST SOURCE
SEE ALSO XMLRPC_REQUEST_ToXML () XMLRPC_VALUE_FromXML () XMLRPC_Free () XMLRPC_VALUE SOURCE
SEE ALSO XMLRPC_REQUEST_ToXML () XMLRPC_VALUE_FromXML () XMLRPC_REQUEST SOURCE
SEE ALSO XMLRPC_RequestGetError () SOURCE
SEE ALSO XMLRPC_RequestNew () XMLRPC_CleanupValue () SOURCE
SEE ALSO XMLRPC_RequestSetError () XMLRPC_RequestFree () SOURCE
SEE ALSO XMLRPC_ServerAddIntrospectionData () SOURCE
SEE ALSO XMLRPC_ServerAddIntrospectionData () XMLRPC_IntrospectionCreateDescription () SOURCE
SEE ALSO XMLRPC_ServerAddIntrospectionData () XMLRPC_ServerRegisterIntrospectionCallback () XMLRPC_CleanupValue () SOURCE
SEE ALSO XMLRPC_ServerCallMethod () XMLRPC_ServerRegisterMethod () SOURCE
SEE ALSO XMLRPC_ServerCreate () SOURCE
SEE ALSO XMLRPC_ServerFindMethod () XMLRPC_ServerCallMethod () SOURCE
SEE ALSO XMLRPC_SetDefaultIdCase () SOURCE
SEE ALSO XMLRPC_SetDefaultIdCaseComparison () SOURCE
SEE ALSO XMLRPC_SetValue* XMLRPC_CreateValue* XMLRPC_Append* SOURCE
SEE ALSO XMLRPC_SetValueBase64 () XMLRPC_CreateValueBase64 () NOTES Call XMLRPC_GetValueStringLen() to retrieve real length of binary data.
SEE ALSO XMLRPC_SetValueDateTime_IOS8601 () XMLRPC_GetValueDateTime () XMLRPC_CreateValueDateTime_IOS8601 () SOURCE
SEE ALSO XMLRPC_VALUE_ToXML () XMLRPC_REQUEST_FromXML () XMLRPC_VALUE SOURCE
SEE ALSO XMLRPC_VectorNext () SOURCE
SEE ALSO simplestring_init () SOURCE
SELECT can't initiate uncommitted DML.
SELECT from sessionSelectStmt()
SELECT max(x) FROM ...
SELECT may not be DISTINCT
SELECT may not be a compound query
SELECT may not have a GROUP BY clause
SELECT may not have a LIMIT clause
SELECT may not have a WHERE clause
SELECT may not have an ORDER BY clause
SELECT rowid FROM x ...
SELECT rowid, * FROM ...
SELECT statement from sessionSelectRow()
SELECT statement in which to make substitutions
SELECT statement or RHS of INSERT INTO SELECT ...
SELECT statement to encode
SELECT statement to query table pTab
SELECT statements to the left always skip this part.
SELECT statment or RHS of INSERT INTO ..
SELECT to the right of IN operator
SELECT used to determine types and collations
SELECT" statement), it is advantageous to leave the cursor pointing to the last entry in the b-tree if possible.
SELECTTRACE_ENABLED will be either 1 or 0 depending on whether or not the Select query generator tracing logic is turned on.
SEND_UNPACK may acquire references into the array
SERVER_NAME should also be defined at this stage..but better check it anyway
SET clause for UPDATE.
SET reads 4 input bytes in little-endian byte order and stores them in a properly aligned word in host byte order.
SETNULL means that the foreign key is set to NULL.
SETUP-INVARIANT above
SET_FLAGS must be 0x100000 as it is also the value of S bit (can be used for optimization).
SET_STACK_END must be called in this function because the stack frame of this function may contain callee save registers and they should be marked.
SETs and SEQUENCEs may use an infinite length encoding, but also primitive types such as e.g. OCTET STRINGS or BIT STRINGS may leverage this functionality (cf.
SGEMM requires all arrays to be contiguous along the leading dimension.
SHA-1 calculates a digest of 160 bits (20 bytes).
SHA-256/384/512 Machine Architecture Definitions
SHA-256/384/512 Various Length Definitions
SHA-XYZ INITIAL HASH VALUES AND CONSTANTS
SHA1 initialization constants
SHA1:: See FIPS 180 Secure Hash Standard.
SHA1_Init - Initialize new context
SHA256-based Unix crypt implementation.
SHA2_UNROLL_TRANSFORM
SHA384 uses the exact same algorithm
SHA512-based Unix crypt implementation.
SHARED to be allocated by the callback
SHARED_SIZE is selected so that all locks will fit on a single page even at the minimum page size.
SHARED_SIZE is the number of bytes available in the pool from which a random byte is selected for a shared lock.
SHIFT_TEMPS must be included in the variables of any routine using RIGHT_SHIFT.
SHM was reinitialized.
SHUTTERSPEED comes after EXPOSURE TIME
SIB byte required to avoid RIP based addressing.
SID constant is defined when non-cookie ID is used
SIGMA  (output) DOUBLE PRECISION Sum of shifts used in current segment.
SIGMA  (output) DOUBLE PRECISION The computed lambda_I, the I-th updated eigenvalue.
SIGMA  (output) REAL Sum of shifts used in current segment.
SIGMA  (output) REAL The computed lambda_I, the I-th updated eigenvalue.
SIGNED_VALUE and Fixnum have same sign-bits, same order
SIGSEGV handler might have a very small stack.
SIZE    DESCRIPTION 2     Byte offset of the next freeblock 2     Bytes in this freeblock  Cells are of variable length.
SIZE    DESCRIPTION 4     Page number of next overflow page Data  Freelist pages come in two subtypes: trunk pages and leaf pages.
SJIStoJIS() is sjis2jis() by Ken Lunde.
SKIP passes back the next starting point explicitly, but if it is no greater than the match we have just done, treat it as NOMATCH.
SKIPZERO skips the bracket.
SLAED1 handles the case in which all eigenvalues and eigenvectors of a symmetric tridiagonal matrix are desired.
SLAED1 is used only for the full eigensystem of a tridiagonal matrix.
SLAED7 handles the case in which eigenvalues only or eigenvalues and eigenvectors of a full symmetric matrix (which was reduced to tridiagonal form) are desired.
SLAED7 handles the cases in which eigenvalues only or eigenvalues and eigenvectors of a full symmetric matrix (which was reduced to tridiagonal form) are desired.
SLAHQR works primarily with the Hessenberg submatrix in rows and columns ILO to IHI, but applies transformations to all of H if WANTT is .TRUE..
SLAMC1 returns the parameters  LBETA, LT, LRND and LIEEE1.
SLASD1 is called from SLASD0.
SLASD2 is called from SLASD1.
SLASD3 is called from SLASD1.
SLASD6 is called from SLASDA.
SLASD7 is called from SLASD6.
SLASD8 is called from SLASD6.
SLJIT_ARGUMENT_CHECKS
SLJIT_CONFIG_UNSUPPORTED
SLJIT_EXECUTABLE_ALLOCATOR
SLJIT_REWRITABLE_JUMP is 0x1000.
SLJIT_SINGLE_THREADED
SLJIT_UTIL_GLOBAL_LOCK
SMALLEST extracts the least value from the RowSet.
SMIN    (input) DOUBLE PRECISION The desired lower bound on the singular values of A.
SMIN    (input) REAL The desired lower bound on the singular values of A.
SMLSIZ (input) INTEGER On entry, maximum size of the subproblems at the bottom of the computation tree.
SMLSIZ (input) INTEGER The maximum size of the subproblems at the bottom of the computation tree.
SN      (output) DOUBLE PRECISION The sine of the rotation.
SN      (output) REAL The sine of the rotation.
SNL     (output) DOUBLE PRECISION CSL     (output) DOUBLE PRECISION The vector (CSL, SNL) is a unit left singular vector for the singular value abs(SSMAX).
SNL     (output) REAL CSL     (output) REAL The vector (CSL, SNL) is a unit left singular vector for the singular value abs(SSMAX).
SNMP_CMD_GET SNMP_CMD_GETNEXT SNMP_CMD_WALK
SNPRINTF.C fjc 7-31-97 Modified by Mib Software to be a standalone snprintf.c module.
SNR     (output) DOUBLE PRECISION CSR     (output) DOUBLE PRECISION The vector (CSR, SNR) is a unit right singular vector for the singular value abs(SSMAX).
SNR     (output) REAL CSR     (output) REAL The vector (CSR, SNR) is a unit right singular vector for the singular value abs(SSMAX).
SOAP 1.2 enc:id enc:ref
SOAP client calls this function to parse response from SOAP server
SOCKS5, if supported, additionally provides authentication so only authorized users may access a server.
SOCK_CLOEXEC is available since Linux 2.6.27.
SO_BROADCAST is only applicable for UDP
SP in ucontext is not decremented yet when `push` failed, so the fault page can be the next.
SPACE and PXSPACE, 2nd value redundant
SQL Collation sequence name (eg.
SQL error or missing database
SQL function arguments to VXPrintf
SQL function call context
SQL function return value
SQL functions are initially coded as OP_Function0 with P4 pointing to a FuncDef object.
SQL functions used for testing and debugging
SQL is translated into a sequence of instructions to be executed by a virtual machine.
SQL name of the function.
SQL statement 1 (see above)
SQL statement 2 (see above)
SQL statement pSelect is as generated by the sessionSelectRow() function.
SQL statement passed to declare_vtab()
SQL statement to delete rows
SQL statement, UTF-16 encoded
SQL statement, UTF-8 encoded
SQL used to determine first block
SQL used to determine iAbsLevel
SQL used to determine nLeafEst
SQL used to find output index
SQL-style comments from "--" to end of line
SQLITE_ACCESS_READONLY: Return 1 if the file is readable.
SQLITE_AFF_BLOB: No-op.
SQLITE_AFF_NONE: No-op.
SQLITE_AFF_TEXT: Convert pRec to a text representation.
SQLITE_BUSY is  returned when there is already a read-lock in order to avoid a deadlock.
SQLITE_BUSY is returned if the database is locked.
SQLITE_BUSY is returned in this case.
SQLITE_CHANGESET_REPLACE may only be returned if the second argument passed to the conflict handler is either SQLITE_CHANGESET_DATA or SQLITE_CHANGESET_CONFLICT.
SQLITE_CHECKPOINT_* value
SQLITE_CONFIG_WIN32_HEAPSIZE takes a 32-bit unsigned integer value that specifies the maximum size of the created heap.
SQLITE_DEBUG - the sqlite3AssertMayAbort() function
SQLITE_DENY means that the SQL statement will never-run - the sqlite3_exec() call will return with an error.
SQLITE_ENABLE_COLUMN_METADATA
SQLITE_ENABLE_COLUMN_USED_MASK
SQLITE_ENABLE_CURSOR_HINTS
SQLITE_ENABLE_DBSTAT_VTAB
SQLITE_ENABLE_EXPENSIVE_ASSERT
SQLITE_ENABLE_EXPLAIN_COMMENTS is incompatible with SQLITE_OMIT_EXPLAIN
SQLITE_ENABLE_LOCKING_STYLE
SQLITE_ENABLE_MEMORY_MANAGEMENT
SQLITE_ENABLE_MEMSYS3
SQLITE_ENABLE_MEMSYS5
SQLITE_ENABLE_PREUPDATE_HOOK
SQLITE_ENABLE_SNAPSHOT
SQLITE_ENABLE_STAT3_OR_STAT4
SQLITE_ENABLE_STMT_SCANSTATUS
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION
SQLITE_IGNORE means that the SQL statement should run but attempts to read the specified column will return NULL and attempts to write the column will be ignored.
SQLITE_IGNORE_AFP_LOCK_ERRORS
SQLITE_IGNORE_FLOCK_LOCK_ERRORS
SQLITE_INSERT, UPDATE or DELETE
SQLITE_IOCAP_POWERSAFE_OVERWRITE
SQLITE_MAX_U32 is a u64 constant that is the maximum u64 value that can be stored in a u32 without loss of data.
SQLITE_MUTEX_NOOP         For single-threaded applications.
SQLITE_MUTEX_PTHREADS
SQLITE_MUTEX_PTHREADS     For multi-threaded applications on Unix.
SQLITE_MUTEX_W32          For multi-threaded applications on Win32.
SQLITE_NOMEM  is returned if a malloc attempt fails.
SQLITE_NOMEM is returned if we run out of memory.
SQLITE_NOMEM may be returned if a malloc() fails during conversion between formats.
SQLITE_NULLEQ is clear and at least one operand is NULL, then the result is always NULL.
SQLITE_NULLEQ or zero
SQLITE_OK if everything works, SQLITE_NOMEM if a malloc failure occurs, or SQLITE_ERROR if a parse error is encountered.
SQLITE_OK is returned even if we reach end-of-file.
SQLITE_OK is returned if an error occurs, or an SQLite error code  otherwise.
SQLITE_OK is returned if everything goes according to plan.
SQLITE_OK is returned if no error occurs (even if the mapping is not recreated as a result of outstanding references) or an SQLite error code otherwise.
SQLITE_OK is returned if no error occurs, otherwise an SQLite error code.
SQLITE_OK is returned if no error occurs.
SQLITE_OK is returned if successful or an SQLite error  code otherwise.
SQLITE_OK is returned if successful, or SQLITE_NOMEM if an OOM error occurs.
SQLITE_OK is returned if successful, or SQLITE_NOMEM if an error occurs.
SQLITE_OK is returned if successful, or an SQLite error code otherwise.
SQLITE_OK is returned if successful, or if an error occurs while saving a cursor position, an SQLite error code.
SQLITE_OK is returned if successful, otherwise an SQLite error code.
SQLITE_OK is returned if the call completes without error.
SQLITE_OK is returned if the conversion is successful (or not required).
SQLITE_OK is returned if the lock is added successfully.
SQLITE_OK is returned if the operation is successfully executed.
SQLITE_OK is returned if the segment is updated successfully.
SQLITE_OK is returned in this case.
SQLITE_OK is returned on success, or an SQLite error code otherwise.
SQLITE_OK is returned on success, otherwise an error code.
SQLITE_OK is returned on success.
SQLITE_OMIT_AUTHORIZATION
SQLITE_OMIT_AUTOINCREMENT
SQLITE_OMIT_AUTOMATIC_INDEX
SQLITE_OMIT_BETWEEN_OPTIMIZATION
SQLITE_OMIT_BTREECOUNT
SQLITE_OMIT_BUILTIN_TEST
SQLITE_OMIT_COMPILEOPTION_DIAGS
SQLITE_OMIT_COMPOUND_SELECT
SQLITE_OMIT_DEPRECATED
SQLITE_OMIT_FLAG_PRAGMAS
SQLITE_OMIT_FLOATING_POINT
SQLITE_OMIT_GET_TABLE
SQLITE_OMIT_HEX_INTEGER
SQLITE_OMIT_INTEGRITY_CHECK
SQLITE_OMIT_LIKE_OPTIMIZATION
SQLITE_OMIT_LOAD_EXTENSION
SQLITE_OMIT_LOCALTIME
SQLITE_OMIT_LOOKASIDE
SQLITE_OMIT_OR_OPTIMIZATION
SQLITE_OMIT_PAGER_PRAGMAS
SQLITE_OMIT_QUICKBALANCE
SQLITE_OMIT_SCHEMA_PRAGMAS
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
SQLITE_OMIT_SHARED_CACHE
SQLITE_OMIT_TRUNCATE_OPTIMIZATION
SQLITE_OMIT_VIRTUALTABLE
SQLITE_OPEN_EXCLUSIVE is used to make sure that a new file is  created.
SQLITE_OPEN_EXCLUSIVE is used to make sure that a new file is created.
SQLITE_OS_WIN_THREADS
SQLITE_PRINTF flags below
SQLITE_PRINTF_* flags
SQLITE_RBU_STATE_CHECKPOINT: RBU is currently performing an incremental checkpoint.
SQLITE_RBU_STATE_DONE: The RBU operation has finished.
SQLITE_RBU_STATE_ERROR: An error has occurred.
SQLITE_RBU_STATE_MOVE: RBU has finished building the *-oal file.
SQLITE_SO_ASC or SQLITE_SO_DESC
SQLITE_STATUS_MALLOC_COUNT
SQLITE_STATUS_MALLOC_SIZE
SQLITE_STATUS_MEMORY_USED
SQLITE_STATUS_PAGECACHE_OVERFLOW
SQLITE_STATUS_PAGECACHE_SIZE
SQLITE_STATUS_PAGECACHE_USED
SQLITE_STATUS_PARSER_STACK
SQLITE_STATUS_SCRATCH_OVERFLOW
SQLITE_STATUS_SCRATCH_SIZE
SQLITE_STATUS_SCRATCH_USED
SQLITE_SYNC_NORMAL means to do an ordinary fsync() call.
SQLITE_TEST_REALLOC_STRESS is generally used during testing only.
SQLITE_UPDATE, DELETE or INSERT
SQLITE_USER_AUTHENTICATION
SQLITE_USE_FCNTL_TRACE
SQLITE_UTF16 is not used internally.
SQLITE_UTF8, SQLITE_UTF16BE or UTF16LE
SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE
SQLITE_WIN32_FILEMAPPING_API
SQLITE_WIN32_HAS_ANSI
SQLITE_WITHOUT_MSIZE        Set this symbol to disable the use of _msize() on windows systems.
SQLITE_WITHOUT_ZONEMALLOC   Some older macs lack support for the zone memory allocator.
SQLSpecialColumns values
SQLT_CHR is the default value when type was not specified
SQL_SELECT_MXLEVEL Return the largest relative level in the FTS index or indexes.
SQLite assumes that xFullPathname() nul-terminates the output buffer even if it returns an error.
SQLite calls this  routine to find out if it has reached the end of a result set.
SQLite calls this function immediately after a call to unixDlSym() or unixDlOpen() fails (returns a null pointer).
SQLite can be compiled with or without mutexes.
SQLite code assumes this function cannot fail.
SQLite connection to register module with
SQLite copies of the current page cache implementation into that object.
SQLite does not make this guarantee explicitly, but in practice there are always either more than 20 bytes of allocated space following the nNode bytes of contents, or two zero bytes.
SQLite does not really use these functions.
SQLite doesn't use it to indicate "exclusive access"  as it is usually understood.
SQLite doesn't use it to indicate "exclusive access" as it is usually understood.
SQLite expects that the sqlite3_file.pMethods element will be valid after xOpen returns regardless of the success or failure of the xOpen call.
SQLite function call context
SQLite happens to pass a pointer to this buffer when using xAccess() or xOpen() to operate on the *-wal file.
SQLite has a similar macro called ArraySize().
SQLite is strongly typed, but the typing is dynamic not static.
SQLite itself will never use anything near this amount.
SQLite makes no use of subtype itself.
SQLite makes the (reasonable) assumption that all bytes of a sector are written together by hardware.
SQLite never tries to read past the end of a rollback journal file
SQLite never uses the database page that contains the pending byte.
SQLite no longer uses thread-specific data so this routine is now a no-op.
SQLite only considers US-ASCII (or EBCDIC) characters.
SQLite processes all times and dates as Julian Day numbers.
SQLite processes all times and dates as julian day numbers.
SQLite provides the rowid of the row to delete, which can be used to find the leaf on which the entry resides (argument pLeaf).
SQLite scalar function context
SQLite sets the dataOnly flag if the size of the file is unchanged.
SQLite still works when you do this, but concurrency is reduced since only a single process can be reading the database at a time.
SQLite supports many different ways to resolve a constraint error.
SQLite used to support LinuxThreads.
SQLite uses dynamic typing for the values it stores.
SQLite uses this trick to improve the performance of CREATE INDEX commands.
SQLite value pRowid contains the rowid of a row that may or may not be present in the FTS3 table.
SQLite varints are big-endian are are limited to 9 bytes in length whereas FTS3 varints are little-endian and can be up to 10 bytes in length (in theory).
SQLite will never do either.
SQLite will never invoke xInit() more than once without an intervening call to xShutdown().
SQLite will not operate with these drivers.
SQLite will only access or modify this field while holding a particular static mutex. The application should never modify anything within the sqlite3_vfs object once the object has been registered.
SQLite will only request a recursive mutex in cases where it really needs one.
SQLite will still work with LinuxThreads provided that (1) there is no more than one connection  per database file in the same process and (2) database connections do not move across threads.
SQLite will typically create one cache instance for each open database file, though this is not guaranteed.
SQLite will unwind its stack and return an error.
SQLite will use read() and write() to access data beyond this point from now on.
SQLite will use the extra szExtra bytes on each page to store metadata about the underlying database page on disk.
SQLite's knowledge of upper and lower case equivalents extends only to the 26 characters used in the English language.
SQLite's versions are identical to the standard versions assuming a locale of "C".
SQRE   (input) INTEGER Specifies the column dimension of the bidiagonal matrix.
SQRT( QPTR(i+1) - QPTR(i) ) indicates the size of the block.
SRT_Coroutine   Generate a co-routine that returns a new row of results each time it is invoked.
SRT_Discard     Throw the results away.
SRT_Fifo        This is like SRT_EphemTab except that the table is assumed to already be open.
SRT_Fifo has the additional property of being able to ignore the ORDER BY clause.
SRT_Mem         Only valid if the result is a single column.
SRT_Output      Generate a row of output (using the OP_ResultRow opcode) for each row in the result set.
SRT_Set         The result must be a single column.
SSA construction, Step 1: Propagate "def" sets in merge points
SSA construction, Step 2: Phi placement based on Dominance Frontiers
SSA construction, Step 3: Renaming
SSE2 and immediate is not possible.
SSL certificates must be initialized before listening ports.
SSL config for this request
SSL is a protocol which is sequence of records.
SSL terminated (but socket may still be active)
SSLSocket#connect must be called to initiate the SSL handshake and start encryption.
SSL_CTX_set1_curves_list() accepts NIST names
SSMAX   (output) DOUBLE PRECISION The larger singular value.
SSMAX   (output) DOUBLE PRECISION abs(SSMAX) is the larger singular value.
SSMAX   (output) REAL The larger singular value.
SSMAX   (output) REAL abs(SSMAX) is the larger singular value.
SSMIN   (output) DOUBLE PRECISION The smaller singular value.
SSMIN   (output) DOUBLE PRECISION abs(SSMIN) is the smaller singular value.
SSMIN   (output) REAL The smaller singular value.
SSMIN   (output) REAL abs(SSMIN) is the smaller singular value.
SSTH Exception: IS_LONG may be accepted as IS_DOUBLE (converted)
SSTH Exception: IS_LONG may be accepted instead as IS_DOUBLE
STACK_DIRECTION undefined
STACK_TOP is set by THEN.
START   (input) DOUBLE PRECISION The starting point for determining EMIN.
START   (input) REAL The starting point for determining EMIN.
STAT3 and STAT4 have a parameter on this routine.
STEP 10: SIZING AND POSITIONING ABSOLUTE CHILDREN
STEP 11: SETTING TRAILING POSITIONS FOR CHILDREN
STEP 1: CALCULATE VALUES FOR REMAINDER OF ALGORITHM
STEP 1: Look for an entry of the correct size in either the small chunk table or in the large chunk hash table.
STEP 2: DETERMINE AVAILABLE SIZE IN MAIN AND CROSS DIRECTIONS
STEP 2: Try to satisfy the allocation by carving a piece off of the end of the master chunk.
STEP 3:   Loop through the entire memory pool.
STEP 3: DETERMINE FLEX BASIS FOR EACH ITEM
STEP 4: COLLECT FLEX ITEMS INTO FLEX LINES Indexes of children that represent the first and last items in the line.
STEP 5: RESOLVING FLEXIBLE LENGTHS ON MAIN AXIS Calculate the remaining available space that needs to be allocated.
STEP 7: CROSS-AXIS ALIGNMENT We can skip child alignment if we're just measuring the container.
STEP 8: MULTI-LINE CONTENT ALIGNMENT
STEP 9: COMPUTING FINAL DIMENSIONS
STRACCUM_NOMEM or STRACCUM_TOOBIG
STRD1  (input) INTEGER STRD2  (input) INTEGER These are the strides to be taken through the array A.
STREAM-START is expected.
SUCCESS or FAILURE is returned and pphar is set to a pointer to the phar's manifest
SUMMARY  Writing a transaction containing a large number of operations on  b-tree indexes that are collectively larger than the available cache memory can be very inefficient.
SUMMARY:  Formatting is important to scripts that scan this file.
SUMSQ   (input/output) DOUBLE PRECISION On entry, the value  sumsq  in the equation above.
SUMSQ   (input/output) REAL On entry, the value  sumsq  in the equation above.
SUS contains POSIX and clock_gettime is defined in the POSIX part.
SUS defines CLOCKS_PER_SEC is 1000000.
SUS defines CLOCK_REALTIME mandatory but CLOCK_MONOTONIC, CLOCK_PROCESS_CPUTIME_ID and CLOCK_THREAD_CPUTIME_ID are optional.
SYNC_NORMAL or SYNC_FULL for checkpoint
SYNC_NORMAL or SYNC_FULL for wal writes
SYNC_NORMAL or SYNC_FULL otherwise
SYNONYM SUPPORT  Custom tokenizers may also support synonyms.
Saddle zone array consists of the following bits: SADDLE_SET  whether zone's saddle data has been set.
Safe C API: rb_thread_interrupted() - check interrupt flag ruby_xmalloc(), ruby_xrealloc(), ruby_xfree() - they will work without GVL, and may acquire GVL when GC is needed.
Safe to add conntype_option, since 2 args was illegal
Safe to call as if the resource were freed then doc pointer is NULL
Safety: if the error code is too big for the translation vector (which should not happen, but we all make mistakes), return REG_BADPAT.
Same as #path, but includes the absolute path.
Same as READ_UTF8() above but without the zTerm parameter.
Same as aData for leaves.
Same as above, except that this implementation works for WinRT.
Same as compile_stmt, but with early binding
Same as rb_funcallv but this function can call only public methods.
Same as ruby_script() but accepts a VALUE.
Same as the original.
Same for protocol, we don't support old protocol
Same input and output
Same logic, code as darwin_386.c:/inittls, except that words are 8 bytes long now, and the thread-local storage starts at 0x60 on Leopard / Snow Leopard.
Same logic, code as gcc_android_amd64.c:/inittls.
Same logic, code as gcc_darwin_386.c:/inittls.
Same order as indices
Same position as prev.
Same semantics as UNIX getcwd()
Same shape except dimension 0
Same use open(const char*,int,mode_t).
Same with OnigEncodingEUC_KR except the name
Sample random buckets until we hit one that is not empty.
Samples of the left-most key
Sanity check: Assert that the IntValue is non-negative if it exists
Sanity checking on calling parameters
Sanity checking on other operands
Sanity checking on the page.
Sanity checking:  The schema for the trigger and for the table are always defined.
Sanity checks should be handled by pcre_exec.
Save a little file size by not saving the alpha channel.
Save for checking forward references
Save for later completion
Save for possessive optimizing
Save g for this thread in C TLS
Save phar contents to disk  user_stub contains either a string, or a resource pointer, if len is a negative length.
Save previously registered signal handlers into orig_handlers
Save profiling information from this VDBE run.
Save start of previous item, in case we have to move it up in order to insert something before it.
Save the R registers that need to be reserved.
Save the S registers.
Save the best color numbers (plus 1) in the main cache array
Save the current cursor position in the variables BtCursor.nKey  and BtCursor.pKey.
Save the current state of the PRNG.
Save the current term so that it can be used to prefix-compress the next.
Save the current value of the database flags so that it can be  restored before returning.
Save the earliest consulted character, then skip to next op code
Save the file position of chunk index, and allocate enough space for each chunk_info block .
Save the flag and make sure then next arg is not the current flag.
Save the hash data for output:
Save the history in the specified file.
Save the left position
Save the length before padding.
Save the original values for the op_array, function table and class table
Save the position, write the index, restore position (paranoia).
Save the positions of all cursors (except pExcept) that are open on the table  with root-page iRoot.
Save the positions of all cursors (except pExcept) that are open on the table with root-page iRoot.
Save the positions of all other cursors open on this table.
Save the positions of any open cursors.
Save the positions of any other cursors open on this table before making any modifications.
Save the positions of any other cursors open on this table.
Save the result of the comparison for use by the next OP_Jump instruct.
Save the return address.
Save the transparent color.
Save time in the pre-compile phase
Save time/memory when chain isn't specified
Save value before bracket
Saved LIMIT and OFFSET
Saved State with SQLite
Saved key that was cursor last known position
Saved stack frames: Atomic blocks and asserts require reloading the values of private data when the backtrack mechanism performed.
Saved syscall error number
Saved value of the last insert ROWID
Savepoint name (nul-terminated)
Savepoints are added to the list by the vdbe OP_Savepoint instruction.
Saving previous accept variables.
Saving the previous value.
Saving the previous values.
Saving the real start pointer is necessary.
Say it's an OBJECT scalar if there's an error
Say that token is in fact "first", so that when the user inserts the document "I won 1st place" entries are added to the index for tokens "i", "won", "first" and "place".
Scalar SQL function implementations
Scalar and size 1 'repeat' arrays broadcast to any shape, for all other inputs the dimension must match exactly.
Scale X by 1/abs(x(j)).
Scale X so that its components are less than or equal to BIGNUM in absolute value.
Scale X to avoid overflow when updating the right-hand side.
Scale X(1,1) and X(1,2) to avoid overflow when updating the right-hand side.
Scale X(1,1) and X(2,1) to avoid overflow when updating the right-hand side.
Scale X(1,1) to avoid overflow when updating the right-hand side.
Scale by 1/CNORM(j) to avoid overflow when multiplying x(j) times column j.
Scale matrix norm down to BIGNUM.
Scale matrix norm up to SMLNUM
Scale matrix norm up to SMLNUM.
Scale matrix to allowable range, if necessary.
Scale submatrix in rows and columns L to LEND
Scale the column norms by 1/TSCAL for return.
Scale the column norms by TSCAL if the maximum element in CNORM is greater than BIGNUM/2.
Scale to 128 levels of alpha for gd use.
Scale up by power of radix nearest 1/SAFMIN**(1/3)
Scale up by power of radix nearest 1/SAFMIN**(2/3)
Scale x by (1/abs(x(j)))*abs(A(j,j))*BIGNUM to avoid overflow when dividing by A(j,j).
Scale x by (1/abs(x(j)))*abs(A(j,j))*BIGNUM.
Scale x by 1/(2*abs(x(j))).
Scale x if necessary to avoid overflow when adding a multiple of column j of A.
Scaled down version of printf(3).
Scaling up safe because D, Z, TAU scaled elsewhere to be O(1)
Scan a YAML-DIRECTIVE or TAG-DIRECTIVE token.
Scan a branch and compute the fixed length of subject that will match it, if the length is fixed.
Scan a floating point number
Scan a parenthesized group and compute the minimum length of subject that is needed to match it.
Scan a quoted scalar.
Scan a string up to width characters or whitespace.
Scan along the opcodes for this branch.
Scan an unsigned or signed integer.
Scan and parse any .ini files found in scan path if path not empty.
Scan compiled branch for non-emptiness      *
Scan compiled regex for auto-possession     *
Scan compiled regex for non-emptiness       *
Scan compiled regex for recursion reference  *
Scan compiled regex for specific bracket    *
Scan definitions for sqlite3_stmt_scanstatus()
Scan for smallest D(I)
Scan for smallest D(I).
Scan further character sets for match       *
Scan given buffer and fetch the value of the given variable.
Scan indentation spaces and line breaks for a block scalar.
Scan multiple terms in the main index
Scan past any delimiter characters before the start of the next token.
Scan past delimiter characters
Scan query (fts5vocab)
Scan the JPEG headers.
Scan the TAG directive value.
Scan the VERSION directive value.
Scan the additional block scalar indicators.
Scan the block scalar content.
Scan the character value.
Scan the column type name zType (length nType) and return the associated affinity type.
Scan the directive name.
Scan the leading line breaks and determine the indentation level if needed.
Scan the list to check for duplicates.
Scan the names of the columns of the table to be indexed and load the column indices into the Index structure.
Scan the pattern, compiling it into the a vector.
Scan the rest of the tag.
Scan the table of verb names
Scan the value from the temporary buffer.
Scan the value of VERSION-DIRECTIVE.
Scan the value of a TAG-DIRECTIVE token.
Scan the version number of VERSION-DIRECTIVE.
Scan through the expression pExpr.
Scan to write OP_Explain opcode for
Scan user-defined mime types first, in case user wants to override default mime types.
Scan visits at most 1 row
Scanner scans file for tokens and passes them to parser.
Scanning the necessary info.
Scans one byte and returns it.
Scans one character and returns it.
Scenario (b) may only occur if the process is holding no other file descriptors open on the same file.
Schema containing the table
Schema containing the trigger
Schema containing this index
Schema format version for this file
Schema name of attached database
Schema name of database to vacuum
Schema objects are automatically deallocated when the last Btree that references them is destroyed.
Schema of database iDb
Schema of the expression
Schema of the terms table.
Schema of the tokenizer table.
Schema that contains this table
Schema to which this item is fixed
Schema used for this query
Schema validation options
Scope unset or equal to the function we compare to, and the alias applies to fn
Score for the new search point
Score of best snippet
Score of this snippet
Script is setting Content-length.
Search TEMP before MAIN
Search a FuncDefHash for a function with the given name.
Search along zPath to find the node specified.
Search an ephemeral b-tree
Search backwards for a varint with value zero (the end of the previous  poslist).
Search directory for matching names.
Search for "xBestIndex malfunction" below
Search for a deferred foreign key constraint for which this table is the child table.
Search for a function with compatible inputs
Search for a page near this one
Search for a recognized property name using binary chop
Search for a string in a fixed-length byte string.
Search for an auxiliary function named zName that can be used with table pTab.
Search for an existing entry that matching the canonical name.
Search for an existing index that will work for this IN operator
Search for an existing statement.
Search for an existing table
Search for columns isolating an eigenvalue and push them left.
Search for equality and range constraints on the "term" column.
Search for existing entry and if it does not exist create one
Search for existing entry.
Search for last called user function
Search for rows isolating an eigenvalue and push them down.
Search for source array matching the host from configuration_hash
Search for source array matching the path from configuration_hash
Search for such an entry.
Search for terms matching the iColumn-th column of pIdx rather than the iColumn-th column of table iCur.
Search for the end of the first line.
Search for the end of the position list within the current page.
Search for the end of the range, which is either the end of the input range, or a character that has zero or more than one other cases.
Search for the exact function
Search for the index that has the lowest scan cost.
Search for the next (later) match
Search for the parent.
Search for the previous (earlier) match
Search for the required lock.
Search for this index expression
Search for wildcard matches instead
Search forward to find the page containing the last rowid.
Search in the input string for the first matching character and recursively contine the match from that point.
Search point for the leaf
Search point for the the leaf
Search strategy (see below)
Search the UCD record for the character comes in TMP1.
Search the first N tables in pSrc, from left to right, looking for a table that has a column named zCol.
Search the free-list on page pPg for space to store a cell nByte bytes in size.
Search the freelist looking for a free slot big enough to satisfy  the request.
Search the hash table for an existing record for this row.
Search the hash table or tables for an entry matching page number pgno.
Search the list for a matching table
Search the list of WhereLoops in *ppPrev looking for one that can be supplanted by pTemplate.
Search the node hash table for node iNode.
Search the pathlist for any of a list of font names.
Search the rowid of the table
Search the table to see if it contains a row with a matching primary key.
Search the wal file for page pgno.
Search through the cursors list of Fts5Auxdata objects for one that corresponds to the currently executing auxiliary function.
Search through to find the first varint with value 1.
Searching for the first zero.
Second PmaReader to compare
Second and subsequent SMALLEST primitives are constant time.
Second and subsequent calls get processed here
Second and subsequent calls to xMutexInit() must be no-ops.
Second arg to matchinfo() function
Second argument for valueNew()
Second argument to matchinfo() function
Second argument to pass to callback
Second callback for SELECTs
Second change operation
Second code generation pass.
Second iterator to compare
Second key value passed to hook
Second loop through list, now close all connections
Second parameter (often the jump destination)
Second part of index name.
Second part of the name of the table or view
Second pass: resolve the sizes of the flexible items
Second sorted list to be merged
Second temp file to use
Second unique point index is 0 until set.
Second varint to store in hint
Second, the calculation algorithm described in "Jewish Calendar Mystery Dispelled" was coded and used to verify all dates from the year 1 (3761 B.C.) to the year 13760 (10000 A.D.).
Second, try to get a magic file from Common Files
Section Filters Declarations
Sector size doesn't matter for temporary files.
Sector-size field of journal header
Secure choices are integers in the two-digit byte range and ideally not sequential but secure random numbers, steps omitted here to keep the example concise.
Security  At current time i do not see any security problems but a potential attacker could generate an image with recursive ifd pointers...(Marcus)
See  function sqlite3Fts3Incrmerge() for details.
See "Computing  Small Singular Values of Bidiagonal Matrices With Guaranteed High Relative Accuracy," by J.
See "RECORD FORMAT" for details.
See #69823, we should not insert module into module_registry while doing startup
See #ifndef WE_DONT_COPY_IN_BUFFERED_AND_UNBUFFERED_BECAUSEOF_IS_REF
See #taint for more information.
See +IO#seek+ for further details.
See +Readline.point+.
See +Socket.getaddrinfo+ also.
See ::getgrent above for details.
See ::getpwent above for details.
See ::spawn for details.
See ::spawn for more details about the given +options+.
See ::trace_object_allocations for more information and examples.
See ARGF (the class) for more details.
See ASN1Data for possible values.
See BTS_* macros below
See BigDecimal#divmod.
See BigDecimal#power.
See COLFLAG_ defines below
See DH_compute_key() for further information.
See DLAED3 for details.
See DLAED4 for further details.
See DLASD3 for details.
See DLASD8 for details on DIFL and DIFR.
See DLASD8 for details.
See Digest::Instance for digest API.
See ENV (the class) for more details.
See EVP_CIPHER_CTX_set_key_length for further information.
See EVP_CIPHER_CTX_set_padding for further information.
See Encoding for further details of transcoding on input and output.
See Encoding.aliases for possible encodings.
See Encoding::default_external for information on how the default external encoding is used.
See Encoding::default_internal for information on how the default internal encoding is used.
See Fiddle::Function.new
See File.expand_path.
See File.new and the open(2) and chmod(2) man pages for a description of permissions.
See File.new for further discussion.
See File::fnmatch for the meaning of the +flags+ parameter.
See GDB's info for detail.
See GEMS I for the algorithm details
See GNU Readline's rl_delete_text function.
See GNU Readline's rl_get_screen_size function.
See GNU Readline's rl_insert_text function.
See GNU Readline's rl_pre_input_hook variable.
See GNU Readline's rl_redisplay function.
See GNU Readline's rl_set_screen_size function.
See GNU Readline's rl_special_prefixes variable.
See IO.new for a description of +mode+ and +opt+.
See IO.new for a description of the +fd+, +mode+ and +opt+ parameters.
See IO.new for a description of the +mode+ and +opt+ parameters.
See IO.new for the list of possible modes.
See IO.new for these options.
See ISPEC for a description of the parameters.
See Kernel#open for details of the various command formats described above.
See Kernel#raise for more information.
See Kernel#set_trace_func.
See Knuth TAOCP Vol2.
See Numeric#divmod for more information.
See Process.setrlimit and the system getrlimit(2) manual for details.
See Process.setrlimit for details.
See Process.setrlimit.
See Psych::Handler#alias
See Psych::Handler#end_document
See Psych::Handler#end_mapping
See Psych::Handler#end_sequence
See Psych::Handler#scalar
See Psych::Handler#start_document
See Psych::Handler#start_mapping
See Psych::Handler#start_sequence
See Psych::Parser and Psych::Parser#handler
See Queue for an example of how a SizedQueue works.
See README_PHP3-i18n-ja for more detail.
See RFC 1010 for values
See Random.srand for more information on the use of seed values.
See Request#check_nonce for the meanings of the return values.
See SLAED3 for details.
See SLAED4 for further details.
See SLASD3 for details.
See SLASD8 for details on DIFL and DIFR.
See SLASD8 for details.
See SSL_CTX_set_session_cache_mode(3) for details.
See SSL_CTX_set_verify(3) for details.
See Socket::Constants for the list of constants.
See Sreedhar et al, "Identifying Loops Using DJ Graphs".
See String#downcase for meaning of +options+ and use with different encodings.
See String#encode for details.
See String#encode for the various forms of transcoding, and the Encoding::Converter class for additional control over the transcoding process.
See Syslog::log and Syslog::open for constant descriptions.
See TYPE for the storage type.
See Thread#set_trace_func and Kernel#set_trace_func.
See Thread::Backtrace::Location for more information.
See WhereOrSet for additional information
See XMLRPC_GetValueTypeEasy SEE ALSO XMLRPC_SetIsVector () XMLRPC_GetValueType () XMLRPC_GetValueTypeEasy () SOURCE
See XMLRPC_GetValueTypeEasy SEE ALSO XMLRPC_SetValue* XMLRPC_CreateValue* XMLRPC_Append* XMLRPC_GetValueTypeEasy () SOURCE
See XMLRPC_REQUEST_FromXML INPUTS in_buf -- character buffer containing XML len    -- length of buffer RESULT XMLRPC_VALUE -- newly allocated data, or NULL if error.
See Zlib::Deflate#data_type.
See Zlib::Deflate#deflate for detail on the +flush+ constants NO_FLUSH, SYNC_FLUSH, FULL_FLUSH and FINISH.
See Zlib::Deflate.new for a description of +level+ and +strategy+.
See Zlib::Inflate.new for details.
See Zlib::ZStream for more information.
See _php_curl_close_ex
See `fsnotify_win/fsnotify.ml` for a general description.
See also "PRAGMA journal_size_limit".
See also #abort_on_exception.
See also #report_on_exception.
See also Array#assoc.
See also Array#concat.
See also Array#delete_if  If no block is given, an Enumerator is returned instead.
See also Array#first for the opposite effect.
See also Array#index.  If neither block nor argument is given, an Enumerator is returned instead.
See also Array#keep_if  If no block is given, an Enumerator is returned instead.
See also Array#last for the opposite effect.
See also Array#pop for the opposite effect.
See also Array#push for the opposite effect.
See also Array#push, and Array#unshift.
See also Array#rindex.  An Enumerator is returned if neither a block nor argument is given.
See also Array#select.
See also Array#shift for the opposite effect.
See also Array#unshift for the opposite effect.
See also BigDecimal.new
See also Enumerable#collect.
See also Enumerable#reject and Array#delete_if.
See also Enumerable#sort_by.
See also IO.sysopen and IO.for_fd.
See also MATCH_CONDASSERT below.
See also Object#hash.
See also Random.rand.
See also ThreadGroup#enclose.
See also asctime(3) or ctime(3).
See also comment in file.c php3i_get_le_fp()
See also fts3ExprLoadDoclists().
See also http://en.wikipedia.org/wiki/Pseudo_terminal  PTY allows you to allocate new terminals using ::open or ::spawn a new terminal with a specific command.
See also sample/cal.rb.
See also section 8.1.3.
See also setSectorSize().
See also sqlite3LocateTable().
See also sqlite3PagerGet().
See also sqlite3PagerLookup().
See also strptime(3) and strftime.
See also the "PRAGMA data_store_directory" SQL command.
See also the "PRAGMA temp_store_directory" SQL command.
See also the description of class +Binding+.
See also the pager_write_changecounter() routine that does an  unconditional update of the change counters.
See also wrap.f foo.f foo90.f90.
See also x509v3_config(5).
See also, https://www.openssl.org/docs/crypto/engine.html
See also: AggStep and AggFinal
See also: CreateIndex
See also: EndCoroutine
See also: Found, NotExists, NoConflict
See also: Found, NotFound, NoConflict
See also: Found, NotFound, NoConflict, SeekRowid
See also: Found, NotFound, SeekGt, SeekGe, SeekLe
See also: Found, NotFound, SeekGt, SeekGe, SeekLt
See also: Found, NotFound, SeekLt, SeekGe, SeekLe
See also: Found, NotFound, SeekLt, SeekGt, SeekLe
See also: Function, AggStep, AggFinal
See also: Function0, AggStep, AggFinal
See also: InitCoroutine
See also: NotFound, Found, NotExists
See also: NotFound, NoConflict, NotExists.
See also: OpenWrite, ReopenIdx
See also: Prev, NextIfOpen
See also: Rowid, MakeRecord.
See also: allocateCursor().
See also: assert_pager_state().
See also: btreeGetUnusedPage().
See also: sqlite3FindCollSeq(), sqlite3GetCollSeq()
See also: sqlite3LocateCollSeq(), sqlite3FindCollSeq()
See also: sqlite3LocateCollSeq(), sqlite3GetCollSeq()
See array_assign.h for parameter documentation
See bug 67397: overlong locale names cause trouble in uloc_getDisplayName
See bug35916.phpt for reference.
See class Continuation for more details.
See class Float for a list of constants that define Ruby's floating point accuracy.
See codeCursorHintIsOrFunction() for details.
See comment in sqlite3.h (sqlite.h.in) for details.
See comment in the code for capturing groups above about handling THEN.
See comments above function writeJournalHdr() for a description of the journal header format.
See comments above the definition of struct Fts3TokenAndCost for more details.
See comments above the sqlite3Fts3ReadBlock() function for details.
See comments above valueNew() for details.
See comments above writeMasterJournal() for the format used to store a master journal file name at the end of a journal file.
See comments at the top of this source file for a description of the WAL header format.
See comments at user semantic actions for why this is necessary.
See comments below for more detail on APIs.
See comments for function writeMasterJournal() in pager.c  for details.
See comments in hh_add about its similar construction here.
See comments in sqliteInt.h for further information.
See comments in the body of this function for details.
See comments in the source code for a detailed description of what each interface routine does.
See comments on  sqlite3WhereBegin() for additional information.
See comments on the implementation for a description of what each of these routines does.
See comments surrounding function rbuSetupCheckpoint() for details.
See comments with init_error_limit for rationale.
See convertToWithoutRowidTable() for details.
See crypto/pem/pem_lib.c (as of 1.0.2h)
See descriptor.h for documentation
See discussion in number.c
See documentation at the top of the analyze.c source file for additional information.
See documentation for the highlight() auxiliary function for details.
See documentation on OP_CreateTable for additional information.
See extconf.rb for more information.
See f2py2e/cfuncs.py: includes
See fts3EvalTestDeferredAndNear() for details on testing if a row is really a match, taking into account deferred tokens and NEAR operators.
See fts3StringAppend() for details.
See function PagerSharedLock() for more detail.
See function fts3PendingListAppend() for details.
See function fts3TermSelectMerge() for details.
See function fts5TrimSegments() for details.
See function vdbeSorterSort() for details.
See further description below.
See generate_umath.py for reason
See getput_arg below.
See golang.org/issue/12210.
See grammar rules associated with the TK_REGISTER token for additional information.
See hh_save_dep_table for a description of the file format.
See http://bugs.ruby-lang.org/issues/5244 for discussion.
See http://caml.inria.fr/pub/docs/manual-ocaml/intfc.html#sec412
See http://connect.microsoft.com/VisualStudio/feedback/details/759720/vs2012-strftime-crash-with-z-formatting-code
See http://curl.haxx.se/lxr/source/docs/libcurl/symbols-in-versions or curl src/docs/libcurl/symbols-in-versions for a (almost) complete list of options and which version they were introduced
See http://en.wikipedia.org/wiki/Leap_second for further details.
See http://msdn.microsoft.com/en-us/library/a442x3ye(VS.80).aspx.
See http://support.microsoft.com/kb/190351
See http://www.opengroup.or.jp/jvc/cde/ucs-conv.html#ch4_2
See http://www.unicode.org for details.
See http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2
See https://docs.python.org/2/c-api/typeobj.html.
See if CRLF is a valid newline sequence.
See if any siblings hold this same lock
See if it is possible to just trivially iterate the array
See if it's a branch to an ancestor on the dominator spanning tree.
See if it's a python None
See if the checksum matches the master journal name
See if the contents of the sorter should now be written out.
See if the next thing is a quantifier.
See if the server requested a close
See if there are any named substrings, and if so, show them by name.
See if this type is already registered
See if we are dealing with a keyword.
See if we are dealing with a quoted phrase.
See if we can delete some of the leading zeros
See if we can find a fixed set of initial characters for the pattern.
See if we have an exact match, if so, we're done...
See if we have to clean the wire
See intel doc on cpuid (pdf)
See man(3) dlclose() for more info.
See man(3) dlsym() for more info.
See mbfl_no_encoding definition for list of UTF-8 encodings
See mbfl_no_encoding definition for list of unicode encodings
See mbfl_no_encoding definition for list of unsupported encodings
See more here: http://www.openssl.org/docs/crypto/RSA_public_encrypt.html
See my_getsystime.c for high res
See note about index shifting on OP_ReadCookie
See notes in update_box about scaling distances.
See other comments in this file for details.
See pager_write_pagelist() for  details.
See parse.y  construct "indexed_opt" for details.
See php's glob for the pattern syntax.
See php's pcre for the pattern syntax.
See primitive_convert for an example.
See select(2) manual on GNU/Linux system.
See shape.h for parameters documentation
See sljit_emit_enter and sljit_emit_op0 if you want to change them.
See source code comments for  a detailed description of each routine.
See spl_filesystem_object_new_ex
See sqlite3BtreeCommitPhaseTwo() for the second phase of the commit process.
See sqlite3BtreeCursorZero().
See sqlite3ExprAnalyzeAggregates for additional information.
See sqlite3FixSrcList() for details.
See sqlite3Fts3EvalTestDeferred() for details on testing if a row is really a match, taking into account deferred tokens and NEAR operators.
See sqlite3Init() below for additional information.
See sqlite3ResolveExprNames() for a description of the kinds of transformations that occur.
See sqlite3Update() documentation of "pChanges" argument.
See system setrlimit(2) manual for details.
See the "reader.c" code for more details on UTF-8 encoding.
See the ../tool/spaceanal.tcl script for an example implementation.
See the AUTHORS file for names of contributors.
See the Eq opcode for additional information.
See the IJG JPEG library documentation for more details.
See the Lt opcode for additional information.
See the Marshal module.
See the MatchinfoBuffer code below for details.
See the OpenRead opcode documentation for additional information.
See the OpenSSL documentation for EC_GROUP_get0_generator()
See the OpenSSL documentation for EC_GROUP_get_cofactor()
See the OpenSSL documentation for EC_GROUP_get_curve_name()
See the OpenSSL documentation for EC_GROUP_get_order()
See the OpenSSL documentation for EC_GROUP_set_generator()
See the OpenSSL documentation for EC_GROUP_set_point_conversion_form()
See the OpenSSL documentation for EC_KEY_check_key()
See the OpenSSL documentation for EC_get_builtin_curves().
See the OpenSSL documentation for PKCS12_create().
See the PARSING_HEADER() macro.
See the Ruby language spec for more details.
See the comment about RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR
See the comment above for a rare situation in which the transparent pixel may not work properly with 16-bit channels.
See the comment above the #define for UNKNOWN_LOCK for an explanation of why this is necessary.
See the comment above the #define of  UNKNOWN_LOCK for an explanation of this.
See the comment above the #define of UNKNOWN_LOCK for an explanation  of this.
See the comment above the #define of UNKNOWN_LOCK for details.
See the comment and state diagram above for a description of the pager state.
See the comment below.
See the comment on the CC_ defines above.
See the comments for VarToUtf8() in ppapi/c/ppb_var.h for more info.
See the constants for further description.
See the corresponding marks just before function definition, where the functions purpose is also documented.
See the definitions of the BTREE_HINT_* macros for details.
See the discussion in the pager_playback() function for additional information.
See the division above that contains the IOMETHODS macro for addition information on finder-functions.
See the document of +Process.clock_gettime+ for details.
See the document of Kernel.spawn.
See the documentation of IO.new for full documentation of the +mode+ string directives.
See the example under +Mutex+.
See the following functions:  nodeReaderInit() nodeReaderNext() nodeReaderRelease()
See the function business_day_count for the meaning of all the parameters.
See the function business_day_offset for the meaning of all the parameters.
See the header comment  above sqlite3ExprDup() for details.
See the header comment above sqlite3ExprDup() for details.
See the header comment on "btreeInt.h" for additional information.
See the header comments on that procedure for additional information.
See the macro definitions above.
See the manpage for details.
See the manpage of SSL_CTX_set_security_level(3) for details.
See the manual of GNU Readline for details of Emacs editing mode.
See the manual of GNU Readline for details of VI editing mode.
See the mkopcodec.awk script for details.
See the mkopcodeh.awk script for additional information.
See the mkopcodeh.awk script for details
See the open(2) man page for more information.
See the pcresample documentation for a short discussion ("man pcresample" if you have the PCRE man pages installed).
See the separate in-operator.md documentation file in the canonical SQLite source tree for additional information.
See the sqlite3BitvecBuiltinTest() for additional information.
See the sqlite3_enable_load_extension() API.
See the subclass list below for defaults for +raise+ and +rescue+.
See the ticket:  http://localhost:591/sqlite/info/ff5be73dee
See the tool/mkopcodec.tcl script for details.
See the tool/mkopcodeh.tcl script for details
See the virtual table xFilter method documentation for additional information.
See the xSetAuxdata() method for details.
See the xferOptimization() function for the implementation of this template.
See ticket http://www.sqlite.org/src/info/6709574d2a  This transformation is only needed for EXCEPT, INTERSECT, and UNION.
See ticket http://www.sqlite.org/src/info/f2369304e4
See user.c for qhull-related, redefinable functions see user.h for user-definable constants See usermem.c for qh_exit(), qh_free(), and qh_malloc() see Qhull.cpp and RboxPoints.cpp for examples.
See user_eg.c for an example.
See verify(1) for error values and descriptions.
See your fcntl(2) man page for complete details.
See zip_add.c for more details.
See zlib.h for details.
See:  http://www.isthe.com/chongo/tech/comp/fnv/index.html  for more details as well as other forms of the FNV hash.
See: Bug #27876 : SF with cyrillic variable name fails during execution
See: CODING_STANDARDS for details.
Seed the generator with a simple uint32
Seed the search with a single WherePath containing zero WhereLoops.
Seek back to the beginning and write the byte count.
Seek cursor iCur to the row to delete.
Seek the index cursor to the start of the range.
Seek the table cursor, if required
Seek to the offset passed as the second argument, then read cnt  bytes into pBuf.
Seekdir moves the string pointer to a previously saved position (Saved by telldir).
Seems Linux also delivers SIGBUS.
Seems we have 3 bytes reserved for future use
Seg-reader cursor for this term
Seg-reader is at EOF.
Seg:Displacement addr (ptr16:16 or ptr16:32)
Segment doclist indexes:  Doclist indexes are themselves b-trees, however they usually consist of a single leaf record only.
Segment id to load from
Segment interior nodes **** Segment interior nodes store blockids for subtree nodes and terms to describe what data is stored by the each subtree.
Segment leaf nodes **** Segment leaf nodes store terms and doclists, ordered by term.
Segment leaves:  TERM/DOCLIST FORMAT:  Most of each segment leaf is taken up by term/doclist data.
Segment merges overwrite older data for a particular docid with newer data, so deletes or updates will eventually overtake the earlier data and knock it out.
Segment merging **** To amortize update costs, segments are grouped into levels and merged in batches.
Segment reader object
Segment term filter condition
Segment term filter configuration
Segment to check internal consistency
Segment to iterate through
Segment-reader for this token
SegmentAlignment.swift import SpriteKit and calls Test().
SegmentWriter to flush to the db
Segments are promoted in two scenarios:  a) If the segment just written is smaller than one or more segments within the previous populated level, it is promoted to the previous populated level.
Select a currently unused rowid for a new r-tree record.
Select a master journal file name
Select a sub-task to sort and flush the current list of in-memory records to disk.
Select from a "CREATE ...
Select id (left-most output column)
Select new TAU and try again.
Select statement to read idx values
Select the child node which will be enlarged the least if pCell is inserted into it.
Select the column is extracted from
Select the fragment of text consisting of nFragment contiguous tokens  from column iCol that represent the "best" snippet.
Select the yet unassigned pipe.
SelectDest targetting the Queue table
Selects no more than one row
Semaphore 0 (SYSVSEM_SEM) is the actual semaphore, it is initialized to max_acquire and decremented as processes acquire it.
Semaphore 2 (SYSVSEM_SETVAL) serializes the calls to GETVAL SYSVSEM_USAGE and SETVAL SYSVSEM_SEM.
Semaphore functions using System V semaphores.
Semaphore locking is like dot-lock and flock in that it really only supports EXCLUSIVE locking.
Send FIN to the client
Send Host: header so name-based virtual hosts work
Send POST data to the CGI process if needed
Send RETR/STOR command
Send an SQLITE_FCNTL_PRAGMA file-control to the underlying VFS connection.
Send chunk of data that may be read after the headers
Send cookies along with request
Send data to a co-routine
Send flushed data to the stream
Send len bytes from the opened file to the client.
Send mail to all Bcc rcpt's This is basically a rip of the Cc code above.
Send mail to all Cc rcpt's
Send mail to all rcpt's
Send me further rules if you like, but don't forget that we are only* interested in locale naming conventions on platforms that do not already provide an nl_langinfo(CODESET) implementation.
Send ourselves a SIGIO.
Send read bytes to the client, exit the loop on error
Send that header even for HTTP/1.0 to avoid issues when the server respond with a HTTP/1.1 keep-alive response, which is the preferred response type.
Send the gd2 id, to verify file format.
Send the rest of buffered data
Send to GD File then Ptr
Send to GD2 File then Ptr
Send to PNG File then Ptr
Sends a command to the run loop thread by adding the command to the linked list of commands and then signaling the run loop thread through a pipe
Sends the first SIGSEGV and lets lldb catch the second one, avoiding a loop that locks up iOS devices requiring a hard reboot.
Separate PMAs all need to be combined into one big PMA in order to be able to step through the sorted records in order.
Separate commandline string into words
Separate file holding temporary table
Separate from array_copy to make __copy__ preserve Fortran contiguity.
Separate the UTF-8 code completely as that is tidier.
Separate the bound variables, which point to the result set, then destroy the set.
Separate the caseless case for speed.
Separate the left and the right query from one another
Separates integer and floating point registers
Separation is enabled -- create a ref
Sequence number of leaf within tree
Serial type of the rowid
Serial type to deserialize
Serial types 12 or greater are strings and blobs (greater than numbers).
Serialization is not supported for anonymous classes
Serialize a changeset (or patchset) based on all changesets (or patchsets) added to the changegroup object passed as the first argument.
Serialize a sequence.
Serialize and store the "structure" record.
Serve as a convenient place to set a breakpoint in a debugger to detect when version error conditions occurs.
Server died - connection not usable.
Server sessions are added to the session cache
Servers need to load and assign CA names from the cafile
Session Pool Hash Key : oci8spool***username**edition**hashedpassword**dbname**charset
Session based file upload progress uses non-cookie ID.
Session changeset-apply context
Session creation returns OCI_SUCCESS_WITH_INFO when user's password has expired, but is still usable.
Session data will not be written
Session handle structure.
Session is now taken from the session pool and attached and open
Session module guarantees PS_OPEN_FUNC() is called before calling other PS_*_FUNC() functions.
Session object already attached to db
Session object pTab is attached to
Session object that owns SessionTable
Session object that owns pTab
Session objects must be deleted before the database handle to which they are attached is closed.
Session verification mode.
SessionHandlerInterface
SessionTable.abPK  is set to NULL in this case.
SessionUpdateTimestampHandler class
SessionUpdateTimestampInterface
Sessions for non-persistent connections should be dropped.
Set  LENX  and  LENY, the lengths of the vectors x and y, and set up the start points in  X  and  Y.
Set 'base' to -1 to auto-detect a base after which all the values are zero.
Set 'compare function' according to sort flags.
Set 'out_dtype' if it's NULL
Set *Walker.u.pi to 0 if the expression is not constant.
Set *pCurrent to non-zero if there are unresolved deferred foreign key constraints.
Set *pCurrent to the total cache hits or misses encountered by all pagers the database handle is connected to.
Set *pCurrent to zero if all foreign key constraints have been satisfied.
Set *pRes to 0 if the cursor actually points to something or set *pRes to 1 if the table is empty.
Set *pSize to the number of bytes of data in the entry the cursor currently points to.
Set *pSize to the size of the buffer needed to hold the value of the key for the current entry.
Set *pbEof to true if EOF is reached.
Set *pbEof to true there is no next entry because the MergeEngine has reached the end of all its inputs.
Set *piDocid to the  new docid value.
Set *piZero to one less than the frame  number of the first frame indexed by this hash table.
Set *pnOut to the value read.
Set *ppData to point to the Fts5Bm25Data object for the current query.
Set *ppModule to a pointer to the sqlite3_tokenizer_module  structure for the unicode tokenizer.
Set *ppModule to point at the implementation of the ICU tokenizer.
Set *ppOut to the head of the new list.
Set A(1:i-1,i) to zero
Set A(1:kk,kk+1:n) to zero.
Set A(i,1:i-1) to zero
Set A(i,1:i-1,i) to zero
Set A(kk+1:m,1:kk) to zero.
Set CLOEXEC for non-standard file descriptors: 3, 4, 5, ...
Set Daylight Saving Time field
Set I/O position from the beginning
Set I/O position from the current position
Set I/O position from the end
Set I/O position to the next hole
Set I/O position to the next location containing data
Set M to the number of columns required to store the selected eigenvectors, standardize the array SELECT if necessary, and test MM.
Set M to the number of columns required to store the selected eigenvectors.
Set Method Name to call
Set SSLSocket#sync_close to true if you want.
Set Scroll Buffer Size
Set TMP_REG1 to the bit.
Set Walker.eCode to non-zero before returning if the  expression is not suitable.
Set a SQLITE_TOOBIG error if no NULL
Set a bit and maybe its alternate case    *
Set a flag in the vdbe to update the change counter when it is finalised or reset.
Set a flag that indicates we're the first to create the memory so it  must be zero-initialized
Set a flag that indicates we're the first to create the memory so it must be zero-initialized
Set a flag to cause another lookbehind check at the end.
Set a generic output handler.
Set a new process title.
Set a prohibitively high cost.
Set a table filter on a Session Object.
Set after incrementing the change-counter
Set al to conditional flag.
Set all the parameters in the compiled SQL statement to NULL.
Set an Fts3SegReader cursor to point at EOF.
Set an emitter error and return 0.
Set an entry in the wal-index that will map database page number pPage into WAL frame iFrame.
Set an error message and return NULL if the table  name is not found or if any other error occurs.
Set and apply the required timezone offset
Set and get the suggested cache-size for the specified pager-cache.
Set appropriate defaults on all indexes not in the sqlite_stat1 table
Set bLink to true if the path is a symbolic link, or false otherwise.
Set back the original diagonal elements of T.
Set bit count to 0 and buffer to mysterious initialization constants.
Set bit for this starter
Set bit pgno of the BtShared.pHasContent bitvec.
Set bits for a negative character type     *
Set bits for a positive character type     *
Set both the "read version" (single byte at byte offset 18) and  "write version" (single byte at byte offset 19) fields in the database header to iVersion.
Set both the first and last page-numbers to 0 to indicate that the segment is now empty.
Set callback function
Set columns 1:i-1 of current block to zero
Set composer error with context.
Set default precision
Set default value if needed
Set defaults for non-supported filesystems
Set dts to point to our local time instead of the UTC time
Set elements 1:ILO-1 and IHI:N-1 of TAU to zero
Set false for more content
Set floating point precision for pow() of mingw-w64 x86.
Set free from process group and controlling terminal
Set from environment variables
Set global error code.
Set iBestLvl to the level to read input segments from.
Set iBlock to the index of the block pointed to by pOld in  the array of mem5.szAtom byte blocks pointed to by mem5.zPool.
Set iTrunk to the index of the first free-list trunk page.
Set idxFlags flags for all WHERE clause terms that will be used.
Set idxFlags flags for the ORDER BY clause
Set if global data is loaded
Set if thread is finished but not joined
Set if unescaped non-ASCII characters are allowed.
Set in the shebang line
Set initial value of temp.
Set isHighlight to true if this term should be highlighted.
Set isOrdered to nOrderBy to indicate this.
Set isset fetch indicator here, opcache disallows runtime altering of the AST
Set it to INVALID_HANDLE_VALUE It will be initialized correctly in tsrm_win32_access or set to NULL if no impersonation has been done.
Set iteration information of the indexing arrays.
Set its value only once.
Set len to the maximum number of bytes required in the output buffer.
Set local variable nMem (and later, VdbeFrame.nChildMem) to this value.
Set low byte to conditional flag.
Set low register to conditional flag.
Set machine-dependent constants for the stopping criterion.
Set nByte to the number of bytes required to store the expanded blob.
Set nDestTruncate to the final number of pages in the destination database.
Set nNewSize to the size allocated for the structure pointed to by pNew.
Set nStr to the number of bytes of space required to store a copy of each column name, including the nul-terminator byte.
Set nSum to the number of distinct (iCol+1) field prefixes that occur in the stat4 table for this index before pFinal.
Set new value for the given attribute.
Set node pNode, which is part of expression pExpr, to point to the first match.
Set of characters to trim
Set of contexts for which prohibited
Set of pages in this savepoint
Set of pages moved to free-list this transaction
Set of table index masks
Set okToChngToIN if an appropriate table and column is found but leave okToChngToIN false if not found.
Set options for the current file/buffer.
Set or clear the access authorization function.
Set or get the suggested spill-size for the specified pager-cache.
Set or release locks on the WAL.
Set or retrieve the codec for this pager
Set output variable *paHash to point to the start of the hash table in the wal-index file.
Set output variable *pbEof to true if it reaches EOF or if an error occurs.
Set pPg to 0 and jump to the exception handler.
Set pTC to point to the cheapest remaining token.
Set peer_name or name verification will try to use the proxy server name
Set pipe mode according to type -- for now allow only "r" or "w"
Set pointer back to the last byte
Set procedural save handler functions
Set proper value for true/false settings
Set properties of a table column based on the (magical) name of the column.
Set remaining X's to pid digits with 0's to the left.
Set replacement value to the one we got from array
Set replacement value to the passed one
Set resetindex to zero as well (it's just after the resetdataptr)
Set resulting precision
Set return_value to current module name
Set rows 1:i-1 of current block to zero
Set rows and columns ILO to IHI to zero below the first subdiagonal.
Set semaphore 1 back to zero.
Set session status to prevent error while restoring save handler INI value.
Set signal handler of SIGCHLD to default to prevent other signal handlers from being called and reaping the return code when our child exits.
Set some CLI defaults
Set some Embedded PHP defaults
Set some flags for allocated outputs
Set specific keys in thread local storage.
Set stack bottom of Ruby implementation.
Set stack entry to point to the newly created object
Set stack variable q to the close-quote character
Set strides corresponding to trailing 1s of the new shape.
Set sumEq to the sum of the nEq values for column iCol for the same set (adding the value only once where there exist dupicate  prefixes).
Set swap even if it's not ambiguous already, because in the case of conflicts between different operands, C-order wins.
Set that stride, because it may not belong to the first dimension.
Set the "type" of an allocation.
Set the "use-threads" flag on object pIncr.
Set the *pmSeen output variable.
Set the 32-bit cookie value stored at the start of all structure  records to the value passed as the second argument.
Set the BTS_SECURE_DELETE flag if newFlag is 0 or 1.
Set the BtLock.eLock variable to the maximum of the current lock and the requested lock.
Set the EOF flag if either all synonym iterators are at EOF or an error has occurred.
Set the EP_FromJoin property on all terms of the given expression.
Set the EP_Reduced, EP_TokenOnly, and EP_Static flags appropriately.
Set the Expr.nHeight variable in the structure passed as an  argument.
Set the Expr.nHeight variable using the exprSetHeight() function.
Set the FTS5CSR_REQUIRE_RESEEK flag on all FTS5_PLAN_MATCH cursors  open on table pTab.
Set the JsonString object to an empty string
Set the LIKEOPT flag on the 2-argument function with the given name.
Set the P4 on the most recently added opcode to the KeyInfo for the index given.
Set the P5 operand of the OP_Program instruction to non-zero if recursive invocation of this trigger program is disallowed.
Set the SQLITE_PTRSIZE macro to the number of bytes in a pointer
Set the SegReader to point to the first docid in the doclist associated with the current term.
Set the StrAccum object to an error mode.
Set the Table.iPKey field of the table under construction to be the index of the INTEGER PRIMARY KEY column.
Set the VdbeCursor.isTable variable.
Set the WHERE_ONEROW flag if the xBestIndex() method indicated that the scan will visit at most one row.
Set the abort flag and return
Set the array to BETA on the diagonal and ALPHA on the offdiagonal.
Set the auxilary data pointer and delete function, for the iArg'th argument to the user-function defined by pCtx.
Set the auxiliary data pointer and delete function, for the iArg'th argument to the user-function defined by pCtx.
Set the bit number pgno in the PagerSavepoint.pInSavepoint  bitvecs of all open savepoints.
Set the buffer to contain nData/pData.
Set the busy handler function.
Set the callback using SQLITE_TESTCTRL_VDBE_COVERAGE.
Set the canonical output style.
Set the character tables in the block that is passed around
Set the chomping method and eat the indicator.
Set the collating sequence for expression pExpr to be the collating sequence named by pToken.
Set the collation function of the most recently parsed table column to the CollSeq given.
Set the constants to control overflow.
Set the crossover point NX.
Set the current error code to err_code and clear any prior error message.
Set the current transaction state to TRANS_NONE and unlock the  pager if this call closed the only read or write transaction.
Set the cursor upper and lower rowid limits.
Set the data pointer in the list entry to NULL
Set the database size back to the value it was before the savepoint  being reverted was opened.
Set the diagonal to BETA and the strictly lower triangular part of the array to ALPHA.
Set the diagonal to BETA and the strictly upper triangular part of the array to ALPHA.
Set the dimension to match the input array's
Set the doNotSpill NOSYNC bit to 1.
Set the dtypes and ops to all NULL to start
Set the dtypes to all NULL to start as well
Set the error code and error message of the RBU handle to something reflecting this.
Set the error code in the database handle to the same value.
Set the error code of the destination database handle.
Set the error count to three.
Set the executed flag to 0 to reallocate columns on next execute
Set the fields of immediate loads.
Set the first and required bytes appropriately.
Set the first char of padding to 0x80.
Set the first entry (number of rows in the index) to the estimated  number of rows in the table.
Set the first min(M,N) diagonal elements to BETA.
Set the flag to indicate that at least one PMA has been written.
Set the foreign key value to NULL
Set the foreign key value to its default
Set the function and data
Set the indentation increment.
Set the indentation level if it was specified.
Set the initial indentation.
Set the initial position (relative to the parent).
Set the journal-mode for this pager.
Set the leading m-by-n submatrix to ALPHA.
Set the limiting size of a WAL file.
Set the lower and upper bounds on docids to return
Set the magic to VDBE_MAGIC_RUN sooner rather than later.
Set the match location in subject
Set the maximum error count
Set the maximum page count for a database if mxPage is positive.
Set the most recent error code and error string for the sqlite handle "db".
Set the multi-index, from the fastest-changing to the slowest-changing.
Set the name of a Select object
Set the name of the idx'th column to be returned by the SQL statement.
Set the new 'max-root-page' value in the database header.
Set the new ping value into the connection
Set the number of backtrace levels kept for each allocation.
Set the number of output columns
Set the number of ranges used.
Set the number of result columns that will be returned by this SQL statement.
Set the operands to NULL
Set the order for the copy being made based on the flags
Set the output encoding.
Set the output segment b-tree height and last leaf page number at the same time.
Set the output variable to NULL in case an error occurs.
Set the output variables and return.
Set the output variables before returning.
Set the output variables.
Set the pointer to NULL to indicate that forward references have been filled in.
Set the pointer to the final character before returning.
Set the pointer-map entries for all children of page pPage.
Set the pointer-map entry for the new sibling page.
Set the preferred line break character.
Set the preferred line width.
Set the reader error and return 0.
Set the resolved resolution in the node's layout.
Set the result to the offset in this segment and add the sizes of all predecessor segments.
Set the return code to 0 to indicate no errors.
Set the return code to the number of captured strings, or 0 if there were too many to fit into the vector.
Set the right corner of U to identity matrix
Set the right corner of VT to identity matrix
Set the right-child pointer of pParent to point to the new page.
Set the safety_level and pager flags for pager iDb.
Set the scan pointer to the previous position.
Set the scanner error and return 0.
Set the soft heap-size limit for the library.
Set the sort order for the last element on the given ExprList.
Set the source encoding.
Set the source reference to NULL
Set the span of pOut to be the identifier that created the expression.
Set the sqlite3_file.pMethods pointer and, if the file is a main database file, link it into the mutex protected linked list of all such files.
Set the start bits always, to avoid unset memory errors if the study data is written to a file, but set the flag only if any of the bits are set, to save time looking when none are.
Set the strictly lower triangular or trapezoidal part of the array to ALPHA.
Set the strictly upper triangular or trapezoidal part of the array to ALPHA.
Set the suggested cache-size value.
Set the suggested cache-spill value.
Set the szLeaf header field.
Set the text that the regular expression operates on to a NULL pointer.
Set the threshold at which OP_Once counters reset back to zero.
Set the time to the current time reported by the VFS.
Set the title string for subsequent allocations.
Set the usable flag on the subset of constraints identified by  arguments mUsable and mExclude.
Set the value again (can be a simple constant).
Set the value if the iSrcLine field for the previously coded instruction.
Set the value of a single config attribute
Set the value of a status to X.
Set the value of register P1 to the maximum of  its current value and the value in register P2.
Set the value of the Pager.sectorSize variable for the given pager based on the value returned by the xSectorSize method of the open database file.
Set the value of the SQL statements only variable to integer iRow.
Set the value of this object
Set the variable isMemdb to true for an in-memory database, or  false for a file-based database.
Set the weekmask to the default
Set the writer error and return 0.
Set this early so that early errors get offset 0.
Set this global variable to 1 to enable tracing using the TRACE macro.
Set this symbol to enable building on older macs.
Set thread local storage to this new thread resources structure
Set to " AND " later on
Set to 1 after new rowid is determined
Set to 1 to turn on log messages useful during development:
Set to 1 when TABLE matches
Set to FALSE if each output row of the SELECT can be written directly into the destination table (template 3).
Set to cheapest remaining token.
Set to default encodings
Set to non-zero if we are the parent process
Set to print succeeding zeros
Set to true after xInput finished
Set to true if a 'special' error
Set to true if at least one expr.
Set to true if constraints may cause a replace
Set to true if out of memory
Set to true if segment is appendable
Set to true when merge is finished
Set to true when thread finishes
Set to zero if any values are modified
Set trailing position if necessary.
Set transparent color.
Set transparent index (or none).
Set unused flag for all literals in the constant pool.
Set up SQL objects in database db used to access the contents of the hash table pointed to by argument pHash.
Set up a cursor object for iterating through a full-text index or a  single level therein.
Set up a dummy metadata for the conversion
Set up a loop over the rowids/primary-keys that were found in the where-clause loop above.
Set up a raw page so that it looks like a database page holding no entries.
Set up a starting, non-extracting bracket, then compile the expression.
Set up an alternate signal stack for this thread.
Set up an sqlite3_backup object.
Set up appropriate ctrlFlags
Set up arr_prep_args if a prep function was needed
Set up data pointers for either one or two input operands.
Set up dummy OP_REVERSE if lookbehind assertion
Set up for cell analysis
Set up for repetition, or handle the non-repeated case
Set up handler to kill children upon exit
Set up known arguments
Set up line thickness
Set up our overridden path.
Set up pointers and others
Set up pointers to the individual character tables
Set up the 'byte output' routine
Set up the IncrmergeWriter object to do so.
Set up the OR-mask arrays for the initial and final permutations, and for the key initial and compression permutations.
Set up the RtreeCursor.aConstraint array  with the configured constraints.
Set up the SIGIO signal handler in a high priority constructor, so that it is installed before the Go code starts.
Set up the array of NodeWriter objects
Set up the changed option bits, but don't change anything yet.
Set up the computation tree.
Set up the current x and y position
Set up the default and non-default settings for greediness
Set up the default garbage collection implementation.
Set up the first character to match, if available.
Set up the globals:  g_init_bits - initial number of bits g_outfile   - pointer to output file
Set up the inner strides array.
Set up the input stream
Set up the iteration.
Set up the iterator parameters
Set up the iterator per-op flags.
Set up the key schedule from the key.
Set up the local name-context to pass to sqlite3ResolveExprNames() to resolve the result-set expression list.
Set up the lookaside buffers for a database connection.
Set up the necessary values
Set up the nested child references
Set up the new page-index array
Set up the op_axes for the outer loop
Set up the output data type, using the input's exact data type if the type number didn't change to preserve metadata
Set up the required files for pIncr.
Set up the signal handlers in a high priority constructor, so that they are installed before the Go code starts.
Set up the start point in X if the increment is not unity.
Set up the start points in  X  and  Y.
Set up the start points in X and Y if the increments are not both unity.
Set up the strideperm values
Set up the tolerance.
Set up the transaction-counter change checking flags when transitioning from a SHARED to a RESERVED lock.
Set up the transpose operation
Set up things specially for that OS
Set up to convert the objects to a common datetime unit metadata
Set up utility functions and values
Set up workspaces for eigenvalues only/accumulate new vectors routine
Set useTempTable to TRUE if the result of the SELECT statement should be written into a temporary table (template 4).
Set user's error text message
Set values to pass back
Set values to reset to if this is followed by a zero repeat.
Set variable "nMinEst" to the smallest number of documents in  any phrase doclist for which 1 or more token doclists have been loaded.
Set variable eOnePass to indicate the strategy used to implement this delete:  ONEPASS_OFF:    Two-pass approach - use a FIFO for rowids/PK values.
Set variable i to the maximum number of bytes of input to tokenize.
Set variable iNext to the next available segdir index at level iLevel.
Set zIdx to point to a nul-terminated string containing this name.
Set zIn to point at the start of the input buffer and zTerm to point 1 byte past the end.
Set zoptind to php_optind
Set-up for the last transform:
SetEndOfFile() returns non-zero when successful, or zero when it fails.
Sets CPU and IO priorities.
Sets a single item in the array, based on a single multi-index array of values, which must be of length PyArray_NDIM(self).
Sets addr by hostname or by ip in string form (AF_INET or AF_INET6, depending on the socket)
Sets addr by hostname, or by ip in string form (AF_INET)
Sets addr by hostname, or by ip in string form (AF_INET6)
Sets core_num_dim_ix, core_num_dims, core_dim_ixs, core_offsets, and core_signature in PyUFuncObject "ufunc".
Sets the context function to call to record the traceback context when calling a Go function from C code.
Sets the context in which a session can be reused.
Sets the global typeDict object, which is a dictionary mapping dtype names to numpy scalar types.
Sets variant value to val.
Sets various OpenSSL options.
Setting NDEBUG makes the code smaller and faster by disabling the assert() statements in the code.
Setting a value of 0 indicates no time stamp is available.
Setting and getting need to have different permutations.
Setting contextEngineIS if specified
Setting contextName if specified
Setting it to the offset to the ALT or KET, then incrementing ecode achieves this effect.
Setting persistent WAL mode causes those files to persist after close.
Setting sqlite3GlobalConfig.m to all zeros will cause malloc to revert to its default implementation when sqlite3_initialize() is run
Setting the auth function to NULL disables this hook.
Setting the authentication passphrase.
Setting the authentication protocol.
Setting the busy_timeout to 0 or negative disables the timeout.
Setting the default length first and initializing 'offset' avoids compiler warnings in the REF_REPEAT code.
Setting the flag during testing causes certain assert() statements in the code to be activated that demonstrat invariants on well-formed database files.
Setting the mtime in the gzip header does not effect the mtime of the file generated.
Setting the security level.
Setting the security name.
Setting the security protocol passphrase.
Setting the security protocol.
Setting the size limit to -1 means no limit is enforced.
Setting this flag makes it possible to open a directory.
Setting this to the "natural word" size of your CPU may improve performance.
Setting this up requires a two pass approach.
Setting this variable to zero causes the module to use the old syntax.
Setting thread-local safe levels can help when implementing sandboxes which run insecure code.
Setting to a null string reverts to the default database directory, which for database files specified with a relative path will probably be based on the current directory for the process.
Setting to a null string reverts to the default temporary directory search.
Settings in PATH section are ZEND_INI_SYSTEM accessible and thus mimics the php_admin_* directives used within Apache httpd.conf when PHP is compiled as module for Apache.
Setup Keys that will be used for all hmac rounds
Setup Main Loop to build a long enough result
Setup calling arguments
Setup default context
Setup information needed to write frames into the WAL
Setup iterators to iterate over all but given axis
Setup resources that are needed by the handler.
Setup the CGI variables if this is the main request
Setup the array object's numerical structures with appropriate ufuncs in d
Setup the execution environment and spawn new process
Setup the umath module
Shadow table to create (e.g. "content")
ShallowCopy only needs to copy the information above
Shape must be specified when 'data' is specified
Sharable content of this btree
Shared code to read color tables from gd file.
Shared libraries that intend to be loaded as extensions by SQLite should #include this file instead of  sqlite3.h.
Shared library endings to try if zFile cannot be loaded as written
Shared locks never span more than one byte
Shared memory associated with this inode
Shared memory instance
Shared memory segment information
Shared memory segment used for locking
Shared part of btree structure
Shared-memory regions  are numbered starting from zero.
Shared-memory regions are numbered starting from zero.
Shift JIS, Big5 and HKSCS use multi-byte encodings where an ASCII range byte can be part of a multi-byte sequence.
Shift all entries before the current one up by one to make room.
Shift all the axisdata structures by one
Shift following values up by two.
Shift the array up by one.
Shift the decomps up by one if the codes don't match.
Shift the error token.
Shift the lookahead token.
Shift the vectors which define the elementary reflectors one column to the right, and set the first ilo and the last n-ihi rows and columns to those of the unit matrix
Shift things around to insert the code if necessary.
Shifts left before out of the error
Short circuit portscan, we're dealing with an IPv6 embedded address
Short name is 8.3 format.
Short summary about the backtracking mechanism empolyed by the jit code generator: The code generator follows the recursive nature of the PERL compatible regular expressions.
Short-circuit having to go through method calls and data marshalling when we're using default behavior
Short-circuit: if no callback and only one array, just return it.
Short-term TODO list: - Implement XML_ExternalEntityParserCreate() - XML_SetCommentHandler - XML_SetCdataSectionHandler - XML_SetParamEntityParsing
Shortcut for the case when the freelist is empty
Shortcut for the common case where the false and NULL outcomes are the same.
Shortcut: When we have a open_basedir and someone tries to unset, we know it'll fail
Shortened table list or OR-clause generation
Shortens _str_ and adds three dots, an ellipsis, if it is longer than _len_ characters.
Shorthand for starting a new tree item that consists of a single label
Shorthand for the functions above
Should *not* be optimized as load_immediate, as pcre relocation mechanism will match this fixed 4-instruction pattern.
Should always be set to 0 or 1.
Should be a power of 2, and ideally, evenly divide into BITVEC_USIZE.
Should be always 0x0 or ERROR_MARKER for error
Should be always EODATA_MARKER
Should be at least READONLY, WRITEONLY or READWRITE.
Should be calloc, as mnd_calloc will reference LOCK_access
Should be enough for the metadata of a single row
Should be evaluated properly.
Should be free'd by caller.
Should be numbered beginning with 0.
Should be removed after boolean as integer deprecation.
Should be server specific, but that requires changing all the XMLRPC_VALUE api's.
Should be the multiply of page size.
Should build on just about anything with minor mods.
Should cause a SHA1_Transform()
Should intercept SIGWINCH.
Should never be executable
Should never get here
Should not be set in a per-request handler.
Should not go over MYSQLND_MAX_PACKET_SIZE, since we expect non-arena memory in mysqlnd_wireprotocol.c .
Should not happen as sizeof is used.
Should not have any newlines at the beginning.
Should only be used during core initialization
Should only be used for the insertion of the odd element ,not the piecemeal building of an entire queue.
Should probably ensure that objects are at least callable Leave this to the caller for now --- error will be raised later when use is attempted
Should security be your highest concern, then you should probably rely on SHA224, SHA256, SHA384 or SHA512.
Should this change, simply remove the assert() and the #if 0.
Should this ever change (because of changes in the code generator) then the fix would be to insert a call to sqlite3VdbeCursorMoveto().
Should we send the entire path in the request line, default to no.
Should we stop event loop
Shouldn't be too hard to do...just need to map of paths to FSEvent streams.
Show abbreviation if wanted
Show completion or original buffer
Show full column names on SELECT
Show short columns names
Show substrings stored in the output vector by number.
Show the complete content of a WhereClause
Shows sorted patterns list in the order which is used for the matching
Shrink it to actually-used volume and set its statistics
Shut up the compiler warning
Shut-up the streams, they don't know what they are doing
Shutdown TSRM (call once for the entire process)
Shutdown output layer (send the set HTTP headers, cleanup output handlers, etc.)
Shutdown scanner/executor/compiler and restore ini entries
Shutdown the mutex system.
Shutdown the operating system interface.
Shutdown the page cache.
Side effects: Initializes the charset.
Side effects: May set php_error based on abnormal conditions.
Sign extension for integer operations.
Sign extension in the first char has no effect - nothing to overwrite yet, and those extra 24 bits will be fully shifted out of the 32-bit word.
Sign-extend on a right shift of a negative number
Sign-extend the operand.
Signal handler for SIGSEGV on a C thread.
Signal handler that uses up more stack space than a goroutine will have.
Signal master that we're done with connection and exiting
Signal mg_stop() that we're done
Signal that the buffer is being used
Signal that the buffer is not being used
Signaled when socket is consumed
Signed integer types are INTNEG in the table
Signed zeros are equal, have to check for it
Signed zeros, subnormal floats, and floats with small exponents all convert to signed zero halfs.
Significant digits after the decimal point
Silence a comiler warning.
Silence a compiler warning
Silence a compiler warning.
Silence complaints from purify about yygotominor being uninitialized in some cases when it is copied into the stack after the following switch.
Silence some compiler warnings
Silently convert bound parameters that appear inside of CREATE statements into a NULL when parsing the CREATE statement text out of the sqlite_master table
Silently convert buffered to unbuffered, for now
Silently ignore any such attempts.
Silently ignore database qualifiers inside CHECK constraints and partial indices.
Silently mask off all other flags.
Similar array as ssl_sw.
Similar code as PUSH_BACKTRACK macro.
Similar effect as calling obj.to_enum, i.e. dispatching to either Kernel#to_enum vs Lazy#to_enum
Similar is true for Mac OS X.
Similar padding is added in the fts3DoclistOrMerge() function.
Similar to bzero(), but has a guarantee not to be eliminated from compiler optimization.
Similar to fts3SqlStmt().
Similar to sqlite3Fts3GetVarint(), except that the output is truncated to a 32-bit integer before it is returned.
Similarly to fscanf, this function always consumes leading whitespace, and any text that could be the leading part in valid input.
Similarly, PF_INET6 as family restricts for IPv6.
Similarly, attempting to use a patchset blob with old versions of the sqlite3changeset_xxx APIs also provokes an SQLITE_CORRUPT error.
Similarly, for ON INSERT triggers the values stored in the OLD.* registers are never accessed, and so are not allocated by the caller.
Similarly, iUpper is to be set to the estimate of the number of rows less than the upper bound of the range query.
Similarly, if an existing row with non-NULL PRIMARY KEY values is updated so that one or more of its PRIMARY KEY columns are set to NULL, the resulting changeset contains a DELETE change only.
Similarly, if the 'magic' value is invalid, ignore the whole WAL file.
Similarly, if the database is truncated using PagerTruncateImage(),  dbSize is updated.
Similarly, if you want something other than the system's free() to be called to recycle memory acquired from MALLOC, #define FREE to be the name of the alternate routine.
Similarly, pPage must be the right kind (index or table) of b-tree page.
Similarly, streaming API functions that return changesets (or patchsets) return them in chunks by way of a callback function instead of via a pointer to a single large buffer.
Similarly, the last 6 months do not change from year to year.
Similarly, the mUnusable mask contains all FROM clause entries that occur after the virtual table and are separated from it by at least one LEFT or  CROSS JOIN.
Similarly, the old.* record that is part of each DELETE change contains the values that made up the row that was deleted  from the database.
Similarly, the open mode cannot be changed from write only to readable.
Similarly, the value of the "write-version" database header field is stored in rbu_file.iWriteVer.
Similarly, those that return a changeset or patchset do so by returning  a pointer to a single large buffer allocated using sqlite3_malloc().
Similarly, values accessed by AFTER triggers are only included in the returned mask if the TRIGGER_AFTER bit is set in tr_tm.
Simple PyMemoryView'ish object for Python 2.6 compatibility.
Simple case - long that doesn't need to be rounded.
Simple cases we want to handle fast.
Simple cases, (no caching is required).
Simple division can't be used since that will cause wrong results.
Simple implementation using link_ntoa(): This doesn't work on Debian GNU/kFreeBSD 6.0.7 (squeeze).
Simple keys after ':' are allowed in the block context.
Simple keys are allowed after ','.
Simple keys are allowed after '-'.
Simple operation except for updates.
Simple recursions are easily detected.
Simple register allocation.
Simple sanity check that setting memtable rep works.
Simple soundex algorithm as described by Knuth in TAOCP, vol 3
SimpleXML must be initialized before
Simplest way of expressing aperture, so I trust it the most.
Simplified mnemonics: clrldi.
Simplify Diophantine decision problem.
Simplify ssl context option retrieval
Simplify the code that we create a copy of stripped_header no matter if we actually strip something or not.
Simplify, if possible
Simply extend the current range.
Since  this means an in-memory pager performs no IO at all, it cannot encounter  either SQLITE_IOERR or SQLITE_FULL during rollback or while finalizing  a journal file.
Since "b" is a non-hidden column but "a" is hidden, the TF_OOOHidden attribute would apply in this case.
Since "docid" is an  alias for "rowid", use the xRowid() method to obtain the value.
Since 1.9.3, SJIS is the alias of Windows-31J because its character set is usually this one even if its mapping may differ.
Since ARGF stream is a concatenation of multiple files, internally EOF is occur for each file.
Since ArraySize(azCompileOpt) is normally in single digits, a linear search is adequate.
Since B and BX are complex, the following call to DGEMM is performed in two steps (real and imaginary parts).
Since B and BX are complex, the following call to DGEMV is performed in two steps (real and imaginary parts).
Since B and BX are complex, the following call to SGEMM is performed in two steps (real and imaginary parts).
Since B and BX are complex, the following call to SGEMV is performed in two steps (real and imaginary parts).
Since B is complex, the following call to DGEMM is performed in two steps (real and imaginary parts).
Since B is complex, the following call to SGEMM is performed in two steps (real and imaginary parts).
Since Content-Type maybe part of user's headers we need to do this check first.
Since Grandfathered , no value , do nothing , retutn NULL
Since Grandfathered, no value, do nothing, retutn NULL
Since I'm too lazy to
Since Lookup() never goes to disk, it never has to deal with locks or journal files.
Since QR won't update a Z matrix which is larger than the length of D, we must solve the sub-problem in a workspace and then multiply back into Z.
Since Ruby 1.9.2, Time implementation uses a signed 63 bit integer, Bignum or Rational.
Since SQLite does not define USE_PREAD any any form by default, we will not attempt to define _XOPEN_SOURCE.
Since SQLite does not define USE_PREAD in any form by default, we will not attempt to define _XOPEN_SOURCE.
Since Thread::handle_interrupt can be used to defer asynchronous events, this method can be used to determine if there are any deferred events.
Since Unicode code points in that range are not disallowed in any document type, we could do nothing.
Since WhereClause contains an 8-byte field (type Bitmask) it must be aligned on an 8-byte boundary on some architectures.
Since a schema-lock excludes all other database users, the write-lock would be redundant.
Since a system call has failed, errno should be non-zero.
Since all other locks require a read-lock on one of the bytes within this range, this ensures that no other locks are held on the database.
Since balance() may move the cursor, zero the BtCursor.info.nSize and BTCF_ValidNKey variables.
Since both locks came from the same process, the second overrides the first, even though they were on different file descriptors opened on different file names.
Since both numerators are complex NaNs, it seems that the results should agree in kind.
Since buffering is disabled, we can cache the stride
Since files cannot be loaded via this kind of stub, no parameters are accepted when the Phar object is zip- or tar-based.
Since here we are handling internal functions only we can add the keyword flag.
Since holding READ_LOCK(0) prevents a checkpoint from happening, this is usually correct.
Since in this case the query may return a maximum of one row, the results are already in the requested order.
Since it is 0-d its transpose, etc.
Since it is a virtual-table, the Table structure contains a pointer to the head of a linked list of VTable structures.
Since it is the usual case, first check if o is an integer.
Since it performs no memory allocation or IO, the only value that sqlite3BtreeCursor() may return is SQLITE_OK.
Since major is a function on SVR4, we cannot use `ifndef major'.
Since many statement journals never become large, setting the spill threshold to a value such as 64KiB can greatly reduce the amount of I/O required to support statement rollback.
Since mem5.szAtom is always at least 8 and 32-bit integers are used, it is not actually possible to reach this limit.
Since on many architectures DSTERF is much faster than any other algorithm for finding eigenvalues only, it is used here as the default.
Since on many architectures SSTERF is much faster than any other algorithm for finding eigenvalues only, it is used here as the default.
Since one of the two values must be nonzero, the entire "raw" uint64_t must be nonzero, and thus distinct from "empty".
Since only boundary edges are drawn and we always walk around with the filled region to the left, no edge is ever drawn CW.
Since popen() doesn't indicate if the internal fork() doesn't work (e.g. the shell can't be executed) we explicitly set it to 0 to be sure we don't catch any older errno value.
Since public key algorithms are considerably slower than symmetric key algorithms (cf.
Since return is in  sec.
Since schema Tables do not use lookaside, this number should not change.
Since setting a pointer map entry is a relatively expensive operation, this code only sets pointer map entries for child or overflow pages that have actually moved between pages.
Since setting them is just an optimization,  it's easiest just to zero them here.
Since some systems only support mandatory file-locks, we do not read or write data from the region of the file on which locks are applied.
Since structures used in those callback are freed, we need to use an other callback to which avoid segfaults.
Since sunset varies, the day is assumed to begin at 6:00 P.M.
Since that seems to violate the DRY principle, we check against it and abort.
Since the Royal Greenwich Observatory was commissioned in 1675, no timezone defined using GMT at 1600.
Since the VCWD functionality isn't used here, a sophisticated functionality would have to be reimplemented to know ahead there are no files with invalid names there.
Since the checkpointer is not holding the writer lock, there is no point in blocking waiting for any readers.
Since the class is not an interface it needs to be declared as a abstract class.
Since the comparison is to be performed with no conversions applied to the operands, set the affinity to apply to pRight to  SQLITE_AFF_NONE.
Since the conversion is not unique, the result is a list of addrinfo objects.
Since the errors returned by the socket error function WSAGetLastError() are not known by the library routine strerror we have to roll our own.
Since the flags should be set, we just fallback to the register mode.
Since the length of a metonic cycle is a constant, this is a simple calculation, except that it requires an intermediate value which is bigger that 32 bits.
Since the minimum repeat, is zero the invalid case is basically the same as an empty case.
Since the names of named mutexes, semaphores, file mappings etc are  case-sensitive, take advantage of that by uppercasing the mutex name and using that as the shared filemapping name.
Since the names of named mutexes, semaphores, file mappings etc are case-sensitive, take advantage of that by uppercasing the mutex name and using that as the shared filemapping name.
Since the pager is in exclusive mode, there is no need to drop any locks either.
Since the parser never creates such a vector, some of the subroutines do not handle this case.
Since the result-set of the SELECT statement may have been modified or reordered, these variables are no longer  set correctly.
Since the string cannot get longer, no need for a maximum buffer size parameter.
Since the table has just been created, it contains no data and the index initialization step can be skipped.
Since the values are variably sized and can get quite large, they are stored separately from the hashes in a garbage-collected heap.
Since the zHeader buffer is only Pager.pageSize bytes in size, more than one call to sqlite3OsWrite() may be required to populate the entire journal header sector.
Since then, we have restructured how trigger code is generated and so this condition is no longer  possible.
Since there can be a very large number of doclists to merge, the merging is done pair-wise using the TermSelect object.
Since these values do not necessarily correspond to columns in SELECT statement pParent, zero them before transfering the ORDER BY clause.
Since this code is only executed in PAGER_OPEN state for a hot-journal rollback, it is guaranteed that the page-cache is empty if the pager is in OPEN state.
Since this is a straightforward rejection algorithm, we can just reject this value in the rejection condition below.
Since this is always an error if it was not a boolean, we can allow the 0-d special case before the rest.
Since this is handled as a fatal error by SQLite, vfs implementations should endeavor to prevent this by setting mxPathname to a sufficiently large value.
Since this is repeated in exif_process_IFD_TAG make it a notice here
Since this may lead to a delay that cannot be controlled, the automatic flushing may be disabled and #flush_sessions can be called explicitly.
Since this source file does not use the system call shutdown, it is safe to #undef it.K
Since this systems doesn't have flock(), the values of the constants are probably not available.
Since trees are built from the bottom up, things will be described from the bottom up.
Since version 2.8.0, the journal format contains additional sanity checking information.
Since we are in MIME mode until buffer becomes empty,
Since we don't know the exact # of bytes, allocate extra
Since we have no way of knowing the true length either, we'll bump up our buffer size to a reasonable size, just in case
Since we ignore an formatting argument it is no longer safe to obey the remaining formatting arguments as the arguments will no longer match the format specs.
Since we know the pair (key, val) is unique, we hash them together to pick a good "random" starting point to scan for a free slot.
Since we successfully read a char above, partial matching must occure.
Since you cannot write to a PK column using the incremental-blob API, this works.
Singaled when socket is produced
Single VALUES term with multiple rows
Single back reference
Single character search can shortcut memcmps
Single character search can shortcut memcmps Can also avoid tolower emallocs
Single character types set the bits and stop.
Single ellipsis index, no need to create a new view.
Single integer index, there are two cases here.
Single precision constants.
Single spaces in the separator are matched to arbitrary-long sequences of whitespace in the input.
Single step in trigger program
Single term in FROM clause
Single-char upto sets the bit and tries the next
Single-script enforcement is on by default.
Size before spilling occurs
Size contains the flags as well.
Size each output buffer in bytes
Size flags for emit_x86_instruction:
Size flags not allowed for typed instructions.
Size in bytes of each node in the node table
Size limit for persistent journal files
Size of aDoclist in bytes
Size of aNode in bytes
Size of all column names (incl.
Size of allocated array at aElem
Size of allocated buffer
Size of allocated pages in bytes
Size of allocation at aData
Size of allocation containing aBuf
Size of allocation rounded up to power of 2
Size of allocation used for *p
Size of apPhrase array
Size of apSegment array
Size of argument array
Size of array apRegion
Size of array apSegment
Size of array apWiData
Size of array at aElem
Size of buffer after writing tbl header
Size of buffer at aDoclist
Size of buffer at aNode (or 0)
Size of buffer at zNode
Size of buffer containing root node
Size of buffer p in bytes
Size of buffer pBuf in bytes
Size of buffer pChangeset in bytes
Size of buffer pData in bytes
Size of buffer pOut in bytes
Size of buffer pRec in bytes
Size of buffer pToken in bytes
Size of buffer pointed to by zHeader
Size of buffer z in bytes
Size of buffer zDoc in bytes
Size of buffer zNext in bytes
Size of buffer zPrev in bytes
Size of changeset blob in bytes
Size of changeset in bytes
Size of column in tokens
Size of column value in tokens
Size of data in the heap
Size of database content section
Size of database in pages
Size of db file in bytes
Size of doclist in bytes
Size of doclist in current entry
Size of each buffer in bytes
Size of each free slot
Size of each object in the array
Size of each scratch buffer
Size of every page in this cache
Size of extra space for each page
Size of extra space in bytes
Size of first block written to WAL file
Size of hash table Rtree.aHash.
Size of header before each frame in wal
Size of increments to stack.
Size of index key in bytes
Size of initial segment.
Size of input text in bytes
Size of journal file on disk
Size of leaf without page-index
Size of list.aMemory allocation in bytes
Size of malloc'd buffer at zMalloc
Size of master journal file
Size of new segment at iAbsLevel
Size of open blob, in bytes
Size of output buffer in bytes
Size of pKey for indexes.
Size of pKey for indices
Size of pKey, or last integer key
Size of pList as PMA in bytes
Size of pList in bytes
Size of pOrig region in bytes
Size of pSorter in bytes
Size of phrase in terms
Size of prefix shared with previous term
Size of previous chunk in Mem3Block elements
Size of previous position list and rowid, as a 4 byte big-endian integer.
Size of read buffer in bytes
Size of record header in bytes
Size of record in bytes
Size of scratch memory requested
Size of segment just written
Size of serialized value in bytes
Size of shared-memory regions
Size of sibling on the left
Size of sibling on the right
Size of source db in pages
Size of string aInput in bytes
Size of struct Mem not including the Mem.zMalloc member or anything that follows.
Size of struct Mem not including the Mem.zMalloc member.
Size of subclassed sqlite3_file
Size of suffix (nTerm - nPrefix)
Size of temporary buffer
Size of term in bytes
Size of term on leaf in bytes
Size of term prefix in bytes
Size of term suffix in bytes
Size of term zTerm in bytes
Size of the Bitvec structure in bytes.
Size of the SHM filename in bytes
Size of the binary record
Size of the buffer, including space for the null termination
Size of the cell being deleted
Size of the cell content header in bytes
Size of the cell content on the main b-tree page
Size of the column cache
Size of the current data field
Size of the data stored in the heap after decompression.
Size of the database file
Size of the free slot
Size of the geometry function blob
Size of the header in the record
Size of the heap since the last garbage collect
Size of the input array
Size of the journal file in bytes
Size of the offsets array
Size of the open journal file in bytes
Size of the original file in pages
Size of the output buffer
Size of the pCell cell in bytes
Size of the record in bytes
Size of the rendering buffer
Size of the request + headers in a buffer
Size of the temporary register block
Size of the window, in chars
Size of the zAuthPW in bytes
Size of the zMalloc allocation
Size of this allocation
Size of this block (does not include this trailer).
Size of token in bytes
Size of utf-16 input string in bytes
Size of vectors for this IN operator
Size of where we allocate shared objects.
Size of write ahead log header, including checksum.
Size of write buffer in bytes
Size of zAppend in bytes (or -1)
Size of zBlob in bytes
Size of zDoc in bytes
Size of zLeTerm in bytes
Size of zName in bytes
Size of zTerm in bytes
Size of zToken in bytes
Size, in bits, of the bitmap element.
Sizes and pointers of various parts of the Parse object.
Sizes in bytes of nPrefix prefix indexes
Sizes of deleted document written here
Sizes of deleted documents
Sizes of each column, in tokens
Sizes of inserted documents
Sizes required for the strings "variant15" , "extlang11", "private12" etc.
Sizes required for the strings "variant15" , "extlang3", "private12" etc.
Skip  to the next session object attached to this database.
Skip 0 so that handles are true
Skip QD entries, they're only used by dn_expand later on
Skip accumulator loading if true
Skip all following slashes and backslashes
Skip all leading non-hex digits.
Skip any MATCH_ALL or MATCH_ONE characters that follow a MATCH_ALL.
Skip any NaT or duplicate
Skip any first-visit elements
Skip any leading divider characters.
Skip any leading whitespace at the beginning of a field unless the format suppresses this behavior.
Skip any opcode that does not need processing by virtual of the fact that it is larger than SQLITE_MX_JUMP_OPCODE, as a performance optimization.
Skip any separator characters.
Skip any whitespace This is much faster than the isspace() function
Skip backwards passed any trailing 0x00 bytes added by NearTrim()
Skip backwards past any 0x00 varints.
Skip blank lines and lines that start with a '#'.
Skip compatibility formatting tag.
Skip consecutive whitespace
Skip continuation of "extended" BB
Skip data --- used to skip over a potentially large amount of uninteresting data (such as an APPn marker).
Skip for now to retain compatibility
Skip incrementing the color count so that the dither / matching phase won't use it on pixels that shouldn't have been transparent.
Skip indices that do not change
Skip leading delimiters
Skip leading sign, if present.
Skip leading whitespace
Skip long name conversion if the path is already long name.
Skip low surrogate if necessary.
Skip masked values, still calling decsrcref for move_references
Skip obviously infeasible cases
Skip one item before completing
Skip over LBox (Which includes both TBox and LBox itself
Skip over any TK_COLLATE nodes
Skip over any TK_COLLATE operators and any unlikely() or likelihood() function at the root of an expression.
Skip over any TK_COLLATE or TK_AS operators and any unlikely() or likelihood() function at the root of an expression.
Skip over any whitespace before checking for a keyword, an open or close bracket, or a quoted string.
Skip over assertive subpatterns
Skip over bracket number
Skip over lookbehind and negative lookahead assertions
Skip over multiple "*" characters in the pattern.
Skip over position list
Skip over the 'height' varint that occurs at the start of every  interior node.
Skip over the drive spec (if any) so as not to change
Skip over the exponent and the sign.
Skip over things that don't match chars
Skip pages already processed
Skip partial indices for which the WHERE clause is not true
Skip past any leading X.
Skip past any whitespace
Skip past it if it is a separator character.
Skip property freeing for the following types
Skip protected and private members.
Skip repeated values at the beginning of the array
Skip skip accumulator loading if true
Skip the "sqlite_altertab_" prefix on the name
Skip the OP_IdxLt or OP_IdxGT that follows
Skip the characters until one of the delimiters characters found.
Skip the conflict logic below if the rowid is unchanged.
Skip the delimiter and following whitespaces if any.
Skip the first 3 bytes to emulate the file type examination
Skip the following conflict logic if it does not.
Skip the input cursor past both and copy a single quote character  to the output buffer.
Skip the other alternatives.
Skip the variable-length character.
Skip these, but we need to add in the name length.
Skip this step if pTab is really a view (in which case the only effect of the DELETE statement is to fire the INSTEAD OF triggers).
Skip this term  and use its inversion.
Skip this term for now.
Skip to next top-level test
Skip to the number field.
Skip to the start of the possible case mappings.
Skip trailing whitespace
Skip undefined indirect elements
Skip unknown arguments.
Skip useless ZEND_RECV and ZEND_RECV_INIT opcodes
Skip white space and pick up leading +/- sign if any.
Slap a null character on the end of the phoned word
Sleep for a little while.
Sleep for nMicro microseconds.
Slide to the start of the next window
Slightly optimised reference implementation of the Mersenne Twister Note that regardless of the precision of long, only 32 bit random integers are produced
Slots on the free list that are between 1 and 3 bytes larger than nByte will be ignored if adding the extra space to the fragmentation count causes the fragmentation count to exceed 60.
Slowest compression level, but with the best space savings.
Small - less than 3/4 of page size.
Small blocks are allocated from RUNs.
Small sizes are rounded up to nearest greater predefined small size (there are 30 predefined sizes: 8, 16, 24, 32, ...
Smaller rScore values come first.
Smaller, self-destribing enums
Smallest possible allocation in bytes
Smallest sample larger than or equal to pRec
Smallest sample not yet tested
Smallest subnormal half
Smith and can be found in D.
Snatched from OpenSSL includes.
Snippet selection is done based on doclists only, so there is no way for fts3BestSnippet() to know whether or not the document  actually contains terms that follow the final highlighted term.
So -1 is returned for the value if INTEGER_PACK_2COMP is specified but returns -2 if INTEGER_PACK_2COMP is not specified.
So Encoding.find(Encoding.locale_charmap) may cause an error.
So IO.pipe and spawn can be used as IO.popen.
So N should be set to twice the expected maximum number of threads.
So PHP would crash by allowing the call.
So a jump past the last instruction of the program is the same as executing Halt.
So a malloc failure  during a hash table resize is a benign fault.
So add an opcode to expire all compiled SQL statements after modifying a pragma value.
So add the EP_Collate marker on X to cause it to be searched first.
So all routines, even the public interface to SQLite, can use a pointer to this structure.
So allocate a temporary array of the right size and use the normal assignment to handle this case.
So are Unicode property matches, if supported.
So assume sqlite3GetVdbe() is always successful here.
So assuming either that either the "old" or "new" version of the value is read, and not some arbitrary value that would never be written by a real client, things are still  safe.
So at this point the data is stored in some number of sorted PMAs within temporary files on disk.
So at this point we may safely modify the database file in any way, knowing that if a power failure occurs, the original database will be reconstructed from the  journal file.
So avoid calling fchown() if we are not running as root.
So bHasStat may not be 2.
So call pager_error() on the way out to make any error persistent.
So calling PmaReaderNext() on this PmaReader before any of the multi-threaded PmaReaders takes better advantage of multi-processor hardware.
So check for that case and return early.
So construct a virtual term of that form.
So copy it in one go.
So create a fake list to simulate this.
So create a substitute.
So declare a substitute.
So define a substitute.
So define the lock related functions as no-ops.
So disable SOCK_CLOEXEC only if socketpair() succeeds without SOCK_CLOEXEC.
So disable ecdh_auto.
So discard this candidate as not viable.
So do additional corruption checks inside this routine and return SQLITE_CORRUPT if any problems are found.
So do not bother - just return true.
So do not go to the disk to fetch the content.
So do not set the "may-abort" flag in this case.
So do not skip the call to the function on the pass that compares BLOBs.
So do not try to make this is into a redefinable interface.
So do not write to the disk again.
So do nothing in this case.
So each chunk consists from 512 pages.
So each mail can be extracted by slice before Unix From line.
So enlarge if first, then do the append.
So extract the trunk page itself and use it as the newly  allocated page
So far no cases are known where it would be an issue.
So far, two transports have been defined.
So fill it from the interface name (ifa_name).
So first try to lookup the overflow page-list cache, if any, then fall back to the getOverflowPage() function.
So for example, if "samplelib" cannot be loaded, then names like "samplelib.so" or "samplelib.dylib" or "samplelib.dll" might be tried also.
So get a WRITE lock and try again.
So go ahead and allocate enough space, just in case.
So if a checkpoint crashes, nBackfillAttempted might be larger than nBackfill.
So if either zTarget or zRbu begin with "file:", it will be interpreted as an SQLite  database URI, not a regular file name.
So if some other shared-cache client already has a write-lock  on page 1, the transaction cannot be opened.
So if speed is of utmost importance, it makes sense to disable the mutexes.
So if the height of the input segment b-trees is N, and input segments are merged eight at a time, updating the input segments at the end of an incremental-merge requires writing (8*(1+N)) blocks.
So if the power fails at the wrong moment they might get out of sync.
So if the sort is stable, there is never any reason to compare PK fields and they can be ignored for a small performance boost.
So if the user has requested this specifically - "ORDER BY term" or "ORDER BY term ASC" - set the sqlite3_index_info.orderByConsumed flag to tell the core the results are already in sorted order.
So if there exists more than one reference to this page, then it  must not really be an overflow page and the database must be corrupt.
So if this routine fails, the database should be rolled back.
So if this routine is called with p equal to the t3 query, then pPrior will be the t2 query.
So if this routine returns 2, then you do not really know for certain if the two expressions are the same.
So if we have True, we add a new axis (a bit like with np.newaxis).
So in this case, we sleep here.
So in this environment, uncomment the following line.
So in this variation of CheckReservedLock(), *pResOut is set to true if any lock is held on the file and false if the file is unlocked.
So instead just raise an IndexError.
So invoke the destructor, then set the value to a 64-bit integer.
So isInit must not be set until the very end of this routine.
So it is OK for it to always fail.
So it is inherited from the parent process.
So it is only used for the timezone name on Windows.
So it is safe to truncate the database file to its minimum required size.
So it needs to be broken into sections.
So it needs to be freed here.
So it safe to end the transaction by manually setting the autoCommit flag to true and detaching the vacuum database.
So it's easiest to filter these calls out here.
So it's enough to wait only RB_WAITFD_OUT and check the pending error by getsockopt().
So it's very easy to determine the CHUNK owning the certain pointer.
So jump over the co-routine implementation to address P2.
So jump over the coroutine implementation to address P2.
So make sure that the regFree1 register is not reused for other purposes and possibly overwritten.
So make the Enter and Leave procedures no-ops.
So mark it read-only.
So mark the allocation as a benign.
So move the page that does into the  gap left by the deleted root-page.
So no one knows leap seconds in the future after the next year.
So no other connection may be writing the db.
So not loading those that are not going to be used eliminates some redundant opcodes.
So omit the OP_RealAffinity opcode if it is present
So omit the rest of the file if PRAGMAs are omitted from the build.
So on Windows95, a single randomly selected by from the 'shared byte range' is locked.
So only the first curve is used.
So only two  constraints are coded.
So pushing a state here evens the stacks.
So quickly guess a minimum result size based on that
So rb_fd_set doesn't reject file descriptors bigger than FD_SETSIZE.
So really the only thing this code accomplishes is to quieten purify.
So really we should do nothing here and continue and let the proper error be raised.
So redefine fcntl() to be something that always succeeds.
So remove them from the pDirty list here.
So reset the colUsed mask
So reset the colUsed mask.
So row_packet's destructor function won't efree() it
So run recovery to do exactly that.
So search forward to see where said rowid really is.
So set JUMPIFNULL to make sure we do the OP_Found if any of the parent-key values are NULL (at this point it is known that none of the child key values are).
So set pKey2 to NULL to prevent vdbeSorterCompare() from decoding pIter2 again.
So set pKey2 to NULL to prevent vdbeSorterCompare() from decoding pReadr2 again.
So setpgid is done in the child when rb_fork_async_signal_safe is returned in the parent.
So substr(x,1,1) returns the first character of x.
So that buffer is not  available for use within this function.
So that is what is done.
So that sizeof(Mem) is a multiple of 8
So that the segment consists of a single leaf and a single interior (root) node.
So that they appear as part of the callers  transaction, these accesses need to be made via the same database  connection as that used to execute SQL operations on the virtual table.
So that they appear as part of the callers transaction, these accesses need to be made via the same database connection as that used to execute SQL operations on the virtual table.
So that when a  document such as "I won first place" is tokenized, entries are added to the FTS index for "i", "won", "first", "1st" and "place".
So the 'y' rule is that 'y' is a consonant unless it is followed by another consonent.
So the above specifies exchanging stdout and stderr.
So the assertTruncateConstraint() call is no longer correct.
So the bitmap is usually sparse and has low cardinality.
So the calling function (pcache.c) will never have a createFlag of 1 on a non-purgeable cache.
So the code within the switch statement will break with convention and be flush-left.
So the computation is done on a copy of the SELECT statement that defines the view.
So the condition described in the above paragraph is not assert()able.
So the content cannot be trusted.
So the effects of disabling the no-content optimization here are confined to those pages that lie between the end of the database image and the end of the database file.
So the extra complication to make this rule less restrictive is probably not worth the effort.
So the following array cannot be const.
So the following array is 63 elements, or 252 bytes, in size.
So the last byte of each varint may be assumed to have a clear 0x80 bit.
So the list is never empty at this point.
So the longest string that can be completely written will be n-1 characters.
So the maximum header length results from a 3-byte type for each of the maximum of 32768 columns plus three extra bytes for the header length itself.
So the mimimum allowable IDF is (1e-6) - roughly the same as a term that appears in just over half of set of 5,000,000 documents.
So the new function is not good for anything by itself.
So the overhead of the incremental merge is somewhere between 8 and 24 blocks.
So the padding is removed only if a problem really exists.
So the phonome SCI invades both S and C.
So the pointer is safe to use later on.
So the redefinition macros are only valid if the SQLITE_CORE macros is undefined.
So the result can be interpreted differently across systems.
So the result will be either the default value or a NULL.
So the temp files are still identified, but anybody smart enough to figure out the code is also likely smart enough to know that calling the developer will not help get rid of the file.
So the unixInodeInfo object contains a pointer to this unixShmNode object and the unixShmNode object is created only when needed.
So there are no more results and we should just return FALSE, error_no has been set
So there is never a forest to deal with.
So there is no chance of overflowing the zOut buffer.
So there is no need to zero the journal  header.
So there is no way to know at compile-time whether or not thread A can override locks on thread B.
So there might be multiple references to the returned pointer.
So there's no harm in leaving this code.
So they are ambiguous from the view of inspect.
So this forward declaration is required.
So this next line is harmless in that case.
So this one always has to be WO_IN.
So this opcode can cause persistent changes to registers P1 and P3.
So this routine is never called.
So this routine returns SQLITE_BUSY in that case and no write transaction is started.
So this should never come up in well-formed queries.
So to avoid this error, zero the first 4 bytes of temp space here.
So to determine  whether an error has actually occurred, it is also necessary to call  GetLastError().
So to determine whether an error has actually occurred, it is also necessary to call GetLastError().
So to find the start of the poslist, skip forward 2 bytes then over a varint.
So two or three index blocks are sufficient to cover a typical 10 megabyte WAL file, assuming 1K pages.
So under Vista, we try to map into a hard coded predefined addresses in high memory.
So unique matches will be used to generate a help message but non-unique one will be used to list alternatives.
So use temporary buffer.
So users needn't set the input kanji code explicitly.
So version dependency on GNU/Linux is same as O_CLOEXEC with open().
So we are forced to probe it
So we are really looking for an instance of a consonant followed by a vowel.
So we are really looking for an instance of of a consonant followed by a vowel.
So we assume it matches every row.
So we can always safely abort as soon as the first unused slot is found
So we can gdFree it with impunity.
So we can leave it out when NDEBUG is defined.
So we cannot safely invoke alloca (N) if N exceeds 4096.
So we cannot stop searching after the first match  because the first match might be for one of the deleted indices or tables and not the table/index that is actually being moved.
So we deal with that case by considering the UTF-8 encoding.
So we define our own static constants here using nothing larger than a 32-bit integer constant.
So we disable usage of interned strings as hash keys especually for this table.
So we do need to check for corruption while scanning the freelist.
So we do not need to make a copy of the filename.
So we don't even try to recover from an EINTR.
So we don't need to care about DST before that.
So we don't trunk NGROUPS anymore.
So we don't worry about memory barriers and such here.
So we forward declare the I/O methods.
So we have to define the macros in different ways depending on the compiler.
So we have to do our own lookup to get env vars.
So we have to introduce  this magic value that the code knows to handle differently.
So we have to introduce this magic value that the code knows to handle differently.
So we have to link generator call frame with caller call frame.
So we might as well translate every INSTEAD OF trigger into a BEFORE trigger.
So we might as well use bogus content rather than reading content from disk.
So we must not search for built-ins when creating a new function.
So we must test for alnum specially.
So we need to save the length somewhere.
So we reinvent the wheel.
So we run it once during initialization.
So we test the effects of a malloc() failing and the sqlite3OsXXX() function returning SQLITE_IOERR_NOMEM using the DO_OS_MALLOC_TEST macro.
So we use only LockFile() and UnlockFile().
So we want a .re scanner to find it.
So we want first of all to clean up all data and then move to tables destruction.
So we want the default action to be for NDEBUG to be set and NDEBUG to be undefined only if SQLITE_DEBUG is set.
So we will commandeer the 9th cell to use as storage for an array of pointers to trigger subprograms.
So we won't increment it but mark it by ex_data.
So we're safe enough.
So we've a single efree() later.
So when in doubt, return TRUE.
So writing '.' to the pipe is sufficient.
So xCheckReservedLock may  return true because the caller itself is holding an EXCLUSIVE lock (but doesn't know it because of a previous error in xUnlock).
So you don't need to set by yourself.
So you should know its esoteric system.
So zero the cached wal-index header to ensure that next time the pager opens a snapshot on this database it knows that the cache needs to be reset.
So, attempt an fsync  and (for now) ignore the overhead of a superfluous fcntl call.
So, error_log is used by - SysV init launch php-fpm as a daemon - Systemd launch php-fpm in foreground
So, even if an error occurs in the pager layer, reset the b-tree objects internal state to indicate that the write transaction has been closed.
So, first do the copy with no refcounting...
So, for an ON INSERT trigger, the value passed to this function as parameter reg is not a readable register, although registers (reg+N) through  (reg+N+N+1) are.
So, fork() should be used.
So, if sibling page iOld had the same page number as pNew, and if pCell really was a part of sibling page iOld (not a divider or overflow cell), we can skip updating the pointer map entries.
So, in other words, this routine advances *ppPoslist so that it points to the next docid in the doclist, or to the first byte past the end of the doclist.
So, in the example above, the cursor numbers would be mapped into integers 0 through 7.
So, it is not appropriate to create a socket.
So, it's return value is platform dependent.
So, just in case this has happened, clear the changeCountDone flag now.
So, no conversion undefined error occurs when converting between the two encodings.
So, that we simply need the data and the descriptor, and perhaps a flag
So, the SQL statements:  A LIKE B  is implemented as like(B, A).
So, the SQL statements:  A LIKE B  is implemented as like(B,A).
So, the approach used is to take the given day number and round it to the closest molad of Tishri (first new moon of the year).
So, the caller should wait for ready for writability as above example.
So, the first molad was 5 hours 793 halakim after the start of Tishri 1, 0001 (which was Monday September 7, 4761 B.C.
So, the notion of what is a name and what is a title is really quite arbitrary.
So, the result may differ even if a same format string is used in other systems such as C.
So, the result may differ even if the same format string is used in other systems such as C.
So, this macro is defined instead.
So, using volatile is practically ok.
So, we always use fdatasync() if it is available, regardless of the value of the dataOnly flag.
So, we do this code for all non 11g versions.
So, we have this declaration here to fix it
So, we need to avoid to use 0.
So, we need to calculate milliseconds by ourselves.
So, we need to take care of that.
So, we only lock if our first test of Inited was false
So, we use cfg_get_string here to check it this once.
So, we use hardcode number for a workaround.
So, we will not do anything.
So, you can continuously input "/usr".
Socket.new(:INET, :STREAM) # TCP socket Socket.new(:INET, :DGRAM)  # UDP socket Socket.new(:UNIX, :STREAM) # UNIX stream socket Socket.new(:UNIX, :DGRAM)  # UNIX datagram socket
Socket::Constants module
SocketError is the error class for socket.
Sockets can communicate within a process, between processes on the same machine or between different machines.
Sockets have their own vocabulary:  domain:* The family of protocols: Socket::PF_INET Socket::PF_INET6 Socket::PF_UNIX etc.
Soft limit for node size
Software that links against both SQLite version 2 and SQLite version 3 should use SQLITE3_TEXT, not SQLITE_TEXT.
Software that uses extended result codes should expect to see new result codes in future releases of SQLite.
Software written by Ian F.
Solar distance, astronomical units
Solaris 10 defines atomic API within
Solaris 9 (or earlier) does not have setenv(3C) and unsetenv(3C).
Solaris cond_timedwait() return EINVAL if an argument is greater than current_time + 100,000,000.
Solaris processes report a tiny stack when run with "ulimit -s unlimited".
Solaris's abort() is async signal unsafe.
Solaris's iconv seems to use SJIS-open.
Solid 3.5 does not have this issue.
Solid doesn't have ExtendedFetch, if DriverManager is used, get Info, whether Driver supports ExtendedFetch
Solve Secular Equation and update singular vectors.
Solve Secular Equation, compute DIFL, DIFR, and update VF, VL.
Solve Secular Equation.
Solve each submatrix eigenproblem at the bottom of the divide and conquer tree.
Solve it using divide and conquer.
Solve the bidiagonal least squares problem.
Solve this 1-by-1 problem first.
Solving memory overlap integer programs and bounded Diophantine equations with positive coefficients.
Some (but not all) possessively repeated subpatterns have already been completely handled in the code just above.
Some API routines are omitted when various features are excluded from a build of SQLite.
Some Features: - output option for xml escaping data.
Some Microsoft compilers lack this definition.
Some OS prepend _ to symbol names while their dynamic linker does not do that automatically.
Some SQLITE_OPEN_ flags (for example, SQLITE_OPEN_FULLMUTEX or SQLITE_OPEN_SHAREDCACHE) are blocked before reaching the VFS.
Some Unix systems provide structured information in the gecos field, but this is system-dependent.
Some allocators round up to a larger multiple or to a power of 2.
Some basic sanity checking on the Btree.
Some broken save handler implementation returns FAILURE for non-existent session ID
Some cleanups are only necessary if the generator was closed before it could finish execution (reach a return statement).
Some code copied from the CPython implementation.
Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc.
Some combination of SQLITE_FUNC_*
Some common OIDs are:  C::  Country Name CN:: Common Name DC:: Domain Component O::  Organization Name OU:: Organizational Unit Name ST:: State or Province Name
Some compilers complain about constants of the form 0x7fffffffffffffff.
Some compilers don't like
Some compilers like AIX, defines uchar in sys/types.h
Some compilers never learn.
Some countries did not accept it until much later.
Some databases require a sequence or table name to be passed in.
Some functionality has been removed (MIME and file attachments).
Some functions like COALESCE() and IFNULL() and UNLIKELY() are implemented as VDBE code so that unused argument values do not have to be computed.
Some glob implementation simply return no data if no matches were found, others return the GLOB_NOMATCH error code.
Some information for the reader...
Some interfaces require a protected sqlite3_value.
Some internal functions.
Some kind of disk I/O error occurred
Some kinds, like datetime, don't fit in the hierarchy, and are special cased as -1.
Some known optimizations are not included to reduce source code size and avoid compile-time configuration.
Some malloc failures are only possible if SQLITE_TEST_REALLOC_STRESS is defined.
Some of the assert() macros in this code are too expensive to run even during normal debugging.
Some of the available extended result codes are listed here.
Some of the definitions that are in this file are marked as "experimental".
Some of the elements in D can be negative because 1-by-1 subproblems were not solved explicitly.
Some of the fields default to undefined and not 0
Some of the more common ones are illustrated below.
Some of the parameters may be NULL
Some of the sub-routines used to merge segments are also used by the query  code in fts3.c.
Some of the underlying methods are also available via the ObjectSpace module.
Some of these have been set already, but many have not.
Some of this code was derived from the MSDOS port(s) and the OS/2 port.
Some of this is repeated in the array_as_mapping protocol.
Some old systems does not have MAP_ANON.
Some operating systems might need to do some cleanup in this routine, to release dynamically allocated objects.
Some options are unpacked into BOOL variables in the hope that testing them will be faster than individual option bits.
Some other thread already grabbed this slot to write this key, but they might not have written the address (or even the sigil value) yet.
Some particular instance methods consume the data in output buffer and return them as a String.
Some people tried this hash and found that it worked rather well.
Some platform causes an error when socktype is omitted and servname is specified as an integer because some port numbers, 512 for example, are ambiguous without socktype.
Some property combinations also acceptable.
Some protocols are sending content like the FTP one, and libcurl try to use the WRITEFUNCTION or the HEADERFUNCTION.
Some responders don't set the nextUpdate field.
Some signals have a defined effect on the process, while others may be trapped at the code level and acted upon.
Some systems have stricmp().
Some terms not completely tested
Some utility routines for the divide:  First a one digit multiply.
Some values listed below may not be supported on your system.
Some versions of windows set the temp file to be read-only, which means that opening it will fail...
Some views have defined column names
Someone else is in the process of initing the static mutexes
Something bad happened
Something got corrupted
Something has gone awry.
Something has moved cursor "p" out of place.
Something like "assignment destination", "output array", or even just "array".
Sometimes a virus scanner or indexing program will open a journal file shortly after it is created in order to do whatever it does.
Sometimes it is clearly required.
Sometimes the code for a subquery will be generated more than once, if the subquery is part of the WHERE clause in a LEFT JOIN, for example.
Sometimes the xfer optimization will only work if the destination table is empty - a factor that can only be determined at run-time.
Sometimes this routine will return 2 even if the two expressions really are equivalent.
Sometimes we can just extend the original range.
Sometimes we need a small amount of code such as a variable initialization to setup for a later assert() statement.
Sometimes, after a file handle is closed by SQLite, the file descriptor cannot be closed immediately.
Sometimes, if P3 is the same register as P2, the implementation is able to avoid a memcpy().
Sometimes, utf8mb4 is just utf8 but the old charsets are utf8mb3.
Somewhat arbitrary length limit here, but should be way more than anyone needs and avoids file-level warnings later on if we exceed MAX_PATH
Somewhere on pPage is a pointer to page iFrom.
Somthing wrong in chunked encoding
Soon we'll add alpha channel to palettes
Sorry, I can't make use of it.
Sort all elements on the list of RowSetEntry objects into order of increasing v.
Sort and Deflate eigenvalues.
Sort and Deflate singular values.
Sort and compute sum of eigenvalues.
Sort and print directory entries
Sort by block number to traverse children in pre-order
Sort callback for sorting entries by "strength" (basically length)
Sort data from this cursor
Sort eigenvalues in increasing order.
Sort entries into the forest on the first test of a new batch
Sort entries into the forest on the first test of a new batch.
Sort in ascending order
Sort into decreasing order
Sort into increasing order
Sort order for each column.
Sort order is irrelevant for a GROUP BY clause.
Sort specified array.
Sort the absolute value of the strides
Sort the axes based on the destination strides
Sort the eigenvalues and corresponding eigenvectors into DLAMDA and Q2 respectively.
Sort the eigenvalues into increasing order
Sort the list of pages in accending order by pgno.
Sort the singular values and corresponding singular vectors into DSIGMA, U2, and VT2 respectively.
Sort the singular values into DSIGMA.
Sort the singular values into ascending order (insertion sort on singular values, but only one transposition per singular vector)
Sort the singular values into decreasing order (insertion sort on singular values, but only one transposition per singular vector)
Sort the singular values into increasing order
Sorted index for this segment
Sorter cursor to read from
Sorter file to read from
Sorter for "ORDER BY rank" queries
Sorter key to compare pVal with
Sorter key to copy into pOut
Sorter object for OP_SorterOpen cursors
Sorter task to read from
Sorter that owns this sub-task
Sorting and partial sorting costs
Sorting index number.
Sorting is accomplished by writing records into a sorting index, then rewinding that index and playing it back from beginning to end.
Sorting order is NULL's first, followed by numbers (integers and reals) sorted numerically, followed by text ordered by the collating sequence pColl and finally blob's ordered by memcmp().
Sorts items so stride is descending, because C-order is the default in the face of ambiguity.
Sorts the array of dates provided in place and removes NaT, duplicates and any date which is already excluded on account of the weekmask.
Source and destination indices
Source and destination is register.
Source data to compress
Source database connection
Source database handle
Source database page data
Source database page to backup
Source files should #include the sqliteInt.h file and let that file include this one indirectly.
Source line number where error occurred
Source of new entry objects
Source registers if SQLITE_ECEL_REF
Source-code line that generated this opcode
Source-file line number of first opcode
Source_encoding and destination_encoding should be a string or Encoding object.
Space allocated for leaf blocks
Space for aKey if aBuffer and pMap wont work
Space for azColumn strings
Space for copies of dividers cells
Space for holding column names
Space for tracking which blocks are checked out and the size of each block.
Space for values for UPDATE inversion
Space is allocated out of a ReusableSpace object by the allocSpace() routine below.
Space is obtained from sqlite3_malloc().
Space on the edges is half of the space between elements
Space should have already been reserved using growVTrans().
Space to buffer journal writes
Space to hold MJ filename from a journal file
Space to hold the  returned string is obtained from sqlite3_malloc().
Space to hold the KeyInfo structure is obtain from malloc.
Space to hold the KeyInfo structure is obtained from malloc.
Space to hold the binary value has been obtained from malloc and must be freed by the calling routine.
Space to hold the labels
Space to hold the result is obtained from malloc and must be freed by the calling function.
Space to hold the returned string is obtained from malloc.
Space to hold the returned string is obtained from sqlite3_malloc().
Space to hold the returned string is obtained from sqlite3_malloc.
Space to hold the returned string is obtained from sqliteMalloc() and must be freed by the calling function.
Space to hold the rollback journal is allocated in increments of this many bytes.
Space to hold the virtual machine's program
Space to unpack a record
Space to write cursor structure
Spaces are ignored in the format string.
Spaces are ignored in the template string.
Spaces at the end are skipped.
Special Comments:  Some comments have special meaning to the tools that measure test coverage:  NO_TEST                     - The branches on this line are not measured by branch coverage.
Special case - lookup by rowid.
Special case - split into chars
Special case - the last token of the snippet is also the last token of the column.
Special case 0 and 1 dimensions
Special case for a single-character break as it needs no additional storage space
Special case for contiguous inner loop
Special case for string arrays (which don't and currently can't have ufunc loops defined, so there's no point in trying).
Special case for very simple 1-d fancy indexing, which however is quite common.
Special case if exponent is a zero.
Special case of C-order flat indexing...
Special case of a FROM clause subquery implemented as a co-routine
Special case subarray handling here
Special case the datetime (but not timedelta) with the nonlinear units (years and months).
Special case to allow 0-d boolean indexing with scalars.
Special case when the index array's size is zero
Special case where no modulus is required
Special case:  Add leading zeros if the flag_zeropad flag is set and we are not left justified
Special case:  Parsing the sqlite_master or sqlite_temp_master schema
Special case: A DELETE without a WHERE clause deletes everything.
Special case: If this is an INSERT statement that will insert exactly one row into the table, raise a constraint immediately instead of incrementing a counter.
Special case: No FROM clause
Special case: a WHERE clause that is constant.
Special case: ext/date wasn't initialized yet
Special case: when ERROR_FILE_EXISTS happens and O_CREAT was
Special cases, optimized implementations
Special cases: +0 and -0
Special code for 1 x 1 Householder
Special code for 10 x 10 Householder
Special code for 2 x 2 Householder
Special code for 3 x 3 Householder
Special code for 4 x 4 Householder
Special code for 5 x 5 Householder
Special code for 6 x 6 Householder
Special code for 7 x 7 Householder
Special code for 8 x 8 Householder
Special code for 9 x 9 Householder
Special code to mimic Numeric behavior for character arrays.
Special command to parse
Special comments in vdbe.c and the mkopcodeh.awk script in the make process cause these values to align.
Special exception for sljit_emit_op_flags.
Special handling for IS_VOID is not necessary (for return types), because this case is already checked at compile-time.
Special handling for a compound-select that originates as a VALUES clause.
Special handling is require for CREATE TRIGGER statements.
Special handling of class SoapVar
Special handling of subjectAltName, see CVE-2013-4073 Christian Heimes
Special internal returns from the match() function.
Special long value case for SIG_DFL and SIG_IGN
Special low-overhead version specific to the boolean type
Special processing for WITHOUT ROWID Tables
Special setup for VxWorks
Special spacing and line-terminating items.
Special values 1 and 2 for the iSrcLine parameter mean that this particular branch is always taken or never taken, respectively.
Special values interpreted by sqlite3SegReaderCursor()
Special-cases for some types
Specific Insn factory
Specific chunk into which cursor points
Specific token to advance
Specifically, a query equivalent to:  ...
Specifically, all but the last digit is 0 and the last digit is 1.
Specifically, each language-id/index combination is allocated 1024  64-bit integer level values ("absolute levels").
Specifically, if one is configured, the pre-update hook is  invoked if P4 is not NULL.
Specifically, the number of pages written to the wal file in wal mode databases, or the number of pages written to the database file in rollback mode databases.
Specifically, the pager jumps into the ERROR state if:  1.
Specifically, the return value of ftsHashFunction() is a pointer to a function that takes two parameters with types "const void*" and "int" and returns an "int".
Specifically, the threshold is set to  the value returned by "PRAGMA main.page_size" multipled by  that returned by "PRAGMA main.cache_size", in bytes.
Specifically, there may be one background thread for each temporary file on disk, and one background thread to merge the output of each of the others to a single PMA for the main thread to read from.
Specifically, this file contains code to insert, update and delete rows from FTS3 tables.
Specifically, to the following:  + number of columns in table (varint) + array of PK flags (1 byte per column), + table name (nul terminated).
Specification is not stable and you should not depend on this value.
Specifies a ceiling on the real-time priority that may be set for this process.
Specifies a ceiling to which the process's nice value can be raised.
Specifies a limit on the number of signals that may be queued for the real user ID of the calling process.
Specifies a value one greater than the maximum file descriptor number that can be opened by this process.
Specifies limit on CPU time this process scheduled under a real-time scheduling policy can consume.
Specifies the limit (in pages) of the process's resident set.
Specifies the limit on the number of bytes that can be allocated for POSIX message queues for the real user ID of the calling process.
Specify an alternative malloc implementation
Specify an alternative mutex implementation
Specify an alternative page cache implementation
Specify bool if no dtype was requested for the mask
Specify that the loop specified by the given index should use the array of input and arrays as the data pointer to the loop.
Specify the activation key for a CEROD database.
Specify the activation key for a SEE database.
Specify the key for an encrypted database.
Specs dictate that they are both type XML_DOCUMENT_TYPE_NODE
Spill is ok, but do not sync
Spilling is also prohibited when in an error state since that could lead to database corruption.
Split facets so that they only have 3 points each.
Split name into class/namespace and method/function names
Split the WHERE clause into separate subexpressions where each subexpression is separated by an AND operator.
Split the flags into separate global and op flags
Split the master block.
Splits a BigDecimal number into four parts, returned as an array of values.
Sponsored in part by the Defense Advanced Research Projects Agency (DARPA) and Air Force Research Laboratory, Air Force Materiel Command, USAF, under agreement number F39502-99-1-0512.
Sqlite can't deal, this is a critical I/O error
Sqlite3_aggregate_context() is normally called once for each invocation of the xStep callback and then one last time when the xFinal callback is invoked.
Square output for digest
SrcList to be returned
Stack #0 not is used.
Stack address function for a CRAY-1, CRAY X-MP, or CRAY Y-MP.
Stack high-water mark.
Stack layout naming characters: S - Push the current STR_PTR 0 - Push a 0 (NULL) A - Push the current STR_PTR.
Stack may only be destroyed when no cached patterns possibly associated with it do exist.
Stack must be aligned to 8 bytes:
Stack must be aligned to 8 bytes: (LR, R4)
Stack size for cloned child
Stack structure for L,l,R,r
Stack structures for CRAY-1, CRAY X-MP, and CRAY Y-MP
Standard Initializations
Standard message handlers
Standard says more types possible but skip them...
Start MD5 accumulation.
Start Of Image (beginning of datastream)
Start Of Scan (begins compressed data)
Start YYX at -YYN if negative to avoid negative indexes in YYCHECK.
Start a new range before the current location.
Start a search on a new JSON string
Start a statement subtransaction.
Start a thread to handle exceptions.
Start a write transaction on these databases
Start another range on the end.
Start at end of previous match
Start at the beginning and go until we hit offset
Start at the beginning of the input hash and copy entries to output hash until offset is reached
Start at the beginning of the string
Start at the end and work backwards.
Start at the inner-most context and move outward until a match is found
Start computation of P byte sequence.
Start computation of S byte sequence.
Start label for the block-output subroutine
Start master (listening) thread
Start of BEFORE trigger programs
Start of MatchinfoBuffer code.
Start of ascii tokenizer implementation.
Start of code for Step 6
Start of error message
Start of free block is off the page
Start of highlight() implementation.
Start of match assertion
Start of memory holding result set
Start of nested parenthesized sub-expression, or comment or lookahead or lookbehind or option setting or condition or all the other extended parenthesis forms.
Start of option with offset
Start of porter stemmer implementation.
Start of range is constrained
Start of stack buffer
Start of subject assertion
Start of subroutine that outputs a result row
Start of unicode61 tokenizer implementation.
Start offset in pFile
Start offset of token
Start scanning the virtual table
Start some goroutines.
Start talking to ftp server
Start the buffer at the provided iterindex
Start the count as negative the number of holidays in the range
Start the operations.
Start the validating loop
Start the view context
Start the view context.
Start this only for the time of the run or eval command, for so long that the main thread is busy serving some debug session.
Start transaction here if not NULL
Start with an empty holidays list
Start with an empty image information structure.
Start with the floating-point exception flags cleared
Start with the fraction part.
Start with the larger scalar kind
Start with the length of the BRA and KET and any extra bytes that are required at the beginning.
Start with the time of the first molad after creation.
Start writing at this offset
Started out as two integer operands
Starting from windows Vista, heap randomization occurs which might cause our mapping base to be taken (fail to map).
Starting offset in main journal
Starting offset of private data for capturing brackets.
Starting offset to score
Starting optimizations
Starting pointer for partial soft matches.
Starting with OpenSSL 1.0.0, digest algorithms are no longer restricted, any Digest may be used for signing.
Starts up a thread running a run loop, creates the env, and then returns it
Startup TSRM (call once for the entire process)
Startup extensions mechanism
Stash the color map into the image
Stat an opened phar file handle
State information for the randomness gatherer.
State information local to the memory allocation subsystem.
State transition tables (immutable) Data structure is from Dragon Book 4.9
State used by the fts5DataXXX() functions.
State variables used for validating that the transaction control methods of the virtual table are called at appropriate times.
State vector for the DB fixer
State:       **  SEMI  WS  OTHER  EXPLAIN  CREATE  TEMP  TRIGGER  END
Statement changes (Vdbe.nChange)
Statement changes (Vdbe.nChanges)
Statement for DELETE ops
Statement for INSERT operations
Statement for reading and writing
Statement handle pointing at new row
Statement holding cursor open
Statement holding lock on pIndex
Statement journals spill to disk when their size exceeds the following threshold (in bytes).
Statement number (or 0 if has not opened stmt)
Statement requested from fts3SqlStmt()
Statement subtransactions are used around individual SQL statements that are contained within a BEGIN...COMMIT block.
Statement to bind value to
Statement to iterate through segments
Statement to query database with
Statement to return all language-ids
Statement under construction
Statement used to fetch segdir
Statement used to insert the encoding
Statements created by rbuObjIterPrepareAll()
Statements expire when things happen that make their programs obsolete.
Statements to read/write/delete a record from xxx_node
Statements to read/write/delete a record from xxx_parent
Statements to read/write/delete a record from xxx_rowid
Static mutexes are for internal use by SQLite only.
Static mutexes should never fail...
Static space for the 2 default backends
Status is true, false, or an integer.
Stay within bounds of both yycheck and yytname.
Stdin and pipe read should use encoding conversion for working properly with mode change.
Steal the dtype reference
Steals a reference to 'base'.
Stemming never increases the length of the word.
Step (1L): apply back the Givens rotations performed.
Step (1R): apply back the new right singular vector matrix to B.
Step (2L): permute rows of B.
Step (3L): apply the inverse of the left singular vector matrix to BX.
Step (3R): permute rows of B.
Step (4R): apply back the Givens rotations performed.
Step 1: Search the hash table for an existing entry.
Step 2: Abort if no existing page is found and createFlag is 0
Step 2: Check to see if the LHS contains any NULL columns.
Step 2: If the page was found in the hash table, then return it.
Step 3: Abort if createFlag is 1 but the cache is nearly full
Step 6: Loop through rows of the RHS.
Step 7:  If we reach this point, we know that the result must be false.
Step must not be a Datetime
Step one, copy the live values in a new heap.
Step the cursor to the back to the previous entry in the database.
Step two, memcopy the values back into the shared heap.
Step until we use up the rest of the offset
Step1: Search a zero byte (8 continous zero bit).
Steps 3, 4, and 5 implemented by this subroutine
Stevens book says, successful finish turn on RB_WAITFD_OUT and failure finish turn on both RB_WAITFD_IN and RB_WAITFD_OUT.
Still didn't find anything, let's find the zone solely based on offset/isdst then
Still the result from the query is PASS
Still, after obtaining a Cipher instance, we need to tell the instance what it is that we intend to do with it, so we need to call either  cipher.encrypt  or  cipher.decrypt  on the Cipher instance.
Stmt under construction
Stmt-journal spill-to-disk threshold
Stolen directly out of the book...
Stop accumulating errors when this reaches zero
Stop at an unescaped space or tab.
Stop if out of errors
Stop if the unit is days
Stop if the unit is femtoseconds
Stop if the unit is hours
Stop if the unit is microseconds
Stop if the unit is milliseconds
Stop if the unit is minutes
Stop if the unit is months
Stop if the unit is nanoseconds
Stop if the unit is picoseconds
Stop if the unit is seconds
Stop if the unit is years
Stop if this was the last box
Stop if tried at original pos
Stop reporting errors after this many
Stop signal received: somebody called mg_stop.
Stop the collapse new base when the would not be of the same type (i.e. different subclass).
Stop the operation but leave all prior changes
Stop the run when there's a valid index again
Stop when row count reaches this
Stops warning for unused parameter
Storage module to write to
Storage space to hold the object has already been allocated and is passed in as the p pointer.
Store 1 if the result is not empty
Store BEGIN_SILENCE/END_SILENCE pair to restore previous EG(error_reporting) value on exception
Store EMIN for passing to DLASQ3.
Store EMIN for passing to SLASQ3.
Store SELECT results in intermediate table
Store SQLITE_NOMEM here if required
Store a pointer to the memory block in global structure mem3.
Store a private linked list of absolutely positioned children so that we can efficiently traverse them later.
Store a private linked list of children that need to be layed out.
Store a reference for decref on deallocation
Store allocated handle here
Store an incr-merge hint in the database.
Store eigenvalues in (RT1R,RT1I) and (RT2R,RT2I).
Store file date/time.
Store first two pre-read bytes.
Store in register P1 the text of an error message describing any problems.
Store it if requested
Store its associated 'score' in iBestScore.
Store length and shift the list ptr
Store match begin and end.
Store mime type in the vector.
Store numeric indexes in proper order
Store pointer to the allocated page here
Store result as data with an automatic rowid
Store result as keys in an index
Store result in a memory cell
Store result in an queue
Store results as keys in an index
Store rise and set times - as Unix Timestamp
Store state in digest
Store string indexes referencing the same zval
Store that token type in 'token', and its length in 'len' (to be used next iteration of this loop).
Store the RAW variable internally
Store the best snippet in  pFragment.
Store the boolean complement in register P2.
Store the compiled pattern and extra info in the cache.
Store the conch filename in memory obtained from sqlite3_malloc().
Store the conch filename in memory obtained from sqlite3_malloc64().
Store the current STR_PTR in OVECTOR(0).
Store the current value of the database handles deferred constraint counter.
Store the diagonal elements of T in working array WORK.
Store the eigenvalues isolated by CGEBAL.
Store the eigenvalues isolated by DGEBAL.
Store the eigenvalues isolated by SGEBAL.
Store the eigenvalues isolated by ZGEBAL.
Store the index column value in this register
Store the integer that is read in *pRes.
Store the integer value from a VFP register.
Store the length of input data (in bits):
Store the maximum page count after the change in register P2.
Store the metadata dictionary
Store the name and decltype
Store the ones-complement of the P1 value into register P2.
Store the output in zOut.
Store the page number here
Store the perm we applied
Store the requested dtype
Store the result as data using a unique key.
Store the result in register P3.
Store the result in variable iRes.
Store the results in "r".
Store the results in the Queue.
Store the results of the setup-query in Queue.
Store the rollback journal in memory
Store the string in memory obtained from sqliteMalloc() and make *pz point to that string.
Store the token that zCsr points to in tname.
Store the token type in *tokenType before returning.
Store the union of cells p1 and p2 in p1.
Store the value in this register
Store this blob in register P2.
Store this number in "k".
Store this value in nNew.
Store trace, sum(eigenvalues) and information on performance.
Store type information
Stored immediately after the three collation sequences is a copy of the collation sequence name.
Stores locks needed for OpenSSL thread safety
Storing max length set in OCIBindByName() to check it later in php_oci_bind_in_callback() function to avoid ORA-1406 error while executing OCIStmtExecute()
Straight index lookup
Straightforward reduction
Stream will report errors opening file
Stream wrapper stat implementation of stat()
Streaming version of sqlite3changeset_concat().
Streaming version of sqlite3changeset_invert().
Streaming version of sqlite3changeset_start().
Streaming version of sqlite3session_changeset().
Streaming version of sqlite3session_patchset().
Streaming versions of changegroup_add().
Streaming versions of changegroup_output().
Streams based network functions
Strengthened by ticket #3300)  (4)  The subquery is not DISTINCT.
Strides are NumPy strides.
Strides are only added if given (because data is given).
String arguments are converted to symbols.
String containing int array to decode
String defining the affinity of each column
String encoding (0 for blobs)
String extra_data will be saved with binary data.
String inserted after highlighted term
String inserted before highlighted term
String inserted between snippets
String is converted successfully
String literals, quoted ids
String matching - Sunday algorithm http://www.iti.fh-flensburg.de/lang/algorithmen/pattern/sundayen.htm
String on RHS of LIKE operator
String or BLOB exceeds size limit
String output is a special case: write as many bytes as fit, but pretend we wrote everything.
String rep is nul terminated
String to be tokenized
String to match against
String to quote, escape and append
String to return via *pzImposterCols
String to return via *pzImposterPK
String to return via *pzWhere
String wasn't interned but we will use it as interned anyway
String write handler.
String, possibly obtained from sqlite3_malloc
Strings are simply reinterpreted as blobs with no change to the underlying data.
Strings captured from named capture groups are assigned to local variables only in the second case.
Strings passed to libcurl as 'char *' arguments, are copied by the library since 7.17.0
Strings that look like floating point values but which have no fractional component (example: '48.00') will have a MEM_Int representation when bTryForInt is true.
Strip all chars not part of section 5 of http://www.faqs.org/rfcs/rfc1738.html
Strip any trailing slashes
Strip out the extra 'one' dimensions in the result
Strip slashes which came before the file name
Strip trailing slashes
Strip trailing space from buf, saving end of line in case required for enclosure field
Strip whitespace, except from field names
Struct for holding a composition pair, and array of composition pairs
Struct for parameters
Struct for properties
Struct for reflection objects
Struct for type hints
Structure allocated for each backup operation.
Structure containing global configuration data for the SQLite library.
Structure for changeset iterators.
Structure for remembering the local variables in a private frame
Structure object to return
Structure of specific index
Structure to contain the status of the current (being edited) line
Structure to save state of computation between the single steps.
Structure used by mg_stat() function.
Structure used internally by this VFS to record the state of an open shared memory connection.
Structure used to store the context required by the  sqlite3_preupdate_*() API functions.
Structure version number (currently 3)
StructurePromoteTo() is a no-op if it is not.
Structured arrays get a sticky aligned bit
Structures for handling numbers.
Structures used by the tokenizer interface.
Structures used by the virtual table interface
Stub for calling setenv
Stub for calling unsetenv
Stub for creating a new thread
Stub function when INCRBLOB is omitted
Stub routines for all mutex methods.
Stub: create a watching thread for a given directory
Stub: initialize the environment
Stub: read all events from the shared list
Study a compiled expression           *
Sub-iterator iChanged of iterator pIter has just been advanced.
Sub-program to execute
Sub-vdbe for trigger program
SubProgram structures associated with a single trigger all have the same value for the SubProgram.token  variable.
SubProgram.nMem is set to the number of memory cells used by the  program stored in SubProgram.aOp.
Subclasses might mess with the shape, so need a baseclass 2.
Subclassing an anonymous struct creates an extra anonymous class that will never be used.
Subfunction return code
Subject to rules (11), (13) and (14), they may also contain ORDER BY, LIMIT and OFFSET clauses.
Subject to the following 3 conditions, Epinions, Inc.
Subroutine for resetting the accumulator
Subroutine return code
Subscript Array Iterator *************************  This object handles subscript behavior for array objects.
Subsequent arguments vary depending on the configuration verb.
Subsequent calls return the same context that was returned on prior calls.
Subsequent calls use this cache to make seeking to the supplied offset  more efficient.
Subsequent changes to the database from other connections are not seen by the reader until a new read transaction is started.
Subsequent code will scan expressions looking for iParent references and replace those references with expressions that resolve to the subquery FROM elements we are now copying in.
Subsequent key schedule rotation permutations
Subsequent lines will be indented so that they begin at the current cursor position.
Subsequent pconnects in the same script are not guaranteed to get the same database session.
Subsequent visits will be skipped if the input parameters don't change.
Subset of btreeMask that requires a lock
Subspace iteration is necessary, so the extra op is iterated independently, and the iteration order is fixed at C (could also use Fortran order if the array is Fortran order).
Substitute a NULL pointer for any missing APIs.
Substitute case-sensitive (or lowercase) constants
Substitute case-sensitive (or lowercase) persistent class constants
Substitute expressions
Substitute function - never called
Substitute the rowid (column -1) for the INTEGER PRIMARY KEY
Substitute the variable and function names.
Substitute true, false and null (including unqualified usage in namespaces)
SubstituteName is not used
Subsubstructure is also included.
Subsumed into restriction (3).
Subtask context (for pKeyInfo)
Subterms pOne and pTwo are contained within WHERE clause pWC.
Subtotal of bytes in cells on one page
Subtract one day for each 100 years
Subtract one day for each 4 years
Subtract one day for each 400 years
Subtract the numbers.
Subtracting one from the right table bitmask gives a bitmask for all tables to the left of the join.
Subtraction, carry is really borrow.
Subtriggers create subcontexts for their duration.
Subtype for this value
Subverting this mechanism by using "PRAGMA schema_version" to modify the schema-version is potentially dangerous and may lead to program crashes or database corruption.
Success code from a subroutine
Successfully created session
Successfully handled a verb
Successively merge eigensystems of adjacent submatrices into eigensystem for the corresponding larger matrix.
Such a cell consists of a 4 byte page number followed by a variable length integer.
Such a slot is NOT matchable by any hash lookup due to the tag bit.
Such changes are ignored by the session module.
Such column values may still be stored as integers, for space efficiency, but after extraction we want them to have only a real value.
Such expressions could be omitted from the code completely.
Such fsyncs are not needed on newer journaling filesystems, but are required on older filesystems.
Such groups are non-capturing and are not assertions of any kind.
Such interned strings are shared across all PHP processes
Such procs are typically generated by +lambda+.
Such small cells will be rare, but they are possible.
Such tables require special handling during INSERT processing.
Such tests must be performed before calling this routine.
Such that the comparison is always going to be false
Such values can only be added to xmlrpc_vector_struct.
Sufficient space is allocated to the return value to hold the suppressed trailing zeros.
Sum of bytes in all opened PMAs
Sum of nMax for purgeable caches
Sum of nMin for purgeable caches
Sum of ref counts over all pages
Sum of the nEq values
Summary: - Horizontal filter contributions are calculated on the fly, as each column is mapped from src to dst image.
Sun always above altit
Sun always below altit
Sun's Right Ascension
Sun's apparent radius
Sunday's quick search
Sunday's quick search (ignore case)
Sunday's quick search applied to a multibyte string
Sunday's quick search applied to a multibyte string (ignore case)
Super-Boxes can contain super-boxes which provides us with a hierarchical storage system.
Supplemental planes U+010000 - U+10FFFF
Support added in 5.1.23 by fixing the following bug : Bug #30472 libmysql doesn't reset charset, insert_id after succ.
Support for generic processing c8, i4, f8, etc...
Support for multiple channels added (argb for now).
Support for run-time declaration: dl()
Support sqlite3WhereIsSorted()
Supported in OpenSSL 1.0.1 and higher.
Supported in OpenSSL 1.0.2 and higher.
Supports line edit when inputs line.
Supports only input parameters.
Suppose the action integer is N.
Suppose the result table is stored in an array names azResult.
Suppose there are two processes A and B.
Suppose we are in bin/mygem and want the absolute path of lib/mygem.rb.
Suppress "unused parameter" compiler warning
Suppress an incorrect diagnostic about yylval being uninitialized.
Suppress duplicates for UNION, EXCEPT, and INTERSECT
Suppress error messages if VIEW already exists
Suppress errors if the trigger already exists
Suppress the first OFFSET entries if there is an OFFSET clause
Suppress unused-variable warnings by "using" E.
Suppresses checking the validity period of certificates and CRLs.
Suppresses searching for a alternative chain.
Suspicious pointer arithmetic
Sven Hammarling, Nag Central Office.
Sven Hammarling, Nag Ltd.
Sven Hammarling, Numerical Algorithms Group Ltd.
Swap all content between two VDBE structures.
Swap rows and columns
Swap singular values and vectors
Swap singular values and vectors.
Swap the contents of buffer *p1 with that of *p2.
Swap the numerator and denominator if necessary
Swap the roles of aFrom and aTo for the next generation
Swap two objects of type TYPE.
Swarztrauber (Version 4, 1985).
Sweep throught the array, eliminating unnecessary values
Switch back to microseconds for the casting operation
Switch on next character until the end of the branch
Switch on the character-class of the first byte of the token.
Switch on the current character.
Switch to non-blocking mode and try to consume something from the line, if possible, then continue.
Switch to xxxPOS opcodes
Switches the thread context when waits inputting line.
Switching from bind_one_parameter to bind_parameters may result in zv being NULL
Switching to a new key.
Symbol on the left-hand side of the rule
Symbolic ID of this loop for debugging use
Symbolic name of this SELECT use for debugging
Symbols defined in os.h indentify the 'pending byte' and the 'reserved byte', each single bytes at well known offsets, and the 'shared byte range', a range of 510 bytes at a well known offset.
Sync all the db files involved in the transaction.
Sync at the end of each transaction
Sync the database file for the pager pPager.
Sync the database file to disk.
Sync the db file if all frames in the log are checkpointed.
Sync the hot journal before playing it back since the process that crashed and left the hot journal probably did not sync it and we are required to always sync the journal before playing it back.
Sync the journal file and write all dirty pages to the database.
Sync the journal file if required.
Sync the master journal file.
Synchronous is on by default so database corruption is not normally a worry.
Synchronous signal can't deliver to main thread
Syncing an in-memory journal is a no-op.
Synonyms are #to_i and #to_int
Synthesized from VALUES clause
Syslog levels and the shortcut methods
Syslog messages are typically passed to a central logging daemon.
System (OS) functions
System call return code
System call with warning
System generated locals
Systems that support the isnan() library function should probably make use of it by compiling with -DSQLITE_HAVE_ISNAN.
T       (input) COMPLEX array, dimension (LDT,K) The triangular K-by-K matrix T in the representation of the block reflector.
T       (input) COMPLEX*16 array, dimension (LDT,K) The triangular K-by-K matrix T in the representation of the block reflector.
T       (input) DOUBLE PRECISION array, dimension (LDT,K) The triangular k by k matrix T in the representation of the block reflector.
T       (input) DOUBLE PRECISION array, dimension (LDT,N) The upper quasi-triangular matrix T in Schur canonical form.
T       (input) REAL array, dimension (LDT,K) The triangular k by k matrix T in the representation of the block reflector.
T       (input) REAL array, dimension (LDT,N) The upper quasi-triangular matrix T in Schur canonical form.
T       (input/output) COMPLEX array, dimension (LDT,N) The upper triangular matrix T.
T       (input/output) COMPLEX*16 array, dimension (LDT,N) The upper triangular matrix T.
T       (output) COMPLEX array, dimension (LDT,K) The k by k triangular factor T of the block reflector.
T       (output) COMPLEX array, dimension (LDT,NB) The upper triangular matrix T.
T       (output) COMPLEX*16 array, dimension (LDT,K) The k by k triangular factor T of the block reflector.
T       (output) COMPLEX*16 array, dimension (LDT,NB) The upper triangular matrix T.
T       (output) DOUBLE PRECISION array, dimension (LDT,K) The k by k triangular factor T of the block reflector.
T       (output) DOUBLE PRECISION array, dimension (LDT,NB) The upper triangular matrix T.
T       (output) INTEGER The number of ( BETA ) digits in the mantissa.
T       (output) REAL array, dimension (LDT,K) The k by k triangular factor T of the block reflector.
T       (output) REAL array, dimension (LDT,NB) The upper triangular matrix T.
T his is detected when we cannot recover the previous A.
T is modified, but restored on exit.
TAG( output )  Output the given code.
TARGET:   any computer with an ANSI C compiler  AUTHOR:   Antoon Bosselaers, ESAT-COSIC (Arranged for libc by Todd C.
TAU          (output) DOUBLE PRECISION The root of the equation f(x).
TAU          (output) REAL The root of the equation f(x).
TAU     (input) COMPLEX The value tau in the representation of H.
TAU     (input) COMPLEX array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by CGELQF.
TAU     (input) COMPLEX array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by CGEQLF.
TAU     (input) COMPLEX array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by CGEQRF.
TAU     (input) COMPLEX array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i).
TAU     (input) COMPLEX array, dimension (N-1) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by CGEHRD.
TAU     (input) COMPLEX*16 The value tau in the representation of H.
TAU     (input) COMPLEX*16 array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by ZGELQF.
TAU     (input) COMPLEX*16 array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by ZGEQLF.
TAU     (input) COMPLEX*16 array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by ZGEQRF.
TAU     (input) COMPLEX*16 array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i).
TAU     (input) COMPLEX*16 array, dimension (N-1) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by ZGEHRD.
TAU     (input) DOUBLE PRECISION The value tau in the representation of H.
TAU     (input) DOUBLE PRECISION array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by DGELQF.
TAU     (input) DOUBLE PRECISION array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by DGEQLF.
TAU     (input) DOUBLE PRECISION array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by DGEQRF.
TAU     (input) DOUBLE PRECISION array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i).
TAU     (input) DOUBLE PRECISION array, dimension (N-1) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by DGEHRD.
TAU     (input) REAL The value tau in the representation of H.
TAU     (input) REAL array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by SGELQF.
TAU     (input) REAL array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by SGEQLF.
TAU     (input) REAL array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by SGEQRF.
TAU     (input) REAL array, dimension (K) TAU(i) must contain the scalar factor of the elementary reflector H(i).
TAU     (input) REAL array, dimension (N-1) TAU(i) must contain the scalar factor of the elementary reflector H(i), as returned by SGEHRD.
TAU     (output) COMPLEX The value tau.
TAU     (output) COMPLEX array, dimension (N-1) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) COMPLEX array, dimension (NB) The scalar factors of the elementary reflectors.
TAU     (output) COMPLEX array, dimension (min(M,N)) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) COMPLEX*16 The value tau.
TAU     (output) COMPLEX*16 array, dimension (N-1) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) COMPLEX*16 array, dimension (NB) The scalar factors of the elementary reflectors.
TAU     (output) COMPLEX*16 array, dimension (min(M,N)) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) DOUBLE PRECISION The value tau.
TAU     (output) DOUBLE PRECISION array, dimension (N-1) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) DOUBLE PRECISION array, dimension (NB) The scalar factors of the elementary reflectors.
TAU     (output) DOUBLE PRECISION array, dimension (min(M,N)) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) REAL The value tau.
TAU     (output) REAL array, dimension (N-1) The scalar factors of the elementary reflectors (see Further Details).
TAU     (output) REAL array, dimension (NB) The scalar factors of the elementary reflectors.
TAU     (output) REAL array, dimension (min(M,N)) The scalar factors of the elementary reflectors (see Further Details).
TAU   (input) DOUBLE PRECISION This is the shift.
TAU   (input) REAL This is the shift.
TAUP    (output) COMPLEX array, dimension (NB) The scalar factors of the elementary reflectors which represent the unitary matrix P.
TAUP    (output) COMPLEX array, dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the unitary matrix P.
TAUP    (output) COMPLEX*16 array, dimension (NB) The scalar factors of the elementary reflectors which represent the unitary matrix P.
TAUP    (output) COMPLEX*16 array, dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the unitary matrix P.
TAUP    (output) DOUBLE PRECISION array, dimension (NB) The scalar factors of the elementary reflectors which represent the orthogonal matrix P.
TAUP    (output) DOUBLE PRECISION array, dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the orthogonal matrix P.
TAUP    (output) REAL array, dimension (NB) The scalar factors of the elementary reflectors which represent the orthogonal matrix P.
TAUP    (output) REAL array, dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the orthogonal matrix P.
TAUQ    (output) COMPLEX array dimension (NB) The scalar factors of the elementary reflectors which represent the unitary matrix Q.
TAUQ    (output) COMPLEX array dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the unitary matrix Q.
TAUQ    (output) COMPLEX*16 array dimension (NB) The scalar factors of the elementary reflectors which represent the unitary matrix Q.
TAUQ    (output) COMPLEX*16 array dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the unitary matrix Q.
TAUQ    (output) DOUBLE PRECISION array dimension (NB) The scalar factors of the elementary reflectors which represent the orthogonal matrix Q.
TAUQ    (output) DOUBLE PRECISION array dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the orthogonal matrix Q.
TAUQ    (output) REAL array dimension (NB) The scalar factors of the elementary reflectors which represent the orthogonal matrix Q.
TAUQ    (output) REAL array dimension (min(M,N)) The scalar factors of the elementary reflectors which represent the orthogonal matrix Q.
TBB: Write img to test/fttest.png
TBB: move this up so include files are not brought in
TBD need to come up with better match here.
TBD:  Insert subroutine calls to close cursors on incomplete subqueries
TBFixed: may lose one hit
TCB_SIZE is sizeof(struct thread_control_block), as defined in /usr/src/lib/librthread/tcb.h on OpenBSD 5.9 and earlier.
TCP_NODELAY is only applicable for TCP
TEST and SMALLEST may not be used by the same RowSet.
TEST checks to see if an element is already in the RowSet.
TESTING  This algorithm has been tested from the year 4713 B.C.
TESTING  This algorithm has been tested from the year 4714 B.C.
TESTING  This algorithm has been tested in two ways.
TF_HasPrimaryKey is set if the table has any PRIMARY KEY, INTEGER or otherwise.
TF_OOOHidden applies to tables or view that have hidden columns that are followed by non-hidden columns.
THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
THE SIX LOGICAL FUNCTIONS
THE SOFTWARE AND DOCUMENTATION IS PROVIDED WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
THE SOFTWARE PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
THEN at this level acts exactly like PRUNE.
THERE IS NO WARRANTY - USE AT YOUR OWN RISK.
THIS OVERRIDES OBSOLETE COMMENTS 1 AND 2 ABOVE: Ticket #3300 shows that flattening the right term of a LEFT JOIN is fraught with danger.
THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR IMPLIED WARRANTY.
THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC.
THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
THOUGHT:  It would be nice if, rather than having things like...
THREAD_SYSTEM_DEPENDENT_IMPLEMENTATION
TIB_SIZE is sizeof(struct tib), as defined in /usr/include/tib.h on OpenBSD 6.0 and later.
TIFF thumbnail: our data structure cannot store a thumbnail of a thumbnail
TK_COLUMN terms in the P4 expression refer to columns in the b-tree to which cursor P1 is pointing.
TK_COLUMN: column index.  -1 for rowid.
TK_REGISTER terms in the P4 expression refer to values currently held in registers.
TK_REGISTER: original value of Expr.op TK_COLUMN: the value of p5 for OP_Column TK_AGG_FUNCTION: nesting depth
TK_SELECT_COLUMN: column of the result vector
TK_UPDATE, TK_INSERT or TK_DELETE
TLS_SIZE is the size of TLS needed for Go.
TLVLS  (input) INTEGER The total number of merging levels in the overall divide and conquer tree.
TMP1 is preferred if possible.
TMP1 is used in OP_KETRMIN below.
TMP1 returns with begin - 1.
TMP1 was set a few lines above.
TMP2 contains the high surrogate.
TMP2 may be destroyed by peek_char.
TMP2 may be destroyed.
TMP2 must contain the starting STR_PTR.
TMP2 which is set here used by OP_KETRMAX below.
TMP2 will be used below.
TMP_REG2 is not used by getput_arg
TMP_REG3 can be used for caching.
TMP_REG3 is used for caching.
TO BE REMOVED - NOT USED INTERNALLY.
TO DO: H if source is XMM
TO DO: Issue a warning on sqlite3_log() whenever the capability is used.
TO DO: L if source is XMM
TODO - there should be a better way than this...
TODO - this code is stolen from execute() - see above
TODO :avoid reallocation
TODO Also this should be revisited as no initialization might be needed for TS build (libxml build with TLS support.
TODO PORTABILITY Coded on RedHat Linux 6.2.
TODO add persistent_timeout check at PDO level
TODO check for overflow
TODO check if handling other error codes would make sense
TODO emulate if not available
TODO examine whether it is a bug
TODO extend with mode usage
TODO handle multiple machine stack size
TODO move attached check to PDO level
TODO no placeholders in exec() for now
TODO revisit this and check if a workaround available and needed.
TODO this file, or part of it, could be machine generated, to allow extensions and SAPIs adding their own init stuff.
TODO this function should be part of either Zend or PHP API
TODO(hyangah): check 0xb0 works with API23+  As disgusting as on the darwin/386, darwin/amd64.
TODO(hyangah): check that main.main can run.
TODO(iant): Needs synchronization.
TODO(jsing): Remove once OpenBSD 6.1 is released and OpenBSD 5.9 is no longer supported.
TODO(lsm): do proper error handling here.
TODO(lsm): handle seek error
TODO(lsm): redirect CGI errors to the error log file
TODO(prenaux): Correctly set the height of items with indefinite (auto) crossAxis dimension.
TODO(sbc): Remove this once eaccess() is wired up correctly in NaCl.
TODO(shess) Explore whether partially flushing the buffer on forced-flush would provide better performance.
TODO(shess) It may be useful for blocking decisions to be more dynamic.
TODO(shess) Only used for SQLITE_OK and SQLITE_DONE at this time.
TODO(shess) That said, it would be nice to have a better query-side argument for MERGE_COUNT of 16.
TODO(shess) This needs expansion to handle UTF-8 case-insensitivity.
TODO(shess) current implementation requires pInput to be nul-terminated.
TODO(spetrovic): implement this method.
TODO(yugui) Unmount original /dev
TODO, WARNING: This code block cannot be used due to FutureWarnings at this time.
TODO1: Updating pgidx here.
TODO2: Doclist terminator written here.
TODO:  Add a test to make sure that the same column is not named more than once within the same index.  Only the first instance of the column will ever be used by the optimizer.
TODO:  For subqueries without A FROM clause, consider adding a FROM close with the special table sqlite_once that consists of a single row containing a single NULL.
TODO: - Check zval cache + ZTS
TODO: - Optimize pixel accesses and loops once we have continuous buffer - Add scale support for a portion only of an image (equivalent of copyresized/resampled)
TODO: - add IPTC translation table
TODO: - allow index or array of indeces - replace path - patterns
TODO: - test for cpuid availability - test for OS support (tricky)
TODO: Add gdImageGetRowPtr and works with ptr at the row level for the true color and palette images new formats will simply work with ptr
TODO: Add struct-based mask_dtype support later
TODO: Also combine fields, subarrays, strings, etc
TODO: Always points to start then, could change that
TODO: Array index overflow
TODO: Async connects need to check the enable_on_connect option when we notice that the connect has actually been established
TODO: Change align from a flag to a "best power of 2 alignment" which holds the strongest alignment value for all the data which will be used.
TODO: Change this to NPY_KEEPORDER for NumPy 2.0
TODO: Change to a mechanism that avoids the potential overflow
TODO: Check if all of these are really required.
TODO: Check that both arguments are non-NULL
TODO: Check that zTarget and zRbu are non-NULL
TODO: Check there is no doclist index
TODO: Check version relationship
TODO: Could grow REDUCE loop too with some more logic above.
TODO: Could print weeks with YYYY-Www format if the week epoch is a Monday.
TODO: Could use temporary registers here.
TODO: Do not use global variables
TODO: Find the ICU call which does this properly
TODO: For NumPy 2.0, add a NPY_CASTING parameter.
TODO: For NumPy 2.0, this could accept an order parameter which only allows NPY_CORDER and NPY_FORDER.
TODO: For xConnect(), it could verify that said tables exist.
TODO: If the input array is byte-swapped but contiguous and aligned, it could be swapped (and later unswapped) in-place rather than after copying to the buffer.
TODO: Issue a warning if the table primary key is used as part of the index key.
TODO: Issue a warning if two or more columns of the index are identical.
TODO: It would be better to have some system for reusing statement handles here, rather than preparing a new one for each query.
TODO: Magic __wakeup and __sleep handlers for serialization (can wait till 5.1)
TODO: Maybe add test for the CORDER, and maybe also allow F
TODO: Only one "types" is allowed
TODO: Only the OS can help to determine the correct fpu type.
TODO: Put the order parameter in PyArray_CopyAnyInto and remove this
TODO: PyNumber_Index would be good to use here
TODO: Re-enable this once OCI provides capability.
TODO: Re-enable this when OCI provides support.
TODO: Refactor into its own function.
TODO: Reimplement the gethostby* functions using the new winxp+ API, in dns_win32.c, then we can have a dns.c, dns_unix.c and dns_win32.c instead of a messy dns.c full of #ifdef
TODO: SQLite does something special to deal with mixed-endian floating point values (e.g. ARM7).
TODO: See warning in main/stream/streams.c::php_stream_fill_read_buffer
TODO: Should handle sparse/partial arrays here.
TODO: Special case some important cases so they're fast
TODO: Strangely, it is not possible to associate a column specifier with a quoted phrase, only with a single token.
TODO: Support for TCP sockets
TODO: Technically the following is an error because it assumes that buffer Pager.pTmpSpace is (mxPathname+1) bytes or larger.
TODO: The preupdate-hook is passed SQLITE_DELETE, even though this operation should really be an SQLITE_UPDATE.
TODO: There needs to be a loop selection acceleration structure, like a hash table.
TODO: There should be a comment here explaining what context does.
TODO: These could be moved to MINIT and removed.
TODO: Think about moving these checks to the compiler or some sort of lint-mode.
TODO: This can at least partially be replaced, since the shape is found for broadcasting errors.
TODO: This definition is just included so other modules compile.
TODO: This function allocates a single block of memory to load the entire contents of the master journal file.
TODO: This implementation is kind of a hack, find a better way to do it.
TODO: This is a hack so the cast functions have an array.
TODO: This is a hack so the copyswap functions have an array.
TODO: This method needs to change so that unpickling doesn't use __setstate__.
TODO: This swapping could be handled on the fly by the nditer
TODO: Translate known names.
TODO: UNSAFE default for compatibility, I think switching to SAME_KIND by default would be good.
TODO: Unconditionally do this once OCI provides extended OCISessionGet capability
TODO: Use PyArray_OrderConverter once 'K' is added there
TODO: Use the real values once the openssl constants are used See the enum at the top of this file
TODO: We should try again if the casting rule is same_kind or unsafe, and look for a function more liberally.
TODO: XML apparently disallows "X"
TODO: `bins` could be strided, needs change to check_array_monotonic
TODO: add a test to check if we really have zvals here...
TODO: add ini entry for always use soap errors
TODO: add parse error information
TODO: add support for other APIs
TODO: add support for overloaded objects
TODO: avoid multiple Qnil load
TODO: better error message
TODO: birdstep_fetch_into(), Check all on real life apps.
TODO: body should be frozen
TODO: calculate emitter's size
TODO: calculate parser's size
TODO: check .ini setting here and apply user-defined input filter
TODO: check about string terminator character
TODO: check for overflow
TODO: check for safearray
TODO: check for string too long
TODO: check stack size if stack sizes are variable
TODO: check such constraint on configure.
TODO: check unprotecting
TODO: compatibility issue
TODO: conservative shading.
TODO: could expand this to make a callback into PHP user-space
TODO: could use zend_is_callable here
TODO: curl based streams probably support file:// properly
TODO: deduce HEADERLEN from size for uncompressed
TODO: delegate kw_arg without making a Hash object
TODO: do_alloca, free_alloca
TODO: don't ignore sigmask
TODO: enable it when enabling vista/2k8 mode in tsrm
TODO: encoding of ARGF.inplace
TODO: enforce order: first parents, then children, in order to avoid false positives
TODO: ensure that persistent procs will work
TODO: fix  _zip_replace
TODO: fix conflicting O_NONBLOCK in ruby/win32.h
TODO: fix me for Multi-VM
TODO: for rubyspec now, should be Qtrue
TODO: get rid of "bogus"..
TODO: hack, use proper int handling for name in parent
TODO: handle 64 bit properly
TODO: if PHP raises an exception here, we should catch it and expose it as a COM exception
TODO: if we want to play nicely, we should check to see if the driver really supports ODBC v3 or not
TODO: implement callbacks or other mechanism for applications to "understand" these headers.
TODO: improve fixed addresses on x64.
TODO: inline with support for closed resources
TODO: inline with support for incomplete class
TODO: libedit doesn't seems to support coloured prompt
TODO: limit cached funcs
TODO: make a VALUE to nid function
TODO: make platform independent definition.
TODO: merge with obj_respond_to()
TODO: move this block to enc/unicode.c
TODO: namespace isn't stored
TODO: needs updating for new filter API
TODO: node also should be wb protected
TODO: not all elements converted.
TODO: not to depend on the order of st_table
TODO: not ts on linux
TODO: output to stderr is not useful for apps.
TODO: perform topological sort of cyclic call graph
TODO: produce warning invalid ns
TODO: put in negative code for non-persistent stubs
TODO: rational support
TODO: remove rb_intern()
TODO: replace this with a hash of available column names to column numbers
TODO: revisit this start size, may be its not optimal
TODO: revisit this when flags are supported, since they may require a recompression
TODO: search algorithm is brute force.
TODO: should be checked for NULL tm/return vaue
TODO: should not be global variable
TODO: simplify Update and Final, those look ridiculously complex Mike, 2005-11-23
TODO: soap seems to favor this method.
TODO: some smart thing that avoids duplicating the value in the general loop below.
TODO: supply dropped ESC at beginning
TODO: support complex
TODO: support keywords
TODO: switch to SAME_KIND casting
TODO: the following switch statement is almostly the same as one in the BigDecimalCmp function.
TODO: these need correct docrefs
TODO: this error message is unhelpful if the format string is not one character long
TODO: this promotion should be done in list_extend_table
TODO: thread local hooks
TODO: to keep compatibility, maybe unused.
TODO: unlink current from the global linked list, and replace it it with the new context, protected by mutex where/if appropriate
TODO: use NODE_DOT2 as memo(v, v, -)
TODO: use inline cache
TODO: use the known fast rgba multiplication implementation once the new formats are in place
TODO: visit persistent handles: for each persistent statement handle, remove bound parameter associations
TODO: we could add longs if we add a range check
TODO: we need to check umask here, but it's not exported...
TODO: we probably should be setting .stdiocast and .fclose_stdiocast or we may be leaking the FILE*.
TODO: we should assign a name for the mapping
TODO: would be nice to do this too, but it's a behavior change.
TODO: write some code here
TODO:currently ignore
TODOs: Implement DeltaE instead, way better perceptual differences
TOG/JVC CDE/Motif Technical WG
TOTAL never fails, but SUM might through an exception if it overflows an integer.
TOTAL returns 0.0 in that case.
TRANS  - CHARACTER*1.
TRANSA - CHARACTER*1.
TRANSB - CHARACTER*1.
TRANS_NONE, TRANS_READ or TRANS_WRITE
TRUE after OP_ColumnName has been issued to pVdbe
TRUE for a TEMPORARY view
TRUE if currently initializing
TRUE if p is a lookaside memory allocation from db
TRUE is also returned if the table is empty.
TRUE only in greedy case.
TRUE will be returned after a call to sqlite3BtreeNext() moves past the last entry in the table or sqlite3BtreePrev() moves past the first entry.
TRUE, when minlength is greater than 0.
TTYPE  (output) INTEGER Shift type.
TTYPE (output) INTEGER Shift type.
TUNING:  Because uncertainties in the estimates for skip-scan queries, add a 1.375 fudge factor to make skip-scan slightly less likely.
TUNING:  Default 2nd arg to unlikely() is 0.0625
TUNING:  For every WHERE clause term that is not used by the index and which does not have an assigned truth probability, heuristics described below are used to try to estimate the truth probability.
TUNING:  If both iUpper and iLower are derived from the same sample, then assume they are 4x more selective.
TUNING: Cost of a rowid lookup is 10
TUNING: Cost of a unique index lookup is 15
TUNING: Cost of full table scan is (N*3.0).
TUNING: Do not let the number of iterations go above 25.
TUNING: Do not let the number of iterations go above 28.
TUNING: Each index lookup yields 20 rows in the table.
TUNING: For simple queries, only the best path is tracked.
TUNING: Minimum for skip-scan
TUNING: One-time cost for computing the automatic index is approximately 7*N*log2(N) where N is the number of rows in the table being indexed.
TUNING: The cost of implementing DISTINCT using a B-TREE is similar but with a larger constant of proportionality.
TUNING: unlikely() probability is 0.0625.
TYPE specifies that A may be full, upper triangular, lower triangular, upper Hessenberg, or banded.
TYPEPLUS, TYPEMINPLUS
TYPEQUERY, TYPEMINQUERY
TYPESTAR, TYPEMINSTAR
TYPEUPTO, TYPEMINUPTO
Table *p is a virtual table.
Table Name      Column Name
Table Name      Module Name
Table associated with change
Table associated with this expression
Table being updated or deleted from
Table btrees (used for rowid tables) contain an integer rowid used as the key and passed in the nKey field.
Table change pertains to
Table column this handle is open on
Table containing the REFERENCES clause (aka: Child)
Table containing the row to be deleted
Table corresponding to a partial index
Table cursor common to all terms
Table cursors are already open
Table for TK_COLUMN expressions.
Table for handling escaped characters in the range '0'-'z'.
Table has a primary key
Table has keys only - no data
Table has only 64-bit signed integer keys
Table holding the result of the SELECT
Table into which text will be inserted
Table into which to insert
Table jump if alt_max is greater than 4.
Table list this loop refers to
Table name - used by the opdate hook
Table object to append header for
Table of WHERE clause constraints
Table of an index whose exprs are being coded
Table of class bit maps for each POSIX class.
Table of constant values
Table of methods for JournalFile sqlite3_file object.
Table of methods for MemJournal sqlite3_file object.
Table of sizes for the fixed-length opcodes.
Table of special "verbs" like (*PRUNE).
Table of texts corresponding to POSIX error codes
Table of the number of extra bytes, indexed by the first byte masked with 0x3f.
Table on the left with matching column name
Table p is a virtual table.
Table structure - used by update and pre-update hooks
Table structure column is extracted from
Table that change applies to
Table that combines the S, P, and E operations.
Table that the trigger fires off of
Table this info block refers to
Table this step applies to
Table to be substituted
Table to identify digits and hex digits.
Table to translate PCRE compile time error codes into POSIX error codes.
Table to translate from particular type value to the general value.
Table triggers are being coded for
Table type - an RBU_PK_XXX value
Table used for PK definition
Table we are trying to access
Table whose indices are to be analyzed
Table with INTEGER PRIMARY KEY and nothing else
Table with characters for base64 transformation.
Table-name and function resolution occurs on the substituted expression tree.
Table.aCol is a pointer to an array of Column structures, one for each column.
Table.iPKey is set to -1 if there is no INTEGER PRIMARY KEY.
Table.nCol is the number of columns in this table.
Table.tnum is the page number for the root BTree page of the table in the database file.
Table.zName is the name of the table.
Tables appear in the same order as for the very first changeset added to the changegroup.
Tables are sorted in the same order in which they were attached (or auto-attached) to the sqlite3_session object.
Tables created using by this opcode will be used for automatically created transient indices in joins.
Tables have different CHECK constraints.
Tables in outer loops of the join
Tables marked isRecursive have only a single row that is stored in a pseudo-cursor.
Tables of horizontal and vertical whitespace characters, suitable for adding to classes.
Tables of names of POSIX character classes and their lengths.
Tables that are indexable, satisfying case 2
Tables that might satisfy case 1
Tables that must be scanned after this one
Tables that must be scanned before this one
Tables used by best possible plan
Tag bit is either TAG_KEY or TAG_VAL.
Tag bit is either TAG_VAL or TAG_NEXT.
Tail item on backtrack.
Tail of table name e.g. "data", "config"
Tail of the socket queue
Tail of unprocessed SQL
Take a copy of the sample.
Take a reference to out for later returning
Take a shared-cache advisory read-lock on the parent table.
Take a view into 'operand' which we can modify.
Take actions at the end of an API call to indicate an OOM error
Take advantage of short-circuit false optimization for AND
Take an EXCLUSIVE lock on the database file.
Take an arbitrary object and discover how many dimensions it has, filling in the dimensions as we go.
Take care here not to generate a TK_VECTOR containing only a single value.
Take care of the last array sort flags.
Take care of the longer scaled number.
Take care to avoid text within string literals, quoted identifier names, and comments.
Take care with CRLF partial
Take care, as the sprintf implementation may return less places than we requested due to internal buffer limitations
Take data to be written from here
Take into account WHERE clause terms that can be satisfied using just the index, and that do not require a table lookup.
Take notice that all elements will reference the same object +default+.
Take or release a shared-memory lock.
Take ownership of references to the operands and dtypes
Take steps to avoid spinning forever if there is a protocol error.
Take the binary representation of the length of the key and for every 1 add the alternate sum, for every 0 the key.
Take the exclusive lock now, before opening the WAL file, to make sure this is safe.
Take the greater base (unit sizes are decreasing in enum)
Take the jump if the BETWEEN is NULL
Take the jump if the BETWEEN is true
Take the requested lock on the conch file and break a stale lock if the  host id matches.
Take the square root NUM and return it in NUM with SCALE digits after the decimal place.
Take yet unprocessed bytes into account.
Takes a PyDataMem_EventHookFunc *, which has the signature: void hook(void *old, void *new, size_t size, void *user_data).
Takes a fully configured proxy locking-style unix file and switches the local lock file path
Takes a pointer to posix group and a pointer to an already initialized ZVAL array container and fills the array with the posix group member data.
Takes a string or an instance as an argument
Takes an already filled in unix file and alters it so all file locking  will be performed on the local proxy lock file.
Takes an instance as an argument
Takes an open conch file, copies the contents to a new path and then moves  it back.
Takes any object which implements the each_pair method, including Hash and DBM objects.
Takes the conch by taking a shared lock and read the contents conch, if  lockPath is non-NULL, the host ID and lock file path must match.
Taking care not to read any memory locations that occur before the buffer in memory.
Tantzen, Communications of the Association for Computing Machinery August 1963.
Target address must be aligned to 64-byte boundary
Target size for allocation chunks.
Target table for DELETE, UPDATE, INSERT
Task handle calling this task
Task that owns this merger
Technically, we need only write to the last page in order to extend the file.
Technically, we only need to set the mayAbort flag if the isMultiWrite flag was previously set.
Tediously free stuff.
Tell PHP if we read / wrote bytes.
Tell the Go code to catch SIGIO.
Tell the Go code to stop catching SIGIO.
Tell the Go library to start looking for SIGIO.
Tell the code in notify.c that the connection no longer holds any locks and does not require any further unlock-notify callbacks.
Tell the view who owns the data
Tell the wal layer that an EXCLUSIVE lock has been obtained (or released) by the pager layer on the database file.
Telldir returns the current string pointer position
Tells whether the capturing bracket is optimized.
Tells whether the character codes below 128 are enough to determine a match.
Tells whether the starting offset is a target of then.
Temp area for cell content
Temp file for level-0 PMAs
Temp register to free before returning
Temp space for PoslistNearMerge()
Temp space for pIdxKey - to avoid a malloc
Temp space sufficient to hold a single cell
Temp space used by merge-sort
Temp storage must have already been allocated
Temp storage space for pCell, if needed
Temp streams are streams that uses memory streams as long their size is less than a given memory amount.
Temp var to store a page number in
Template WhereLoop object
Template WhereLoop under construction
Temporarily disabled - see bug #0025274
Temporarily encoding the needs_control_head in framesize.
Temporarily end the regex in case it doesn't exist before this point.
Temporarily holds the number of cursors assigned
Temporarily mark the end of the branch with OP_END.
Temporary Function aliases until the next major upgrade to PHP.
Temporary buffer space
Temporary buffer to hold scanned number strings before they are passed to strtoul()
Temporary buffer to use
Temporary databases cannot have _WAL journalmode.
Temporary expression node
Temporary file object wrapper
Temporary files are be deleted automatically when they are closed.
Temporary files are named starting with this prefix followed by 16 random alphanumeric characters, and no file extension.
Temporary int fd is needed for the STREAM data type on windows, passing this_fd directly to php_stream_cast() would eventually bring a wrong result on x64.
Temporary memory used by this routine
Temporary pager files may enter the ERROR state, but in-memory pagers cannot.
Temporary release of STR_PTR.
Temporary space to use
Temporary space used to build header
Temporary storage for the page
Temporary use register
Tends to be less accurate as distance increases.
Term iterator to advance
Term pTerm is a vector range comparison operation.
Term searched for (or NULL)
Term to iterate through a doclist for
Term to scan doclist of
Term to seek to (or NULL/0)
Term to select leaves for
Term to write to internal node
Term.pExpr is an IS operator
Term/rowid iterator object
TermOffset associated with next token
TermSelect object to merge into
Terminal symbols all have the same minor type, though.
Terminate destination --- called by jpeg_finish_compress after all data has been written.
Terminate source --- called by jpeg_finish_decompress after all data has been read.
Terminate the current execution of an SQL statement and reset it back to its starting state so that it can be reused.
Terminate the string.
Terminate token and skip trailing separators
Terminator values for position-lists and column-lists.
Terms are separated by AND so add the "AND" text for second and subsequent terms only.
Terms in the VALUES clause of an INSERT statement  The hard upper limit here is 32676.
Terms of the WHERE clause are also used to limit which rows actually make it to the "..." in the middle of the loop.
Terms that make up this phrase
Terms that may be omitted
Terms that satisfy case 2 are candidates for lookup by using separate indices to find rowids for each subterm and composing the union of all rowids using a RowSet object.
Terms that satisfy case 3 are candidates for lookup by using separate indices to find rowids for each subterm and composing the union of all rowids using a RowSet object.
Terwilliker Jehosophat Aloysius Monstrosity Animal Beast.
Test a C thread that calls sigaltstack and then calls Go code.
Test a region for other processes locks
Test a register to see if it exceeds the current maximum blob size.
Test abs(val) consists only a bit or not.
Test all CHECK constraints
Test all NOT NULL constraints.
Test all UNIQUE constraints by creating entries for each UNIQUE index and making sure that duplicate entries do not already exist.
Test and lock a region for exclusive use
Test byte-range lock using fcntl().
Test calling a Go function to raise SIGIO on a C thread with an alternate signal stack when there is a Go signal handler for SIGIO.
Test calling panic from C.
Test for Python-style defn
Test for access permissions.
Test for divide by 1.
Test for divide by zero.
Test for forward reference or uncompleted reference.
Test for negative result.
Test for verifying that the Go runtime properly forwards signals when non-Go signals are raised.
Test gdImageCreateFromPngSource'
Test gdImagePngToSink'
Test if comparison i of pTerm is compatible with column (i+nEq)  of the index. If not, exit the loop.
Test if fcntl() is supported and use POSIX style locks.
Test if shift negligible, and if so set to zero
Test installing a signal handler before the Go code starts.
Test is we have place for 1 more char.
Test normalization of string (converting it to UTF-16 first).
Test operations are about 100 times more common that set operations.
Test os/signal.Notify and os/signal.Reset.
Test performance of native C UUID generation To Compile: cc -luuid benchmark-native.c -o benchmark-native
Test raising SIGIO on a C thread with an alternate signal stack when there is a Go signal handler for SIGIO.
Test that a SIGSEGV on this thread is delivered to us.
Test that a signal handler that uses up stack space does not crash if the signal is delivered to a thread running a goroutine.
Test that a signal handler works in non-Go code when using os/signal.Notify.
Test that the "totals" (sometimes called "averages") record looks Ok
Test that this call is being made from within an SQLITE_DELETE or SQLITE_UPDATE pre-update callback, and that iIdx is within range.
Test the existence of or access permissions of file zPath.
Test the input parameters.
Test the query function
Test the storage function
Test the various possible conditions
Test to make sure the linear array exactly matches the Bitvec object.
Test to see if the iRowid value appears anywhere in the forest.
Test to see whether or not a table is a virtual table.
Test to see whether or not the database connection is in autocommit mode.
Test variable that can be set to enable WHERE tracing
Test vector from FIPS 180-2: appendix B.3.
Test vector from FIPS 180-2: appendix C.3.
Test vectors from FIPS 180-2: appendix B.1.
Test vectors from FIPS 180-2: appendix B.2.
Test vectors from FIPS 180-2: appendix C.1.
Test vectors from FIPS 180-2: appendix C.2.
Test vectors from the NESSIE project.
Test whether or not expression pExpr, which was part of a WHERE clause, should be included in the cursor-hint for a table that is on the rhs of a LEFT JOIN.
Tests "main.main" is exported on android/arm, which golang.org/x/mobile/app depends on.
Tests for and converts a Python datetime.datetime or datetime.date object into a NumPy npy_datetimestruct.
Tests libgo.so to export the following functions.
Tests libgo2.so, which does not export any functions.
Tests show that this optimization can quadruple the speed of large  DELETE operations.
Tests whether a datetime64 can be cast from the source metadata to the destination metadata according to the specified casting rule.
Tests whether a timedelta64 can be cast from the source metadata to the destination metadata according to the specified casting rule.
Tests whether the immediate can be stored in the 12 bit imm field.
Text encoding - one of the SQLITE_UTF* values
Text encoding handled by xCmp()
Text encoding used by this database
Text inserted into table-name column
Text is in ascii and enriched by a simple markup: toggles bold font emphasis.
Text of all module args.
Text of document to be inserted
Text of the CREATE TABLE or CREATE VIEW statement
Text of the SQL statement
Text of the SQL statement that generated this
Text of the error report
Text of the new string
Text to add to EQP output
Text will be wrapped according to the STDOUT terminal width, so paragraphs are flowed using the C stringizing and the CR definition.
Textual time units and their abbreviations:
Thank you, Jun-ichiro itojun Hagino, for suggesting using u_intXX_t types and pointing out recent ANSI C support for uintXX_t in inttypes.h.
Thanks to "Super Pikeman."
Thanks to Aaron Giles for this idea.
Thanks to Adam Zeldis to pointing snprintf()-caused vulnerability in his audit report.
Thanks to Frank Warmerdam.
Thanks to Geert Jansen
Thanks to Ian Taylor for noticing this possibility and sending the original patch.
Thanks to Johannes Winkelmann for the patch.
Thanks to John Buckman.
Thanks to Robin Houston for the original version of this logic.
Thanks to Steven Brown.
That alows a margin of error much bigger than any of the datetime factors.
That approach would require an extra instruction and memory reference in every stack growth prolog and would also require rewriting the code that 8c generates for extern registers.
That aside, the greatest value wins, but we can't know that it will until we've scanned both numbers to know that they have the same magnitude, so we remember it in BIAS.
That capability is no longer provided.
That case is handled by the calling routine.
That clips too, so don't clip twice.
That concludes the basic part of this demonstration program.
That confuses minit, so we remove that signal stack here before calling the regular mstart.
That could help to adjust intersections  to produce a nice interior_extrema.
That detail is handled by the outer sqlite3_step() wrapper procedure.
That fact is verified in memsys5Init().
That file uses //export so it can't put function definitions in the "C" import comment.
That function does the same as this one, except that it deals with more complicated cases as well.
That gives a significant speed improvement.
That in turn  helps the operating system to deliver pages from the disk more rapidly.
That in turn helps the operating system to deliver pages from the disk more rapidly.
That integer is 0 to disable persistent WAL mode or 1 to enable persistent WAL mode.
That integer is 0 to disable zero-damage mode or 1 to enable zero-damage mode.
That is Ok, at this point the parent page is guaranteed to be marked as dirty.
That is all the insert routine needs to know about.
That is for V * B (in the real version of the code V' is stored in WORK).
That is no longer true.
That is not permitted.
That is not the normal state of affairs, of course.
That is the IFD for the first thumbnail
That is the historical behavior of SQLite: prior to version 3.8.3, it never checked
That is the largest legal value, divided by the base.
That is why the "so" value is used to bump the start location rather than being passed as a PCRE "starting offset".
That is why the STRICT_ALIGNMENT is defined only with GCC.
That is why we have a private table here.
That is, either the first object which isn't an array, or the first object which owns its own data.
That is, for every element that is an array, extract its elements into the new array.
That is, for every key or value that is an array, extract its elements into the new array.
That is, push the lookahead token onto the stack and goto state N.
That is, the final term of the snippet is always a term that requires highlighting.
That is, the match must be before or at the first newline.
That is, we allow equality in stopping tests when the round-nearest rule will give the same floating-point value as would satisfaction of the stopping test with strict inequality.
That is, when Zlib::GzipReader#read, Zlib::GzipReader#gets, or some other methods for reading returns nil.
That line and all subsequent comment lines are used in the generation of the opcode.html documentation file.
That makes it more difficult to compare the loops.
That may overflow, in which case new memory is obtained from malloc().
That means that if  checkpoints are always run by a background thread or background  process, foreground threads will never block on a lengthy fsync call.
That means that if the BETWEEN term is coded, the children are skipped.
That means that root directory depends on URI.
That means that we always use the same random number sequence.
That means the byte after represents a character or is the leading byte of an sequence of 8-bit code units.
That method assumes that no backtracking is possible.
That one of the jobs of this function.
That opcode is readable but not writable, though it is cast to a writable value.
That pseudo-table cursor is the one that is identified by parameter P3.
That routine is optimized for the common case of merely decrementing the cell counter BtCursor.aiIdx to the previous cell on the current page.
That routine is optimized for the common case of merely incrementing the cell counter BtCursor.aiIdx to the next cell on the current page.
That said, gdbm and recent versions of Berkeley DB do away with these limits.
That said, sched_getaffinity() can fail when a kernel have sparse bitmap even if cpuset bitmap is larger than number of cpus.
That saves a few cycles in inner loops.
That seems acceptable to me, to avoid making this code hard to follow
That should be COM_FIELD_LIST.
That should be handled by the client when fetching.
That table and column will be recorded in iCursor and iColumn.
That table is guaranteed to be a b-tree table, not a virtual table.
That table is guaranteed to be a virtual table.
That was the date, now we do the tiiiime
That way, if no reads occur, no unnecessary I/O happens.
That way, if the name is longer than any in the table, the comparison will fail without reading beyond the table entry.
That way, the FileChunk object will have a size that almost exactly fills a power-of-two allocation.
That way, when multiple affinity types are concatenated into a string and used as the P4 operand, they will be more readable.
That will likely cover most cases.
That will never happens for an IdxRowid or Seek opcode
That will provide the minimum length (when no recursion happens).
That would not be possible without somehow blocking writers.
That's ok since a VDBE branch coverage build designed for testing the test suite only.
That's the one we're interested in.
That's what RESTRICT means.
The   * second flag restricts PCRE to one match attempt at the initial string  * position.
The  'matchinfo' data is an array of 32-bit unsigned integers (C type u32).
The  argument N is a bitmask of optimizations to be disabled.
The  first time sqlite3rbu_vacuum() is called, to start an RBU vacuum operation, the state database should either not exist or be empty (contain no tables).
The  following call will modify the in-memory representation of page 1  to include the updated change counter and then write page 1  directly to the database file.
The  hash table will continue to function normally.
The  left-hand child may be either a phrase or a NEAR node.
The  original values of other fields are omitted.
The  pX.pData,nData,nZero fields must be zero.
The  result is NULL if the presence of the LHS in the RHS cannot be  determined due to NULLs.
The  right-hand side (RHS) is an array of zero or more scalar values, or a subquery.
The  second form attempts to change this setting.
The  special comment alerts the mutation tester that the correct answer is obtained even if the branch is omitted
The  sqlite3FindInIndex() routine has already ensured that the  affinity of the comparison has been applied to the value.
The  sqlite3_uri_boolean(F,P,B) routines returns false (0) if the value of query parameter P is one of "no", "false", or "off" in any case or if the value begins with a numeric zero.
The  value returned is a copy of the second argument to this function.
The  x  subexpression
The "#NNN" in the SQL is a special constant that means whatever value is in register NNN.
The "--" string is broken up to prevent false-positives with srcck1.c.
The "-z" option of "file" is the reason for this ugly code.
The ".FFF" may be omitted.
The "20c" indicates the 2-digit day which is the last integer in the set.
The "21a-" indicates the 2-digit month followed by "-".
The "40f-" indicates the 4-digit year followed by "-".
The ":SS.FFF" may be omitted.
The "B" part of a "A AS B" phrase.
The "NEAR" node (FTS5_STRING)
The "NEAR" node (FTS5_TERM)
The "OUTER" keyword is present
The "SF" prefix stands for "Select Flag".
The "SRT" prefix means "SELECT Result Type".
The "Select-ID" for this loop
The "VVA" acronym stands for "Verification, Validation, and Accreditation".
The "break" point is here, just past the end of the outer loop.
The "context" argument for a installable function.
The "context" argument for an installable function.
The "correct" way to do this would be to call the xmlrpc library XMLRPC_ValueIsFault() func.
The "d1+serial_type1+2" subexpression will always be greater than or equal to the amount of required key space.
The "end_block" field may contain either an integer, or a text field containing the text representation of two non-negative integers separated  by one or more space (0x20) characters.
The "file format" number is an integer that is incremented whenever the VDBE-level file format changes.
The "flags" parameter is a bitmask that might contain bits like BTREE_OMIT_JOURNAL and/or BTREE_MEMORY.
The "from" table is the table that contains the REFERENCES clause that creates the foreign key.
The "iDataCur" cursor must be already be positioned on the row that is to be deleted.
The "iScanStatusOp" parameter determines which status information to return.
The "lemon" program processes an LALR(1) input grammar file, then uses this template to construct a parser.
The "object" variable may be modified during the execution of this unserialize handler (it may turn into a reference).
The "old" rowid, or NULL.
The "onepass" strategy does not use an ephemeral table.
The "op" member indicates whether this is a "DELETE", "INSERT", "UPDATE" or "SELECT" statement.
The "p" parameter is the part of the FROM clause that has already been constructed.
The "parameters" include: ciphersuites, curves, key sizes, certificate signature algorithms, protocol version and so on.
The "pnLargest" argument, if non-zero, will be used to return the size of the largest committed free block in the heap, in bytes.
The "printf" code that follows dates from the 1980's.
The "public key" needed for a key exchange with DH#compute_key is considered as per-session information and may be retrieved with DH#pub_key once a key pair has been generated.
The "rbu_control" column should have no type at all.
The "rc" variable should hold the error number.
The "real" underlying VFS
The "real" underlying file descriptor
The "result" of the  comparison in this context is the index of the iterator that currently points to the smaller term/rowid combination.
The "solver" works by creating the N best WherePath objects of length 1.
The "sqlite3_stmt" structure pointer that is returned by sqlite3_prepare() is really a pointer to an instance of this structure.
The "standard" descriptors are 0, 1 and 2.
The "step_list" member points to the first element of a linked list containing the SQL statements specified as the trigger program.
The "subtype" set for JSON values
The "table" is actually a sub-select or a view in the FROM clause of the SELECT statement.
The "temp" database may not be vacuumed.
The "to" table is the table that is named in the REFERENCES clause.
The "type" of connection pointer is given as the argument.
The "type" string should be NULL-terminated.
The "unordered" keyword, if it is present, must be separated from the last integer by a single space.
The "vfs" in the name of the object stands for "virtual file system".
The "visited" vars are exactly those which may change their type due to narrowing.
The "vtab_err.test" test demonstrates the need of this statement.
The "winIoerrCanRetry1" macro is used to determine if a particular I/O error code obtained via GetLastError() is eligible to be retried.
The "winIoerrCanRetry2" macro is completely optional and may be used to include additional error codes in the set that should result in the failing I/O operation being retried by the caller.
The "wsdAutoext" macro will resolve to the autoextension state vector.
The "wsdHooks" macro will resolve to the appropriate BenignMallocHooks structure.
The "wsdPrng" macro will resolve to the pseudo-random number generator state vector.
The "wsdStat" macro will resolve to the status information state vector.
The "x IN (SELECT rowid FROM table)" case
The "xxx" in the name "xxx.yyy" or "xxx"
The "yyy" in the name "xxx.yyy"
The ')' before options in the CREATE TABLE
The ',' token after the last column defn.
The '-' in the dates are not optional.
The ':' indicator follows a complex key.
The 'ansi' and 'bs' formats of the ri output don't display the definition list for some reason, but the plain text one does.
The 'baseline' value is not supported for alignItems and alignSelf properties.
The 'casting' parameter is used to control what kinds of inputs are accepted, and what happens.
The 'cnt' column should contain the number of rows within the source table.
The 'metastr' parameter is used for error messages, and may be NULL.
The 'order' property is not supported.
The 'path' given to us points to the directory.
The 'pre-update' hook registered by this module with SQLite databases.
The 'previous' entry is used for this instead of the 'next' entry, as the previous entry is always a part of the sub-tree headed by the child page of the cell being deleted.
The 'span' of the expression is required by pragma table_info.
The 'tbl' column should contain the name of a data_xxx table, and the cnt column the number of rows it contains.
The 'tbl' column should contain the name of the source table.
The 'true' case is called as the matching path (expected path), and the other is called as the 'backtrack' path.
The 'visibility' property is always assumed to be 'visible'.
The 'wrap' property supports only 'nowrap' (which is the default) or 'wrap'.
The 'zIndex' property (or any form of z ordering) is not supported.
The (slower) btreeNext() helper routine is called when it is necessary to move to a different page or to restore the cursor.
The (slower) btreePrevious() helper routine is called when it is necessary to move to a different page or to restore the cursor.
The *-oal file is opened or created at this point.
The *-shm pages returned by xShmMap() for a target db file in RBU_STAGE_OAL mode are actually stored in heap memory.
The *pCurrent value is undefined.
The *pHighwater is always set to zero.
The *pLen parameter holds the length of the string in *pz and is decremented once for each character in the integer.
The *pOffset value is increased to the start of the next page in the journal.
The *strio* must be opened for writing.
The + 1 is to not need to check as much.
The +ARGF.filename+ and +ARGF.lineno+ methods can be used to determine the filename and line number, respectively, of the current line.
The +ARGF.filename+ method can be used to determine the filename of the current byte.
The +ARGF.filename+ method can be used to determine the name of the file in which the current character appears.
The +ARGF.filename+ method can be used to determine the name of the file in which the current codepoint appears.
The +backtrace+ must be an array of String objects or a single String in the format described in Exception#backtrace.
The +digest+ is used to compute the certificate ID and must be an OpenSSL::Digest instance.
The +digest+ parameter must be an instance of OpenSSL::Digest.
The +each+ method can only be used if the begin object of the range supports the +succ+ method.
The +entropy+ argument is (the lower bound of) an estimate of how much randomness is contained in +str+, measured in bytes.
The +file+ can contain multiple PEM-encoded certificates.
The +flush+ parameter specifies the flush mode.
The +io+ must have a +read+ method that behaves same as the IO#read.
The +key+ will be passed in as an argument to the block.
The +level+ sets the compression level for the deflate stream between 0 (no compression) and 9 (best compression).
The +maxsec+ parameter can be used to limit the age of responses.
The +mem_level+ specifies how much memory should be allocated for the internal compression state.
The +mode+ is either a string or an integer.
The +name+ may be either an OID or an extension name.
The +oid+ is an object identifier defined in ASN.1.
The +options+ hash may be used to set the encoding of the data.
The +value+ array of the outer infinite length value must end with a OpenSSL::ASN1::EndOfContent instance.
The +value+ attribute of a Constructive is always an +Array+.
The +window_bits+ sets the size of the history buffer and should be between 8 and 15.
The .gd format is not intended to be a general-purpose format.
The 0 at H indicate the end-of-document.
The 0 digit has special meaning at the beginning of a number.
The 0x01 bit means first remove pPage from the dirty list.
The 0x02 means add pPage back to the dirty list.
The 0x48 base mentioned above is the offset of the tsd array within the per-thread structure on Leopard and Snow Leopard.
The 0x7ffff00 limit term is explained in comments on sqlite3Malloc()
The 1st argument specifies WIN32OLE_TYPE object or WIN32OLE_METHOD object or helpfile.
The 1st argument specifies dispatch ID, the 2nd argument specifies the array of arguments, the 3rd argument specifies the array of the type of arguments.
The 1st shear may use the original clrBack as color index Convert it once here
The 2-dimensional table is indexed by the properties of two adjacent code points.
The 2/3/1 scale factors used here correspond loosely to the relative weights of the colors in the NTSC grayscale equation.
The 234 at I is the delta to next docid (357).
The 3rd and 4th parameters to the authorization callback function will be parameters or NULL depending on which of these codes is used as the second parameter.
The 4th and 5th arguments are the byte offsets of the first byte of and first byte immediately following the text from which the token is derived within the input.
The 5 month cycle is used to account for the varying lengths of months.
The 64-bit checksum associated with the wal-index header created by recovering the *-wal file.
The AAD must be set prior to encryption or decryption.
The ALWAYS and NEVER macros surround boolean expressions which  are intended to always be true or false, respectively.
The ALWAYS and NEVER macros surround boolean expressions which are intended to always be true or false, respectively.
The ANALYZE command gather statistics about the content of tables and indices.
The API routine is partially broken on filenames ending ".com".
The ASN1 module provides the necessary classes that allow generation of ASN.1 data structures and the methods to encode them using a DER encoding.
The Accelerator is disabled, act as if without the Accelerator
The B*Tree structure for this database file
The BETWEEN expression
The BLOB containing the varints
The BLOB encoding of the document size
The BTREE_AUXDELETE bit is a hint that is not used by this implementation, but which might be used by alternative storage engines.
The BTREE_AUXDELETE bit of flags indicates that is one of several deletes associated with a single table entry and its indexes.
The BTREE_DATA_VERSION value is not actually stored in the database file.
The BTREE_DATA_VERSION value is not really a value stored in the header.
The BTREE_FORDELETE bit of wrFlag may optionally be set if BTREE_WRCSR is set.
The BTREE_FORDELETE flag is an optimization hint.
The BTREE_OMIT_JOURNAL and BTREE_SINGLE flags are added automatically.
The BTREE_SEEK_EQ flag is only set on index cursors
The BTREE_SEEK_EQ flag is set on cursors that will get OP_SeekGE or OP_SeekLE opcodes for a range search, but where the range of entries selected will all have the same key.
The BTree that contains the table
The Binding of the top level scope
The BtCursor object is opaque to users so they cannot do the sizeof() themselves - they must call this routine.
The BtShared object that owns pPage
The BtShared this cursor points to
The Btree to which this cursor belongs
The C definitions for tracebackctxt.go.
The C syntax in this function definition may be unfamilar to some  programmers, so we provide the following additional explanation:  The name of the function is "ftsHashFunction".
The C++ interface captures the output in qh_fprint_qhull()
The CA issues key signatures that indicate it trusts the user of that key.
The CAS succeeded, we are done.
The CGI RFC allows servers to pass on unvalidated Authorization data
The CHECK_PAGE macro takes a PgHdr* as an argument.
The CJK compatibility area.
The CPU does not set flags if the shift count is 0.
The CREATE token that begins the statement
The CREATE token that begins this statement
The CSR contains the information necessary to identify the key.
The DB_SchemaLoaded flag is set after the database schema has been read into internal hash tables.
The DELETE is not added.
The DIR typedef is not compatible with Unix.
The DISTINCT marking is pointless.
The DJGPP compiler environment looks mostly like Unix, but it lacks the fcntl() system call.
The Diffie-Hellman protocol can be used to exchange (symmetric) keys over insecure channels without needing any prior joint knowledge between the participating parties.
The EOC for the Constructive is supplied by the user, but that for the "explicit wrapper" must be added here.
The ERROR state indicates that the contents of the pager-cache  cannot be trusted.
The EXCLUSIVE lock is not released before returning.
The Etc module provides access to information typically stored in files in the /etc directory on Unix systems.
The Expr tree will not contain any function calls nor subqueries nor references to b-trees other than the cursor being hinted.
The Expr* tree may contain TK_REGISTER nodes that refer to values stored in the array of registers passed as the second parameter.
The Expr.iRightJoinTable tells the WHERE clause processing that the expression depends on table iRightJoinTable even if that table is not explicitly mentioned in the expression.
The Expr.op2 field of TK_AGG_FUNCTION structures must be increased by the nSubquery amount.
The Expr.x union is never used at the same time as Expr.pRight
The ExprSetVVAProperty() macro is used for Verification, Validation, and Accreditation only.
The FETCH_GMP_ZVAL_* family of macros is used to fetch a gmp number (mpz_ptr) from a zval.
The FILTER_NULL_ON_FAILURE flag inverts the usual return values of the function: normally when validation fails false is returned, and when the input value doesn't exist NULL is returned.
The FNV speed allows one to quickly hash lots of data while maintaining a reasonable collision rate.
The FORDELETE hint is not used by this implementation.
The FROM clause btree term to add
The FROM clause of the outer query
The FROM clause of the recursive query
The FROM clause of the subquery
The FROM clause term to get the next index
The FROM clause term to process
The FROM clause term to search
The FTS table to delete from
The FULL and EXTRA option is disallowed if the omitFull parameter it 1.
The FULL option is disallowed if the omitFull parameter it 1.
The Fts3Cursor.eSearch member is always set to one of the following.
The Fts5ExprPhrase.poslist buffers are populated accordingly.
The FuncDef.flags variable is set to the value passed as the flags parameter.
The FuncDef.pDestructor member of each of the new FuncDef objects is set to point to the allocated FuncDestructor.
The GC module provides an interface to Ruby's mark and sweep garbage collection mechanism.
The GetProcAddressA() routine is only available on Windows CE.
The Gregorian calendar system is used for all dates and times, even those that predate the Gregorian calendar.
The Gregorian calendar was not instituted until October 15, 1582 (or October 5, 1582 in the Julian calendar).
The GzipFile object will be closed automatically after executing the block.
The GzipReader object reads gzipped data from +io+, and parses/decompresses it.
The GzipWriter object writes gzipped data to +io+.
The HASMULTIINDEX or IDENTPERM flags do not apply after coalescing
The HH, MM, and SS must each be exactly 2 digits.
The Hangul syllables.
The IDLIST appears in the pColumn parameter.
The IN operator is true if the LHS value is contained within the RHS.
The IN operator must be implemented as a sequence of comparisons.
The IN, SELECT, or EXISTS operator
The INSERT primitive adds a new element to the RowSet.
The INSERT primitive might allocate additional memory.
The INT64_OR_DOUBLE type is a 64-bit integer type when available, otherwise double.
The IO and File are both closed after the block completes if they haven't been already closed.
The IO class is the basis for all input and output in Ruby.
The IO may be opened with different file modes (read-only, write-only) and encodings for proper conversion.
The ISAUTOVACUUM macro is used within balance_nonroot() to determine if the database supports auto-vacuum or not.
The IV itself can be safely transmitted in public, but it should be unpredictable to prevent certain kinds of attacks.
The IdxCover.pIdx field is the index.  IdxCover.iCur is the cursor for the table.
The IdxGE opcode will be skipped if this opcode succeeds, but the IdxGE opcode will be used on subsequent loop iterations.
The IdxLE opcode will be skipped if this opcode succeeds, but the IdxLE opcode will be used on subsequent loop iterations.
The IdxRowid and Seek opcodes are combined because of the commonality of sqlite3VdbeCursorRestore() and sqlite3VdbeIdxRowid().
The Incrblob.nByte field is fixed for the lifetime of the Incrblob so no mutex is required for access.
The Index.onError field determines whether or not the indexed columns must be unique and what to do if they are not.
The IsHiddenColumn() macro is general purpose.
The Jewish calendar has been in use for several thousand years, but in the early days there was no formula to determine the start of a month.
The Julian calendar specifies that every year that is a multiple of 4 will be a leap year.
The Julian day number of the day of calendar reform for England and her colonies.
The Julian day number of the day of calendar reform for Italy and some catholic countries.
The Julian day number of the day of calendar reform for the proleptic Gregorian calendar
The Julian day number of the day of calendar reform for the proleptic Julian calendar
The K-th integer in the nLt entry is the number of index entries  where the first K columns are less than the first K columns of the sample.
The KEEPNULL flag prevents OP_Eq from overwriting a NULL with 1 and prevents OP_Ne from overwriting NULL with 0.
The Kernel instance methods are documented in class Object while the module methods are documented here.
The Kernel#open method can create an IO (or File) object for these types of arguments:  A plain string represents a filename suitable for the underlying operating system.
The KeyInfo elements are used sequentially.
The KeyInfo object can only be changed if this is just a single reference to the object.
The LEMON-generated LALR(1) parser
The LHS is now known to be non-NULL.
The LHS must be a column that may only be NULL, a string, or a BLOB, never a number.
The LHS of the IN operator
The LHS of the rule reduced
The LIMIT clause will jump out of the loop for us
The LIMIT clause will terminate the loop for us
The LIMIT count does not begin until after OFFSET rows have been skipped.
The LIMIT expression.
The Lookaside structure holds configuration information about the lookaside malloc subsystem.
The MATCH operator tests that the first field of a blob operand matches this value to avoid operating on invalid blobs (which could cause a segfault).
The MATCH or rowid constraint, if any
The MATCH_CBEGROUP feature must NOT be used with tail recursion, because the memory block that is used is on the stack, so a new one may be required for each match().
The MAX_PATH macro is in characters, so we allocate 4 bytes per character assuming worst-case of 4-bytes-per-character for UTF8.
The MD5 transformation for all four rounds.
The MEM structure is already a MEM_Real.
The MEM_Dyn bit is set if and only if Mem.xDel is a non-NULL destructor function for Mem.z
The MEM_Int and MEM_Real  flags may coexist with the MEM_Str flag.
The MSVC CRT on Windows CE may not have a localtime() function.
The MSVCRT has malloc_usable_size(), but it is called _msize().
The MacOS X version and CPU specs are checked on module import.
The MapIterObject does not need to have any information set for this function to work.
The MemBlockHdr tells us the size of the allocation and the number of backtrace pointers.
The MemPage.nFree field is invalidated by this function.
The MergeEngine object is used to combine two or more smaller PMAs into one big PMA using a merge operation.
The MergeEngine object, described in further detail below, performs this merge.
The MergeEngine that the IncrMerger will control
The N parameter must be between 0 and one less than the number of columns or the behavior will be undefined.
The NEVER() on the second term is because sqlite3FunctionUsesThisSrc() is always called before sqlite3ExprAnalyzeAggregates() and so the TK_COLUMNs have not yet been converted into TK_AGG_COLUMN.
The NN naming schemes are  used by the test_multiplex.c module.
The NPY_ITER_READWRITE is necessary for automatic allocation.
The Name context of the SELECT statement is pNC.
The Next instruction will work, but not the Prev instruction.
The Next opcode is only used after SeekGT, SeekGE, and Rewind.
The Next opcode is only valid following an SeekGT, SeekGE, or OP_Rewind opcode used to position the cursor.
The OCaml GC must know about them.
The OFFSET expression.
The ON clause of a join
The ONEPASS_DESIRED flags never occurs together with ORDER BY
The OPFLG_INITIALIZER macro is created by mkopcodeh.awk during compilation.
The OP_Column opcode is the only cursor opcode that works with a pseudo-table.
The OP_Delete opcode always follows an OP_NotExists or OP_Last or OP_Column on the same table without any intervening operations that might move or invalidate the cursor.
The OP_Found at the top of this branch jumps here when true,  causing the overall IN expression evaluation to fall through.
The OP_NotExists opcode performs the same operation, but with OP_NotExists the P3 register must be guaranteed to contain an integer value.
The OP_NotFound opcode performs the same operation on index btrees (with arbitrary multi-value keys).
The OP_OpenEphemeral for the sorting index
The OP_OpenEphemeral table will be cancelled later because we still need to use the pKeyInfo
The OP_REF and OP_REFI opcodes are used for a reference to a numbered group or to a non-duplicated named group.
The OP_RowKey and OP_RowData opcodes always follow OP_NotExists or OP_Rewind/Op_Next with no intervening instructions that might invalidate the cursor.
The OP_RowKey and OP_RowData opcodes always follow OP_NotExists or OP_SeekRowid or OP_Rewind/Op_Next with no intervening instructions that might invalidate the cursor.
The OP_SeekRowid opcode performs the same operation but also allows the P3 register to contain a non-integer value, in which case the jump is always taken.
The OP_String opcodes on the second pass convert the upper and lower bound string constants to blobs.
The OR-clause broken out into subterms
The ORDER BY (or GROUP BY clause)
The ORDER BY and GROUP BY clauses may not refer to terms in outer queries
The ORDER BY clause for compounds SELECT statements is handled below, after all of the result-sets for all of the elements of the compound have been resolved.
The ORDER BY clause is ignored for all of the above
The ORDER BY clause or NULL
The ORDER BY or GROUP BY clause to be processed
The ORDER BY term is an integer constant.
The OS code of current host
The OS layer should populate the buffer with a nul-terminated UTF-8 encoded error message describing the last IO error to have occurred within the calling thread.
The OS might guarantee only one guard page at the bottom of the stack, and a page size can be as small as 4096 bytes.
The OS will automatically  delete the temporary file when it is closed.
The OVECTOR offset goes to TMP2.
The Object with the call method that is a completion for filename.
The Object with the call method that is a completion for usernames.
The Op.opflags field is set on all opcodes.
The OpenBSD ld.so(1) does not currently support PT_TLS.
The OpenSSL::Buffering module provides additional IO methods.
The OpenSSL::X509 module provides the tools to set up an independent PKI, similar to scenarios where the 'openssl' command line tool is used for issuing certificates in a private PKI.
The P and X arguments are pointers whose meanings depend on T.
The P parameter has type BLOB but it is really just a pointer to the Stat4Accum object.
The P1 cursor must be for a real table, not a pseudo-table.
The P1 cursor must have been positioned using OP_NotFound prior to invoking this opcode in  this case.
The P1 parameter is not actually used by this opcode.
The P1 register is initialized to 0 by this instruction.
The P1 values need not be contiguous but all P1 values should be small integers.
The P2 argument is not used by this opcode.
The P2 table cursor (OP_Seek only)
The P3 register is updated with the ' generated record number.
The P3 value is a hint to the btree implementation.
The P4 argument is only needed for the degenerate case where the step function was not previously called.
The P4 operand as an integer
The P4 parameter is not used
The P4 value is used by sqlite3_bind_parameter_name().
The P4 value may be either an integer (P4_INT32) or a pointer to a KeyInfo structure (P4_KEYINFO).
The P5 arguments are taken from register P2 and its successors.
The P5 parameter should be 1.
The PCache mutex must be held when this function is called.
The PCache.pSynced variable is used to optimize searching for a dirty page to eject from the cache mid-transaction.
The PDO Database Handle Class
The PDO Statement Handle Class
The PGHDR_DIRTY bit is set above when the page was added to the dirty-list and before writing the page into the rollback journal.
The PGroup mutex must be held when accessing nMax.
The PGroup mutex must be held when this function is called.
The PID of the started process can be obtained by IO#pid method.
The PMA is written one record at a time.
The POSIX class substitutes must be in the order of the POSIX class names, defined above, and there are both positive and negative cases.
The POS_COLUMN or POS_END terminator is not copied into *pp.
The PRIMARY KEY fields contain the values identifying the row to delete.
The PRIMARY KEY index
The PRIMARY KEY index for WITHOUT ROWID tables
The PRIMARY KEY index may be  identified by the test.
The PRIMARY KEY index on the table
The PRIMARY KEY may consist of a single column, or may be a composite key.
The PRNG is also used for the build-in random() and randomblob() SQL functions.
The PRNG produces a deterministic sequence of bits which approximate true randomness.
The PTRMAP_XXX identifiers below are the valid types.
The PT_CLIST property is a pseudo-property that contains a pointer to a list of case-equivalent characters.
The Pager layer will use this to know that is cache is stale and needs to be flushed.
The Pager.eState variable stores the current 'state' of a pager.
The Pager.errCode variable is set to something other than SQLITE_OK.
The Pager.sectorSize variable may have been updated while rolling back a journal created by a process with a different sector size value.
The Parse.pTriggerPrg list never contains two entries with the same values for both pTrigger and orconf.
The Parser, on the contrary, is a straightforward implementation of a recursive-descendant parser (or, LL(1) parser, as it is usually called).
The PgHdr1 header is a subclass of sqlite3_pcache_page.
The Prev opcode is only used after SeekLT, SeekLE, and Last.
The Prev opcode is only valid following an SeekLT, SeekLE, or OP_Last opcode used to position the cursor.
The Private Use area.
The Queue class implements all the required locking semantics.
The R parameter is only used for STAT3 and STAT4
The RBU VFS should be installed so that the zipvfs VFS uses the RBU VFS, which in turn uses any other VFS layers in use  (for example multiplexor) to access the file-system.
The RBU handle is currently in RBU_STAGE_OAL state, with a SHARED lock on the database file.
The RBU handle passed as the only argument has just been opened and  the state database is empty.
The RC4 algorithm is being used as a PRNG (pseudo-random number generator) not as an encryption device.
The REQ_CASELESS leaves the lower 28 bit empty.
The RHS of the IN operator
The RowSet object is a collection of rowids.
The RowSet object is optimized for the case where successive sets of integers, where each set contains no duplicates.
The RowSet.pForest value points to the head of this forest list.
The Ruby String can be created by this module method.
The Ruby/zlib version string.
The SAPI interface should use 'const char *'
The SELECT has been coded.
The SELECT statement being coded.
The SELECT statement containing the ORDER BY
The SELECT statement containing the clause
The SELECT statement holding pOrderBy
The SELECT statement is as prepared by function sessionSelectStmt().
The SELECT statement must be expanded before name resolution is performed.
The SELECT statement to be fixed to one database
The SELECT statement with the ORDER BY clause
The SELECT was successfully coded.
The SET clause: list of column and new values
The SET expressions are not actually used inside the WHERE loop.
The SHM file is readonly
The SPILLFLAG_OFF case is a user preference.
The SQL function always returns NULL.
The SQL table being indexed
The SQL to be executed
The SQLITE_*_BKPT macros are substitutes for the error codes with the same name but without the _BKPT suffix.
The SQLITE_ACCESS_READ constant is currently unused, though it might be used in a future release of SQLite.
The SQLITE_AFF_MASK portion of P5 must be an affinity character - SQLITE_AFF_TEXT, SQLITE_AFF_INTEGER, and so forth.
The SQLITE_AFF_MASK values masks off the significant bits of an affinity value.
The SQLITE_BYTEORDER macro is part of sqliteInt.h and hence the endian-specific implementation will only be used if this module is compiled as part of the amalgamation.
The SQLITE_CHECKPOINT_FULL and RESTART modes also obtain the exclusive  "writer" lock on the database file.
The SQLITE_ColumnCache flag disables the column cache.
The SQLITE_DEFAULT_CACHE_SIZE
The SQLITE_DEFAULT_MEMSTATUS macro must be defined as either 0 or 1.
The SQLITE_ECEL_DUP flag prevents the arguments from being filled using OP_SCopy.
The SQLITE_ECEL_FACTOR argument allows constant arguments to be factored out into initialization code.
The SQLITE_ENABLE_LOCKING_STYLE also enables automatic selection of the appropriate locking style based on the filesystem where the database is located.
The SQLITE_EXTRA_DURABLE compile-time option used to set the default synchronous setting to EXTRA.
The SQLITE_IOCAP_ATOMIC property means that all writes of any size are atomic.
The SQLITE_IOCAP_ATOMICnnn values mean that writes of blocks that are nnn bytes in size and are aligned to an address which is an integer multiple of nnn are atomic.
The SQLITE_IOCAP_IMMUTABLE flag indicates that the file is on read-only media and cannot be changed even by processes with elevated privileges.
The SQLITE_IOCAP_SAFE_APPEND value means that when data is appended to a file, the data is appended first then the size of the file is extended, never the other way around.
The SQLITE_IOCAP_SEQUENTIAL property means that information is written to disk in the same order as calls to xWrite().
The SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN flag indicate that a file cannot be deleted when open.
The SQLITE_MUTEX_PTHREADS and SQLITE_MUTEX_W32 implementations are appropriate for use on Unix and Windows.
The SQLITE_MUTEX_STATIC_MASTER mutex must be held while accessing this list.
The SQLITE_NOTNULL flag is a combination of NULLEQ and JUMPIFNULL.
The SQLITE_NO_SYNC macro disables all fsync()s.
The SQLITE_OK result code will never be extended.
The SQLITE_OPEN_EXCLUSIVE flag, when paired with the  SQLITE_OPEN_CREATE, is used to indicate that file should always be created, and that it is an error if it already exists.
The SQLITE_PROTOCOL return indicates that some other process has gone rogue and is not honoring the locking protocol.
The SQLITE_SHM_DIRECTORY compile-time option is considered "unsupported" and may go away in a future SQLite release.
The SQLITE_SYNC_FULL macro means to use the MacOSX-style full-fsync using fcntl(F_FULLFSYNC).
The SQLITE_SYNC_NORMAL and SQLITE_SYNC_FULL flags determine how energetic or rigorous or forceful the sync operations are and only make a difference on Mac OSX for the default SQLite code.
The SQLITE_SYSTEM_MALLOC macro is defined automatically if neither the SQLITE_MEMDEBUG nor the SQLITE_WIN32_MALLOC macros are defined.
The SQLITE_TEST_REALLOC_STRESS compile-time option is designed to force more frequent reallocs and hence provide more opportunities for  simulated OOM faults.
The SQLITE_THREADSAFE macro must be defined as 0, 1, or 2.
The SQLITE_TRACE_SIZE_LIMIT puts an upper bound on the size of expanded bound parameters.
The SQLITE_Transitive optimization must be enabled 2.
The SQLITE_WITHIN(P,S,E) macro checks to see if pointer P points to something between S (inclusive) and E (exclusive).
The SQLITE_WSD macro is used for this purpose.
The SQLite core calls this routine to retrieve the rowid for the current row of the result set.
The SQLite core has no knowledge of its size or internal structure and never deals with the sqlite3_pcache object except by holding and passing pointers to the object.
The SQLite core never uses these routines except inside an assert() and applications are advised to follow the lead of the core.
The SQLite core only provides implementations for these routines when it is compiled with the SQLITE_DEBUG flag.
The SQLite core reserves all opcodes less than 100 for its own use.
The SQLite core will never attempt to acquire or release a lock outside of this range
The SQLite database connection
The SQLite source code contains multiple implementations of these mutex routines.
The SQLite user supplies a block of memory before calling sqlite3_initialize() from which allocations are made and returned by the xMalloc() and xRealloc()  implementations.
The SRT_ operation to apply to prior selects
The SSLContext is used to create an SSLSocket.
The STR_PTR must be released.
The SUM() function follows the (broken) SQL standard which means that it returns NULL if it sums over no inputs.
The SVN revision for this ruby.
The SYNC_FLUSH method flushes all pending output to the output buffer and the output is aligned on a byte boundary.
The Scanner is rather clever and complicated.
The Scanner transforms the input stream into a sequence of tokens, while the parser transform the sequence of tokens produced by the Scanner into a sequence of parsing events.
The Schema.cache_size variable is not cleared.
The Select object passed in has already been preprocessed and no errors have been found.
The SnippetIter object has just been initialized.
The Source list to check and modify
The SrcList passed as the second argument to this function contains a single entry guaranteed to resolve to table pTab.
The SrcList to be enlarged
The StatusDown() routine lowers the current value by N.
The StatusUp() routine can accept positive or negative values for N.
The String that is passed to the Proc depends on the Readline.completer_word_break_characters property.
The Struct class generates new subclasses that hold a set of members and their values.
The Sun's ecliptic latitude is not
The Synopsis: field in comments in the vdbe.c source file gets converted to an extra string that is appended to the sqlite3OpcodeName().
The TEMP Schema is manually freed by sqlite3_close().
The TEST primitive includes a "batch" number.
The TEST primitive will only see elements that were inserted before the last change in the batch number.
The TESTONLY macro is used to enclose variable declarations or other bits of code that are needed to support the arguments within testcase() and assert() macros.
The TK_AS operator causes the expression to be evaluated just once and then reused for each alias.
The TK_SELECT_COLUMN Expr node:  pLeft:           pVector containing TK_SELECT pRight:          not used.
The Table object to which the virtual table belongs
The Table structure pTable is really a VIEW.
The Table structure that represents the result set was constructed by selectExpander() but the type and collation information was omitted at that point because identifiers had not yet been resolved.
The TableLock structure is only used by the sqlite3TableLock() and codeTableLocks() functions.
The Time class treats GMT (Greenwich Mean Time) and UTC (Coordinated Universal Time) as equivalent.
The Trigger structure or any of its sub-components may be allocated from the lookaside buffer belonging to database handle dbMem.
The TryEnterCriticalSection() interface is only available on WinNT.
The UNION ALL operator uses this property to force the reuse of the same limit and offset registers across multiple SELECT statements.
The UNION ALL operator works fine with multiSelectOrderBy() even when there are COLLATE terms in the ORDER BY.
The UNLIKELY() function is a no-op.
The UPDATE  statement ensures that the remaining segments have contiguously allocated idx values.
The USING clause of a join
The UTF-16 encoding is not as simple as one might naively think.
The UTF-8 string to compare against
The Unicode definition of UTF-8 goes up to 4-byte sequences.
The VACUUM command is used to clean up the database, collapse free space, etc.
The VCS identifier (typically a git hash) of the build
The VDBE already created by calling function
The VDBE containing code to translate
The VDBE cursor for the index
The VDBE cursor for the table
The VDBE cursor number used to access this table
The VDBE cursor numbers are small integers contained in  SrcList_item.iCursor and Expr.iTable fields.
The VDBE cursor numbers might be spread out over the non-negative integers.
The VDBE cursor that implements the sort
The VDBE cursor used by this IN operator
The VDBE cursor used to access pIdx
The VDBE cursor used to access the table
The VDBE has been deallocated
The VDBE implements an abstract machine that runs a simple program to access and modify the underlying database.
The VDBE is guaranteed to have at least 9 cells.
The VDBE knows that a P2 value is a label because labels are always negative and P2 values are suppose to be non-negative.
The VDBE should have been allocated before this routine is called.
The VDBE under construction
The VDBE we are building
The VFS containing this xAccess method
The VFS for which this is the xOpen method
The VFS shim modifies the behaviour of a standard VFS in the following ways:  1.
The VFS that created this unixFile
The VFS to use for actual file I/O
The VFS used to create pDbFd
The VFS used to open this file
The VFS.xSync operations serve as write barriers - all writes launched before the xSync must complete before any write that launches after the xSync begins.
The VM that owns this context
The VM under construction
The Vdbe parse-tree explainer is also found here.
The Vdbe.aColName array contains 5n Mem structures, where n is the  number of columns of data returned by the statement.
The Vdbe.inVtabMethod variable is set to non-zero for the duration of any virtual table method invocations made by the vdbe program.
The VdbeCoverage macros are used to set a coverage testing point for VDBE branch instructions.
The VdbeSorter object implements a multi-threaded external merge sort algorithm that is efficient even if the number of elements being sorted exceeds the available memory.
The W3C spec doesn't say anything about the 'overflow' property, but all major browsers appear to implement the following logic.
The WAL file is readonly
The WAL file to which we write
The WAL has been completely backfilled (or it is empty).
The WAL header is 32 bytes in size and consists of the following eight big-endian 32-bit unsigned integer values:  0: Magic number.
The WAL subsystem issues this signal during rare circumstances in order to fix a problem with priority inversion.
The WAL transaction is then closed.
The WAL_RECOVER_LOCK is also held so that other threads will know that this thread is running recovery.
The WHEN clause of the expression (may be NULL)
The WHERE clause for DELETE or UPDATE steps
The WHERE clause of the outer query
The WHERE clause processing routine has two halves.
The WHERE clause should use this specific cursor.
The WHERE clause terms that set the upper and lower bounds are represented by pLower and pUpper respectively.
The WHERE clause to be scanned
The WHERE clause to be searched
The WHERE processing context
The WHERE_* flags defined in sqliteInt.h
The WIN32OLE.codepage is initialized according to Encoding.default_internal.
The WalIndexHdr.mxFrame must never be less than nBackfillAttempted.
The Walker.eCode value determines the type of "constant" we are looking for.
The Walker.eCode value is 5 when parsing an existing schema and 4 when processing a new statement.
The WhereClause structure is filled with pointers to subexpressions.
The WhereClause structure itself is not freed.
The WhereClause to be initialized
The WhereInfo object contains a single instance of this object for each term in the FROM clause (which is to say, for each of the nested loops as implemented).
The WhereLoop builder
The WhereLoop factory
The WhereLoop object being coded
The WhereMaskSet translates these sparse cursor numbers into consecutive integers beginning with 0 in order to make the best possible use of the available bits in the Bitmask.
The WhereOrSet object holds a set of possible WhereOrCosts that correspond to the subquery(s) of OR-clause processing.
The WhereOrSet to be updated
The WherePath to check
The WhereScan object being initialized
The WhereTerm.iField variable identifies the index within the vector on the LHS that the virtual term represents.
The WhereTerm.pExpr field is still set to the original subexpression content and wtFlags is set up appropriately but no other fields in the WhereTerm object are meaningful.
The Win32 native heap cannot be modified because it may be in use.
The Windows VFS uses native malloc() and free() for some operations.
The Windows errno from the last I/O error
The Y is also optional.
The Z expression is replaced by a copy of the left-hand side of the result-set expression.
The Z in X.Y.Z cannot be NULL
The ZEND_ACC_IMPLEMENT_INTERFACES flag disables double call to zend_verify_abstract_class()
The _DEP / _DEP_DEP variants additionally free the temporary values passed in the last / last two arguments.
The _FILE_OFFSET_BITS macro must appear first in QNX.
The __array__ attribute
The __array_prepare__ function to call for each output
The __array_priority__ attribute of the inputs determines the subtype of any output arrays.
The __numpy_ufunc__ nonsense is also assumed to have been taken care of.
The _method_ parameter can be a +Proc+, a +Method+ or an +UnboundMethod+ object.
The aIdx array contains the set of integers from 0 to  (nIdx-1) in no particular order.
The aSpare array is used as temporary working space by the sorting algorithm.
The ability to disable the use of covering indices for full table scans is because some incorrectly coded legacy applications might malfunction when the optimization is enabled.
The ability to override this routine was added in support of the chromium sandbox.
The ability to use an output result-set column in the WHERE, GROUP BY, or HAVING clauses, or as part of a larger expression in the ORDER BY clause is not standard SQL.
The ability to use an output result-set column in the WHERE, GROUP BY, or HAVING clauses, or as part of a larger expression in the ORDRE BY clause is not standard SQL.
The above cases cover arrays produced by typical slicing of well-behaved parent arrays.
The above is for a rollback-journal mode.
The above might be initialized to non-zero.
The absolute value of N is used.
The access authorization function is be called during the compilation phase to verify that the user has read and/or write access permission on various fields of the database.
The acquisition might fail for several reasons.
The actual computation according to FIPS 180-2:6.2.2 step 3.
The actual computation according to FIPS 180-2:6.3.2 step 3.
The actual computation.
The actual file might be larger than this in PAGER_JOURNALMODE_TRUNCATE or PAGER_JOURNALMODE_PERSIST.
The actual file on disk is not created or populated until either:  1) The in-memory representation grows too large for the allocated  buffer, or 2) The sqlite3JournalCreate() function is called.
The actual function that does the work of creating a new module.
The actual header in the wal-index consists of two copies of this object followed by one instance of the WalCkptInfo object.
The actual header in the wal-index consists of two copies of this object.
The actual number of significant digits used in computation is usually larger than the specified number.
The actual singular values are returned in D in ascending order.
The actual size of the created mapping is either the requested size or the value configured  using SQLITE_FCNTL_MMAP_LIMIT, whichever is smaller.
The actual size of the created mapping is either the requested size or the value configured  using SQLITE_FCNTL_MMAP_SIZE, whichever is smaller.
The actual size of the created mapping is either the requested size or the value configured using SQLITE_FCNTL_MMAP_SIZE, whichever is smaller.
The actual transformation has been performed several dozens line above.
The additional sanity checking data is an attempt to discover the garbage in the journal and ignore it.
The addrSortIndex variable is used to facilitate that change.
The address of the cell in the parent frame is determined by adding the value of the P1 argument to the value of the P1 argument to the calling OP_Program instruction.
The affinities of A and B must be compatible 5a.
The affinity of the column or 0 if not a column
The affinity of the parent key column should be applied to each child key value before the comparison takes place.
The affinity string for the record
The affinity to be applied
The afpLockingContext structure contains all afp lock specific state
The aggregate accumulator is a set of memory cells that hold intermediate results while calculating an aggregate.
The aggregate function implementation
The alarm callback and its arguments.
The alert stack is cleared after imap_alerts() is called.
The algorithm assumes that each node gets layed out a maximum of one time per tree layout, but multiple measurements may be required to resolve all of the flex dimensions.
The algorithm consists of three stages: The first stage consists of deflating the size of the problem when there are multiple eigenvalues or if there is a zero in the Z vector.
The algorithm consists of three stages: The first stage consists of deflating the size of the problem when there are multiple singular values or when there are zeros in the Z vector.
The algorithm consists of two stages: The first stage consists of deflating the size of the problem when there are multiple singular values or if there is a zero in the Z vector.
The algorithm here is the method described in CLISP.
The algorithm implemented here won't handle all cases but it was simpler to implement and it mitigates performance concerns because we know exactly how many passes it'll do.
The algorithm is found in Knuth Vol 2.
The algorithm needs  to handle both cases well.
The algorithm was first presented in "Accurate singular values and differential qd algorithms" by K.
The algorithms are based on a preponderance of less authoritative sources.
The algorithms are complicated slightly in order to be compatible with Windows95 systems simultaneously accessing the same database file, in case that is ever required.
The algorithms are complicated slightly in order to be compatible with windows systems simultaneously accessing the same database file, in case that is ever required.
The algorithms stops (and so fails to converge) if the number of passes through the inner loop exceeds MAXITR*N**2.
The algorithms that are available depend on the particular version of OpenSSL that is installed.
The alloca() routine never returns NULL.
The allocateSpace() routine guarantees the following properties if it returns successfully
The allocateSpace() routine guarantees the following two properties if it returns success
The allocated size is always at least as big as the requested size but may be larger.
The allocated space holds both the TriggerStep object and the TriggerStep.target.z string.
The allocation (static, dynamic etc.) and encoding of the Mem may be changed by this function.
The allocation drivers implemented here always fail.
The allocation is made from the first free slot in  the list that is large enough to accommodate it.
The allocation is relinquished before this function returns.
The alpha channel is where it's really at these days.
The alternative page cache mechanism is an extreme measure that is only needed by the most demanding applications.
The amount of extra space required can change depending on the compiler, target platform, and SQLite version.
The amount of information copies from WAL to database might be limited by active readers.
The answer may be incorrect for buffered non-reduction operands.
The antipenultimate character of the master journal name must be "9" to avoid name collisions when using 8+3 filenames.
The apVal parameter is passed a copy of the apVal argument passed by SQLite to the xUpdate() method.
The app-defined function has done something that as caused this statement to expire.
The application does not need to worry about freeing the result.
The application gives SQLite a block of memory before calling sqlite3_initialize() from which allocations are made and returned by the xMalloc() and xRealloc()  implementations.
The application must insure that no other SQLite interfaces are invoked by other threads while sqlite3_config() is running.
The application should never invoke either sqlite3_os_init() or sqlite3_os_end() directly.
The application should only invoke sqlite3_initialize() and sqlite3_shutdown().
The application should resume compression after it has made more room in the output buffer.
The application should resume decompression after it has loaded more data into the input buffer.
The appropriate table name will be inserted automatically by the parser so we can just use the abbreviation "x" here.
The argument is a Parse object for the code generator.
The argument is a pointer to a value of type sqlite3_int64 that is an advisory maximum number of bytes in the file to memory map.
The argument is a pointer to an array of two integers where the first integer i the new retry count and the second integer is the delay.
The argument is a zero-terminated string.
The argument is an Fts3Expr structure for a binary operator (any type except an FTSQUERY_PHRASE).
The argument is an IN operator with a list (not a subquery) on the  right-hand side.
The argument is an RtreeCoord.
The argument is of type (void **) - an array of two (void *) values.
The argument is the first in a linked list of dirty pages connected by the PgHdr.pDirty pointer.
The argument is the number of microseconds we want to sleep.
The argument may be NULL, representing an empty list.
The argument specifies alternative low-level memory allocation routines to be used in place of the memory allocation routines built into SQLite.
The argument to this macro is a file descriptor (type sqlite3_file*).
The argument to this macro must be of type u32.
The argument to this macro should be a variable.
The arguments after _NAMELENGTH and _CONTENTSLENGTH must be explicitly cast to long in curl_formadd use since curl needs a long not an int.
The arguments are:  (1) the number of columns in the index including the rowid, (2) the number of rows in the index,  The second argument is only used for STAT3 and STAT4
The arguments passed to your script are stored in the +ARGV+ Array, one argument per element.
The arguments should have their types declared as well, but you're free to pass arguments of other types instead.
The arguments specify the block of memory to manage.
The arguments to RowSetTest are such that the rowid of the current row is inserted into the RowSet.
The arguments to this routine should be the same as the first six arguments to sqlite3GenerateConstraintChecks.
The array and its contents are allocated using a single allocation.
The array being indexed has one dimension and it is a fancy index
The array cannot be constant since changes are made to the FuncDef.pHash elements at start-time.
The array contains Addrinfo objects.
The array contains one element for each matchable phrase in the query.
The array does not have a valid type.
The array is attached to _ancillarydata_ when it is instantiated.
The array is changed instantly every time the block is called, not after the iteration is over.
The array is cleared after invoking the callbacks.
The array may not be changed instantly every time the block is called.
The array might be stored in a local variable that will be overwritten.
The array of interior nodes that are parents of the leaf nodes start at block (start_block + (1 + end_block - start_block) / 16).
The array should be compatible to the value of IPSocket#addr or UNIXSocket#addr.
The array struct interface
The array we'll be returning, when no block given
The arrays shape, out_shape, strides, and out_strides must all point to different data.
The arrays we're computing the product of
The assert is not useful in that case.
The assert() below verifies the previous sentence.
The assert_nc() macro is similar to the assert() macro, except that it is used for assert() conditions that are true only if it can be  guranteed that the database is not corrupt.
The asserts() that follow verify that assumption
The assignment does not occur if the regexp is not a literal.
The associated IO object needs to respond to the +seek+ method.
The associated database
The associated database connection
The associated file-descriptor is returned.
The associated pager.
The associativity is preserved.
The assumed sector size for this process
The assumption here is that if that is happening, the other client may only be increasing the value, not decreasing it.
The assumption is that large doclists represent terms which are more likely to be query targets.
The atoi() and atof() names are used in the table for brevity and because they are familiar to most C programmers.
The attached database containing the blob
The attempt to extend the existing mapping failed.
The auth function should return either SQLITE_OK, SQLITE_DENY, or SQLITE_IGNORE.
The author disclaims all warranties with regard to this software.
The author of this software is David M.
The authorization context
The authorizer callback must not do anything that will modify the database connection that invoked the authorizer callback.
The authorizer is disabled by default.
The auto-commit flag is true, the vdbe program was successful  or hit an 'OR FAIL' constraint and there are no deferred foreign key constraints to hold up the transaction.
The auto-commit flag.
The auto-extension code added regardless of whether or not extension loading is supported.
The automatic index is partial
The automatic salt generation covers standard DES, md5-crypt and Blowfish (simple)
The available memory is assumed to start at -offset and proceed to numbytes-offset.
The available resources are OS dependent.
The average document size in pages is calculated by first calculating  determining the average size in bytes, B.
The average document size, which is required to calculate the cost of each doclist, has not yet been determined.
The axis will be over-written if negative with the axis having the smallest stride.
The b-tree layer then attempts a rollback operation.
The bFlags argument can contain the bit SQLITE_PRINTF_INTERNAL enable internal formats.
The backtrace functionality is only available with GLIBC
The backtrack path must check whether there is a next alternative.
The backup API copies the content of one database into another.
The backup module in backup.c maintains the content of this variable.
The backup process p has already copied page iPage.
The base address difference is incommensurate with all strides, so that there are no solution candidates to consider.
The base for radix conversion
The base frame is on the machine stack, and so must not be freed.
The base of the floating point, or number of unique digits used to represent the number.
The basic MD5 functions.
The basic blocks of regular expressions are condition checkers whose execute different commands depending on the result of the condition check.
The basic idea is that each page of the file contains N database entries and N+1 pointers to subpages.
The basic idea is to do a nested loop, one loop for each table in the FROM clause of a select.
The beginning and end of the LRU list
The beginnings of chunks are defined by _pattern_ and the block.
The beginnings of chunks are defined by the block.
The behavior is undefined if the mutex  is not currently entered.
The behavior is undefined if the mutex is not currently entered by the calling thread or is not currently allocated.
The behavior is undefined if the mutex is not currently entered or is not currently allocated.
The behavior of realloc(ptr, 0) is implementation defined.
The behavior of the most recently created foreign key is adjusted accordingly.
The behaviour of the journal file depends on the value of parameter  nSpill.
The below are erroneous inputs, so NULL return is expected/required
The below if loop is added for NetWare to fix an abend while unloading PHP when an Apache unload command is issued on the system console.
The best (lowest cost) WherePath at the end is the choosen query plan.
The best (lowest cost) WherePath at the end is the chosen query plan.
The best snippet is the snippet with the highest score, where scores are calculated by adding:  (a) +1 point for each occurrence of a matchable phrase in the snippet.
The best unit for date is 'D'
The bit is set if the corresponding page is allocated.
The bit that is set for overflow
The bitmap records up to 31 back references to help in deciding whether (.*) can be treated as anchored or not.
The bitmask datatype defined below is used for various optimizations.
The bits used for last_capture
The bits used for the overflow flag
The blame is not necessarily with GCC, though.
The blob of memory associated with  cursor 0 is stored in memory cell nMem.
The block can yield values back using +yielder+.
The block header contains the size of the previous and the next block.
The block is called the length of the receiver enumerator minus one.
The block of page numbers associated with the first hash-table in a wal-index is smaller than usual.
The block of registers has already been deallocated by the time this routine returns.
The block or +Proc+ object receives the variable's new value as a parameter.
The block parameter will be an IO object in the parent and +nil+ in the child.
The blocking transaction has been concluded.
The boolean index is empty
The bottom bit indicates whether the search order is ASC or DESC.
The bottom of the loop
The bottom of the main insertion loop, if the data source is a SELECT statement.
The bound on x(j) is also used to determine when a step in the columnwise method can be performed without fear of overflow.
The bound variables point to them only if the user has started to fetch data (MYSQLND_STMT_USER_FETCHING).
The boundary between these two regions is determined using offsetof(Parse,nVar) so the nVar field must be the first field in the recursive region.
The boundary is determined by offsetof(Parse,aColCache).
The bounds computed by offset_bounds_from_strides correspond to all-positive strides.
The bounds t_l, t_u ensure the x computed below do not overflow
The bracket content will be checked by the OP_BRA/OP_CBRA case above.
The branch is temporarily terminated with OP_END when this function is called.
The branch terminates at string end
The breaking rules are as follows: 1.
The bswap moves those "good" high bits into the low bits, to serve as the initial hash table slot number.
The btree implementation is free to use the initial *pRes value as a hint to improve performance, but the current SQLite btree implementation does not.
The btree layer manages reference counting issues.
The btree layer only operates on the cached copy of the database pages.
The btree to be checked
The btree to set the safety level on
The btree.c module deals with pointers to MemPage objects.
The btreeCursor() routine enforces that rule.
The btreeHeapInsert() routine inserts an unsigned 32-bit number onto the heap, preserving the heap property.
The btreeHeapPull() routine removes the root element from the heap (the minimum value in the heap) and then moves other nodes around as necessary to preserve the heap property.
The btreeInitPage() call has already validated the freelist.
The buffer *ppToken is set to point at is managed by the tokenizer implementation.
The buffer associated with pPrev is extended by this function if requrired.
The buffer containing the changeset (pChangeset) must remain valid until after the iterator is destroyed.
The buffer data pointers from the NpyIter object will then be passed to the inner loop function.
The buffer indicated by *ppOut may only be considered valid until the next call to this function.
The buffer is being used with reduction
The buffer is not yet full
The buffer is obtained from sqlite3_malloc().
The buffer must be aligned to an 8-byte boundary.
The buffer pointed to by argument zNode (size nNode bytes) contains an interior node of a b-tree segment.
The buffer remains valid until either sqlite3changeset_next() is called on the iterator or until the  conflict-handler function returns.
The buffer returned in *ppOut is only valid until the next call to this function.
The buffer that the argument points to contains a serialized SQL value.
The buffer that zWalName points to must remain valid for the lifetime of the returned Wal* handle.
The built-in page cache is recommended for most uses.
The busy callback should not take any actions which modify the database connection that invoked the busy handler.
The busy-handler callback can be used when upgrading to the EXCLUSIVE lock, but not when obtaining the RESERVED lock.
The busy-handler callback is currently invoked only from within pager.c.
The busy-handler callback is never invoked.
The busy-handler is also invoked while waiting for database readers as described above.
The busy-handler is not invoked if another connection already holds the write-lock.
The byte case is the same as non-UTF8
The byte immediately before the last 0x00 byte has the 0x80 bit set.
The byte offset of the start of the page footer.
The byte offset to the first freeblock is given in the header.
The bytes are caused by invalid_byte_sequence error.
The bytes to be written
The cache must not perform any reference counting.
The cache of the wal-index header must be valid to call this function.
The cache to truncate
The calculation may be reordered because of cache behavior or multithreading requirements.
The calendar was created in 46 B.C., but the details did not stabilize until at least 8 A.D., and perhaps as late at the 4th century.
The call assures that only valid opcodes are sent
The call below sets the pName pointer to point at the token (pName1 or pName2) that stores the unqualified table name.
The call returns the value of the block.
The call to _recvfrom_ is not permitted with a connected socket on a socket that is connection oriented or connectionless.
The call to execSql() to attach the temp database has left the file locked (as there was more than one active statement when the transaction to read the schema was concluded.
The call to fts3AllocateSegdirIdx() will merge the segments at level iLevel+1 to  a single iLevel+2 segment if necessary.
The call to pager_unlock() will discard all in-memory pages, unlock the database file and move the pager back to OPEN state.
The call to sqlite3BtreeRollback() drops any table-locks held by this handle.
The call to sqlite3Stat4ProbeSetValue() below would return the same value.
The call to this function will effect all following calls of SOAP methods.
The callback for additional certificate verification.
The callback for when the main thread has issued a command to the run loop thread.
The callback function is called when the event is first registered and when the event is cancelled.
The callback function may have defined the class
The callback implementation must not do anything that will modify the database connection that invoked the callback.
The callback is deprecated.
The callback is invoked by the library in three separate circumstances, identified by the value passed as the fourth parameter.
The callback is invoked for each certificate in the chain.
The callback is invoked once for each token in the input text.
The callback is invoked with a Session and must return an Array containing an OpenSSL::X509::Certificate and an OpenSSL::PKey.
The callback is invoked with an SSLContext and a Session.
The callback is invoked with an SSLSocket.
The callback is invoked with the SSLSocket and session id.
The callback is invoked with the Session for the key exchange, an flag indicating the use of an export cipher and the keylength required.
The callback is invoked with the active SSLSocket.
The callback is invoked with two values, a boolean that indicates if the pre-verification by OpenSSL has succeeded or not, and the StoreContext in use.
The callback is invoked with two values.
The callback may return a Session from an external cache.
The callback must return a protocol of those advertised by the client.
The callback must return either true or false.
The callback passed to this function should take an event name (string) and a link resource id (int) as arguments.
The callback registered by this function replaces any existing callback registered using sqlite3_wal_hook().
The callback's return value is irrelevant, normal return indicates "approval" of the renegotiation and will continue the process.
The caller detects this and calls this function again.
The caller discovers how much space needs to be allocated by  calling sqlite3PcacheSize().
The caller does not have to be +thr+.
The caller guarantees that nByte is positive.
The caller guarantees that there is sufficient space to make the allocation.
The caller has already promised not to write to it.
The caller has already promised not to write to that page.
The caller has obtained a mutex prior to invoking this routine so there is never any chance that two or more threads can be in this routine at the same time.
The caller is guaranteed to have locked the WAL_WRITE_LOCK byte, and may have also locked the WAL_CKPT_LOCK byte.
The caller is required to pass a 32-bit node ID.
The caller is responsible for deallocating the value by passing it to sqlite3ValueFree() later on.
The caller is responsible for ensuring that the allocated memory space is eventually freed.
The caller is responsible for ensuring that the input buffer remains valid until the cursor is closed (using the xClose() method).
The caller is responsible for ensuring that the value is eventually freed.
The caller is responsible for eventually calling sqlite3_free() to free the array in this case.
The caller is responsible for filling in its "next" field, which starts out in an invalid state.
The caller is responsible for freeing the memory when done.
The caller is responsible for freeing the returned memory.
The caller is responsible for freeing the returned string by passing it to sqlite3_free().
The caller is responsible for insuring that there is enough space in *pp to hold the complete output.
The caller is responsible for zeroing output parameters.
The caller is responsible not only for closing the file descriptor but also for freeing the memory associated with the file descriptor.
The caller must always assume that it is.
The caller must be holding a SHARED lock on the database file to call this function.
The caller must be holding a mutex to prevent multiple threads from entering at the same time.
The caller must be holding the appropriate mutex.
The caller must call sqlite3PagerSync() directly to sync the database file before calling CommitPhaseTwo() to delete the journal file in this case.
The caller must check the return value  of this function and be careful not to change any page data unless  this routine returns SQLITE_OK.
The caller must ensure that i is within range.
The caller must ensure that iReg already contains the correct value for the expression.
The caller must ensure that pCur is pointing to a valid row in the table.
The caller must ensure that the index is a full integer one.
The caller must ensure that the source buffer is long enough that this routine does not run off the end and dereference non-existent memory looking for trail bytes.
The caller must ensure that there are no outstanding page references when this function is called.
The caller must ensure that there are no outstanding references to any pages other than page 1 with a page number greater than pgno.
The caller must guarantee that the cursor is pointing to a non-NULL valid entry.
The caller must have already opened the stream, and is responsible for closing it after finishing compression.
The caller must have already opened the stream, and is responsible for closing it after finishing decompression.
The caller must hold a SHARED lock on the database file to call this function.
The caller must hold the appropriate mutex.
The caller must hold the appropriate mutex.  (Locking is checked by assert()).
The caller must hold the checkpoint lock.
The caller must hold the write-lock on the log file (obtained using sqlite3WalBeginWriteTransaction()).
The caller must position the cursor prior to invoking this routine.
The caller must set the cnt parameter to the number of prior calls to this routine during the current read attempt that returned WAL_RETRY.
The caller needs to invoke sqlite3PcacheFetchFinish() to properly initialize the sqlite3_pcache_page object and convert it into a PgHdr object.
The caller owns the returned Expr object and is responsible for ensuring that the returned value eventually gets freed.
The caller retains ownership of pVector.
The caller should be careful not to doubly free the data value, which may optionally be free'd by XMLRPC_RequestFree().
The caller should eventually free the returned object using a call to  sqlite3changegroup_delete().
The caller should have already validated that 'ndim' matches for every array in the arrays list.
The caller should invoke sqlite3KeyInfoUnref() on the returned object when it has finished using it.
The caller should not try to modify the KeyInfo object.
The caller takes ownership of all the references in op
The caller to native_sleep should care about spurious wakeup.
The caller will call this function again with the correct page-size.
The caller will detect the syntax error and return a detailed message.
The caller will do so.
The caller will fix it.
The caller will initialize such a field using the slot number this function returns.
The caller will overwrite them after this function returns.
The caller will try to open a new file descriptor on the same path, fail, and return an error to SQLite.
The calling code (see vtab.c) will take responsibility for freeing the Table structure.
The calling function is responsible for ensuring that this structure is eventually freed.
The calling function is responsible for making sure the memory returned is eventually freed.
The calling function is responsible for making sure the node eventually gets freed.
The calling function is responsible for seeing that this structure is eventually freed.
The calling function must check the return code and move the results to the desired register.
The calling function must ensure that p is a valid Bitvec object and that the value for "i" is within range of the Bitvec object.
The calling function needs to do that.
The calling function should free this memory by calling sqlite3DbFree(db, ).
The calling function should invoke SQLITE_MISUSE immediately.
The calling function will set *pRes to 0 or 1.
The calling routine is responsible for making sure that the pMem object is eventually destroyed.
The calling routine must link the master chunk before invoking this routine, then must unlink the (possibly changed) master chunk once this routine has finished.
The calling routine should invoke walIteratorFree() to destroy the WalIterator object when it has finished with it.
The callout item calls an external function, if one is provided, passing details of the match so far.
The calls might not be completely interchangeable.
The canonical name is set by Addrinfo.getaddrinfo when AI_CANONNAME is specified.
The case of the original CREATE TABLE statement is stored, but case is not significant for comparisons.
The caseSensitive parameter determines whether or not the LIKE operator is case sensitive.
The cases all fall through.
The cases of the switch statement above this line should all be indented by 6 spaces.
The cast functions shouldn't need that.
The cast is safe, if larger then the array will be later extended - no big deal :)
The cell content is not freed or deallocated.
The cell from the leaf node needs to be moved to the internal node to replace the deleted cell.
The cell index from which to extract the ID
The cell index.  First cell is 0
The cell may contain a pointer to an overflow page.
The cell pointer array begins on the first byte after the page header.
The cell pointer array contains zero or more 2-byte numbers which are offsets from the beginning of the page to the cell content in the cell content area.
The cell pointers occur in sorted order.
The cell should normally be sized correctly.
The cell to be inserted
The cell-pointers and other fields of the page are not updated.
The cells are guaranteed to fit on the page.
The certificate chain constructed by the last call of #verify.
The certificate is no longer needed
The certificate is on hold
The certificate subject's name or other information changed
The certificate was previously on hold and should now be removed from the CRL
The certificate was revoked due to a key compromise
The certificate was revoked for an unknown reason
The certificate was revoked for an unspecified reason
The certificate was superseded by a new certificate
The chain does not match the policy
The chance of an undetected change is so small that it can be neglected.
The change from SHARED to RESERVED marks the beginning of a normal write operation (not a hot journal rollback).
The change may be disallowed for the following reasons:  An in-memory database can only have its journal_mode set to _OFF or _MEMORY.
The change that caused the conflict is not applied.
The char contains its length.
The char() function takes zero or more arguments, each of which is an integer.
The charMap() macro maps alphabetic characters (only) into their lower-case ASCII equivalent.
The charMap() macro maps alphabetic characters into their lower-case ASCII equivalent.
The character (space) used to separate alternate fonts in the fontlist parameter to gdImageStringFT.
The character is lower case.
The character is title case.
The character is upper case.
The character or character type itself comes last in all cases.
The character set ID of the buffer data.
The character set form of the buffer data.
The character values in the arguments will be within the valid values for the current mode (8-bit, 16-bit, UTF, etc).
The character we are checking can be multibyte.
The characters ``SIG'' may be omitted from the signal name.
The cheapest token in the entire query (i.e. the one visited by the first iteration of this loop), or  b.
The check below will pick up this  case.
The check can be turned off for maximum performance, but the consequences of supplying an invalid string are then undefined.
The check for NPY_ITER_CONTIG can only be done later, once the final iteration order is settled.
The check for little-endian architectures that tolerate unaligned memory accesses is just an optimization.
The checkProfileCallback(DB,P) macro checks to see if a profile callback is needed, and it invokes the callback if it is needed.
The checkpoint status information
The checks happens recursively, while keeping track of which variables are already visisted to avoid infinite loops.
The checksum is calculated by XORing the checksums of each individual entry (see fts3ChecksumEntry()) together.
The checksum is computed using 32-bit big-endian integers if the magic number in the first 4 bytes of the WAL is 0x377f0683 and it is computed using little-endian if the magic number is 0x377f0682.
The checksum is store in the first page of xShmMap memory as an 8-byte  blob starting at byte offset 40.
The checksum is wrong
The checksum values are always stored in the frame header in a big-endian format regardless of which byte order is used to compute the checksum.
The checksums for all entries in the index are XORed together to create a single checksum for the entire index.  The integrity-check code calculates the same checksum in two ways:  1.
The child select may contain expression trees of at most (SQLITE_MAX_EXPR_DEPTH-Parse.nHeight) height.
The child table to be scanned
The child1 and child2 terms were added by the LIKE optimization.
The choices are  SQLITE_MUTEX_OMIT         No mutex logic.
The chunks are cache aligned.
The chunks are kept on a linked list so that they can be deallocated when the RowSet is destroyed.
The circumstances under which SQLite will enforce the soft heap limit may changes in future releases of SQLite.
The cksum argument passed to this function is a checksum calculated based on all expected entries in the FTS index (including prefix index entries).
The class implements FIFO type of queue.
The class method Random.rand provides the base functionality of Kernel.rand along with better handling of floating point values.
The class method _load should take a String and use it to return an object of the same class.
The class of our object is the same as the scope, and the private function (EX(fbc)) has the same scope.
The class of the IO objects in the array is IO or Socket.
The classes that have their own maps are: space, xdigit, digit, upper, lower, word, graph, print, punct, and cntrl.
The clause this term is part of
The client MUST select a protocol of those advertised by the server.
The client will de-serialize it into memory, and can iterate through the results via API.
The client will then send the XML to the server via external mechanism.
The client will use stmt_send_long_data
The client will use the library to build an in-memory representation of a request, and then serialize (encode) that request into XML.
The close-on-exec flag of the duplicated file descriptor is set.
The cnt parameter is the number of slots.
The co-routine is the common header to the 3rd and 4th templates.
The code above is the AFP lock implementation.
The code above is the NFS lock implementation.
The code below is actually not very nice, but I didn't see a better method
The code below is handling the return value of osFallocate()  correctly.
The code block is passed a Group struct.
The code block is passed an Group struct.
The code block is passed an Passwd struct.
The code can also be used to build a tree via API then write out the tree to a buffer, thus "serializing" the xml.
The code can be up to 6 hex digits in length to allow surrogates to be specified.
The code currently call DLASDQ if singular values only are desired.
The code currently call SLASDQ if singular values only are desired.
The code does, however, check for an overrun.
The code for the "sqlite3" command-line shell is also in a separate file.
The code generated by this function scans through the rows in the child table that correspond to the parent table row being deleted or inserted.
The code generated follows one of four templates.
The code generated here is from the 4th template:  B: open temp table L: yield X, goto M at EOF insert row from R..R+n into temp table goto L M: ...
The code generator calls this routine if is discovers that it is possible to abort a statement prior to completion.
The code generator for compound SELECT statements does one level of recursion for each term.
The code generator maintains a stack of active WITH clauses with the inner-most WITH clause being at the top of the stack.
The code has been changed so that the workspace is expanded using malloc() in this situation.
The code in this file implements the function that runs the bytecode of a prepared statement.
The code in this file is only used if we are compiling multithreaded on a Win32 system.
The code in this file is only used if we are compiling multithreaded on a win32 system.
The code in this file is only used if we are compiling threadsafe under unix with pthreads.
The code in this file only exists if we are not omitting the ALTER TABLE logic from the build.
The code is a duplicate of a code in the last range, so just return.
The code is already generated.
The code is duplicated for the caseless and caseful cases, for speed, since matching characters is likely to be quite common.
The code is shared with single-character repeats by setting op_type to add a suitable offset into repeat_type.
The code is similar to that for character classes, but repeated for efficiency.
The code is similar to the above, without the capturing complication.
The code is somewhat non-portable, so it is disabled.
The code is specific to MacOSX and does not work on other unix platforms.
The code is written so that the hard lower-limit for each of these values  is 1.
The code is written this way for performance, to avoid having to run the interrupt and progress checks on every opcode.
The code later relies on this.
The code requires a 32-bit integer type, though.
The code should be inserted somewhere before the last range in the list.
The code starts after the real_pcre block and the capture name table.
The code that calls this routine will use that memory range to store keys for start and termination conditions of the loop.
The code that follows * shows first how to access named substrings, and then how to code for    * repeated matches on the same subject.
The code that sqlite3WhereBegin() generates leaves the cursors named in pTabList pointing at their appropriate entries.
The code to actually verify the schema cookie will occur at the end of the top-level VDBE and will be generated later, by sqlite3FinishCoding().
The code to demote complex to float is disabled for now, as forcing complex by adding 0j is probably desireable.
The code to implement this API is not available in the public release of SQLite.
The code to make the lock occur is generated by a later call to codeTableLocks() which occurs during sqlite3FinishCoding().
The code variable is pointing at the byte into which the BRA operator has been stored.
The code within this loop is run only once if the 'searchList' variable is not true.
The coerce method provides support for Ruby type coercion.
The colUsed field indicates which columns of the virtual table may be required by the current scan.
The collating function must return an integer that is negative, zero, or positive if the first string is less than, equal to, or greater than the second, respectively.
The collating sequence for the compound select is taken from the left-most term of the select that has a collating sequence.
The collating sequence might be determined by a COLLATE operator or by the presence of a column with a defined collating sequence.
The collation sequence must be defined at this point, even if the user deletes the collation sequence after the vdbe program is compiled (this was not always the case).
The collation sequence used by the comparison.
The collation sequence used for the comparison should be that of the parent key columns.
The collation sequences of the comparison and select-list expressions must match those of the index.  3.
The collector should only be called by the master.
The collision detection logic below can all be skipped.
The column affinity string will eventually be deleted by sqliteDeleteIndex() when the Index structure itself is cleaned up.
The column containing the blob
The column indices ILO and IHI mark the starting and ending columns of the submatrix B.
The column list has only names, not types or collations.
The column list presumably came from selectColumnNamesFromExprList().
The column names of the new table will match the result set of the SELECT.
The column of the index to be loaded
The column on the LHS of the term.
The column that is wanted
The column the token must match
The column type is an extra string stored after the zero-terminator on the column name if and only if the COLFLAG_HASTYPE flag is set.
The column value supplied by SQLite must be in range.
The column-list is terminated either by a POS_COLUMN varint (1) or a POS_END varint (0).
The columns of the result set
The columns of the returned data set are:  cid:        Column id (numbered from left to right, starting at 0) name:       Column name type:       Column declaration type.
The columns to change in the UPDATE statement
The combined READER/HANDLER
The command or block specifies code to be run when the signal is raised.
The command's controlling tty is set to the slave device of the pty and its standard input/output/error is redirected to the slave device.
The commands implemented by this function are documented in the "Special INSERT Directives" section of the documentation.
The comments within this routine usually assume glob matching.
The commit and rollback hook callbacks are not reentrant.
The commit has already been done.
The common case is for a varint to be a single byte.
The common case is that no cursors need to be saved, so this routine is broken out from its caller to avoid unnecessary stack pointer movement.
The common strategy is to take a list of possible completions and filter it down to those completions that start with the user input.
The comparison is a sort comparison, so NULLs compare equal, NULLs are less than numbers, numbers are less than strings, and strings are less than blobs.
The comparison is string-based.
The comparison of the keys is performed by a user supplied function.
The comparison opcode
The comparison operation
The comparison operator
The comparison operator.
The comparison was done above.
The comparisons are ordered to try and reject this with as little work as possible.
The compiled version of the regular expression can be stored as metadata associated with the pattern string.
The compiler is not-reentrant.
The complete IN operator
The complete WAL information
The complete WHERE clause
The complete hash table
The complete new option state
The complete select statement being coded
The complete wSendmail package with source code can be located from http://www.jgaa.com
The complex case - There is a multi-file write-transaction active.
The complication here is that the destination page size may be different to the source page size.
The compressed file stream
The compression flags can
The computed column name
The computed eigenvectors are normalized to have Euclidean norm equal to 1 and largest component real.
The concept of this date object can be represented as a tuple of the day count, the offset and the day of calendar reform.
The conch file contains the header, host id and lock file path
The condition is an assertion.
The condition must always be set, even if the ORR/EOR is not executed above.
The condition must always be set, even if the ORR/EORI is not executed above.
The condition must always be set, even if the ORRI/EORI is not executed above.
The conditions tested below might not be true in a corrupt database
The conflict algorithm (OE_Abort, OE_Replace, etc.)
The conflict algorithm.
The conflicting row in this case is the database row with the matching primary key.
The conflicting row, in this case, is the database row with the matching primary key.
The connection becomes equivalent to oci_connect() or oci_new_connect().
The connection is removed from the blocked list.
The connection to be closed
The connection to be opened
The console can be accessed from IO.console or the standard input/output/error IO objects.
The constant is also hardcoded in cmd/ld/pe.c (keep synchronized).
The constant is also the initializer for the run-time allocated buffer.
The constant may resolve to NULL
The constants defined under Socket::Constants are also defined under Socket.
The constants is used when creating WIN32OLE_VARIANT object.
The constraint to test
The content being read or written might appear on the main page or be scattered out on multiple overflow pages.
The content is the same sequence of bytes, it is merely interpreted as a BLOB instead of a string, as if it had been CAST.
The content of a cell looks like this:  SIZE    DESCRIPTION 4     Page number of the left child.
The content of a leaf page is unspecified.
The content of a snapshot is opaque to every other subsystem, so the WAL module can put whatever it needs in the object.
The content of each node is formatted as follows:  1.
The content of that one row is the content of memory register P2.
The content of the new record is described by the pX object.
The content of the page
The content of the whole page
The content of this file is only used if SQLITE_SYSTEM_MALLOC is defined.
The content of this structure must not change while it is registered with any database connection.
The content to returned is determined by the parameter J which is one of the STAT_GET_xxxx values defined above.
The contents of Z are destroyed during the updating process.
The contents of level -1 (which is never used, except transiently here), will be moved back to level iAbsLevel below.
The contents of the "structure" record for each index are represented using an Fts5Structure record in memory.
The contents of the Vdbe.pDelFrame list is deleted when the VM is reset in VdbeHalt().
The contents of the bitvec are cleared at the end of every transaction.
The contents of the bucket are the element pointed to plus the next _ht.count-1 elements in the list.
The contents of the changed-rows hash tables are also deleted.
The contents of the page cache have been modified (and possibly written to disk).
The contents of the page cache have been modified.
The contents of the pager cache have not been modified.
The contents of the pending-terms hash-table have already been flushed into the database by fts3SyncMethod().
The contents of the pending-terms hash-table have already been flushed into the database by fts5SyncMethod().
The contents of the returned hash is implementation defined.
The contents of the returned hash is implementation specific and may change in the future.
The contents of the returned value are implementation specific.
The contents of this array are generated by parsing the CaseFolding.txt file distributed as part of the "Unicode Character Database".
The contents of this field should be non-sensitive data which will be added to the ciphertext to generate the authentication tag which validates the contents of the ciphertext.
The context and API objects passed to the callback  function may be used to access the properties of each matched row.
The context consists of a list of tables (the pSrcList) field and a list of named expression (pEList).
The context function, used when tracing back C calls into Go.
The contiguous array of leaf nodes starts at the first block allocated.
The controlling WhereLoop object
The conversion fraction
The conversion is done in-place.
The converted result is quoted as "...".
The cookie changes its value whenever the database schema changes.
The cookie mask contains one bit for each database file open.
The copies can be deleted (by being passed to their respective ...Delete() routines) without effecting the originals.
The copy of the Table structure is deleted by tokenize.c  after parsing is finished.
The copy operation of step (3) requires additional temporary disk space approximately equal to the size of the original database for the rollback journal.
The copyswap functions shouldn't need that.
The core of the MD5 algorithm, this alters an existing MD5 hash to reflect the addition of 16 longwords of new data.
The correct "ANSI" way to do this is to use the intptr_t type.
The correct SQL-92 behavior is for the LIKE operator to ignore case.
The correct URI for that UNC has only two or four leading / characters file://host/path or file:////host/path.
The corresponding index type is just HAS_FANCY.
The corresponding left and right singular vector matrices are in explicit form.
The corresponding right singular vector matrices are in explicit form.
The corresponding value should be an integer or an array which have one or two integers: same as cur_limit and max_limit arguments for Process.setrlimit.
The corresponding value should be true, zero, a positive integer, or nil.
The corruption will be detected and reported later in this procedure so there is no need to act upon it now.
The cost of DESTROY is O(N).
The cost of a TEST using the same batch number is O(logN).
The cost of an INSERT is roughly constant.
The cost of the first SMALLEST is O(NlogN).
The cost of visiting the index rows is N*K, where K is between 1.1 and 3.0, depending on the relative sizes of the index and table rows.
The cost will be 3x the number of lookups.
The count is already in characters, but we need to skip over a multibyte character in UTF8 mode.
The count part of the header will be the total number of codes that have numbers.
The counter is set to zero each time a  database transaction is opened.
The coverage testing points are line numbers in the sqlite3.c source file.
The createFlags should be 0 to check for existing pages and should be 3 (not 1, but 3) to try to create a new page.
The cross dimension is the max of the elements dimension since there can only be one element in that cross dimension.
The ctype.h header is needed for non-ASCII systems.
The ctypes array contains only 256 values.
The current SQL statement
The current candidate is no better than any of the mxChoice paths currently in the best-so-far buffer.
The current change-counter cookie value in the  target db file.
The current code allows for fixed one- or two-byte sequences, plus "any" and "anycrlf".
The current column index in pp1
The current column index in pp2
The current continuation level reverts to the level of the one we're seeing.
The current cursor  (pCursor) is used to execute the query issued by function  fts5CursorFirstSorted() above.
The current doclist-index page is full.
The current flexible dtypes include NPY_STRING, NPY_UNICODE, NPY_VOID, and NPY_DATETIME with generic units.
The current implementation interprets "LIMIT 0" to mean no rows.
The current language id is stored in variable iPrevLangid.
The current leaf node is full.
The current owner of a file may change the file's group to any group to which the owner belongs.
The current piece of subject
The current position in each one
The current reference may be to an existing named group with a different number (so apparently not recursive) but which later on is also attached to a group with the current number.
The current term of the first nMerge entries in the array of Fts3SegReader objects is the same.
The current thread will continue to use this snapshot.
The current token did not end with e.g. a "."
The current token is no valid hexadecimal digit
The current value for the constraint is left in a register, the index of which is returned.
The current value for the constraint is left in register iReg.
The current values for a and b will be stored in consecutive registers and the index of the first register is returned.
The currently executing frame is stored in Vdbe.pFrame.
The cursor "p" has a pending seek operation that has not yet been carried out.
The cursor can be either for reading or writing.
The cursor can seek to a BTree entry with a particular key, or loop over all entries of the Btree.
The cursor for a virtual table
The cursor for the object that contains the complete data (normally the table itself, but the PRIMARY KEY index in the case of a WITHOUT ROWID table) is returned in *piDataCur.
The cursor is always opened read/write even if  the main database is read-only.
The cursor is left open after returning.
The cursor is left pointing at a arbitrary location.
The cursor is left pointing at a random location.
The cursor is used only to define what table the record should be inserted into.
The cursor might point to an entry that comes before or after the key.
The cursor must be invalidated.
The cursor must have been opened by a prior call to porterOpen().
The cursor must have been opened by a prior call to simpleOpen().
The cursor number for the Distinct table must be exactly one greater than Queue in order for the SRT_DistFifo and SRT_DistQueue destinations to work.
The cursor number for the corresponding table
The cursor number of the table
The cursor on the LHS of the term
The cursor pointing to the table
The cursor position is saved in variables BtCursor.pKey and BtCursor.nKey.
The cursor structure of the backend
The cursor to be moved
The cursor to compare against
The cursor used for this query
The cursor will be left pointing at either the next or the previous record in the table.
The cursor's state is set to CURSOR_REQUIRESEEK.
The data associated with each hash-table entry is a structure containing a subset of the initial values that the modified row contained at the start of the session.
The data for the record immediately follows this header
The data is *not* copied.
The data is a list of varints.
The data is currently in the process of being written, wait until it actually is ready to be used before returning.
The data is distributed over two or more pages.
The data is the value MEM_Blob stored in register number P2.
The data might change or move the next time any btree routine is called.
The data of the new record
The data or key is taken from the entry that pCur is currently pointing to.
The data should be allocated with malloc()
The data that follows the key is in a similar, but not identical format to the doclist data stored in the database.
The data variable is saved across frames, so the byte map needs to be stored there.
The data was obtained from /dev/random.
The data_obj may be NULL if just a dtype is is known for the source.
The database being initialized
The database being vacuumed
The database cache and the schema associated with the database file are all contained within the BtShared object.
The database connection
The database connection (for malloc())
The database connection cannot see the internals of this structure and only deals with pointers to this structure.
The database connection holding this btree
The database connection must not have been closed.
The database connection that owns this statement
The database connection whose status is desired
The database containing table being inserted into
The database containing the table to be locked
The database disk image is malformed
The database encoding
The database file is determined by P3.
The database file is locked
The database file must  already be opened on connection pDbFd.
The database file on disk has not been modified.
The database file to check
The database filename "zFilename"   is UTF-8 encoded.
The database has been modified
The database index number
The database may not be read or written.
The database of pDest
The database on which the SQL executes
The database opened by the first argument is an auto-vacuum database nOrig pages in size containing nFree free pages.
The database page the PENDING_BYTE occupies.
The database schema changed
The database size is known in this state.
The database size is not available from the WAL sub-system if the log file is empty or contains no valid committed transactions.
The database size was written into the offset 28 of the header when the transaction started, so we know that the value at offset 28 is nonzero.
The database structure
The database the table is being created in
The database to store the trigger in
The database we are looking in
The datatype of the return value is BLOB, but it is really just a pointer to the Stat4Accum object.
The datatype used to store estimates of the number of rows in a table or index.  This is an unsigned integer type.
The datatype ynVar is a signed integer, either 16-bit or 32-bit.
The date is assumed to be valid.
The date this ruby was released
The dates and times are stored as the number of days since noon in Greenwich on November 24, 4714 B.C.
The day count denotes the absolute position of a temporal dimension.
The day count is virtually the astronomical Julian day number.
The day of calendar reform denotes the start day of the new style.
The day of year should be a negative or a positive number (as a relative day from the end of year when negative).
The days in the year before the first week are in the last week of the previous year.
The days in the year before the first week are in week 0.
The db parameter is optional.
The db pointer is used as a memory context for any subsequent allocations that need to occur.
The dbOrigSize and dbFileSize variables may not be trusted at this point.
The dbSize variable may be trusted (even if a user-level read  transaction is not active).
The dbSize, dbOrigSize and dbFileSize variables are all valid.
The dbSize, dbOrigSize and dbFileSize variables may not be trusted.
The dbstat virtual table is used to extract low-level formatting information from an SQLite database in order to implement the "sqlite3_analyzer" utility.
The deQuote parameter is ignored if pToken is NULL or if the token does not appear to be quoted.
The debugger uses a task-level exception handler to intercept signals.
The decimal point will not be in the current locale, it will always be '.'
The declaration type for a ROWID field is INTEGER.
The declaration type is the exact datatype definition extracted from the original CREATE TABLE statement if the expression is a column.
The decode method allows parsing arbitrary BER-/DER-encoded data to a Ruby object that can then be modified and re-encoded at will.
The default MMAP_SIZE is zero on all platforms.
The default SQLite sqlite3_vfs implementations do not allocate memory (actually, os_unix.c allocates a small amount of memory from within OsOpen()), but some third-party implementations may.
The default collating sequence (BINARY)
The default completion is used if +proc+ is nil.
The default configuration is limited to 512 stdio files
The default configuration is recommended for most applications and so this routine is usually not necessary.
The default configuration is to use memory allocation routines in this file.
The default external encoding is initialized by the locale or -E option.
The default format looks like  0.xxxxEnn.
The default implementation uses Posix Advisory Locks.
The default initial allocation for the pagecache when using separate pagecaches for each database connection.
The default is +false+.
The default is 64 bits, hence SQLite is only able to process joins with 64 or fewer tables.
The default is SQLITE_DEFAULT_FILE_PERMISSIONS (normally 0644) as modified by the system umask.
The default is a space (" ").
The default is size_t.
The default is the value of Readline.basic_word_break_characters.
The default is this mode.
The default is to limit the maximum cell size so that at least 4 cells will fit on one page.
The default is to raise the Encoding::UndefinedConversionError.
The default locale is WIN32OLE::LOCALE_SYSTEM_DEFAULT.
The default location of PENDING_BYTE is the first byte past the 1GB boundary.
The default memory level for allocating zlib deflate compression state.
The default number of frames to accumulate in the log file before checkpointing the database in WAL mode.
The default object type for name entries.
The default object type template for name entries.
The default page size and offset
The default page size is the maximum of:  + SQLITE_DEFAULT_PAGE_SIZE, + The value returned by sqlite3OsSectorSize() + The largest page size that can be written atomically.
The default relocation type for this operand.
The default setting of the auth function is NULL.
The default size of a database page.
The default size of a disk sector
The default socket location is sometimes defined by configure.
The default strategy is to create an ephemeral table that contains for each row to be changed:  (A)  The original rowid of that row.
The default value for the auto-vacuum property is  determined by the SQLITE_DEFAULT_AUTOVACUUM macro.
The default value for the second argument to matchinfo().
The default value is 8.
The default value is PDO_PARAM_STR
The default value is either the integer 0, the floating point number 0.0, or a NULL pointer.
The default value is the full path to the archive.
The default value is zero(equals to UTC).
The default value may be changed by compiling with the SQLITE_USE_URI symbol defined.
The default value of a column is specified by a DEFAULT clause in the  column definition.
The default value, +:float_second+, is also same as +Process.clock_gettime+.
The default value, nil, causes the process to remain in the same process group.
The default xmlrpc vocab (xml_to_xmlrpc.c), and simple-rpc (xml_to_dandarpc.c) which is proprietary, but imho more readable, and nice for proprietary legacy reasons.
The defined method has no tricks.
The definition of "at or after" depends on whether this iterator iterates in ascending or descending rowid order.
The definition of the module
The definition of this CTE
The deflated eigenvalues and their corresponding vectors go back into the last N - K slots of D and Q respectively.
The deflated singular values and their corresponding vectors go into the back of D, U, and V respectively.
The deflated singular values go back into the last N - K slots of D.
The delay increases linearly with each retry.
The delta string should be null-terminated.
The delta_output_size() routine will determine this size for you.
The dependency table is made of 2 hashtables, one that is used to quickly answer if a dependency exists.
The description for the error code set by the last call of #verify.
The description of the operands.
The descriptor will be initialized in a thread, so we have to give a chance to get opened.
The deserialized value is returned.
The desired encoding for the collating sequence
The destination copy of iPage needs to be updated with the new data before the backup operation is complete.
The destination database handle is not locked in this routine, but it is locked in sqlite3_backup_step().
The destination object is made permanent so that multiple JPEG images can be written to the same file without re-executing jpeg_stdio_dest.
The destructor X in  sqlite3_set_auxdata(C,N,P,X) might be called immediately, before the sqlite3_set_auxdata() interface even returns.
The details are unknown, but the lengths of the months were adjusted until they finally stablized in 8 A.D.
The details of the operation codes, their meanings, the parameters they take, and what they do are all subject to change without notice.
The diff hook implementations.
The difference between 1 and the smallest double-precision floating point number greater than 1.
The difference between VSPACE and ANYNL is that the latter can match the two-character CRLF sequence, but that is not relevant for finding the first character, so their code here is identical.
The difference between this function and pager_write() is that this function also deals with the special case where 2 or more pages fit on a single disk sector.
The difference between this function and sqlite3VdbeDelete() is that VdbeDelete() also unlinks the Vdbe from the list of VMs associated with the database connection and frees the object itself.
The difference between this routine and sqlite3PagerGet() is that _get() will go to the disk and read in the page if the page is not already in cache.
The difference is behavior with waiting enqueuing threads.
The difference is important when using a pointer to the function.
The difference is only important to the update hook.
The difference is that if a malloc() fails in sqlite3_create_function(), an error code is returned and the mallocFailed flag cleared.
The difference is that the update-hook is not invoked for rows removed by REPLACE, but the  pre-update-hook is.
The differences are in the way that file locking is done.
The differences are: If the byte buffer is not empty, read from the byte buffer instead of "sysread for buffered IO (IOError)".
The differences between the new and the old syntaxes are:  a) The new syntax supports parenthesis.
The different query plans.
The different uses might require different sized allocations.
The dimension must be at least N.
The dimensions which get passed to the inner loop
The direct assignment in the previous line is possible only because the WO_ and SQLITE_INDEX_CONSTRAINT_ codes are identical.
The directory file descriptor is used for only one thing - to fsync() a directory to make sure file creation and deletion events are flushed to disk.
The dirent struct is compatible with Unix, except that d_ino is always 1 and d_off is made up as we go along.
The dispatcher for token fetchers.
The dist tool enables this by build flag when testing.
The distinctive characteristic of this sqlite3_file is that the actual on disk file is created lazily.
The diurnal arc, hours
The divide and conquer algorithm makes very mild assumptions about floating point arithmetic.
The divider cell consists of a 4-byte page number (the page number of pPage) and a variable length key value (which must be the same value as the largest key on pPage).
The divider cells have already been removed from pParent.
The doNotSpill NOSYNC bit is set during times when doing a sync of journal (and adding a new header) is not allowed.
The doNotSpill ROLLBACK and OFF bits inhibits all cache spilling regardless of whether or not a sync is required.
The doc states it'll be always true, however it theoretically could be FALSE when the thread was signaled.
The docid to be deleted
The doclist may or may not finish within the buffer.
The doclists must be merged and a single term returned with the merged doclist.
The documentation for connect() says in case of non-blocking connections the select function reports success in the writefds set and failure in the exceptfds set.
The documentation says this should produce a copy, so we skip this method if writeable is true, because the intent of writeable is to modify the operand.
The double-precision datatype used by RTree depends on the SQLITE_RTREE_INT_ONLY compile-time option.
The dtype of the destination is used when converting from the pyobject, so that for example a tuple gets recognized as a struct scalar of the required type.
The dtype repr function specifically for structured arrays.
The dummy will be overwritten later.
The dupedExpr*Size() routines each return the number of bytes required to store a copy of an expression or expression tree.
The duplicates that this creates do not  cause any problems.
The dynamic mutexes must not be in use when they are deallocated.
The eMode parameter is always valid
The eOp argument is interpreted as follows:  0: The operation is a read.
The eStmt parameter passed to this function must match that passed to the sqlite3Fts5StorageStmt() call.
The early check means that subsequent code can assume it is dealing with a valid string.
The easiest way to enforce this limit is to consider only records with 13 fields or less.
The effect depends on the platform and the running environment.
The effective rank of A is determined by treating as zero those singular values which are less than RCOND times the largest singular value.
The eigenvalues/vectors which were not deflated go into the first K slots of DLAMDA and Q2 respectively, while those which were deflated go into the last N - K slots.
The eigenvectors for the current problem are multiplied with the eigenvectors from the overall problem.
The eigenvectors of a full or band complex Hermitian matrix can also be found if CHETRD or CHPTRD or CHBTRD has been used to reduce this matrix to tridiagonal form.
The eigenvectors of a full or band complex Hermitian matrix can also be found if ZHETRD or ZHPTRD or ZHBTRD has been used to reduce this matrix to tridiagonal form.
The eigenvectors of a full or band real symmetric matrix can also be found if DSYTRD or DSPTRD or DSBTRD has been used to reduce this matrix to tridiagonal form.
The eigenvectors of a full or band real symmetric matrix can also be found if SSYTRD or SSPTRD or SSBTRD has been used to reduce this matrix to tridiagonal form.
The eigenvectors of a full or band symmetric matrix can also be found if DSYTRD or DSPTRD or DSBTRD has been used to reduce this matrix to tridiagonal form.
The eigenvectors of a full or band symmetric matrix can also be found if SSYTRD or SSPTRD or SSBTRD has been used to reduce this matrix to tridiagonal form.
The eigenvectors of the original matrix are stored in Q, and the eigenvalues are in D.
The element is OLE method of WIN32OLE object.
The element of the array is property (gettable) of WIN32OLE object.
The element of the array is property (settable) of WIN32OLE object.
The element that matches key
The element that matches key (if any)
The element to be inserted
The element to be removed from the pH
The elements are chosen by using random and unique indices into the array in order to ensure that an element doesn't repeat itself unless the array already contained duplicate elements.
The elements of this array are read-only after initialization is complete.
The empty list Make sure db connection is made If not then return empty list
The enclosing #if guarantees at least one of these methods is currently enabled.
The encoding is given by enc.
The encoding of the concatenated string will be returned if they are compatible, nil if they are not.
The encoding of the resulted string keeps original encoding.
The encrypted string output can be decrypted using #private_decrypt.
The encrypted string output can be decrypted using #public_decrypt.
The end of a position list is marked by a zero encoded as an FTS3  varint.
The end of each child journal file is marked with a  nul-terminator byte (0x00).
The end of such a stream of chunks is indicated by sending a EOC (End of Content) tag.
The end of these brackets will always be OP_KETRPOS, which returns MATCH_KETRPOS without going further in the pattern.
The end position of the copy is the end of file.
The endian- specific implementations are much faster and are preferred if the processor endianness is known at compile-time.
The ends of chunks are defined by _pattern_ and the block.
The engine or interpreter this ruby uses.
The entire doclist will fit on the current leaf.
The entire doclist will not fit on this leaf.
The entire output segment fits on a single node.
The entire poslist will fit on the current leaf.
The entire poslist will not fit on this leaf.
The entire segment is stored in the root node.
The entire tree fits on the root node.
The entry corresponding to the new right-child pointer of the root page is also updated.
The entry from absolute  level :1 with index value :2.
The entry in the union for base tokens is called "yy0".
The entry in the union for terminal symbols is called "fts5yy0".
The entry in the union for terminal symbols is called "yy0".
The entry into which pNew is inserted
The entry is unique if (1) any column is NULL or (2) the next entry has a different key
The entry point is zProc.
The enum value for this mnemonic.
The environment variable doesn't exist.
The ephemeral database might be exclusively in memory, or it might use a disk-based memory cache.
The ephemeral table is deleted automatically when the cursor is closed.
The epoch (first day of the first year) is 22 September 1792 in the Gregorian calendar.
The eqSeen field will indicate whether or not an exact match exists in the b-tree.
The equality cases are as follows: - If either value is NaN, never equal.
The equivalent instruction for indices is OP_IdxInsert.
The equivalent instruction for tables is OP_Insert.
The error at a given pixel is propagated to its not-yet-processed neighbors using the standard F-S fractions, ...
The error code and message may be collected when sqlite3rbu_close() is called.
The error code in the range 0x10400-0x104ff are reserved for IDNA related error codes
The error code is set to "err_code".
The error code range 0x10000 0x10100 are reserved for Transliterator
The error code range 0x10100 0x10200 are reserved for formatting API parsing error
The error code range 0x10200 0x102ff are reserved for Break Iterator related error
The error code set by the last call of #verify.
The error codes in the range 0x10300-0x103ff are reserved for regular expression related errrs
The error context into which to write the error
The error has already been written into the pDestDb  handle.
The error has already been written into the pDestDb handle.
The error has left the cache in an inconsistent state.
The error is stored in the pParse structure.
The error may not be safe to handle in user-space
The error message from the SQL compiler has already been loaded  into the database handle.
The error stack is NOT cleared after this call.
The error stack is cleared after imap_errors() is called.
The error texts are now all in one long string, to save on relocations.
The error will be caught and reported later.
The error_code is cleared, otherwise the caller will read the last error message from the driver.
The errors available on the current platform are subclasses of SystemCallError and are defined in the Errno module.
The escape character string must consist of a single UTF-8 character.
The escape coded a single character
The estimate is conservative.
The estimate is scaled so that the size of an integer is 1.
The estimated values (nRow, nVisit, nSeek) often contain a large amount of uncertainty.
The exact library used depends on how Ruby was compiled.
The exact minimum amount of workspace needed depends on M, N and NRHS.
The exact size of the output buffer is also passed as a parameter to both  methods.
The examples below demonstrate the difference.
The exception is for applications that also use zipvfs.
The exception is if the rowid for the current entry  is the last thing on the leaf page.
The exception is if the statement being parsed was passed to an sqlite3_declare_vtab() call.
The exception is if the tokenizer supports  synonyms.
The exception is if this is the first term written in an incremental-merge step.
The exception is when opening the proxy "conch" file in builds that include the special Apple locking styles.
The exception is when the database file is unlocked as the pager moves from ERROR to OPEN state.
The exception seems to be systems that are configured to use 64KB pages - in this case each mapping must cover at least two shm regions.
The exceptional characters are: U+061C           Arabic Letter Mark U+180E           Mongolian Vowel Separator U+2066 - U+2069  Various "isolate"s
The exceptional ones forgo this.
The exceptions defined in this paragraph might change in a future release of SQLite.
The execSqlF() routine does the same thing, except it accepts a format string as its third argument
The existence of a lock directory implies an EXCLUSIVE lock.
The existence of the to-table is not checked.
The expected number of collisions  prior to finding a match is 1.
The expired flag was set on the VDBE before the first call to sqlite3_step().
The exposed C-API was insufficient because I needed to replace the pointer and it wouldn't let me with a destructor set (even though it works fine with the destructor).
The expression "A glob B" is equivalent to  "glob(B,A).
The expression has not been name resolved.
The expression is a column.
The expression is a sub-select.
The expression is implemented using an OP_Param opcode.
The expression is the default value for the most recently added column of the table currently under construction.
The expression is true if the LHS is contained within the RHS.
The expression list to be analyzed.
The expression list to be coded
The expression list, ID, and source lists return by sqlite3ExprListDup(), sqlite3IdListDup(), and sqlite3SrcListDup() can not be further expanded  by subsequent calls to sqlite*ListAppend() routines.
The expression mask set
The expression may actually be of the form (x, y) IN (SELECT...).
The expression object indicated by the second argument is guaranteed to be a scalar SQL function.
The expression object used by each such virtual term is pExpr (the full vector IN(...)  expression).
The expression of the term
The expression pExpr passed as the second argument to this function must be of type FTSQUERY_PHRASE.
The expression parse tree
The expression that defines the start bound
The expression that is the result column name
The expression to be analyzed
The expression to be analyzed.
The expression to be fixed to one database
The expression to check authorization on
The expression to code when the VDBE initializes
The expression to evaluate
The expression to extract a value from
The extension may be created from +asn1+ data or from an extension +name+ and +value+.
The external encoding is the encoding of the text as stored in a file.
The extra column whose name is the same as the table.
The extra data appended to a page is always initialized to zeros the  first time a page is loaded into memory.
The extra flags to use in calls to the Win32 heap APIs.
The extra op is now either allocated, can be allocated by NpyIter (no subspace) or is not used at all.
The extra pAppData, if any.
The extra release would affect badly the free_stack(2) above.
The factorization has been completed, but the factor U is exactly singular, and division by zero will occur if it is used to solve a system of equations.
The factorization has been completed, but the factor U is exactly singular, so the solution could not be computed.
The fallback allows us to proper support  Vista/7/Server 2003 R2/Server 2008/Server 2008 R2.
The fcntl() system call is only invoked to set a  POSIX lock if the internal lock structure transitions between a locked and an unlocked state.
The feasible/infeasible decision result is retained.
The few cases that require local variables are broken out into a separate routine so that in most cases the overhead of moving the stack pointer is avoided.
The fg and bg colors must already be in the color table for palette images.
The fiber is executed in the same thread, so the thread local values are available.
The fiber which receives the transfer call is treats it much like a resume call.
The field width is "width".
The fields of the result
The fields that follow, down to the beginning of the recursive section, do not need to be initialized as they will be set before being used.
The fields under **Inputs** are the inputs to xBestIndex and are read-only.
The file I/O methods to use.
The file behaves like a regular file, and so can be modified, truncated, memory-mapped, and so on.
The file can be a directory.
The file change counter is incremented when the database is changed This counter allows other processes to know when the file has changed and thus when they need to flush their cache.
The file contains at most 1 b-tree
The file descriptor for pFile
The file descriptor for the journal file
The file descriptor to be filled in
The file header points to the first in a linked list of trunk page.
The file is compiled on its own as part of the PCRE library.
The file is empty (length 0 bytes)
The file is guaranteed to be nByte bytes or smaller in size.
The file mbfilter.c is included in this package .
The file must be opened for writing.
The file suffix added to the data base filename in order to create the lock directory.
The file used to implement shared-memory is in the same directory as the open database file and has the same name as the open database file with the "-shm" suffix added.
The file-handle passed as the only argument is guaranteed to be an open file.
The file-handle passed as the only argument is open on a journal file.
The file:// wrapper may have been disabled/overridden
The files named on the command line are concatenated and treated as a single file by this method, so when called without arguments the contents of this pseudo file are returned in their entirety.
The final "next" in the list is always a value, not a next pointer.
The final P4 fields of both the P3 and sorter record are ignored.
The final WHEN clause will be like this:  WHEN NOT(old.col1 IS new.col1 AND ...
The final argument is an output variable.
The final directory separator character has already added if it was not already present.
The final number of dimensions
The final parameter, xDel, must be one of SQLITE_DYNAMIC, SQLITE_STATIC or SQLITE_TRANSIENT.
The final permutation is the inverse of IP - no table is necessary
The final result will be added to the first context.
The final stage consists of computing the updated eigenvectors directly using the updated eigenvalues.
The final stage consists of computing the updated singular vectors directly using the updated singular values.
The final state of buffer pBuf is undefined in this case.
The final value of *pazDequote is undefined in this case.
The final value of *pbOk is undefined in this case.
The final value of *pbRes is undefined in this case.
The final value of *pnByte is undefined in this case.
The final value of *pp is undefined in this case.
The final value of *ppVal is undefined in this case.
The final value of piIdx is undefined in this case.
The final value of pp is undefined in this case.
The finder-function returns a pointer to the sqlite_io_methods object that implements the desired locking behaviors.
The first  word of the document has a position of 0.
The first (stack variable cksum2) based on entries extracted from the full-text index while doing a linear scan of each individual index in turn.
The first (void *) actually points to a function of type (int (*)(void *)).
The first 100 bytes of the first page contain a special header (the "file header") that describes the file.
The first 4 of these 16 bytes are a 32-bit counter that is incremented with each change.
The first 59 days of the year are the same regardless of the length of the year.
The first 8 bytes are  a header that is not returned to the user.
The first 8 memory cells are used for the result set.
The first K elements of Z(1, I) contain the components of the deflation-adjusted updating row vector for subproblems on the I-th level.
The first M pointers point to zero-terminated strings that  contain the names of the columns.
The first OP_Column against a pseudo-table after the value of the content register has changed should have this bit set.
The first allocated page becomes a new pointer-map page, the second is used by the caller.
The first and the last character of a label must be alphanumeric
The first argument is 1 + max(fd1, fd2, ..., fdn) because reasons
The first argument is WIN32OLE object or type library name.
The first argument is a file-handle open on a temporary file.
The first argument is a pointer to a Pager object (cast as a void*).
The first argument is a pointer to a structure obtained from "sqlite3Fts5ParserAlloc" which describes the current state of the parser.
The first argument is a pointer to a structure obtained from "sqlite3ParserAlloc" which describes the current state of the parser.
The first argument is a pointer to the pager structure, the second  the error-code about to be returned by a pager API function.
The first argument is an integer which is 0 to disable FK enforcement, positive to enable FK enforcement or negative to leave FK enforcement unchanged.
The first argument is an integer which is 0 to disable fts3_tokenizer() or positive to enable fts3_tokenizer() or negative to leave the setting unchanged.
The first argument is an integer which is 0 to disable triggers, positive to enable triggers or negative to leave the setting unchanged.
The first argument is struct name (String or Symbol).
The first argument is the name of a table - the name of a table in the RBU database.
The first argument is the prepared statement object to be interrogated.
The first argument is the text of a CREATE TABLE or CREATE INDEX command.
The first argument is the text of a CREATE TRIGGER  statement.
The first argument must be a nul-terminated string.
The first argument must be a pointer to an 8-byte aligned buffer of at least sz*N bytes of memory.
The first argument passed to an unlock-notify callback is a pointer to an array of void* pointers, and the second is the number of entries in the array.
The first argument passed to the macro should be the error code that will be returned to SQLite (e.g. SQLITE_IOERR_DELETE, SQLITE_CANTOPEN).
The first argument passed to this function is a pointer to an Fts5Tokenizer object returned by an earlier call to xCreate().
The first argument passed to this function is a serial-type that corresponds to an integer - all values between 1 and 9 inclusive  except 7.
The first argument passed to this function must be a valid, open, RBU handle.
The first argument points to a nul-terminated string containing a list of space separated integers.
The first argument server specifies OLE Automation server.
The first argument should be Array object which specifies dimensions and each size of dimensions of OLE array.
The first argument should be CLSID or PROGID.
The first argument should be a pointer to a function of type void(*)(void*,sqlite3*,const char*, int).
The first argument should point to an allocation of at least sz*N bytes of memory.
The first argument specifies Ruby object to convert OLE variant variable.
The first argument specifies WIN32OLE object.
The first argument specifies the method name of OLE Automation object.
The first argument to each is the number of usable bytes on each page of the database (often 1024).
The first argument to it should be a copy of the pointer passed as the second argument to xTokenize().
The first argument to the auth function is a copy of the 3rd argument to this routine.
The first argument to the function is the pattern and the second argument is the string.
The first argument, pCur, is a cursor opened on some b-tree.
The first block has format u.hdr.
The first char may be unset for an unanchored pattern, of course.
The first character of the string pointed to by argument z is guaranteed to be an open-quote character (see function fts5_isopenquote()).
The first choice is the normal fsync().
The first column is in this register
The first column of U and the row of VT are treated separately, however.
The first comparison in the vector can be optimized using column nEq of the index. This function returns the total number of vector elements that can be used as part of the range comparison.
The first cursor that needs saving
The first dim-1 coordinates are the coordinates of the first input point.
The first dimensions size is 3, and the second is 4.
The first docid written to the output is therefore encoded using the  same number of bytes as it is in whichever of the input lists it is read from.
The first element in the list is the most recently opened savepoint.
The first element is nil.
The first element of an INTARRAY is always the count of the number of elements to follow
The first element of the array
The first element of the array is the index of the child table column that is mapped by the FK constraint to the parent table column stored in the left-most column of index *ppIdx.
The first element of the linked list is the first step of the trigger-program.
The first element of the results, _mesg_, is the data received.
The first entry in the  first index-block contains the database page number corresponding to the first frame in the WAL file.
The first entry in the second index block in the WAL file corresponds to the (HASHTABLE_NPAGE_ONE+1)th frame in the log, and so on.
The first entry is used to cache the RtreeNode for RtreeCursor.sPoint.
The first entry that equals P corresponds to the frame holding the content for that page.
The first few calls to sqlite3OsSleep() have a delay of 1 microsecond.
The first few word digits of r and b is the same and
The first fields of the two keys are equal and there are no trailing fields.
The first fields of the two keys are equal.
The first form is used if argument bUseTmp is  false, or the second form if it is true.
The first four bytes contain the length of the key
The first four parameters are interpreted in the same way as the first 4 parameters to FUNCTION().
The first in an array of registers (see above)
The first index block contains information on HASHTABLE_NPAGE_ONE frames.
The first index cursor is returned in *piIdxCur.
The first instance is sufficient, though the subroutine to manifest the view does need to be invoked again.
The first integer in nLt contains the number of entries in the index where the left-most column is less than the left-most column of the sample.
The first integer in the P4 integer array is the length of the array and does not become part of the permutation.
The first integer is the approximate number of entries in the index whose left-most column exactly matches the left-most column of the sample.
The first invocation, to obtain permission to INSERT a row into the sqlite_master table, has already been made by sqlite3StartTable().
The first is "Sunday".
The first is a regular expression pattern to compile the second is a string to match against that pattern.
The first is an array of non-negative integers The second, if present, is an array of weights, which must be promotable to double.
The first is the blob to patch and the second the patch to apply.
The first is the collation sequence preferred for UTF-8, the second UTF-16le, and the third UTF-16be.
The first is the collation sequence prefferred for UTF-8, the second UTF-16le, and the third UTF-16be.
The first iteration of this loop determines a reflection G from the vector V and applies it from left and right to H, thus creating a nonzero bulge below the subdiagonal.
The first key should be at 257.
The first key should be at 258.
The first kk columns are handled by the block method.
The first kk rows are handled by the block method.
The first leaf becomes a trunk page in this case.
The first letter of Ruby's constant variable name is upper case, so constant variable name of WIN32OLE object is capitalized.
The first list index given out is always 1.
The first loop just checks to see if there are any "*" operators that need expanding.
The first matching command is returned as an OUT parameter.
The first metonic cycle starts with Jewish year 1, or 3761/60 B.C.
The first min(m,n) columns of U and V are the left and right singular vectors of A.
The first nOBSat columns of the previous row
The first node of the scan
The first nop strides are for the inner loop (but only can copy them after removing the core axes
The first of the while(...) loops below skips over the record-length field.
The first one has to be handled carefully because it's the original copy, which has to be moved up.
The first op2_len bytes of result will still be the same.
The first page in a file is called page 1.
The first page is always a btree page.
The first page is called page 1, the second is page 2, and so forth.
The first page of each chunk is reseved for chunk header.
The first page of the wal-index must be mapped at this point.
The first parameter (pDef) is a function implementation.
The first parameter is a pointer to an output buffer.
The first parameter is a signal name (a string such as ``SIGALRM'', ``SIGUSR1'', and so on) or a signal number.
The first parameter is the CLI startup filename, which defaults to "index.php".
The first parameter passed to each call is a copy of the pOut pointer supplied by the application.
The first parameter, pTokenizer, is passed the fts3 tokenizer module to use to normalize query tokens while parsing the expression.
The first part does the start of the WHERE loop and the second half does the tail of the WHERE loop.
The first pass finds the items whose min/max constraints trigger, freezes them at those sizes, and excludes those sizes from the remaining space.
The first pass makes the basic connectivity decisions.
The first pass, in the block below, uses a tokenizer cursor to iterate through the tokens in the expression.
The first pass, m always is 0, so no_read becomes 1 in the first pass.
The first pointer (the memory pointer) must be aligned to an 8-byte boundary or subsequent behavior of SQLite will be undefined.
The first prefix index (if any) for language-id 0 is allocated values 1024-2047.
The first process cannot proceed because it is blocked by the second and the second process cannot proceed because it is blocked by the first.
The first register (the one that regNewData points to) will contain the new rowid, or NULL in the case of a WITHOUT ROWID table.
The first slot is for the cursor number and the second is for the column number.
The first snippet candidate always starts at offset 0 (even if this candidate has a score of 0.0).
The first step is to get the stack status structure.
The first thread might call this routine recursively.
The first thread to call this routine runs the initialization to completion.
The first three must be alpha, lower, upper, as this is assumed for handling case independence.
The first time a column affinity string for a particular index is required, it is allocated and populated here.
The first time the bm25() function is called for a query, an instance of the following structure is allocated and populated.
The first time this is called on a shared-btree, nBytes bytes of memory are allocated, zeroed, and returned to the caller.
The first time unixSync() is called the directory file descriptor will be fsync()ed and close()d.
The first to decrement to 0 does actual shutdown  (which should be the last to shutdown.)
The first to decrement to 0 does actual shutdown (which should be the last to shutdown.)
The first to increment to 1 does actual initialization
The first two arguments are a pointer to and the size of a segment b-tree node.
The first two asserts below verify this (that the method has already been called).
The first two entries in each row are Unicode general categories, and apply always, because all the characters they include are part of the PCRE character set.
The first two fields of this cell are the  record-length (a variable length integer at most 32-bits in size) and the key value (a variable length integer, may have any value).
The first two type should be equivalent.
The first two word digits is not the same,
The first two word digits is the same
The first value is the current number of significant digits in the BigDecimal.
The first value is the number of rows in the index. Then, for each column from left to right, the total number of tokens in the column for all rows of the table.
The first value represents the sign of the BigDecimal, and is -1 or 1, or 0 if the BigDecimal is Not a Number.
The first varint (if it exists) contains the size of the position list for phrase 0.
The first varint is the number of documents currently stored in the table.
The first way is by using the class method ::stop, to put the current running thread to sleep and schedule the execution of another thread.
The first_char value is never set for an anchored regular expression, but the anchoring may be forced at run time, so we have to test for anchoring.
The fixer to be initialized
The flag NPY_OP_ITFLAG_USINGBUFFER can be ignored here
The flag USINGBUFFER is set when the buffer was used, so only copy back when this flag is on.
The flag USINGBUFFER is set when the buffer was used, so only decrement refs when this flag is on.
The flag is cleared as soon as the journal file is finalized (either by PagerCommitPhaseTwo or PagerRollback).
The flag is set for each column that is either a part of the PK or a part of an index. Or clear otherwise.
The flag is used for initial value of do_not_reverse_lookup for each socket.
The flag value can be either of:  EC::NAMED_CURVE EC::EXPLICIT_CURVE  See the OpenSSL documentation for EC_GROUP_set_asn1_flag().
The flag value is used to determine how to encode the group: encode explicit parameters or named curve using an OID.
The flags argument is used to specify properties that affect the operation of the pager.
The flags can be a string or an integer.
The flags define the format of this btree page.
The flags modifies the behavior of the formats.
The flags parameter contains a combination of the EXPRDUP_XXX flags.
The flags parameter to sqlite3BtreeCreateTable can be the bitwise OR of the flags shown below.
The flags parameter to sqlite3BtreeOpen can be the bitwise or of the following values.
The flags specified at open()
The flattened query is distinct if either the inner or the outer query is distinct.
The float won't be larger than 1e15 anyway.
The following  function returns a pointer to a buffer owned by SQLite that contains the name of the *-wal file this db connection will use.
The following  loop iterates through the poslists that make up the current  doclist.
The following "ifdef/elif/else/" block has the same structure as the one below.
The following #defines specify the range of bytes used for locking.
The following #includes are present because without them gcc 4.x may remove the array definition from the final binary if PCRE is built into a static library and dead code stripping is activated.
The following EBCDIC-to-ASCII table may relate more closely to reality, or at least to modern reality.
The following ETA is to approximate SIGMA_n - D( N )
The following TAU is DSIGMA * DSIGMA - D( 2 ) * D( 2 )
The following TAU is DSIGMA - D( 1 )
The following TAU is DSIGMA - D( 2 )
The following are acceptable forms for the input string:  YYYY-MM-DD HH:MM:SS.FFF  +/-HH:MM DDDD.DD  now  In the first form, the +/-HH:MM is always optional.
The following are allowed values for Vdbe.magic
The following are copied from sqliteInt.h.
The following are only used if the FTS5_SEGITER_REVERSE flag is set.
The following are special cases for mutex enter routines for use in single threaded applications that use shared cache.
The following are the meanings of bits in the Expr.flags field.
The following are the verbatim comments from the original code:  A C-program for MT19937, with initialization improved 2002/1/26.
The following are used as the second parameter to sqlite3Savepoint(), and as the P1 argument to the OP_Savepoint instruction.
The following are used by the fts3_eval.c module.
The following are used by the fts3_snippet.c module.
The following are used internally by the fts5_index.c module.
The following array holds FuncDef structures for all of the functions defined in this file.
The following array holds the names and pointers to all overrideable system calls.
The following array of hash tables is used to buffer pending index  updates during transactions.
The following assert statements check that the binary search code above found the right answer.
The following assert verifies that we do not.
The following asserts make sure that structures used by the btree are the right size.
The following asserts verify this fact.
The following block advances it to point one byte past the end of the same offset list.
The following block contains those class members that change during routine operation.
The following block contains those class members that change during routine opertion.
The following block derives the path to the associated database file from zPath.
The following block does just that.
The following block merges the two lists and writes the results to buffer p.
The following block moves pIter to point at the first byte past the end of the key value.
The following block of code checks early to see if a cell extends past the end of a page boundary and causes SQLITE_CORRUPT to be  returned if it does.
The following block runs if pExpr is the root of a NEAR query.
The following block sets the new values of Mem.z and Mem.xDel.
The following block stores the meta information that will be returned to the caller in local variables zDataType, zCollSeq, notnull, primarykey and autoinc.
The following block updates the change-counter.
The following blocks should probably assert in debug mode, but they are to cleanup in case any locks remained open
The following call releases any resources associated with such a value.
The following call to PagerSetPagesize() serves to set the value of  Pager.pageSize and to allocate the Pager.pTmpSpace buffer.
The following callback (if not NULL) is invoked on every VDBE branch operation.
The following calls to preupdate_new() and preupdate_old() can not fail.
The following code adds nothing to the actual functionality of the program.
The following code applies back the left singular vector factors.
The following code executes when a syntax error first occurs.
The following code executes when the parse fails
The following code implements the data-structure explaining logic for the Vdbe.
The following code is adopted from the PostgreSQL's ps_status(.h/.c).
The following code just has to locate the TK_ALL expressions and expand each one to the list of all columns in all tables.
The following code just has to locate the TK_ASTERISK expressions and expand each one to the list of all columns in all tables.
The following code modifies the sqlite_master table to reflect this.
The following code should catch this problem at compile-time.
The following comment and code was inserted in January 1999.
The following condition causes URIs with five leading / characters like file://///host/path to be converted into UNCs like //host/path.
The following constant maps TK_xx codes into corresponding  seek opcodes.
The following constant value is used by the SQLITE_BIGENDIAN and SQLITE_LITTLEENDIAN macros.
The following constants determine which.
The following could be done by calling fts5SegIterLoadNPos().
The following create 2 dimensions OLE array.
The following default should work okay.
The following defines are used in implementing this.
The following definition of Storeinc is appropriate for MIPS processors.
The following describes the syntax supported by the fts3 MATCH operator in a similar format to that used by the lemon parser generator.
The following example counts words for each initial letter.
The following example raises the soft limit of core size to the hard limit to try to make core dump possible.
The following example shows how the code generated for a capturing bracket with two alternatives.
The following examples illustrate this case:  1.
The following examples show flow collections:  1.
The following examples show how the tokens BLOCK-SEQUENCE-START, BLOCK-MAPPING-START, and BLOCK-END are emitted by the Scanner:  1.
The following exceptions are defined as subclasses of Zlib::Error.
The following fields are initialized when this object is created and are read-only thereafter:  unixShm.pFile unixShm.id  All other fields are read/write.
The following fields are initialized when this object is created and are read-only thereafter:  winShm.pShmNode winShm.id  All other fields are read/write.
The following fields are only available in 3.8.11 and later
The following fields are only for Encoding::Converter.
The following from FF's DBUG library, which is in the public domain
The following function deletes the "minor type" or semantic value associated with a symbol.
The following function deletes the value associated with a symbol.
The following function extracts information on the current change from a changeset iterator.
The following functions are used to register the module with SQLite.
The following global variable is incremented every time a cursor moves, either by the OP_SeekXX, OP_Next, or OP_Prev opcodes.
The following global variable is incremented whenever the library attempts to open a temporary file.
The following global variable is incremented whenever the transfer optimization is used.
The following global variables hold counters used for testing purposes only.
The following goto is an optimization.
The following group of routines make deep copies of expressions, expression lists, ID lists, and select statements.
The following illustrates a simplified example of such a key transport scheme.
The following info was obtained using OleView to export the IDL from mscorlib.tlb.
The following interfaces are provided.
The following is a summary:  1) The entries associated with new sibling pages that were not siblings when this function was called.
The following is accomplished:  VDBE Cursor numbers are assigned to all FROM-clause terms.
The following is executed when the parser accepts
The following is just a sanity check to make sure SQLite has been compiled correctly.
The following is just enough definition to be able to reach the _AppDomain::CreateInstance method that we need to use to be able to fire up .Net objects.
The following is the implementation of an SQL function that always fails with an error message stating that the function is used in the wrong context.
The following key values have special meaning: - +nil+ and +:_separator+ specifies that the elements should be dropped.
The following keys are supported:  :mode :: Same as +mode+ parameter  :flags :: Specifies file open flags as integer.
The following line deals with this case by advancing pIter past the zero-padding added by fts3EvalNearTrim().
The following line of code (and the "p++" below the while() loop) is normally all that is required to move pointer p to the desired  position.
The following loop checks that pTerm is the first such term in use, and sets nIn back to 0 if it is not.
The following loop is equivalent to this call to the LAPACK auxiliary routine: CALL CLASSQ( N, X, INCX, SCALE, SSQ )
The following loop is equivalent to this call to the LAPACK auxiliary routine: CALL DLASSQ( N, X, INCX, SCALE, SSQ )
The following loop is equivalent to this call to the LAPACK auxiliary routine: CALL SLASSQ( N, X, INCX, SCALE, SSQ )
The following loop is equivalent to this call to the LAPACK auxiliary routine: CALL ZLASSQ( N, X, INCX, SCALE, SSQ )
The following loop runs once for each term in a compound-subquery flattening (as described above).
The following macro can be used to disable tests that are always false except when SQLITE_TEST_REALLOC_STRESS is set.
The following macro converts a relative address in the p2 field of a VdbeOp structure into a negative number so that  sqlite3VdbeAddOpList() knows that the address is relative.
The following macro defines an initializer for an sqlite3_vfs object.
The following macro is therefore used to contain that setup code.
The following macro is used to suppress compiler warnings.
The following macro seems to provide the constant while making all compilers happy.
The following macros are used to cast pointers to integers and integers to pointers.
The following macros are used to suppress compiler warnings and to make it clear to human readers when a function parameter is deliberately  left unused within the body of a function.
The following macros are used to suppress compiler warnings and to make it clear to human readers when a function parameter is deliberately left unused within the body of a function.
The following macros define the the default file format for new databases and the maximum file format that the library can read.
The following macros mimic the standard library functions toupper(), isspace(), isalnum(), isdigit() and isxdigit(), respectively.
The following macros redefine the API routines so that they are redirected through the global sqlite3_api structure.
The following macros redefine the API routines so that they are redirected throught the global sqlite3_api structure.
The following macros take advantage this fact to provide a fast encode and decode of the integers in a record header.
The following modes must be used separately, and along with one or more of the modes seen above.
The following mutex is what serializes access to the appdef pcache xInit methods.
The following nCol varints contain the total amount of data stored in all rows of each column of the table, from left to right.
The following need to always initially be zero, however.
The following nonsense is only to avoid compiler warnings about "integer constant is unsigned in ANSI C, signed with -traditional".
The following object holds a copy of the wal-index header content.
The following object holds the list of automatically loaded extensions.
The following operations are also performed by this function.
The following parameters determine how many adjacent pages get involved in a balancing operation.
The following php_mt_...() functions are based on a C++ class MTRand by Richard J.
The following procedure is an attempt to make it work better.
The following routine destroys a virtual machine that is created by the sqlite3_compile() routine.
The following routine generates the code needed to do that.
The following routine implements the rough equivalent of localtime_r() using whatever operating-system specific localtime facility that is available.
The following routine is called if the stack overflows.
The following routine only works on pentium-class (or newer) processors.
The following routine suspends the current thread for at least ms milliseconds.
The following routines are convenience wrappers around methods of the sqlite3_file object.
The following routines are implementations of the MemPage.xCellSize method.
The following routines are implementations of the MemPage.xParseCell() method.
The following routines are substitutes for constants SQLITE_CORRUPT, SQLITE_MISUSE, SQLITE_CANTOPEN, SQLITE_NOMEM and possibly other error constants.
The following routines are subtitutes for constants SQLITE_CORRUPT, SQLITE_MISUSE, SQLITE_CANTOPEN, SQLITE_IOERR and possibly other error constants.
The following routines are the only publically visible identifiers in this file.
The following routines implement the various date and time functions of SQLite.
The following routines provide output for bcd numbers package using the rules of POSIX bc for output.
The following script, maxpow.rb, generates the tables follows.
The following set of routines are used to disable the simulated I/O error mechanism.
The following set of routines walk through the parse tree and assign a specific database to all table references where the database name was left unspecified in the original SQL statement.
The following singleton contains the global configuration for the SQLite library.
The following sqlite3VtabRollback() call will do so.
The following statement converts "sqlite3_autoindex..." into "sqlite3_butoindex..." in order to make the names distinct.
The following strings, "none", "full" and "incremental" are  acceptable, as are their numeric equivalents: 0, 1 and 2 respectively.
The following structure contains information used by the sqliteFix...
The following structure contains pointers to all SQLite API routines.
The following structure contains the information associated with a character set.
The following structure defines the vector of words returned by the STKSTAT library routine.
The following structure describes the FROM clause of a SELECT statement.
The following structure describes the data structure which trails any stack segment.
The following structure holds pointers to all of the SQLite API routines.
The following structure is the key data type for the recursive code generator.
The following structure keeps track of state information for the count() aggregate function.
The following structure represents a single element of the parser's stack.
The following symbolic values are used to record which type of action to take.
The following table (taken from the RFC) is used for decoding.
The following table contains information about every rule that is used during the reduce.
The following table describes the relationship between these two values and this functions return value.
The following table is searched linearly, so it is good to put the most frequently used conversion types first.
The following table supplies these names
The following terms apply to all files associated with the software unless explicitly disclaimed in individual files.
The following testcase is true for indices with redundant columns.
The following three forward declarations are for functions declared in these files used to retrieve the respective implementations.
The following three functions, found below:  rbuDeltaGetInt() rbuDeltaChecksum() rbuDeltaApply()  are lifted from the fossil source code (http://fossil-scm.org).
The following three macros, FUNCTION(), LIKEFUNC() and AGGREGATE() are used to create the initializers for the FuncDef structures.
The following three return codes are possible: ZEND_HASH_APPLY_KEEP   - continue ZEND_HASH_APPLY_STOP   - stop iteration ZEND_HASH_APPLY_REMOVE - delete the element, combineable with the former
The following tokens are significant:  (0) tkSEMI      A semicolon.
The following two checks can be removed once we drop XP support
The following two macros - READ_UTF8 and WRITE_UTF8 - have been copied from the sqlite3 source file utf.c.
The following two macros are used internally.
The following two macros are used within the PAGERTRACE() macros above to print out file-descriptors.
The following two optimizations are disabled for partial matching or if disabling is explicitly requested.
The following type and function are used to iterate through all opcodes in a Vdbe main program and each of the sub-programs (triggers) it may  invoke directly or indirectly.
The following type is an iterator for a PMA.
The following types are used as part of the implementation of the  fts3BestSnippet() routine.
The following value as a destructor means to use sqlite3DbFree().
The following value is the maximum cell size assuming a maximum page size give above.
The following value requires a mutex to change.
The following values are for bookkeeping purposes only.
The following values are integer pointers which indicate the portion of the workspace used by a particular array in DLAED2 and DLAED3.
The following values are integer pointers which indicate the portion of the workspace used by a particular array in SLAED2 and SLAED3.
The following values may be passed as the second argument to sqlite3OsLock().
The following variable is (normally) set once and never changes thereafter.
The following variable, if set to a non-zero value, is interpreted as the number of seconds since 1970 and is used to set the result of sqlite3OsCurrentTime() during testing.
The following variables are all protected by the STATIC_MASTER  mutex, not by sqlite3.mutex. They are used by code in notify.c.
The following variables are all protected by the STATIC_MASTER mutex, not by sqlite3.mutex. They are used by code in notify.c.
The following variables are used by fts3SegReaderNextDocid() to iterate  through the current doclist (aDoclist/nDoclist).
The following variables may only be accessed when the accessor is holding the PGroup mutex.
The following version of unixSectorSize() is optimized for QNX.
The following was already done in fts5WriteInit():
The following while-loop moves pEnd to point to the first byte that is not  immediately preceded by a byte with the 0x80 bit set.
The following will not normally be called.
The following, however, is the corresponding estimation of SIGMA - D( I ).
The following, however, is the corresponding estimation of SIGMA - D( IP1 ).
The foreign key is set for IMMEDIATE processing.
The foreign key linking pSrc to pTab
The format field code letter
The format for sqlite_stat2 is recorded here for legacy reference.
The format for the journal header is as follows: - 8 bytes: Magic identifying journal format.
The format is similar to FTS3/4, except that:  all segment b-tree leaf data is stored in fixed size page records  (e.g. 1000 bytes).
The format is:  + 4 bytes: PAGER_MJ_PGNO.
The format of  this is:  + Bareword (function name) + Open parenthesis - "(" + Zero or more SQL literals in a comma separated list + Close parenthesis - ")"
The format of a PMA is:  A varint.
The format of each doclist index leaf page  is:  Flags byte.
The format string consists of a sequence of single-character directives, summarized in the table at the end of this entry.
The format string to pass to strftime() is supplied as the user-data for the function.
The formatting of each case is important.
The formatting of the code in this file is, therefore, important.
The former is equivalent to '3/10'.to_r, but the latter isn't so.
The former value of the root page that moved - its value before the move occurred - is stored in register P2.
The formula above is for computing the action when the lookahead is a terminal symbol.
The four core functions - F1 is optimized somewhat
The fourth argument (xFilter) passed to this function is the "filter callback".
The fourth column type is any column which has been deflated.
The fourth optional argument is whatever the user wants (and specified in the grammar) and is available for use by the action routines.
The fourth value is an Integer exponent.
The fractional number's precision is assumed at most nanosecond.
The fractional seconds FFFF can be one or more digits.
The fractional seconds extension (the ".FFF") is optional.
The frame-header is six big-endian 32-bit unsigned  integer values, as follows:  0: Page number.
The fsync() system call does not work as advertised on many unix systems.
The fts3 built-in tokenizers - "simple", "porter" and "icu"- are  implemented in files fts3_tokenizer1.c, fts3_porter.c and fts3_icu.c respectively.
The fts3 module calls this  method exactly once for each successful call to xOpen().
The fts3 module calls this method exactly once for each successful call to xCreate().
The fts3BestSnippet() function often selects snippets that end with a query term.
The fts3EofMethod() will be called subsequently to determine whether or not an EOF was hit.
The fts5EofMethod() will be called subsequently to determine whether or not an EOF was hit.
The fts5_expr.c API above this point is used by the other hand-written C code in this module.
The full division routine.
The full list of Unicode newline characters is taken from http://unicode.org/unicode/reports/tr18/.
The full-path is written to this buffer before returning.
The full-text index is stored in a series of b+tree (-like) structures called segments which map terms to doclists.
The full_read argument tells whether characters above max are accepted or not.
The function array_from_pyobj is very flexible about its Python object argument that can be any number, list, tuple, or array.
The function blobGrowBuffer() is used to extend the allocation.
The function calling context
The function definition object
The function definition to insert
The function exists purely for its side-effects.
The function for reporting virtual-machine related events to VTune.
The function has P5 arguments.
The function identified by _num_ is system dependent.
The function is expanded here so that we can flag whether we've got an unsigned integer which would fit an a signed integer of the same size, something not exposed in the public API.
The function is global in the C sense so that it can be called from pcre_study() when finding the minimum matching length.
The function is searched via dlsym on RTLD_NEXT.
The function may modify otype if the given type isn't found.
The function overwrites the appropriate opcode values, so the type of the pointer must be cast.
The function pointer points to sqlite3BtreeNext().
The function pointer points to sqlite3BtreePrevious().
The function returns a pointer to the data (the size can be accessed by looking at the address: chunk - sizeof(size_t)).
The function returns a reasonable answer for reduction operands and when buffering is disabled.
The function returns always true.
The function returns old value of location options.
The function returns only the integer part of the number.
The function returns the number of successful conversions.
The function takes a single parameter "keyClass".
The function we are evaluating for match quality
The function will return a unique method ID, the user should maintain the ID for each method
The functionality of sqlite_stat3 is a superset of sqlite_stat2.
The functions may raise an error if the strings have no space, or can't be parsed properly.
The functions used by the UPDATE/DELETE generation code to query for this information are:  sqlite3FkRequired() - Test to see if FK processing is required.
The future error message
The general concept of this implementation is to keep track of all alloca()-allocated blocks, and reclaim any that are found to be deeper in the stack than the current invocation.
The general concept of this implementation is to keep track of all alloca-allocated blocks, and reclaim any that are found to be deeper in the stack than the current invocation.
The general dtype repr function.
The general operand (not immediate).
The general problem is NP-hard and worst case runtime is exponential in the number of dimensions.
The generated code will increase the file format number if necessary.
The generated file, cmplxdivide1.go, is compiled along with the driver cmplxdivide.go (the names are confusing and unimaginative) to run the actual test.
The generator is already closed, thus can't resume
The generator is already closed, thus can't send anything
The generator may be initialized with either a system-generated or user-supplied seed value by using Random.srand.
The generator object is stored in EX(return_value)
The generic sqlite3_tokenizer.pModule variable should not be initialized by this callback.
The getput_arg_fast should handle this otherwise.
The global PGroup for mode (2)
The global stats are those elements  of the matchinfo array that are constant for all rows returned by the  current query.
The gmp_*_op functions provide an implementation for several common types of GMP functions.
The goal of the search is to find the entry that is closed to the key described by this object.
The goal of these settings is to pack together groups of small doclists while making it efficient to directly access large doclists.
The goal of this class is to manipulate file path information in a neater way than standard Ruby provides.
The group mutex must be released before pcache1Alloc() is called.
The group structure is internally copied so modifition to +group+ after assigning to a key has no effect on the key.
The group the new page cache will belong to
The gzip format is described in RFC 1952 which is also a wrapper around a deflate stream.
The gzip format was designed for single-file compression on file systems, has a larger header than zlib to maintain directory information, and uses a different, slower check method than zlib.
The handle may be closed by calling the sqlite3Fts3SegmentsClose() function.
The handle to our heap.
The handling of escape sequences consisting of a string of digits starting with one that is not zero is not straightforward.
The handshake may be started after unencrypted data has been sent over the socket.
The hard work is to build the list (_array_descr_walk).
The hasHeldSharedLock flag prevents this from occurring on the very first access to a file, in order to save a single unnecessary sqlite3OsRead() call at the start-up.
The hash for this key has already been computed and is passed as the 4th parameter.
The hash for this key is also computed and returned in the *pH parameter.
The hash for this key.
The hash keys calculated by this function are compatible with those calculated by sessionPreupdateHash().
The hash table consists of HASHTABLE_NSLOT 16-bit unsigned integers.
The hash table into which to insert
The hash table is cleared before returning.
The hash table might fail  to resize if sqliteMalloc() fails.
The hash table might fail to resize if sqlite3_malloc() fails or if the new size is the same as the prior size.
The hash table must been initialized to use string keys, and to take a private copy  of the key when a value is inserted.
The hash table to insert into
The hash value for an object may not be identical across invocations or implementations of Ruby.
The hash values specifies file descriptors in the parent process.
The hashing function.
The hashtable containing the shared values.
The hdr-size field is also a varint which is the offset from the beginning of the record to data0.
The head can of course change if someone else prepends first, in which case we'll retry.
The head structure has a pointer to the most-recently-used element, and elements are moved to this position in the list each time they are used.
The header is this many bytes in size.
The header must be exactly 16 bytes including the zero-terminator so the string itself should be 15 characters long.
The header of a record consists of a sequence variable-length integers.
The header string that appears at the beginning of every SQLite database.
The header was successfully read.
The heap pointer is not NULL, then install one of the mem5.c/mem3.c methods.
The heap property is this:  Every node is less than or equal to both of its daughter nodes.
The height is definite, so use that as the flex basis.
The hello method is not inherited by SSL structs when assigning a new context inside the SNI callback, so the just use SSLv23
The heuristic is that double-quoting is unnecessary unless the string contains an apostrophe, a comma, or backslash (other than backslash-backslash).
The high-order bit is set if any column after the 64th is used.
The higher bits represent the key, the lower ones the value.
The higher level methods are listed below.
The highest number for a valid UTF-8 first byte is in fact 0x3d.
The highwater mark is meaningless and is returned as zero.
The highwater mark is unchanged.
The history can be accessed by Readline::HISTORY constant.
The holidays list must be normalized before using it
The holidays list should be normalized, which means any NaT (not-a-time) values, duplicates, and dates already excluded by the weekmask should be removed, and the list should be sorted.
The i'th entry of the array is populated with the offset of the index column that matches the i'th column returned by the SELECT.
The i'th field of each record is associated with the i'th column of the table, counting from left to right in the order in which columns were declared in the CREATE TABLE statement.
The i-th cell pointer
The i-th column VL(i) of VL is the eigenvector corresponding to T(i,i).
The i-th column VR(i) of VR is the eigenvector corresponding to T(i,i).
The i-th index expression
The iCol-th column of the result set
The iDistinct table keeps a copy of all rows that have ever been inserted into Queue and causes duplicates to be discarded.
The iIdxCur parameter is the cursor number of an index.  If  WHERE_ONETABLE_ONLY is set, iIdxCur is the cursor number of an index to use for OR clause processing.
The iIdxCur parameter is the cursor number of an index.  If  WHERE_OR_SUBCLAUSE is set, iIdxCur is the cursor number of an index to use for OR clause processing.
The iLimit register is initialized to LIMIT.
The iOffset register (if it exists) is initialized to the value of the OFFSET.
The iParent cursor will never be used.
The iPg value in the following loop starts at nNew-1 goes down to 0, then back up to nNew-1 again, thus making two passes over the pages.
The iPos argument is ignored for a delete.
The iVersion value will increment whenever this happens.
The id is always a node-id.
The idea behind dataOnly is that it should only write the file content to disk, not the inode.
The idea here is to read all the directory names into a string table (separated by nulls) and when one of the other dir functions is called return the pointer to the current file name.
The idea is borrowed from Perl: http://web.archive.org/web/20080211114141/http://use.perl.org/articles/08/02/07/197204.shtml  compat_common_month_table is generated by the following program.
The idea is that if the atomic-write optimization is not enabled at compile time, the compiler can omit the tests of 'isDirect' below, as well as the block enclosed in the "if( isDirect )" condition.
The idea is that this function works like a combination of GetLastError() and FormatMessage() on Windows (or errno and strerror_r() on Unix).
The identifier of the new instance will be passed in as the first argument (this value is generated by the browser and is an opaque handle).
The identity for a dynamic dtype like object arrays can't be used in general
The immediate operand must be 32 bit.
The impersonation token is not actually assigned to the thread, but is used in the call to AccessCheck.
The implementation is not required to provide versions of these routines that actually work.
The implementation is stolen from array_data_shuffle
The implementation makes no guarantees about the order in which the combinations are yielded.
The implementation makes no guarantees about the order in which the constants are yielded.
The implementation makes no guarantees about the order in which the permutations are yielded.
The implementation makes no guarantees about the order in which the repeated combinations are yielded.
The implementation makes no guarantees about the order in which the repeated permutations are yielded.
The implementation of an SQLite user-defined-function that accepts a single integer as an argument.
The implementation of dupedExprStructSize() contain multiple assert() statements that attempt to enforce this constraint.
The implementation of the rbu_target_name() SQL function.
The implementation of the sqlite_record() function.
The implementation of this method is expected to release all outstanding resources obtained by the mutex methods implementation, especially those obtained by the xMutexInit method.
The implementation of this routine was generated by a program, mkkeywordhash.c, located in the tool subdirectory of the distribution.
The implementation of this routine was generated by a program, mkkeywordhash.h, located in the tool subdirectory of the distribution.
The implementation of user-defined scalar function fts5_decode().
The implementation of user-defined scalar function fts5_rowid().
The implementation plan is to implement the two coroutines and seven subroutines first, then put the control logic at the bottom.
The implicit assumption here is that if fstat() fails, things are in such bad shape that dropping a lock or two doesn't matter much.
The imposter table has the  same schema as the actual target table (less any UNIQUE constraints).
The in-memory image of a disk page has the auxiliary information appended to the end.
The inFlags parameter must contain exactly one of the bits IN_INDEX_MEMBERSHIP or IN_INDEX_LOOP.
The inability to allocates space for a larger hash table is a performance hit but it is not a fatal error.
The inability to get a read lock indicates that some other database connection is holding a write-lock, which in turn means that the other connection has made uncommitted changes to the schema.
The inconsistency  is unfortunate but cannot be changed without breaking backwards  compatibility.
The increment is used to increase the schema cookie so that other connections to the same database will know to reread the schema.
The incremental merge did not copy all the data from this  segment to the upper level.
The index (1-based) of the term out of range
The index associated with pLoop
The index being used for this loop
The index can not be larger than ZIP_INT64_MAX since the size of the central directory cannot be larger than ZIP_UINT64_MAX, and each entry is larger than 2 bytes.
The index created will become the PRIMARY KEY index.
The index cursors might not be used, but if they are used they need to occur right after the database cursor.
The index entry must begin with a header size
The index for which to generate a key
The index in +Readline.line_buffer+ which matches the start of input-string passed to completion_proc is computed by subtracting the length of input-string from +Readline.point+.
The index is itself UNIQUE, and  2.
The index is just after the data pointers
The index might be a multi-dimensional index, but not yet a tuple this makes it a tuple in that case.
The index of the cell within the node
The index of the database "xxx" is returned.
The index of the database file is given by iDb.
The index of the database the expression refers to
The index should have already been created when we processed the CREATE TABLE.
The index that might be used for coverage
The index that triggers the constraint
The index to be created
The index to be tested
The index to be tested for coverage
The index to be used for a inequality constraint
The index used to access the table
The index we will be using
The index whose column is to be loaded
The index: a pointer to pointers
The indices for graph, print, and punct are needed, so identify them.
The individual item types that can be repeated set these backoff variables appropriately.
The inet type holds an IPv4 or IPv6 host address, and optionally its subnet, all in one field.
The inflate stream will automatically choose the correct user-provided dictionary based on the stream's required dictionary.
The information accessed using this API and its companion xPhraseFirstColumn() may also be obtained using xPhraseFirst/xPhraseNext (or xInst/xInstCount).
The information is array of type.
The information is array.
The information is returned as a Group struct.
The information is returned as a Passwd struct.
The information where a class is declared is only available for user classes
The information where a function is declared is only available for user classes
The initial batch number is zero, so if the very first TEST contains a non-zero batch number, it will see all prior INSERTs.
The initial code size
The initial database size
The initial handshake is never rate-limited
The initial options have been put into the cd block so that they can be changed if an option setting is found within the regex right at the beginning.
The initial size of the Win32-specific heap.
The initialization of pTo can actually fail under fairly obscure circumstances, even though it is a copy of initialized  page pFrom.
The initializer must be kept in sync with the SQLITE_LIMIT_* #defines in sqlite3.h.
The inner loop does one iteration for each character in the element.
The inner query or "subquery"
The input is an array of integers that acts as a program to test the Bitvec.
The input is escaped to prevent Regexp special characters from interfering with the matching.
The input lists are connected via pRight pointers and are  assumed to each already be in sorted order.
The input matrix C  is changed to Q' * C  if desired.
The input matrix U  is changed to U  * Q  if desired.
The input matrix VT is changed to P' * VT if desired.
The input may be either a string or a tuple.
The input pBlob is guaranteed to be a Blob that is not marked with MEM_Zero.
The input pointer currently points to the first byte of the first field of a record consisting of nCol columns.
The input pointer currently points to the second byte of a table-header.
The input pointer is left pointing to the byte following the table header.
The input pointer is not moved.
The input region array addresses this issue.
The input string must be zero-terminated.
The input text that generated the token is identified by the byte offsets returned in *piStartOffset and piEndOffset.
The input to this routine is an WhereTerm structure with only the "pExpr" field filled in.
The input value in P3 might be of any type: integer, real, string, blob, or NULL.
The input was an array already
The input was not an array, so give a general error message
The input word *pz and zFrom are both in reverse order.
The input word is copied into the output with US-ASCII case folding.
The input, pIn, is a binary tree (or subtree) of RowSetEntry objects.
The inputted line is added to the history if +add_hist+ is true.
The instance contains sockaddr, family, socktype, protocol.
The instance is called the attached object for the singleton class.
The instance represents the initial state of the message authentication code before any data has been processed.
The instance-method versions are made private.
The instruction includes the AL condition.
The instruction is recorded as an instance of the following structure:
The instruction sequence results will almost certainly change as Ruby changes, so example output in this documentation may be different from what you see.
The integer ROWID or key for the record to be inserted
The integer consists of all bytes that have bit 8 set and the first byte with bit 8 clear.
The integer is a number of nanoseconds since the _Epoch_ which can represent 1823-11-12 to 2116-02-20.
The integer just read is a column number.
The integer parser token codes are reused as opcodes here.
The integer query plan parameter to xFilter is stored in register P3.
The integer range is limited by the machine's int representation.
The integer returned is an SQLITE_ success/failure code that describes the result of executing the virtual machine.
The integer value pointed to by pnChange is incremented by the number of entries in the table.
The integers are opcodes followed by 0, 1, or 3 operands, depending on the opcode.
The integration uses  ICU to provide the following to SQLite:  An implementation of the SQL regexp() function (and hence REGEXP operator) using the ICU uregex_XX() APIs.
The integrity of the database is maintained by a (possibly synchronous) transaction opened on the main database before sqlite3BtreeCopyFile() is called.
The integrity of the transaction is already guaranteed, but some stray 'cold' journals may be lying around.
The integrity-check works as follows.
The intent of the integer argument is to let the fault simulator know which of multiple sqlite3FaultSim() calls has been hit.
The intent was to create a new calendar system that was based on scientific principals, not religious traditions.
The interface is modeled after MySQL JSON functions:  https://dev.mysql.com/doc/refman/5.7/en/json.html  For the time being, all JSON is stored as pure text.
The interface is the same as sqlite3VdbeExec().
The interface might change in incompatible ways.
The interface to the LEMON-generated parser
The interface to the code in fault.c used for identifying "benign" malloc failures.
The interface to the virtual-table mechanism defined above (back up to a comment remarkably similar to this one) is currently considered to be experimental.
The interface to the virtual-table mechanism is currently considered to be experimental.
The interface used by the implementation of the aforementioned functions to retrieve the collation sequence set by this opcode is not available publicly, only to user functions defined in func.c.
The interface used by the implementation of the aforementioned functions to retrieve the collation sequence set by this opcode is not available publicly.
The interfaces above must be called in a particular order.
The interfaces below this point are called by the parser code in fts5parse.y.
The interfaces in this file is only available when compiling with SQLITE_DEBUG.
The interior nodes at a given height are naturally tracked by interior nodes at height+1, and so on.
The interior of the tree is assembled in memory and written out only once all leaves have been populated and stored.
The internal __COMPILER_HALT_OFFSET__ is prefixed by NULL byte
The internal databases can be given the large, default limits.
The internal details of this type are only accessed by the following functions:  fts3SegWriterAdd() fts3SegWriterFlush() fts3SegWriterFree()
The internal encoding is optional and when not set, the Ruby default internal encoding is used.
The internal encoding of an IO object can be set with IO#set_encoding or at IO object creation (see IO.new options).
The internals of this structure are intended to be opaque -- client code should not attempt to access or modify the fields of this structure directly.
The internals of this structure are only accessed by:  walIteratorInit() - Create a new iterator, walIteratorNext() - Step an iterator, walIteratorFree() - Free an iterator.
The interpretation of other integer values are system dependent.
The interpretation of the P4 string is left to the module implementation.
The intersection finding technique of this code could be improved by remembering the previous intertersection, and by using the slope.
The intersection of these sets defines the characters to count in +str+.
The intkey flag means that the key is a integer which is stored in the key size entry of the cell header rather than in the payload area.
The intkey flag means that the key is an integer which is stored in the key size entry of the cell header rather than in the payload area.
The is done to support legacy SQL code.
The isDeferred parameter is 1 for INITIALLY DEFERRED and 0 for INITIALLY IMMEDIATE.
The isDirectMode flag may only be non-zero if the library was compiled with the SQLITE_ENABLE_ATOMIC_WRITE macro defined.
The isHot parameter indicates that we are trying to rollback a journal that might be a hot journal.
The isRequirePhrase variable is set to true if a phrase or an expression contained in parenthesis is required.
The isTemp flag is true if the table should be stored in the auxiliary database file instead of in the main database file.
The is_small_unsigned output flag indicates whether it's an unsigned integer, and would fit in a signed integer of the same bit size.
The issues are "block collection start" and "simple keys".
The iterator being constructed
The iterator currently points to a table (not index) of type  RBU_PK_WITHOUT_ROWID.
The iterator initially points to the first term/rowid entry in the  iterated data.
The iterator is left pointing to the first entry when  this function returns.
The iterator key should be the path that the file will have within the phar archive.
The iterator must return a series of strings that are full paths to files that should be added to the phar.
The iterator object passed as the second argument currently contains no valid values except for the Fts5SegIter.pLeaf member variable.
The iterator organizes its memory from fastest index to slowest index, and when a multi-index is enabled, it uses a permutation to recover the original order.
The iterator passed as the first argument has the following fields set as follows.
The iterator passed as the second argument is guaranteed to point to a table (not an index) when this function is called.
The iterator sorts from smallest stride to biggest stride (Fortran order), whereas here we sort from biggest stride to smallest stride (C order).
The iterator to advance by one position
The job of this function is to make pPg clean by writing its contents out to the database file, if possible.
The job of this routine is to analyze the subexpression and populate all the other fields of the WhereTerm structure.
The job of this routine is to convert both internal schema data structures and the generated VDBE code so that they are appropriate for a WITHOUT ROWID table instead of a rowid table.
The job of this routine is to find or create a b-tree object that can be used either to test for membership in the RHS set or to iterate through all members of the RHS set, skipping duplicates.
The join operator is held in the entry to the left.
The jointype starts out showing the join type between the current table and the next table on the list.
The journal file does not need to be synced following this operation.
The journal file exists and no other connection has a reserved or greater lock on the database file.
The journal file format is as follows:   (1)  8 byte prefix.
The journal file from which to read
The journal file into which to write
The journal file is open and the first header has been written  and synced to disk.
The journal file is open and the first header has been written  to it, but the header has not been synced to disk.
The journal file is then deleted and SQLITE_OK returned, just as if no corruption had been encountered.
The journal file may or may not be open at this point.
The journal file may or may not be open.
The journal file must be open when this function is called.
The journal file must be open when this is called.
The journal file must be open when this routine is called.
The journal file needs to be opened.
The journal file still exists in the file-system  though, and if a failure occurs at this point it will eventually be used as a hot-journal and the current transaction rolled back.
The journal header size for this pager.
The json_each virtual table
The json_parse(JSON) function returns a string which describes a parse of the JSON provided.
The json_test1(JSON) function return true (1) if the input is JSON text generated by another json function.
The julian day number times 86400000
The jump is taken if the SQLITE_JUMPIFNULL bit is set.
The kernel offers thread handlers a chance to resolve exceptions before the task handler, so we can generate the panic and avoid lldb's SIGSEGV handler.
The key (zTerm/nTerm) is guaranteed to be greater than the largest key on the node just written, but smaller than or equal to the first key that will be written to the next leaf node.
The key MUST be present.
The key and data for any entry are combined to form the "payload".
The key comparison functions actually return default_rc when they find an equals comparison.
The key comparison functions will set eqSeen to true if they ever get and equal results when comparing this structure to a b-tree record.
The key corresponds to a node in a graph and the values correspond to all nodes to which that node has an edge.
The key for INTKEY tables, or nPayload otherwise
The key for INTKEY tables, or number of bytes in key
The key in such an algorithm consists of two parts: a public key that may be distributed to others and a private key that needs to remain secret.
The key is copied onto the P2 register exactly as  it is found in the database file.
The key is generated using MD5, but we only use the first 8 bytes because it allows us to use atomic operations.
The key is given by (pKey,nKey) and the data is given by (pData,nData).
The key is not copied in this instance.
The key is pKey and the data is "data".
The key is pKey,nKey and the data is "data".
The key is stored in register P3.
The key is the concatenation of bByte and (pToken/nToken).
The key must be a MEM_Int.
The key numbers start at 0x100, and we expect to be one of the early calls to pthread_key_create, so we should be able to get a pretty low number.
The key of the new record
The key we are searching for
The key will be incremented on first use, so it'll start at 0
The key will be written into the parent of this node.
The key with be for index pIdx which is an index on pTab.
The key would be the following.
The key/data may move or be destroyed on the next call to any Btree routine, including calls from other threads against the same cache.
The keys and values of +Signal.list+ are known signal names and numbers, respectively.
The keys of Hash object are member names of VT_RECORD OLE variable and the values of Hash object are values of VT_RECORD OLE variable.
The keys of the PHP hash MUST be numeric.
The keys starting with +:T_+ means live objects.
The label can be used as the P2 value of an operation.
The label could point the address after the constant pool.
The label should be resolved using sqlite3ResolvePartIdxLabel().
The larger the iteration count, the longer it will take.
The largest amount I've seen used is 218, so this number is very generous.
The largest iLevel value in the tree
The largest positive exponent in a double-precision floating point where 10 raised to this power minus 1.
The largest possible exponent value in a double-precision floating point.
The largest possible integer in a double-precision floating point number.
The last argument should be a Julian day number which denotes the day of calendar reform.
The last argument should be the image.
The last buffer content is sent to next buffer
The last capture is a local variable even for recursions.
The last character in the format string must be the format char
The last column is NULL to indicate the end of the row.
The last column is the record as a blob.
The last component of the real pathname can be nonexistent.
The last field of the index should be an integer - the ROWID.
The last form by default does not raise exceptions but uses replacement strings.
The last four columns apply to items that cannot be repeated, so there is no need to have rows for them.
The last index block in a wal-index usually contains less than the full complement of HASHTABLE_NPAGE (or HASHTABLE_NPAGE_ONE) page-numbers, depending on the contents of the WAL file.
The last is always set to 1, as once the trailing PK fields are considered all index keys are unique.
The last item *must* be 0.
The last multiplication could overflow.
The last multiplication could underflow.
The last packet will have 'eof' set If PS, then no result set follows.
The last page can have as little as 1 byte of data.
The last part is the salt string.
The last part of named +classpath+ is never anonymous, but anonymous +class+/+module+ names may be contained.
The last point is to ensure all column numbers are stored as  single-byte varints.
The last rowid in the doclist may not be on the current page.
The last rule is more restrictive than the specification requires.
The last slot of a set is either the actual size of the set plus 1, or the NULL terminator of the set (i.e., setelemT).
The last statement or normal query result will close it then.
The last thing the sqlite3_prepare() function does is copy the error stored by this function into the database handle using sqlite3Error().
The last three forms fill the array with the value of the given block, which is passed the absolute index of each element to be filled.
The last token parsed
The last token without trailing slash
The last two forms create a new instance of a struct subclass.
The last week of the year can be in week 1 of next year.
The latest history entry is always our current buffer, that initially is just an empty string.
The latter bytes can be put back.
The latter case was added in 3.7.1 when support for 64K pages was added.
The latter ensures that data is flushed from Ruby's buffers, but does not guarantee that the underlying operating system actually writes it to disk.
The latter hasn't been moved
The latter is equivalent to '3/10'.to_r, but the former isn't so.
The latter is needed because for certain multiple inputs to the buggy algorithm there exist easily found inputs to the correct algorithm that produce the same hash.
The latter means that readpartial is nonblocking-flag insensitive.
The layout of divisions is as follows:  General-purpose declarations and utility functions.
The layout.measuredDimensions field includes any border or padding for the node but does not include margins.
The leading dimension of arrays GIVCOL and PERM.
The leading dimension of arrays U, VT, DIFL, DIFR, POLES, GIVNUM, and Z.
The leaf flag means that this page has no children.
The least significant 10 bits are used to store the size of the range (always at least 1).
The least significant bit is bit 1.
The least significant words are filled in the buffer when overflow occur.
The left most table is the first entry in Select.pSrc.
The left operand, and output
The left part of the FROM clause already seen
The left query could also be a compound query in which case this routine will be called recursively.
The left siblings are always nearly full, while the right-most sibling might be nearly empty.
The left singular vectors of the original matrix are stored in U, and the transpose of the right singular vectors are stored in VT, and the singular values are in D.
The left triangle of the Fig.
The left-hand (repeated) opcode is used to select the row, and the right-hand opcode is use to select the column.
The left-hand (repeated) opcode is used to select the row, and the right-hand opcode is used to select the column.
The left-most column is 1.
The left-most leaf is the one with the smallest key - the first in ascending order.
The leftmost coordinate column is 'a', the second from the left 'b' etc.
The length in the table is a minimum, so we have to arrange to skip the extra bytes.
The length in the terminating ket is always the length of the whole bracketed item.
The length is cached so we don't need to ask Oracle every time
The length is supposed to be significantly less that the buffer size.
The length of +Readline.line_buffer+ and GNU Readline's rl_end are same.
The length of a string is a non-negative integer.
The length of data write will be between 1 and 9 bytes.
The length of data written will be between 1 and FTS3_VARINT_MAX bytes.
The length of the data is stored in nread.
The length of the returned array is the product of the length of +self+ and the argument arrays.
The length of the serialized data for the column
The letter 'x', or start of BLOB literal
The level must be less than 10 and greater than 1.
The level of the FROM clause we are working on
The level of the new segment is equal to the numerically greatest segment level currently present in the database for this index. The idx of the new segment is always 0.
The library also supports reading and writing files in gzip (.gz) format with an interface similar to that of IO.
The limit is not changed if the value originally pointed to is negative, and so the current limit  can be queried by passing in a pointer to a negative number.
The limit is now strictly enforced at all times.
The limit should be a date object.
The limit specified by this method takes less priority over any limit specified to instance methods such as ceil, floor, truncate, or round.
The limiting factor is the 16-bit offset field that occurs at the start of each leaf page (see fts5_index.c).
The linker sets this automatically on iOS 8+, but we deploy to iOS 7.
The list is being searched and this trunk page is the page to allocate, regardless of whether it has leaves.
The list is connected by Trigger.pNext pointers.
The list is kept in ascending order by pBt address.
The list must be in order.
The list of Btrees connected by pNext and pPrev should be in sorted order by Btree.pBt value.
The list of all parents for child Table X is held at X.pFKey.
The list of all registered VFS implementations.
The list of available SSL/TLS methods
The list of available signal names and their interpretation is system dependent.
The list of expressions
The list of freeblocks must be in ascending order.
The list of input arguments (or output arguments) was only read partially
The list of integers in the stat column can optionally be followed by the keyword "unordered".
The list of lengths is terminated by a zero length entry.
The list of pages passed into this routine is always sorted by page number.
The load path was modified.
The loaded doclist does not take deferred tokens into account.
The loading of large blobs can be skipped for length() and all content loading can be skipped for typeof().
The local stats are those elements of the  array that are different for each row returned by the query.
The local value of Pager.sectorSize is restored at the end of that routine.
The local variables YYSIZE and YYSTACKSIZE give the old and new number of elements in the stack, and YYPTR gives the new location of the stack.
The local variables should be initialized for each enumeration.
The local_size is already adjusted by the saved registers.
The locale encoding (__ENCODING__), not default_internal, is used as the encoding of created strings.
The location of the column value is returned.
The location of the store can usually be determined by:  OpenSSL::X509::DEFAULT_CERT_FILE OpenSSL::X509::DEFAULT_CERT_DIR
The location to move pDbPage to
The lock byte is obtained at  random so two separate readers can probably access the file at the  same time, unless they are unlucky and choose the same lock byte.
The lock is  described by pLock.
The lock is a write lock if isWritelock is true or a read lock if it is false.
The lock is held if and only if the lockfile exists
The lock-related methods of the proxy-locking sqlite3_io_method object follow.
The locking context for the proxy lock
The locking methods were defined in divisions above (one locking method per division).
The locking might fail on one of the later transitions leaving the lock state different from what it started but still short of its goal.
The locking structure keeps a reference count (so we will know when to delete it) and a "cnt" field that tells us its internal lock status.
The log message is stored in a fixed-length buffer on the stack.
The logic is that a recursion can only make sense if there is another alternation that stops the recursing.
The longest anonymous name
The longest property name we use in an uploaded file array
The longest run of digits wins.
The longest string dtoa can return is about 751 bytes long.
The lookahead symbol.
The lookup table gives us exactly what we need for this comparison, which PyArray_ScalarKind would not.
The lookup table is much faster.
The loop below pulls entries from the min-heap in order and compares the start_address against the previous end_address.
The loop below will correct for any error in this estimate.
The loop is required here in case the sector-size is larger than the  database page size.
The loop that calls php_random_bytes should be terminated by the exception instead of proceeding to demand more entropy.
The loop that contains the LIKE operator
The loop to adjust downward
The low 8 bit must be zero.
The lower 16-bits of the sqlite3_index_info.idxNum value set by the xBestIndex() method contains the Fts3Cursor.eSearch value described above.
The lower 256 codepoints of Unicode are identical to Latin-1, so we don't need to do any mapping here beyond replacing non-Latin-1 characters.
The lower 256 codepoints of Unicode are identical to Latin-1, so we don't need to do any mapping here.
The lower level vfs will do the special RBU handling.
The lower triangle is unchanged.
The lowest is 0xc2, but we overkill by starting at 0xc0 (192) for simplicity.
The lowest nibble contains the phar wide flags.
The m parameter will be non-zero only when creating -wal, -journal, and -shm files.
The macro MEMDB is true if we are dealing with an in-memory database.
The macro USEFETCH is true if we are allowed to use the xFetch and xUnfetch interfaces to access the database using memory-mapped I/O.
The macro unlikely() is a hint that surrounds a boolean expression that is usually false.
The macros CAMLparam0 and CAMLlocal1 register the roots.
The macros above (like SSL_connect()) are really just calling these functions indirectly via the pointer.
The main DB, main journal, WAL file and master journal are never  automatically deleted.
The main DB, main journal, WAL file and master journal are never automatically deleted.
The main btree structure
The main database structure
The main difference is that they are never preempted and that the scheduling must be done by the programmer and not the VM.
The main dimension is the sum of all the elements dimension plus the spacing.
The main entry point is sqlite3BtreeNext().
The main entry point is sqlite3BtreePrevious().
The main glob() routine: compiles the pattern (optionally processing quotes), calls glob1() to do the real pattern matching, and finally sorts the list (unless unsorted operation is requested).
The main loop begins here.
The main parser program.
The main query has a select-id of zero.
The main rollback journal uses checksums - the statement journal does  not.
The main routine for background threads that write level-0 PMAs.
The main routine for vdbePmaReaderIncrMergeInit() operations run in  background threads.
The main static mutex
The main structure managing the direct observations is the watchpoint (phpdbg_watchpoint_t).
The main terms index for language-id 0 is allocate values 0-1023.
The main thread tells the run loop thread that a new command is ready by writing to a pipe.
The main thread will append commands to this list
The main thread will only ever remove all the events...it will never append an event
The main thread writes to this fd when there are events ready to be run
The major token code number
The major token to shift in
The major token value.
The major type of the error token
The makefile for SQLite generates two C files "opcodes.h" and "opcodes.c" by scanning this file looking for lines that begin with "case OP_".
The makefile makes some minor changes to this file (such as inserting the version number) and changes its name to "sqlite3.h" as part of the build process.
The makefile scans the vdbe.c source file and creates the "opcodes.h" header file that defines a number for each opcode used by the VDBE.
The malloc.h header file is needed for malloc_usable_size() function on some systems (e.g. Linux).
The mallocFailed flag of the database connection is set if a memory allocation fails.
The man page from OS X says "REG_STARTEND affects only the location of the string, not how it is matched".
The manifest destroy routine will care about any resources to be freed.
The mapiter object must be created new each time.
The mapping from character to affinity is given by the SQLITE_AFF_ macros defined in sqliteInt.h.
The mapping is only valid for alphabetics which are the only characters for which this feature is used.
The mapping must be valid for at least nAmt bytes.
The mapping size limit is used to limit the aggregate size of all memory mapped regions of the database file.
The margin length is the sum of the objects size in each dimension.
The marshaling library converts collections of Ruby objects into a byte stream, allowing them to be stored outside the currently active script.
The mask is not reset by opening or closing syslog.
The mask pointer may be in the buffer or in the array, detect which one.
The master database table has a structure like this
The master database table is a special table that holds the names and attributes of all user tables and indices.
The master journal name must be the last thing written to a journal file.
The master journal page checksum is the sum of the bytes in the master journal name, where each byte is interpreted as a signed 8-bit integer.
The master stores, the workers read.
The master-journal page number must never be used as a pointer map page
The match must be exact.
The match register is affected, though.
The match register is affected.
The match succeeded, but the output vector wasn't big enough.
The matching pSrcList item
The matrix X is overwritten on B.
The matrix identified by the elements between START and END constitutes an independent sub-problem.
The max embedded payload fraction is the amount of the total usable space in a page that can be consumed by a single cell for standard B-tree (non-LEAFDATA) tables.
The max value usec can have is 0xF423F, so we use only five hex digits for usecs.
The maximum (and only) versions of the wal and wal-index formats that may be interpreted by this version of SQLite.
The maximum allowed sector size.
The maximum depth of an expression tree.
The maximum length of a TEXT or BLOB in bytes.
The maximum length of a single SQL statement in bytes.
The maximum length of an e-mail address is 320 octets, per RFC 2821.
The maximum memory level for allocating zlib deflate compression state.
The maximum number of arguments to an SQL function.
The maximum number of attached databases.
The maximum number of cache pages is set to the absolute value of mxPage.
The maximum number of cells on a single page of the database.
The maximum number of in-memory pages to use for the main database table and for temporary tables.
The maximum number of opcodes in a VDBE program.
The maximum number of processes that can be created for the real user ID of the calling process.
The maximum number of terms in a compound SELECT statement.
The maximum number of times that a statement will try to reparse itself before giving up and returning SQLITE_SCHEMA.
The maximum size of the Win32-specific heap.
The maximum size of the zlib history buffer.
The maximum supported page-size is 65536 bytes.
The meaning of +flush+ is same as in Zlib::Deflate#deflate.
The meaning of a four-character format specifiers ABCD is:  A:   number of digits to convert.
The meaning of the +options+ is as follows:  No option :: Full Unicode case mapping, suitable for most languages (see :turkic and :lithuanian options below for exceptions).
The mem0.mutex lock will be held while the callback is running.
The memcpy() statement assumes that the wildcard characters are the first three statements in the compareInfo structure.
The memdfd_init function creates a anonymous memory file that might be inherited by `Daemon.spawned` processus (contrary to a simple anonymous mmap).
The memfd_create() system call first appeared in Linux 3.17.
The memory allocation and mutex subsystems have not necessarily been initialized when this routine is called, and so they should not be used.
The memory allocator is not restarted if there are running VDBEs.
The memory for a VdbeFrame object is allocated and managed by a memory cell in the parent (calling) frame.
The memory for the returned string is obtained from sqlite3_malloc().
The memory is used by client code for its own purposes (for example, to store a high-level schema associated with  the shared-btree).
The memory management strategy depends on the value of the xDel parameter.
The memory manager table
The memory sanitizer distributed with versions of clang before 3.8 has a bug: if you call mmap before malloc, mmap may return an address that is later overwritten by the msan library.
The memory size function can always be overridden manually by defining the macro SQLITE_MALLOCSIZE to the desired function name.
The mempool allocator is activated by calling sqlite3_config().
The memsys static mutex
The merge engine to advance to the next row
The merge is an "OR" merge (see function fts3DoclistOrMerge() for details).
The merging of records is done as follows: For each column, if the  aRight record contains a value for the column, copy the value from their.
The metadata for when dealing with Months or Years which behave non-linearly with respect to the other units.
The method called is identified by the second argument, "offset", which is the offset of the method to call in the sqlite3_module structure.
The method consists of approximating the rational functions in the secular equation by simpler interpolating rational functions.
The method defined in the block will belong to the receiver.
The method used to calculate the color difference is based on the color distance in the RGB(a) cube.
The methods above are in version 1 of the sqlite_module object.
The methods above are in version 1 of the sqlite_vfs object definition.
The methods above are in versions 1 and 2 of the sqlite_vfs object.
The methods above are in versions 1 through 3 of the sqlite_vfs object.
The methods in a module may be instance methods or module methods.
The methods of the json_each virtual table
The methods of the json_tree virtual table.
The middle rectangular of the Fig.
The middle slot is expanded to two slots in order to make space for the two elements in the FROM clause of the subquery.
The min leaf payload fraction is like the min embedded payload fraction except that it applies to leaf nodes in a LEAFDATA tree.
The minimum PMA size is set to this value multiplied by the database page size in bytes.
The minimum allocation size is capped at 2**12.
The minimum amount of free space that we have seen.
The minimum amount of initialization feasible is performed.
The minimum answer is 1.
The minimum count for any phrase so far.
The minimum field width specifies the minimum width.
The minimum is now also defined in terms of LINK_SIZE so that the use of malloc() kicks in at the same number of forward references in all cases.
The minimum number of cells allowed for a node is a third of the  maximum.
The minimum number of significant decimal digits in a double-precision floating point.
The minimum size of any cell is 4 bytes.
The minimum value of NN is 1 (of course).
The minimum value of dimension iDim is considered first, the maximum used to break ties.
The minor token to shift in
The minor type of the error token
The minutes offset (at the end of the string)
The minutes offset is optional
The mkopcodeh.tcl generator script groups all these opcodes together near the front of the opcode list.
The mode should be an integer, as for Unix chmod.
The mode to open the stream with
The modified database pages are written to a *-oal file.
The modified file is saved under this new name.
The modifier is "E" and "O".
The modifiers are "E" and "O".
The module for this tokenizer
The module for this virtual table
The module name has been parsed, but the optional list of parameters that follow the module name are still pending.
The module will be unloaded automatically when the process exits.
The month and the day of month should be a negative or a positive number (as a relative month/day from the end of year/month when negative).
The more accurate value is returned by #nsec.
The more accurate value is returned by #subsec.
The moreToFollow flag indicates that this is not the last item in the tree.
The most general case.
The most recently coded instruction was an OP_Column to retrieve the i-th column of table pTab.
The most significant 22 bits in each 32-bit value contain the first  codepoint in the range.
The most significant byte of the integer appears first.
The most-recently-returned value is always left at the beginning of the list after retrieval.
The multi-index must be positioned for the beginning of the buffer.
The multiply routine.
The mutex associated with the source database BtShared structure will always  be held when either of these functions are invoked.
The mutex associated with the specific b-tree being checkpointed is taken by this function while the checkpoint is running.
The mutex entered using the unixEnterMutex() function must be held when this function is called.
The mutex implementation does not need to make a distinction between SQLITE_MUTEX_RECURSIVE and SQLITE_MUTEX_FAST if it does not want to.
The mutex on database handle db should be held by the caller.
The mutex subsystem must take care of serializing its own initialization.
The mutex will already be held (obtained by code in malloc.c) if sqlite3GlobalConfig.bMemStat is true.
The mutexes implementation cannot be overridden at start-time.
The mutexes implemention cannot be overridden at start-time.
The mutexes still do not provide any mutual exclusion.
The mx is the number of effective digits can to be stored.
The n should be a numeric value.
The nDLt column is like nLt except that it contains the  number of distinct entries in the index that are less than the sample.
The nEq, nLt, and nDLt entries of sqlite_stat3 all contain just a single integer which is the same as the first integer in the equivalent columns in sqlite_stat4.
The nExtra parameter specifies the number of bytes of space allocated along with each page reference.
The nExtraReg parameter is 0 or 1.
The nFreeSlot and pFree values do require mutex protection.
The nRef field of the vxworksFileId object is incremented before the object is returned.
The nTo best paths at the current level
The name can optionally begin with "SQLITE_" but the "SQLITE_" prefix is not required for a match.
The name context of the SELECT statement
The name context used to resolve the name
The name is zName and the encoding is enc.
The name must be unique across all VFS modules.
The name of the VFS is NAME.
The name of the author may not be used to endorse or promote products derived from this software without specific prior written permission.
The name of the function comes from the fact that  this is similar to the "new.*" columns available to update or delete  triggers.
The name of the function comes from the fact that this  is similar to the "old.*" columns available to update or delete triggers.
The name of the new table
The name of the schema table.
The name of the table/view the trigger applies to
The name of the trigger
The name of this file under configuration management is "sqlite.h.in".
The name-context to resolve expressions in
The named expression list may be NULL.
The names "Apache Server" and "Apache Group" must not be used to endorse or promote products derived from this software without prior written permission.
The names are now all in a single string, to reduce the number of relocations when a shared library is dynamically loaded.
The names for the fields will default to f0, f1, f2, and so forth.
The names of its contributors may not be used to endorse or promote products derived from this software without specific prior written permission.
The names of the authors may not be used to endorse or promote products derived from this software without specific prior written permission.
The names of the following types declared in vdbeInt.h are required for the VdbeOp definition.
The native query optimizer does not attempt to do anything with MATCH functions.
The near-set object passed as the first argument contains more than one phrase.
The negative sign if needed.
The new AtoF never returns NaN
The new Julian calendar set fixed lengths for the months, abandoning the lunar cycle.
The new VFS becomes the default if makeDflt is true.
The new WhereTerm object is constructed from Expr p and with wtFlags.
The new data pointers for resetting
The new encoding should have the same byte structure of _enc_.
The new entry might overwrite an existing entry, or it might be appended, or it might be discarded.
The new freeblock is at the beginning of the cell content area, so just extend the cell content area rather than create another freelist entry
The new function is given a new name.
The new head is going to point to our node as the first entry.
The new leaf holds no terms or rowids
The new mode call back routine
The new object is registered as a non-default VFS with SQLite before  returning.
The new object is registered as a non-default VFS with SQLite before returning.
The new object must be linked on to the end of the list, not simply added to the start of it.
The new object will be used to iterate through data in structure pStruct.
The new object will use the pointer pData, obtained from xFetch().
The new page is marked as dirty.
The new page size  is passed in *pPageSize.
The new poslist for the phrase (containing the same entries as the original with some entries removed on account  of the NEAR constraint) is written over the original even as it is being read.
The new process has CTRL+C disabled.
The new record number is written written to register P2.
The new root-page may not be allocated on a pointer-map page, or the PENDING_BYTE page.
The new segment id must be between 1 and 65335 inclusive, and must not be used by  any currently existing segment.
The new state to shift in
The new style is the Gregorian calendar, which is the current civil calendar of many countries.
The new terms are "dynamic" and are children of the original BETWEEN term.
The new terms completely replace the original vector comparison, which is no longer used.
The new value, or NULL on failure.
The new virtual table
The new.* record  contains the new values of only those fields that have been modified.
The new.* record that is part of each INSERT change contains the values that make up the new row.
The newPgno argument is the page number of the child page to move to.
The newly created file's file descriptor is assigned to the conch file structure and finally the original conch file descriptor is  closed.
The newly created page cache
The next 2 bytes contain the number of entries currently  stored in the node.
The next 31 bits encode the key the lower 31 bits the value.
The next 5 must be kept together and in sequence so that a test that checks for any one of them can use a range.
The next block deals with cases 3 and 4 and the one after that, case 5.
The next block of code attempts to adjust the packing of siblings to get a better balance.
The next block of code checks to see if the register array has changed, and if so it reinitializes the relavant parts of the sqlite3_context object
The next block of code will expand the out query to 4 slots.
The next block of code will expand the outer query FROM clause to 4 slots.
The next call to _step() (if any) will return SQLITE_ERROR and _finalize() will return NOMEM.
The next call to sqlite3_randomness() will reseed the PRNG using a single call to the xRandomness method of the default VFS.
The next call to sqlite3rbu_step() may either add further data to the *-oal file, or compute data that will be added by a subsequent call.
The next call to sqlite3rbu_step() will copy a page of data from the *-wal file into the target database file.
The next call to sqlite3rbu_step() will move the *-oal file to the equivalent *-wal path.
The next database user will have to do hot-journal rollback before accessing the database file.
The next entry is on the current page.
The next few lines are basically copied from gd2CreateFromFile we change the file size, so don't want to use the code directly.
The next global variable is incremented each time the OP_Found opcode is executed.
The next global variable is incremented each type the OP_Sort opcode is executed.
The next global variable records the size of the largest MEM_Blob or MEM_Str that has been used by a VDBE opcode.
The next group of routines are convenience wrappers around the VFS methods.
The next group of routines implement the I/O methods specified by the sqlite3_io_methods object.
The next group of variables are used to track whether or not the transaction counter in bytes 24-27 of database files are updated whenever any part of the database changes.
The next index associated with the same table
The next instruction executed will be  the one at index P2 from the beginning of the program.
The next iteration of the do-loop balances the parent page.
The next iteration of the do-loop will balance the child page.
The next iteration of the do-loop will balance the parent page to correct this.
The next key to be read is cached in nKey/aKey.
The next line would break the image on writeback:
The next page to be freed
The next routine used only within assert() statements
The next rowid or record number (different terms for the same thing) is obtained in a two-step algorithm.
The next sections is a series of control #defines.
The next table maps tokens (terminal symbols) into fallback tokens.
The next table maps tokens into fallback tokens.
The next thing included is series of defines which control various aspects of the generated parser.
The next three routines implement inverse colormap filling.
The next two lines ignore swap of low- and high-order 2 bytes.
The next two rules are only for extended grapheme clusters (but that's what we are implementing).
The node at the root of the subtree is modified as follows:  Expr.op        Changed to TK_COLUMN Expr.pTab      Points to the Table object for X.Y Expr.iColumn   The column index in X.Y.
The node containing the cell to be read
The node data is passed to this  function via the zNode/nNode parameters.
The node from which to extract a coordinate
The node from which to extract the ID
The node into which the cell is to be written
The node may be a leaf or an internal node.
The node need not contain any terms, but the header must be written before this function is called.
The nodeno of the root node is always 1.
The nodes on the bottom level of the tree were solved by DLASDQ.
The nodes on the bottom level of the tree were solved by SLASDQ.
The non-greedy case could be replaced by an OP_EXACT, but it is probably not worth it.
The nonce is used to prevent replay attacks but some servers do not support it.
The noopFunc macro provides this.
The normal repeating kets try the rest of the pattern or restart from the preceding bracket, in the appropriate order.
The normal selected inner loop
The not_before and not_after fields must be filled in.
The nth character of the string indicates the column affinity that should be used for the nth field of the index key.
The nth character of the string indicates the column affinity that should be used for the nth memory cell in the range.
The number 17 is used here in order to account for the space used by the 15 character random suffix and the two trailing NUL characters.
The number if errors is returned.
The number is always rounded up to a multiple of 2.
The number is between 0 and 1.
The number is greater than 1.
The number is in base 10, do it the fast way.
The number is some other base.
The number of +value+ parameters must be less than or equal to the number of attributes defined for the structure.
The number of ZEND_CASE instructions usually terminated by ZEND_FREE that finally kills the value.
The number of base digits for the +double+ data type.
The number of bits in a Bitmask.
The number of bits of precision can be adjusted by changing these symbols.
The number of bytes of available key/data is written into *pAmt.
The number of bytes written is returned.
The number of cells to add to this page
The number of different kinds of things that can be limited using the sqlite3_limit() interface.
The number of digits after the decimal point is SCALE.
The number of elements in the column-list is returned.
The number of elements in the deptable
The number of elements in the hashtable
The number of indices is returned.
The number of integers to decode
The number of integers to encode
The number of levels of backtrace to save in new allocations.
The number of levels of transitivity is limited, but is enough to handle most commonly occurring SQL statements.
The number of milliseconds of sleep actually requested from the operating system is returned.
The number of nodes created on this level is LLST * 2.
The number of nonzero histogram cells within this box
The number of notReady tables
The number of overflow pages to load for this (and therefore all subsequent) tokens is greater than the estimated number of pages  that will be loaded if all subsequent tokens are deferred.
The number of pcache slots
The number of rows between the two bounds is then just iUpper-iLower.
The number of rowset entries per allocation chunk.
The number of siblings of the page might be increased or decreased by  one or two in an effort to keep pages nearly full but not over full.
The number of subtype bytes preserved by SQLite might increase in future releases of SQLite.
The number of symbols on the RHS of the reduced rule.
The number of tables in the FROM clause is limited by a test early in the sqlite3WhereBegin() routine.
The number of tables in the FROM clause is limited by the number of bits in a Bitmask
The number of terms in a join is limited by the number of bits in prereqRight and prereqAll.
The number of times that a ReadFile(), WriteFile(), and DeleteFile() will be retried following a locking error - probably caused by  antivirus software.
The number of times that a ReadFile(), WriteFile(), and DeleteFile() will be retried following a locking error - probably caused by antivirus software.
The number of virtual machine operations can be  used as a proxy for the total work done by the prepared statement.
The number returned includes any quotes used but does not include the null terminator.
The number we're after is the integer represented by those digits times 10**e
The numbers are obtained at random and have no special meaning, other than being distinct from one another.
The numbers generated here are based on typical values found in actual indices.
The numbers wrap if rng is sufficiently large.
The numeric values encoded here (other than PAGER_JOURNALMODE_QUERY) are exposed in the API via the "PRAGMA journal_mode" command and therefore cannot be changed without a compatibility break.
The object reference may be different sizes on different platforms, so it should never include the itemsize here.
The object represents the type library which contains the WIN32OLE object.
The object to be destroyed
The official C-language API documentation for SQLite is derived from comments in this file.
The offset  is the offset of the first rowid in the current doclist.
The offset data is the offset to the starting bracket from the start of the whole pattern.
The offset for ReadFile.
The offset for WriteFile.
The offset in this class is usually zero, and cannot be specified directly.
The offset is relative adjustment, which determines decoded local time with the day count.
The offset returned is to the start of the write-ahead log frame-header.
The offset should be -1 to +1, and its precision is assumed at most second.
The offset will always be the same for converting to title case.
The offset_vector values are handled similarly to the normal case above.
The offsets array is on a 4-byte boundary to keep things efficient for architectures that need such a thing.
The old boolean indexing seemed to have some check to allow wrong dimensional boolean arrays in all cases.
The old buffer interface
The old colset object (if any) is not freed in this case.
The old style of the West is the Julian calendar which was adopted by Caesar.
The old.* record is currently completely empty.
The on-disk format is big-endian and needs to be converted for little- endian platforms.
The on-disk record stores integer coordinates if eInt is true and it stores 32-bit floating point records if eInt is false.
The onError parameter determines which (if any) of the statement and/or current transaction is rolled back.
The one bit that is set will correspond to the common table.
The one byte written is an ASCII 'S' character which also happens to be the first byte in the header of every SQLite database.
The one that was just advanced (iPrev) and the one next to it in the array.
The one-pass algorithm only works if the WHERE clause constrains the statement to update a single row.
The ones_like function shouldn't really be a ufunc, but while it still is, this provides type resolution that always forces UNSAFE casting.
The only argument is a pointer to a function which works like malloc.
The only consequence will be disabled optimizations.
The only database page the statement reads is page 1, which is guaranteed to be in the cache.
The only declarations within blocks below are for variables that do not have to be preserved over a recursive call to RMATCH().
The only difference  is that the counter used is stored as part of each individual statement object (struct Vdbe).
The only difference being the specification of leap years.
The only difference between OP_CLASS and OP_NCLASS occurs when a data character outside the range is encountered.
The only difference between state 1 and state 2 is that if the integer encountered in state 1 is not 0 or 1, then we need to increment the column 0 "nDoc" count for this term.
The only difference will be a combined handling of them in the end.
The only error that can occur here is a malloc() failure.
The only exception is that an IO error may have occurred, causing an emergency rollback.
The only exception to this is when the in-memory journal is being used by a connection using the atomic-write optimization.
The only function it is possible to call on the supplied sqlite3_changeset_iter handle is sqlite3changeset_fk_conflicts().
The only interesting finder-function is autolockIoFinder, which looks at the filesystem type and tries to guess the best locking strategy from that.
The only known failure mode for _open_osfhandle() is EMFILE, in which case GetLastError() will return zero.
The only number that _can_ be determined is the number of rows that have already been pre-fetched by the client library.
The only possible error from InitPage
The only potential use of repetition is in cases when the assertion is optional.
The only purpose is to provide an easy way to test the sqlite3AbsInt32() function.
The only qualification being that each varint must be stored contiguously.
The only read-lock obtained by a connection in read-uncommitted mode is on the sqlite_master  table, and that lock is obtained in BtreeBeginTrans().
The only real difference between fdatasync() and fsync(), Ted tells us, is that fdatasync() will not flush the inode if the mtime or owner or other inode attributes have changed.
The only reason the dbFileSize variable is required is to suppress  unnecessary calls to xTruncate() after committing a transaction.
The only reason to read this page is to obtain the page number for the next page in the overflow chain.
The only sibling page is the right-child of the parent.
The only special case when we should return -1 ourselves, because inet_addr() considers it wrong.
The only thing omitted is the automatic recompile if a  schema change has occurred.
The only thing that actually depended on the NotImplemented is array_richcompare, which did two things with it.
The only thing that remains to commit the transaction is to finalize  (delete, truncate or zero the first part of) the journal file (or  delete the master journal file if specified).
The only thing the main thread can write to events is NULL, so we can just try one more time
The only thing the thread can write to commands is NULL, so we can just try one more time
The only way to find out whether SQLite automatically rolled back the transaction after an error is to use this function.
The only way to reach the limit is with sqlite3_malloc()
The only way we can do that is to re-do the match at the same point, with a flag to force SKIP with an argument to be ignored.
The opcode being coded
The opcode mnemonic, e.g. "add"
The opcode to be commented
The opcodes to be added
The open cursor on the table
The open database file
The open mode would be "rb:ASCII-8BIT".
The operand has no effect on the shape.
The operand token for setting the span
The operand, and output
The operands are usually destroyed by the opcode handler.
The operation may have changed the layout, so we have to get the internal pointers again.
The operation to code triggers for (INSERT, UPDATE or DELETE) is given by the op parameter.
The operation will return SQLITE_LOCKED to the user because it requires a lock that will not be available until connection pBlocker concludes its current transaction.
The operations are defined in the subclasses, Zlib::GzipReader for reading, and Zlib::GzipWriter for writing.
The operations are defined in the subclasses: Zlib::Deflate for compression, and Zlib::Inflate for decompression.
The operator for aggregate functions is changed to TK_AGG_FUNCTION.
The optimization is also always enabled for temporary files.
The optimizer is able to deliver rows in group by order so we do not have to sort.
The option can be set in the regex by (*NO_START_OPT) or passed in match-time options.
The option integer should be logical-or of constants such as Encoding::Converter::INVALID_REPLACE, etc.
The option is returned as a Socket::Option object.
The option should be a hash or an integer.
The optional  _limit_ argument specifies how many characters of each line to return.
The optional +level+ argument determines the level of recursion to flatten.
The optional +rng+ argument will be used as the random number generator.
The optional _filename_ and _lineno_ parameters set the text for error messages.
The optional _limit_ argument specifies how many characters of each line to return.
The optional _start_ parameter determines the number of initial stack entries to omit from the top of the stack.
The optional argument eps is always ignored.
The optional argument n is length of fractional seconds.
The optional argument specifies the record separator.
The optional parameter allows the user to determine the new filename extension (default is .zip or .tar).
The optional parameter allows the user to determine the new filename extension (default is phar).
The optional parameter is used to return a status code to the invoking environment.
The optional paramtype acts as a hint for drivers that have alternate quoting styles.
The optional second parameter sets the message associated with the exception, and the third parameter is an array of callback information.
The optional second parameter supplies a return value for the +catch+ block, which otherwise defaults to +nil+.
The options Hash gives details for conversion.
The order in which the changes related to a single table are stored is undefined.
The order in which the interchanges are made is N to IHI+1, then 1 to ILO-1.
The order in which they are updated is important, as this code needs to avoid disrupting any page from which cells may still to be read.
The order in which values are removed/returned is not guaranteed.
The order is preserved from the original array.
The order of destruction is important here.
The order of flex items is always defined by document order.
The ordering is a comma delimited list of provider names.
The ordering of modules in the resulting array is not defined.
The ordering of non-rejected elements is maintained.
The orders of each hashes are not compared.
The origin (zero) of the returned value varies.
The origin in CLOCK_REALTIME is defined as the Epoch (1970-01-01 00:00:00 UTC).
The original API set ends here.
The original IP multicast implementation by Steve Deering NetBSD OpenBSD SunOS
The original LIKE operator
The original SQL text is source code.
The original and principal author of md5.c is L.
The original argv is then 'clobbered' to store the process title.
The original code caused an unsigned overflow in 64 bit systems, so now we use a conditional statement.
The original code used just to take the least significant 8 bits of octal numbers (I think this is what early Perls used to do).
The original comments are included here for completeness.
The original design allowed these amounts to vary, but as of version 3.6.0, we require them to be fixed.
The original expression
The original handler needs to be restored after pclose()
The original heap-recursive code used longjmp().
The original idea for these functions came from Scott Wimer.
The original mode is restored after the block is executed.
The original mpl interface was also based on GIST.
The original page number
The original where.c file retains the code that does query planning and analysis.
The original working directory is restored when the block exits.
The orthogonal matrices U and VT are optionally computed in compact form.
The other allowed parameters to sqlite3_mutex_alloc() each return a pointer to a static preexisting mutex.  Six static mutexes are used by the current version of SQLite.
The other bytes change randomly with each file change when a codec is in use.
The other columns of A are unchanged.
The other columns should be set to the values that make up the new record  to insert.
The other hints are provided for extentions that use the SQLite parser and code generator but substitute their own storage engine.
The other one to retrieve the list of dependencies associated with an object.
The other should be a date object or a numeric value as an astronomical Julian day number.
The other should be a numeric value.
The other sqlite3_backup_XXX() API functions, backup_remaining() and backup_pagecount() are not thread-safe functions.
The other statements may still be reading from the database.
The other thread can clear the list, so we know events can only be NULL until we change it.
The other thread has signaled us on this pipe and we've received the signal, now we need to read all the data so we can select on this fd again.
The other two will be 0.
The other values are only used when there exists one or more separate worker threads.
The othercase might be the same value.
The others are all on OPFLAG_FORDELETE cursors or else are marked with the AUXDELETE flag.
The others have a common form.
The outer loop does one iteration for each element seen.
The outer reduce loop
The output array must be contiguous, so the first stride is fixed
The output buffer should be big enough to hold the whole output file and a NUL terminator at the end.
The output cell may already have a buffer allocated.
The output data pointer points to the first operand data.
The output from the stream is preserved in output buffer.
The output is always in the same format as the input.
The output line number is small enough that we are still in the main program.
The output of the mkkeywordhash.c program is written into a file named keywordhash.h and then included into this source file by the #include below.
The output of the recursive-query is added back into the Queue table.
The output operand is set to the first input operand
The output position list - written to *pp - is a copy of *pp2 with those entries that are not sufficiently NEAR entries in *pp1 removed.
The output stack uses the rest of htab, and contains characters.
The output struct is copied, and may be freed by the caller.
The output values are undefined in this case.
The output variable *ppExpr is populated with an allocated Fts3Expr  structure, or set to 0 if the end of the input buffer is reached.
The output vector is stored on the stack, and contains pointers to characters.
The output vector wasn't big enough
The output written into *pp contains all positions of both *pp1 and *pp2 in sorted order and with any duplicates removed.
The overall collating sequence is BINARY If this routine returns TRUE, that means that the RHS can be substituted for the LHS anyplace else in the WHERE clause where the LHS column occurs.
The overall value of the entire constructed encoding is of the type of the first primitive encoding to be found.
The overflow condition depends on INTEGER_PACK_2COMP.
The overhead of adding the "rbu" VFS to the system is negligible for  non-RBU users.
The overlying software layer calls this routine when all of the data on the given page is unused.
The overrun tests check for a slightly smaller size so that they detect the overrun before it actually does run off the end of the data block.
The p1 parameter is set to 0 for an old.rowid reference, or to (i+1) to reference another column of the old.* pseudo-table, where  i is the index of the column.
The p2 value always comes from a prior OP_CreateTable opcode and that opcode will always set the p2 value to 2 or more or else fail.
The pA side might be using TK_REGISTER.
The pAppData field of the sqlite3_vfs VFS objects are initialized to be pointers to the correct finder-function for that VFS.
The pAppData is a pointer to a pointer to the "finder" function.
The pAppData pointer is used as the only parameter to xInit and xShutdown.
The pArg from the previously registered  profile function is returned.
The pArg from the previously registered trace is returned.
The pBt is no longer on the sharing list, so we can access it without having to hold the mutex.  Clean out and delete the BtShared object.
The pBuf element of the returned sqlite3_pcache_page object will be a pointer to a buffer of szPage bytes used to store the content of a  single database page.
The pBuf parameter is the initial value of a pointer which will receive the new memory.
The pCheck field normally holds CHECK constraints on an ordinary table, but for a VIEW it holds the list of column names.
The pCtx argument  is actually a pointer to the Pager structure.
The pCtx argument points to a UCollator structure previously allocated using ucol_open().
The pCur cursor is used only to define what table the record should be inserted into, and is left pointing at a random location.
The pDatabase points to the table name and the pTable points to the database name.
The pDbPage reference remains valid.
The pDirtyPrev pointers are corrupted by this sort.
The pEList corresponds to the result set of a SELECT and is NULL for other statements.
The pExpr should be a TK_COLUMN expression.
The pExtra element of sqlite3_pcache_page will be a pointer to the szExtra bytes of extra storage that SQLite has requested for each entry in the page cache.
The pFirst token is the first token in the sequence of tokens that describe the type of the column currently under construction.
The pFix structure must have been initialized by a prior call to sqlite3FixInit().
The pGroup local variable will normally be initialized by the pcache1EnterMutex() macro above.
The pH containing "elem"
The pH to be searched
The pKey field is zero.
The pList parameter holds EXPRLIST in the first form of the INSERT statement above, and pSelect is NULL.
The pMem argument must be either a NULL pointer or a pointer to an 8-byte aligned block of memory of at least sz*N bytes, otherwise subsequent behavior is undefined.
The pMem is known to contain content that needs to be destroyed prior to a value change.
The pMem object must have been initialized.
The pMem structure is assumed to be uninitialized.
The pNext field is the only field in the sqlite3_vfs structure that SQLite will ever modify.
The pNext field points to the NameContext in the parent query.
The pOn and pUsing parameters are the content of the ON and USING clauses.
The pOuter field of the subclauses points to the WhereClause object for the whole clause.
The pPKey2 key must be a parsed key such as obtained from sqlite3VdbeParseRecord.
The pParent field points back to the parent page.
The pPrior and regPrior parameters are used to implement a cache to avoid unnecessary register loads.
The pSpace buffer is used to store a temporary copy of the divider cell that will be inserted into pParent.
The pSpace buffer will be freed after the next call to balance_nonroot(), or just before this function returns, whichever comes first.
The pSrc corresponds to the FROM clause of a SELECT or to the table being operated on by INSERT, UPDATE, or DELETE.
The pTable and pDatabase parameters are NULL for subqueries.
The pVal argument is known to be a value other than NULL.
The pWhere argument is an optional WHERE clause that restricts the set of rows in the view that are to be added to the ephemeral table.
The pX parameter is the expression on the RHS of the IN operator, which might be either a list of expressions or a subquery.
The pX.nData,pData,nZero fields hold the content of the row.
The pX.nKey is the rowid or INTEGER PRIMARY KEY of the row.
The pX.pKey value must be NULL.
The packing above might be so out of balance as to be illegal.
The packing computed by the previous block is biased toward the siblings on the left side (siblings with smaller keys).
The packing computed by the previous block is biased toward the siblings on the left side.
The padding is done by adding '0's to the left of the string that is going to be printed.
The padding is done by printing the character ch.
The padding type value
The page and offset from which the current term was read.
The page begins at offset *pOffset into the file.
The page being analyzed
The page being overwritten.
The page cache implementation is not obligated to free any memory, but well-behaved implementations should do their best.
The page cache subsystem reads and writes a file a page at a time and provides a journal for rollback.
The page cache will allocate instances of this object.
The page data is not required.
The page footer consists of a single varint for each term located on the page.
The page handle passed as the first argument refers to a dirty page  with a page number other than iNew.
The page is always associated with the Pager object passed as the first  argument.
The page is fetched as read-write unless pCur is not NULL and is a read-only cursor.
The page is left marked dirty in this case.
The page is then marked  not dirty.
The page is written into the  main journal or sub-journal as required.
The page must be corrupt
The page number identifies the page that contains the cell with a pointer to this overflow page.
The page number identifies the parent page in the btree.
The page number of a page in journal
The page of the frame to be written
The page should be initially empty.
The page size can be any power of 2 between 512 and 65536.
The page size must be a power of 2 between 512 and 65536.
The page that contains a pointer to pDbPage
The page that contains the Cell
The page that contains the cell
The page that currently resides at pgnoRoot will be moved to the allocated page (unless the allocated page happens to reside at pgnoRoot).
The page that pCur currently points to has just been modified in some way.
The page to be assemblied
The page to be fetched is determined by the key.
The page-mapping is an array of HASHTABLE_NPAGE (or HASHTABLE_NPAGE_ONE for the first index block) 32-bit page numbers.
The page-number  is not used in this case.
The page-number identifies the previous page in the overflow page list.
The page-number is not used in this case.
The pageDestructor() routine handles that chore.
The pager also implements file locking to prevent two processes from writing the same database file simultaneously, or one process from reading the database while another is writing.
The pager being played back
The pager cache has created a new page.
The pager calls this method to signal that it has done a rollback and that the database is therefore unchanged and it hence it is OK for the transaction change counter to be unchanged.
The pager falls back to PAGER_READER state if successful, or PAGER_ERROR state if an error occurs.
The pager filename is invariant as long as the pager is open so it is safe to access without the BtShared mutex.
The pager invokes the busy-handler if sqlite3OsLock() returns  SQLITE_BUSY when trying to upgrade from no-lock to a SHARED lock, or when trying to upgrade from a RESERVED lock to an EXCLUSIVE  lock.
The pager is always 'purgeable' (not an in-memory database).
The pager is not an in-memory pager.
The pager is used to access a database disk file.
The pager journal filename is invariant as long as the pager is open so it is safe to access without the BtShared mutex.
The pager marks the page as clean so that it does not get written to disk.
The pager must already hold the exclusive lock on the main database file before invoking this operation.
The pager must hold at least a RESERVED lock when this function is called.
The pager never allocates the pages involved in locking therefore.
The pager open on the database file
The pager should eventually be freed by passing it to sqlite3PagerClose().
The pager state may be changed from PAGER_ERROR to PAGER_OPEN here without clearing the error code.
The pager that owns pPg
The pager this page is part of
The pager to set safety level for
The pager_playback() routine will discover that the journal file is not really hot and  will not roll it back.
The pager_truncate() call uses xFilesize() to measure the database file on disk, and then truncates it if required.
The pager_unlock() routine will be called before returning to unlock the file.
The parameter "op" must be one of TK_UNION, TK_EXCEPT, TK_INTERSECT or TK_ALL.
The parameter "x" must have been obtained from a prior call to sqlite3VdbeMakeLabel().
The parameter 'shape' may be NULL, in which case it is filled in from the iterator's shape.
The parameter +symbol+ identifies the variable (as either a string name or a symbol identifier).
The parameter N is measured in bytes.
The parent key is a composite key that includes the IPK column
The parent or outer SELECT statement
The parent page is the page that contains a pointer to the child.
The parent process has then to wait for the master process to initialize to return a consistent exit value.
The parse context of the CREATE TRIGGER statement
The parseCellPtr() function fills in this structure based on information extract from the raw disk page.
The parsed WHERE clause
The parser builds the list this way.
The parser calls this routine after the CREATE VIRTUAL TABLE statement has been completely parsed.
The parser calls this routine for each token after the first token in an argument to the module name in a CREATE VIRTUAL TABLE statement.
The parser calls this routine in order to create a new VIEW
The parser calls this routine once for each column declaration in a CREATE TABLE statement.
The parser calls this routine when it finds a SELECT statement in body of a TRIGGER.
The parser calls this routine when it first sees a CREATE VIRTUAL TABLE statement.
The parser calls this routine when it recognizes an ANALYZE command.
The parser calls this routine when it sees a DELETE statement inside the body of a CREATE TRIGGER.
The parser calls this routine when it sees an INSERT inside the body of a trigger.
The parser calls this routine when it sees an UPDATE statement inside the body of a CREATE TRIGGER.
The parser calls this routine when it sees the first token of an argument to the module name in a CREATE VIRTUAL TABLE statement.
The parser ignores leading whitespaces and trailing garbage.
The parser initially stores the operator with A.
The parser inserted a special expression with the TK_ALL operator for each "*" that it found in the column list.
The parser inserted a special expression with the TK_ASTERISK operator for each "*" that it found in the column list.
The parser structure is passed in.
The parser to be deleted
The parser to be shifted
The parser will also automatically tag the schema table as read-only.
The parsing (and code generating) context
The particular combination of bits in each WhereLoop help to determine the algorithm that WhereLoop represents.
The particular hint given (and the type and number of the varargs parameters) is determined by the eHintType parameter.
The particular policies used here have proved out well in experimental comparisons, but better ones may yet be found.
The pass2 scanning routines call fill_inverse_cmap when they need to use an unfilled entry in the cache.
The passed in "connection" can be a cached stub from plist or freshly created.
The passed string obviously doesn't descend from the regular serializer.
The password first, since that is what is most unknown
The patch is not applied unless NumPy is configured to link with Apple's Accelerate framework.
The patchlevel for this ruby.
The path only contained slashes
The path to a directory containing CA certificates in PEM format.
The path to a file containing a PEM-format CA certificate
The pathname depends on the Operating System: Unix, Windows, etc.
The pattern pointer (ptr) is on the bracket.
The payload for an entry and the preceding pointer are combined to form a "Cell".
The pcache.c and pager.c modules deal pointers to PgHdr objects.
The pcache1.separateCache variable is true if each PCache has its own private PGroup (mode-1).
The pcache1Fetch() wrapper invokes the appropriate routine.
The pending byte page is set aside for use by the VFS layers as space for managing file locks.
The pending byte page is set assign for use by the VFS layers as space for managing file locks.
The per-operand flags for the outer loop
The performance of this function is not critical.
The period of this function is equal to the product of both primes.
The permission should be an integer.
The permutation applies to registers only.
The permutation is only valid until the next OP_Compare that has the OPFLAG_PERMUTE bit set in P5.
The phrase extracted from pExpr
The phrase iterator passed as the second argument:  features at least one token that uses an incremental doclist, and   does not contain any deferred tokens.
The phrase object to trim the doclist of
The phrase the token belongs to
The pipes are only used signal the other thread that something is ready.
The platform doesn't support this hint.
The platform for this ruby
The point is to increment the last character before the first wildcard.
The pointer is allowed to be NULL, which is prudent.
The pointer is always the first 4 bytes of the page in this case.
The pointer is overwritten with the old value.
The pointer map entries for all these pages need to be changed.
The pointer map is a lookup table that identifies the parent page for each child page in the database file.
The pointer map is used to locate the parent page quickly.
The pointer map page number
The pointer may subsequently be used as an argument to the function free(3).
The pointer may then be retrieved by the current or any future invocation of the same fts5 extension function made as part of of the same MATCH query using the xGetAuxdata() API.
The pointer p is currently at the last byte of the character.
The pointer points at a child  page of pPage.
The pointer points at an overflow page pointed to by one of the cells on pPage.
The pointer points at the next overflow page in the list.
The pointer returned by this routine looks directly into the cached page of the database.
The pointer returned in pzBuf must be freed via sqlite3_free().
The pointer returned is ephemeral.
The pointer to the function to invoke is passed as the fourth parameter to this procedure.
The pointer to the top of the heap.
The points are on the facet's plane.
The pool of bytes for shared locks begins at SHARED_FIRST.
The port, socktype, protocol of the result is filled by zero.
The position could have changed, recalculate
The position list belonging to document  (Fts5SegIter.iRowid).
The position list data  immediately follows the key data in memory.
The position list in this case is populated as for "A * C" before returning.
The position lists may or may not be edited if 0 is returned.
The positions numbers are not stored literally but rather as two more than the difference from the prior position, or the just the position plus 2 for the first position.
The posix advisory locking structure
The posix call avoids
The posspropstab table has four entries per row.
The pre-update hook implementations.
The pre-update-hook, on the other hand should be invoked unless table pTab is a system table.
The precious way is to use /sys/devices/system/cpu/online.
The preferred mechanism is memfd_create(2) (see the upper description).
The prefix should normally always be present.
The prepared statement
The prepared statement being evaluated
The prepared statement under construction
The prepared statements need to know in advance the complete set of attached databases that will be use.
The prepared stmt under constructions
The presence of a busy handler does not guarantee that it will be invoked when there is lock contention.
The present code works in the post-conversion color space, typically RGB.
The present interface uses parts of the original, but places them in the entirely different framework of a Python type.
The previous line is meant for vim and emacs, so it can correctly fold and unfold functions in source code.
The previous paragraph was written in 2005.
The previous position written to this list is *piPrev.
The previous seed value is returned.
The primary delete occurs on a cursor that is not a BTREE_FORDELETE cursor.
The primary goals are portability and ease of use.
The primary key for the row to be deleted must be stored in a sequence of nPk memory cells starting at iPk.
The primary purpose of this is to allow access to the sqlite_master table even when its contents have been corrupted.
The primary purpose of this method is to "tap into" a method chain, in order to perform operations on intermediate results within the chain.
The principle used to locate the table name in the CREATE TABLE  statement is that the table name is the first non-space token that is immediately followed by a TK_LP or TK_USING token.
The print_pager_state() routine is intended to be used by the debugger only.
The private key (BN) can be retrieved with EC#private_key.
The private key may be retrieved with DH#priv_key.
The private key may be retrieved with DSA#private_key.
The private key should be an instance of OpenSSL::PKey.
The probability is close to 0 in practice.
The problem has been fixed with the "v2" interface.
The problem here is that cp1252 looks like SJIS for certain chars.
The problem here is that cp1254 looks like SJIS for certain chars.
The problem in trying to be exactly like Perl is in the handling of escapes.
The problem is that in order to update a b-tree, the leaf page (at least) containing the entry being inserted or deleted must be modified.
The procedures will be redesigned.
The process of transforming a YAML stream into a sequence of events is divided on two steps: Scanning and Parsing.
The processing is much simpler since there is only a single row of output.
The program argument is an array of integers that defines the test.
The program name loops through the master table and deletes every row that refers to a table of the same name as the one being dropped.
The program should be interrupted before this sleep finishes.
The progress callback
The progress callback will be invoked every nOps opcodes.
The progress handler callback must not do anything that will modify the database connection that invoked the progress handler.
The proper way is to use a method that always takes the same amount of time when comparing two values, thus not leaking any information to potential attackers.
The properties in each row are those that apply to the character set in question.
The proxy file - a single-byte file used for all advisory file locks normally taken on the database file.
The proxy file and the lock file are never deleted so they only need to be created the first time they are used.
The proxy lock file path for the database at dbPath is written into lPath,  which must point to valid, writable memory large enough for a maxLen length file path.
The proxy locking style is intended for use with AFP filesystems.
The proxyLockingContext has the path and file structures for the remote  and local proxy files in it
The ptrmapCheckPages() contains assert() statements that verify that all pointer map pages are set correctly.
The public SQLite interface.
The public interface to sqlite3Realloc.
The public key 'pnt' can be calculated from 'd' or is defined by 'x' and 'y'
The public key (EC::Point) can be retrieved with EC#public_key.
The public key may be retrieved with DH#pub_key.
The public key may be retrieved with DSA#public_key.
The public_key portion of the certificate must contain a valid public key.
The purpose of such selects is to call user-defined functions that have side effects.
The purpose of the following assert() is to check that only a single call to balance_quick() is made for each call to this function.
The purpose of the pointer map is to facility moving pages from one position in the file to another as part of autovacuum.
The purpose of the wrapper is to provide the ability to simulate a malloc failure, so that the handling of an error in sqlite3_os_init() by the upper layers can be tested.
The purpose of this SHARED lock is to prevent any other client from unlinking the WAL or wal-index file.
The purpose of this is to test that the fts3_tokenizer() function can be used as designed by the C-code in the queryTokenizer and registerTokenizer() functions above.
The purpose of this limit is to prevent various integer overflows.
The purpose of this routine is to linearize, in some sense, stack addresses for alloca.
The purpose of this superclass is to define certain fields that are common to all module implementations.
The push operation may be blocked if the capacity is full.
The qhull data structure contains pointers into the points array.
The qhull data structure is not initialized until qh_new_qhull().
The quality parameter for Wbmp stands for the threshold when called from image2wbmp()
The quality parameter for gd2 stands for chunk size
The query generator uses an array of instances of this structure to help it analyze the subexpressions of the WHERE clause.
The query is a simple term lookup that matches at most one term in the index. All that is required is a straight hash-lookup.
The query logic likewise merges doclists so that newer data knocks out older data.
The query strategy is to look for an equality constraint on the json column.
The query under construction
The quotient is rounded towards negative infinity.
The r1 and r2 fields are the values to return if this key is less than or greater than a key in the btree, respectively.
The r1 and r2 member variables are only used by the optimized comparison functions vdbeRecordCompareInt() and vdbeRecordCompareString().
The rScore is the primary key.
The ram filesystem has no write behind so it is ordered
The random check-hash initializer
The random initializer is important, because garbage data that appears at the end of a journal is likely data that was once in other files that have now been deleted.
The range defaults to everything
The range may have an upper bound, a lower bound, or both.
The range of the result value depends on INTEGER_PACK_2COMP and INTEGER_PACK_NEGATIVE.
The rank-one modified system is thus diag( D )  +  RHO *  Z * Z_transpose.
The rank-one modified system is thus diag( D ) * diag( D ) +  RHO *  Z * Z_transpose.
The rarely-used 'wrap-reverse' is not supported.
The rationale behind this is mostly performance.
The rationale for this is that this  function is used to read database headers, and a new transient or zero sized database has a header than consists entirely of zeroes.
The raw F-S error computation can potentially compute error values of up to +- MAXJSAMPLE.
The rbu_state table is used to save the state of a partially applied update so that it can be resumed later.
The read end of a pipe will not generate an end of file condition if there are any writers with the pipe still open.
The read lock is released when all cursors are closed.
The read lock on the database file is released when the last cursor is closed.
The read/write flags are mutually exclusive
The read/write settings
The readdirfunc declaration can't be prototyped, because it is assigned, below, to two functions which are prototyped in glob.h and dirent.h as taking pointers to differently typed opaque structures.
The reader algorithm in the previous paragraphs works correctly, but  because frames for page P can appear anywhere within the WAL, the reader has to scan the entire WAL looking for page P frames.
The reader uses this recorded "mxFrame" value for all subsequent read operations.
The real implementation of xFetch and xUnfetch
The real indices of the table are only considered if the NOT INDEXED qualifier is omitted from the FROM clause
The real pathname doesn't contain symlinks or useless dots.
The real result may be above what can be represented in a signed long.
The reason Fortran-order is returned when a multi-index is not enabled is that this is providing a direct view into how the iterator traverses the n-dimensional space.
The reason a single byte cannot be used instead of the 'shared byte range' is that some versions of windows do not support read-locks.
The reason for doing this instead of deleting the VdbeFrame immediately is to avoid recursive calls to sqlite3VdbeMemRelease() when the memory cells belonging to the child frame are released.
The reason for that is that fancy indexing uses nonzero, and only the result of nonzero is checked for legality.
The reason of EINVAL may be other than SOCK_CLOEXEC.
The reason to have this function list stacked is each function now can define a scoped destructor.
The recipient agrees to determine applicability of information provided.
The record consists of a single 32-bit configuration cookie value followed by a list of  SQLite varints.
The record consists of multiple bytes.
The record created does not contain anything yet.
The record flows over onto one or more overflow pages.
The record number is not previously used as a key in the database table that cursor P1 points to.
The record-size field is a 2 byte varint and the record  fits entirely on the main b-tree page.
The records associated with INSERT changes are in the same format as for changesets.
The recursive SELECT to be coded
The recursive calls normally come through sqlite3_os_init() when it invokes sqlite3_vfs_register(), but other recursive calls might also be possible.
The recursive part of a recursive CTE
The redirection maps a file descriptor in the child process.
The reduceat indices - ind must be validated outside this call
The reduction is performed by a unitary similarity transformation Q' * A * Q.
The reduction is performed by an orthogonal similarity transformation Q' * A * Q.
The refcount is decremented in the persistent helper
The reference count is a 16-bit field, initialized to zero.
The reference count of the VTable structure associated with database  connection db is decremented immediately (which may lead to the  structure being xDisconnected and free).
The reference count on pShmNode has already been incremented under the cover of the unixEnterMutex() mutex and the pointer from the new (struct unixShm) object to the pShmNode has been set.
The reference count on pShmNode has already been incremented under the cover of the winShmEnterMutex() mutex and the pointer from the new (struct winShm) object to the pShmNode has been set.
The reference string for digits.
The refinement below will clean this approximation up.
The reg argument is the address of the first in an array of registers  that contain the values substituted for the new.* and old.* references in the trigger program.
The reg, orconf and ignoreJump parameters passed to this function are the same as those described in the header function for sqlite3CodeRowTrigger()
The regNewData parameter is the first register in a range that contains the data to be inserted or the data after the update.
The regOldData parameter is similar to regNewData except that it contains the data prior to an UPDATE rather than afterwards.
The regPrev register set holds the previously output value.
The regex below is based on a regex by Michael Rushton.
The regex is partly compiled into this space, but the compiled parts are discarded as soon as they can be, so that hopefully there will never be an overrun.
The regex might still be not perfect, but catches the most of IP variants.
The regexp must be a literal without interpolation and placed at left hand side.
The regions in the following copy operation cannot overlap.
The register P3 contains the maximum number of allowed errors.
The register allocator depends on this property.
The register or immediate operand.
The registers begin with iDest and increase consecutively.
The relationship between the operators can be horizontal (concatenation) and vertical (sub-expression) (See struct backtrack_common for more details).
The relative path is stored as a nul-terminated string in the buffer pointed to by zPath.
The relative text table.
The remainder can be handled by code that is common with the non-zero minimum case below.
The remainder of the node contains the node entries.
The remainder of the text passed to the MATCH operator are used as  the special query parameters.
The remainder of this file contains the declarations of the functions that make up the Pager sub-system API.
The remainder of this procedure cleans  up the shared-btree.
The remainder will be in r1, the upper 16 bits of the quotient will be in d2 and the lower 16 bits will be in d1.
The remaining 5 to 6 days in the year are grouped at the end and are holidays.
The remaining characters (should be UTF8) are just passed through and appended to the result.
The remaining code is the reference MD5 code (md5c.c) from rfc1321
The remaining directives also may take a count, indicating the number of array elements to convert.
The remaining entries all point to query results.
The remaining entries cache the RtreeNode for the first elements of the priority queue.
The remaining opcodes are just skipped over.
The remaining transformations only apply to b-tree tables, not to virtual tables
The remapping case could be accomplished with less memory for non- interlaced images, but interlacing causes some serious complications.
The repeating kets try the rest of the pattern or restart from the preceding bracket, in the appropriate order.
The replace() function.
The replacement string C
The reports issued by valgrind are incorrect - we would prefer that the randomness be increased by making use of the uninitialized space in zBuf - but valgrind errors tend to worry some users.
The request could not be fulfilled using a freelist slot.
The request line looks like: "GET http://foo.bar.com HTTP/1.1" That is, there is no path.
The request line looks like: "GET http://foo.bar.com:1234 HTTP/1.1" That is, there is no path.
The request may be created empty or from a +request_der+ string.
The request was for a RESERVED or EXCLUSIVE lock.
The requested column is either a user column (one that contains  indexed data), or the language-id column.
The requested data is available in the in-memory buffer.
The requested data is not all available in the in-memory buffer.
The requested memory region does not exist.
The requested region is not mapped into this processes address space.
The resolution is 1 microsecond.
The resolution is 1 second.
The resolution is 1/CLOCKS_PER_SEC.
The resolution is CPU dependent.
The resolution is the clock tick.
The resolution of Python's datetime is 'us'
The resource and the list entry with its pointer to the resource are still intact
The resource sizes table
The responder ID is based on the key name.
The responder ID is based on the public key.
The response may be created empty or from a +response_der+ string.
The response to an error depends upon whether or not the grammar defines an error token "ERROR".
The response will be serialized into XML and sent back to the client.
The rest also applies to other integer formats, so fall into that case.
The rest apply in both UCP and non-UCP cases.
The rest are allocated from the top of the register space.
The rest are extensions, not normally found in printf()
The rest of the array is not used.
The rest of the methods are adequately described in their own documentation.
The rest of this code is to build the right kind of array from a python object.
The resuls of passing a codepoint that corresponds to an uppercase letter are undefined.
The result array has a memory ordering which matches the iterator, which may or may not match that of op.
The result can be any object.
The result depends upon the CPU and OS in use.
The result enumerator yields the chunked elements as an array.
The result for the first element is ignored.
The result has dimensions a.ndim + b.ndim
The result inherits any tainting in the original string or any supplied replacement string.
The result is DER-encoded except for the possibility of infinite length encodings.
The result is NULL if the arguments are equal to each other.
The result is a changeset equivalent to applying changeset A followed by changeset B.
The result is a string that identifies the compiler options  used to build SQLite.
The result is a string that identifies the particular version of the source code used to build SQLite.
The result is a subnormal, but not the smallest
The result is a two element array which contains the effective uid and the effective gid.
The result is addition of user time (ru_utime) and system time (ru_stime).
The result is addition of user time (tms_utime) and system time (tms_stime).
The result is aligned on 2M boundary.
The result is aligned to 8 bytes.
The result is also a string which is derived from A by replacing every occurrence of B with C.
The result is always UTF-8.
The result is always an integer.
The result is an array of conversions.
The result is an array of indexes, one for each element in op2, such that if the item were to be inserted in op1 just before that index the array would still be in sorted order.
The result is an integer that identifies if the compiler option was used to build SQLite.
The result is false if the LHS is definitely not in the RHS.
The result is intended as the number of processes to use all available processors.
The result is machine dependent.
The result is not guaranteed as stable.
The result is placed in 'out_meta'.
The result is placed in RESULT.
The result is placed in buf, and len denotes the length of the string The sign is returned in the is_negative argument (and is not placed in buf).
The result is returned as a new image.
The result is still completely unambiguous, it only means that datetimes outside this range will not include a time zone when they are printed.
The result is stored in the local array V.
The result is the first argument if the arguments are different.
The result is the value of the first argument.
The result is the version of the SQLite library that is running.
The result is then compared to the hash just computed, if they are equal the signature was valid.
The result is written into the buffer supplied as the second parameter whose size is given by the first parameter.
The result is written into the pMem element.
The result might be stored in some other register if it is convenient to do so.
The result of expressions involving strings with embedded NULs is undefined.
The result of the aggregate is stored back into pMem.
The result of the expression is the Ri for the first matching Ei, or if there is no matching Ei, the ELSE term Y, or if there is no ELSE term, NULL.
The result of the function is stored in register P3.
The result set must be the special operator "*"
The result set must have exactly one column
The result set of the SELECT
The result set of the SELECT statement
The result set of the outer query
The result set that needs to be DISTINCT
The result that is returned from the executed PHP code is ignored.
The result that is written to ***pazResult is held in memory obtained from malloc().
The result then would be: nil, nil, nil, A, B.
The result-set expression in all of the following SELECT statements is  considered a column by this function.
The resulted string is always ASCII-8BIT encoding.
The resulting file descriptor should be mmaped with the memfd_map function (see below).
The resulting hash value must land between 0 and (HASHTABLE_NSLOT-1).
The resulting object will be a refcounted string object.
The results are de-ephemeralized as a side effect.
The results are filled in the output parameters.
The results are guaranteed to appear in register target.
The results are returned according to the SelectDest structure.
The results are undefined if the value passed to this function is less than zero.
The results contains just the names in the directory, without any trailing slashes or recursive look-up.
The results in an exception.
The results of a SELECT can be distributed in several ways, as defined by one of the following macros.
The results of attempting  either of these things are undefined.
The results of invoking the sqlite3changeset_conflict() API are undefined.
The results of passing anything other than a valid function pointer as the xConflict argument are undefined.
The results of the total query are to be written into a destination of type eDest with parameter iParm.
The results of this routine are undefined unless it is called from within an xUpdate method.
The results of using the PMA-writer after this call are undefined.
The results of using the file-writer after this call are undefined.
The return  value is a pointer to the Stat4Accum object.
The return  value is a pointer to the the Stat4Accum object encoded as a blob (i.e.  the size of the blob is sizeof(void*) bytes).
The return address register
The return code indicates the error.
The return is the negated value of the frame size.
The return number includes the cell data header and the local payload, but not any overflow page or the space used by the cell pointer.
The return of a dummy opcode allows the call to continue functioning after a OOM fault without having to check to see if the return from  this routine is a valid pointer.
The return of a dummy opcode allows the call to continue functioning after an OOM fault without having to check to see if the return from  this routine is a valid pointer.
The return of an error code from PRIV(valid_utf)() is a new feature, introduced in release 8.13.
The return value can be a rational number.
The return value from this routine is WRC_Abort to abandon the tree walk and WRC_Continue to continue.
The return value indicates the final state of the indirect flag: 0 if  it is clear, or 1 if it is set.
The return value indicates the final state of the session object: 0 if  the session is disabled, or 1 if it is enabled.
The return value is +true+ if the signature is valid, +false+ otherwise.
The return value is -1 if no dequoting occurs or the length of the dequoted string, exclusive of the zero terminator, if dequoting does occur.
The return value is ALWAYS(X).
The return value is NULL.
The return value is OS-dependent.
The return value is a formatted database  record (a blob) containing the argument value.
The return value is a pointer to an opaque structure that contains information needed to terminate the loop.
The return value is a string or nil.
The return value is a string that may be interpreted as a Tcl list.
The return value is a view into 'out'.
The return value is again a +String+ containing the signature.
The return value is always a multiple of the value placed in reduce_innersize.
The return value is an integer or nil.
The return value is either the collation sequence to be used in database db for collation type name zName, length nName, or NULL, if no collation sequence can be found.
The return value is guaranteed to lie between 32 and MAX_SECTOR_SIZE.
The return value is one of the following:  -1 :: nonce in request only.
The return value is reference counter of OLE object.
The return value is set to SQLITE_OK unless an I/O error occurs during lock checking.
The return value is stored here
The return value is the actual number of bytes of randomness obtained.
The return value is the actual size of the used part of the ucs4 buffer.
The return value is the number of bytes read from the input buffer.
The return value is the number of ucs2 bytes used-up which is ucs4length + number of surrogate pairs found.
The return value is the over-all buffer size, and when the flag NPY_ITFLAG_REDUCE is set, reduce_innersize receives the size of the inner of the two levels of looping.
The return value is the same as the sqlite3_last_insert_rowid() API function.
The return value is the same as the sqlite3_total_changes() API function.
The return value is the total number  of bytes of memory released.
The return value is undefined in both these cases.
The return value is undefined in this case.
The return value might be uninitialized if an error occurs.
The return value of ftsHashFunction() is a pointer to another function.
The return value of this function will be used as the return value for this aggregate UDF.
The return value of this routine is the same regardless of whether the journal file has been created or not.
The return value of winGetLastErrorMsg is zero if the error message fits in the buffer, or non-zero otherwise (if the message was truncated).
The return value of xGetLastError is zero if the error message fits in the buffer, or non-zero otherwise (if the message was truncated).
The return value will be SQLITE_OK if successful.
The return values will be irreducible.
The returned IO object may be used to write to the standard input and read from the standard output of this subprocess.
The returned SrcList might be the same as the SrcList that was input or it might be a new one.
The returned buffer is allocated using sqlite3DbMalloc().
The returned color is always in the ARGB format (truecolor).
The returned indicate the current (possibly updated) journal-mode.
The returned slot is either free or points to the key.
The returned text includes up to four fragments of text extracted from the data in the current row.
The returned value does not include leaf nodes.
The returned value is either NULL or a pointer to a buffer containing a position-list indicating the occurrences of the phrase in column iCol of the current row.
The returned value is either PAGER_LOCKINGMODE_NORMAL or PAGER_LOCKINGMODE_EXCLUSIVE, indicating the current (possibly updated) locking-mode.
The returned value is normally a copy of the second argument to this function.
The returned value is undefined in this case.
The returned value must be freed by the caller using sqlite3ValueFree().
The returned value of this function indicates the b-tree type, as follows:  IN_INDEX_ROWID      - The cursor was opened on a database table.
The right pointer of the child page pOld becomes the left pointer of the divider cell
The right triangle of the Fig.
The right-hand input doclist is overwritten by this function.
The right-hand side (RHS) is an array of zero or more values.
The right-hand side (RHS) of the IN operator
The right-hand side of the AS subexpression
The right-hand-side must be a blob that can be cast into an RtreeMatchArg object.
The right-most SELECT might also skip this part if it has no ORDER BY clause and no temp tables are required.
The right-most entry is the one with the largest key - the last key in ascending order.
The right-most of SELECTs to be coded
The right-most table is the last entry.
The roles of pLower and pUpper are swapped for a DESC index
The rollback journal is composed of a linked list of these structures.
The rollback may have deleted tables or moved root pages, so it is not sufficient to save the state of the cursor.
The root node is the top node of the segment's tree after encoding the entire segment, restricted to ROOT_MAX bytes (default 1024).
The root node of an r-tree always exists, even if the r-tree table is empty.
The root of a tokens AND/NEAR cluster is stored in  Fts3TokenAndCost.pRoot.
The root page is then overwritten to make it an empty page with the right-child  pointer pointing to the new page.
The root page numbers of all tables in the database are integer stored in reg(P1), reg(P1+1), reg(P1+2), ....
The root page numbers of all tables in the database are integers stored in P4_INTARRAY argument.
The root page of the PRIMARY KEY is the table root page
The root page of the b-tree is overfull.
The root page of the b-tree now contains no cells.
The root page of the table to be locked
The root page of this tree
The root-page of a table or index in database iDb has changed from iFrom to iTo.
The root-page of the master database table.
The rotations are on the right.
The route can sometimes fail slightly differently (ValueError instead of IndexError), in which case we warn users about the change.
The routine below is shamelessly, gloriously floating point.
The routine computes S, and optionally computes U * Q, P' * VT, or Q' * C, for given real input matrices U, VT, and C.
The routine makes only one pass through the vector X.
The routine makes only one pass through the vector x.
The routine to run as a thread
The routines also provide a convenient place to set a debugger breakpoint.
The routines defined here are place-holders.
The routines in this file handle the following kinds of SQL syntax:  CREATE TABLE DROP TABLE CREATE INDEX DROP INDEX creating ID lists BEGIN TRANSACTION COMMIT ROLLBACK
The routines in this file implement the programmer interface to the library.
The routines that do all the work, as well as the explanatory comments, came from gcntr.c, part of the GIST package.
The row containing the glob
The row is selected by the general category and the column by the particular category.
The row might have been deleted out from under the cursor.
The row that the VUpdate opcode will delete: none
The row-trigger may have deleted the row being updated.
The rowid and root page number values are needed by the code that sqlite3EndTable will generate.
The rowid at the end of the index entry is ignored as well.
The rowid for a table is always UNIQUE and NOT NULL so whenever the rowid appears in the ORDER BY clause, the corresponding WhereLoop is automatically order-distinct.
The rowid for each segment leaf is found by passing the segment id and  the leaf page number to the FTS5_SEGMENT_ROWID macro.
The rowid searching for
The rowid should be written to *pRowid.
The rowid that might be changing
The rowid we are to seek to
The rows of the eigenvectors found by DLAED4 must be likewise permuted before the matrix multiply can take place.
The rows of the eigenvectors found by SLAED4 must be likewise permuted before the matrix multiply can take place.
The rows of the singular vectors found by DLASD4 must be likewise permuted before the matrix multiplies can take place.
The rows of the singular vectors found by SLASD4 must be likewise permuted before the matrix multiplies can take place.
The rtree may have between 1 and RTREE_MAX_DIMENSIONS dimensions.
The rule applies to a range of nRange codepoints starting at codepoint iCode.
The rule is that positive scalars can be coerced to a signed ints, but negative scalars cannot be coerced to unsigned ints.
The rule of the previous sentence ensures thta if X is the bitmask for a table T, then X-1 is the bitmask for all other tables to the left of T.
The run loop thread is responsible for running the loop and then executing the callbacks when they are triggered
The running version of ruby
The runtime signal handler will jump to this code.
The sSort.addrSortIndex variable is used to facilitate that change.
The safest way to deal with the problem is to always use this wrapper which always has the same well-defined interface.
The safety level used to be boolean and older scripts may have used numbers 0 for OFF and 1 for ON.
The same argument applies to all but the first docid read from the 'other' list.
The same as PyArray_PrepareOneRawArrayIter, but for three operands instead of one.
The same as PyArray_PrepareOneRawArrayIter, but for two operands instead of one.
The same call sets the master journal pointer in each individual journal.
The same callback makes sure the doclists are loaded for each phrase.
The same code works when not in UTF-8 mode and in UTF-8 mode when there is no UCP support.
The same glob pattern and flags are used by Dir::glob.
The same goes for #priority, which lets you hint to the thread scheduler which threads you want to take precedence when passing execution.
The same holds for TK_AGG_COLUMN nodes.
The same info is provided through phpinfo()
The same information used to be passed as five separate parameters.
The same locking strategy and byte ranges are used for Unix.
The same number will be returned on all calls to +object_id+ for a given object, and no two active objects will share an id.
The same space is used in the second phase for remembering where to fill in forward references to subpatterns.
The same thing might be implemented more directly using a hand-written hash table.
The same with linux kernel.
The same workspace is used during the second, actual compile phase for remembering forward references to groups so that they can be filled in at the end.
The sample column is a blob which is the binary encoding of a key from the index.  The nEq column is a list of integers.
The sanity checking information for the new journal format consists of a 32-bit checksum on each page of data.
The savepoint to release or rollback need not be the most recently  created savepoint.
The savepoint to rollback or release is identified by parameter  iSavepoint.
The scalar function context passed as the first argument is  loaded with an error message based on the following two args.
The scalar function takes two arguments: (1) the number of dimensions to the rtree (between 1 and 5, inclusive) and (2) a blob of data containing an r-tree node.
The scan pointer is not advanced.
The scanner will be searching the WHERE clause pWC.
The schema cookie is used to determine when the schema for the database changes.
The schema for each SQL table and view is represented in memory by an instance of the following structure.
The schema has been loaded
The schema layer numbers meta values differently.
The schema of the expression
The schema-cookie is usually only manipulated internally by SQLite.
The scope is known if we're in a free function (no scope), but not if we're in a file/eval (which inherits including/eval'ing scope).
The score for a perfect match
The score for this node.
The score of the selected snippet is stored in *piScore before returning.
The script cannot reasonably know the size of the message body after compression, so it's best do disable compression altogether.
The script was updated in March 2009 to generate a new EBCDIC-compliant version.
The search path is part of the HDF by convention
The second  argument, pData, points to a buffer (*pnData) bytes in size.
The second  parameter is a pointer to an integer that contains the offset at which to write into the output buffer.
The second "call" of match() uses tail recursion, to avoid using another stack frame.
The second "op" argument is an integer opcode.
The second (same disclaimer) contains the size of position list 1.
The second and third form take a single argument which is either an array of key-value pairs or an object convertible to a hash.
The second argment is the associated aggregate-info object.
The second argument (C) is only used for STAT3 and STAT4.
The second argument (ecode) being NULL triggers this behaviour.
The second argument (xFilter) is the "filter callback".
The second argument and third argument are optional.
The second argument contains the URI (or non-URI filename) itself.
The second argument indicates the reason that FTS5 is requesting tokenization of the supplied text.
The second argument is a Trigger structure allocated by the  fkActionTrigger() routine.
The second argument is a mask containing EXPRDUP_XXX flags.
The second argument is a reference to a page that is  currently dirty but has no outstanding references.
The second argument is major version or version of the type library.
The second argument is the associated aggregate-info object.
The second argument is the database connection.
The second argument is the major token number.
The second argument is the name of the locale to use.
The second argument is the query expression to parse.
The second argument is the result.
The second argument passed to the xToken() callback ("tflags") should normally be set to 0.
The second argument passed to this function is the name of a PRAGMA  setting - "page_size", "auto_vacuum", "user_version" or "application_id".
The second argument passed to this function may be NULL, or it may be an existing Fts5Colset object.
The second argument passed to this function must be the same as the corresponding argument that was passed to the unixFetch() invocation.
The second argument passed to this function must be the same as the corresponding argument that was passed to the winFetch() invocation.
The second argument points to an FKey object representing a foreign key for which pTab is the child table.
The second argument points to an FKey object representing a foreign key for which pTab is the parent table.
The second argument should be passed zero to access the target database handle, or non-zero to access the rbu update database handle.
The second argument specifies OLE class name.
The second argument specifies OLE event name.
The second argument specifies VARIANT type.
The second argument specifies variant type of the element of OLE array.
The second argument to this function contains the text of an SQL statement that returns a single integer value.
The second argument to this function identifies a database in which  to store the state of the RBU vacuum operation if it is suspended.
The second argument to this function, op, is always SAVEPOINT_ROLLBACK or SAVEPOINT_RELEASE.
The second argument, "zSql", is the statement to be compiled, encoded as either UTF-8 or UTF-16.
The second assert below verifies that the child page is defragmented (it must be, as it was just reconstructed using assemblePage()).
The second block of a chunk is user data if the chunk is checked  out.
The second block of free chunks is of the form u.list.
The second call, to obtain permission to create the table, is made now.
The second case comes up if the conflict handler is invoked with NOTFOUND and returns CHANGESET_REPLACE.
The second check will generate a hit.
The second choice is a Mac OS X style fullsync.
The second element of the array is the index of the child table column that corresponds to the second left-most column of ppIdx, and so on.
The second element, _sender_addrinfo_, contains protocol-specific address information of the sender.
The second form changes the secure_delete flag setting and reports thenew value.
The second form creates a copy of the array passed as a parameter (the array is generated by calling to_ary on the parameter).
The second form is used for WITHOUT ROWID tables.
The second form of this pragma is a no-op if the main database file has not already been initialized.
The second form returns a copy of +str+ transcoded from src_encoding to dst_encoding.
The second form sets both the current page cache size value and the persistent page cache size value stored in the database file.
The second form sets the database page size value.
The second form sets the local page cache size value.
The second form turns cache spill on or off.
The second integer in nEq is the approximate number of entries in the index where the first two columns match the first two columns of the sample.
The second is a table name.
The second is the page number to look up in the pointer map.
The second one is used when we already know we are past the end of the subject.
The second parameter (pExpr) is the first argument to this function.
The second parameter is a pointer to an integer into which is written 0 or 1 to indicate whether FK enforcement is off or on following this call.
The second parameter is a pointer to an integer into which is written 0 or 1 to indicate whether fts3_tokenizer is disabled or enabled following this call.
The second parameter is a pointer to an integer into which is written 0 or 1 to indicate whether triggers are disabled or enabled following this call.
The second parameter is the web startup filename and also defaults to "index.php" (falling back to CLI behaviour).
The second parameter may be a NULL pointer, in which case the FK enforcement setting is not reported back.
The second parameter may be a NULL pointer, in which case the new setting is not reported back.
The second parameter may be a NULL pointer, in which case the trigger setting is not reported back.
The second parameter obj should be WIN32OLE object or WIN32OLE_TYPELIB object.
The second parameter to sqlite3BtreeGetMeta or sqlite3BtreeUpdateMeta should be one of the following values.
The second parameter to the callback is an integer code that specifies what action is being authorized.
The second parameter, pData, points to a buffer nData bytes in size containing the chunk of output data being returned.
The second part of a range can be a single-character escape sequence, but not any of the other escapes.
The second pass over the image maps each input pixel to the closest output color (optionally after applying a Floyd-Steinberg dithering correction).
The second pass sets the size of each flexible item.
The second points to a buffer containing an integer value serialized according to serial_type.
The second register in the range will contain the content of the first table column.
The second should be of type (void*).
The second stage consists of calculating the updated eigenvalues.
The second stage consists of calculating the updated singular values.
The second value is a string representing the significant digits of the BigDecimal, with no leading zeros.
The second value is the maximum number of significant digits for the BigDecimal.
The second while(...) loop copies the key value from the cell on pPage into the pSpace buffer.
The second, if it is present, is 1 for a view or 0 for a table.
The secondary change counter at 92 is also updated, as is the SQLite version number at offset 96.
The seconds portion (":SS.FFF") is option.
The sector size is the minimum write that can be performed without disturbing other bytes in the file.
The sector size will be used  to determine the size and alignment of journal header and  master journal pointers within created journal files.
The sector size will be used used  to determine the size and alignment of journal header and  master journal pointers within created journal files.
The seed value does not need to contain a lot of randomness since we are not trying to do secure encryption or anything like that...
The segment is modified in place so that it contains no keys smaller than zTerm/nTerm.
The segments  to be merged are the nMin oldest segments (the ones with the smallest  values for the _segdir.idx field) in the highest level that contains  at least nMin segments.
The select statement passed as the first argument is an aggregate query.
The select statement passed as the second parameter is a compound SELECT with an ORDER BY clause.
The select-id identifies which query or subquery the loop is part of.
The selected WhereLoop object
The selected inner loop
The selected snippet parameters are stored in structure *pFragment before returning.
The selection can happen in a destructive or a non-destructive manner.
The selectors may be either integer indices or ranges.
The semantic value of the lookahead symbol.
The semantic value stack.
The semantics of a piece of advice are platform-dependent.
The sentinel at the end of the array is the max index value.
The separateCache variable is true if each PCache has its own private PGroup.
The separator is included with the contents of each record.
The sequence may be represented by integers, floats, or binary strings.
The sequence number on the cursor is incremented after this instruction.
The serial type is an 8-byte unsigned integer, stored as a varint.
The server compiles sometimes the full utf-8 (the mb4) as utf8m4, and the old as utf8, for BC reasons.
The server doesn't send sqlstate in the greet packet.
The server is 5.5.x and supports authentication plugins
The server needs this for simple flow control checking.
The server sends 0 but libmysql doesn't read it and has established a protocol of giving back -1.
The server signalled error.
The server will de-serialize the XML back into an binary representation, call the appropriate registered method -- thereby generating a response.
The session  module does not record changes for rows with NULL values stored in primary key columns.
The session module  continues to the next change in the changeset.
The session object will be used to create changesets for tables in database zDb, where zDb is either "main", or "temp", or the name of an attached database.
The sessions module never invokes an xOutput callback with the third  parameter set to a value less than or equal to zero.
The set might be empty.
The set of operations and constants available depends upon specific operating system.
The set of routines that implement the porter-stemmer tokenizer
The set of routines that implement the simple tokenizer
The set of static mutexes may change from one SQLite release to the next.
The set of system calls that can be overridden varies from one VFS to another, and from one version of the same VFS to the next.
The set permutation is the inverse of the get permutation.
The setStrOrError() funtion calls sqlite3VdbeMemSetStr() to store the result as a string or blob but if the string or blob is too large, it then sets the error code to SQLITE_TOOBIG
The setting is persistent.
The setup-query runs once to generate an initial set of rows that go into a Queue table.
The shared cache setting effects only future calls to sqlite3_open(), sqlite3_open16(), or sqlite3_open_v2().
The shared lock and an open file descriptor are maintained until  the connection to the database is closed.
The shared memory being locked
The shared memory will be simulated with heap memory.
The shared-lock has just been acquired on the database file and there are already pages in the cache (from a previous read or write transaction).
The shared-lock has just been acquired then check to see if the database has been modified.
The shebang line was read, get the current position to obtain the buffer start
The shifts are accumulated in SIGMA.
The should match exactly (in terms of length), only differ in case Output:      Error code or SUCCESS Description: Author/Date:  jcar 20/9/96 History:
The sign in front of the number
The signal trampoline expects the TLS slots to be zeroed.
The signature algorithm must be one of Phar::MD5, Phar::SHA1, Phar::SHA256, Phar::SHA512, or Phar::OPENSSL.
The signature is issued using the private key of this DSA instance.
The signature is valid if and only if the decrypted signature is equal to this message digest.
The signs of N1 and N2 are ignored.
The simple approach here would be to memset() the entire object to zero.
The simple case - no more than one database file (not counting the TEMP database) has a transaction active.
The simplest is just to forbid invalid filenames, which is done here.
The single value is an array.
The single-byte matcher isn't allowed.
The single-byte matcher means we can't proceed in UTF-8 mode.
The singular values S are overwritten on D.
The singular values are computed by infinity-norm approximations, and thus will only be correct to a factor of 2 or so.
The singular values are computed to high relative accuracy, in the absence of denormalization, underflow and overflow.
The singular values are stored in D.
The singular values which were not deflated go into the first K slots of DSIGMA, except that DSIGMA(1) is treated separately.
The singular vector matrices were generated in compact form by CLALSA.
The singular vector matrices were generated in compact form by DLALSA.
The singular vector matrices were generated in compact form by SLALSA.
The singular vector matrices were generated in compact form by ZLALSA.
The singular vectors for the current problem are multiplied with the singular vectors from the overall problem.
The size and endian is dependent on the host.
The size and endian is dependent on the platform.
The size cannot be zero for PyDataMem_RENEW.
The size chosen is a little less than a power of two.
The size in bytes of the *-oal file.
The size is dependent on the platform.
The size is set to zero when the storage is empty.
The size of a Mem5Link object must be a power of two.
The size of a lookaside slot after ROUNDDOWN8 needs to be larger than a pointer to be useful.
The size of a single frame
The size of an array large to enough to hold all stacks, each with N elements.
The size of each PMA is roughly the same as the cache-size allowed for temporary databases.
The size of file pTo may be reduced by this operation.
The size of the bitmap is fixed when the object is created.
The size of the buffer in the first argument must be greater than or equal to the product of the second and third arguments.
The size of the buffer used by sqlite3_win32_write_debug().
The size of the heap after initialization of the server
The size of the local bulk allocation can be adjusted using   sqlite3_config(SQLITE_CONFIG_PAGECACHE, (void*)0, 0, N).
The size of the maximum gap between one aligned stack and the next.
The size of the object (given by the 3rd parameter) is never used and can be any positive value.
The size of the of each page record in the journal is given by the following macro.
The size of the pascal string length (sz) is 1, 2, or 4.
The size of this object must be a power of two.
The size returned omits the 8-byte header overhead.
The sizes are encoded as a blob of varints.
The sizes for serial types less than 128
The sizes of all cells that are to be freed have already been computing while deciding which cells need freeing
The sizes of the extensions sum to 272 bytes on x64 for 3.8.10, but this size can vary according to architecture, compile-time options, and SQLite library version number.
The skip-scan logic inside the call to codeAllEqualityConstraints() above has already left the cursor sitting on the correct row, so no further seeking is needed
The sljit ceneric compiler.
The slot is free, let's try to take it.
The slot remains on the free-list.
The slower this is, the more work it requires being able to brute-force the resulting key.
The smaller the maximum JUMP opcode the better, so the mkopcodeh.tcl script that generated this include file strives to group all JUMP opcodes together near the beginning of the list.
The smallest negative exponent in a double-precision floating point where 10 raised to this power minus 1.
The smallest posable exponent value in a double-precision floating point.
The smallest positive normalized number in a double-precision floating point.
The snapshot is cheap, though if something does modify the array it will pay the cost of copying it.
The snippet() and offsets() functions both return text values.
The solution X overwrites B.
The solution is the BtShared.pHasContent bitvec.
The solution is to add an in-memory page to the cache containing the data just read from the sub-journal.
The solution is to determine the z value of the centre of the zone, which is the mean of the z values of the four corner points.
The solution taken below is to manually track memory allocated for Py_buffers.
The sort functions require 1-d contiguous and well-behaved data.
The sorter can guarantee a stable sort when running in single-threaded mode, but not in multi-threaded mode.
The source and destination do not overlap.
The source code of the verification program is included in this package.
The source object and input buffer are made permanent so that a series of JPEG images can be read from the same file by calling jpeg_gdIOCtx_src only before the first one.
The source or pattern file
The source value(s) to append.
The space between the beginning and the first element and the space between each two elements.
The space is either allocated using sqlite3DbMallocRaw() or from within the unaligned buffer passed via the second and third arguments (presumably stack space).
The space required to store the output is therefore the sum of the sizes of the two inputs, plus enough space for exactly one of the input docids to grow.
The spec (https://www.w3.org/TR/css-flexbox-1/#resolve-flexible-lengths) describes a process that needs to be repeated a variable number of times.
The spec describes four different layout modes: "fill available", "max content", "min content", and "fit content".
The spec indicates that the default value for 'flexDirection' is 'row', but the algorithm below assumes a default of 'column'.
The spec says there are three possible values for flags.
The spec states that a WAP client does not need to implement ExtHeaders.
The special case 2 overflow if positive
The special operator TK_ROW means use the rowid for the first column in the FROM clause.
The special signal name ``EXIT'' or signal number zero will be invoked just prior to program termination.
The special types, which have no or subelement byte-order
The specific ORDER BY term
The specific comparison operator
The specific database being pragmaed
The specific row is identified by the iBlockid parameter.
The specific table containing the indexed database
The specification requires that a simple key  - is limited to a single line, - is shorter than 1024 characters.
The specified column name was rowid", "oid" or "_rowid_"  and there is no explicitly declared IPK column.
The speed of this approach is heavily influenced by the subbox size: too small means too much overhead, too big loses because Heckbert's criterion can't eliminate as many colormap entries.
The spill-size is the minimum number of pages in cache before the cache will attempt to spill dirty pages by calling xStress.
The sqlite versions only work for ASCII characters, regardless of locale.
The sqlite.busyHandler member of the sqlite struct contains the busy callback for the database handle.
The sqlite3.pDisconnect list is accessed only as follows:  1) By this function.
The sqlite3BtreeCommitPhaseOne() routine did all the work of writing information out to disk and flushing the contents so that they are written onto the disk platter.
The sqlite3BtreeCommitPhaseOne() routine does the first phase and should be invoked prior to calling this routine.
The sqlite3DbFree() routine requires two parameters instead of the  one parameter that destructors normally want.
The sqlite3DbFree() routine requires two parameters instead of the one parameter that destructors normally want.
The sqlite3DropTriggerPtr() routine does the same job as this routine except it takes a pointer to the trigger instead of the trigger name.
The sqlite3ExprIsConstantOrFunction() is used for evaluating expressions in a CREATE TABLE statement.
The sqlite3GetBoolean() function is used by other modules but the remainder of this file is specific to PRAGMA processing.
The sqlite3KeywordCode function looks up an identifier to determine if it is a keyword.
The sqlite3MallocRawNN() variant guarantees that the "db" parameter is not a NULL pointer.
The sqlite3OsFileControlHint() routine has no return value since the return value would be meaningless.
The sqlite3P2Values() routine is able to run faster if it knows the value of the largest JUMP opcode.
The sqlite3PcacheFetch() and sqlite3PcacheFetchFinish() routines are split this way for performance reasons.
The sqlite3ResultSetOfSelect() is only used n contexts where lookaside is disabled
The sqlite3ResultSetOfSelect() routine makes it so.
The sqlite3ValueBytes() routine returns the number of bytes in the sqlite3_value object assuming that it uses the encoding "enc".
The sqlite3ValueFromExpr() function is capable of transforming these types of expressions into sqlite3_value objects.
The sqlite3_aggregate_count() function is deprecated.
The sqlite3_backup_remaining() and sqlite3_backup_pagecount() interfaces retrieve these two values, respectively.
The sqlite3_blob_close() function finalizes the vdbe program, which closes the b-tree cursor and (possibly) commits the  transaction.
The sqlite3_close() version returns SQLITE_BUSY and leaves the connection option if there are unfinalized prepared statements or unfinished sqlite3_backups.
The sqlite3_close_v2() interface is intended for use with host languages that are garbage collected, and where the order in which destructors are called is arbitrary.
The sqlite3_close_v2() version forces the connection to become a zombie if there are unclosed resources, and arranges for deallocation when the last prepare statement or sqlite3_backup closes.
The sqlite3_config() interface is not threadsafe.
The sqlite3_get_table() routine does not have access to any internal data structures of SQLite.
The sqlite3_index_info structure contains many fields that are declared "const" to prevent xBestIndex from changing them.
The sqlite3_int64 and sqlite3_uint64 are the preferred type definitions.
The sqlite3_libversion() function is provided for use in DLLs since DLL users usually do not have direct access to string constants within the DLL.
The sqlite3_log() interface is intended for use by extensions such as virtual tables, collating functions, and SQL functions.
The sqlite3_mem_methods structure is filled with the currently defined memory allocation routines.
The sqlite3_mutex.id, sqlite3_mutex.nRef, and sqlite3_mutex.owner fields are necessary under two condidtions:  (1) Debug builds and (2) using home-grown mutexes.
The sqlite3_mutex_alloc() routine allocates a new mutex and returns a pointer to it.
The sqlite3_mutex_held() and sqlite3_mutex_notheld() routine are intended for use inside assert() statements.
The sqlite3_mutex_held() and sqlite3_mutex_notheld() routine are intended for use only inside assert() statements.
The sqlite3_mutex_leave() routine exits a mutex that was previously entered by the same thread.
The sqlite3_mutex_notheld() interface should also return 1 when given a NULL pointer.
The sqlite3_mutex_try() interface returns SQLITE_OK upon successful entry.
The sqlite3_mutex_try() routine is very rarely used, and when it is used it is merely an optimization.
The sqlite3_open_v2() interface works like sqlite3_open() except that it accepts two additional parameters for additional control over the new database connection.
The sqlite3_os_end() routine undoes the effect of sqlite3_os_init().
The sqlite3_os_init() interface is called automatically by sqlite3_initialize() and sqlite3_os_end() is called by sqlite3_shutdown().
The sqlite3_os_init() routine does operating-system specific initialization of the SQLite library.
The sqlite3_pcache_methods.xInit() all is embedded in the call to sqlite3PcacheInitialize().
The sqlite3_prepare() and sqlite3_prepare_v2() interfaces use UTF-8, and sqlite3_prepare16() and sqlite3_prepare16_v2() use UTF-16.
The sqlite3_prepare_v2() and sqlite3_prepare16_v2() interfaces are recommended for all new programs.
The sqlite3_profile() function is considered experimental and is subject to change in future versions of SQLite.
The sqlite3_shutdown() interface must only be called from a single thread.
The sqlite3_status() routine needs access to this mutex.
The sqlite3_step() wrapper function might then reprepare the statement and rerun it from the beginning.
The sqlite3_strglob() interface.
The sqlite3_strlike() interface.
The sqlite3_test_control() interface calls these routines to control the PRNG.
The sqlite3_test_control() interface can be used to move the pending byte.
The sqlite3_uri_boolean(F,P,B) routine assumes that P is a boolean parameter and returns true (1) or false (0) according to the value of P.
The sqlite3_uri_boolean(F,P,B) routine returns true (1) if the value of query parameter P is one of "yes", "true", or "on" in any case or if the value begins with a non-zero number.
The sqlite3_uri_int64(F,P,D) routine converts the value of P into a 64-bit signed integer and returns that integer, or D if P does not exist.
The sqlite3_wal_hook() callback registered by sqlite3_wal_autocheckpoint().
The sqliteInt.h header #includes this file so that it is available to all source files.
The sqlite_int64 and sqlite_uint64 types are supported for backwards compatibility only.
The sqlite_sequence table used by AUTOINCREMENT
The sqlite_stat1 table is always relevant.
The sqlite_stat2 table is deprecated.
The sqlite_stat2 table is not created or used unless the SQLite version is between 3.6.18 and 3.7.8, inclusive, and unless SQLite is compiled with SQLITE_ENABLE_STAT2.
The sqlite_stat2 table is superseded by sqlite_stat3, which is only created and used by SQLite versions 3.7.9 and later and with SQLITE_ENABLE_STAT3 defined.
The sqlite_stat4 is an enhanced version of sqlite_stat3 and is only available when compiled with SQLITE_ENABLE_STAT4 and in SQLite versions 3.8.1 and later.
The sqlite_statN table does not exist.
The src decref function if necessary
The stack is unchanged.
The stack pointer is decreased.
The stack segment linkage control information occurs at the high-address end of a stack segment.
The stacks and their tools: 'yyss': related to states.
The stacks and their tools: `yyss': related to states.
The standard input stream (stdin) can be specified by :in, 0 and STDIN.
The start field is used to free temporary variables in case of exceptions.
The start of buffer (a/n) contains the start of a doclist.
The start of the journal file currently contains a single journal  header with the nRec field set to 0.
The start/end pattern and initial options are already set from the pre-compile phase, as is the name_entry_size field.
The starting points of the name/number translation table and of the code are passed around in the compile data block.
The stat_get() SQL function will later be used to extract relevant information for constructing the sqlite_statN tables.
The state of the parser is completely contained in an instance of the following structure
The state variable is passed in to allow a function like fgetss to maintain state across calls to the function.
The state-number, or reduce action in SHIFTREDUCE
The statement handle passed as the second argument points at the current version of the row (the new.* values).
The statement is compiled and executed using database connection db.
The statement returns exactly one column.
The statement to bind against
The statement transaction is never a top-level transaction.
The strategy is that we create an ephemerial table that contains for each row to be changed:  (A)  The original rowid of that row.
The strategy is to minimize the amount of unused space on overflow pages while keeping the amount of local storage in between minLocal and maxLocal.
The stream must be opened for reading or an +IOError+ will be raised.
The stream must be opened for reading.
The stream must be opened for writing.
The strides are checked to ensure that accessing memory using striding will not try to reach beyond this memory for any of the axes.
The strides must already have been broadcast.
The strides which get passed to the inner loop
The string "now" resolves to the current UTC time
The string "today" means take today's date in local time, and convert it to a date representation.
The string being accumulated
The string collected so far
The string is "OrpheanBeholderScryDoubt" on big-endian.
The string is "UNKNOWN" or "PROPERTY" or "PROPERTY" or "PROPERTYGET" or "PROPERTYPUT" or "PROPERTYPPUTREF" or "FUNC".
The string is built from string macros so that it works in UTF-8 mode on EBCDIC platforms.
The string is not copied - the pointer is stored.
The string is not necessarily zero-terminated.
The string may be treated as static by the caller.
The string may or may not be quoted.
The string passed via zFunc is used as part of the error message.
The string should be struct sockaddr as generated by Socket.sockaddr_in or Socket.unpack_sockaddr_un.
The string to compare against the glob
The string which represents the version of zlib.h
The string will be converted to the destination encoding and output on later conversions.
The string will be freed automatically when the table is deleted.
The string will be the same as the name of the error code constant.
The stringio must be opened for reading or an +IOError+ will be raised.
The stringio must be opened for reading.
The strings are already in the correct encoding.
The strings compare the same.
The struct contains the following members:  name:: contains the name of the group as a String.
The structure is divided into two parts.
The structure is reclaimed when the number of pointers to it drops to zero.
The structure methods are expected to function as follows:  xCreate: This function is used to allocate and initialize a tokenizer instance.
The structure of this hash is explained in the +String#encode+ documentation.
The structure supports  merging any number of arrays in a single pass with no redundant comparison  operations.
The structures are like b+trees in layout, but are constructed from the bottom up in optimal fashion and are not updatable.
The structures are stored in a linked list starting at sqlite3_session.pTable.
The stub *must* end with a call to __HALT_COMPILER().
The study data is put in the latter, which is pointed to by the former, which may also get additional data set later by the calling program.
The subexpression broken out
The submatrices are numbered starting at the bottom left of the divide and conquer tree, from left to right and bottom to top.
The subprocess will be terminated at the end of the block.
The subquery cannot use any compound operator other than UNION ALL because all the other compound operators have an implied DISTINCT which is disallowed by restriction (4).
The subquery uses a single slot of the FROM clause of the outer query.
The subquery whose WHERE clause is to be augmented
The subsequent "OP_Destroy 5 0" would hit a free-list page.
The subsequent call to sqlite3ResolveOrderGroupBy() will convert the expression to a copy of the iCol-th result-set expression.
The subsequent elements in the array are  the values of columns in the new row.
The subspace, the part of the array which is not indexed by arrays, needs to be iterated when the size of the subspace is larger than 1.
The substitute function itself is defined in "os_win.c".
The subterms are stored in a WhereClause structure containing within the WhereOrInfo object that is attached to the original OR clause term.
The subtransaction can be rolled back independently of the main transaction.
The subtransaction can can be rolled back independently of the main transaction.
The subtransaction is ended automatically  if the main transaction commits or rolls back.
The subtree at iBlockid will contain all terms less than the first term encoded (or all terms if no term is encoded).
The subtree blocks are contiguous, so only the first subtree's blockid is encoded.
The subtype for automatically allocated outputs
The subtype information can be used to pass a limited amount of context from one SQL function to another.
The success code is written into *pRc.
The successor is calculated by incrementing characters starting from the rightmost alphanumeric (or the rightmost character if there are no alphanumerics) in the string.
The suggested maximum number of in-memory pages to use for the main database table and for temporary tables.
The superclass sqlite3_pcache_page.pBuf points to the start of the database page content and sqlite3_pcache_page.pExtra points to PgHdr.
The supplied conflict handler callback is invoked to resolve any conflicts encountered while applying the change.
The supported constants depends on OS and version.
The supported encoding types are hardcoded here because we are limited to the encodings supported by expat/xmltok.
The symbol can be either a terminal or nonterminal.
The symbolic label is really just a negative number.
The symbols being reduced.
The symbols defined by this library will be made available for symbol resolution of subsequently loaded libraries.
The synchronous pragma can be set to 'off' for this file, as it is not recovered if a crash occurs anyway.
The synopsis of the meanings of the various limits is shown below.
The syntax of a format sequence is follows.
The syslog package provides a Ruby interface to the POSIX system logging facility.
The syslog protocol is standardized in RFC 5424.
The system call failed, and *some* SQLite error should be propagated back to the caller.
The system could just by delete the RBU update database and *-oal file and have the device download the update again and start over.
The system strives to keep free space after the last cell pointer so that new cells can be easily added without having to defragment the page.
The sz argument must be a multiple of 16.
The sz argument should be the size of the largest database page (a power of two between 512 and 32768) plus a little extra for each page header.
The sz argument should be the size of the largest database page (a power of two between 512 and 65536) plus some extra bytes for each page header.
The sz parameter is the number of bytes in each lookaside slot.
The szMalloc field holds the correct memory allocation size
The szPage value can be any power of 2 between 512 and 32768, inclusive.
The szSlot, nSlot, pStart, pEnd, nReserve, and isInit values are all fixed at sqlite3_initialize() time and do not require mutex protection.
The tab_prefix table is the same size and type as the codetab.
The tab_suffix table needs 2**GIFBITS characters.
The table already exists.
The table b-tree entry will be replaced by the new entry  when it is inserted.
The table being constructed
The table being dropped does not have the largest root-page number in the database.
The table being indexed
The table being inserted into has nCol columns.
The table being inserted or updated
The table being referenced
The table conceptually has a number of rows and columns.
The table consists of integer keys mapped to values as follows:  RBU_STATE_STAGE: May be set to integer values 1, 2, 4 or 5.
The table containing the blob
The table containing the value
The table contains key/value bindings encoded in a word.
The table does not exist.
The table doesn't handle string/unicode/void, check the result
The table doesn't handle string/unicode/void/datetime/timedelta, so check the result
The table from which records will be deleted
The table from which rows are deleted
The table from which we should delete things
The table in the FROM clause of SELECT
The table in which we should change things
The table is left as-is for anyone who may want to do such conversion, which was allowed in earlier algorithms.
The table is not a view and the column name identified an  explicitly declared column.
The table is opened using cursor 0.
The table is truncated at OP_CALLOUT because all relevant opcodes are less than that.
The table name in  the CREATE TABLE or CREATE INDEX statement is replaced with the third argument and the result returned.
The table name in the CREATE  TRIGGER statement is replaced with the third argument and the result  returned.
The table object reference passed as the second argument to this function must represent a virtual table.
The table of operator names.
The table or view name to create is passed to this routine via tokens pName1 and pName2.
The table or view or trigger name is passed to this routine via tokens pName1 and pName2.
The table or view to which the trigger applies
The table pTrigger is attached to
The table pointer is always in native byte order.
The table referred to is in pTabList or else it is the NEW or OLD table of a trigger.
The table structure that other action routines have been building is added to the internal hash tables, assuming no errors have occurred.
The table that is indexed
The table the contains the triggers
The table to be locked has root page iTab and is found in database iDb.
The table to be opened
The table to be updated
The table to code triggers from
The table to insert into.
The table trigger pTrigger is attached to
The table we are inserting into
The table we are writing to
The table whose column is desired
The table with the non-unique rowid
The tables are also #included by the pcretest program, which uses macros to change their names from _pcre_xxx to xxxx, thereby avoiding name clashes with the library.
The tables are built according to the current locale.
The tables are used only for characters whose code values are less than 256.
The tables herein are needed only when UCP support is built into PCRE.
The tables it expects to find are described in sqlite3rbu.h.
The tag may only be retrieved after calling Cipher#final.
The tail of the list is special, "next" is really a value.
The target database name of the index  currently being written, or NULL if the main table is currently being updated.
The target database name of the table  currently being written.
The target is relative to the link itself, not to the CWD.
The tbl column is the name of the table to which the index belongs.
The temp-database schema is allocated differently from the other schema objects (using sqliteMalloc() directly, instead of sqlite3BtreeSchema()).
The temporary copy is aligned and needs no cast
The temporary database we vacuum into
The ten elements can be passed directly to Time::utc or Time::local to create a new Time object.
The term being tested
The term is disabled in (3) because it is not part of a LEFT OUTER JOIN.
The term of the WHERE clause to be coded
The term to be analyzed
The term to be appended is passed via arguments zTerm/nTerm.
The term to search for is passed in zTerm/nTerm.
The term/doclist format described above is accurate if the entire term/doclist data fits on a single leaf page.
The terminating NOTACHAR is copied form the clist itself.
The terms "protected" and "unprotected" refer to whether or not a mutex is held.
The terms from the notReady table could not be tested and will need to be tested later.
The terms of a FROM clause are contained in the Select.pSrc structure.
The test case is inserting 1000 rows into a table  with no indexes using a single prepared INSERT statement, bind()  and reset().
The test for this is misc/cgo/testsanitizers.
The test performed depends on the value of flags:  SQLITE_ACCESS_EXISTS: Return 1 if the file exists SQLITE_ACCESS_READWRITE: Return 1 if the file is read and writable.
The test procedures use this information to make sure that indices are working correctly.
The test procedures use this information to make sure that sorting is occurring or not occurring at appropriate times.
The test procedures use this information to make sure that the zero-blob functionality is working correctly.
The test program should print out the same values as given in section A.5 of RFC 1321, reproduced below.
The test will always be false (since this module will not return a row with a negative languageid), and so the overall query will return zero rows.
The testcase() macro is inserted to help ensure adequate test coverage in places where simple condition/decision coverage is inadequate.
The testcase() macro is only used by the amalgamation.
The testcase() macro is used to aid in coverage testing.
The tests are made using the effective owner of the process.
The text encoding used by this database
The text expression being built
The text is reversed here.
The text of the conversion is pointed to by "bufpt" and is "length" characters long.
The texts of compile-time error messages.
The third (quality) parameter for Wbmp stands for the threshold when called from image2wbmp().
The third and fourth arguments are a pointer to a buffer containing the token text, and the size of the token in bytes.
The third and fourth entries are a general and a particular category, respectively, that include one or more relevant characters.
The third argument is a generic pointer intended to point to a structure that may contain arguments or space in which to write return values.
The third argument is minor version.
The third argument points to a buffer containing the name of the main database file.
The third argument to this function, aOvflSpace, is a pointer to a buffer big enough to hold one page.
The third argument to this function, zName, is used as the name of both the scalar and, if created, the virtual table.
The third argument, if present, is a minimum length desired for the output array.
The third case is a chunk of heap memory (defaulting to 100 pages worth) that is allocated when the page cache is created.
The third form sets a spill size that may be different form the cache size.
The third is the minor token.
The third literal is the lowercased unqualified name
The third parameter is passed NULL In this case.
The third register will contain the content of the second table column.
The third rule was added because if X uses skip-scan less than Y it still might deserve a lower cost even if it is a proper subset of Y.
The third term of the test was added to fix ticket #2565.
The third value is the base used for arithmetic (currently always 10) as an Integer.
The thread 'th' is registered to be trying unblock.
The thread 'th' is unblocked.
The thread calling fork is the only thread in the created child process.
The thread identifier
The thread that will be using the new IncrMerger
The thread will append events to this linked list
The thread will only ever remove all the commands...it will never append a command
The thread writes to this fd when there are events ready to be returned
The threadid macro resolves to the thread-id or to 0.
The three arguments to the function come directly from a detach statement:  DETACH DATABASE x  SELECT sqlite_detach(x)
The three bits give eight cases.
The three bits give seven cases.
The three function arguments
The three output values will always be modified.
The three parameters are: N:    The number of columns in the index including the rowid/pk (note 1) K:    The number of columns in the index excluding the rowid/pk.
The threshold argument defines the tolerance to be used while comparing the image color and the color to crop.
The threshold for the amount of main memory to use before flushing  records to a PMA is roughly the same as the limit configured for the page-cache of the main database.
The threshold is in a macro that can be changed at configure time.
The threshold method works relatively well but it can be improved.
The time interval specified 1,000,000 or more microseconds.
The time slicing may cause this function call to take up to 100 ms longer than you specified.
The time string can be omitted as long as there is a year and date.
The timedelta should have a function "total_seconds" which contains the value we want.
The timeout value is an integer number of milliseconds passed in as the first argument.
The timer thread sleeps until woken up by rb_thread_wakeup_timer_thread() if only one Ruby thread is running.
The timer thread sleeps while only one Ruby thread is running.
The tmp1next must be TRUE in either way.
The to-table need not exist when the from-table is created.
The token *pName contains the name of a database (either "main" or "temp" or the name of an attached db).
The token BLOCK-END denote indentation decrease that ends a block collection (cf.
The token codes above must all fit in 8 bits
The token level exceeds our allowed limit
The token that holds the name of the view
The tokenizer always gives us a token
The tolerances below are conservative.
The top of the loop looks like this:  Null       1                # Zero the rowset in reg 1  Then, for each indexed term, the following.
The top of the parser's stack
The topmost item should be 0.
The total delay time before giving up is less than 1 second.
The total delay time before giving up is less than 10 seconds.
The total length cannot exceed 253 characters (final dot not included)
The total number of bytes in all fragments is recorded.
The total number of occurrences of the phrase in each column of  the FTS table (considering all rows), and  2.
The total size of the shared memory.
The tp_hash slot will be set PyObject_HashNotImplemented when the module is loaded.
The tr_tm parameter determines whether the BEFORE or AFTER triggers are coded.
The trailing arguments are the usual subsitution values.
The trait for this alias has not been resolved, this means, this alias was not applied.
The transaction counter has changed
The transaction is not rolled back and any changes to prior rows are retained.
The transaction journal now exists and we have a RESERVED or an EXCLUSIVE lock on the main database file.
The transfer begins at "offset".
The transfer function being wrapped
The transformed rejection method for generating Poisson random variables W.
The transient database requires temporary disk space approximately equal to the size of the original database.
The translation is done in-place and aborted if the output overruns the input.
The translation is used in order to maximize the number of bits that will fit in a Bitmask.
The tree being checked out
The tree is modified in place.
The triangular matrix is singular and its inverse can not be computed.
The trick here is that any conflict on the rowid value must be detected before any  modifications are made to the database file.
The trick is to disable as much as we can without disabling too much.
The tricky bit is figuring out the pointer to return in *pzTail.
The tricky case are chains of operations, where it's not necessarily a given that converting an integer to double before the chain of operations is the same as converting it after the chain.
The tridiagonal is L*U or, if you prefer, the symmetric tridiagonal to which it is similar.
The trigger containing the target token
The trigger must be in the same schema as the table or else it must be a TEMP trigger.
The trigger step be fixed to one database
The trigger that this step is a part of
The triggered program
The trigonometric functions in degrees
The trouble starts if the CASCADE or SET NULL action  trigger causes other triggers or action rules attached to the  child table to fire.
The trunk has no leaves and the list is not being searched.
The trunk page is required by the caller but it contains  pointers to free-list leaves.
The two arguments are 64-bit docid values.
The two classes are closely associated.
The two fields form a double-linked list of chunks of related sizes.
The two journal files
The two limit values override the defaults, whatever their value.
The two older interfaces are retained for backwards compatibility, but their use is discouraged.
The two parameters are the number of rows in the table or index (C) and the number of columns in the index (N).
The two pass scaling function is based on: Filtered Image Rescaling Based on Gems III - Schumacher general filtered image rescaling (pp.
The two subsequent arguments should be the name of the OS function that failed (e.g. "unlink", "open") and the associated file-system path, if any.
The two subsequent arguments should be the name of the OS function that failed and the associated file-system path, if any.
The two subterms are in disjunction - they are OR-ed together.
The two values have different signs
The two values have the same sign.
The two values that may be meaningfully bound to the :1 parameter in statements SQL_REPLACE_STAT and SQL_SELECT_STAT.
The two values will differ if #gets is called with a separator other than newline.
The two values will differ if +gets+ is  called with a separator other than newline.
The type argument must be 1 in order to set the data directory or 2 in order to set the temporary directory.
The type for a callback function.
The type must be a bitmask with a single bit set.
The type of change (UPDATE, INSERT, DELETE) is specified by the first argument.
The type of lock held on this fd
The type of tv_sec in struct timeval is time_t in POSIX.
The type of type is determined by the flags parameter.
The type resolver would have upcast already
The type used to represent a page number.
The type was set in __array_prepare__
The typedef is necessary to work around problems in certain C++ compilers.
The tzinfo time zone conversion would require this style of access anyway.
The u.hdr.prevSize field is the size of the previous chunk in blocks if the previous chunk is on the freelist.
The u.pDestructor field is used by per-connection app-def functions.
The u.pHash field is used by the global built-ins.
The ucs2 buffer must be large enough to hold 2*ucs4length characters due to the use of surrogate pairs.
The ufunc does not support void/structured types, so these need to be handled specifically.
The ufunc is called whenever any of it's input arguments match the user_dtype argument.
The underlying VFS is free to memory map as little or as much as it wants.
The underlying VFS might choose to preallocate database file space based on this hint in order to help writes to the database file run faster.
The underlying database file
The underlying file iNode
The underlying mmapped file
The underlying mutex is non-recursive.
The underlying shared-memory file
The underlying unixShmNode object
The underlying winShmNode object
The underlying xFileControl method might also return SQLITE_ERROR.
The underscore character "_" (0x5F).
The unicode "subsitute" character (0x1A).
The unicode() function.
The unix errno from last I/O error
The unixFile structure is subclass of sqlite3_file specific to the unix VFS implementations.
The unixInodeInfo structure keeps a list of file descriptors that need to be closed and that list is walked (and cleared) when the last lock clears.
The unlock-notify callback is not reentrant.
The unlockBtreeIfUnused() call below will unlock the pager.
The unoptimized version would be ...
The unqualified db name
The unused blocks are stored in a chain list pointed by free_blocks.
The update box is specified by the center coordinates of its first cell.
The update hook implementation must not do anything that will modify the database connection that invoked the update hook.
The update hook will be invoked, if it exists.
The update is visible to non-RBU clients during stage 2.
The update proceeds in three stages:  1) The database is updated.
The update process of divide and conquer failed.
The update() method and the left-shift operator are overridden by each implementation subclass.
The update-hook is invoked if one is configured,  P4 is not NULL, and the OPFLAG_NCHANGE flag is set in P2.
The updated nPhaseOneStep value is stored in the rbu_state table if the RBU update is suspended.
The upper 16 bits are the index of the first byte of a range and the lower 16 bits are the index of the last byte of that range.
The upper 16-bits contain a combination of the following bits, used to describe extra constraints on full-text searches.
The upper 32 bits of the result will be in r2 and the lower 16 bits will be in r1.
The upper 5 bits are known at this point.
The upper bound for work done is prod(shape_a)*prod(shape_b), which scales faster than than work done by binary ufuncs, after broadcasting, prod(shape_a).
The upper bound on 62 is because a 64-bit integer bitmap is used internally to track attached databases.
The upper bound on this value is 65536.
The upper or lower bound just coded
The upper triangle is unchanged.
The uptr type is an unsigned integer large enough to hold a pointer
The use of _msize() is automatic, but can be disabled by compiling with -DSQLITE_WITHOUT_MSIZE.
The use of a bitmask encoding for the operator allows us to search quickly for terms that match any of several different operators.
The use of a stale cache can lead to database corruption.
The use of objects looks pretty broken here
The use of the "v2" interface is recommended.
The use of the new "v2" interface is recommended for new applications but the legacy interface will continue to be supported.
The use of this interface is only necessary if the default setting is found to be suboptimal for a particular application.
The useWal parameter is true to force the use of the WAL and disable the case where the WAL is bypassed because it has been completely checkpointed.
The user could have skipped binding - don't crash
The user error handler failed, use built-in error handler
The user has issued a query of the form "MATCH '*...'".
The user has killed its own connection
The user is required to ensure that no other thread accesses the destination handle for the duration of the backup operation.
The user might have not bound any variables for result.
The user-supplied minor token value.
The userdata is 0x1 for left trim, 0x2 for right trim, 0x3 for both.
The users INSERT statement may have specified a value for the "rowid" field, for the "docid" field, or for both.
The usual value is zero but it might be more if the alias is contained within a subquery of the original expression.
The usually value is zero but it might be more if the alias is contained within a subquery of the original expression.
The utcoffset function should return a timedelta
The vacuum can be resumed by calling this function to open a new RBU handle specifying the same target and state databases.
The vacuum_db journal file is deleted when the pager is closed by the DETACH.
The value below is therefore a minimum, and we put a maximum on it for safety.
The value can only be set if the database has not yet been created.
The value extracted is stored in register P3.
The value for the token
The value given for `b` is ignored in this case.
The value in register (P3+P2-1) corresponds to the  p2th element of the argv array passed to xUpdate.
The value in register P1 is passed as the zName argument to the xRename method.
The value is (iRowid/iCol/iPos).
The value is 1 if the particular category is not part of the general category.
The value is a string, and identifier, or a number.
The value is considered false if it has a numeric value of zero.
The value is considered true if it is numeric and non-zero.
The value is one of:  0 NONE 1 FULL 2 INCREMENTAL
The value is stored in *v.
The value is the number of slots in the list.
The value must be freed the same number of times it is copied or there will be a memory leak.
The value of 'a' is zero.
The value of N is added to the current status value and the high-water mark is adjusted if necessary.
The value of N is stored in the MergeEngine.nTree variable.
The value of N is stored in the VdbeSorter.nTree variable.
The value of NN appears to give the best results overall.
The value of TK_ and OP_ constants are arranged such that we can compute the mapping above using the following expression.
The value of an Constructive is always an Array.
The value of fc at this point is always one character, though we may or may not be in UTF mode.
The value of keyClass  determines what kind of key the hash table will use.
The value of lengthptr distinguishes the two phases.
The value of reqchar doesn't change either.
The value of semaphore 1 (SYSVSEM_USAGE) is a count of the number of processes using the semaphore.
The value of sumsq is assumed to be at least unity and the value of ssq will then satisfy 1.0 .le.
The value of the  root-node path is '/'.
The value of the "pending" byte must be 0x40000000 (1 byte past the 1-gibabyte boundary) in a compatible database.
The value of the "rank" column.
The value of the INTEGER PRIMARY KEY column is always a NULL.
The value of the constant is returned if a definition is found, otherwise a +NameError+ is raised.
The value of the expression is unknown (NULL) if the LHS is NULL or if the LHS is not contained within the RHS and the RHS contains one or more NULL values.
The value of the iVersion field is initially 1 but may be larger in future versions of SQLite.
The value of the overall encoding consists of the concatenation of each partial encoding taken in sequence.
The value of the path for the left-most child page of the root of a b-tree is '/000/'.
The value of the pointer is converted to a sequence of printable characters, in an implementation- defined manner.'' -- ANSI X3J11
The value passed as iArg is cast to a (void*) and made available as the user-data (sqlite3_user_data()) for the function.
The value passed as the first argument to this function is the right-hand operand to the MATCH operator.
The value passed as the second argument to this function is optional.
The value passed as the second parameter is the total number of savepoints, including the new anonymous savepoint, open on the B-Tree.
The value passed into szExtra depends on the SQLite version, the target platform, and how SQLite was compiled.
The value placed in reduce_outerdim is the index into the AXISDATA for where the second level of the double loop begins.
The value returned by sqlite3_column_type() is only meaningful if no type conversions have occurred as described below.
The value returned by the block will be substituted for the match on each call.
The value returned by this function should always be the same as the (CellInfo.nSize) value found by doing a full parse of the cell.
The value returned from the PHP function being called will automatically be converted if necessary.
The value returned from the function is used to determine if the event handler should remain set.
The value returned in this case is 3.
The value returned includes space to create a copy of the Expr struct itself and the buffer referred to by Expr.u.zToken, if any.
The value returned indicates how well the request is matched.
The value returned is in allocations, not in bytes.
The value returned is the current spill size.
The value returned is the error state error code (i.e.  one of SQLITE_IOERR, an SQLITE_IOERR_xxx sub-code or SQLITE_FULL).
The value returned is the maximum number of pages in the page cache.
The value returned is the number by which the JsonNode counter should increment in order to go to the next peer value.
The value returned is the number of bytes written to pOut (if any).
The value returned is the number of bytes written to the argument buffer (always 2, 4 and 8 respectively).
The value returned might be zero.
The value returned will never be negative.
The value stored in the RBU_STATE_STAGE column is eStage.
The value to apply affinity to
The value to which (*pnOne) is set depends on whether or not the RBU  database contains an "rbu_count" table.
The value used with sqlite3_win32_set_directory() to specify that the data directory should be changed.
The value used with sqlite3_win32_set_directory() to specify that the temporary directory should be changed.
The valueBytes() routine is a helper function.
The values are bound to the statements parameters before returning.
The values are changed for all database connections within the same process.
The values are now limited to be between 0 and 0x0010ffff, no more than 4 bytes long, and the subrange 0xd000 to 0xdfff is excluded.
The values for registers not modified by the UPDATE must be reloaded from  the database after the BEFORE triggers are fired anyway (as the trigger  may have modified them).
The values in the  INSERT change are modified as if the row was inserted by the existing change and then updated according to the new change.
The values may be one of several types, as defined by XMLRPC_VALUE_TYPE.
The values of the output variables may not be trusted in this case.
The values stored in the other columns are not used.
The variable codelink will be added to ecode when the condition is false, to get to the second branch.
The variable does not have to exist prior to this call.
The variable iDb is set to the index of the database that the table or view is to be created in.
The variable is stored at the numeric value of the pointer + 1, which cannot be the location of another zend_refcounted structure.
The variable req_caseopt contains either the REQ_CASELESS value or zero, according to the current setting of the caseless flag.
The variable-length output codes are re-sized at this point, and a special CLEAR code is generated for the decompressor.
The variables used to return semantic value and location from the action routines.
The variant of LIKE used will be case sensitive or not depending on the RHS.
The varint format is different from that used by SQLite, so the maximum length is 10, not 9.
The varint is the number of bytes in the blob of data.
The varint is written to *pp.
The varint value is the size of the header in bytes including the size varint itself.
The various UTF/non-UTF and caseful/caseless cases are handled separately, for speed.
The various locks exhibit the following semantics:  SHARED:    Any number of processes may hold a SHARED lock simultaneously.
The various operations on open token or token prefix iterators opened using sqlite3Fts5IndexQuery().
The vdbe layer will read data directly from the in-memory list.
The vdbe must make its own copy of the column-type and other  column specific strings, in case the schema is reset before this virtual machine is deleted.
The vector DELTA contains the information necessary to construct the (singular) eigenvectors.
The vector DELTA contains the information necessary to construct the eigenvectors.
The vector data is divided into two groups: the first group contains the start / end character pointers, and the second is the start pointers when the end of the capturing group has not yet reached.
The vector inequality constraint
The verification will be done in runtime by ZEND_VERIFY_ABSTRACT_CLASS
The version of loaded GMP.
The version of the dbm library, if using Berkeley DB
The version of the engine or interpreter this ruby uses.
The vertex set could be stored in the qh.keepcentrum facet.
The very beginning of the WHERE loop
The very rare larger cases can be handled by the slower 64-bit varint routine.
The vfsFlags parameter is a bitmask to pass to the flags parameter of the xOpen() method of the supplied VFS when opening files.
The virtual database engine
The virtual file system to use
The virtual machine being built up
The virtual machine under construction
The virtual table being constructed
The virtual table to be modified
The vm under construction
The void* argument points at a Schema struct.
The volume (actually 2-norm) of the box
The vps_pagesize is 'Default user page size (kBytes)' and could be retrieved by gettune().
The wal file is deleted when the database is changed back to rollback mode or when the number of database clients drops to zero.
The wal-index consists of a header region, followed by an one or more index blocks.
The wal-index header contains the total number of frames within the WAL in the mxFrame field.
The wal-index is broken up into 32KB pages.
The wal-index is divided into pages of WALINDEX_PGSZ bytes each.
The wal-index is in shared memory.
The wal-index is transient.
The walHashNext() function advances the hash to the next value in the event of a collision.
The way I have it below is more truthful, but a little confusing.
The way accumulate is set up, we can't do buffering, so make a copy instead when necessary.
The way reduceat is set up, we can't do buffering, so make a copy instead when necessary using the UPDATEIFCOPY flag
The way you do this varies from one compiler to the next, so we have developed the following set of #if statements to generate appropriate macros for a wide range of compilers.
The week and the day of week should be a negative or a positive number (as a relative week/day from the end of year/week when negative).
The week starts with Monday.
The week starts with Sunday.
The where level to be coded
The whole SELECT statement
The whole chunk is free.
The width is definite, so use that as the flex basis.
The width specifies the minimum number of characters that will be written to the result for this field.
The win32 namespace will cut off trailing dots and spaces.
The winFile structure is a subclass of sqlite3_file* specific to the win32 portability layer.
The winMemData structure stores information required by the Win32-specific sqlite3_mem_methods implementation.
The winShmMutexHeld() must be true while reading or writing this list.
The winUnlock() routine erases all locks at once and returns us immediately to locking level 0.
The winVfsAppData structure is used for the pAppData member for all of the Win32 VFS variants.
The window size must be greater than or equal to the window size of the compressed stream.
The word before the chunk address contains the size of the chunk in bytes.
The word being stemmed (Reversed)
The word is reversed here.
The word is too big or too small for the porter stemmer.
The work array elements have to be INT32s, so the work array would need 256Kb at our recommended precision.
The work array need be only as big as the subbox, so the memory usage problem is solved.
The work was all in the test
The worst case probability of hitting N empty elements in a row is (1-3/4)**N.
The worst case probability of hitting an empty element is 1-3/4.
The wrFlag argument to sqlite3BtreeCursor()
The writability notified by select(2) doesn't show how many bytes writable.
The write cursors opened by WHERE_ONEPASS
The xBestIndex method may optionally populate the idxFlags field with a  mask of SQLITE_INDEX_SCAN_* flags.
The xBestIndex method of this virtual table requires an estimate of the number of rows in the virtual table to calculate the costs of various strategies.
The xCheckReservedLock() method checks whether any database connection, either in this process or in some other process, is holding a RESERVED, PENDING, or EXCLUSIVE lock on the file.
The xConnect() and xCreate() methods for the virtual table.
The xConnect() method is not called until the first time the virtual table is used in an SQL statement.
The xCreate and xConnect methods create an instance of this structure and xDestroy and xDisconnect free that instance.
The xCreate() function in turn returns an  sqlite3_tokenizer structure representing the specific tokenizer to be used for the fts3 table (customized by the tokenizer clause arguments).
The xDelete callback, if one is specified, is also invoked on the auxiliary data pointer after the FTS5 query has finished.
The xDestroy() virtual table method.
The xDisconnect() virtual table method.
The xFree function should not call sqlite3_free() on the memory, the btree layer does that.
The xGetLastError() method is designed to return a better low-level error message when operating-system problems come up during SQLite operation.
The xInit method initializes the memory allocator.
The xMalloc, xRealloc, and xFree methods must work like the malloc(), realloc() and free() functions from the standard C library.
The xMutexInit() method must be threadsafe.
The xOpen() operation has succeeded.
The xRandomness() function attempts to return nBytes bytes of good-quality randomness into zOut.
The xRandomness(), xSleep(), xCurrentTime(), and xCurrentTimeInt64() interfaces are not strictly a part of the filesystem, but they are included in the VFS structure for completeness.
The xRelease() method.
The xRename method for rtree module virtual tables.
The xRename() callback will modify the names of any resources used by the v-table implementation (including other SQLite tables) that are identified by the name of the virtual table.
The xRollbackTo() method.
The xRoundup method returns what would be the allocated size of a memory allocation given a particular requested size.
The xSavepoint() method.
The xSectorSize() method returns the sector size of the device that underlies the file.
The xSelectCallback2() method, if it is not NULL, is invoked following the walk of the  expressions and FROM clause.
The xShmLock method can transition between unlocked and SHARED or between unlocked and EXCLUSIVE.
The xShmUnmap method.
The xSleep() method causes the calling thread to sleep for at least the number of microseconds given.
The xUpdate method for rtree module virtual tables.
The xUpdate method will do a DELETE or an INSERT or both.
The xfer optimization is only attempted if tab1 and tab2 are compatible.
The xml serialization layer(s) will then return a value * of null, when the right thing may be no value at all.
The yDbMask datatype for the bitmask of all attached databases.
The year and date can be omitted as long as there is a time string.
The year is divided into 12 months of 30 days each.
The year must be specified.
The years earlier than 1970 are not made local, because the Windows API raises an error when they are attempted (see the comments above the get_localtime() function).
The yyzerominor constant is used to initialize instances of YYMINORTYPE objects to zero.
The zChunk array is always at least 8 bytes in size - usually much more.
The zDb variable is the name of the database (the "X").
The zDbName parameter is ignored.
The zFilename argument is the filename pointer passed into the xOpen() method of a VFS implementation.
The zFilename argument is the path to the database file to open.
The zFormat string must not be NULL.
The zName field holds the name of the VFS module.
The zParam argument is the name of the query parameter we seek.
The zTable variable is the name of the table (the "Y").
The zTerm buffer (size nTerm bytes) contains a term.
The zType is a word like "NULL" or "closed" or "invalid".
The zValue argument is the name of the directory to use.
The zWhere string must have been obtained from sqlite3_malloc().
The zero initialization above is all that is needed
The zeroblob(N) function returns a zero-filled blob of size N bytes.
The zerodata flag means that this page carries only keys and no data.
The zlib compressed data format is described in RFC 1950, which is a wrapper around a deflate stream which is described in RFC 1951.
The zlib compression library provides in-memory compression and decompression functions, including integrity checks of the uncompressed data.
The zlib format was designed to be compact and fast for use in memory and on communications channels.
The zlib notes say output buffer size should be (input size) * 1.01 * 12 - we'll use 1.02 to be paranoid.
Their dimensions are also set in the cross axis with the exception of items that are aligned "stretch".
Their getsockname returns int.
Then  return SQLITE_OK and return without populating BtShared.pPage1.
Then 16384 must be enough.
Then T bytes of data from the second set, and so on, such that no operation ever merges more than SORTER_MAX_MERGE_COUNT PMAs at a time.
Then acquire our lock.
Then again after the original record is deleted but before the new record is inserted using the INSERT convention.
Then allocate a new, empty sibling node.
Then another row is extracted from Queue and the iteration continues until the Queue table is empty.
Then array_richcompare could trust that whenever its special cases don't apply, simply calling the ufunc will do the right thing, even without this special check.
Then as long as the pattern string remains the same, the compiled regular expression can be reused on multiple invocations of the same function.
Then attempt to move the cursor to a rowid equal to or laster (in the cursors sort order - ASC or DESC) than the current rowid.
Then break out of the loop.
Then call this function recursively to write the parent of  pTree and its peers to the database.
Then check first 2 bytes for for 1111 0000, xx00 xxxx (overlong sequence), then check for a character greater than 0x0010ffff (f4 8f bf bf)
Then check for an overlong sequence, and for the excluded range 0xd800 to 0xdfff.
Then clear the Btree layer MemPage.isInit flag.
Then clear the array itself.
Then clear the column header cache on cursor P3.
Then combine each value to VALUE VERTEX
Then copy the 32-byte map into the code vector, negating it if necessary.
Then copy/paste the output in place of the following:
Then create and open the ephemeral table in which the records created from these arguments will be temporarily stored.
Then free any overflow pages associated with the  entry and finally remove the cell itself from within the page.
Then free any overflow pages associated with the entry and finally remove the cell itself from within the page.
Then free resources associated  with any savepoints that are destroyed by this operation.
Then if successful also mark the local connection as being locked.
Then increment the  Pager.journalOff variable by JOURNAL_HDR_SZ so that the next  record is written to the following sector (leaving a gap in the file that will be implicitly filled in by the OS).
Then increments pEnd once more so that it points to the byte immediately following the last byte in the position-list.
Then install pChild as the right-child.
Then it tries to deflate the size of the problem.
Then just as many characters of the MD5(pw,salt,pw)
Then load the blockid of the left-child of the b-tree node into variable iChild.
Then loop through the  columns of the table to see if any of them contain the token "hidden".
Then loop through the contents of this ephemeral table executing a VUpdate for each row.
Then match against the list of Unicode properties or large chars or ranges that end with a large char.
Then modify the schema cookie (since the ALTER TABLE modifies the schema).
Then obey similar code to character type repeats - written out again for speed.
Then our magic string
Then output any substrings that were * captured.
Then perform the following additions.
Then rb_thread_check_ints() is enough.
Then reacquire the other BtShared locks that we used to hold in ascending order.
Then reduce the compiled code to just a set of non-capturing brackets so that it doesn't use much memory if it is duplicated by a quantifier.
Then remember the forward reference.
Then remember this forward reference in the workspace so it can be filled in at the end.
Then render the value as a literal in place of the host parameter name.
Then return SQLITE_ERROR.
Then run a single CREATE TABLE statement to construct the imposter table in the parsed schema.
Then run the co-routines in parallel and merge the results into the output.
Then set the writable-schema flag, and disable CHECK and foreign key constraints.
Then sigmask guarantee atomics.
Then something really weird...
Then sort the list in order of current term again.
Then take the  2s complement of that positive value.
Then the  WhereMaskSet structure would map those cursor numbers into bits 0 through 5.
Then the OP_ResultRow opcode is used to cause sqlite3_step() to return the next row of result.
Then the VMs internal change counter resets to 0.
Then the character class tables.
Then the co-routine yields.
Then the contents of the journal are flushed out to the disk.
Then the following macros can be used to set, clear, or test individual bits within V.
Then the mean color in each remaining box becomes one of the possible output colors.
Then the runtime of this routine is N*N.
Then the single extracted row (now in the iCurrent table) becomes the content of the recursive-table for a recursive-query run.
Then this routine is called for each column.
Then try again to satisfy the allocation by carving a piece off of the end of the master chunk.
Then turn imposter mode back off again.
Then use the molads to find Tishri 1 of the current and following years.
Then using those as a basis to compute the N best WherePath objects of length 2.
Then verify it against a policy
Then we can just iterate over the first and second operands at the same time and not have to worry about picking the correct elements from each operand to apply the ufunc to.
Then we copy the input string.
Then we loop over this ephemeral table and for each row in the ephermeral table call VUpdate.
Then we see if run-together words should be treated as valid components
Then we try shm_open(2) (on Apple OS X).
Then while the initial invocation of this routine by X is incomplete, it is required that:  Calls to this routine from Y must block until the outer-most call by X completes.
Then write out each value (already tagged with TAG_VAL).
Then zero the original node.
Then,  right before it exits, the thread itself sets bDone to 1.
Then, following the "ROLLBACK TO sp" statement, reading page X will read data from the database file.
Then, for each level from 0 to nMax:  + number of input segments in ongoing merge.
Then, if required, a single byte at offset (nSize-1), to set the size of the file correctly.
Then, if the minimum number of matches is 1 or 0, cancel the possessive flag so that the default action below, of wrapping everything inside atomic brackets, does not happen.
Then, if the required encoding is UTF-16le or UTF-16be do a translation.
Then, if this is a non-covering index, add the cost of visiting the rows in the main table.
Then, see if this row is really a match, considering deferred tokens and NEAR operators (neither of which were taken into account earlier, by fts3EvalNextRow()).
Then, the ensure block is where we can safely deallocate your resources.
Then, we convert the argument to a string.
Then, when xOpen() is called to open the *-wal file associated with the RBU target in RBU_STAGE_OAL stage, instead of opening the *-wal file, the rbu vfs opens the corresponding *-oal file instead.
Theoretically, hue 0 (pure red) is identical to hue 6 in these transforms.
Theoretically, the stream is borked, so all further reads should fail.
Theoretically, the stream is borked, so all further writes should fail.
There already exists a WhereLoop on the list that is better than pTemplate, so just ignore pTemplate
There are (N+1)*M elements in the array.
There are 2 different modes of operation for a hash table:  FTS3_HASH_STRING        pKey points to a string that is nKey bytes long (including the null-terminator, if any).
There are 2 kinds of deflation -- first a value in the z-vector is small, second two (or more) singular values are very close together (their difference is small).
There are 3 kinds of storage implemented in this file.
There are 3 socket options which takes a struct.
There are 4 cases:  1) DELETE 2) UPDATE (rowid not modified) 3) UPDATE (rowid modified) 4) INSERT  Cases 3 and 4 may violate the rowid constraint.
There are 6 opcodes numbered from 0 through 5.
There are Btree cursors associated with each table.
There are Hash.htsize buckets.
There are P2 tables total.
There are a LOT of them, so they're separated out into include files, leaving this source file for actual implementation.
There are a bunch of functions that you expect to return a pid, like Unix.getpid() and Unix.create_process().
There are a bunch of operations that only the designated master thread is allowed to do.
There are a couple of different ways this can happen.
There are a few different OCaml modules that act as interfaces to this global storage.
There are a lot of ways to create insecure keys, the most notable is to simply take a password as the key without processing the password further.
There are actually several different VFS implementations in this file.
There are also other values that have to be saved.
There are also some static supporting functions.
There are assert() statements in the code to verify this.
There are debugging versions and production versions.
There are elaborate ways how an attacker can take advantage of such an IV.
There are emulations for clock_gettime().
There are five possible actions: ROLLBACK, ABORT, FAIL, REPLACE, and IGNORE.
There are four levels:  OFF       sqlite3OsSync() is never called.
There are lots of rules for determining compatibility - see comments embedded in the code for details.
There are many possibilities here to consider: - Assume YYFAIL is not used.
There are many possibilities here to consider: - If this state is a consistent state with a default action, then the only way this function was invoked is if the default action is an error action.
There are many types of socket: TCPSocket, UDPSocket or UNIXSocket for example.
There are more than 2 digits in the exponent.
There are nField slots for the columns of an index then one extra slot for the rowid at the end.
There are never very many files open at one time and lookups are not a performance-critical path, so it is sufficient to put these structures on a linked list.
There are no alignment requirements.
There are no entries associated with this key.
There are no exceptions to this - it's the way the parser in fts3_expr.c works.
There are no pages on the freelist, so append a new page to the database image.
There are nonstandard return values defined and used in the source code.
There are now 4 possibilities:  1.
There are one or more outstanding references to pages (after the last reference is dropped the pager should move back to OPEN state).
There are pages on the freelist.
There are several different types of pointer-map entries that need to be dealt with by this routine.
There are several fprintf() calls here, because gcc in pedantic mode complains about the very long string otherwise.
There are several special subcases when the minimum is zero.
There are several ways to build this library, depending on which way the database is accessed.
There are some optimizations that avoid running the match if a known starting point is not found, or if a known later character is not present.
There are some statically-defined PyArray_Descr objects corresponding to the basic built-in types.
There are suggestions that it was to skip a leap year ever 100 years like the Gregorian calendar.
There are three arguments to this option: A pointer to 8-byte aligned memory, the size of each page buffer (sz), and the number of pages (N).
There are three arguments: An 8-byte aligned pointer to the memory, the number of bytes in the memory buffer, and the minimum allocation size.
There are three basic components:  sqlite3_tokenizer_module is a singleton defining the tokenizer interface functions.
There are three different approaches to obtaining space for a page, depending on the value of parameter createFlag (which may be 0, 1 or 2).
There are three levels:  OFF       sqlite3OsSync() is never called.
There are three other classes that generate special property calls that are recognized only in an XCLASS.
There are three possible query strategies:  1.
There are three possible representations of the bitmap.
There are three possible strategies, in order of preference:  1.
There are three versions of this macro, one each for little-endian and big-endian processors and a third generic implementation.
There are two cases here.
There are two complications: (a) When CRLF is a valid newline sequence, and the current position is just before it, advance by an extra byte.
There are two exceptions: immediately after exclusive-mode has been turned on (and before any read or write transactions are  executed), and when the pager is leaving the "error state".
There are two methods of doing this, your object can define either marshal_dump and marshal_load or _dump and _load.
There are two possibilities.
There are two possible strategies - the default and the special  "onepass" strategy.
There are two scenarios where this risk can be ignored:  When the pager is in no-sync mode.
There are two types of boolean indices (which are equivalent, for the most part though).
There are two versions of this function.
There are two versions of this routine.
There are two ways in which deflation can occur:  when two or more eigenvalues are close together or if there is a tiny element in the Z vector.
There are two ways in which deflation can occur:  when two or more eigenvalues are close together or if there is a tiny entry in the Z vector.
There are two ways in which deflation can occur:  when two or more singular values are close together or if there is a tiny entry in the Z vector.
There are up to 5 names for each column.
There are usually between 5 and 500 set operations per Bitvec object, though the number of sets can sometimes grow into tens of thousands or larger.
There are various methods for file locking used for concurrency control:  1.
There can be an error in the middle of a multi-statement, which will cancel the multi-statement.
There can never be a first char if '.' is first, whatever happens about repeats.
There can only be a single writer active at a time.
There can only be one writer.
There can't be two sort flags of the same type after an array, and the very first argument has to be an array.
There cannot be more newlines here.
There could be an error message
There exists an unusable MATCH constraint.
There exists another row with the new.* primary key.
There has not been an opportunity to transition to WAL mode yet.
There is  no way that this operation can fail, so the return code from fts3ExprIterate() can be discarded.
There is (as before) no checking of the boolean dimension.
There is a corresponding leave-all procedures.
There is a doclist-index associated with the final term on the current  page.
There is a hash-table following every HASHTABLE_NPAGE page numbers in the wal-index.  Changing any of these constants will alter the wal-index format and create incompatibilities.
There is a quirk here.
There is a race condition here such that two or more threads all trying to open databases at the same instant might all reset the PRNG.
There is a race here which might cause WAL_RETRY to be returned even if BUSY_RECOVERY would be technically correct.
There is a scalar array, so we need to force a copy to simulate fancy indexing.
There is a similar code in compile_bracket_matchingpath.
There is a slight redundancy here but we can live with it.
There is a special fudge for calling match() in a way that causes it to measure the size of its basic stack frame when the stack is being used for recursion.
There is a subtle but important optimization here too.
There is a table for possessifying opcodes, all of which are less than OP_CALLOUT.
There is a time dependency such that the abort must occur after the multiwrite.
There is a typedef for this structure in sqlite.h.
There is a vanishingly small chance that a change will not be  detected.
There is a very low but non-zero probability of damage.
There is already a transaction open, so the prepared statement cannot throw an SQLITE_SCHEMA exception.
There is already at least 1 loop.
There is already result bound.
There is also a class level method to set this for all threads, see ::abort_on_exception.
There is also a class level method to set this for all threads, see ::report_on_exception.
There is also a guard word at the end of the MemBlockHdr.
There is also a reference count.
There is also an instance level method to set this for a specific thread, see #abort_on_exception.
There is also an instance level method to set this for a specific thread, see #report_on_exception.
There is an  upper bound on the size of allocated memory.
There is an added cost of O(N) when switching between TEST and SMALLEST primitives.
There is an assert() tagged with "NOTE 1" in the overflow cell insertion loop to prove this invariant.
There is an extra node on the end of the offsets to allow this routine to work right.
There is an implied "Halt 0 0 0" instruction inserted at the very end of every program.
There is an implied first entry the covers the page header, the cell pointer index, and the gap between the cell pointer index and the start of cell content.
There is an interaction with array-dtypes here, which generally works.
There is at least one core dimension missing, find in which operand it comes up first (it has to be an output operand).
There is at most one AutoincInfo structure per table even if the same table is autoincremented multiple times due to inserts within triggers.
There is however, one exception.
There is more than one character in the class, or an XCLASS item has been generated.
There is no "best-index".
There is no INDEXED BY clause.
There is no caching here.
There is no chance that the iterator will visit a change  the applies to table X, then one for table Y, and then later on visit  another change for table X.
There is no conflicting row in this case.
There is no constraint to check
There is no difference between FULL and EXTRA for WAL mode.
There is no difference between SQLITE_SYNC_FULL and SQLITE_SYNC_NORMAL on platforms other than MacOSX.
There is no ellipsis yet, but it is not a full index so we append an ellipsis to the end.
There is no guarantee to perpetuate it.
There is no harm in an application accessing the  file-system via "rbu" all the time, even if it only uses RBU functionality  occasionally.
There is no interpretation of the data.
There is no limit to the number of synonyms that may be provided for a single token.
There is no limitation for multiple pushbacks including pushing back behind the beginning of the buffer string.
There is no mechanism by which the parser stack can be popped below empty in SQLite.
There is no need for a bitvec in this case.
There is no need for further mutexing.
There is no need for the master-journal.
There is no need to check the return values of the btree methods here, as "committing" a read-only transaction cannot fail.
There is no need to go further.
There is no need to initialize any registers to indicate the presence or absence of NULLs on the RHS.
There is no need to sync the file following this operation.
There is no nul terminator.
There is no particularly good way around this in the case that all 256 8-bit shades are used, but one could write some custom 16-bit code to handle the case where there are gdFree palette entries.
There is no performance benefit to either.
There is no point storing per-file entries as it would not be possible to detect added / deleted entries between separate files.
There is no prefix-length field for first term in a node
There is no reason any cursor should have an outstanding reference  to an overflow page belonging to a cell that is being deleted/updated.
There is no sense in actually repeating assertions.
There is no size field for the final position list, as it can be derived from the total size of the blob.
There is no such thing as an EOF return.
There is no support for calculation of dimensions based on intrinsic aspect ratios (e.g. images).
There is no support for forced breaks.
There is no way for a call to BackupUpdate() or BackupRestart() to interfere with backup_remaining() or backup_pagecount().
There is no way for the underlying implementation to return an error if one occurs during xNext().
There is no way of generating a sequence of numbers at compile time in C.
There is no way to distinguish between an incorrect zDbName and an SQLITE_ERROR return from the underlying xFileControl method.
There is no way to know the size of buffer snprint_value() needs in order to print a value there.
There is no way to tell if this is populated or not.
There is no way to tell which happened.
There is no way to unfreeze a frozen object.
There is nothing fancy possible, so just make an array
There is one PGroup per PCache.
There is one cursor per table in the FROM clause.
There is one element in the array for each token in the FTS expression.
There is one exception to the previous paragraph: when a row is inserted, updated or deleted, if one or more of its primary key columns contain a NULL value, no record of the change is made.
There is one exception to this rule.
There is one locking structure per inode, so if the same inode is opened twice, both unixFile structures point to the same locking structure.
There is one object of this type for each pager.
There is one unfortunate ambiguity, caused by history.
There is only ever one instance of this SQL statement compiled for each FTS3 table.
There is only one exported symbol in this file - the function sqlite3RegisterDateTimeFunctions() found at the bottom of the file.
There is only one exported symbol in this file - the function sqliteRegisterBuildinFunctions() found at the bottom of the file.
There is only one possible option at  * the moment, "-g" to request repeated matching to find all occurrences,  * like Perl's /g option.
There is only one, so just keep it in its register(s) and fall through to the delete code.
There is plenty of room for any possible stack (stack used to be 8000 characters).
There is some controversy about what the correct behavior should be.
There is support for caseless matching if UCP support is present.
There may be a keyword argument we can use instead
There may be up to 65535 such values, which is too large to put on the stack, but using malloc for small numbers seems expensive.
There might be concurrent writers, when that happens, the first writer wins.
There might have been a previous inconsistent state, consistent state with a non-default action, or user semantic action that manipulated yychar.
There might not be any such table and column.
There must already be a RESERVED or EXCLUSIVE lock on the database  file when this routine is called.
There must be a doclist for a leaf node, and there must not be a doclist for an internal node.
There must be a read-lock on the database (either a transaction must be started or there must be an open cursor) before executing this instruction.
There must be an open cursor to pTab in iTable when this routine is called.
There must be at least one argument passed to this function (otherwise the non-overloaded version would have been called instead of this one).
There must be at least one outstanding reference to the pager if in ERROR state.
There must be at least one stack segment.
There must be exactly one reference to the page.
There must be imposter tables.
There must be no references to the page previously located at pgno (which we call pPgOld) though that page is allowed to be in cache.
There must be some entry before the one we want to delete
There seems to be no standard for return value (RFC2133) but INRIA implementation returns EAI_xxx defined for getaddrinfo().
There should be at least one opcode.
There should be two additional arguments.
There should not be fragment.
There used to be a separate OP_VRowid opcode for use with virtual tables, but this one opcode now works for both table types.
There was a sign extension bug in older revisions of this function.
There was once an "if" here.
There were no digits at all so scanning has failed and we are done.
There will be a read lock on the database whenever there is an open cursor.
There will simply be a standard struct with 2 child elements.
There's ABSOLUTELY NO WARRANTY, express or implied.
There's absolutely no warranty.
There's been some horrible disaster.
There's left-overs, so save 'em
There's something to read.
Thereafter, when one of the FuncDef objects is deleted, the reference count on this object is decremented.
Thereafter, whenever it goes to access the database, it checks the cookie to make sure the schema has not changed since it was last read.
Therefor we cannot use MYSQLI_LLU_SPEC and must use MYSQLI_LL_SPEC.
Therefor we need to make sure that if data is available we fill the buffer completely.
Therefor we need to re-use the exiting PHP instance to handle the request rather then creating a new one.
Therefore UNDEFINED can be defined as 0 in situations where only unsigned numbers are desired.
Therefore all non-root nodes must contain at least 3 entries.
Therefore infinite recursions are not possible.
Therefore it is a fatal error if "trailer" is null.
Therefore it is essential to add the output of OpenSSL::Cipher#final to your encryption/decryption buffer or you will end up with decryption errors or truncated data.
Therefore the next statement sets variable 'max' to 1 for the max() aggregate, or 0 for min().
Therefore they can be overwritten by different threads if they detect the CPU features in the same time.
Therefore we can simply ignore this case.
Therefore we do non-blocking read to clean the line, if there is a need.
Therefore we don't use realloc(ptr, 0) for portability reason.
Therefore we have to kill internal threads temporary.
Therefore we need to disable FORTIFY_SOURCE until glibc fixes it.
Therefore we need to fix it up.
Therefore you should use spawn() instead of fork().
Therefore, a copy will be made of the data if needed before handing it to the sorting routine.
Therefore, don't ever reduce the length at this point.
Therefore, files created by memfd_create() have the same semantics as other anonymous memory allocations such as those allocated using mmap(2) with the MAP_ANONYMOUS flag.
Therefore, go ahead and free all resources.
Therefore, if one or more frames have already been written to the log (and therefore  also copied into the backup databases) as part of this transaction, the backups must be restarted.
Therefore, if the minimum is greater than zero, just ignore the repeat.
Therefore, if we have just failed to match, starting at a newline, do not continue.
Therefore, it cannot be used in a NOTPROP case.
Therefore, it is only recommended in cases when you need to instantiate arrays with natively immutable objects such as Symbols, numbers, true or false.
Therefore, only colors that are within minmaxdist of some part of the box need be considered.
Therefore, op1 won't become the result so we have to free it.
Therefore, the client has no way to find out whether there are more result sets of a multiple-result-set statement pending.
Therefore, these apply in the case when only characters less than 256 are recognized to match the types.
Therefore, use it as the basis for converting the relative path name to an absolute one by prepending the data directory and a backslash.
Therefore, use it as the basis for converting the relative path name to an absolute one by prepending the data directory and a slash.
Therefore, we repeatedly call ubf_wakeup_thread() until a target thread exit from ubf function.
Therefore, when using PKCS5 for password storage, it suffices to store values equal to the digest output length, nothing is gained by storing larger values.
Therefore, while parsing schema information, the Lookaside.bEnabled flag is cleared so that lookaside allocations are not used to construct the schema objects.
These  functions call sqlite3MallocRaw() directly instead of sqliteMalloc().
These  have also already been taken care of by the insertCell() code.
These 2 functions added at v1.1.7
These 4 rules can delay the start of the year by as much as 2 days.
These API takes a C function as a method body.
These PMAs are merged into a single PMA that is written to file pTemp2.
These action code values signify what kind of operation is to be authorized.
These addresses must be stored so that we can go back and fill in the P4_KEYINFO and P2 parameters later.
These algorithms use special sorting.
These aliases are provided in order to maintain forward compatibility.
These appear to be difficult to detect, since an exhaustive search is too expensive.
These are "char *" because they are passed to the outside world.
These are added to the plans prerequisites before it is added to pBuilder.
These are all operators that are of interest to the query planner.
These are already defined in the sqliteInt.h, but the definitions need to be repeated for separate compilation.
These are also old calls (should use PyArray_NewFromDescr)
These are assigned at the end to avoid unitialized memory in case of an error
These are both interfaces to Random::DEFAULT, the Ruby system PRNG.
These are definitions of bits in the WhereLoop.wsFlags field.
These are dummy functions to avoid linking errors when JIT support is not being compiled.
These are from Wincrypt.h, they conflict with OpenSSL
These are generallly the size needed, rounded up to a multiple of eight.
These are handled separately.
These are just some last resort values that might match some Un*x system if building this version of gd separate from graphviz.
These are just wrappers around the main interface routine of sqlite3_exec().
These are merely placeholders.
These are mutually exclusive
These are normally -1 and +1 respectively, but might be inverted to +1 and -1 if the b-tree is in DESC order.
These are not allowed to refer to any names, so pass an empty NameContext.
These are not magic numbers as they are part of the SQLite file format.
These are not types, and cannot be preceded by "u" to make them unsigned.
These are protocol and system specific, see your local system documentation for details.
These are rewritten as a subquery:  SELECT * FROM (SELECT ...
These are set to non-zero when an  ORDER BY term exactly matches one of the terms of the  result-set.
These are shared with handle_stubs.c
These are shared with hh_shared.c
These are similar to UPDATE operations.
These are the amounts to shift an input value to get a histogram index.
These are the bits that determine if a bundle is in the X encoding.
These are the breakpoints for different numbers of bytes in a UTF-8 character.
These are the flock() constants.
These are the funtions that are contained within.
These are the indicator bits and the mask for the data bits to set in the first byte of a character, indexed by the number of additional bytes.
These are the initializer values used when declaring a "static" mutex on Win32.
These are the integer action codes that the authorizer callback may be passed.
These are the poles of the secular equation.
These are used by 'col' tables only
These brackets are converted to repeats, so no global based single character repeat is allowed.
These btrees have pKey,nKey set to their key and pData,nData,nZero set to zero.
These bytes should never be read or written.
These callback routines are used to implement the following:  sqlite3ExprIsConstant() sqlite3ExprIsConstantNotJoin() sqlite3ExprIsConstantOrFunction()
These can and should be DECREF'd and INCREF'd as appropriate, anyway.
These cases are never obeyed.
These cases better be left to handled by normal way.
These checks are currently valid for oci_bind_by_name, not oci_bind_array_by_name.
These checks are done:  1.
These checks are the responsibility of the caller, and should be done outside of any inner loops.
These codes are defined in a range that can be tested for.
These components are stored and updated in VF and VL, respectively, in DLASD6.
These components are stored and updated in VF and VL, respectively, in SLASD6.
These conditions have already been verified in btreeInitPage() if SQLITE_ENABLE_OVERSIZE_CELL_CHECK is defined
These constants (all generated automatically by the parser generator) specify the various kinds of tokens (terminals) that the parser understands.
These constants specify the various numeric values for terminal symbols in a format understandable to "makeheaders".
These days it is often faster than table lookups or integer arithmetic.
These days, synchronous is always on by default regardless of the sign of the default cache size.
These default options can be overwritten for a single run of the iseq compiler by passing any of the above values as the +options+ parameter to ::new, ::compile and ::compile_file.
These definitions are broken out into a separate source file for easier editing.
These entry points are used by incremental I/O and can be omitted if that module is not used.
These entry points are used by incremental I/O only.
These exceptions are raised when zlib library functions return with an error status.
These extensions will automatically be appended to the +filename+.
These fields do not need to be freed when deallocating the AggInfo structure.
These file mapping APIs are common to both Win32 and WinRT.
These flags are used to control combinations of algorithm methods.
These flags control aspects of the operation of the btree.
These form diphthongs when preceding H
These function declarations are missing from the IMAP header files...
These functions and type are only ever used by code within the fts3SegWriterXXX() family of functions described above.
These functions could be located in different lib.
These functions may be called with the module as a receiver, and also become available as instance methods to classes that mix in the module.
These have already been set.
These hints could, in theory, be used by the compiler to generate better code, but currently they are just comments for human readers.
These integers are almost always small and are encoded as a single byte.
These integers will be replaced by copies of the corresponding result set expressions by the call to resolveOrderGroupBy() below.
These items should either be left unwrapped or wrapped by calling their own __array_wrap__ routine.
These iterators will be incrementally merged as the VDBE layer calls sqlite3VdbeSorterNext().
These letters are passed through unchanged
These limits can be as little as 512 bytes.
These lists are short, as they are used for characters with more than one "other case", so there is no point in recognizing them for OP_NOTPROP.
These locks will not be released until the connection is closed.
These look like magic numbers.
These macros are designed to work correctly on both 32-bit and 64-bit compilers.
These macros are provided to "stringify" the value of the define for those options in which the value is meaningful.
These macros are the standard way of turning unquoted text into C strings.
These macros can be used to test, set, or clear bits in the  Expr.flags field.
These macros can be used to test, set, or clear bits in the Expr.flags field.
These macros define the alternative names that are used.
These macros define the location of the pointer-map entry for a  database page.
These macros invoke routines that report the line-number on which the error originated using sqlite3_log().
These macros may someday permit efficient use of 64-bit integers.
These macros pack up tests that are used for partial matching, and which appear several times in the code.
These macros used to resolve to various kinds of compiler magic that would generate warning messages when they were used.
These make C and G soft
These may be read directly by the caller.
These may include sections of the mesh boundary (including edges of logical holes defined by the region array), in addition to sections of the contour curves at one or both levels.
These messages are intended for debugging activity only.
These methods may rely on +coerce+ to ensure interoperability with instances of other numeric classes.
These methods use special implementations
These must be calculated even if open() is not called, as they may be stored as part of the file handle and used by the  'conch file' locking functions later on.
These no-op macros are used in front of interfaces to mark those interfaces as either deprecated or experimental.
These notices must be retained in any copies of any part of this documentation and/or software.
These numbers are obtained separately.
These operations are identified in the comment at the top of this file  (fkey.c) as "I.1" and "D.1".
These operations are identified in the comment at the top of this file  (fkey.c) as "I.2" and "D.2".
These optional interfaces are provided by some VFSes to facilitate testing of the VFS code.
These parameters and their meanings are subject to change without notice.
These parameters come from a TLS global
These pointer sized fields temporarly stores internal variables.
These pointers are different from the pointers accepted by NpyIter_ResetBasePointers, because the direction along some axes may have been reversed, requiring base offsets.
These precomputed constants are defined here rather than simply putting the constant expressions inline in order to work around bugs in the RVT compiler.
These prevent GH from becoming F
These real versions are due to Isaku Wada, 2002/01/09 added
These recognize specific lists of characters.
These registers need to be preserved in case there is an IN operator loop.
These repeats aren't empty
These require special handling
These routines accomplish those tasks.
These routines all implement some additional formatting options that are useful for constructing SQL statements.
These routines are Walker callbacks used to check expressions to see if they are "constant" for some definition of constant.
These routines are Walker callbacks.
These routines are available for the mem2.c debugging memory allocator only.
These routines are checking an expression to see if it is a constant.
These routines are concerned with the time-critical task of mapping input colors to the nearest color in the selected colormap.
These routines are designed to aid in process initialization and shutdown on embedded systems.
These routines are in a separate files so that they will not be linked if they are not used.
These routines are used inside assert() statements only.
These routines are used to avoid simulated errors in places where we do not care about errors.
These routines are used to make sure that an index, trigger, or view in one database does not refer to objects in a different database.
These routines attempt to convert the value where appropriate.
These routines format strings much like the printf() from the standard C library, though the implementation here has enhancements to support SQLite.
These routines format strings much like the printf() from the standard C library, though the implementation here has enhancements to support SQLlite.
These routines is used to get quick access to key and data in the common case where no overflow pages are used.
These routines may only be called from within a preupdate callback.
These routines only compile the first statement in zSql, so *pzTail is left pointing to what remains uncompiled.
These routines print a parse tree to standard output for debugging and analysis.
These routines provide selection of a custom color map for an image, followed by mapping of the image to that color map, with optional Floyd-Steinberg dithering.
These routines register callback functions that can be used for tracing and profiling the execution of SQL statements.
These routines should return true if the mutex in their argument is held or not held, respectively, by the calling thread.
These routines walk (recursively) an expression tree and generate a bitmask indicating which tables are used in that expression tree.
These routines work with a list of "boxes", each representing a rectangular subset of the input color space (to histogram precision).
These should allow users to continue to use their current scripts, but should in reality warn the user that this functionality is deprecated.
These should be initialized by php_rshutdown_session_globals() always when execution is finished.
These should never be used unless previously set, but they get saved and restored, and so we initialize them to avoid reading uninitialized locations.
These sizes can also contain special values.
These statements are here to stop the compiler complaining about unitialized variables.
These statistics are made available to the query planner to help it make better decisions about how to perform queries.
These structures are ordered by their address.
These tables are also required by pcretest in 16- or 32-bit mode.
These tables are used to implement functions that take a state number and lookahead value and return an action integer.
These tables have no persistent representation of their own, so xConnect and xCreate are identical operations.
These tables have no persistent representation of their own, so xDisconnect and xDestroy are identical operations.
These terms are moved over to the WHERE clause during join processing but we need to remember that they originated in the ON or USING clause.
These terms refer to registers in the virtual machine.
These two are defined as macros in both cases
These two functions are repeated in the README.tokenizer file as an example, so it is important to test them.
These two locals can be used by the current opcode.
These two settings are used in the code for checking a UTF-8 string that follows immediately afterwards.
These two statements stop the compiler for warning about possibly unset variables caused by the jump to HANDLE_NUMERICAL_RECURSION.
These two variables are set by every call to backup_step().
These typedefs might change for architectures where the sizes very.
These types are mentioned as array types in the manual, but I wouldn't know how to create an array field with any of these types.
These use local variables, so do them in a separate routine to avoid having to move the frame pointer in the common case
These used to be defined locally, but now we use the varint routines in the util.c file.
These used to have mnemonic name like 'i' for SQLITE_AFF_INTEGER and 't' for SQLITE_AFF_TEXT.
These values are for testing purposes only.
These values can be changed by the caller, but are shared between all threads.
These values must match the values defined in wal.c for the equivalent locks.
These values tries to mimic that of the UNIX version of nice().
These values will be  used by any BEFORE and AFTER triggers that exist.
These variables are not thread-safe.
These variables do not exist in a non-testing build.
These variables do not need to be preserved over recursion in this function, so they can be ordinary variables in all cases.
These verifications occurs for the main database only
These versions of the macros manage a private stack on the heap.
These versions of the macros use the stack, as normal.
These will be set in gcc_android_386.c for android-specific customization.
These will be set in gcc_android_amd64.c for android-specific customization.
These will do the right thing for either R,G,B or B,G,R color order, but you may not like the results for other color orders.
They all use the same area of memory, so only one can be active at any one time.
They all zero-out the memory as previously done
They allow macros like PCRE_MAJOR to be defined without quotes, which is convenient for user programs that want to test its value.
They also make IOCtx calls look better...
They are build using the ctype functions, and consequently their contents will depend upon the current locale setting.
They are defined here only to make it easier to avoid clashes with the flags above.
They are dequoted before being added to the SrcList.
They are equal up to the last part of the equal part of the fraction.
They are evaluated once and the results of the expression are reused.
They are implemented as macros in sqliteInt.h.
They are integer pointers which indicate the portion of the workspace used by a particular array in DLAED2 and SLAED3.
They are integer pointers which indicate the portion of the workspace used by a particular array in DLAED8 and DLAED9.
They are integer pointers which indicate the portion of the workspace used by a particular array in DLASD2 and DLASD3.
They are integer pointers which indicate the portion of the workspace used by a particular array in DLASD7 and DLASD8.
They are integer pointers which indicate the portion of the workspace used by a particular array in SLAED2 and SLAED3.
They are integer pointers which indicate the portion of the workspace used by a particular array in SLAED8 and SLAED9.
They are integer pointers which indicate the portion of the workspace used by a particular array in SLASD2 and SLASD3.
They are integer pointers which indicate the portion of the workspace used by a particular array in SLASD7 and SLASD8.
They are literal ASCII  backslash 0x5c characters.
They are not ambiguous from the view of the caller because struct sockcred is sent if and only if the caller sets LOCAL_CREDS socket option.
They are not both allowed to be zero.
They are not called unless the underlying sort function for the type is available.
They are not guaranteed to be future-compatible, and may be ignored if the underlying implementation does not support them.
They are on different cache lines because we modify them atomically.
They are read by calls to backup_remaining() and backup_pagecount().
They are replaced by Unicode property escapes.
They are required if (a) this is not the first fragment, or (b) this fragment does not begin at position 0 of its column.
They are retained for backwards compatibility but are now no-ops.
They are similar to the sqlite3changeset_new() and sqlite3changeset_old() functions, except that they omit all error checking and return a pointer to the requested value.
They are stored in the OS's standard temporary file directory, and are deleted prior to exit.
They are textual representations of ASN.1 OBJECT IDENTIFIERs.
They are then deleted/xDisconnected  next time a statement is prepared using said sqlite3*.
They are then deleted/xDisconnected next time a statement is prepared using said sqlite3*.
They are used to implement the scalar SQL function rbu_fossil_delta().
They are used to store the set of table-locks required by the statement being compiled.
They are used to verify that different "types" of memory allocations are properly tracked by the system.
They are valid from the time SegmentReaderNew() returns until SegmentReaderNext() returns something other than SQLITE_OK (i.e. SQLITE_DONE).
They are very out-of-date but might be useful as an historical reference.
They are:  The byte offset of the first rowid on the page, if it exists and occurs before the first term (otherwise 0).
They can be turned off from pcretest so that automatic tests on bytecode can be written that do not depend on the value of LINK_SIZE.
They can be used from C level.
They can have the binary version of it
They cannot be DROP-ed.
They determine what kind of permissions the xAccess method is looking for.
They differ if stdout is redirected in the child process as follows.
They differ in how much of the tree is measured.
They do not provide as much information about problems as programmers might like.
They following macros handle the common case without a procedure call, but then call the procedure for larger varints.
They have no effect but would need special cases since their strides do not matter.
They mainly fill in the desired values for the reference altitude
They make writing magic entries more complicated, for very little benefit
They may be used to invoke the method within the object, and as a block associated with an iterator.
They must be either +String+ objects or +Integer+ objects.
They must be specified in terms of pixel values, and the default value is 0.
They provide a variety of ways to list directories and their contents.
They returns a same descriptor.
They serve two purposes:  1.
They server two purposes:  1.
They should not be zero.
They use both SOL_SOCKET/SCM_CREDS in the ancillary message.
They will be converted to the best matching PHP type before being passed to the PHP function.
They will never be read by any client.
They're not to confuse with the NTFS streams.
Things are more complicated if the sqlite3_changes() function is executed while a trigger program is running.
Things get more disgusting on OS X 10.7 Lion.
Think hard before fiddling with it.
Think of each SQL statement as a separate computer program.
Think of each WhereLoop object as a node in a graph with arcs showing dependencies and costs for travelling between nodes.
Think of the IV as a nonce (number used once) - it's public but random and unpredictable.
Third, try to get magic file relative to dll location
Third-party implementations of AFP are available.
This  function allocates and returns a nul-terminated string containing  the affinities to be used for each column of the comparison.
This  function appends text to pStr that describes the subset of table rows scanned by the strategy in the form of an SQL expression.
This  function does not actually modify the database file on disk.
This  function merges all segments in the database to a single segment.
This  function returns a pointer to a string buffer containing a description of the subset of table rows scanned by the strategy in the form of an SQL expression.
This  prevents ExprDelete() from deleting the Expr structure itself, allowing it to be repopulated by the memcpy() on the following line.
This "automatic-reset" change is not technically an incompatibility,  since any application that receives an SQLITE_MISUSE is broken by definition.
This "finder" function attempts to determine the best locking strategy  for the database file "filePath".
This "finder" function for VxWorks checks to see if posix advisory locking works.
This "while" is the end of the "do" far above.
This #if does not rely on the SQLITE_OS_WINCE define because the corresponding section in "date.c" cannot use it.
This (sqlite3EndBenignMalloc()) is called by SQLite code to indicate that subsequent malloc failures are benign.
This *is* propagated back out of a recursion, for Perl compatibility.
This API allows applications to modify the global configuration of the SQLite library at run-time.
This API allows the application direct access to these database handles.
This API is not used by any PHP modules including session currently.
This API may be useful for driving GUI progress indicators and similar.
This AST kind is only used for temporary nodes during compilation
This C API is too difficult to use it.
This C function implements an SQL user function that is used by SQL code generated by the ALTER TABLE ...
This C program generates the file cmplxdivide1.go.
This CA certificate was revoked due to a key compromise
This INSERT command is part of a VACUUM operation, which guarantees that the destination table is empty.
This Mem is a shallow copy of pScopyFrom
This MergeEngine will read data from exactly  one PmaReader per sub-task.
This NaN test sometimes fails if compiled on GCC with -ffast-math.
This OP_Delete opcode fires the pre-update-hook only.
This OP_Insert is an sql UPDATE
This P3 mechanism is used to help implement the AUTOINCREMENT feature.
This SQL function always returns NULL.
This SQLite extension implements JSON functions.
This TERM_VNULL tag will suppress the not-null check at the beginning of the loop.
This UDF library adds the ability to call PHP functions from SQL statements.
This VDBE program seeks a btree cursor to the identified  db/table/row entry.
This VFS is set up to return SQLITE_IOCAP_POWERSAFE_OVERWRITE by default.
This a limit imposed by the use of 16-bit offsets within each page.
This a more complex version of findCell() that works for pages that do contain overflow cells.
This additional integer is an estimate of the number of rows matched by a stabbing query on the index using a key with the corresponding number of fields.
This adjustment is more than an optimization.
This adjustment is not optional.
This adjustment is omitted for SKIPSCAN loops.
This algorithm comes from pnmcrop (http://netpbm.sourceforge.net/) Three steps: - if 3 corners are equal.
This algorithm is described in: J.
This all works fine, except that when running with SQLITE_DEBUG defined the SQLite code sometimes assert()s that a Mem structure is located on an 8-byte boundary.
This allocator is employed to repurpose unused slots at the end of the opcode array of prepared state for other memory needs of the prepared statement.
This allowed the color conversion math to be done only once per colormap entry, not once per pixel.
This allows Trigger structures to be retrieved by name.
This allows a 1-d loop to be registered for a structured array dtype or a custom dtype.
This allows a 64-bit integer to be encoded in 9 bytes.
This allows a fairly fast implementation of the "brute force" approach of computing the distance from every colormap entry to every histogram cell.
This allows a schema that contains virtual tables to be loaded before the required virtual table implementations are registered.
This allows automatic extensions to register FTS5  tokenizers and auxiliary functions.
This allows code that has to deal with the pending byte to run on files that are much smaller than 1 GiB.
This allows disabling scanning for ini files in the PHP_CONFIG_FILE_SCAN_DIR but still load an optional ini file.
This allows for repeated calls for well-ordered keys (a very common case) to use the previous index as a very good guess.
This allows for safe sharing of the database file for multiple readers and writers on the same host (the conch ensures that they all use the same local lock file).
This allows integrity-check to  detect pages that are used twice and orphaned pages (both of which  indicate corruption).
This allows it to shrink when processing the last bit of the outer reduce loop, then grow again at the beginnning of the next outer reduce loop.
This allows legacy scripts to be pharred unmodified
This allows many compilers to do optimizations that would not be possible if the files were compiled separately.
This allows max_acquire to be set and track the PHP code without having a global init routine or external semaphore init code.
This allows sessions for multiple applications to be distinguished, for example, by name.
This allows setting the request type.
This allows subsequent processes to automatically resume the RBU update from where it left off.
This allows the "innate type and shape" of Python list-of-lists to be discovered without actually converting to an array.
This allows the code in sqlite3Select() to assign values to structure member variables that only exist if SQLITE_OMIT_EXPLAIN is not defined without polluting the code with #ifndef directives.
This allows the extension to treat phar.zip and phar.tar types as honorary phars.
This allows the structure contents to be more easily edited.
This allows the user to rescue a generic exception type to catch all exceptions the library may raise even if future versions of the library add new exception subclasses.
This allows to be more defensive in such definitions.
This allows us to stop PHP and attach a debugger before much gets started
This allows us to walk up the BTree from any leaf to the root.
This allows use of ftps:// and https:// urls
This already contains bravalue
This also covers the 0 case, since if we start on the weekend, we want to move forward as if we stopped there while going backwards.
This also determines whether it is a leap year.
This also ensures that if any database schemas have been modified by an uncommitted transaction they are reset.
This also handles possibly mis-aligned data
This also happens for a repeating ket if no characters were matched in the group.
This also initializes the data for the 0-d case.
This also makes sure that the data segment is aligned with an itemsize address as well by returning one if not true.
This also transfers the open file pointer, if any, to the entry.
This alternative to php_register_extensions() works around that by walking the shallower structure.
This always prioritizes the __r*__ routines over __numpy_ufunc__, independent of whether the other object is an ndarray subclass or not.
This always returns the addresses for the iterator position as reset to iterator index 0.
This analysis only looks at whether subterms appropriate for indexing exist.
This annoyed many windows users.
This anonymous savepoint can be released or rolled back using the sqlite3BtreeSavepoint() function.
This applies similarly to the rows of VT.
This approach could be improved upon.
This array contains the bytes used to pad the buffer to the next 64-byte boundary.
This array defines hard upper bounds on limit values.
This array determines which meta meta values are preserved in the vacuum.
This array holds the actually closest colormap index for each cell.
This array holds the distance to the nearest-so-far color for each cell
This array is of size MxN, where M is the number of entries in each input array and N is the number of the input arrays + 1.
This array is used to check constaints, create the new table and index records, and as the values for any new.* references made by triggers.
This array is used to check constants, create the new table and index records, and as the values for any new.* references made by triggers.
This array lists the candidate colormap indexes.
This array looks large, but in a typical installation actually uses only a handful of compile-time options, so most times this array is usually rather short and uses little memory space.
This array should  be sorted A-Z.
This assert will fail if the current process is not the master process
This assignment should be placed before using_history()
This assumes a minimum cell size of 6 bytes  (4 bytes for the cell itself plus 2 bytes for the index to the cell in the page header).
This assumes all characters have same width.
This assumes that all registers are saved into the jmp_buf (and stack)
This assumption is dangerous, as if a failure occurred whilst writing to the journal file it may contain some garbage data.
This avoids having to supply alternative calls for the different cases.
This avoids security issues on shared hosts where a luser messes with the lower-level pipe settings and screws up the FastCGI service.
This avoids the need for a mutex lock and our hashtable lookup.
This avoids unnecessary evalation of arguments past the first non-NULL argument.
This avoids unnecessary evaluation of arguments past the first non-NULL argument.
This bad handling is also in mysqlnd_result.c
This basically assumes an error was already set previously.
This becomes the SrcList in the recursive call to sqlite3WhereBegin().
This behaves in the similar way as OpenSSL::OCSP::Request#sign.
This behaves same as the binding for required libraries.
This behavior - what happens when the row being updated is deleted or renamed by a BEFORE trigger - is left undefined in the documentation.
This behavior is at least reproducible with VS2012 and earlier, and seems not to be fixed till now.
This behavior is consistent with the document of pack/unpack.
This behavior is modified by the given +env+ and +options+ parameters.
This behavior is specified by :close_others option.
This behavior is the same for both 32 and 64 bits.
This behavior is undocumented and Bison users should not rely upon it.
This behaviour is triggered by passing a non-NULL final argument to compile_regex().
This bitmap records the existence of zero or more bits with values between 1 and iSize, inclusive.
This block  decrements iOff until it points to the first byte of the previous  varint.
This block advances the phrase iterators until they point to a set of entries that together comprise a match.
This block calculates the checksum according to the FTS index.
This block checks if there are actually nDesired tokens to the right of the snippet.
This block checks that a checksum calculated based on the actual contents of FTS index is identical.
This block codes the top of loop only.
This block copies pointers to the default implementation into the sqlite3GlobalConfig structure.
This block creates N-1 copies of the parent query without any ORDER BY, LIMIT or  OFFSET clauses and joins them to the left-hand-side of the original using UNION ALL operators.
This block deals with an obscure problem.
This block ensures that all data required to recreate the original database has been stored in the journal for pDestPager and the journal synced to disk.
This block is if we had no timeout...
This block is really an inlined version of sqlite3VdbeMemRelease() that takes advantage of the fact that the memory cell value is  being set to NULL after releasing any dynamic resources.
This block moves the pOrderBy down to the sub-query.
This block of code attempts to adjust the packing of siblings to get a better balance.
This block of memory will be freed before this function returns.
This block serves no purpose other than to invoke the asserts.
This block serves to assert() that the cursor really does point  to the last entry in the b-tree.
This block sets stack variable iPg to the leaf page number that may contain term (pTerm/nTerm), if it is present in the segment.
This block shifts the PK fields from new.* to old.*, to accommodate the code that reads these arrays.
This block stores the checksum in ctx.cksum.
This block tests if it is possible to add the page as a new free-list leaf.
This branch also runs for files marked as immutable.
This branch causes a *balanced* tree to be generated.
This branch happens for multiple negative signs.
This branch happens only when content is on overflow pages
This branch is a fast short-cut that is equivalent to calling sqlite3VdbeSerialGet() and sqlite3VdbeDeephemeralize().
This branch is also run for an in-memory database.
This branch is needed to avoid a (harmless) buffer overread.
This branch is taken if an error occurs while trying to open or roll back a hot-journal while holding an EXCLUSIVE lock.
This branch is taken if the set of sibling pages somehow contains duplicate entries.
This branch is taken when committing a transaction in rollback-journal mode if the database file on disk is larger than the database image.
This branch is taken when the xShmMap() method returns SQLITE_BUSY.
This branch loads the value of a column that will not be changed  into a register.
This branch may also run if pNewRowid contains a value that cannot be losslessly converted to an integer.
This branch of code also allows blocking streams with buffered data to operate correctly in stream_select.
This branch runs if it is known at compile time that the RHS cannot contain NULL values.
This branch runs if the record-size field of the cell is a single byte varint and the record fits entirely on the main b-tree page.
This brings the estimated selectivity more in line with what it would be if estimated without the use of STAT3/4 tables.
This buffer is used internally during rollback and will be overwritten whenever a rollback occurs.
This bug was apparently fixed in 4.03, causing the opposite problem, hence the above gating.
This calculation is done here to simplify allocation elsewhere.
This call blocks database writers while it is running, but not database readers.
This call cannot fail.
This call checks that any FK constraints that refer to this table (i.e. constraints attached to other tables)  are not violated by deleting this row.
This call creates the initial structure and averages records.
This call deletes the object.
This call frees pShmNode if required
This call frees resources allocated by sqlite3MutexInit().
This call is Ok even if this savepoint is actually a transaction savepoint (and therefore should not prompt xSavepoint()) callbacks.
This call is a no-op if no write-transaction is currently active on pBt.
This call is a no-op if table pTab is not a virtual table.
This call is a no-op if zTab is not a virtual table.
This call is a request for the "docid" column.
This call is to merge all segments at level iLevel.
This call is to merge all segments in the database to a single segment.
This call is to open a *-wal file.
This call just moves bytes around the in-memory node image, so it cannot fail.
This call makes sure that the pager has the correct number of open savepoints.
This call may return SQLITE_ABORT if there has been a savepoint rollback since it was last used.
This call must be made after a call to sqlite3VdbeSetNumCols().
This call sets the output parameter as follows, depending on the type of the table specified by parameters dbName and zTbl.
This call should always be made as the last call of an encryption or decryption operation, after after having fed the entire plaintext or ciphertext to the Cipher instance.
This call will also be intercepted (see the rbuVfsOpen() function) and the *-oal file opened instead.
This callback is called whenver an FSEvents watch is triggered
This callback is invoked once for each index when reading the sqlite_stat1 table.
This can actually be well defined.
This can and should be used while extending the module as it shows if you are at the right position.
This can be NULL to have the virtual table select the new  rowid for itself.
This can be a big performance boost.
This can be a problem when the response is signed by a certificate issued by an intermediate CA.
This can be achieved by setting the +tagging+ attribute manually for sub-classes of ASN1Data.
This can be an extra read in some situations, but hopefully it is needed in most cases.
This can be changed at run-time using a pragma.
This can be convenient, as it means that the RBU application does not need to organize removing a separate state file after the update is concluded.
This can be detected by checking the NUM for zero after having a zero returned.
This can be handled like an assertion.
This can be helpful if the pattern that follows the assertion doesn't set a different char.
This can be helpful when matching -- for instance in caseless checking of required bytes.
This can be much faster then PyObject_GetAttrString where exceptions are not used by caller.
This can be significant because tables within the RBU database are always processed in order sorted by  name.
This can be upgraded to an EXCLUSIVE lock by a subsequent call to sqlite3OsLock().
This can be used for debugging and analysis.
This can be used for high-res profiling.
This can be used if the block needs to access instance variables.
This can be used in an attempt to keep related pages close to each other in the database file, which in turn can make database access faster.
This can be used to add methods to a class.
This can be used to further customize the applications conflict resolution strategy.
This can be used to implement an in-memory database.
This can be used to prevent unreasonably large trace strings when dealing with large (multi-megabyte) strings and blobs.
This can be used to retain access to methods that are overridden.
This can be used to take a snapshot of an array (with e.g. rb_ary_replace) and check later whether the array has been modified from the snapshot.
This can be used, for example, in diagnostic routines to search for prepared  statements that are holding a transaction open.
This can be useful, for example, to ensure that "external content" FTS4 tables are updated before their underlying content tables.
This can happen (for example)  because the table is empty or because BtreeCursorFirst() has not been called.
This can happen if the database image was extended as part of the current transaction and then the last page in the db image moved to the free-list.
This can happen if the database is corrupt.
This can happen if the page is overfull.
This can happen under solaris when a dir does not have read permissions but *does* have execute permissions
This can happen when a row in  an attached table is modified and then later on the original values  are restored.
This can happen when the symbol is popped from the stack during a reduce or during error processing or when a parser is  being destroyed before it is finished parsing.
This can happen, for example, when using the sqlite3PagerDontWrite() optimization: (1)  Page X is journalled, and gets WRITEABLE and NEED_SEEK.
This can help the subquery to run more efficiently.
This can occur if one cursor has modified page pParent while a reference to it is held  by a second cursor.
This can only  happen if there was no previous entry for this token.
This can only be checked in single-threaded mode.
This can only happen for b-trees used to evaluate "IN (SELECT ...)" and WITHOUT ROWID tables with exactly one column which is the primary key.
This can only happen for stores
This can only happen in the master
This can only happen with the table rooted at page 1.
This can only occur if a second cursor modifies the page while cursor pCur is holding a reference to it.
This can only occur on the second iteration
This can produce segfaults in np.dot.
This can significantly reduce the amount of memory held by a prepared statement.
This cannot  happen if the connection is actually in exclusive mode (as no xShmLock locks are taken in this case).
This capability is used during testing and is only available when the SQLITE_TEST compile-time option is used.
This capability is used during testing and only needs to be supported when SQLITE_TEST is defined.
This case cannot be optimized in the same was as normal capturing brackets.
This case could be removed without changing the results of running this code.
This case does not come up very often anyhow.
This case does not occur if the new changeset was recorded immediately after the changesets already added to the changegroup.
This case is also used when there are no WHERE clause constraints but an index is selected anyway, in order to force the output order to conform to an ORDER BY.
This case is handled better by fast_forward_first_char.
This case is handled differently from the others.
This case is highly unlikely since we just recently freed a lot of memory.
This case is really difficult, since ecx itself may used for addressing, and we must ensure to work even in that case.
This case occurs after failing to recompile an sql statement.
This case runs if the aggregate has no GROUP BY clause.
This case should work for GCC
This case when the file is being statically linked into the  application
This case when the file really is being compiled as a loadable  extension
This case when there exist aggregate functions or a GROUP BY clause or both
This cast is safe, since both values are defined here in code and cannot overflow
This causes UnlockAndRollback to unlock the database and close the journal file without attempting to roll it back or finalize it.
This causes future drawing operations to perform alpha channel blending with the background, resulting in an opaque image.
This causes problems for the sqlite3_bind_parameter_name() API.
This causes the next call to sqlite3rbu_vacuum()  specifying the current target and state databases to start a new vacuum from scratch.
This causes the pager to load and journal the current page content before overwriting it.
This cell was just inserted
This cell will replace the cell being deleted from the internal node.
This character is not found in valid UTF-8 sequences and is rarely used in popular 8-bit character encodings.
This check also serves to verify that the offset to the start of the cell-content area, according to the page header, lies within the page.
This check ensures that an EP_TokenOnly expression is never passed down into valueFromFunction().
This check even works for scientific notation, because the mantissa always contains a decimal point.
This check is done here in the debugging case so that the code that was compiled can be seen.
This check is very important, without it out of bounds data accesses are possible.
This check may only be performed if the hash table is empty.
This check should only be called after all the operands have been filled in.
This checks any of the "extra" bytes allocated due to rounding up to an 8 byte boundary to ensure  they haven't been overwritten.
This checks how much space can be buffered without encountering the same value twice, or for operands whose innermost stride is zero, without encountering a different value.
This checks the current time is within the range thisUpdate to nextUpdate.
This checks whether a trivial loop is ok, making copies of scalar and one dimensional operands if that will help.
This chooses between 'ties to even' and 'ties away from zero'.
This cksum is initialized to a 32-bit random value that appears in the journal file right after the header.
This class is based on the original code by Jarle Aase, see bellow: wSendmail.cpp  It has been striped of some functionality to match the requirements of phpfi.
This class is mostly used internally by WeakRef, please use +lib/weakref.rb+ for the public interface.
This class is used as a return value from ObjectSpace::reachable_objects_from.
This client will not need to read any frames earlier than minFrame from the wal file - they can be safely read directly from the database file.
This code adds augmented assignment functionality that was made available in Python 2.0
This code aims to be a full-featured C implementation of XMLRPC.
This code copies current group by terms in b0,b1,b2,...
This code depends on the fact that certain token values (ex: TK_EQ) are the same as opcode values (ex: OP_Eq) that implement the corresponding operation.
This code does the right thing for R,G,B or B,G,R color orders only.
This code handles reduce, reduceat, and accumulate (accumulate and reduce are special cases of the more general reduceat but they are handled separately for speed)
This code implements the MD5 Algorithm defined in RFC 1321.
This code is common to both the zero and non-zero minimum cases.
This code is derived from software contributed to Berkeley by Chris Torek.
This code is derived from software contributed to Berkeley by Guido van Rossum.
This code is derived from software contributed to Berkeley by Peter McIlroy.
This code is derived from software contributed to Berkeley by Tom Truscott.
This code is heavily based on the PHP md5 implementation
This code is in the public domain.
This code is large and complicated...
This code is logically tricky.
This code is normally turned off.
This code is owned by Tilera Corporation, and distributed as part of multiple projects.
This code is perf sensitive, please check the perf before modifying.
This code is slightly faster, but it is also larger and much harder to test.
This code is taken from http://www.acm.org/jgt/papers/SmithLyons96/hwb_rgb.html, an article on colour conversion to/from RBG and HWB colour systems.
This code is to ensure that the sequence access below will return a lower-dimensional sequence.
This code is very perf sensitive, please check the performance before modifying.
This code is very similar to PyArray_CopyInto/PyArray_MoveInto except casting is done --- NPY_BUFSIZE is used as the size of the casting buffer.
This code looks a bit odd, but there used to be some cases other than the default, and there may be again in future, so I haven't "optimized" it.
This code makes that determination.
This code makes very mild assumptions about floating point arithmetic.
This code might run concurrently to the code in walIndexAppend() that adds entries to the wal-index (and possibly to this hash  table).
This code probably should too.
This code really belongs in btree.c.
This code removes the last padding from msg_controllen.
This code runs once to initialize everything.
This code runs only in 8 bit mode.
This code suppresses a BDB 4.8+ error message, thus keeping PHP test compatibility
This code used to be part of the tokenizer.c source file.
This code uses unstructured "goto" statements and does not look clean.
This code was modified for use in Ruby.
This code was modified from code based on code written by Jarle Aase.
This coercion mechanism is used by Ruby to handle mixed-type numeric operations: it is intended to find a compatible common type between the two operands of the operator.
This collating sequence is intended to be used for "case independent comparison".
This column is allowed to be NULL
This column is mapped to the tables implicit primary  key column - "rowid".
This column was already computed by the previous index
This comes from various sources that like to contradict.
This comes up when a VACUUM changes the number of reserved bits to the "optimal" amount.
This comment describes the data structure used to do so.
This commits the transaction.
This compares two variants for equality
This computation is not a simple "+" operator because LogEst is stored as a logarithmic value.
This computes N1 / N2.
This condition is true when pItem is the FROM clause term on the right-hand-side of a LEFT or CROSS JOIN.
This condition should be in sync with one in configure.in
This configuration should not be used if an application-define page cache implementation is loaded using the SQLITE_CONFIG_PCACHE2 option.
This conflicts with a define in winnls.h, but that header is needed to have GetACP().
This confusion did not exist in Ruby 1.8 because fibers are only available since Ruby 1.9.
This consistent approach does not always have exactly the same effect as in Perl.
This constant controls how often segments are merged.
This constant determines the maximum depth of an FTS expression tree that the library will create and use.
This constant is the maximum value SQLite will choose on its own.
This constant should already be defined (in the "WinDef.h" SDK file).
This constant should already be defined (in the "WinNT.h" SDK file).
This constants is used for not specified parameter.
This constraint creates the same index as a previous constraint specified somewhere in the CREATE TABLE statement.
This continuation matched.
This contributes to making scripts portable between setups that have and don't have zlib compression enabled globally.
This converts a UCS2 buffer of the given length to UCS4 buffer.
This converts a time value to a time structure in the local timezone.
This converts struct sockaddr in addrinfo to textual representation.
This copy is based on matching C-order traversals of src and dst.
This corresponds to the lazy transpose of a Numeric array in-situ.
This could be a couple of kilobytes or so - potentially larger than the page  size.
This could be done easily in Go, we are just using C for demonstration purposes.
This could be either a leaf node or an interior node.
This could conceivably cause corruption following a power failure on such a system.
This could happen with a network mount
This could in general be *much* faster, and a better way to implement it might be for the ufunc to provide a function which gives back the result type and inner loop function.
This could lead to database corruption.
This could probably be faster somehow.
This could probably be made to work for the msvc compiler too.
This covers the DEFINE "condition" automatically.
This creates a self-signed cert because we're using the same name and key to sign the certificate as was used to create the certificate.
This creates the virtual table module "rtree" and the debugging/analysis scalar  function "rtreenode".
This data may subsequently be read and the original objects reconstituted.
This data structure, while conceptually simple, is implemented in a complicated way because we store it in shared memory and update it from multiple processes without using any mutexes.
This database connection handle may then be used by the virtual table implementation to access real tables  within the database.
This database connection handle may then be used by the virtual table implementation to access real tables within the database.
This date representation, if forced into a time unit, will be at midnight UTC.
This default length suffices to get rid of MALLOC calls except for unusual cases, such as decimal-to-binary conversion of a very long string of digits.
This define is here because some versions of libintl redefine setlocale to point to libintl_setlocale.
This destination implies "LIMIT 1".
This destroys an  in-memory journal.
This differs from PyArray_CanCastTo in that it handles scalar arrays (0 dimensions) specially, by checking their value.
This division contains definitions of sqlite3_io_methods objects that implement various file locking strategies.
This does just ONE match.
This does not change the allocated size of the page-mapping array - the page-mapping array merely contains unused entries.
This does not guarantee that the copy of the wal-index header is up to date before proceeding.
This does not work with recent versions of OpenSSL.
This doesn't change the descriptor just the actual data...
This doesn't require a broadcast iterator (and broadcast iterators don't work with 1 argument anyway).
This done is to improve locality.
This dtype does not get updated when processing NA objects.
This either conforms 'out' to the ndim of 'operand', or allocates a new array appropriate for this reduction.
This emulator will hopefully become redundant soon as nl_langinfo(CODESET) becomes more widely implemented.
This enables assert() statements to prove things that are always true for well-formed databases.
This enables the fiber to be paused from deeply nested function calls within the fiber block.
This ensures  that the next client to write to the database file restarts the log file  from the beginning.
This ensures that  the next process to write to the database restarts the wal file.
This ensures that all data has really hit the disk before nRec is updated to mark it as a candidate for rollback.
This ensures that each node is stored on a single database page.
This ensures that filters do not corrupt areas of constant color.
This ensures that if the new content is persistent in the WAL and can be recovered following a power-loss or hard reset.
This ensures that no new SHARED locks can be obtained, but existing SHARED locks are allowed to persist.
This ensures that other threads/requests that might have disabled the loader do not affect the current request.
This ensures that the RBU extension never tries to update a database in wal mode, even if the first page of the database file has been damaged.
This ensures that the WSD emulation is used when compiling for systems that do not support real WSD.
This ensures that the exponent printed is the actual base-2 exponent, i.e., ilogb(d).
This ensures that the journal file is not deleted while it is in use by some other client.
This ensures that the next process to write to the database restarts the wal file.
This ensures that the original pExpr is unchanged.
This ensures that the values are always trustworthy within an open transaction.
This ensures that there is room enough on the stack to push the LHS value
This entire #if block would be completely unnecessary if there was any other way of detecting MinGW via their preprocessor (e.g. if they customized their GCC to define some MinGW-specific macros).
This entry point is equivalent to the `crypt' function in Unix libcs.
This error can be prevented by supplying a second argument, which will act as a +default+ value.
This error condition is now caught prior to reaching this function
This error is caught long before control reaches this point.
This error is now caught by the caller.
This error no longer exists
This error will be extremely rare in general, though.
This escape is incompatible with PQescapeLiteral.
This estimate is accurate if the RBU update consists entirely of INSERT operations.
This example makes use of #thread_variable_set to create new thread-locals, and #thread_variable_get to reference them.
This exception may be caught.
This excludes functions specialized using the templating system.
This exercises the locking code and gives more opportunity for asserts(sqlite3_mutex_held()) statements to find locking problems.
This expression is a "*" or a "TABLE.*" and needs to be expanded.
This expression is already at EOF.
This expression is legal (see  test case misc2.2.2) - it always evaluates to NULL.
This expression returns the array itself, so several appends may be chained together.
This extension allows it to be used to improve the performance of large transactions on existing databases.
This extra memory will be reallocated for other elements of the prepared statement.
This facility is an optional feature of the library.
This facility is designed to permit INSERT, UPDATE, and DELETE operations against SQLITE_MASTER.
This facility is used for testing purposes only.
This fails for languages like Japanese that legally use multiple scripts within a single word, so we turn it off.
This fd will be ready to be read when there are events ready to be processed
This fd will be ready to be read when there is a command ready to be run
This feature can be used to implement a "Cancel" button on a GUI progress dialog box.
This feature can be used, for example, to cause some keywords in a language to revert to identifiers if they keyword does not apply in the context where it appears.
This feature is available in gcc versions 2.5 and later.
This feature is experimental, so these APIs may be changed in future.
This feature is helpful for publishing the Diffie-Hellman parameters without leaking any of the private per-session information.
This feature is helpful for publishing the public key information without leaking any of the private information.
This feature is included to help prevent writer-starvation.
This feature is used for test suite validation only and does not appear an production builds.
This feature is used to implement "EXPLAIN".
This field must be set when using AEAD cipher modes such as GCM or CCM.
This field of the structure is documented as private, and sure enough it's gone in the latest libjpeg, replaced by something else.
This file contains 2-pass color quantization (color mapping) routines.
This file contains C code routines that are called by the SQLite parser when syntax rules are reduced.
This file contains C code routines that are called by the parser in order to generate code for DELETE FROM statements.
This file contains C code routines that are called by the parser to handle INSERT statements in SQLite.
This file contains C code routines that are called by the parser to handle SELECT statements in SQLite.
This file contains C code routines that are called by the parser to handle UPDATE statements.
This file contains C code routines that used to generate VDBE code that implements the ALTER TABLE command.
This file contains C code to implement the TreeView debugging routines.
This file contains OS interface code that is common to all architectures.
This file contains a no-op memory allocation drivers for use when SQLITE_ZERO_MALLOC is defined.
This file contains a private PCRE function that converts an ordinal character value into a UTF8 string.
This file contains an implementation of the "dbstat" virtual table.
This file contains character tables that are used when no external tables are passed to PCRE by the application that calls it.
This file contains code associated with the ANALYZE command.
This file contains code for a set of "printf"-like routines.
This file contains code for implementations of the r-tree and r*-tree algorithms packaged as an SQLite virtual table module.
This file contains code for the "fts3tokenize" virtual table module.
This file contains code that is common across all mutex implementations.
This file contains code that is specific to MSVC.
This file contains code that is specific to Wind River's VxWorks
This file contains code that is specific to Windows.
This file contains code to implement a pseudo-random number generator (PRNG) for SQLite.
This file contains code use to implement APIs that are part of the VDBE.
This file contains code use to implement an in-memory rollback journal.
This file contains code use to manipulate "Mem" structure.
This file contains code used by the compiler to add foreign key support to compiled SQL statements.
This file contains code used for creating, destroying, and populating a VDBE (or an "sqlite3_stmt" as it is known to the outside world.)
This file contains code used to dynamically load extensions into the SQLite library.
This file contains code used to help implement virtual tables.
This file contains code used to implement incremental BLOB I/O.
This file contains code used to implement mutexes on Btree objects.
This file contains code used to implement the ATTACH and DETACH commands.
This file contains code used to implement the PRAGMA command.
This file contains code used to implement the VACUUM command.
This file contains code used to implement the sqlite3_set_authorizer() API.
This file contains code used to insert the values of host parameters (aka "wildcards") into the SQL text output by sqlite3_trace().
This file contains definitions of global variables and constants.
This file contains definitions of global variables and contants.
This file contains functions for allocating memory, comparing strings, and stuff like that.
This file contains functions used to access the internal hash tables of user defined functions and collation sequences.
This file contains implementations of the low-level memory allocation routines specified in the sqlite3_mem_methods object.
This file contains inline asm code for retrieving "high-performance" counters for x86 class CPUs.
This file contains low-level loops for data type transfers.
This file contains low-level memory allocation drivers for when SQLite will use the standard C-library malloc/realloc/free interface to obtain the memory it needs.
This file contains macros and a little bit of code that is common to all of the platform-specific files (os_*.c) and is #included into those files.
This file contains only code for the core SQLite library.
This file contains pre-processor directives related to operating system detection and/or setup.
This file contains routines used for analyzing expressions and for generating VDBE code that evaluates expressions in SQLite.
This file contains routines used for walking the parser tree and resolve all identifiers by associating them with a particular table and column.
This file contains routines used for walking the parser tree for an SQL statement.
This file contains routines used to translate between UTF-8,  UTF-16, UTF-16BE, and UTF-16LE.
This file contains structure and macro definitions for the query planner logic in "where.c".
This file contains the C functions that implement a memory allocation subsystem for use by SQLite.
This file contains the C functions that implement date and time functions for SQLite.
This file contains the C functions that implement mutexes for Win32.
This file contains the C functions that implement mutexes for pthreads
This file contains the C functions that implement mutexes for win32
This file contains the C functions that implement mutexes.
This file contains the C functions that implement various SQL functions of SQLite.
This file contains the C-language implementations for many of the SQL functions of SQLite.
This file contains the VFS implementation for unix-like operating systems include Linux, MacOSX, *BSD, QNX, VxWorks, AIX, HPUX, and others.
This file contains the common header for all mutex implementations.
This file contains the implementation for TRIGGERs
This file contains the implementation of the sqlite3_backup_XXX()  API functions and the related features.
This file contains the implementation of the sqlite3_prepare() interface, and routines that contribute to loading the database schema from disk.
This file contains the implementation of the sqlite3_unlock_notify() API method and its associated functionality.
This file contains the public interface for the RBU extension.
This file contains the routines that actually generate the bulk of the WHERE loop code.
This file contains the sqlite3_get_table() and sqlite3_free_table() interface routines.
This file contains utility routines for analyzing Expr objects in the WHERE clause.
This file defines various limits of what SQLite can process.
This file doesn't have .debug_line section, let's check .gnu_debuglink section instead.
This file has not been truncated.
This file implements a external (disk-based) database using BTrees.
This file implements a special kind of sqlite3_file object used by SQLite to create journal files if the atomic-write optimization is enabled.
This file implements a tokenizer for fts3 based on the ICU library.
This file implements an external (disk-based) database using BTrees.
This file implements an object encapsulating a business day calendar object for accelerating NumPy datetime business day functions.
This file implements an object that represents a fixed-length bitmap.
This file implements assignment from a scalar to an ndarray.
This file implements assignment from an ndarray to another ndarray.
This file implements business day functionality for NumPy datetime.
This file implements core functionality for NumPy datetime.
This file implements generic methods for computing reductions on arrays.
This file implements most of the main API functions of NumPy's nditer.
This file implements routines used to report what compile-time options SQLite was built with.
This file implements some helper functions for the array assignment routines.
This file implements string parsing and creation for NumPy datetime.
This file implements that page cache.
This file implements the CPython wrapper of the new NumPy iterator.
This file implements the construction, copying, and destruction aspects of NumPy's nditer.
This file implements the default page cache implementation (the sqlite3_pcache interface).
This file implements type resolution for NumPy element-wise ufuncs.
This file include two parts:  (1) set_trace_func internal mechanisms and C level API  (2) Ruby level API (2-1) set_trace_func API (2-2) TracePoint API (not yet)
This file is all you need to compile SQLite.
This file is also shipped with GAWK (GNU Awk), gawk specific bits of code are included if GAWK is defined.
This file is an amalgamation of many separate C source files from SQLite version 3.15.0.
This file is an amalgamation of many separate C source files from SQLite version 3.8.5.
This file is included by symbol.c
This file is included by vm.c
This file is only useful for some really internal stuff, eq.
This file is part of libXMLRPC - a C library for xml-encoded function calls.
This file is part of the Independent JPEG Group's software.
This file is part of the SQLite FTS3 extension module.
This file is part of, or distributed with, libXMLRPC - a C library for xml-encoded function calls.
This file is rewriten specificly for PHPFI.
This file is the authoritative source on how SQLite interfaces are suppose to operate.
This file is the authoritative source on how SQLite interfaces are supposed to operate.
This file is used for Windows only
This file is used on unix only
This file mapping API is common to both Win32 and WinRT.
This file modified from sources for imap4 for use in PHP 3
This file presents a simple cross-platform threading interface for use internally by SQLite.
This file should be #included by the os_*.c files only.
This file was autogenerated by the MultiStage2.py script.
This file was originally part of where.c but was split out to improve readability and editabiliity.
This file was split off from where.c on 2015-06-06 in order to reduce the size of where.c and make it easier to edit.
This file-control is intended for diagnostic use only.
This final check is done under exclusive lock)
This first day of the year will be the day of the molad unless one of 4 rules (called dehiyyot) delays it.
This first part MUST match the declaration of interface IDispatchEx
This fixes PECL bug 15988 (sqlnet.ora not being read).
This fixes a known issue with SQL Server and (max) lengths, may affect others as well.
This flag affects the RC() and OERC() macros.
This flag avoids doing an extra seek.
This flag can be set and cleared as often as desired.
This flag does not exclude Shift_JIS.
This flag has no effect on clients
This flag is clear by default, indicating that database files might have arbitrary corruption.
This flag primarily disables dimension manipulations that would produce an incorrect multi-index.
This forces connections to use only the specified protocol version.
This form can be used as an HTML 4.0 #PCDATA.
This form can be used as an HTML 4.0 attribute value.
This format is used as part of the  change-set binary format, and so must be architecture independent.
This frees all memory that the RowSet has allocated over its lifetime.
This frees the linked-list structure when the CObject is destroyed (removed from the internal dictionary)
This function  appends a human-readable representation of record to the buffer passed  as the second argument.
This function  asserts that page number iChild is the left-child if the iIdx'th cell in page pParent.
This function  leaves the PmaReader pointing to the first key in the PMA (or EOF if the  PMA is empty).
This function  leaves the iterator pointing to the first key in the PMA (or EOF if the  PMA is empty).
This function  transfers new.* values from the current iterator entry to statement pStmt.
This function "merges" the two records into a single records which is written to the buffer at *paOut.
This function (for internal use only) locates an element in an hash table that matches the given key.
This function *strictly* assumes that SIGIO is *only* used on the remote connection stream
This function - unixLogErrorAtLine(), is only ever called via the macro unixLogError().
This function - unixLogError_x(), is only ever called via the macro unixLogError().
This function - winLogErrorAtLine() - is only ever called via the macro winLogError().
This function accepts a single argument of any type.
This function accepts one or two arguments.
This function adds pLeaf to the tree.
This function adds pNew, which is always a binary operator node, into the expression tree based on the relative precedence of pNew and the existing nodes of the tree.
This function adds the space associated with each cell in the array that is currently stored  within the body of pPg to the pPg free-list.
This function adjusts the pointer *ppList and the length *pnList so that they identify the subset of the position list that corresponds to column iCol.
This function advances the pointer *ppRec until it points to the byte immediately following that record.
This function allocates a new level iLevel index in the segdir table.
This function allocates a new parser.
This function allocates and returns a KeyInfo structure suitable for implementing the ORDER BY.
This function allocates memory by calling sqlite3Malloc().
This function allows for duplicate names in the table of named substrings.
This function allows the user to query in which mode, if at all, VTune is running
This function allows the user to register a 1-d loop with an already created ufunc.
This function also resets the iterator to its initial state.
This function also serves to allocate the PendingList structure itself.
This function always allocates a base class ndarray.
This function always returns SQLITE_OK.
This function always returns one of the SQLITE_RBU_STATE_XXX constants defined in this file.
This function always succeeds.
This function analyzes the input arguments and determines an appropriate __array_prepare__ function to call for the outputs.
This function analyzes the input arguments and determines an appropriate __array_wrap__ function to call for the outputs.
This function appends a human-readable representation of the same object to the buffer passed as the second argument.
This function appends a human-readable version of that list to buffer pBuf.
This function appends a text representation of the part of the doclist that is present to buffer pBuf.
This function appends an appropriate entry to the current doclist-index.
This function appends an update change to the buffer (see the comments  under "CHANGESET FORMAT" at the top of the file).
This function appends the position list data for the current entry to buffer pBuf.
This function applies a compiled re to a subject string and picks out portions of the string if it matches.
This function applies a fossil delta patch to a blob.
This function applies special type resolution rules for the absolute ufunc.
This function applies the  changeset to the main database attached to handle "db".
This function applies the type resolution rules for addition.
This function applies the type resolution rules for division.
This function applies the type resolution rules for multiplication.
This function applies the type resolution rules for subtraction.
This function assumes that (capa + termlen) bytes of memory is allocated, like many other functions in this file.
This function assumes that Btree p has an open read or write  transaction.
This function assumes that an authorization callback has been registered (i.e. that sqlite3.xAuth is not NULL).
This function assumes that pList points to a buffer allocated using sqlite3_malloc().
This function assumes that space within the buffer has already been allocated.
This function assumes that the necessary mutexes, if any, are already held by the caller.
This function assumes this process is ruby(1) and it has just started.
This function attempts to  add the cells stored in the array to page pPg.
This function attempts to  allocate an instance of Fts5Config containing the results of parsing those arguments.
This function attempts to create any imposter table required to write to the main table b-tree of the table before returning.
This function attempts to extend the file to nByte bytes in size and to ensure that the VFS has memory mapped it.
This function attempts to parse the query expression and create a tree of Fts3Expr structures representing the parsed expression.
This function attempts to read a master journal file name from the  end of the file and, if successful, copies it into memory supplied  by the caller.
This function attempts to tokenize the entire input buffer and create an Fts3Expr structure of type FTSQUERY_PHRASE  containing the results.
This function attempts to transform the expression tree at (*pp) to an equivalent but more balanced form.
This function attempts to update the "main" database attached to handle db with the changes found in the changeset passed via the second and third arguments.
This function binds the primary key values from the change that changeset iterator pIter points to to the SELECT and attempts to seek to the table entry.
This function builds a set of character tables for use by PCRE and returns a pointer to them.
This function calculates whether a byte is leading or not for all bytes in the argument word by concurrently using the above logic, and then adds up the number of leading bytes in the word.
This function calls Py_DECREF on flex_dtype, and replaces it with a new dtype that has been adapted based on the values in data_dtype and data_obj.
This function can be called in blocking region.
This function can be used in order to decide whether to use a Fortran or C version of a wrapped function.
This function can overflow.
This function cannot be the first in the file for if the file is linked first, then the check-unload function's offset will be nlmname.nlm+0 which is how to tell that there isn't one.
This function changes all write-locks held by Btree p into read-locks.
This function changes the page's  page number to iNew and sets the value of the PgHdr.flags field to  the value passed as the third parameter.
This function checks for walking beyond the beginning and right-end of the buffer and therefore works for any integer stride (positive or negative).
This function checks if all term iterators point to the same rowid, and if not, advances them until they do.
This function checks if argument pFrom refers to a CTE declared by  a WITH clause on the stack currently maintained by the parser.
This function checks if the case.
This function checks that the  sub-select on the RHS of the IN() operator has the same number of  columns as the vector on the LHS.
This function checks to see if the position list contains any entries for a token in position 0 (of any column).
This function combines the two input changesets using an  sqlite3_changegroup object.
This function compares two index or table record keys in the same way as the sqlite3VdbeRecordCompare() routine.
This function computes GMST0, the Greenwich Mean Sidereal Time
This function computes the Sun's position at any instant
This function consumes at least one input character.
This function contains the logic that determines if a statement or transaction will be committed or rolled back as a result of the execution of this virtual machine.
This function copies a single captured substring into a given buffer, identifying it by name.
This function copies a single captured substring into a given buffer.
This function copies a single captured substring, identified by name, into new store.
This function could fail if, for example, the current working directory has been unlinked.
This function creates a dtype object when: - The object has a "dtype" attribute, and it can be converted to a dtype object.
This function creates the PRIMARY KEY  declaration for the corresponding imposter table.
This function creates the second imposter table used when writing to a table b-tree where the table has an external primary key.
This function currently works by first transforming the UTF-16 encoded string to UTF-8, then invoking sqlite3_prepare().
This function deletes that reference, so after it returns the page pointed to by p is invalid.
This function deletes the Trigger structure and all of its sub-components.
This function deserializes and returns the value.
This function detects multiple/malformed multiple newlines.
This function determines if any segments should be promoted as a result.
This function determines if the machine is running a version of Windows based on the NT kernel.
This function determines whether or not the atomic-write optimization can be used with this pager.
This function distinguish them by the size of the ancillary message.
This function does a "phrase" merge of two doclists.
This function does all the work for both the xConnect and xCreate methods.
This function does an "OR" merge of two doclists (output contains all positions contained in either argument doclist).
This function does no error checking.
This function does not accept negative indices because it is called by PySequence_GetItem (through array_item) and that converts them to positive indices.
This function does not call sqlite3DbFree(db, ) on the  pointer itself, it just cleans up subsidiary resources (i.e. the contents of the schema hash tables).
This function does not clear the VDBE error code or message, just copies them to the database handle.
This function does not contribute anything to the operation of SQLite.
This function does not delete the state database after an RBU vacuum is completed, even if it created it.
This function does not do its own clean-up.
This function does not show when the execution was interrupted.
This function does the work for an sqlite3rbu_step() call.
This function does the work for both the xDisconnect and xDestroy methods.
This function does the work for the xUpdate method of FTS3 virtual tables.
This function doesn't return if it uses E_ERROR
This function doesn't set errno.
This function either releases or rolls back the savepoint identified by parameter iSavepoint, depending on the value  of op.
This function encodes a single frame header and writes it to a buffer supplied by the caller.
This function ensures that all of the above is present in the input  buffer (i.e. that it can be accessed without any calls to xInput()).
This function ensures the entire record is buffered.
This function executes all the standard NumPy reduction function boilerplate code, just calling assign_identity and the appropriate inner loop function where necessary.
This function exists for the benefit of people calling PCRE from non-C programs that can call its functions, but not free() or (PUBL(free))() directly.
This function figures out if this modification means the tree needs to be balanced, and if so calls the appropriate balancing  routine.
This function fills in blanks (that are -1's) in dims list using the dimensions from arr.
This function fills the buffer specified by _words_ and _numwords_ as val in the format specified by _wordsize_, _nails_ and _flags_.
This function fills the buffer specified by _words_ as abs(val) if INTEGER_PACK_2COMP is not specified in _flags_.
This function finalizes the journal file, either by deleting,  truncating or partially zeroing it, so that it cannot be used  for hot-journal rollback.
This function finds the subtype of the input array with highest priority.
This function frees the memory that was obtained by pcre_study().
This function gathers 'y' or 'b' data for a single phrase.
This function generates code to do a deferred seek of cursor iCur to the  rowid stored in register iRowid.
This function gets one chunk of store and builds a list of pointers and all of the captured substrings in it.
This function handles all index preparations with the exception of field access.
This function has an extensible interface so that additional items can be added compatibly.
This function has been extended to cope with forward references for recursions and subroutine calls.
This function implements the FTS3_MATCHINFO_LCS matchinfo() flag.
This function implements the build-in LIKE operator.
This function implements the sqlite3_create_module() and sqlite3_create_module_v2() interfaces.
This function initializes a result array for a reduction operation which has no identity.
This function interprets the string at (*pp) as a non-negative integer value.
This function invokes either the xRollback or xCommit method of each of the virtual tables in the sqlite3.aVTrans array.
This function invokes the xBestIndex() method of the virtual table with the sqlite3_index_info object that comes in as the 3rd argument to this function.
This function is a helper function for fts3EvalTestDeferredAndNear().
This function is a helper function for sqlite3Fts3EvalTestDeferred().
This function is a no-op if *pRc is non-zero when it is called.
This function is a no-op if *pRc is other than SQLITE_OK when it is  called.
This function is a no-op if *pRc is other than SQLITE_OK when it is called.
This function is a no-op if *pRc is set to other than SQLITE_OK when it is called.
This function is a no-op if the pager is in exclusive mode and not in the ERROR state.
This function is a no-op unless SQLITE_DEBUG is defined when this module is compiled.
This function is a no-op unless currently processing an EXPLAIN QUERY PLAN command, or if either SQLITE_DEBUG or SQLITE_ENABLE_STMT_SCANSTATUS was defined at compile-time.
This function is a no-op unless currently processing an EXPLAIN QUERY PLAN command.
This function is a pass-through to fcntl(F_SETLK) if pFile is using any VFS other than "unix-excl" or if pFile is opened on "unix-excl" and is read-only.
This function is a substitute for real alpha channel operations, so it doesn't pay attention to the alpha channel.
This function is a wrapper around sqlite3WalFrames().
This function is a wrapper around the OS specific implementation of sqlite3_os_init().
This function is also purely an internal test.
This function is always called by the main user thread.
This function is an fts3ExprIterate() callback used by fts3BestSnippet().
This function is an fts3ExprIterate() callback used by sqlite3Fts3Offsets().
This function is an xTokenize() callback used by the auxiliary snippet() function.
This function is called (optionally) at the start of compile or match, to check that a supposed UTF-8 string is actually valid.
This function is called after a transaction has been committed.
This function is called after an "ALTER TABLE ...
This function is called after an incrmental-merge operation has run to merge (or partially merge) two or more segments from absolute level iAbsLevel.
This function is called after the contents of page iPage of the source database have been modified.
This function is called after the cursor passed as the only argument is moved to point at a different row.
This function is called after transitioning from PAGER_UNLOCK to PAGER_SHARED state.
This function is called as part of a SorterRewind() operation on a sorter that has already written two or more level-0 PMAs to one or more temp files.
This function is called as part of an sqlite3VdbeSorterRewind() operation on a sorter that has written two or more PMAs to temporary files.
This function is called as part of committing a transaction within which one or more frames have been overwritten.
This function is called as part of initializing or reinitializing an incremental checkpoint.
This function is called as part of sqlite3rbu_open() when initializing an rbu handle in OAL stage.
This function is called as the second part of each xNext operation when iterating through the results of a full-text query.
This function is called at the start of every write transaction.
This function is called at very early stage of Ruby startup.
This function is called before attempting a hot-journal rollback.
This function is called before generating code to update or delete a  row contained in table pTab.
This function is called before modifying the contents of a table to invalidate any incrblob cursors that are open on the row or one of the rows being modified.
This function is called between compiling passes to add an entry to the name/number table, maintaining alphabetical order.
This function is called by check_auto_possessive() when a property item is adjacent to a fixed character.
This function is called by functions in rb_call* family.
This function is called by the VDBE to adjust the internal schema used by SQLite when the btree layer moves a table root page.
This function is called by the parser to process a string token.
This function is called by the parser when it parses a command to create, release or rollback an SQL savepoint.
This function is called by the pcache layer when it has reached some soft memory limit.
This function is called by the wal module when writing page content into the log file.
This function is called by the xUpdate() method as part of an INSERT operation.
This function is called by the xUpdate() method for an INSERT operation.
This function is called by unixOpen() to determine the unix permissions to create new files with.
This function is called during initialization (sqlite3_initialize()) to install the default pluggable cache module, assuming the user has not already provided an alternative.
This function is called during initialization if a static buffer is  supplied to use for the page-cache by passing the SQLITE_CONFIG_PAGECACHE verb to sqlite3_config().
This function is called during the second compiling phase, if the number of forward references fills the existing workspace, which is originally a block on the stack.
This function is called for each Fts3Phrase in a full-text query  expression to initialize the mechanism for returning rows.
This function is called for every node of an expression that is a candidate for a cursor hint on an index cursor.
This function is called from both BtreeCommitPhaseTwo() and BtreeRollback() at the conclusion of a transaction.
This function is called from inits.c
This function is called from send_directory() and used for sorting directory entries by size, or name, or modification time.
This function is called from within a pre-update callback to retrieve a field of the row currently being updated or deleted.
This function is called from within a pre-update callback to retrieve a field of the row currently being updated or inserted.
This function is called from within a pre-update callback to retrieve the number of columns in the row being updated, deleted or inserted.
This function is called from within the xConnect() or xCreate() method to determine the node-size used by the rtree table being created or connected to.
This function is called from within the xFilter method.
This function is called if the incremental merge step has finished but the input has not been completely exhausted.
This function is called just before writing a set of frames to the log file (see sqlite3WalFrames()).
This function is called on a MultiSegReader that has been started using sqlite3Fts3MsrIncrStart().
This function is called on each phrase after the position lists for any deferred tokens have been loaded into memory.
This function is called on every node of an expression tree used as an argument to the OP_CursorHint instruction.
This function is called once for each AND/NEAR cluster in the  expression.
This function is called only during the real compile, not during the pre-compile.
This function is called only when doing the real compile, not during the pre-compile that measures the size of the compiled pattern.
This function is called recursively in many circumstances.
This function is called to allocate an array of Fts3Index structures representing the indexes maintained by the current FTS table.
This function is called to check for left recursive calls.
This function is called to close the connection to the log file prior to switching from WAL to rollback mode.
This function is called to compare two iterator keys when merging  multiple b-tree segments.
This function is called to configure the RtreeConstraint object passed as the second argument for a MATCH constraint.
This function is called to drop a trigger from the database schema.
This function is called to edit the position list associated with the phrase object passed as the fifth argument according to a NEAR condition.
This function is called to free superfluous dynamically allocated memory held by the pager system.
This function is called to generate code executed when a row is deleted from the parent table of foreign key constraint pFKey and, if pFKey is  deferred, when a row is inserted into the same table.
This function is called to generate code that runs when table pTab is being dropped from the database.
This function is called to handle an FTS INSERT command.
This function is called to handle the SQLITE_FCNTL_SIZE_HINT  file-control operation.
This function is called to merge two changes to the same row together as part of an sqlite3changeset_concat() operation.
This function is called to obtain a pointer to region iRegion of the  shared-memory associated with the database file fd.
This function is called to obtain a pointer to region iRegion of the shared-memory associated with the database file fd.
This function is called to obtain a shared lock on the database file.
This function is called to release all dynamic resources held by the merge-writer object pWriter, and if no error has occurred, to flush all outstanding node buffers held by pWriter to disk.
This function is called to rollback a transaction on a WAL database.
This function is called to rollback or release (commit) a savepoint.
This function is called to select the tokens (if any) that will be  deferred.
This function is called when Btree p is concluding its  transaction.
This function is called when a backward assertion is encountered, so that if it fails, the error message can point to the correct place in the pattern.
This function is called when a free-list leaf page is removed from the free-list for reuse.
This function is called when a row is inserted into or deleted from the  child table of foreign key constraint pFKey.
This function is called when a transaction opened by the database  handle associated with the VM passed as an argument is about to be  committed.
This function is called when an ICU function called from within the implementation of an SQL scalar function returns an error.
This function is called when an UPDATE or DELETE operation is being  compiled on table pTab, which is the parent table of foreign-key pFKey.
This function is called when deleting or updating a row to implement any required CASCADE, SET NULL or SET DEFAULT actions.
This function is called when flushing a leaf page that contains no terms at all to disk.
This function is called when initializing an incremental-merge operation.
This function is called when inserting, deleting or updating a row of table pTab to generate VDBE code to perform foreign key constraint  processing for the operation.
This function is called when the PCRE_AUTO_CALLOUT option is set, to insert callout points before each pattern item.
This function is called when the request is read, parsed and validated, and Mongoose must decide what action to take: serve a file, or a directory, or call embedded function, etcetera.
This function is called when the root page of a b-tree structure is overfull (has one or more overflow pages).
This function is called when the transaction opened by database db has just finished.
This function is called when the user invokes "PRAGMA wal_checkpoint", "PRAGMA wal_blocking_checkpoint" or calls the sqlite3_wal_checkpoint() or wal_blocking_checkpoint() API functions.
This function is called whenever an IOERR or FULL error that requires the pager to transition into the ERROR state may ahve occurred.
This function is called while stepping or preparing a statement  associated with connection db.
This function is called while writing an FTS segment each time a leaf o node is finished and written to disk.
This function is called with the doclist for each term that matches a queried prefix.
This function is deprecated.
This function is designed to be called from within a pre-update callback only.
This function is equivalent to the standard isspace() function.
This function is essentially a place-holder for the required function pointer in the PPP_Instance structure.
This function is exactly the same as sqlite3_create_function(), except that it is designed to be called by internal code.
This function is handed a compiled expression that it must study to produce information that will speed up the matching.
This function is implemented as two separate routines for performance.
This function is implemented in array_assign_scalar.c.
This function is in a separate file to prevent inlining.
This function is intended to be used as part of an assert statement in the compiler.
This function is intended to be used in EXTERNAL_LOOP mode only, and will produce some wrong answers when that mode is not enabled.
This function is invoked by the parser to call the xConnect() method of the virtual table pTab.
This function is invoked by the vdbe to call the xCreate method of the virtual table named zTab in database iDb.
This function is invoked by the vdbe to call the xDestroy method of the virtual table named zTab in database iDb.
This function is invoked once for each page that has already been  written into the log file when a WAL transaction is rolled back.
This function is like array_diff() but works on the keys instead of the values.
This function is like array_udiff() but works on the keys instead of the values.
This function is mutually recursive with the function above.
This function is mutually recursive with the function immediately below.
This function is needed for supporting Pickles of numpy scalar objects.
This function is not available on Windows CE or WinRT.
This function is not called on NaCl modules.
This function is now an anachronism.
This function is only available internally, it is not part of the external API.
This function is only called for rollback pagers in WRITER_DBMOD state.
This function is only called from two places.
This function is only called from with a pre-update-hook reporting a  change on table pTab (attached to session pSession).
This function is only called from within a pre-update handler for a write to table pTab, part of session pSession.
This function is only called from within a pre-update-hook callback.
This function is only called from within an assert() expression.
This function is only called right before committing a transaction.
This function is only ever called on iterators created by calls to Fts5IndexQuery() with the FTS5INDEX_QUERY_DESC flag set.
This function is only ever used as part of assert() conditions.
This function is only for GC_END_MARK timing.
This function is only used as part of an assert() statement.
This function is only used as part of assert()  statements.
This function is only used as part of assert() statements.
This function is only used when the journal file is being  opened to write a rollback log for a transaction.
This function is part of the fts5_decode() debugging function.
This function is passed the start and end of a class range, in UTF-8 mode with UCP support.
This function is provided for convenience only, the same result could be achieved directly by the application.
This function is purely an internal test.
This function is registered as the module destructor (called when an FTS3 enabled database connection is closed).
This function is similar to RegisterLoopForType except that it allows a 1-d loop to be registered with PyArray_Descr objects instead of dtype type num values.
This function is similar to sqlite3BtreeGetReserve(), except that it may only be called if it is guaranteed that the b-tree mutex is already held.
This function is similar to sqlite3Fts3ExprParse(), with the following differences:  1.
This function is the implementation of both the xConnect and xCreate methods of the FTS3 virtual table.
This function is the implementation of both the xConnect and xCreate methods of the r-tree virtual table.
This function is the implementation of the xUpdate callback used by  FTS3 virtual tables.
This function is the opposite of macro FTS5_SEGMENT_ROWID().
This function is used after merging multiple segments into a single large segment to delete the old, now redundant, segment b-trees.
This function is used as part of the big assert() procedure implemented by fts5AssertMultiIterSetup().
This function is used as the xSelectCallback2() callback by sqlite3SelectExpand() when walking a SELECT tree to resolve table names and other FROM clause elements.
This function is used by SQL generated to implement the  ALTER TABLE command.
This function is used by SQL generated to implement the ALTER TABLE command.
This function is used by both blob_open() and blob_reopen().
This function is used by changeset_concat() to merge two UPDATE changes on the same row.
This function is used by test procedures to inspect the internal state of the global cache.
This function is used by the get_first_set() function below, as well as being generally available.
This function is used by the implementation of the IN (...) operator.
This function is used by the matchinfo() module to query a phrase  expression node for the following information:  1.
This function is used during the pre-compile phase when we are trying to find out the amount of memory needed, as well as during the real compile phase.
This function is used for adding a list of case-equivalent characters to a class, and also for adding a list of horizontal or vertical whitespace.
This function is used for adding the complement of a list of horizontal or vertical whitespace to a class.
This function is used for bytes and chars.
This function is used for converting values to text for returning to the user (i.e. via sqlite3_value_text()), or for ensuring that values to be used as btree keys are strings.
This function is used for testing only, it is not included in the build unless SQLITE_TEST is defined.
This function is used internally to remove the page pPage from the  PGroup LRU list, if is part of it.
This function is used to access the current position list for phrase iPhrase.
This function is used to add VdbeComment() annotations to a VDBE program.
This function is used to add page iPage to the database file free-list.
This function is used to add terms implied by JOIN syntax to the WHERE clause expression of a SELECT statement.
This function is used to allocate an Fts3SegReader that iterates through a subset of the terms stored in the Fts3Table.pendingTerms array.
This function is used to allocate and populate UnpackedRecord  structures intended to be compared against sample index keys stored  in the sqlite_stat4 table.
This function is used to change the actual size of the database  file in the file-system.
This function is used to copy the contents of the b-tree node stored  on page pFrom to page pTo.
This function is used to count the entries in a column-list (a  delta-encoded list of term offsets within a single column of a single  row).
This function is used to create delta-encoded serialized lists of FTS3  varints.
This function is used to estimate the number of rows that will be visited by scanning an index for a range of values.
This function is used to free UnpackedRecord structures allocated by the vdbeUnpackRecord() function found in vdbeapi.c.
This function is used to help iterate through a position-list.
This function is used to help parse position-lists.
This function is used to iterate backwards (from the end to start)  through doclists.
This function is used to merge two position lists into one.
This function is used to obtain an SQLite prepared statement handle for the statement identified by the second argument.
This function is used to parse both URIs and non-URI filenames passed by the user to API functions sqlite3_open() or sqlite3_open_v2(), and for database URIs specified as part of ATTACH statements.
This function is used to populate an allocated Fts3TokenAndCost array.
This function is used to process a single interior node when searching a b-tree for a term or term prefix.
This function is used to read a single varint from a buffer.
This function is used to read or overwrite payload information for the entry that the pCur cursor is pointing to.
This function is used to resize the hash table used by the cache passed as the first argument.
This function is used to serialize the contents of value pValue (see comment titled "RECORD FORMAT" above).
This function is used to set the schema of a virtual table.
This function is used to set, clear or query the session object indirect flag.
This function is used to write a single varint to a buffer.
This function itself needs only n BDIGITs for work area.
This function makes a copy of the array and strings into a  single block of memory.
This function makes a temporary copy of 'src' if 'src' and 'dst' overlap, to be able to handle views of the same data with different strides.
This function makes use of the internal SNMP object fetcher.
This function marks a subset of those constraints usable, invokes the xBestIndex method and adds the returned plan to pBuilder.
This function may be called exact once on a each virtual machine.
This function may be called exactly once on each virtual machine.
This function may be called when processing an exception -- we need to stash the error state to avoid confusing PyDict
This function may be called when there is no write-transaction active but a RESERVED or greater lock is held under two circumstances:  1.
This function may be safely called without holding the Python GIL.
This function may be used as part of assert() statements only.
This function may detect corruption within pPg.
This function may leave an open sqlite3_blob* handle in the Fts3Table.pSegments variable.
This function may not be called on iterators passed to a conflict handler callback by changeset_apply().
This function may only be called after changeset_next() returns SQLITE_ROW.
This function may only be called from within a pre-update callback.
This function may only be called if the b-tree connection already has a read or write transaction open on the database.
This function may only be called if the iterator is tracking a multi-index and if NPY_ITER_DONT_NEGATE_STRIDES was used to prevent an axis from being iterated in reverse order.
This function may only be called when a read-transaction is open on the pager.
This function may only be called when the mutexes associated with all shared b-tree databases opened using connection db are held by the  caller.
This function may only be called while a write-transaction is active in rollback.
This function may only be called while the iterator is pointing to an SQLITE_UPDATE or SQLITE_DELETE change (see sqlite3changeset_op()).
This function may only be called while the iterator is pointing to an SQLITE_UPDATE or SQLITE_INSERT change (see sqlite3changeset_op()).
This function may only be called with a changeset iterator that has been passed to an SQLITE_CHANGESET_DATA or SQLITE_CHANGESET_CONFLICT  conflict-handler function.
This function may only be called with an iterator passed to an SQLITE_CHANGESET_FOREIGN_KEY conflict handler callback.
This function may return SQLITE_NOMEM (sqlite3Malloc() is used to allocate memory), SQLITE_CANTOPEN or  various SQLITE_IO_XXX errors.
This function may return SQLITE_NOMEM if a memory allocation fails, or an IO error code if an IO error occurs while rolling back a  savepoint.
This function may return SQLITE_NOMEM or an IO error code if an error occurs.
This function may return SQLITE_ROW, SQLITE_DONE or SQLITE_CORRUPT.
This function may serve as the entry point to support further callbacks.
This function merges the content of the two doclists together and sets buffer p1 to the result before returning.
This function merges the two lists into a single list and returns a pointer to its first element.
This function merges two sorted lists into a single sorted list.
This function modifies the data stored as part of that entry.
This function moves *pp to point to the start of that varint, and sets *pVal by the varint value.
This function moves *ppPoslist so that it instead points to the first byte of the same position list.
This function must be called after all terms have been added to the segment using fts3SegWriterAdd().
This function must be called before any axes are coalesced.
This function must be called before exiting any API function (i.e.  returning control to the user) that has called sqlite3_malloc or sqlite3_realloc.
This function negates any strides in the iterator which are negative.
This function never returns error.
This function normally generates a nested loop for all tables in  pTabList.
This function now supports some "standardized" fault codes, as specified at.
This function only affects the 'base' and 'num' values in the metadata.
This function only manipulates fields of the database handle object, it does not close any savepoints that may be open at the b-tree/pager level.
This function opens a cursor used to read the input data for an  incremental merge operation.
This function outputs the specified (ANSI) string to the Win32 debugger (if available).
This function packages up the logic of adding a character or range of characters to a class.
This function packs boolean values in the input array into the bits of a byte array.
This function performs the parts of the "close file" operation  common to all locking schemes.
This function performs the printf() style processing, then appends the results to buffer pBuf.
This function performs the printf() style substitutions and executes the result as an SQL statement on the RBU handles database.
This function performs the work of a single sqlite3rbu_step() call for the type of operation specified by eType.
This function populates it with the initial structure objects for each index, and the initial version of the "averages" record (a zero-byte blob).
This function populates the array with values required to  "rollback" the write position of the WAL handle back to the current  point in the event of a savepoint rollback (via WalSavepointUndo()).
This function populates:  Fts5SegIter.term Fts5SegIter.rowid  accordingly and leaves (Fts5SegIter.iLeafOffset) set to the content of the first position list.
This function prepares the SQL statement against database db and frees the buffer.
This function provides validation for that.
This function queries the database for a table of that name.
This function queries the database for the names of the columns of table zThis, in schema zDb.
This function rb_thread_call_with_gvl() does: (1) acquire GVL.
This function reads the contents of the master-journal file into  memory and loops through each of the child journal names.
This function recursively checks whether it's possible to convert an integer variable initialization to a double initialization.
This function reduces any angle to within the first revolution
This function registered all of the above C functions as SQL functions.
This function releases all the allocated frames.
This function replaces the current contents of page pPg with the contents of the cell array.
This function requires 'properties' to contain all props declared in the class and all props being public.
This function requires great caution.
This function retrieves the doclist for the specified term (or term prefix) from the database.
This function returns ((val_numbits * CHAR_BIT + CHAR_BIT - 1) / CHAR_BIT) where val_numbits is the number of bits of abs(val).
This function returns ((val_numbits * CHAR_BIT + word_numbits - 1) / word_numbits) where val_numbits is the number of bits of abs(val).
This function returns SQLITE_OK if successful or an SQLite error code if an error occurs.
This function returns SQLITE_OK if successful, or an SQLite error code if an error occurs.
This function returns SQLITE_OK if successful, or an SQLite error code otherwise.
This function returns SQLITE_OK if the merge is successful, or an SQLite error code (SQLITE_NOMEM) if an error occurs.
This function returns UTF-8 strings.
This function returns a 32-bit bitmask indicating which columns of the  old.* or new.* tables actually are used by triggers.
This function returns a copy of the string in memory obtained from sqlite3_malloc().
This function returns a linked list of FKey objects (connected by FKey.pNextTo) holding all children of table pTab.
This function returns a pointer to a blob of memory associated with a single shared-btree.
This function returns a pointer to a buffer containing the encrypted page content.
This function returns a pointer to a new colset object containing the contents of (p) with new value column number iCol appended.
This function returns a pointer to a nul-terminated string in memory obtained from sqlite3DbMalloc().
This function returns a pointer to the DateTimeMetaData contained within the provided datetime dtype.
This function returns a pointer to the array of opcodes associated with the Vdbe passed as the first argument.
This function returns an array of ALL valid ini options with values and is not the same as ini_get_all() which returns only registered ini options.
This function returns either when the end of the buffer is reached or an unmatched  closing bracket - ')' - is encountered.
This function returns non-zero if the specified UTF-8 string buffer ends with a directory separator character or one was successfully added to it.
This function returns root dir for given URI.
This function returns the associated lowercase journal-mode name.
This function returns the collation sequence for database native text encoding identified by the string zName, length nName.
This function returns the database page-size if it is known, or zero if it is not (or if pWal is NULL).
This function returns the imported integer as Fixnum or Bignum.
This function returns the number estimated to be visited after taking pTerm into account.
This function returns the register number of a register that contains the value of element iField of the vector.
This function returns the signedness and overflow condition.
This function returns the size of the output file in bytes (excluding the final NUL terminator character).
This function returns the space in bytes required to store the copy  of the Expr structure and a copy of the Expr.u.zToken string (if that string is defined.)
This function returns the total number of cells added to the free-list.
This function returns true if any of the columns that are part of the child key for FK constraint *p are modified.
This function returns true if any of the columns that are part of the parent key for FK constraint *p are modified.
This function returns true if main-memory should be used instead of a temporary file for transient pager files and statement journals.
This function returns true if the two records apply to the same row (i.e. have the same values stored in the primary key columns), or false  otherwise.
This function scans a compiled unanchored expression recursively and attempts to build a bitmap of the set of possible starting bytes.
This function scans through a branch of a compiled pattern to see whether it can match the empty string or not.
This function searches for the corresponding close-quote character within the string and, if found, dequotes the string in place and adds a new nul-terminator byte.
This function searches pList for a entry that matches the iCol-th column of index pIdx.
This function searches pList for an entry that matches the iCol-th column of index pIdx.
This function searches the leaf page for a term matching (pTerm/nTerm).
This function searches the sub-tree headed by the zNode node for the range of leaf nodes that may contain the specified term or terms for which the specified term is a prefix.
This function sets starting bits for a character type.
This function sets the data directory or the temporary directory based on the provided arguments.
This function sets the iterator up so that iterates in reverse order through the doclist.
This function should be async-signal-safe when sargp is NULL.
This function should be async-signal-safe.
This function should be called after the constructor has been called because it may call __set from the uninitialized object otherwise.
This function should be called by the user for any method once.
This function should be called by the user when the process ends, to free the local storage index
This function should be called by the user whenever a thread ends, to free the thread "virtual stack" storage
This function should be made binary safe
This function should not be called directly by other code in this file.
This function should not overflow.
This function should only be called on a sharable b-tree after it  has been determined that no other b-tree holds a conflicting lock.
This function should only be used as a copy constructor, i.e. it should only be called AFTER a zval has been copied to another location using ZVAL_COPY_VALUE.
This function shuffles the array around until all entries are in sorted order.
This function sorts the values in aIdx according to dimension iDim of the cells in aCell.
This function sorts the values in aIdx according to the indexed values in aDistance.
This function starts a write transaction on the WAL.
This function steals the reference 'ret'
This function steals the reference to 'dtype'
This function takes a Boolean array and constructs index objects and iterators as if nonzero(Bool) had been called  Must not be called on a 0-d array.
This function takes a single argument.
This function takes a string and returns a pointer to a block of store holding a compiled version of the expression.
This function takes an integer value in the range 0 - 0x10ffff and encodes it as a UTF-8 character in 1 to 4 pcre_uchars.
This function takes responsibility for eventually freeing the buffer.
This function tells the run loop to call a callback whenever that fd is ready to be read
This function tests if the current row contains instances of each phrase sufficiently close together to meet the NEAR constraint.
This function tests if there exist any documents with docid values that are different from that integer.
This function then models a Zipf distribution truncated to sys.maxint.
This function touches all 4k pages belongs to the requested stack space, which size is passed in local_size.
This function updates the bounding box cells in all ancestor elements.
This function updates the shared-memory structures so that the next client to write to the database (which may be this one) does so by writing frames into the start of the log file.
This function updates the write-counter accordingly and, if necessary, performs incremental merge work.
This function uses the C-library functions time(), gmtime() and strftime().
This function will allocate a new SegmentWriter object and return it via the input/output variable *ppWriter in this case.
This function will be extremely optimized by remembering the end of the list
This function works around problems caused by this by making a copy of any  such cells before overwriting the page data.
This function works in milliseconds, but the underlying OsSleep()  API uses microseconds.
This function would be ineffective to do in JIT level.
This function would be simpler if it recursively called itself.
This function wraps a legacy inner loop so it becomes masked.
This function wraps a regular unmasked ufunc inner loop as a masked ufunc inner loop, only calling the function for elements where the mask is True.
This function writes each one of the in-memory pages in the list to the database file.
This function, linux_get_maxfd, must be async-signal-safe.
This functionality is not yet implemented
This functionality is used by the checkpoint code (see walCheckpoint()).
This gets a run-length encoded representation of the transfer
This gets called after the buffers have been exhausted, and their data needs to be written back to the arrays.
This gets called after the iterator has been positioned to a multi-index for the start of a buffer.
This gives a possible range of values of approximately 1.0e986 to 1e-986.
This gives a return value similar to that from fcvt, except that trailing zeros are suppressed, and ndigits can be negative.
This gives a return value similar to that of ecvt, except that trailing zeros are suppressed.
This gives the application an opportunity to prioritize any actions  related to the set of unblocked database connections.
This global variable is a relic that exists for backwards compatibility of legacy applications and should be avoided in new projects.
This grammar assumes section 5.3.1.3 is correct and that Annex B.2 is in error.
This groups 'kind' into boolean, integer, floating point, and everything else.
This guarantees that garbage data is never appended to the journal file.
This guarantees that none of the root-pages to be destroyed is relocated by an earlier OP_Destroy.
This hack is needed to access table information in Access databases (fmk)
This hack make Fiber context switch faster (x2 or more).
This hack uses a standard trick for avoiding calling the STRING macro with an empty argument when doing the test.
This handle is reused by subsequent calls to this function.
This handles some corner cases, such as 0-d arrays as well
This happens as the result of a "NOT NULL" constraint in the database schema.
This happens before constraints are verified.
This happens below, after the sibling pages have been  populated, not here.
This happens if a malloc() inside a call to sqlite3_column_text() or sqlite3_column_text16() failed.
This happens if it was written by an old version of FTS.
This happens if the segment is being used as an input to an incremental merge and all data has already been "trimmed".
This happens if the user has supplied a token such as "ORacle".
This happens in both normal and exclusive-locking mode.
This happens in function sqlite3PagerRollback().
This happens when code in  expr.c is trying to resolve a reference to a transient table (i.e. one created by a sub-select).
This happens when parsing a token or quoted phrase that contains no token characters at all.
This happens, for example, when the page has been added as a leaf of the freelist and so its content no longer matters.
This has been built and tested on Linux 2.2.14  This has been built and tested on Solaris 2.6.
This has no effect if the sub-journal is already opened (as it may be when running in exclusive mode) or if the transaction does not require a sub-journal.
This has the effect of erasing all imposter tables.
This has the effect of making sure that the string is well-formed UTF-8.
This has the effect of yielding to a coroutine.
This has to be bug-compatible with the original implementation, so only encode 23 of the 24 bytes.
This has to be done before determining whether a master journal file is  required, as an xSync() callback may add an attached database to the transaction.
This has to be done before the call to walIndexReadHdr() below.
This hash function is lightly-tuned for Ruby.
This hash table is not expected to ever contain very many entries, so a fixed number of buckets is  used.
This header file (together with is companion C source-code file "os.c") attempt to abstract the underlying operating system so that the SQLite library will work on both POSIX and windows systems.
This header file defines the SQLite interface for use by shared libraries that want to be imported as extensions into an SQLite instance.
This header file defines the interface that the SQLite library presents to client programs.
This header file defines the interface that the sqlite B-Tree file subsystem.
This header file defines the interface that the sqlite page cache subsystem.
This header file defines the interface to the write-ahead logging  system.
This header file is #include-ed by sqliteInt.h and thus ends up being included by every source file.
This header file is also used by the loadext.c source file (part of the main SQLite library - not an extension) so that it can get access to the sqlite3_api_routines structure definition.
This header file is used by programs that want to link against the FTS3 library.
This header file is used by programs that want to link against the ICU extension.
This header file is used by programs that want to link against the RTREE library.
This heap is used for cell overlap and coverage testing.
This helper routine to saveAllCursors does the actual work of saving the cursors if and when a cursor is found that actually requires saving.
This helps to keep entries in the disk file in order so that a scan of the table is a linear scan through the file.
This helps to keep entries in the disk file in order so that a scan of the table is closer to a linear scan through the file.
This heuristic does not reclaim storage as soon as it becomes invalid, but it will do so eventually.
This hint is not guaranteed to be accurate but it is often close.
This holds good for NetWare too, both for Winsock and Berkeley sockets
This holds the 'locally' allocated environ from the save_ps_args method.
This how we recognize which colors are actually used.
This however means constant hashing of the column name, which is not needed as it can be precomputed.
This implementation also assumes a coherent cache - that  separate processes cannot read different values from the same address at the same time.
This implementation always makes the leading digit a 1.
This implementation assumes that reading or writing an aligned 32-bit integer is an atomic operation.
This implementation does not actually create a new thread.
This implementation exists purely as a contingency, in case some malfunction in some other part of SQLite causes Sync to be called by mistake.
This implementation in this file does not provide any mutual exclusion and is thus suitable for use only in applications that use SQLite in a single thread.
This implementation is meant to be fast, but not as fast as possible.
This implementation is very closely tied to the that of the native sockets implemented in the core.
This implementation parses JSON text at 250 MB/s, so it is hard to see how JSONB might improve on that.)
This implementation uses SetPriorityClass() as a backend for defining  a process priority.
This implementation uses a state machine with 8 states:  (0) INVALID   We have not yet seen a non-whitespace character.
This implements the RTRIM collation.
This implies an 1-by-1 subproblem at D(N), which is not solved explicitly.
This implies an 1-by-1 subproblem at D(N).
This implies greediness, whatever the setting of the PCRE_UNGREEDY option.
This implies that a subsequent decoding step is required to completely decode implicitly tagged values.
This implies that the pager state should either be OPEN or READER.
This implies that the thread must also be holding a mutex on the sqlite3 connection pointer that owns the Btree.
This imply that only LIBXML_STATIC_FOR_DLL is supported ATM.
This includes COMMIT, SKIP, PRUNE and an uncaptured THEN, which means they take their normal effect.
This includes both match forms above, as well as any distractors, so we may ignore all other entries in `features`.
This includes negated single high-valued characters.
This index implies that the DISTINCT qualifier is redundant.
This index is a superset of the primary key
This index is not unique over the IN RHS columns
This indicates nothing more needs to be rolled back.
This indicates success
This indicates that no database name was specified as part of the PRAGMA command.
This indicates that the MATCH expression is not a full text query, but a request for an internal parameter.
This info is not preserved for runtime.
This information  may be used by the caller, for example, to avoid having to load the entire old.* record into memory when executing an UPDATE or DELETE command.
This information is for finding all the numbers associated with a given name, for condition testing.
This information is not required, but it is used in the assert() statements executed by function fts5CheckTransactionState() (see below).
This information is stored in P3 and used to redirect reads against P3 over to P1, thus possibly avoiding the need to seek and read cursor P3.
This information is used by the xBestIndex methods of virtual tables.
This information is used for testing and analysis only.
This information used to all be at the top of the single source code file "vdbe.c".
This instruction causes the VM to halt.
This instruction compares a prefix of the record blob in register P3 against a prefix of the entry that  the sorter cursor currently points to.
This instruction compares a prefix of the the record blob in register P3 against a prefix of the entry that  the sorter cursor currently points to.
This instruction is often useful as a jump destination.
This instruction is only used when the shared-cache feature is enabled.
This instruction makes a deep copy of the value.
This instruction makes a shallow copy of the value.
This instruction only works for indices.
This instruction throws an error if the memory cell is not initially an integer.
This instruction works just like OpenRead except that it opens the cursor in read/write mode.
This instrumentation assumes that all source code is in a single file (the amalgamation).
This integer should be the rowid of the table entry to which this index entry points.
This interacts with 'local', slightly, in order to form a date unit string as a local time, the casting must be unsafe.
This interface allows applications to access the same PRNG for other purposes.
This interface exists so that applications that want to take advantage of multiple cores can do so, while also allowing applications to stay single-threaded if desired.
This interface is not for use by applications.
This interface is only available if SQLITE_CHECK_PAGES is defined when the  library is built.
This interface is threadsafe on processors where writing a 32-bit integer is atomic.
This interface is used by the fts5vocab module.
This interface used to be the only way to cause a checkpoint to occur.
This interfaces is needed so that users of cursors can preallocate sufficient storage to hold a cursor.
This introduces a memory leak, as the memory allocated for the doc will not be freed even if the ufunc itself is deleted.
This invalidates the first journal header in the file, and hence the entire journal file.
This invariant arises because multiple overflows can only occurs when inserting divider cells into a parent on a prior balance, and divider cells are always adjacent and are inserted in order.
This invariants arise because multiple overflows can only occur when inserting divider cells into the parent page during balancing, and the dividers are adjacent and sorted.
This involves freeing descriptors and rolling back transactions, setting timeout-related parameters etc.
This involves modifying the contents of pParent, which may cause pParent to become overfull or underfull.
This involves things such as allocating registers and initializing the program counter.
This involves things such as allocating stack space and initializing the program counter.
This involves updating the leaf block that contains the smallest unmerged entry and each block (if any) between the leaf and the root node.
This is  a quirk for ODBC 2.0 compatibility for broken driver implementations.
This is  dangerous because the code to rollback a hot-journal file will not be able to find the master-journal name to determine  whether or not the journal is hot.
This is 'SHOW'/'EXPLAIN'-like query.
This is GLOB, not LIKE
This is Ok, as pSynced is just an optimization.
This is Ok, as the b+-tree fanout is usually very large, meaning that the interior of the tree consumes relatively  little memory.
This is POSIX time, which skips leap-seconds, but because we drop the seconds value from the npy_datetimestruct, everything is ok for this operation.
This is a (goofy) SQLite extension, that is supported for backwards compatibility only.
This is a (really) rare case.
This is a 1-by-1 subproblem and is not solved explicitly.
This is a Perl 5.10 feature.
This is a WONT FIX bug, at least for the moment.
This is a Walker.xSelectCallback callback for the sqlite3SelectTypeInfo() interface.
This is a bit more conservative than necessary, but much easier than enforcing an exact limit.
This is a bit of a kludge.
This is a braminzero backtrack path.
This is a brand new connection, we need not ping, but have to initialize ping
This is a buffer that is big enough to hold the entire content of a database page.
This is a change as of SQLite version 3.5.0.
This is a class that must be abstract itself.
This is a code duplication.
This is a collection of ugly hacks to circumvent a bug in Apple Accelerate framework's SGEMV subroutine.
This is a comparison function used as a qsort() callback when sorting an array of pending terms by term.
This is a compound name.
This is a consistent approach, but does not always have the same effect as in Perl.
This is a constant time equality check that will always check every byte of both values.
This is a convenience routine that makes sure that all thread-specific data for this thread has been deallocated.
This is a copy of the sqlite3GetVarint32() routine from the SQLite core.
This is a default behavior.
This is a default version of the tables that assumes ASCII encoding.
This is a deferred seek.
This is a demonstration program to illustrate the most straightforward ways of calling the PCRE regular expression library from a C program.
This is a deprecated alias for #each_byte.
This is a deprecated special case to allow non-matching shapes for the index and value arrays.
This is a different from other character type lists, which stores here that the character iterator matches to an empty string (also represented by a non-zero value).
This is a difficult situation to handle.
This is a dummy module whose purpose is to get distutils to generate the configuration files before the libraries are made.
This is a fallback, if no special method #to_json was defined for some object.
This is a faster version by taking Shawn Cokus's optimization, Matthe Bellew's simplification, Isaku Wada's real version.
This is a faster version of _vec_string_args to use when there are no additional arguments to the string method.
This is a feature that makes it possible to save compiled regex and re-use them in other programs later.
This is a fractional number, which is not adjusted by the offset.
This is a freestanding support program to generate a file containing character tables for PCRE.
This is a fudge that causes a compile- time error if the vectors OP_names or OP_lengths, which are indexed by opcode, are not the correct length.
This is a fudge that causes a compile-time error if the vector eint, which is indexed by compile-time error number, is not the correct length.
This is a generated file, do not modify
This is a global handler.
This is a hack necessary to accommodate situations where bucket is appended to the stream multiple times.
This is a hack to support it
This is a helper function for rbuObjIterCacheTableInfo().
This is a helper function for sqlite3BtreeLock().
This is a helper function used by sessionMergeUpdate().
This is a helper routine for sqlite3PcacheFetchFinish()  In the uncommon case where the page being fetched has not been initialized, this routine is invoked to do the initialization.
This is a helper routine for sqlite3VdbeMemSetNull() and for sqlite3VdbeMemRelease().
This is a helper routine invoked by sqlite3VdbeMemRelease() in the unusual case where there really is memory in p that needs to be freed.
This is a lesser evil than not diagnosing bad classes when Perl does, I think.
This is a little safety check for instances when we are dealing with a regenerated session that was not yet written to disk.
This is a lot like misc/cgo/testcarchive/main2.c.
This is a lot like misc/cgo/testcarchive/main3.c.
This is a lot like misc/cgo/testcshared/main4.c.
This is a lot like misc/cgo/testcshared/main5.c.
This is a low-overhead function which does no heap allocations.
This is a magic string that appears at the beginning of every SQLite database in order to identify the file as a real database.
This is a manual override for the local time zone to use, as an offset in minutes.
This is a mess and it would be nice to fix it.
This is a newer "info" function which has an extensible interface so that additional items can be added compatibly.
This is a no-op for in-memory databases or pages with the Pager.noSync flag set.
This is a no-op if NDEBUG is defined.
This is a no-op if P1 is not currently in WAL mode.
This is a no-op if database iDb is not currently open in WAL mode.
This is a no-op unless the  shared-cache feature is enabled.
This is a one-time occurrence.
This is a prerequisite for invoking  sqlite3InitCallback().
This is a problem on machines without a guard digit in add/subtract (Cray XMP, Cray YMP, Cray C 90 and Cray 2).
This is a public wrapper for the winMbcsToUtf8() function.
This is a public wrapper for the winUnicodeToUtf8() function.
This is a public wrapper for the winUtf8ToMbcs() function.
This is a public wrapper for the winUtf8ToUnicode() function.
This is a query for the current default locking mode (which may be different to the locking-mode of the main database).
This is a quick implementation to avoid setting up the proper iterators.
This is a quick-and-dirty emulator of the nl_langinfo(CODESET) function defined in the Single Unix Specification for those systems (FreeBSD, etc.) that don't have one yet.
This is a safe way to pass pointers back to ocaml.
This is a short table, so it is searched linearly.
This is a similar technique to that used by glibc on systems that do not have a real fallocate() call.
This is a small subproblem and is solved by DLASDQ.
This is a small subproblem and is solved by SLASDQ.
This is a straight copy
This is a straight copy + byte swap
This is a straight copy + element pair byte swap
This is a strategy to buy a little speed up and avoid the dictionary look-up in the default case.
This is a structure that holds all the context the main thread needs.
This is a structure that the thread holds on to.
This is a threadsafe build, but strerror_r() is not available.
This is a tuple with 5 arguments 1) an integer with the pickle version.
This is a utility for setting or clearing a bit-range lock on an AFP filesystem.
This is a utility routine used to set the ExprSpan.zStart and ExprSpan.zEnd values of pOut so that the span covers the complete range of text beginning with pStart and going to the end of pEnd.
This is a variant of sqlite3PagerWrite() that runs when the sector size is larger than the page size.
This is a verification routine is used only within assert() statements.
This is a very unreasonable result, but Windows is notorious for being unreasonable so I do not doubt that it might happen.
This is a whole number, which is adjusted by the offset as the local time.
This is a wrapper around "sqlite3_mprintf(zFmt, ...)".
This is a wrapper around sqlite3LocateTable().
This is a wrapper around sqlite3_log().
This is a wrapper around the layoutNodeImpl function.
This is achieved by converting +numeric+ to a Bignum.
This is achieved by converting a +numeric+ to a Float.
This is actually a deferred seek.
This is actually a requirement for any compound SELECT statement, but all the code here does is make sure that no such (illegal) sub-query is flattened.
This is almost always 512 bytes, but may be larger for some devices.
This is almost equivalent to Digest.hexencode(Digest::Class.new(*parameters).digest(string)).
This is also acceptable.
This is also optional.
This is also problem for encoding like UTF-7/UTF-8/ISO-2022 which a single char can be more than 4 bytes.
This is also the dimension of the main diagonal array D.
This is also used to detect groups that contain recursive back references to themselves.
This is also used to identify  appendable segments.
This is always a CONSTRAINT conflict.
This is always an error - we fetch the class name for the error message here
This is always non-negative.
This is always one of EXPR_FULLSIZE, EXPR_REDUCEDSIZE or EXPR_TOKENONLYSIZE.
This is an 0x00 byte preceded by some byte that does not have the 0x80 bit set.
This is an EOF condition
This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.
This is an SQLite module implementing full-text search.
This is an auxiliary routine called by CGEHRD.
This is an auxiliary routine called by CHETRD.
This is an auxiliary routine called by DGEHRD.
This is an auxiliary routine called by DSYTRD.
This is an auxiliary routine called by SGEHRD.
This is an auxiliary routine called by SSYTRD.
This is an auxiliary routine called by ZGEHRD.
This is an auxiliary routine called by ZHETRD.
This is an class alias, use alias name
This is an easy way to reuse the NpyIter logic for dealing with certain cases like casting operands to correct dtype.
This is an error condition that can result, for example, when a SELECT on the right-hand side of an INSERT contains more result columns than there are columns in the table on the left.
This is an error, but undo PySequence_GetItem fix for message
This is an error, but undo PySequence_SetItem fix for message
This is an exact check, since otherwise __index__ is used.
This is an expensive option, so search through the constraints to see if a more efficient  strategy is possible.
This is an experimental method and is subject to change.
This is an extra SQLITE_TRACE macro that indicates "legacy" tracing in the style of sqlite3_trace()
This is an important assumption.
This is an in-memory DB
This is an inconvience that means that help can't be logically grouped Not worth the savings
This is an internal self-check only - it is not an essential processing step.
This is an mmap page object
This is an optimization - the correct answer should result regardless.
This is an optimization only.
This is an optimization that allows sqlite3PcacheFetch() to skip searching for a dirty page to eject from the cache when it might otherwise have to.
This is an optimization that boosts performance by avoiding redundant seeks.
This is an optimization.
This is an optimized version of SCopy that works only for integer values.
This is an original closure object and __invoke is to be called.
This is an unconditional update.
This is analagous to renameTableFunc() above, except for CREATE TRIGGER, not CREATE INDEX and CREATE TABLE.
This is applied to the main process, not per thread, although this could  be implemented using SetThreadPriority() at one point.
This is arranged by the calling routine, and is no loss in generality.
This is assumed to be 29 days 12 hours and 793 halakim for calendar purposes.
This is bad, but since we are going to be hardcoding in the POSIX stuff anyway...
This is based on trimmed version of MT19937.
This is basically what a lot of other Web servers do in this case anyway.
This is because PyOS_ascii_strtod is buggy, and will completely refuse to parse the string, rather than parsing the first part "1".
This is because RFC2133 is silent about which error code must be returned for which situation.
This is because an "ALTER TABLE RENAME TABLE" statement inside a transaction  always opens a savepoint transaction.
This is because assert() statements in some VFS implementations fail if  xShmLock() is called before xShmMap().
This is because each database connection requires its own unique instance of the sqlite3_vtab* handle used to access the virtual table  implementation.
This is because each database connection requires its own unique instance of the sqlite3_vtab* handle used to access the virtual table implementation.
This is because if we send "i" (42) then the type will be int and the server will expect int.
This is because in auto-vacuum mode the backend may need to move another root-page to fill a gap left by the deleted root page.
This is because in those states the code to roll back savepoint  transactions may copy data from the sub-journal into the database  file as well as into the page cache.
This is because it may call sqlite3_release_memory(), which assumes that  this mutex is not held.
This is because it might call sqlite3_release_memory(), which assumes that  this mutex is not held.
This is because marking the page as clean will clear the PGHDR_NEED_SYNC flag.
This is because pthread_self(), TLS and other information are represented by stack pointer (higher bits of stack pointer).
This is because some of the "globals" in this module should actually be per-connection variables.
This is because statement transactions are not able to rollback schema changes.
This is because the call to pager_write_pagelist() below will not actually write data to the file in this case.
This is because the hash table only supports a single scan query at a time, and the multi-iter loop from which this function is called is already performing such a scan.
This is because the snippet(), offsets() and matchinfo() functions are not supposed to recognize  any instances of phrases that are part of unmatched NEAR queries.
This is because the user  might change the definition of a collation sequence and then run a VACUUM command.
This is because they cache their return values, and by the time control flows to here they have already been called once from within sessionPreupdateHash().
This is because we cannot allow a journal header to be written between the pages journaled by this function.
This is because when memory debugging is turned on, these two functions are  called via macros that record the current file and line number in the ThreadData structure.
This is behavior that should reflect the 'MAP_NORESERVE' flag of 'mmap' on Unix.
This is believed to be the year of creation.
This is best for palette images, and libpng defaults to it for palette images anyway, so we don't need to do it explicitly.
This is cache size used in the calculation of the initial size of the Win32-specific heap.
This is called  when a page that previously contained data becomes a free-list leaf  page.
This is called after a table is dropped from disk (using the Destroy opcode) in order to keep  the internal representation of the schema consistent with what is on disk.
This is called after a table is dropped in order to keep the internal representation of the schema consistent with what is on disk.
This is called after a trigger is dropped from disk (using the Destroy opcode) in order to keep  the internal representation of the schema consistent with what is on disk.
This is called after a trigger is dropped in order to keep the internal representation of the schema consistent with what is on disk.
This is called after an index is dropped from disk (using the Destroy opcode) in order to keep the internal representation of the schema consistent with what is on disk.
This is called after an index is dropped in order to keep the internal representation of the schema consistent with what is on disk.
This is called as part of an incremental checkpoint operation.
This is called as part of registering the FTS5 module with database connection db.
This is called by several functions that scan a compiled expression looking for a fixed first character, or an anchoring op code etc.
This is called by the parser when it sees a CREATE TRIGGER statement up to the point of the BEGIN before the trigger actions.
This is called during initialization to register the fts5_expr() scalar UDF with the SQLite handle passed as the only argument.
This is called during module initialization
This is called in parallel.
This is called once for each leaf page except the first that contains at least one term.
This is called only after is_counted_repeat() has confirmed that a repeat-count quantifier exists, so the syntax is guaranteed to be correct, but we need to check the values.
This is called outside of a mutex, so have to be aware about external changes to the structure as we read it.
This is called to code the required FOR EACH ROW triggers for an operation on table pTab.
This is called when db is being closed.
This is called when the database connection passed as an argument is  being closed.
This is called when the pager layer detects that the database has been modified by an external database connection.
This is caught by a recursion depth count.
This is character-set independent
This is clearly something that should be fixed, cause the semantics of isc_wait_for_event() indicate that it blocks until an event occurs.
This is codetables for different Cyrillic charsets (relative to koi8-r).
This is common initialization code between PyArrayIterObject and PyArrayNeighborhoodIterObject  Increase ao refcount
This is common tail processing for btreeParseCellPtr() and btreeParseCellPtrIndex() for the case when the cell does not fit entirely on a single B-tree page.
This is compatible with PQescapeLiteral, but it cannot handle multbyte chars such as SJIS, BIG5.
This is compiling for real
This is compiling for real.
This is considered as a kind of spurious wakeup.
This is controled by special insert command 'test-no-incr-doclist'.
This is converted to an array after op flags are retrieved
This is correct behavior for reading a series of images from one source.
This is correct for Linux which has union semun.
This is correct for Solaris 2.6 which does not have union semun.
This is correct for typical "arithmetic shift" instructions that shift in copies of the sign bit.
This is currently an undocumented limit.
This is default so NOP
This is defined in tokenize.c.
This is delayed until the first time the database is accessed.
This is demonstrated by the example above.
This is described as the "balance-shallower" sub-algorithm in some documentation.
This is detected when we cannot recover the previous A.
This is different from a normal transaction rollback, as no locks are released and the transaction remains open.
This is different from every other SQLite interface.
This is different from fd.
This is different from sqlite3Atoi64() which requires the input number to be zero-terminated.
This is done also in mysqlnd_ps.c
This is done as a macro so that it will be optimized out when virtual table support is omitted from the build.
This is done as part of extracting the snippet text, not when selecting the snippet.
This is done as part of the vtab xCreate() method.
This is done as part of the xConnect() and xCreate() methods.
This is done because the full-text index doclist is required to calculate these values properly, and the full-text index doclist is not available for deferred tokens.
This is done because the left operand of infix functions (the operand we want to control overloading) ends up as the second argument to the function.
This is done before calling sqlite3PcacheMakeDirty() on the page.
This is done before the sqlite3BtreeGetPageSize(pMain) call below, to ensure that we do not try to change the page-size on a WAL database.
This is done before the table is dropped at the btree level, in case the sqlite_sequence table needs to move as a result of the drop (can happen in auto-vacuum mode).
This is done by finding the roots of the secular equation via the routine DLAED4 (as called by DLAED3).
This is done by finding the roots of the secular equation via the routine DLAED4 (as called by DLAED9).
This is done by finding the roots of the secular equation via the routine DLAED4 (as called by SLAED3).
This is done by finding the roots of the secular equation via the routine DLASD4 (as called by DLASD8).
This is done by finding the roots of the secular equation via the routine SLAED4 (as called by SLAED3).
This is done by finding the roots of the secular equation via the routine SLAED4 (as called by SLAED9).
This is done by finding the roots of the secular equation via the routine SLASD4 (as called by SLASD8).
This is done by finding the square roots of the roots of the secular equation via the routine DLASD4 (as called by DLASD3).
This is done by finding the square roots of the roots of the secular equation via the routine SLASD4 (as called by SLASD3).
This is done by the usual test runner.
This is done directly instead of using sqlite3_bind_int64() to avoid  triggering asserts related to mutexes.
This is done even  though the rowid/docid lookup is faster than a MATCH query, selecting it would lead to an "unable to use function MATCH in the requested  context" error.
This is done for a particular application that needs to know whether or not the tokenizer is being used for snippet generation or for some other purpose.
This is done if there are no BEFORE triggers, or if there are one or more BEFORE triggers that use this value via a new.* reference in a trigger program.
This is done to avoid deadlock issues involving multiple sqlite3.mutex mutexes.
This is done to protect the sqlite3.pDisconnect list.
This is done without over/underflow as long as the final result CTO*A(I,J)/CFROM does not over/underflow.
This is due to the fact that we remove by setting the address slot to NULL (we never remove a hash from the table, outside of garbage collection).
This is easy to do, as fts3 has no syntax for escaping a quote character embedded in a string.
This is either EXPR_FULLSIZE, EXPR_REDUCEDSIZE or EXPR_TOKENONLYSIZE.
This is equivalent to Digest::Class.new(*parameters).digest(string), where extra _parameters_, if any, are passed through to the constructor and the _string_ is passed to #digest().
This is equivalent to copying the contents of the child into the root node (the operation that Gutman's paper says to perform  in this scenario).
This is equivalent to the Win32 Sleep() interface.
This is especially important on ZipVFS systems, as in that case it is not possible to create a database file that uses one page size by writing to it with another.
This is essentially the class structure for tokenizers.
This is fdprintf() on some systems, but use a different name to avoid conflicts
This is for MacOSX only.
This is for VXWorks only.
This is for big-endian machines only, PPC and Sparc specifically.
This is for cases like http://localhost/blah.phar/path/to/file.php/extra/stuff which calls "blah.phar" file "path/to/file.php" with PATH_INFO "/extra/stuff"
This is for data packed contiguously, but not necessarily in C or Fortran order.
This is for diagnostic purposes only.
This is for diagnostic purposes.
This is for older API compatibility
This is for use in assert() expressions, so it is only compiled if NDEBUG is not defined.
This is for use with other formats that use the deflate compressed data format such as zip which provide their own check values.
This is helpful while  debugging.
This is here to suppress warnings from the GCC cpp's -Wunused-macros.
This is hit if -k is set or there is no match
This is how you can tell Ruby the correct encoding of a string.
This is how you do event::event_list in c
This is implemented by setting them to zerofirstbyte and zeroreqchar when such a repeat is encountered.
This is important  because the OpenWrite opcode below will be needing it.
This is important for SQLite because we are not able to use a "," as the decimal point in place of "." as specified by some locales.
This is important for embedded applications on platforms with limited memory.
This is important if the parent page happens to be page 1 of the database image.
This is important in case the transaction being rolled back has modified the database schema.
This is important in shared-cache mode.
This is important, as the root merge (INCRINIT_ROOT) will be using the same task object.
This is in case the previous page written to the journal has already been synced.
This is in case the sample record is corrupted.
This is in violation of the appnote.
This is intended for getting better parallel processing.
This is intended for simple, lightweight iteration over arrays where no buffering of any kind is needed, and the array may not be stored as a PyArrayObject.
This is intended to avoid probe effect.
This is intended to be used in functions where a different mode could be applied to each axis, like in ravel_multi_index.
This is intended to be used within debuggers.
This is intentional - the error code is cleared and the cache reset in the block below.
This is just a small subset of the functionality provided by the LDAP library.
This is just an arbitrary value for the fallback case.
This is just hint for Ruby thread scheduler.
This is just like sqlite3ResolveExprNames() except that it works for an expression list rather than a single expression.
This is just the classic "atomic push onto linked list stock" algarithm.
This is just to increase portability of scripts.
This is kept in the code in case we need to switch back to it, or in case we need it for investigating the infamous internal masked region bug.
This is legacy and deprecated.
This is like Close() followed by Init() only much faster.
This is like SRT_Table except that this destination uses OP_OpenEphemeral to create the table first.
This is likely to be an append
This is limited to  some extent by SQLITE_MAX_SQL_LENGTH.
This is loaded last, as the TEMP database schema may contain references to objects in other databases.
This is mainly for debugging, though the function is able to force a failure.
This is mandatory on Windows.
This is more important that I originally thought.
This is more restrictive than necessary.
This is more than the usual guess of 10 rows, since we have no way of knowing how selective the index will ultimately be.
This is more than the usual guess of 10 rows, since we have no way of knowning how selective the index will ultimately be.
This is most useful for declaring functions that can then be called with CALL_PHPx.
This is mostly just syntactic sugar.
This is much faster than scanning the entire 10MB WAL.
This is much faster than synthesizing  a new poslist the way we have to for more complicated phrase or NEAR expressions.
This is necessary as such an INSERT does not open a statement transaction.
This is necessary as the VM code is being generated for will not open a statement transaction.
This is necessary as the memory cell array may contain pointers to VdbeFrame objects, which may in turn contain pointers to open cursors.
This is necessary for the correct constraint check processing (in sqlite3GenerateConstraintChecks()) as part of UPDATE and INSERT statements.
This is necessary for transactions to be durable.
This is necessary if you are compiling on a recent machine (ex: Red Hat 7.2) but you want your code to work on an older machine (ex: Red Hat 6.0).
This is necessary if you are running in an EBCDIC environment, or if you want to default to a different encoding, for example ISO-8859-1.
This is necessary on Windows where the stack can only grow in 4k steps.
This is necessary only for forcing rdoc handle File::open
This is needed (for example) prior to parsing a statement since we will be comparing table and column names against all schemas and we do not want those schemas being reset out from under us.
This is needed even though pcre_internal.h itself includes pcre.h, because it does so after it has set PCRE_EXP_DECL to "export" if it is not already set.
This is needed for dealing with backward assertions.
This is needed for the annoying case of receiving a response to a HEAD request.
This is needed for the argument to "PRAGMA index_xinfo".
This is needed to make RSAREF happy on some MS-DOS compilers.
This is needed to work around problems caused by indexing and/or anti-virus software on Windows systems.
This is never the case when building a production library.
This is no longer necessary as this function is now only called right before committing a transaction.
This is no longer permitted, on the grounds that it creates a library that is technically incompatible with an SQLite library  compiled with a different limit.
This is normally the case when the "TEMP" or "TEMPORARY" keyword occurs in between CREATE and TABLE.
This is not  supported by the new syntax (it is replaced by the NOT operator).
This is not a "flat like" 1-d special case
This is not a malloc/realloc check.
This is not a particularly good checksum.
This is not a performance issue because it happens only when there has been a compilation error.
This is not a problem, as the column type of "t1.col" is never used.
This is not a problem, because ZEND_ACC_HAS_TYPE_HINTS is never set, and we won't check arguments on internal function.
This is not a real checksum.
This is not actually a problem, but it does cause a valgrind error when the 1 or 2 bytes of unitialized  data is passed to system call write().
This is not actually used, but is here for completeness, in case someone wants to use the HWB stuff for anything else...
This is not checked by default WRITEABLE is not part of UPDATE_ALL
This is not considered a compatibility break because any application that ever receives an SQLITE_MISUSE error is broken by definition.
This is not correct any more, depends on what compare_func is set to.
This is not feasible in DOS machines.
This is not garanteeed for GetColumn() - the result can be stored in any register.
This is not generally possible with a WAL database, as rollback involves simply truncating the log file.
This is not important for correct operation of the module, but is necessary to ensure that some tests designed to produce hash table collisions really do work.
This is not just a cosmetic nicety.
This is not necessarily true for the basic type objects of Python (it is checked for single inheritance but not dual in PyType_Ready).
This is not really necessary, but it is tidier than  leaving the regular expression object configured with an invalid pointer after this function returns.
This is not required if bCommit is non-zero.
This is not required if the persistent media supports the SAFE_APPEND property.
This is not space efficient for large text.
This is not suported.
This is not the right way to get output size...
This is not the total number of pages referenced, but the sum of the reference count for all pages.
This is not universal.
This is now set at compile time, rather than during execution of the vdbe program so that sqlite3_column_count() can be called on an SQL statement before sqlite3_step().
This is often faster.
This is ok since all points of the outside are likely to be bad
This is ok, as the xBestIndex() method leaves the sqlite3_index_constraint.omit flag clear for range constraints on the rowid field.
This is omitted if this modules is currently generating a patchset.
This is one term of an OR-optimization using the PRIMARY KEY of a WITHOUT ROWID table.
This is only called if it is guaranteed that the phrase has at least one incremental token.
This is only done if the current call to this function resulted in the heap subsystem actually being shutdown.
This is only done when necessary ofcourse.
This is only needed because we are sub-typing the Float type and must pre-set some function pointers to get PyType_Ready to fill in the rest.
This is only present if SQLITE_OMIT_BUILTIN_TEST is not defined.
This is only required for the memory sanitizer, so it's unfortunate that we always run it.
This is only required if at least one side of the comparison operation is not a sub-select.
This is only required if currently generating VDBE code for a CREATE TABLE (not when parsing one as part of reading a database schema).
This is only usable after the startup phase
This is only used if the SQLITE_CHECK_PAGES macro is defined.
This is only used to generate an error message if the lock cannot be obtained.
This is optional on Linux but it allows to have explicit "Out of memory" error messages.
This is overcome by a scan at the end if there's no firstchar, looking for an asserted first char.
This is part of Perl's movement towards a unified syntax for back references.
This is part of an SQLite module implementing full-text search.
This is part of the fts5_decode() debugging aid.
This is possible in BER by setting the length bytes of an encoding to zero and by this indicating that the following value will be sent in chunks.
This is preferable to generating a new  ephemeral table.
This is probably incorrect, but is convenient because at this point the new.* values  are not easily obtainable.
This is probably not what you want.
This is quite safe, as the pager will have transitioned to the error state.
This is really *bad* because it will modify the status time of the file...
This is really OP_Noop and OP_Explain
This is really just for tidiness with callouts, in case they inspect these fields.
This is really just the default value for the max_page_count pragma.
This is relative to the top left corner of the viewport, which changes as the page is scrolled.
This is relative to the top left of the plugin's coordinate system (not the page).
This is relevant, for example, in choosing a clapack or flapack function depending on the storage order of array arguments.
This is required as the version of page 1 currently in the page1 buffer may not be the latest version - there may be a newer one in the log file.
This is required before  writing data to the fts3 table.
This is required during savepoint rollback (see pagerPlaybackSavepoint()).
This is required for Windows but we don't do this for Linux since it lets us run more processes in parallel without running out of memory immediately (though we do risk it later on)
This is required for the dtype to be an immutable object.
This is required if the conflict-handler is invoked with CHANGESET_DATA and returns CHANGESET_REPLACE.
This is required in a few obscure LEFT JOIN cases where control jumps over the top of the loop into the body of it.
This is required in case any of them are holding references to an xFetch version of the b-tree page modified by the accessPayload call below.
This is required in case they are holding a reference to an xFetch reference corresponding to page pgnoRoot.
This is required in case this connection creates the database file.
This is required in case this index is actually a  PRIMARY KEY and the table is actually a WITHOUT ROWID table.
This is required in order to estimate the cost of loading large doclists from the database.
This is required on Windows
This is reset to NULL on failure.
This is safe as the entries for the new poslist are a subset of the old, so it is not possible for data yet to be read to be overwritten.
This is safe because dropping a cell only overwrites the first four bytes of it, and this function does not need the first four bytes of the divider cell.
This is safe because this thread is  currently holding locks that exclude all other readers, writers and checkpointers.
This is safe since there is always at least one byte free
This is same as Time.new without arguments.
This is same as the binding for loaded libraries on "load('foo', true)".
This is security sensitive code.
This is set during a rollback or by user request, respectively.
This is similar in concept to how sqlite encodes "varints" but the encoding is not the same.
This is similar to "bitmap indices" in other database engines.
This is slightly different from resolving a normal SQL expression, because simple identifiers are treated as strings, not possible column names or aliases.
This is slightly inefficient, but still correct.
This is slightly slower than accessing the fields directly (as an intermediate array is generated).
This is slightly tricky as the leaf node may be underfull, and the internal node may be either under or overfull.
This is slow and works badly.
This is so as to ensure that the buffer is big enough to hold the current doclist AND'd with any other doclist.
This is so both syntaxes can be tested using a single build of testfixture.
This is so that expressions in the WHERE clause (etc.) can refer to expressions by aliases in the result set.
This is so that the function can be called from code not holding the GIL.
This is so that there is a complete hash-table on each aligned 32KB page of the wal-index.
This is somewhat different than other callbacks because if the user returns 1, we will interpret that as saying that this message has no body.
This is special cased for exact ndarray so that no PyArray_Return is done in that case.
This is step (1) in the in-operator.md optimized algorithm.
This is stupid way to do.
This is subsequently free'd at exit.
This is successful most of the time (about 9 times out of 10).
This is sufficient either for the 'T' or 'P' byte and the varint that follows it, or for the two single byte values otherwise.
This is sufficient to allow us to identify EBCDIC text and to distinguish between old-style and internationalized examples of text.
This is superior to unauthenticated modes in that it allows to detect if somebody effectively changed the ciphertext after it had been encrypted.
This is that dummy pointer.
This is the  the same as binding a NULL value to the column.
This is the "Composite Document File" format, and not the "Compound Document Format", nor the "Channel Definition Format".
This is the "abnormal" case, for EBCDIC systems not running in UTF-8 mode.
This is the "abnormal" table for EBCDIC systems without UTF-8 support.
This is the "normal" case, for ASCII systems, and EBCDIC systems running in UTF-8 mode.
This is the "normal" table for ASCII systems or for EBCDIC systems running in UTF-8 mode.
This is the "reserved" space that is sometimes used by extensions.
This is the "top level" trigger context.
This is the "user callable" routine to compare numbers N1 and N2.
This is the 'busday_count' function exposed for calling from Python.
This is the 'busday_offset' function exposed for calling from Python.
This is the 'is_busday' function exposed for calling from Python.
This is the (easy) common case where the entire payload fits on the local page.
This is the 2-bit case and we are on the second iteration and current term is from the first iteration.
This is the 2nd template.
This is the Level 2 BLAS version of the algorithm.
This is the Level 3 BLAS version of the algorithm.
This is the PGroup.lru element
This is the Python-exposed datetime_as_string function.
This is the Walker callback from checkConstraintUnchanged().
This is the approximate beginning of a month.
This is the basis for the tests in Comparable.
This is the basis for the tests in the Comparable module.
This is the block version of the algorithm, calling Level 3 BLAS.
This is the blocked form of the algorithm, calling Level 3 BLAS.
This is the bogus content
This is the callback routine for the code that initializes the database.
This is the case for immediate values and frozen string literals.
This is the case if the data for the INSERT is coming from a  single-row VALUES clause
This is the case if the data for the INSERT is coming from a VALUES clause
This is the central code that converts Python objects to Type-descriptor objects that are used throughout numpy.
This is the central step in the MD5 algorithm.
This is the classic nomatch case
This is the code number for the token at this stack level
This is the common case where the desired content fits on the original page - where the content is not on an overflow page
This is the core of sqlite3_step().
This is the core of the algorithm.
This is the correct result.
This is the database that must be used
This is the default collating function named "BINARY" which is always available.
This is the default for temporary and transient files.
This is the descendent of an OR node.
This is the difference - make a file based on size of chunks.
This is the easiest way to get RocksDB to perform well
This is the fallback stemmer used when the porter stemmer is inappropriate.
This is the first call to this function.
This is the first of several action routines that get called in response to a CREATE TABLE statement.
This is the first term on a leaf that is not the leftmost leaf in the segment b-tree.
This is the first-part of the CObject structure.
This is the forcible breaking of infinite loops as implemented in Perl 5.005.
This is the function signature used for all extension entry points.
This is the general case where many pages are being removed.
This is the general purpose conversion function.
This is the head of a linked list aka KEY VERTEX
This is the head of a linked list.
This is the header file for information that is private to the VDBE.
This is the header file for the generic hash-table implementation used in SQLite.
This is the heart of the Mongoose's logic.
This is the implementation of a scalar SQL function used to test the  expression parser.
This is the implementation of generic hash-tables used in SQLite.
This is the implementation of the  fts5_api.xCreateTokenizer() method.
This is the implementation of the  fts5_api.xFindTokenizer() method.
This is the implementation of the page cache subsystem or "pager".
This is the implementation of the sqlite3_vfs.xRead method.
This is the information used by the action routines in the grammar.
This is the length of the matched pattern
This is the low-level function which requires already cleaned input data.
This is the main array creation routine.
This is the main code to make a NumPy array from a Python Object.
This is the main difference from fmt.
This is the main routine that implements a subset of the flexbox layout algorithm described in the W3C CSS documentation: https://www.w3.org/TR/css3-flexbox/.
This is the maximum amount of data (in bytes) to store in the  Fts3Table.pendingTerms hash table.
This is the maximum space required for an in-memory journal file handle  and a regular journal file-handle.
This is the method that ends up getting called whenever an object is constructed using .new.
This is the non-NL case
This is the normal case.
This is the number of concurrent requests, equals FCGI_MAX_CONNS
This is the obsolete pcache_methods object that has now been replaced by sqlite3_pcache_methods2.
This is the old value less one, less one more if that happens to be a root-page number, less one again if that is the PENDING_BYTE_PAGE.
This is the only exception for which the tricks are not preserved.
This is the only routine tha will increase the value of nBackfill.
This is the only routine that will increase the value of nBackfill.
This is the only way out of this procedure.
This is the only way that a VM that opens a statement transaction may invoke this opcode.
This is the order of the related secular equation.
This is the point at which we convert to a hash table at this level, if we're over the count
This is the reason this function may return SQLITE_NOMEM.
This is the reverse of the commented-out test about 10 lines ago.
This is the right-looking Level 2 BLAS version of the algorithm.
This is the right-looking Level 3 BLAS version of the algorithm.
This is the routine that actually formats the sqlite3_log() message.
This is the same as the custom stable insertion sort in the NpyIter object, but sorting in the reverse order as in the iterator.
This is the same database handle that was the first argument to the sqlite3_prepare() that was used to create the statement in the first place.
This is the same hash checksum used by the fts5_hash.c module.
This is the same information as is accessible via the xInstCount/xInst APIs.
This is the same technique used by glibc to implement posix_fallocate() on systems that do not have a real fallocate() system call.
This is the second bug report from wireshark this week.
This is the spprintf implementation.
This is the start of the next columns hits.
This is the sub-WHERE clause body.
This is the theoretical max (will never get beyond len * 2 as long as we are converting from single-byte characters, though)
This is the top of the main insertion loop
This is the top-level implementation of sqlite3_step().
This is the unblocked form of the algorithm, calling Level 2 BLAS.
This is the unblocked version of the algorithm, calling Level 2 BLAS.
This is the value of the token
This is the value that walTryBeginRead returns when it needs to be retried.
This is the xColumn method, called by SQLite to request a value from the row that the supplied cursor currently points to.
This is the xEof method of the virtual table.
This is the xExprCallback for a tree walker.
This is the xFilter implementation for the virtual table.
This is the xFilter interface for the virtual table.
This is the xRowid method.
This is the xSetSystemCall() method of sqlite3_vfs for all of the "unix" VFSes.
This is the xSetSystemCall() method of sqlite3_vfs for all of the "win32" VFSes.
This is to address the following:  SELECT ...
This is to avoid creating a *-shm file on disk.
This is to ensure that statement-transactions are always nested, not overlapping.
This is to ensure that the tables within the output of sqlite3changegroup_output() are in  the right order.
This is to guard against size changes that result when compiling on a different architecture.
This is to help with identifying performance problems caused by applications routinely shutting down without checkpointing the log file.
This is to keep the static variables organized and to reduce namespace pollution when this module is combined with other in the amalgamation.
This is to make sure that the schema-version really does change in the case where the source and destination databases have the same schema version.
This is to prevent insecure data, such as command-line arguments or strings read from Kernel#gets, from inadvertently compromising the user's system.
This is to stop RBU connections from automatically checkpointing a *-wal (or *-oal) file from within sqlite3_close().
This is to support column declarations that include "DEFAULT CURRENT_TIME" etc.
This is transparent to the caller.
This is true even if this routine fails to allocate a new WhereTerm.
This is true for sshd, but may not be true for other programs.
This is true with or without implicit bit.
This is typically "/etc", but is modified by the prefix used when Ruby was compiled.
This is typically a union of many types, one of which is sqlite3Fts5ParserFTS5TOKENTYPE.
This is typically a union of many types, one of which is sqlite3ParserTOKENTYPE.
This is ugly, but otherwise we would have to maintain a fully compatible struct stat.
This is ugly, but we have to replace ungetc
This is undesirable, because we want this fd to be open for other processes, so that they can reconnect to the shared memory.
This is undocumented and might change.
This is used by Hash to test members for equality.
This is used by Random.new when no seed value is specified as an argument.
This is used by SELECT statements within triggers whose only purpose is the side-effects of functions.
This is used by VACUUM operations.
This is used by an assert() statement at the end of this function.
This is used by neighborhood iterators stacked on top of this one
This is used by the LIMIT and ORDER BY clause processing on UPDATE and DELETE statements.
This is used by the built-in min(), max() and nullif() functions.
This is used by the get_first_set() function below, as well as being generally available.
This is used by the implementations of sqlite3_backup_step() and sqlite3_backup_finish() to detect that they are being called from this function, not directly by the user.
This is used by trigger programs to access the new.*  and old.* values.
This is used by trigger programs.
This is used during testing to verify that this procedure gets called with the correct arguments.
This is used for  debugging FTS only, it should not usually be turned on in production systems.
This is used for  two purposes:  1.
This is used for "external content" tables when a NULL value is inserted into the rowid column.
This is used for SELECT statements inside the body of a TRIGGER.
This is used for both automatic and manual callouts.
This is used for strings of file names or paths.
This is used for testing and debugging only - to make sure shallow copies are not misused.
This is used for testing and debugging only.
This is used for testing only - to verify that SQLite always gets the same answer with and without the column cache.
This is used for testing only.
This is used for testing purposes only - to make sure the transfer optimization really is happening when it is suppose to.
This is used for testing purposes only - to make sure the transfer optimization really is happening when it is supposed to.
This is used for testing the I/O recovery logic.
This is used on lines of code that actually implement parts of coverage testing.
This is used only for ASCII characters.
This is used only when UCP support is available and UTF mode is selected.
This is used to convert the value stored in the 'sample' column of the sqlite_stat3 table to the record format SQLite uses internally.
This is used to detect cases when another client appends frames to the *-wal file in the middle of an incremental checkpoint (an incremental checkpoint cannot be continued if this happens).
This is used to determine whether meta data associated with a user function argument using the sqlite3_set_auxdata() API may be safely retained until the next invocation of this opcode.
This is used to ensure that a page is only rolled back the first time it is encountered in either journal.
This is used to force 8-byte alignment on 64-bit architectures.
This is used to initialize a newly created index or to recompute the content of an index in response to a REINDEX command.
This is used to preset the content of a new memory allocation to unpredictable values and to clear the content of a freed allocation to unpredictable values.
This is used to recurse elements and selectively delete certain entries from a hashtable.
This is used to share an environment in read-only mode with all the workers.
This is used to speed up seek operations, and merges of large doclists with very small doclists.
This is used to test if a segment is an "appendable" segment.
This is used to test that syncs and fullsyncs are occuring at the right times.
This is used to test that syncs and fullsyncs are occurring at the right times.
This is used to test whether or not the foreign key operation implemented using OP_FkIsZero is working.
This is used when an equivalent integer value is  stored in place of an 8-byte floating point value in order to save  space.
This is used when closing connection db.
This is used when closing database connection db to free all of its VTable objects without disturbing the rest of the Schema object (which may be being used by other shared-cache connections).
This is used when compiling patterns.
This is used when sorting records for a CREATE INDEX statement.
This is used, for example, when a trigger sub-program is halted to restore control to the main program.
This is useful because it means we can invoke OP_Column to fill in the vdbe cursors type  and offset cache without causing any IO.
This is useful for accessing a database on a filesystem that does not support locking.
This is useful for disassembly.
This is useful for testing when we want to run through the test suite quickly.
This is useful for the image dimensions
This is useful for wrapping exceptions and retaining the original exception information.
This is useful for writable temp files like databases
This is useful from within the complete_proc for determining the context of the completion request.
This is useful in one special case in the backup API code where it is known that the shared b-tree mutex is held, but the mutex on the  database handle that owns *p is not.
This is useful when you use ASCII-8BIT characters with other ASCII compatible characters.
This is usually disabled because a corrupt database may cause an assert() statement to fail.
This is usually safe.
This is usually the same  size as a single disk sector.
This is usually true, but there are the following exceptions:  1.
This is valid for XML conversion.
This is verified by code inspection and by running with Valgrind.
This is very nasty hole.
This is very similar to the code for single characters, but we repeat it in the interests of efficiency.
This is what SWIG does.
This is what the Go code expects on failure.
This is what we do if the grammar does not define ERROR:  Report an error message, and throw away the input token.
This is where control jumps back to to effect "recursion"
This is where the data ends up after the copy
This is why tagged values are generally parsed into ASN1Data instances, but with a different outcome for implicit and explicit tagging.
This is why the methods are documented in a way that isolate Unix-based system exceptions from Windows based exceptions.
This is why we can't specify internal events by TracePoint directly.
This is, in fact, what happens in single threaded systems.
This is, of course a documentated possibility, when NO_UTF_CHECK is set, so it isn't a bug, but we can detect this case and just give up on this optimization.
This isn't a problem normally, since functons like Unix.waitpid() will take the process handle on Windows.
This isn't an assert, we need to ensure 019 isn't valid octal Because the lexing itself doesn't do that for us
This isn't needed per-se because the OS will clean-up anyway, but having and calling this will ensure Valgrind doesn't output 'false positives'.
This isn't supported by all drivers.
This issue is fixed "properly" in PCRE2.
This item can't be repeated
This iterator is already at EOF for this column.
This just creates a place-holder record in the sqlite_master table.
This just free's the memory allocated by opendir
This just seems unessacary
This keeps it consistent and simple.
This key can not be used in combination with either +encoding:+ or +mode:+.
This label is used for tail recursion, which is used in a few cases even when NO_RECURSE is not defined, in order to reduce the amount of stack that is used.
This later form is used for name resolution with nested FROM clauses.
This lead to an 11 day shift in the calendar with respect to the seasons by the 16th century when the Gregorian calendar was created to replace the Julian calendar.
This leads to a year that is 365.25 days long, but the current accepted value for the tropical year is 365.242199 days.
This leads to an IO pattern that resembles a single linear scan through the index b-tree, and all but guarantees each modified leaf page is loaded and stored  exactly once.
This leads to link errors.
This leaves open the possibility of having clients on win95, winNT, and unix all talking to the same shared file and all locking correctly.
This leaves open the possiblity of having clients on win95, winNT, and unix all talking to the same shared file and all locking correctly.
This leaves the right side of the tree somewhat unbalanced.
This lets us deal with all PyArray_Descr objects using reference counting (regardless of whether they are statically or dynamically allocated).
This lets us omit having to allocate a temporary full horizontal stretch of the src image.
This library works with pathnames of local OS, however non-Unix pathnames are supported experimentally.
This line is to test that doing so does not cause any problems.
This line needs to be removed in 1.10.
This linear search probably limits the usefulness of this implementation to cache sizes of a few tens of elements.
This list holds all data associated with one session.
This list includes the names of all modules and classes defined in the global scope.
This list is a hash table, unique for the current thread and for the current __callee__.
This list is shared across threads.
This list is used to delete all sub-program objects when the VM is no longer required.
This list is useful if we need to find a suitable memory area when the allocator is called.
This little application will list the DLL dependencies for a PE module to it's stdout for use by distro/installer building tools
This little function scans through a compiled pattern until it finds a capturing bracket with the given number, or, if the number is negative, an instance of OP_REVERSE for a lookbehind.
This little function scans through a compiled pattern until it finds an instance of OP_RECURSE.
This loader does not have a verifier, so that loading broken/modified binary causes critical problem.
This loads from a file, a stack of x509/crl/pkey sets
This logic is only to support hiding warnings that the streams layer puts out at times, but for libxml we may try to open files that don't exist, but it is not a failure in xml processing (eg.
This logic is only used for input more than STRTOD_DIGLIM digits long (default 40).
This looks ridiculous and it is - but we validate the name ourselves using the peer_name ctx option, so just use the CN from the cert here
This lookup table is used to help decode the first byte of a multi-byte UTF8 character.
This loop also drops the divider cells from the parent page.
This loop also handles the case of the PRIMARY KEY index for a WITHOUT ROWID table.
This loop determines (a) if the commit hook should be invoked and (b) how many database files have open write transactions, not  including the temp database.
This loop does the following:  + Figures out the number of columns the FTSX table will have, and the number of bytes of space that must be allocated to store copies of the column names.
This loop is needed because ap_get_brigade() can return us partial data which would cause premature termination of request read.
This loop moves all of the FROM elements of the subquery into the the FROM clause of the outer query.
This loop navigates the cursor so that it  points to the first interior cell that it points to the parent of the next page in the tree that has not yet been visited.
This loop reverses the order of the AXISDATA array
This loop runs once for each destination page spanned by the source  page.
This loop runs once for each entry in the blocked-connections list.
This loop runs once for each leaf in the tree of eType nodes.
This loop runs once for each term/doclist currently stored within the hash table.
This loop scans all that code looking for opcodes that reference the table and converts them into opcodes that reference the index.
This loop terminates either when a readJournalHdr() or  pager_playback_one_page() call returns SQLITE_DONE or an IO error  occurs.
This macro assumes that local variable pRtree points to the Rtree structure associated with the RtreeCoord.
This macro does zero padding so that the precision requirement is satisfied.
This macro evaluates to true if either the update hook or the preupdate hook are enabled for database connect DB.
This macro evaluates to true if the leaf contains no terms, or false if it contains at least one term.
This macro is for use inside assert() statements only.
This macro is only used by test code and Tcl integration code.
This macro is provided for backward compatibility.
This macro is used by various functions that merge doclists.
This macro is used inside of assert() statements to indicate that the assert is only valid on a well-formed database.
This macro is used inside of various testcase() macros to verify that we have tested SQLite for large-file support.
This macro is used only within assert() to verify that the code gets all alignment restrictions correct.
This macro is used to calculate hash key values for data structures.
This macro is used to compare two strings in a case-insensitive manner.
This macro returns true if P points to something contained within the buffer S.
This macro should be used as if it has the same signature as the xNext() methods themselves.
This macro verifies that nothing like that ever happens.
This macro verifies that shallow copies are not misused.
This macros defines the minor type for terminal  symbols.
This maintains the invariant that `rb_feature_p()` relies on for its fast lookup.
This makes balancing the tree following the delete operation easier.
This makes common insert operations slightly faster.
This makes dbm files a bad choice for data exchange.
This makes for compatibility with Perl.
This makes it dangerous to use this manager and a different destination manager serially with the same JPEG object, because their private object sizes may be different.
This makes it easier to decode the various record formats without overreading if the records are corrupt.
This makes it easy to define Enumerable methods that will naturally remain lazy if called from a lazy enumerator.
This makes it possible to do the repeats one at a time from the outer level, thus saving stack.
This makes possible to send without destination address.
This makes snprintf() return the number of bytes needed, rather than the number used, and avoids its write function (so that the write function can be invalid).
This makes some inner loops simpler and sometimes saves work during multiplications, but it often seems to make things slightly slower.
This makes some statements involving the REPLACE conflict resolution algorithm go a little faster.
This makes the code easier to read during debugging.
This makes the tests repeatable.
This makes things a bit more complicated, as this module treats each table as a separate structure.
This mapping is logically trivial, but making it go fast enough requires considerable care.
This maps an external file or directory to a location within the phar archive, allowing reference to an external location as if it were within the phar archive.
This matches the pager layer defaults.
This matches the semantics of the traditional locking behavior, where opening a connection to a database file does not take a lock on it.
This matrix determines which journal modes use a master journal and which do not
This may also raise an error, but the caller needs to use PyErr_Occurred().
This may appear to have some counter-intuitive effects if a single row is written to more than once during a session.
This may be a compound name that includes namespace name
This may be called directly from the parser and therefore identifies the trigger by name.
This may be different than the number of offsets actually written because of aligning on a 4-byte boundary.
This may be greater than 256.
This may be the first character of a range, so don't add it yet.
This may be used to identify a variant of a protocol.
This may be used to initialize another generator with the same state at a later time, causing it to produce the same sequence of numbers.
This may cause a very old response to be considered valid.
This may dynamically change the actual class of this stream.
This may fail if SQLite value p contains a utf-16 string that must be converted to utf-8 and an OOM error occurs while doing so.
This may fail when session name has changed
This may improve performance, when the string will be concatenated many times (and call many realloc).
This may involve syncing the journal file.
This may lead to cache inconsistency problems for other processes at some point in the future.
This may lead to overlapping statement transactions.
This may not be a reliable guide to the way in which the machine performs its arithmetic.
This may not be consistent with other numbering schemes.
This may not be quite the closest entry to the actual input color, but it's almost as good.
This may result in the head of the tree changing, in which case *ppHead is set to the new root node.
This may trigger a real write to the stream.
This means a commit  is required.
This means broadcasting errors in the case of too many dimensions take less priority.
This means definitely roll back, so just return SQLITE_OK and report a (nul) master-journal filename.
This means dirname("c:foo") maps to "c:." or "c:" - which means CWD on C: drive.
This means if a write-lock was already held and a read-lock requested, we don't incorrectly downgrade the lock.
This means if the caller does not care about other errors, the return code may be ignored.
This means if the page is made writable at any point in the future, using a call to sqlite3PagerWrite(), its contents will not be journaled.
This means invalidating the read buffer and then performing a low-level seek
This means it copies the subarray indexed at zero along each reduction axis into 'result', then returns a view into 'operand' excluding those copied elements.
This means it is possible for other clients to read the database, but not to write it.
This means it is unsafe to attempt to truncate a file to any size larger than 2GiB.
This means it needs to copy the first element it sees along the reduction axes to result, then return a view of the operand which excludes that element.
This means it retry to invoke read(2) system call to read data with the specified length (or until EOF).
This means restart was scheduled or is in progress now
This means that a SQL string of all whitespace is invalid.
This means that an attempt is made to convert the value to an integer or floating point.
This means that any OP_RECURSE items within it that refer to the group itself or any contained groups have to have their offsets adjusted.
This means that binary operations like + * / or - can often be performed on a BigDecimal and an object of another type, if the other object can be coerced into a BigDecimal value.
This means that groups can be replicated for fixed repetition simply by copying (because the recursion is allowed to refer to earlier groups that are outside the current group).
This means that if the given day number falls in the 3rd month or on the 30th day of the 2nd month the length of the year must be found, but in no other case.
This means that if the iteration order is ASC, then numerically larger rowids are considered larger.
This means that if the planner does elect to use the results of this call as part of the overall query plan the user will see an "unable to use function MATCH in the requested context" error.
This means that if we have a pointer into a buffer containing node data, it is always safe to read up to two varints from it without risking an overread, even if the node data is corrupted.
This means that in a GROUP BY clause, the expression is evaluated twice.
This means that it blocks only when following all conditions hold.
This means that locking does not occur under DJGPP.
This means that non-unique keys can generate multiple matches.
This means that our OOM handling for OSX is a little weaker than the other OS's
This means that the first row returned should not have a NULL value stored in 'x'.
This means that the index does not operate along a real axis.
This means that the library is called at process shutdown, and cannot be unloaded beforehand.
This means that the maximum number of record bytes stored on an index B-Tree page is less than 16384 bytes and may be stored as a 2-byte varint.
This means that the memory space will be reserved in the virtual memory table but the pages will not be bound to any physical memory yet.
This means that the rest of the journal file consists of pages, there are no more journal headers.
This means that upper case I is mapped to lower case dotless i, and so on.
This means that we cannot use POSIX locks to synchronize file access among competing threads of the same process.
This means that we should try to use the anonymous-y system calls
This means that when  an application iterates through a changeset using an iterator created by  this function, all changes that relate to a single table are visited  consecutively.
This means that when a WHEN, FOR or BEGIN  token is read and 'dist' equals 2, the condition stated above to be met.
This means that when the end of a node is reached, the next term is in the node with the next greater node id.
This means that you can not walk through all Ruby object page including freed object page.
This means the API cannot specify an unnumbered interface.
This means the database cannot be opened, as it will not be possible to open the journal file or even check for a hot-journal before reading.
This means we can't call getDimWithMargin.
This means we have a match.
This means we're probably writing a lot more data to disk when saving the state of an ongoing update to the RBU update database than is strictly necessary.
This mechanism is still backwards-compatible with the pre-existing legacy mechanism, so performs much slower than is necessary.
This mechanism means that when running in exclusive mode, a connection  need only update the change-counter once, for the first transaction committed.
This memory allocator uses the following algorithm:  1.
This memory file is tagged "reserved" but not "committed".
This message really ought to be max 23 lines.
This method allows you to treat the files supplied on the command line as a single file consisting of the concatenation of each named file.
This method behaves similarly to Kernel#caller_locations except it applies to a specific thread.
This method calls close method of the associated IO object.
This method can be used to check if an argument is an array.
This method converts nodename (hostname) and service (port) to addrinfo.
This method does affect the match register.
This method does not affect scan pointer.
This method does not change the keys.
This method does not function as a validator.
This method ensures that all recent modifications to the database are written to the file.
This method first appeared in Ruby 2.1 to serve as a global variable free means to get the script name.
This method is also dependent on the OS and may be ignored on some platforms.
This method is available just only after Zlib::Deflate.new or Zlib::ZStream#reset method was called.
This method is available just only after a Zlib::NeedDict exception was raised.
This method is available only when the variant type of WIN32OLE_VARIANT object is VT_ARRAY.
This method is deprecated and should no longer be used.
This method is for use in system specific scripts, so if you want a cross-platform hash function consider using Digest or OpenSSL instead.
This method is implementation specific.
This method is just provided to improve the readability of your Ruby program.
This method is multibyte character sensitive.
This method is not multibyte character sensitive.
This method is only defined when the IO-like object responds to #path().
This method is only expected to work except with C Ruby.
This method is only expected to work on C Ruby.
This method is only expected to work with C Ruby.
This method is only for MRI developers interested in performance and memory usage of Ruby programs.
This method is only for debugging TracePoint itself.
This method is overridden by each implementation subclass and often made private, because some of those subclasses may leave internal data uninitialized.
This method is overridden by each implementation subclass.
This method is similar to Exception#backtrace, but the backtrace is an array of Thread::Backtrace::Location.
This method is similar to sigprocmask(3).
This method is trial implementation.
This method is useful for building a debugger breakpoint at a specific line.
This method may have class-specific behavior.
This method never raises an exception.
This method returns all reachable objects from `obj'.
This method returns any value which is within the intersection of the given range and x...y (if any).
This method returns self.
This method returns the i-th element.
This method returns the number of bytes copied.
This method should be overridden by each implementation subclass.
This method should be used only when a conversion error occurs.
This method should be used, if you want to convert raw strings to JSON instead of UTF-8 strings, e.
This method should check for n and e.
This method should either return SQLITE_OK and set the values of the "OUT" variables identified below, or SQLITE_DONE to indicate that the end of the buffer has been reached, or an SQLite error code.
This method should return either SQLITE_OK (0), or an SQLite error  code.
This method split each chunk using adjacent elements, _elt_before_ and _elt_after_, in the receiver enumerator.
This method supports thread.
This method will be OBSOLETE.
This method will work with any object which implements an each_pair method, such as a Hash.
This might be a false positive.
This might be helpful in applications where the block is shared by different users.
This might be necessary when compiling for Delphi, for example.
This might cause the application to wait indefinitely for an unlock-notify callback that will never  arrive.
This might fail due to a race or other transient condition.
This might happen concurrently with a write to the same area of shared memory on a different CPU in a SMP, meaning it is possible that an inconsistent snapshot is read from the file.
This might happen if the journal was not completely written and synced prior to a crash.
This might happen when restoring a database using the backup API from a zero-length source.
This might involve two separate loops with an OP_Sort in between, or it might be a single loop that uses an index to extract information in the right order to begin with.
This might return NULL if the file has not yet been opened.
This mimimizes wasted space in power-of-two memory allocators.
This minimizes the number of malloc calls made by the system.
This minimizes the size of the tRNS chunk and thus the size of the PNG file as a whole.
This mode is the same as calling  sqlite3_wal_checkpoint().
This module adds some methods to Digest classes to perform BubbleBabble encoding.
This module contains C code that generates VDBE code used to process the WHERE clause of SQL statements.
This module contains a PCRE private debugging function for printing out the internal form of a compiled regular expression, along with some supporting local functions.
This module contains an internal function for validating UTF-8 character strings.
This module contains an internal function that is used to match an extended class.
This module contains code that implements a parser for fts3 query strings (the right-hand argument to the MATCH operator).
This module contains global variables that are exported by the PCRE library.
This module contains internal functions for testing newlines when more than one kind of newline is to be recognized.
This module contains pcre_exec(), the externally visible function that does pattern matching using an NFA algorithm, trying to mimic Perl as closely as possible.
This module contains some convenience functions for extracting substrings from the subject string after a regex match has succeeded.
This module contains some fixed tables that are used by more than one of the PCRE code modules.
This module contains the external function pcre_compile(), along with supporting internal functions that are not used by other modules.
This module contains the external function pcre_config().
This module contains the external function pcre_fullinfo(), which returns information about a compiled pattern.
This module contains the external function pcre_maketables(), which builds character tables for PCRE in the current locale.
This module contains the external function pcre_refcount(), which is an auxiliary function that can be used to maintain a reference count in a compiled pattern data block.
This module contains the external function pcre_study(), along with local supporting functions.
This module contains the external function pcre_version(), which returns a string that identifies the PCRE version that is in use.
This module contributed by Doug Heisterkamp Modified by Jim Hugunin More modifications by Jeff Whitaker
This module corresponds to the `Special functions for NPY_OBJECT` section in the numpy reference for C-API.
This module defines a number of methods to facilitate completion and accesses input history from the Ruby interpreter.
This module does not use actually lemon, it uses a custom parser.
This module exports a PHP object as a COM object by wrapping it using IDispatchEx
This module implements a SafeArray proxy which is used internally by the engine when resolving multi-dimensional array accesses on SafeArray types.
This module implements an object we call a "RowSet".
This module implements the sqlite3_status() interface and related functionality.
This module implements the well-known Heckbert paradigm for color quantization.
This module is a wrapper that provides a POSIX API to the underlying PCRE functions.
This module is generated by the maint/MultiStage2.py script.
This module is only called on query plans that use an index.
This module is responsible for generating the code that loops through a table looking for applicable rows.
This module provides a BLAS optimized matrix multiply, inner product and dot for numpy arrays
This module should not be referenced otherwise, so it should not matter whether it is compiled or not.
This module supported Edit Line(libedit) too.
This module tracks pointers to PgHdr1 objects.
This module uses it opaquely as an argument to sqlite3BackupRestart() and sqlite3BackupUpdate() only.
This module's methods should not be accessed directly.
This more than covers the period when the calendar was in use.
This must be a brand-new connection.
This must be between 0 and 125.
This must be between 0 and 62.
This must be called before the axes (i.e. the AXISDATA array) may be reordered.
This must be called with the length pre-determined by the first byte.
This must be done in advance.
This must be done when using the SQLITE_TEMP_STORE or DEFAULT_TEMP_STORE pragmas.
This must be less than 32.
This must come before including pcreposix.h, where they are set for an application (using these functions) if they have not previously been set.
This must precede the empty string test - in this case that test is done at the outer level.
This need only be done once.
This needs an extra 16-bit data item.
This needs changing if the code behind ZEND_VERIFY_RESOURCE changed.
This needs to be passed to DH#compute_key.
This needs to be remedied by loading the page into the pager-cache and setting the PGHDR_NEED_SYNC flag.
This needs to be set before SSLSocket#connect.
This needs to cause ignoring of subspace dimensions and prepending -1 for broadcasting.
This needs to occur when copying a TK_AGG_FUNCTION node from an outer query into an inner subquery.
This negated adjustment is what is written into the "adjustment" parameter.
This next condition is true if data has already been loaded from  the sqlite_stat4 table.
This next statement and the later reference to dummy are here in order to trick the optimizer of the IBM C compiler for OS/2 into generating correct code.
This notice may not be removed or altered from any source distribution.
This number is actually corrupted by STKSTAT to include the fifteen word trailer area.
This number is used to fill in empty slots of the hash  table.
This object caches writes to the PMA so that aligned, page-size blocks are written.
This object can be used when calling +eval+ to execute the evaluated command in this environment.
This object can then be used as the argument to +throw+, and will match the correct +catch+ block.
This object contains a pointer to the WhereLoop algorithm as one of its elements.
This object contains a reference to an internal object and you can check the type of internal object with `type' method.
This object contains information needed to implement a single nested loop in WHERE clause.
This object describes the implementation of the loop.
This object holds a record which has been parsed out into individual fields, for the purposes of doing a comparison.
This object holds the prerequisites and the cost of running a subquery on one operand of an OR operator in the WHERE clause.
This object is a convenience wrapper holding all information needed to construct WhereLoop objects for a particular query.
This object is deleted automatically by the destructor mechanism in sqlite3_create_function_v2().
This object is not used by SQLite.
This object is the header on a single record while that record is being held in memory and prior to being written out as part of a PMA.
This object is used by fts5_expr.c and fts5_index.c.
This object is used in only one place in the SQLite interface.
This object is used to pass information into sqlite3BtreeInsert().
This object is variously known as a "prepared statement" or a "compiled SQL statement" or simply as a "statement".
This object might hold just a prefix of the key.
This object represents a single thread of control in a sort operation.
This object specifies the interface to a custom page cache implementation.
This object stores information used by checkpoint.
This occurs as part of flushing the contents of the pending-terms hash table to the database.
This occurs at start-time (as a consequence of calling sqlite3_initialize()).
This occurs during calls to sqlite3PagerWrite() while trying to journal multiple pages belonging to the same sector.
This occurs if some other client appends a transaction to the wal file in the middle of an incremental checkpoint.
This occurs only at the start of each branch of a lookbehind assertion.
This occurs when a DROP TABLE is mentioned.
This occurs when a page is changed prior to the start of a statement then changed again within the statement.
This one can use SCHECK_PARTIAL()
This one checks the error value, destroys object and returns false
This one doesn't exists on QNX
This one has to be used carefully.
This one requires src be of type NPY_OBJECT
This one works on sqlite3_value*,  not the internal Mem* type.
This only allows setting execution bit, read/write
This only applies to automatically created indices.
This only gets used for custom data types and for Unicode when swapping
This only happens if we have a special test build.
This only happens when coding check constraints
This only happens when committing a transaction, or rolling back a transaction (including rolling back a hot-journal).
This only happens when we're called outside any execute()'s It shouldn't be strictly necessary to NULL execute_data out, but it may make bugs easier to spot
This only occurs for GLOB, not LIKE
This only occurs if compiled with -DSQLITE_ENABLE_COSTMULT
This only seems to happen on 32bit systems with large file support.
This only works for chunks that are currently checked out.
This only works for very simple expressions that consist of one constant token (i.e. "5", "5.1", "'a string'").
This only works if the RHS is a simple SELECT, not a compound
This opcode allows these two values (10 retries and 25 milliseconds of delay) to be adjusted.
This opcode causes the sqlite3_step() call to terminate with an SQLITE_ROW return code and it sets up the sqlite3_stmt structure to provide access to the r(P1)..r(P1+P2-1) values as the result row.
This opcode causes the xFileControl method to swap the file handle with the one pointed to by the pArg argument.
This opcode does a deferred seek of the P3 table cursor to the row that corresponds to the current row of P1.
This opcode invokes the corresponding xRename method.
This opcode invokes the corresponding xUpdate method.
This opcode invokes the parser to create a new virtual machine, then runs the new virtual machine.
This opcode invokes the xFilter method on the virtual table specified by P1.
This opcode is initially coded as OP_AggStep0.
This opcode is normally use to move a record out of the sorter and into a register that is the source for a pseudo-table cursor created using OpenPseudo.
This opcode is similar to OP_NotFound with the exceptions that the branch is always taken if any part of the search key input is NULL.
This opcode is transformed  into a String opcode before it is executed for the first time.
This opcode is transformed  into an OP_String before it is executed for the first time.
This opcode is used to implement the integrity_check pragma.
This opcode is used when extracting information from a column that has REAL affinity.
This opcode leaves the cursor configured to move in forward order, from the beginning toward the end.
This opcode leaves the cursor configured to move in reverse order, from the end toward the beginning.
This opcode leaves the cursor in a state where it cannot be advanced in either direction.
This opcode only works for cursors used for sorting and opened with OP_OpenEphemeral or OP_SorterOpen.
This opcode opens a cursor to the virtual table and stores that cursor in P1.
This opcode really does match any byte, even newline, independent of the setting of PCRE_DOTALL.
This opcode removes that entry from the  index opened by cursor P1.
This opcode requires that P3 always contain an integer.
This opcode will cause other virtual machines to be created and run.
This opcode writes that key into the index P1.
This opcodesnever appears in a real VM program.
This operation fails if the multi-index is out of bounds.
This operation is required when a row is deleted (or updated - an update is implemented as a delete followed by an insert).
This operation is used to detect when that the cookie has changed and that the current process needs to reread the schema.
This operation leaves the cursor in a state where it can be advanced in the forward direction.
This operation leaves the cursor in a state where it cannot be advanced in either direction.
This operation must occur while the pager is still holding the exclusive lock on the main database file.
This operation removes reserved space of elements that have already been deleted.
This optimisation fails on a zero key (which is weak and has bad parity anyway) in order to simplify the starting conditions.
This optimization also only applies if the (x1 OR x2 OR ...) term is not contained in the ON clause of a LEFT JOIN.
This optimization can save a huge amount of backtracking in patterns with nested unlimited repeats that aren't going to match.
This optimization cannot be used with a temp-file, as the page may have been dirty at the start of the transaction.
This optimization is helpful when doing a DELETE or an INTEGRITY_CHECK  on a table with multiple indices, and especially with the ROWID or PRIMARY KEY columns of the index.
This optimization is particularly useful at making VACUUM run faster.
This option cannot be combined with any other option.
This option currently cannot be combined with any other option (i.e. there is currenty no variant for turkic languages).
This option defaults to false.
This option has the following effects:  Newline conversion is disabled.
This option is +false+ by default, meaning that any unhandled exception will cause the thread to terminate silently when waited on by either #join or #value.
This option is only for Windows.
This options defaults to false.
This ought to use HWB, but we don't have an alpha-aware version of that yet.
This packaged seemed like a good breakout.
This page cache implementation works in one of two modes:  (1)  Every PCache is the sole member of its own PGroup.
This page from bulk local storage
This page is never used.
This page will become the right-sibling of  pPage.
This part ensures also, that no drive letter traversing happens.
This part will load the functions, and check if we are in Call Graph mode.
This particular expression does not need to be expanded.
This particular file implements the generic tokenizer interface.
This particular implementation uses mmapped files.
This pass only populates the Fts3PhraseToken array.
This patch overshadows the symbols cblas_sgemv, sgemv_ and sgemv exported by Accelerate to produce the correct behavior.
This permits keywords to sometimes be used as identifiers, for example.
This piece of code has been inspirated from nginx and pureftpd code, which are under BSD licence.
This place might be too late though, but this is the earliest place ATW we can access the internal charset information from PHP.
This plan is not completely bullet-proof.
This point the first living object to grasp at least one object to avoid GC issue.
This pointer is the unique file ID.
This pointer is used in subsequent calls to sqlite3Fts5Parser and sqlite3Fts5ParserFree.
This pointer is used in subsequent calls to sqlite3Parser and sqlite3ParserFree.
This portion of the namespace is reserved for internal use.
This predicates whether a #scan_until will return a value.
This prepends 1 to shapes not already equal to nd
This preserves the precision of the intermediate calculation.
This prevent using ordinary floating-point arithmetic when the result could be computed with one rounding error.
This prevents a call to sqlite3_interrupt from interrupting a statement that has not yet started.
This prevents a double TICK generated by the parser statement of "declare()"
This prevents a memory copy.
This prevents a trigger in one database from referring to a target in another database.
This prevents it from  generating a large journal using a temp file.
This prevents malicious modifications of the ciphertext that could otherwise be exploited to modify ciphertexts in ways beneficial to potential attackers.
This prevents many unnecessary merge/sort operations for the case where single segment b-tree leaf nodes contain more than one term.
This prevents old and new frames in the WAL from being considered valid at the same time and being checkpointing together following a crash.
This prevents the pager from trying to read the pages content from disk.
This prevents us from starting PHP until the second load.
This proc moves the *-oal file to the *-wal path, then reopens the database file (this time in vanilla, non-oal, WAL mode).
This procedure converts a double-precision number in IEEE format into a string of hexadecimal digits and an exponent of 2.
This procedure generates VDBE code for a single invocation of either the sqlite_detach() or sqlite_attach() SQL user functions.
This proceeds in the same way  as a regular database checkpoint, except that a single frame is checkpointed each time sqlite3rbu_step() is called.
This process continues until either a match is found or all contexts are check.
This process repeats until there is no carry, adding an additional character if necessary.
This processes one or more 64-byte data blocks, but does NOT update the bit counters.
This produces a one-dimensional array which picks out all of the elements of 'self' for which the corresponding element of 'op' is True.
This product includes software developed by the Apache Group for use in the Apache HTTP server project (http://www.apache.org/).
This program was generated by testconv.rb.
This property is used by the algorithm for rolling back a journal file after a crash.
This provides for register storage for the routine which overflows the stack.
This provides the casting rules for the DATETIME data type metadata.
This provides the casting rules for the DATETIME data type units.
This provides the casting rules for the TIMEDELTA data type metadata.
This provides the casting rules for the TIMEDELTA data type units.
This raises an error when 'op' is a scalar, list of lists, or other non-writeable 'op'.
This really never should happen except in a corrupt database.
This reduces potential concurrency, but makes the lock implementation much easier.
This reduces the recommended histogram size from 256Kb to 128Kb, which is a useful savings on PC-class machines.
This reference is not stolen.
This regex does not handle comments and folding whitespace.
This relies on the fact that the class table starts with alpha, lower, upper as the first 3 entries.
This remains here temporarily to ease the transition to the new meaning of YYERROR, for GCC.
This removes the index b-tree entries  only.
This replaces inet_addr, the return value from which cannot distinguish between failure and a local broadcast address.
This requires a master journal file to ensure the transaction is committed atomically.
This requires a master journal file to ensure the transaction is committed atomicly.
This requires that NPY_ITER_MULTI_INDEX was set for iterator creation, and does not work if buffering is enabled.
This requires that the combining class codes are the same.
This requires that the dimensions, strides and data type remain exactly the same, which may be more strict than before.
This requires two passes over the data.
This restores PHP 5.6 behavior
This restriction is because transforming the parent to a compound query confuses the code that handles recursive queries in multiSelect().
This results in a false-positive which will be dealt with by the playback routine.
This results in a segfault for this module.
This results in an "orphaned trigger" - a trigger whose associated table is missing.
This returns the string representation of the supplied integer lock-type.
This returns the string represetation of the supplied integer lock-type.
This routine "expands" a SELECT statement and all of its subqueries.
This routine Shifts all join operators from left to right for an entire FROM clause.
This routine accepts an infinite number of different UTF8 encodings for unicode values 0x80 and greater.
This routine accepts both decimal and hexadecimal notation for integers.
This routine accepts hexadecimal literals, whereas sqlite3Atoi64() does not.
This routine accepts over-length UTF8 encodings for unicode values 0x80 and greater.
This routine acquires a read-lock the first time it has to go to disk, and could also playback an old journal if necessary.
This routine acts recursively on all subqueries within the SELECT.
This routine adds a new term to the end of the expression.
This routine adds a specific database name, if needed, to the target when forming the SrcList.
This routine adds datatype and collating sequence information to the Table structures of all FROM-clause subqueries in a SELECT statement.
This routine allocates a range of nEq+nExtraReg memory cells and returns the index of the first memory cell in that range.
This routine allocates the Stat4Accum object in heap memory.
This routine also calculates the eigenvectors of the current problem.
This routine also calculates the singular vectors of the current problem.
This routine also does error checking and name resolution for function names.
This routine also generates code to check constraints.
This routine also returns FALSE if there is no chance that the xfer optimization can be applied.
This routine also updates VF and VL and computes the distances between the updated singular values and the old singular values.
This routine assumes that the line is a valid Unicode Character Database entry.
This routine attempts to flatten subqueries as a performance optimization.
This routine attempts to plan those simple cases using much less ceremony than the general-purpose query planner, and thereby yield faster sqlite3_prepare() times for the common case.
This routine calls the Mem.xDel destructor to dispose of values that require the destructor.
This routine calls the finalize method for that function.
This routine can be called while other threads are running the same or different SQLite interfaces.
This routine can be overridden using the xSetSysCall interface.
This routine can distinguish between UPDATE and INSERT by checking regOldData for zero.
This routine can fail if it is unable to load a collating sequence required for string comparison, or if unable to allocate memory for a UTF conversion required for comparison.
This routine cannot fail.
This routine changes the values of iLimit and iOffset only if a limit or offset is defined by pLimit and pOffset.
This routine checks for a byte-order mark at the beginning of the  UTF-16 string stored in *pMem.
This routine checks if it is possible to delete the master journal file, and does so if it is.
This routine checks if there is a RESERVED lock held on the specified file by this or any other process.
This routine checks that the sqlite3.nVdbeActive count variable matches the number of vdbe's in the list sqlite3.pVdbe that are currently active.
This routine checks the guards at either end of the allocation and if they are incorrect it asserts.
This routine checks to see if newstrides (of length nd) will not ever be able to walk outside of the memory implied numbytes and offset.
This routine checks to see if pE is a simple identifier which corresponds to the AS-name of one of the terms of the expression list.
This routine checks to see if pExpr appears in any index.  Return TRUE (1) if pExpr is an indexed term and return FALSE (0) if not.
This routine checks to see if pExpr is an equivalence relation: 1.
This routine computes the value of m for the first i bytes of a word.
This routine constructs a binary expression node out of two ExprSpan objects and uses the result to populate a new ExprSpan object.
This routine converts an ephemeral string into a dynamically allocated string that the register itself controls.
This routine converts the sqlite3_pcache_page object returned by sqlite3PcacheFetch() into an initialized PgHdr object.
This routine deallocates a previously allocated mutex.
This routine deallocates a previously allocated mutex.  SQLite is careful to deallocate every mutex that it allocates.
This routine deletes the RtreeGeomCallback object that was attached one of the SQL functions create by sqlite3_rtree_geometry_callback() or sqlite3_rtree_query_callback().
This routine disconnects the Vdbe from the Parse object that helped generate it so that the the Vdbe becomes an independent entity and the Parse object can be destroyed.
This routine does *not* accept hexadecimal notation.
This routine does NOT free the Select structure passed in.
This routine does a case-independent search of zType for the  substrings in the following table.
This routine does a complete check of the given BTree file.
This routine does not check if there is a master journal filename at the end of the file.
This routine does not do any byte-swapping, it just sets Mem.enc appropriately.
This routine does per-connection function registration.
This routine does the first phase of a two-phase commit.
This routine does the necessary conversion.
This routine does the work of opening a database on behalf of sqlite3_open() and sqlite3_open16().
This routine effects pPage only.
This routine ends a transaction.
This routine examines all entries on the given list and tries to coalesce each entries with adjacent free chunks.
This routine find the filename associated with pFile and writes it int dbPath.
This routine first tries to establish an exclusive lock on the wal-index to prevent other threads/processes from doing anything with the WAL or wal-index while recovery is running.
This routine forms the core of the OP_SorterCompare opcode, which in turn is used to verify uniqueness when constructing a UNIQUE INDEX.
This routine frees the BLOB that is returned by geomCallback().
This routine frees the space the sqlite3_get_table() malloced.
This routine generates VDBE code that causes a single row of a single table to be deleted.
This routine generates VDBE code that causes the deletion of all index entries associated with a single row of a single table, pTab  Preconditions:  1.
This routine generates code that jumps to destIfFalse if the LHS is not  contained within the RHS.
This routine generates code that opens the sqlite_statN tables.
This routine generates code that stores NULLs in all of those memory cells.
This routine generates code that will initialize all of the register used by the autoincrement tracker.
This routine generates code to finish the INSERT or UPDATE operation that was started by a prior call to sqlite3GenerateConstraintChecks.
This routine generates code to open those VDBE cursors and sqlite3WhereEnd() generates the code to close them.
This routine generates code will jump to destIfFalse if the LHS is not  contained within the RHS.
This routine generates the code for the inside of the inner loop of a SELECT.
This routine generates the code needed to write autoincrement maximum rowid values back into the sqlite_sequence register.
This routine gets called when a rollback occurs.
This routine goes through and adds the types and collations.
This routine handles sqlite3_file_control() calls that are specific to proxy locking.
This routine has been called to create an automatic index as a result of a PRIMARY KEY or UNIQUE clause on a column definition, or a PRIMARY KEY or UNIQUE clause following the column definitions.
This routine has either 3 or 6 parameters depending on whether or not the SQLITE_ENABLE_COLUMN_METADATA compile-time option is used.
This routine has no effect on existing database connections.
This routine identifies subexpressions in the WHERE clause where each subexpression is separated by the AND operator or some other operator specified in the op parameter.
This routine implements a busy callback that sleeps and tries again until a timeout value is reached.
This routine implements an SQL function that returns the "depth" parameter from the front of a blob that is an r-tree node.
This routine implements the OP_Vacuum opcode of the VDBE.
This routine implements the bulk of the logic behind the sqlite_step() API.
This routine implements the second phase of a 2-phase commit.
This routine implements the xFindFunction method for the FTS3 virtual table.
This routine installs a default busy handler that waits for the specified number of milliseconds before returning 0.
This routine invokes the collation factory if the named collation cannot be found and generates an error message.
This routine is a Walker callback for "expanding" a SELECT statement.
This routine is a copy of the sqlite3FileSuffix3() routine from the core.
This routine is a faster version of sqlite3PutVarint() that only works for 32-bit positive integers and which is optimized for the common case of small integers.
This routine is a helper for explainIndexRange() below  pStr holds the text of an expression that we are building up one term at a time.
This routine is a no-op except on its very first call for the process, or for the first call after a call to sqlite3_shutdown.
This routine is a no-op for unix.
This routine is a no-op for virtual tables.
This routine is a no-op if the database schema is already initialized.
This routine is a no-op if the shared-cache is not enabled
This routine is a wrapper around sqlite3FindCollSeq().
This routine is added to support DBD::SQLite.
This routine is also called from the OP_ParseSchema opcode of the VDBE.
This routine is an optimization.
This routine is based in part on code from Dale Lutz (Safe Software Inc.) and in part on demo code from Chapter 15 of "PNG: The Definitive Guide" (http://www.cdrom.com/pub/png/pngbook.html).
This routine is based in part on the Chapter 13 demo code in "PNG: The Definitive Guide" (http://www.cdrom.com/pub/png/pngbook.html).
This routine is broken out from sqlite3VdbeAddOp4() since it needs to also needs to mark all btrees as having been used.
This routine is broken out into a separate function since it requires extra stack manipulation that can be avoided in the common case.
This routine is callback for sqlite3WalkExpr().
This routine is called after a single SQL statement has been parsed and a VDBE program to execute that statement has been prepared.
This routine is called after all of the trigger actions have been parsed in order to complete the process of building the trigger.
This routine is called after all opcodes have been inserted.
This routine is called after identifier resolution.
This routine is called by the parser to add a new term to the end of a growing FROM clause.
This routine is called by the parser while in the middle of parsing a CREATE TABLE statement.
This routine is called from sqlite3_initialize() and so it is guaranteed to be serialized already.
This routine is called from the TCL test function "translate_selftest".
This routine is called just before cursor pExcept is used to modify the table, for example in BtreeDelete() or BtreeInsert().
This routine is called on a collation sequence before it is used to check that it is defined.
This routine is called once after all opcodes have been inserted.
This routine is called once during SQLite initialization and by a single thread.
This routine is called once for each row in the result table.
This routine is called only once
This routine is called prior to sqlite3PagerCommit when a transaction is committed for an auto-vacuum database.
This routine is called the when a VDBE tries to halt.
This routine is called to create a new foreign key on the table currently under construction.
This routine is called to do the work of a DROP TABLE statement.
This routine is called to handle SQL of the following forms:  insert into TABLE (IDLIST) values(EXPRLIST) insert into TABLE (IDLIST) select  The IDLIST following the table name is always optional.
This routine is called to handle SQL of the following forms:  insert into TABLE (IDLIST) values(EXPRLIST),(EXPRLIST),...
This routine is called to implement sqlite3_wal_checkpoint() and related interfaces.
This routine is called to increment the value of the database file  change-counter, stored as a 4-byte big-endian integer starting at  byte offset 24 of the pager file.
This routine is called to process a compound query form from two or more separate queries using UNION, UNION ALL, EXCEPT, or INTERSECT  "p" points to the right-most of the two queries.
This routine is called to report the final ")" that terminates a CREATE TABLE statement.
This routine is called when a commit occurs.
This routine is called when a new SQL statement is beginning to be parsed.
This routine is called when an INITIALLY IMMEDIATE or INITIALLY DEFERRED clause is seen as part of a foreign key definition.
This routine is called when an operation failed with a lock.
This routine is called when the corresponding SQL function is deleted.
This routine is called, for example, just before deleting the Table record.
This routine is designed for use within an assert() statement, to verify the type of an allocation.
This routine is for use inside of assert() statements only.
This routine is intended for testing and analysis only.
This routine is intended to be used to modify an existing string.
This routine is intended to get memory to old large transient data structures that would not normally fit on the stack of an embedded processor.
This routine is invoked after an error occurs in an OS function.
This routine is invoked once per CTE by the parser while parsing a  WITH clause.
This routine is just a convenience wrapper around separate calls to btreeGetPage() and  btreeInitPage().
This routine is large and unsightly, but most of the ugliness due to the three different kinds of output buffering is handled here.
This routine is like sqlite3_malloc() except that it assumes the memory subsystem has already been initialized.
This routine is never called after sqlite3RowSetNext()
This routine is never called during trigger-generation.
This routine is never called in PAGER_ERROR state.
This routine is never called with any other destination other than the ones handled above or SRT_Output.
This routine is never used in single-threaded mode
This routine is not called unless a write-transaction has already  been started.
This routine is not threadsafe.
This routine is only be called from within a read transaction.
This routine is only call from within assert() statements.
This routine is only called by btree immediately after creating the Pager object.
This routine is only called by sqlite3_config(), and therefore is not required to be threadsafe (it is not).
This routine is only called from b-tree and only when there are no outstanding pages.
This routine is only called from the OP_JournalMode opcode, and the logic there will never allow a temporary file to be changed to WAL mode.
This routine is only called if we already know that the profile callback is defined and needs to be invoked.
This routine is only used from within assert() statements
This routine is only valid for a cursor that is pointing into a ordinary table btree.
This routine is provided for historical compatibility only.
This routine is similar to alloca() in that it is not intended for situations where the memory might be held long-term.
This routine is the core allocator for Expr nodes.
This routine is the destructor for the RowSet.
This routine is the inverse of sqlite3WhereClauseInit().
This routine is the inverse of whereClauseInit().
This routine is the only routine in this file with external  linkage.
This routine is the only routine in this file with external linkage.
This routine is the only way to move the state of a VM from SQLITE_MAGIC_RUN to SQLITE_MAGIC_HALT.
This routine is the same as the sqlite3_complete() routine described above, except that the parameter is required to be UTF-16 encoded, not UTF-8.
This routine is threadsafe but is not atomic.
This routine is typically called in response to a user action such as pressing "Cancel" or Ctrl-C where the user wants a long query operation to halt immediately.
This routine is used (for example) to implement the SQL "cast()" operator.
This routine is used as an optimization, to skip OP_IsNull opcodes when we know that a value cannot be NULL.
This routine is used by the DbMaskAllZero() and DbMaskNotZero() macros when SQLITE_MAX_ATTACHED is greater than 30.
This routine is used for debugging only.
This routine is used for expressions that are used multiple  times.
This routine is used for testing and analysis only.
This routine is used for testing and debugging only.
This routine is used for troubleshooting locks on multithreaded platforms.
This routine is used inside assert() statements only and for the purpose of double-checking that the btree code does keep the database connection pointers up-to-date.
This routine is used inside assert() statements only.
This routine is used inside of assert() only ****  Verify that the cursor holds the mutex on its BtShared
This routine is used only for the eigenproblem which requires all eigenvalues and eigenvectors of a tridiagonal matrix.
This routine is used only for the eigenproblem which requires all eigenvalues and optionally eigenvectors of a dense or banded Hermitian matrix that has been reduced to tridiagonal form.
This routine is used only for the eigenproblem which requires all eigenvalues and optionally eigenvectors of a dense symmetric matrix that has been reduced to tridiagonal form.
This routine is used only for the problem which requires all singular values and optionally singular vector matrices in factored form.
This routine is used only from within assert() statements.
This routine is used only inside of assert() statements.
This routine is used to allow virtual table implementations to overload MATCH, LIKE, GLOB, and REGEXP operators.
This routine is used to check if the UTF-8 string zName is a legal unqualified name for a new schema object (table, index, view or trigger).
This routine is used to determine if the OP_Affinity operation can be omitted.
This routine is used to extract the "offset to cell content area" value from the header of a btree page.
This routine is used to provide debugging output and is not a part of an ordinary build.
This routine is used to query statistical information that has been gathered into the Stat4Accum object by prior calls to stat_push().
This routine is used to query the results.
This routine is used within assert() and testcase() macros only and does not appear in a normal build.
This routine is useful for setting a jump destination.
This routine is useful when a large program is loaded from a static array using sqlite3VdbeAddOpList but we want to make a few minor changes to the program.
This routine is usually quick, but can be N**2 in the worst case.
This routine just deletes the data structure.
This routine just records the fact that the lock is desired.
This routine just removes the reference to the cell from pPage.
This routine leaves *ppPoslist pointing to the POS_COLUMN or POS_END that terminates the column-list.
This routine make the necessary  changes to pExpr so that it refers directly to the source table of the subquery rather the result set of the subquery.
This routine makes a (partial) copy of the Table structure for the table being altered and sets Parse.pNewTable to point to it.
This routine makes its own copy of zAff so that the caller is free to modify zAff after this routine returns.
This routine makes the necessary adjustment to 65536.
This routine makes the necessary adjustments to pPg so that it contains the correct cells after being balanced.
This routine makes the necessary changes to the OP_String opcodes for that to happen.
This routine may be called  after rollback of a hot-journal, or if an error occurs while opening the journal file or writing the very first journal-header of a database transaction.
This routine may not be called after sqlite3RowSetTest() has been used.
This routine merely does the comparison.
This routine merely releases the lock.
This routine might cause sub-bitmaps to be allocated.
This routine might invoke the stress callback to spill dirty pages to the journal.
This routine might need to defragment in order to bring all the space together, however.
This routine might return non-zero for equivalent ExprLists.
This routine must be called after sqlite3PcacheFetch() in order to get a usable result.
This routine must be called before  making changes to a page.
This routine must be called from the same thread in which the aggregate SQL function is running.
This routine must be called from the same thread in which the application-defined function is running.
This routine must be called prior to passing the structure to one of the sqliteFixAAAA() routines below.
This routine must be called to initialize the memory allocation, VFS, and mutex subsystems prior to doing any serious work with SQLite.
This routine needs to reset the extra data section at the end of the page to agree with the restored data.
This routine never allows a UTF16 surrogate value to be encoded.
This routine never gets call with a positive pgno except right after sqlite3PcacheCleanAll().
This routine only deals with those that are not global.
This routine only needs to be called in the uncommon case when pExpect has the BTCF_Multiple flag set.
This routine only runs in the exceptional case where the page size is smaller than the sector size.
This routine only runs while holding the checkpoint lock.
This routine only work for pCur on an ephemeral table.
This routine only works if h really is a valid hexadecimal character:  0..9a..fA..F
This routine prepares a memory cell for modication by breaking its link to a shallow copy and by marking any current shallow copies of this cell as invalid.
This routine prepares a memory cell for modification by breaking its link to a shallow copy and by marking any current shallow copies of this cell as invalid.
This routine processes the join information for a SELECT statement.
This routine pushes the WITH clause passed as the second argument onto the top of the stack.
This routine puts the finishing touches on the VDBE program and resets the pParse structure for the next parse.
This routine redistributes cells on the iParentIdx'th child of pParent (hereafter "the page") and up to 2 siblings so that all pages have about the same amount of free space.
This routine registers all VFS implementations for unix-like operating systems.
This routine requires that all identifiers in the SELECT statement be resolved.
This routine resolves each term of the clause into an expression.
This routine restores a cursor back to its original position after it has been moved by some outside activity (such as a btree rebalance or a row having been deleted out from under the cursor).
This routine retrieves the pointer map entry for page 'key', writing the type and parent page number to *pEType and *pPgno respectively.
This routine returns 0 on success and non-zero on any kind of error.
This routine returns 1 if it ends in the START state and 0 if it ends in any other state.
This routine returns 1 if it makes changes and 0 if no flattening occurs.
This routine returns NULL if the page is not in cache or if a disk I/O error  has ever happened.
This routine returns TRUE if the optimization is guaranteed to be used.
This routine returns TRUE when that cost  relationship is inverted and needs to be adjusted.
This routine returns a NULL pointer if the object was not in cache and could not be created.
This routine returns a pointer to an sqlite3_pcache_page object if such an object is already in cache, or if a new one is created.
This routine returns an error code if something goes wrong.
This routine returns the number of errors encountered.
This routine returns the number of errors.
This routine returns the type affinity that should be used for the comparison operator.
This routine returns the value of the zParam parameter if it exists.
This routine runs an extensive test of the Bitvec code.
This routine runs at the end of parsing a CREATE TABLE statement that has a WITHOUT ROWID clause.
This routine runs over generated VDBE code and translates OP_Column opcodes into OP_Copy when the table is being accessed via co-routine  instead of via table lookup.
This routine runs when the memory allocator sees that the total memory allocation is about to exceed the soft heap limit.
This routine sets that result back to SQLITE_OK.
This routine sets the *ppUnqual pointer to point at the token (pName1 or pName2) that stores the unqualified table name.
This routine sets the P4 parameter of the  OP_Column to the default value, if any.
This routine sets the busy callback for an Sqlite database to the given callback function with the given argument.
This routine sets the error code and string returned by sqlite3_errcode(), sqlite3_errmsg() and sqlite3_errmsg16().
This routine sets the notNull flag on the column currently under construction.
This routine sets the progress callback for an Sqlite database to the given callback function with the given argument.
This routine sets the state to CURSOR_FAULT and the error code to errCode for every cursor on BtShared that pBtree references.
This routine sets the state to CURSOR_FAULT and the error code to errCode for every cursor on any BtShared that pBtree references.
This routine sets the value to be returned by subsequent calls to sqlite3_changes() on the database handle 'db'.
This routine sets up a SELECT statement for processing.
This routine shifts that operator over to B.
This routine should be called right after sqlite3_open().
This routine should be called when the regRowid register holds a new rowid that is about to be inserted.
This routine should be called when the top of the stack holds a new rowid that is about to be inserted.
This routine should be invoked only after sqlite3PcacheFetch() fails.
This routine should deallocate any data associated with the instance.
This routine should not be called if a prior error has occurred.
This routine should only be called after the expression has been analyzed by sqlite3ResolveExprNames().
This routine should only be called for a cursor that just returned TRUE from sqlite3BtreeCursorHasMoved().
This routine should only be called once in the life of a RowSet.
This routine should only be called when there are no outstanding database connections or memory allocations.
This routine starts a new transaction if we are not already within a transaction.
This routine transforms the internal text encoding used by pMem to desiredEnc.
This routine translates a standard POSIX errno code into something useful to the clients of the sqlite3 functions.
This routine updates the pointer map entry for page number 'key' so that it maps to type 'eType' and parent page number 'pgno'.
This routine used to be called sqlite3OpenSnapshot() and with good reason: it takes a snapshot of the state of the WAL and wal-index for the current instant in time.
This routine uses Heckbert's "locally sorted search" criterion to select the colors that need further consideration.
This routine uses Thomas' incremental distance calculation method to find the distance from a colormap entry to successive cells in the box.
This routine uses and updates the nBackfill field of the wal-index header.
This routine uses sqlite3DbRealloc() to extend the array so that there is space for a new object at the end.
This routine walks an expression tree and resolves references to table columns and result-set columns.
This routine will automatically close any cursors, lists, and/or sorters that were left open.
This routine will drop an existing named index.  This routine implements the DROP INDEX statement.
This routine will fail with SQLITE_LOCKED if there are any open cursors on the table.
This routine will fail with SQLITE_LOCKED if there are any open read cursors on the table.
This routine will never overwrite a database page that a concurrent reader might be using.
This routine will not function correctly if it is converted to all lower case.
This routine will only function correctly if the mkopcodeh.tcl generator script numbers the opcodes correctly.
This routine will only increase a lock.
This routine will start taking more aggressive measures to clear the race conditions after multiple WAL_RETRY returns, and after an excessive number of errors will ultimately return SQLITE_PROTOCOL.
This routine will take ownership of the allocated memory.
This routine works just like sqlite3ExprCode() except that the input expression is guaranteed to be unchanged.
This routine works only for pages that do not contain overflow cells.
This routine, and the sqlite3_os_end() routine that follows, should be the only routines in this file that are visible from other files.
This routines provide no mutual exclusion or error checking.
This runs on FreeBSD8.1 r30210, but sendfiles blocks its execution without cpuset -l 0.
This same function (with a different compareInfo structure) computes the GLOB operator.
This same integer code is reused to represent the greater-than-or-equal-to operator in the expression tree.
This same object is reused to store a linked list of trees of RowSetEntry objects.
This sample is being added because the prefix that ends in column  iCol occurs many times in the table.
This savepoint was opened immediately after the write-transaction was started.
This saves a call to the read implementation and will not block where blocking is not necessary at all.
This saves not only a lot of setup time in the iterator, but also is faster (must be exactly fancy because we don't support 0-d booleans here)
This saves us from looking for the actual place where out-of-order packets have been sent.
This scalar function is used to add ICU collation based collation  types to an SQLite database connection.
This scalar function takes two arguments.
This scenario comes about when this function is called (indirectly) from sqlite3BtreeDelete().
This scheme can get more performance if do this optimize with label address resolving.
This second fsync makes it safe to delete the WAL since the new content will persist in the database file.
This section contains code for WinCE only.
This section is blank unless "lemon" is run with the "-m" command-line option.
This section is for debugging outside of VTune.
This section is performed when method enter event occurs.
This section is performed when method leave event occurs It updates the virtual stack.
This section is run by the right-most SELECT statement only.
This section of code's only "output" is via assert() statements.
This section provides definitions to allow the FTS3 extension to be compiled outside of the  amalgamation.
This section will be null unless lemon is run with the -m switch.
This seems a little convoluted to me, but I'll bet you save a cycle somewhere.
This seems counter-intuitive since clearly the mutex cannot be held if it does not exist.
This seems crazy, so PCRE now gives an error.
This seems to be what Perl does.
This seems unsafe though, as it would leave the system in a state where the contents of the wal-index header do not match the contents of the  file-system.
This selects one of the six possible month length configurations listed above.
This session object will record changes to database zDb attached to connection db.
This sets group 1 as part of the atomic group, but this is not on the final matching path, so must be unset when 2 is set.
This sets the AXISDATA portion of the iterator to the specified iterindex, updating the pointers as well.
This setting has no effect when compiling for WinRT.
This shm_unlink should prevent that from happening.
This shortened the year by 3 days per 400 years, giving a year of 365.2425 days.
This should all be converted to C code.
This should allow inclusion into libraries with less chance of namespace collisions.
This should be  considered almost as quick as a direct rowid lookup (for which  sqlite uses an internal cost of 0.0).
This should be a multiple of 3, because the offset vector is always a multiple of 3 long.
This should be a pointer obtained from sqlite3ParserAlloc.
This should be a safe distance away from underflow or overflow, say, between (underflow/machine precision) and  (machine precision * overflow ).
This should be called once for each prior call to btreeGetPage.
This should be done even for local variables, as they might otherwise be expanded by user macros.
This should be done first so that it can successfully prevent spurious compiler warnings due to subsequent content in this file and other files that are included by this file.
This should be fixed by reallocating the olestring, but as emalloc is used, that doesn't matter much.
This should be handled in a better way.
This should be invoked at the conclusion of each write-transaction.
This should be sqlite3_vfs.mxPathname+1 (to ensure there is enough space to write the master journal name).
This should be superseded by BasicResponse#responses and #find_response that return SingleResponse.
This should be the first call after creating the instance, otherwise configuration that has already been set could get lost in the process.
This should be the only routine in this file with external linkage.
This should be the public key corresponding to the private key used for signing the SPKI.
This should be used in conjunction with Phar::webPhar(), and has no effect otherwise SCRIPT_NAME, PHP_SELF, REQUEST_URI and SCRIPT_FILENAME
This should be used together with NpyIter_GetShape and NpyIter_GetNDim.
This should catch convoluted mutual recursions.
This should count as an absolute local path as well, however IS_ABSOLUTE_PATH doesn't care about this path form till now.
This should either be fixed, or pInput/nBytes should be converted to zInput.
This should have been a word all along
This should however normally be found early with a direct goto to broadcast_error
This should never happen
This should never happen as closures will always be callable
This should never happen here, but for security
This should never happen, since all clists are shorter than 5 character now.
This should never happen.
This should never occur
This should never occur, but compilers may mutter if there is no default.
This should normally be MAX_PATH.
This should normally be UNICODE_STRING_MAX_CHARS * sizeof(WCHAR).
This should normally be UNICODE_STRING_MAX_CHARS.
This should not occur
This should not occur: we list all opcodes explicitly so that when new ones get added they are properly considered.
This should only be the case for the first element
This should only be used before forking
This should only be used by the master
This should use a hash to determine if a given target id has already been appended.
This shouldn't happen (2.0.26) because we just call gdImageAALine now, but do something sane.
This shouldn't happen in this program.
This shouldn't, however, impact performance when true recursion is being used.
This simplifies checking for an SQL NULL default below.
This simplifies the implementation a bit.
This simplifies the separator-skipping code below.
This software is based in part on the work of the Independent JPEG Group.
This software is provided "as is" without express or implied warranty.
This software is provided 'as-is', without any express or implied warranty.
This solves two problems: one is that ini entries for dl()'d extensions will now work, and the second is that updating the global hash here from dl() is not mutex protected and can lead to death.
This sorts the strides into FORTRAN order, reverses any negative strides, then coalesces axes where possible.
This source file is organized into divisions where the logic for various subfunctions is contained within the appropriate division.
This source file is part of the Swift.org open source project
This source file is used in two places: (1) It is #included by pcre_compile.c when it is compiled in debugging mode (PCRE_DEBUG defined in pcre_internal.h).
This space is available to the user via the sqlite3PagerGetExtra() API.
This space is used for "compiling" into during the first phase, when we are computing the amount of memory that is needed.
This space optimization provides the useful property that each edge in the graph takes up exactly one slot in deptbl.
This special exception was added by the Free Software Foundation in version 2.2 of Bison.
This special processing mode is used only for OR clause processing.
This speeds up loading large records that span many overflow pages.
This stage is performed by the routine DLAED2.
This stage is performed by the routine DLAED8.
This stage is performed by the routine DLASD2.
This stage is performed by the routine DLASD7.
This stage is performed by the routine SLAED2.
This stage is performed by the routine SLAED8.
This stage is performed by the routine SLASD2.
This stage is performed by the routine SLASD7.
This state can be cleared by completely discarding  the contents of the pager-cache.
This statement has already been prepared.
This statement is so common that it is optimized specially.
This statement is used to determine which level to read the input from when performing an incremental merge.
This steals a reference to 'obj'.
This steals the 'dtype' reference.
This steals the datetime_dtype reference
This steals the reference to dtype, so no DECREF of dtype
This step function is used for both the min() and max() aggregates, the only difference between the two being that the sense of the comparison is inverted.
This step is only for non-persistent connections as persistent connections have private session pools.
This step usually works if step 1 fails.
This stops saveCursorPosition() from trying to save the current position of the cursor.
This strategy involves a two rowid lookups on an B-Tree structures and then a linear search of an R-Tree node.
This strtod returns a nearest machine number to the input decimal string (or sets errno to ERANGE).
This structure also contains some state information.
This structure consists mostly of methods for the module.
This structure contains the complete state of the virtual machine.
This structure encapsulates a user-function destructor callback (as configured using create_function_v2()) and a reference counter.
This structure helps to create an environment for the spawned CGI program.
This structure holds a record that has already been disassembled into its constituent fields.
This structure identifies an Internet host and a service.
This structure is a subclass of sqlite3_file.
This structure is a subclass of sqlite3_rtree_geometry.
This structure is defined inside of vdbeInt.h because it uses substructures (Mem) which are only defined there.
This structure is opaque to the database connection.
This structure is passed around through all the sanity checking routines in order to keep track of some global state information.
This structure is the current state of the generator.
This structure is used for saving digits in the conversion process.
This structure is used to build up buffers containing segment b-tree  nodes (blocks).
This structure is used to implement an iterator that loops through all frames in the WAL in database page order.
This structure is used to pass data from sqlite3_get_table() through to the callback function is uses to build the result.
This structure is used to store a section of a Jpeg file.
This structure must be typedefed in order to work around compiler warnings on some platforms.
This structure provides a mapping from the sparse cursor numbers into consecutive integers beginning with 0.
This structure stores information about the page that is decoded from the raw file page.
This subclass can be used to create instances of the structure like any other Class.
This subclass is a subclass of sqlite3_file.
This subquery can be absorbed into its parent.
This subroutine first looks at the iUseFlag.
This subroutine is based on the EISPACK routine BALANC.
This subroutine is based on the EISPACK routine CBAL.
This subroutine is needed because DLAMCH does not compensate for poor arithmetic in the upper half of the exponent range, as is found on a Cray.
This subroutine is needed because SLAMCH does not compensate for poor arithmetic in the upper half of the exponent range, as is found on a Cray.
This superclass exists in order to define fields of the cursor that are common to all implementations.
This support based in part on work by Jon Griffiths.
This support will be extended to other encodings.
This symbol is defined in ext/standard/config.m4.
This table contains as many values as there might be trailing bytes in a UTF-8 sequence.
This table contains bit maps for various character classes.
This table encodes the rules for finding the end of an extended grapheme cluster.
This table finds the last month which starts at the same day of a week.
This table is a case flipping table.
This table is a lower casing table.
This table is not a VIEW
This table is used to check whether auto-possessification is possible between adjacent Unicode property opcodes (OP_PROP and OP_NOTPROP).
This table is used to check whether auto-possessification is possible between adjacent character-type opcodes.
This table is used when checking ALNUM, (PX)SPACE, SPACE, and WORD against a general or particular category.
This table is used when converting repeating opcodes into possessified versions as a result of an explicit possessive quantifier such as ++.
This table maps each EBCDIC character to an (8-bit extended) ASCII character, as specified in the rationale for the dd(1) command in draft 11.2 (September, 1991) of the POSIX P1003.2 standard.
This table may be real database table or a subquery.
This table reflects a particular philosophy about what constitutes "text," and there is room for disagreement about it.
This table reverses PRIV(ucp_gentype).
This table's current rowid value
This tag may be stored along with the ciphertext, then set on the decryption cipher to authenticate the contents of the ciphertext against changes.
This tag will also be used in the decryption process and by verifying its validity, the authenticity of a given ciphertext is established.
This takes the one-dimensional array 'v' and assigns its values to all of the elements of 'self' for which the corresponding element of 'op' is True.
This technique allows multiple concurrent readers to view different versions of the database content simultaneously.
This temporary number is stored in the temp argument, which is of type gmp_temp_t.
This temporary value needs to be freed lateron using the FREE_GMP_TEMP macro.
This term does not restrict search space
This term is already coded
This term is not useful for search.
This terminates the outer level of our double loop.
This test catches attempts to make either operand of a NEAR operator something other than a phrase.
This test feature is only available in the amalgamation since the SQLITE_N_KEYWORD macro is not defined in this file if SQLite is built using separate source files.
This test function is not currently used by the automated test-suite.
This test is made to avoid new problems similar to the one described by ticket #3584.
This test is not foolproof but it does provide some measure of protection against misuse of the interface such as passing in db pointers that are NULL or which have been previously closed.
This test-control returns a pointer to that string.
This testing proceeds by initially truncating the input string, then if necessary comparing the whole string with a decimal expansion to decide close cases.
This text is not quoted - if it is used as part of an SQL statement it needs to be quoted appropriately.
This thread runs independently of its creator until it is joined using sqlite3ThreadJoin(), at which point it terminates.
This time we set the flag for the keyword 'abstract'.
This time, a result of NOMATCH isn't an error.
This trick assumes that both the page-size and sector-size are an integer power of 2.
This turns on the following extra special behaviour:  3a.
This turns out to be a really, really expensive thing to check, so only do this occasionally - not on every iteration.
This turns out to be rather cunning.
This turns out to be trickier than you   * might think because of the possibility of matching an empty string.
This two pass approach for resolving min/max constraints deviates from the spec.
This two-pass approach that reuses as much memory as possible from the leftover memory at the end of the opcode array.
This two-pass approach that reuses as much memory as possible from the leftover space at the end of the opcode array can significantly reduce the amount of memory held by a prepared statement.
This type is used as an fts3ExprIterate() context object while  accumulating the data returned by the matchinfo() function.
This type of "rounding" allows us to avoid calculating the length of the year in most cases.
This type will be opaque to them and only be useful when passed back to c.
This undoes the effect of the HintPop() above - so that no entry is removed from the hint blob.
This used to be a conditional around just the two extra args, but that might be undefined if yyoverflow is a macro.
This used to be a table of strings, but in order to reduce the number of relocations needed when a shared library is loaded dynamically, it is now one long string.
This used to be possible, but the feature was not used, so it was removed in order to simplify the code.
This user-defined SQL function is invoked with a single argument - the name of a table expected to appear in the target database.
This uses one of the F_*LCK flags
This uses one of the F_*LCK flags.
This uses one of the F_*LK flags.
This uses the same comparison callback as is used when flushing terms to disk.
This uses the stack for saving everything that has to be saved for a recursive call.
This usually happens when a function is called via a function pointer.
This usually works, but may fail if the wal-index header is corrupt or currently  being modified by another thread or process.
This value can be NULL if zDb is also NULL.
This value can be lowered (or raised) at run-time using that the max_page_count macro.
This value can be overridden at runtime using the sqlite3_config() API.
This value determines the size of the initial vector that is used for remembering named groups during the pre-compile.
This value is advisory.
This value is beyond our precision, so rounding it is pointless
This value is cleared after being yielded.
This value is only useful in that it may be passed as the first argument to an FTS5 auxiliary function.
This value is stored in stack  variable nLeafEst.
This value is the last one
This value is used when the user selects the no-sync option for the journal.
This value may be NULL meaning that name is of the form Y.Z or Z.
This value may be overridden using the  sqlite3PagerJournalSizeLimit() API.
This value may be zero for the default behavior.
This value may be zero.
This value specifies the size of stack workspace that is used during the first pre-compile phase that determines how much memory is required.
This value was chosen based on empiracle data.
This variable has file scope during normal builds, but the test harness needs to access it so we make it global for  test builds.
This variable has no function other than to help verify the correct operation of the library.
This variable holds the process id (pid) from when the xRandomness() method was called.
This variable is kept up to date as locks are taken and released by the pagerLockDb() and pagerUnlockDb() wrappers.
This variable is passed to DLASQ3.
This variable is passed to SLASQ3.
This variable is set to false when running tests for which the on disk structures should not be corrupt.
This variable is updated by the upper layer each time a new  write-transaction is opened.
This variable may only accessed while the STATIC_MASTER mutex is held.
This variation on cellSizePtr() is used inside of assert() statements only.
This varies from one system to another.
This varint contains the total number of bytes of content in the PMA (not including the varint itself).
This vector defines all the methods that can operate on an sqlite3_file for win32 without performing any locking.
This vector defines all the methods that can operate on an sqlite3_file for win32.
This vector is used for remembering name groups during the pre-compile.
This version does not attempt to produce an output file with transparency in some of the palette indexes, which, in practice, doesn't look so hot anyway.
This version ignores LOCALE information.
This version is derived from the original implementation of FreeSec (release 1.1) by David Burren.
This version of "lempar.c" is modified, slightly, for use by SQLite.
This version of SQLite does not support sqlite_stat2.
This version of SQLite only supports sqlite_stat3.
This version of fts5SegIterNext() is only used by reverse iterators.
This version of the memory allocation is for use by the application.
This version of the memory allocation subsystem is included in the build only if SQLITE_ENABLE_MEMSYS3 is defined.
This version of the memory allocation subsystem is included in the build only if SQLITE_ENABLE_MEMSYS5 is defined.
This version of the memory allocation subsystem omits all use of malloc().
This version of the memory allocator is only built into the library SQLITE_ENABLE_MEMSYS3 is defined.
This version of the memory allocator is the default.
This version of the memory allocator is used only if the SQLITE_MEMDEBUG macro is defined
This version of the memory allocator is used only when  SQLITE_ENABLE_MEMSYS5 is defined.
This version provides a set of parameters which should give good, but not optimal, performance on many of the currently available computers.
This version requires less memory writing.
This virtual table always delivers results in ascending order of the "term" column (column 0).
This virtual table always does a linear scan.
This vtab delivers always results in "ORDER BY term ASC" order.
This was easier recursively, but dangerous on long lists, so we walk it ourselves
This was either supplied by the user when the table was created, or added later to the table definition by an ALTER TABLE command.
This was the 'else' case, we can't really 'detect' it
This was the last allocation.
This was the orginal intention, but currently that does not work.
This was the root node.
This way we don't need to touch the build system files.
This way, SQLite uses the in-memory journal data to  roll back changes made to the internal page-cache before this function was called.
This way, SQLite uses the in-memory journal data to roll back changes made to the internal page-cache before this function was called.
This way, if the VFS used by this pager includes ZipVFS, the entire transaction can be rolled back at the ZipVFS level.
This way, it may end up in the journal file twice, but that is not a problem.
This way, php_pollfd_for will return a mask with POLLOUT if the connection is successful and with POLLPRI otherwise.
This way, the Pager.eLock variable may be set to a less exclusive (lower) value than the lock that is actually held at the system level, but it is never set to a more exclusive value.
This way, the missing strides are tighter together in memory, which is good for nested loops.
This way, the next call to sqlite3rbu_vacuum() opens a handle that starts a  new RBU vacuum operation.
This way, the remainder of the function does not have to deal with any overflow cells in the parent page, since if any existed they will have already been removed.
This whole area is rewritten in PCRE2 because there are some obscure cases.
This will DECREF(s) if replaced
This will add additional "def" points, so it must happen before def propagation.
This will also acquire a readlock on that file.
This will always be called, even if DidCreate returned failure.
This will be  ( N - 1 )*INCX  too small for descending loops.
This will be a +File+ object unless the current file is a stream such as STDIN.
This will be caught by the Go signal handler which should forward to the C signal handler.
This will be either the rollback journal or the WAL file.
This will be one or more of the O_* flags.
This will be the copy of page X as it was when the transaction started, not as it was when "SAVEPOINT sp" was executed.
This will be used in order to either set the dimensions of the node if none already exist or to compute the remaining space left for the flexible children.
This will cause a double resume error.
This will cause code paths that deal with sqlite3StackAlloc() failures to be unreachable.
This will cause dtoa modes 4 and 5 to be treated the same as modes 2 and 3 for some inputs.
This will cause the OP_Ne below to always fail on the first iteration of the loop even if the first row is all NULLs.
This will cause the analysis to be used when preparing all subsequent queries.
This will cause the malloc to go back to its default implementation when sqlite3_initialize() is run.
This will cause the pager to enter the error state so that no further harm will be done.
This will copy also the strings and the root, which we will have to adjust in the loop
This will copy the error code and the messages, as they are buffers in the struct
This will fire the triggers and remove both the table and index b-tree entries.
This will forbid their use by other unserialize() calls in the same unserialization context.
This will force all the Expr.token.z values to be dynamically allocated rather than point to the input string - which means that they will persist after the current sqlite3_exec() call returns.
This will force the recursive routine to visit all dirty nodes at least once.
This will free any memory associated with a and use the string in setstate as the (writeable) memory.
This will free the libxml alloc'd memory
This will help prevent from leaking resources when Timeout::Error exceptions occur during normal ensure clause.
This will only happen for structured dtypes (which may have hidden objects even if the HASOBJECT flag is false), object dtypes, or subarray dtypes whose base type is either of these.
This will prevent SQL injections from giving attackers access to extension loading capabilities.
This will produce suitable results if people depend on DES-encryption available (passing always 2-character salt).
This will release the write lock on the database file.
This will start a new column list.
This will take control down to where bracketed groups, including assertions, are processed.
This will use the current system time.
This will usually not destroy anything but decref.
This work-around is unlikely to work correctly on any system where you really cannot cast a function pointer into void*.
This works  around a bug in BSD NFS lockd (also seen on MacOSX 10.3+) that fails to  remove the write lock on a region when a read lock is set.
This works around a bug in internet explorer for the macintosh which sends mime boundaries that are only LF terminated when you use an image submit button in a multipart/form-data form.
This works as long as this function is not used for streaming.
This works better with a C99 compliant vsnprintf, but should work ok with versions that return a -1 if it overflows the buffer
This works for either btrees or virtual tables.
This works for i.e. AIX
This works in the similar way as OpenSSL::OCSP::Request#verify.
This works just like btreeGetPage() with the addition:  If the page is already in use for some other purpose, immediately release it and return an SQLITE_CURRUPT error.
This works on just about every filesystem imaginable.
This works regardless we have SLJIT_MEM1 or SLJIT_MEM0.
This would actually be Monday, because the Jewish day is considered to begin at sunset.
This would be slower than storing it.
This would crash if called on an uninitialized buffer, or leak a reference to each object if initialized.
This would crash if called on an uninitialized valbuffer, or leak a reference to each object item if initialized.
This would likely require user D script variables, which would use kernel memory.
This wrapper is defined to accept an argument of type char, and always returns 0 for any values that fall outside of the range of the unsigned char type (i.e. negative values).
Thomas Wang 32 bits integer hash function
Thomas in chapter III.1 of Graphics Gems II (James Arvo, ed.
Thomas' article also describes a refined method which is asymptotically faster than the brute-force method, but it is also far more complex and cannot efficiently be applied to small subboxes.
Those  below are for version 2 and greater.
Those below are for version 3 and greater.
Those cannot be recreated afterwards.
Those keywords will cause indices to be created and the table record must come before the  indices.
Those methods that are common to all locking modes are gather together into this division.
Those not present will not be changed
Those operator always uses word arguments without write back.
Those operators always uses word arguments without write back.
Those that follow are added in version 2 or later
Those that follow must honor the ORDER BY clause.
Those users would then do a  Google search for "sqlite", find the telephone numbers of the developers and call to wake them up at night and complain.
Though MEM_Str and MEM_Blob values may be discarded, MEM_Int, MEM_Real, and MEM_Null values are preserved.
Though they are intended for internal use by SQLite, code that links against SQLite is permitted to use any of these routines.
Thread context used to create new PMA
Thread exiting routine in thread_start_func_2 notify me when the last sub-thread exit.
Thread holding this mutex
Thread local values are carried along with threads, and do not respect fibers.
Thread procedure Win32 compatibility shim
Thread that is within this mutex
Thread that will run pMerger
Thread will use this task object
Thread-safety is provided by GIL.
Threads do not have to be real.
Three SQL functions - stat_init(), stat_push(), and stat_get() - share an instance of the following structure to hold their state information.
Three arguments are all strings: call them A, B, and C.
Three memory locations are allocated:  (1)  Register to hold the name of the pTab table.
Three-byte-character lead byte followed by two trail bytes.
Throughout a write-transaction, dbFileSize contains the size of the file on disk in pages.
Throughout the rollback process, each time a page is rolled back, the corresponding bit is set in a bitvec structure (variable pDone in the implementation below).
Throughout this routine  we use the function  DLAMC3  to ens ure that relevant values are  stored and not held in registers, or are not affected by optimizers.
Throughout this routine  we use the function  DLAMC3  to ens ure that relevant values are stored  and not held in registers, or are not affected by optimizers.
Throughout this routine  we use the function  SLAMC3  to ensure that relevant values are  stored and not held in registers,  or are not affected by optimizers.
Throughout this routine  we use the function  SLAMC3  to ensure that relevant values are stored  and not held in registers,  or are not affected by optimizers.
Throw an error if any non-sense combination is used.
Throw an error if either the JSON or PATH inputs are not well-formed.
Throw an error if the JSON or any PATH is malformed.
Throw exception or returns 0,when resulting c is Inf or NaN
Throw the exception in the context of the generator
Throw the exception in the context of the generator.
Throws an Exception in case the given Zend extension does not exist
Throws an Exception in case the given class constant does not exist
Throws an Exception in case the given extension does not exist
Throws an Exception in case the given function does not exist
Throws an Exception in case the given method does not exist
Throws an Exception in case the given property does not exist
Thumb immediate form.
Thus  'a' LIKE 'A' would be true.
Thus NDEBUG becomes an opt-in rather than an opt-out feature.
Thus adding B/2 to A should not  cha nge A, but adding B/2 to SAVEC should change SAVEC.
Thus adding B/2 to A should not  change A, but adding B/2 to SAVEC should change SAVEC.
Thus entry 0 contains the join operator for the join between entries 0 and 1.
Thus for GROUP BY and DISTINCT the pOrderBy terms can be matched in any order.
Thus for NULL and zero-length we are quite efficient.
Thus for single-threaded operation, there is exactly one instance of this object and for multi-threaded operation there are two or more instances.
Thus it is very simple, we remove it.
Thus it requires week 53.
Thus it won't extend and rehash the hash constantly.
Thus it's ok to return here.
Thus nq is the order of the orthogonal matrix Q or P**T that is applied.
Thus nq is the order of the unitary matrix Q or P**H that is applied.
Thus the characteristics of the randomization are the same
Thus the default max embedded payload fraction is 64.
Thus the following two ALWAYS.
Thus the not-found jump of seekOp will never be taken
Thus the process of scanning the NameContext list corresponds to searching through successively outer subqueries looking for a match.
Thus the program must guarantee that the original will not change during the lifetime of the copy.
Thus the result table has 8 entries.
Thus we can not use strlen.
Thus we check manually for _get_module.
Thus we have to follow it :(
Thus we need avoid to call if don't use O_NONBLOCK.
Thus we need to do part of what it does or Zend will report leaks.
Thus we need to resend the types, if any such values occur, and force resend for the next execution.
Thus we need to use it carefully.
Thus we never hold more than the LIMIT+OFFSET rows in memory at once
Thus, (ca A - w D) X  will be SCALE*B, not B (ignoring perturbations of A.)  It will be at most 1.
Thus, a bit more space is pre-allocated at the end of the buffer, see php_mysqlnd_rowp_read().
Thus, a log line is always one line long
Thus, a proactive measure like this self-test is needed.
Thus, a test for both these conditions is necessary to ensure we correctly detect the start of the pattern in both phases.
Thus, after all files have been read +ARGV+ will be empty.
Thus, any virtual table method (xFilter etc.) that may directly or indirectly call this function must call sqlite3Fts3SegmentsClose() before returning.
Thus, correcting target_len so it's suddenly don't overflown.
Thus, detecting the absence of a lookahead is sufficient to determine that there is no unexpected or expected token to report.
Thus, if the data from +str+ are unpredictable to an adversary, this increases the uncertainty about the state and makes the PRNG output less predictable.
Thus, it is only those at the end that need unsetting here.
Thus, state merging (from LALR or IELR) and default reductions corrupt the expected token list.
Thus, the name is size - 1.
Thus, the year before the year 1 is the year zero, and the year preceding the year zero is the year -1.
Thus, this "checksum" scheme, though fast and simple, catches the mostly likely kind of corruption.
Thus, this function itself never impersonates, but does use the identity of the thread.
Thus, using it as a generic allocator is not suggested.
Thus, we call PyType_Ready on the standard Python Types, here.
Thus, we can pass them to this function to take advantage of contiguous strides, etc.
Thus, we cannot look for specific key values if we want to build binaries that run on both systems.
Thus, we determine the type by iterating through the entire array and figuring out each element.
Thus, we do these hacks.
Thus, we need another opcode here.
Thus, we need to calculate a value, nOff, between 0 and 7, to shift  it by.
Thus, we optionally deviate from the correct algorithm just enough to avoid such collisions.
Thus, we resort to this not so clever hackery.
Thus, you can't use Ruby's object.
Ticket #1171:  The statement journal might contain page content that is different from the page content at the start of the transaction.
Ticket #1728:  The symbol table might still contain information on tables and/or indices that are the process of being deleted.
Ticket #2739:  The _LARGEFILE_SOURCE macro must appear before any system #includes.
Ticket b351d95f9cd5ef17e9d9dbae18f5ca8611190001: The value in regFree1 might get SCopy-ed into the file result.
Time connection was accepted
Time interval, in microseconds
Time is an abstraction of dates and times.
Time is stored internally as the number of seconds with fraction since the _Epoch_, January 1, 1970 00:00 UTC.
Time resolution is in seconds.
Time when Sun is at south
Time when query started - used for profiling
Time will support marshal_dump and marshal_load in the future (1.9 maybe)
Time#succ is obsolete since 1.9.2 for time is not a discrete value.
Time.now is recommended over CLOCK_REALTIME.
Time::now is an alias for this.
Timedelta is an integer with an associated unit
Timedelta zero-dimensional array
Timezone offset in minutes
Timezone was set explicitly
Tishri           The first month of the Jewish year.
Tishri 1 must never be Sunday, Wednesday or Friday.
Tishri 1 will be the day of the molad unless it is delayed by one of the following four rules (called dehiyyot).
Title can be "meta-data".
Title text to insert in front of each block
Title: Affine transformation
Title: Crop  A couple of functions to crop images, automatically (auto detection of the borders color), using a given color (with or without tolerance) or using a selection.
Title: Matrix Group: Affine Matrix
Titlecase needed, but not yet Titlecase
To access the current line number use +ARGF.lineno+.
To achieve the same effect using this new  interface, add the DELETEONCLOSE flag to those specified above for  OpenExclusive().
To add new pragmas, edit the code in ../tool/mkpragmatab.tcl and rerun that script.
To apply H' (the conjugate transpose of H), supply conjg(tau) instead tau.
To avoid a creating security problems for older applications that relink against newer versions of SQLite, the ability to run load_extension is turned off by default.
To avoid concerns about buffer overreads, this routine is only used on schemas where the maximum valid header size is 63 bytes or less.
To avoid deadlock, first release all locks with a larger BtShared address.
To avoid deadlocks and other threading problems, the sqlite3_log() routine will not use dynamically allocated memory.
To avoid deadlocks, multiple Btrees are locked in the same order by all database connections.
To avoid excess churning of page 1, the update only happens once.
To avoid having to manage object lifetimes, we also skip this if 'dst' has an object dtype.
To avoid losing the reference in that case we work on a copy.
To avoid partial match, NUL is added here
To avoid problems, the necessary byte swapping is carried out using a 64-bit integer rather than a 64-bit float.
To avoid rejecting a valid response, this method allows the times to be within +nsec+ of the current time.
To avoid stomping the errno value on a failed read the lastErrno value is set before returning.
To avoid stomping the errno value on a failed write the lastErrno value is set before returning.
To avoid such problem, the `read_func()' should be used with `rb_thread_call_without_gvl2()'.
To avoid this hazard, the pager switches into the ERROR state instead of READER following such an error.
To avoid this overhead dwarfing the actual productive work accomplished, the incremental merge is only attempted if it will write at least 64 leaf blocks.
To avoid this scenario, the sqlite3_unlock_notify() performs deadlock detection.
To avoid this, make sure to also run the full LIKE on all candidate expressions by clearing the isComplete flag
To avoid this, update the wal-index header to indicate that the log file contains zero valid frames.
To avoid thwarting these optimizations, it is important not to clear the cursor here.
To be 'in range', both values need to be a power of two greater than or equal to 512 or 32, and not greater than their  respective compile time maximum limits.
To be frank, you should not use it.
To be implemented when we have more image formats.
To be order-distinct is not quite the same as being UNIQUE since a UNIQUE column or index can have multiple rows that  are NULL and NULL values are equivalent for the purpose of order-distinct.
To be order-distinct, the columns must be UNIQUE and NOT NULL.
To be safe, we will stick with the (slightly slower) fsync().
To call this, at least one of the dtype's subarrays must be non-NULL
To call this, at least one of the dtypes must have fields
To check alignment gcc has an appropriate operator.
To clear the most recent error for sqlite handle "db", sqlite3Error should be called with err_code set to SQLITE_OK and zFormat set to NULL.
To close the file when processing is complete, call ::endgrent.
To close the file when processing is complete, call ::endpwent.
To compile without implementing sqlite3Hwtime() for your platform, you can remove the above #error and use the following stub function.
To construct the calendar for a year, you must first find the length of the year by determining the first day of the year (Tishri 1, or Rosh Ha-Shanah) and the first day of the following year.
To cope with both ways of handling this, I had resort to some messy hackery that does a test at run time.
To create an array with separate objects a block can be passed instead.
To decrease the number of length checks, we try to concatenate the fixed length character sequences.
To defer checking the constraint, the FK should specify NO ACTION (represented using OE_None).
To delete, insert a NULL pointer.
To detect forward reference we have to scan up the list that is kept in the workspace.
To determine the table corresponding to the index being written, this function has to search through the database schema.
To discourage this, return a very high cost here.
To do everything in integer math, we must use integer scale factors.
To do not bloat normal filling code I added a 2nd private function.
To do so use #untaint.
To do so would require that samba (or whatever tool is being used for file sharing) implements locks correctly between windows and unix.
To do so, we need to generate a key first.
To do the Hessian matrix, you do the same thing but add two dimensions, or take advantage of the symmetry and pack it into 1 dimension with a particular encoding.
To do this in a way that is testable, mask the sign bit off of negative values, resulting in a positive value.
To do this, we maintain a count of executed SKIP_ARGs.
To downgrade to shared, simply update our internal notion of the lock state.
To encourage programmers to avoid these functions, we will not explain what they do.
To ensure that they are freed if an error occurs, link them into the Parse.pTriggerPrg  list of the top-level Parse object sooner rather than later.
To ensure unique results if UNION
To extend shorts properly, we need both signed and unsigned argument extraction methods.
To find the largest key value on pPage, first find the right-most  cell on pPage.
To forbid renegotiation and to cancel the process, an Error may be raised within the callback.
To force any register to be an integer, just add 0.
To force sizeof(header).
To format the number you pass in a printf()-style format string.
To free all resources, use sqlite3VdbeMemRelease(), which both calls this routine to invoke the destructor and deallocates Mem.zMalloc.
To fully unlock the database, delete the lock file
To generate a key, you should either use a secure random byte string or, if the key is to be derived from a password, you should rely on PBKDF2 functionality provided by OpenSSL::PKCS5.
To generate a secure random-based key, Cipher#random_key may be used.
To get around these problems, we apply Thomas' method to compute the nearest colors for only the cells within a small subbox of the histogram.
To get fully accurate smaller eigenvalue, next line needs to be executed in higher precision.
To get stack address.
To get strlen with cr Note that given cr is not used.
To guarantee multiple calls generate unique names even if the file is not created.
To help encourage people to avoid using these functions, we are not going to tell you what they do.
To help reduce memory requirements, sometimes an Expr object will be truncated.
To implement this, reshape the array.
To improve the visual quality of the results, we actually work in scaled RGB space, giving G distances more weight than R, and R in turn more than B.
To include callout length
To iterate through builtin functions
To iterate through levels
To look at it another way, this routine resets the state of the virtual machine from VDBE_MAGIC_RUN or VDBE_MAGIC_HALT back to VDBE_MAGIC_INIT.
To maintain a certain BC, we allow anything for the second parameter and return original string
To maintain a fully accurate histogram, we'd need to allocate a "long" (preferably unsigned long) for each cell.
To make "sunday this week" work, where the current DOW is not a "sunday"
To make "this week" work, where the current DOW is a "sunday"
To make Array to LinkedList, use link_anchor
To make it link in VS2005
To make it more real, addr would need to be aligned to vps_pagesize.
To make this routine a no-op, replace it with a stub that returns SQLITE_OK but leaves pFd set to a negative number.
To many cells for a single page.
To match a '-', make it the last character in the list.
To maximize compatibility, however, these objects retain a bit-oriented interface.
To maximize speed, and to ensure that a lookup table is used, all of the classes need to be small integers and all of them need to be used within the switch.
To obtain a Delaunay triangulation, construct an instance of the matplotlib.tri.Triangulation class without specifying a triangles array.
To obtain a SHARED lock, a read-lock is obtained on the 'pending byte'.
To overcome this problem, a separate data structure called the wal-index is maintained to expedite the search for frames of a particular page.
To perform Thread.current.raise as Kernel.raise
To perform a fcntl(2) operation, use IO::fcntl.
To perform an open(2) operation, use IO::sysopen.
To please picky compilers
To prepend the new slots, the iStart value would be 0.
To prevent these assert()s from failing, when building with SQLITE_DEBUG defined using gcc, we force nullMem to be 8-byte aligned using the magical __attribute__((aligned(8))) macro.
To prevent these separators from being replaced with a space, we use the SKIP_LONG_HEADER_SEP to skip over them.
To prevent these separators from being replaced with a space, we use the SKIP_LONG_HEADER_SEP_MBSTRING to skip over them.
To process data with it, use the instance method #update with your data as an argument.
To query an array about the number of elements it contains, use #length, #count or #size.
To raise an error for indices outside of the array bounds or else to provide a default value when that happens, you can use #fetch.
To reset column cache
To resolve table columns references we look for nodes (or subtrees) of the  form X.Y.Z or Y.Z or just Z where  X:   The name of a database.
To run the tests, evaluate the fts3_tokenizer_internal_test() scalar function with no arguments.
To save initial string length after scanning to first variable
To save much memory, we overlay the table used by compress() with those used by decompress().
To save unnecessary work, only do this when the batch number changes.
To say "WhereLoop X is a proper subset of Y" means that X uses fewer WHERE clause terms than Y and that every WHERE clause term used by X is also used by Y.
To select the eigenvector corresponding to the j-th eigenvalue, SELECT(j) must be set to .TRUE..
To select the real eigenvector corresponding to a real eigenvalue w(j), SELECT(j) must be set to .TRUE..
To set the external encoding use +ARGF.set_encoding+.
To sign a document, a cryptographically secure hash of the document is computed first, which is then signed using the private key.
To sign a document, the signatory generally uses a message digest algorithm (cf.
To start a read transaction, the reader records the index of the last valid frame in the WAL.
To state it another way:  This routine returns a list of all triggers that fire off of pTab.
To the end of n1 and n2.
To this end, it stores xml elements, their sub-elements, and their attributes in an in-memory tree.
To tokenize an input buffer, the sqlite3_tokenizer_module.xOpen() method is called.
To uniform the behavior, we enable the automatic selection also in 1.0.2.
To update on each new cURL release using src/main.c in cURL sources
To update the set of pragmas, edit that script and rerun it.
To use SQLite in other programs, you need this file and the "sqlite3.h" header file that defines the programming interface to the SQLite library.
To use the recommended 32 bit FNV-1a hash, pass FNV1_32A_INIT as the Fnv32_t hashval argument to fnv_32a_buf() or fnv_32a_str().
To validate the integrity of a signed document, it suffices to re-compute the hash and verify that it is equal to that in the signature.
To verify an SPKI, the public key contained within the SPKI should be used.
To verify that a date is valid, convert it to SDN and then back and compare with the original.
To work around the problem, SQLite has to manage file locks internally on its own.
To work around them, add a dummy OP_Variable here.
To work around this problem (we consider it a bug in OS X, not SQLite) we always increase the file size to 1 by writing a single byte prior to accessing the inode number.
To work around this problem, each unixInodeInfo object maintains a count of the number of pending locks on tha inode.
To work around this problem, we delay 100 milliseconds and try to delete again.
To work around this, if a call to xUnlock() fails when unlocking the database in the ERROR state, Pager.eLock is set to UNKNOWN_LOCK.
To work around this, if the journal file does appear to contain a valid header following Pager.journalOff, then write a 0x00 byte to the start of it to prevent it from being recognized.
To workaround them, add a dummy OP_Variable here.
To write to a provided operand, you must specify the write flag manually.
ToDos  See if example images from http://www.exif.org have illegal thumbnail sizes or if code is corrupt.
Todd Miller Perry Greenfield Rick White
Todd Miller, Perry Greenfield, Rick White)
Token (or prefix) to query for
Token associated with this expression
Token at end of string
Token identifying trigger
Token number of previous deferred token
Token pList/nList corresponds to
Token pTok has appeared in a MATCH expression where the NEAR operator is expected.
Token pToken is an incrementally loaded token that is part of a  multi-token phrase.
Token text (not NULL terminated)
Token that describes the complete CREATE TRIGGER
Token to add or remove to or from index
Token types used by the sqlite3_complete() routine.
Token with unqualified schema object name
Tokenization callback context object
Tokenization callback used by integrity check.
Tokenization callback used when inserting tokens into the FTS index.
Tokenize some text using the ascii tokenizer.
Tokenize the nul-terminated string zText and add all tokens to the pending-terms hash-table.
Tokenize the text passed via the second and third arguments.
Tokenize using the porter tokenizer.
Tokenizer argument strings
Tokenizer callback used by implementation of highlight() function.
Tokenizer creation arguments
Tokenizer cursor open on zDoc/nDoc
Tokenizer for this cursor.
Tokenizer for this table
Tokenizer implementation
Tokenizer implementations will typically add additional fields
Tokenizer module methods object
Tokenizer to add exceptions to
Tokens are also used as part of an expression.
Tokens are divided into AND/NEAR clusters.
Tokens as defined by rfc 2616.
Tokens count up to end of this phrase
Tokens must have a non-zero length.
Tokens to the left of first highlight
Tokens to the right of last highlight
Tokens:  STREAM-START(utf-8) DOCUMENT-START SCALAR("a scalar",single-quoted) DOCUMENT-END STREAM-END  3.
Too lazy to use getconf
Too much work required, give up
Too short of an encoded string generated
Top and bottom range constraints
Top of a loop checking foreign keys
Top of the co-routine
Top of the delete loop
Top of the index fill loop
Top of the input loop
Top of the loop for inserting rows
Top of the rowid change constraint check
Top of the step-6 loop
Top of the update loop
Total amount of payload
Total bytes in all opened PMAs
Total bytes of data (incl.
Total bytes of space to allocate
Total bytes sent to client
Total bytes that could not be allocated
Total cache hits, misses and writes
Total cost of this path
Total cost of this path ignoring sorting costs
Total internal fragmentation
Total leaves written to level 0
Total length of file in bytes
Total number of I/O Errors
Total number of allocations
Total number of arguments
Total number of blocks read
Total number of bytes in the record
Total number of bytes on a page
Total number of calls to malloc
Total number of columns in the index
Total number of entries in hash table
Total number of ordered columns in the index
Total number of pages in apHash
Total number of pages in database file
Total number of pages restored from journal
Total number of pages to copy
Total number of phrase instances
Total number of rows in FTS table
Total number of segments
Total number of segments on level
Total number of tokens in cluster
Total number of tokens in row
Total of all malloc calls - includes internal frag
Total overflow pages used by doclists
Total pages involved in the balance
Total record (payload) size
Total segments in this structure
Total size in bytes of journal file pJrnl
Total size of allocated shared memory
Total size of allocation
Total size of data in a buffer
Total size of iBestCol in tokens
Total size of one pcache line
Total size of the database file
Total sizes of each column
Total space in bytes required on leaf
Total time spent executing this instruction
Trace sqlite3VdbeAddOp() calls
Trace this connection
Tracing incref/decref can be very noisy
Tracing routines for the RtreeSearchPoint queue
Traditionally, we return -2 here (meaning "NotImplemented") anytime we hit the above condition.
Trailing slashes are allowed.
Trailing values to read from sorter
Trangle filter, default radius 1
Transactions commit when a frame is written that contains a commit marker.
Transactions still work if synchronous is off, and the database cannot be corrupted if this program crashes.
Transcoding engine logic
Transfer all bindings from the first statement over to the second.
Transfer content from the second pLoop into the first.
Transfer error message text from an sqlite3_vtab.zErrMsg (text stored in memory obtained from sqlite3_malloc) into a Vdbe.zErrMsg (text stored in memory obtained from sqlite3DbMalloc).
Transfer the FROM clause terms from the subquery into the outer query.
Transfer the biggest amount that fits both
Transfer the contents of pFrom to pTo.
Transfer the first field to the output
Transfer the next row in Queue over to Current
Transfer-Encoding: chunked
Transform a UTF-8 integer literal, in either decimal or hexadecimal, into a 64-bit signed integer.
Transform as many times as possible.
Transform so that bit0 indicates whether we have a UTF-8 leading byte or not.
Transform the 2-by-2 submatrix to standard Schur form, and compute and store the eigenvalues.
Transform this into an alias to the result set
Transforms state based on block.
Transient list of dirty pages
Transient list of dirty sorted by pgno
Transient storage for serial_type in OP_MakeRecord
Transient tables are used to hold the results of a sub-query that appears instead of a real table name in the FROM clause  of a SELECT statement.
Transitions between states above are determined by tokens extracted from the input.
Transitive constraints
Translate JSON formatted string into raw text
Translate None to NULL
Translate UTF-8 to UTF-8.
Translate a single UTF-8 character.
Translate a single byte of Hex into an integer.
Translate a string containing an fts5vocab table type to an  FTS5_VOCAB_XXX constant.
Translate divisors into multiples of smaller units.
Translate error code to string        *
Translate from TK_xx operator to WO_xx bitmask.
Translate from this opcode to the end
Translate it into a src coord and update src_index
Translate the P4.pExpr value for an OP_CursorHint opcode into text that can be displayed in the P4 column of EXPLAIN output.
Translate the return values from the Source object: 0 is EOF, -1 is error
Translate the schema name in zDb into a pointer to the corresponding schema.
Translate to dst origin (0,0)
Transliterator functions
Trap attempts to add methods to Numeric objects.
Trash all content in the buffer being freed
Traverse constant namespace and find +classpath+ for _klass_.
Traverse index files list.
Traverse it, filling the return array.
Traverses linked list.
Treal FFT passes fwd and bwd.
Treat None the same as NULL
Treat ORA-1010 as a successful Ping
Treat US-ASCII as utf_8
Treat as a non-capturing bracket.
Treat empty input file as fatal error
Treat the empty string as generic units
Treat zero-dimensional as shape (1,)
Tree contains a TK_COLLATE operator
Tree contains a TK_SELECT operator
Tried recording a search set for qh_findhorizon.
Tried to use PyOS_stricmp, but that function appears to be broken, not even matching the strcmp function signature as it should.
Tries to convert 'o' into an npy_intp interpreted as an index. Returns 1 if it was successful, 0 otherwise.
Tries to expand a single brace.
Trigger Name    Table Name
Trigger being finished
Trigger definition to return
Trigger name for error reporting
Trigger the UPDATEIFCOPY if necessary
Trigger this program was coded from
Trigger under construct by a CREATE TRIGGER
Triggers are disabled while running this DELETE, but foreign key actions are not.
Triggers are handled separately because a trigger can be created in the temp database that refers to a table in another database.
Triggers do not normally coordinate their activities, but we do need to coordinate the loading and saving of autoincrement information.
Triggers may access values stored in the old.* or new.* pseudo-table.
Trim bounds and remove unnecessary variables
Trim off trailing whitespace characters
Trim trailing backslash character
Trim whitespaces in interpreter name
Trivial empty date range
True (1) if Y,M,D are valid
True (1) if h,m,s are valid
True (1) if iJD is valid
True (1) if tz is valid
True : This month, day, year arguments are valid
True after i'th new page is populated
True after initialization has finished
True after malloc is initialized
True after mutexes are initialized
True after snippet is shifted
True after sqlite3_declare_vtab() is called
True after xBegin but before xCommit/xRollback
True because of CursorMoveto() call above
True exponent is either not used or is well-formed
True for "ORDER BY rowid DESC"
True for "ORDER BY rowid DESC" queries
True for "patchset", 0 for "changeset"
True for 'notindexed' columns
True for DESCENDING sort order
True for FTS4, false for FTS3
True for ORDER BY ASC
True for SQLITE_PRINTF_SQLFUNC
True for UPDATE that affects rowid
True for UPDATE, False for INSERT
True for a "natural" join
True for a lookup only
True for a prefix iterator
True for a prefix search
True for a prefix term
True for a read-only database
True for a read-only page
True for a root-only reader
True for a savepoint rollback
True for a write lock
True for an RBU vacuum handle, or false otherwise.
True for an UPDATE or DELETE
True for an ephemeral table
True for an infix function: LIKE, GLOB, etc
True for an update, false otherwise
True for descending docids
True for descending rowid order
True for final fragment in snippet
True for first term on page
True for first term on the node
True for highlighted terms
True for json_tree().
True for min() and max() aggregates
True for native byte-order checksums
True for native byte-order, false for non-native
True for one-pass algorithm without the FIFO
True for patchset, false for changeset
True for recursive reference in WITH
True for reverse-order IN operations
True for rowid tables.
True for select lists like "count(*)"
True for statements that do not write
True for statements that read
True for temp files (incl.
True for threadsafe connections
True for toupper(), false for tolower()
True for unindexed columns
True for without rowid
True for xCreate, false for xConnect
True global resources - no need for thread safety here
True globals (no need for thread safety
True globals (no need for thread safety)
True globals, no need for thread safety
True globals, written only at process startup
True if " " flag is present
True if "#" flag is present
True if "+" flag is present
True if "-" flag is present
True if "l" flag is present
True if *pRowid really is in the table
True if EXPLAIN present on SQL command
True if I/O errors persist
True if IDLIST is in table order
True if IPK can be equal to maxKey False if IPK must be strictly less than maxKey
True if OP_Affinity has been run already
True if ORDER BY rank
True if REPLACE conflict resolution might happen
True if REPLACE is used to resolve INT PK conflict
True if RHS must be unique
True if RTree holding integer coordinates
True if RTree holds integer coordinates
True if RowSet.pEntry is sorted
True if SQLITE_BUSY has been encountered
True if UNIQUE and NOT NULL for all columns
True if WAL file exists
True if a header read failed
True if a journal file is present
True if a locking error has occurred
True if a lookup of a single entry.
True if a m-j name has been written to jrnl
True if a new wal-index header is loaded
True if a non-constant constraint is seen
True if a periodic sample
True if a plan with no prereqs seen
True if a shared lock has ever been held
True if a table requiring integer keys
True if a temp table was used
True if a transaction is opened
True if a warnning has been issued
True if a write cursor
True if aOverflow is valid
True if all changes are indirect
True if all rows are being deleted
True if all terms are at the same rowid
True if an IN operator is seen
True if an equality comparison has been seen
True if an error has been encountered
True if an incremental I/O handle
True if analyzing arguments to an agg func
True if any page has PGHDR_NEED_SYNC
True if any part of database file changed
True if argument iFrom is valid
True if arguments are desc
True if at End Of Results
True if at end of search
True if attempting to append
True if attempting to delete from a view
True if attempting to insert into a view
True if auto-vacuum is enabled
True if blob 'hint' has been modified
True if buffer zTerm must be copied
True if cache is purgeable
True if cache must be reset
True if callback data is initialized
True if cell coverage checking should be done
True if checksums in WAL are big-endian
True if constraint checking is deferred till COMMIT
True if constraints are supported
True if copy of key made on insert
True if current change was indirect
True if current operation is a delete
True if currently recording
True if cursor is at EOF
True if db currently has pBt locked
True if decimal point should be shown
True if distoutside is defined
True if docids are descending
True if doclist is loaded incrementally
True if doclists are in reverse order
True if entry is not a match
True if error has occurred, else false
True if errors are benign
True if field width constant starts with zero
True if for internal use only
True if foreign key processing is required
True if fts5yymajor has invoked an error
True if getNextNode() sees a unary -
True if heap is nearly "full" where "full" is defined by the sqlite3_soft_heap_limit() setting.
True if holding a checkpoint lock
True if holding the unixShmNode mutex
True if holding the winShmNode mutex
True if iDocid is valid
True if iPrev is valid
True if iRoot is the root of an index b-tree
True if in a normal write operation
True if in a write transaction
True if incr-vacuum is enabled
True if info.nKey is valid
True if input contains UTF16 with high byte non-zero
True if inside sqlite3_declare_vtab()
True if integer overflow seen
True if intkey flag is set
True if is an aggregate function
True if iterator is "rowid DESC"
True if journal file exists
True if journal page is synced
True if last 0x00 counts
True if last operation was a delete
True if lastRowid is valid
True if leaf flag is set
True if looking for a VIEW rather than a TABLE
True if low on PAGECACHE memory
True if next rowid is first in doclist
True if next rowid is first in page
True if next term will be first in leaf
True if no such function exists
True if non-integer value was input to the sum
True if not checked out
True if offset overflows
True if ok to populate
True if one or more PMAs created
True if only the inner-most loop is ordered
True if opening an ephemeral, temporary database
True if outer SELECT uses aggregate functions
True if output is already ordered
True if p is a compound select
True if pDest has a UNIQUE index
True if pList should be sqlite3_free()d
True if pPage is a leaf of a LEAFDATA tree
True if pParent is a root-page
True if pStart obtained from sqlite3_malloc()
True if pWith should be freed with parser
True if pages are on backing store
True if plan uses IN(...) operator
True if pointing to a row with no data
True if prepared with prepare_v2()
True if previously initialized.
True if qhull should free points in qh_freeqhull() or reallocation
True if rbu_count exists
True if reading to end of data
True if really sorted (not just grouped)
True if records are patchset records
True if rerunning after an auto-reprepare
True if resizeIndexObject() has been called
True if resolved to a trigger column
True if resolving a partial index WHERE
True if resolving columns of CREATE INDEX
True if resolving names in a CHECK constraint
True if rowid is UPDATEd
True if rowid is modified by this update
True if sPoint is valid
True if satisfies ORDER BY
True if second change is indirect
True if some process holds a RESERVED lock
True if sorter record includes seq.
True if sqlite3RowSetNext() has been called
True if sqlite3_free(idxStr) is needed
True if sqlite3_interrupt has been called
True if src db requires unlocking
True if statement may modify/insert multiple rows
True if statement may throw an ABORT exception
True if sub-query is correlated
True if table b-trees.
True if table-valued-function syntax
True if the "ll" flag is present
True if the AUTOINCREMENT keyword is present
True if the DISTINCT keyword is present
True if the EXPLAIN flag is found on the query
True if the GROUP BY and ORDER BY are the same
True if the NOT keyword is present
True if the OP_Affinity operation has been run
True if the TEMPORARY keyword is present
True if the VM needs to be recompiled
True if the conversion to IN is valid
True if the delete flag is set
True if the doclist is desc
True if the insert is likely to be an append
True if the leaf of an intKey table
True if the loop has UNIQUE NOT NULL columns
True if the node needs to be written to disk
True if the outermost savepoint is a TS
True if the output segment is the oldest
True if the previous character was 'escape'
True if the previous character was uEsc
True if the subquery uses aggregate functions
True if the table is not BTREE_UNORDERED
True if the terms are equal
True if the transaction counter changed
True if the underlying table is BTREE_UNORDERED
True if the value to convert is signed
True if there are one or more Incrblob cursors
True if there are triggers or FKs or subqueries in the WHERE clause
True if there exists a MATCH constraint
True if there exists a hot journal-file
True if there is a NOT INDEXED clause
True if there is a doclist-index
True if there is a trailing "*"
True if there is an INDEXED BY clause
True if this call is part of a bulk load
True if this change is "indirect"
True if this constraint is on docid
True if this constraint is usable
True if this cursor is at EOF
True if this expression is entirely deferred
True if this expression is reusable
True if this frame is valid
True if this is a TEMP table
True if this is a VIEW
True if this is a VIRTUAL table
True if this is a commit
True if this is a covering index
True if this is a patchset
True if this is a read-only file
True if this is an OUTER join
True if this is an UPDATE operation
True if this is an in-memory file
True if this is likely an append
True if this is likely to be an append
True if this is the first term written
True if this op is a delete
True if this page stores data
True if token ends with a "*" character
True if token must appear at position 0
True if trailing zeros should be removed
True if uppercase is equivalent to lowercase
True if uses a statement journal
True if vacuuming a :memory: database
True if value is extracted from pExpr
True if we acquired a PENDING lock this time
True if we are at the end of input
True if we are evaluating an out-of-memory callback.
True if we can share pBt with another db
True if we have seen a malloc failure
True if we need to scan in reverse order
True if we use the index only
True if wrong number of arguments
True if xText is allocated space
True if yymajor has invoked an error
True if zBuf is static space
True if zTerm/nTerm is transient
True in "cleanup" state
True once a write-transaction is open on pDest
True once an index has been found
True once backup has been registered with pager
True once iDelta has been written
True this expression is at EOF already
True to accumulate patchsets
True to allow FTS4-only syntax
True to auto-attach tables
True to cause the name to be dequoted
True to copy SQL text into the sqlite3_stmt
True to count changes
True to count the table
True to defer constraints
True to dequote pCollName
True to disable the incremental doclist optimization.
True to disable triggers
True to enable core mutexing
True to enable full mutexing
True to enable memory status
True to enable tracing
True to enable triggers
True to extend file if necessary
True to fail EXCLUSIVE locks
True to fail localtime() calls
True to flush contents of memory to PMA
True to grab the global stats
True to hash the new.* PK
True to ignore empty segments
True to ignore xSavepoint invocations
True to inhibit all file I/O
True to interpret filenames as URIs
True to iterate in reverse order
True to omit locking primitives
True to omit the xSync on the db file
True to omit this if found
True to reset page prior to first page rollback
True to run in heap-memory mode
True to run the ORDER BY search loop
True to save SQL text into the sqlite3_stmt
True to scan from zTerm to EOF
True to seek past initial nulls
True to skip deleted entries
True to sort in descending order
True to store descending indexes
True to trace VDBE execution
True to trace changes
True to truncate WAL file on commit
True to truncate db on commit
True to unlink wal and wal-index files
True to update the change-counter
True to use a bg thread for this object
True to use background threads
True to use in-memory sub-journals
True to use onepass strategy
True to use prefix-indexes
True when processing first term on page
True when updating a view (INSTEAD OF trigger)
True while initialization in progress
True, if new facet is already in hash chain
Truncate WAL to this size on reset
Truncate WAL to this size upon reset
Truncate an open file to a specified size
Truncate an rbuVfs-file.
Truncate file if the amount of new data is smaller than the existing data set.
Truncate name to next format code or end of string
Truncate the in-memory database file image to nPage pages.
Truncate to the month
Truncate very long tokens to this many bytes.
Truncates the file to +length+ bytes.
Truth values are determined as usual: 0 is false, everything else is true.
Try 3 times to get the pending lock.
Try all three types of maps, but start with the specified one
Try and cache the script and assume that it is returned from_shared_memory.
Try and decide whether rounding is done in the  IEEE  'round to nearest' style.
Try and get headers again
Try and guess for non-wsdl clients and servers
Try convert to number.
Try converting the object to a descr
Try it as a keyword type.
Try long long before unsigned long long
Try not to output two rows that duplicate these
Try object's handlers.
Try some tricks to see whether or not this is the correct  E PS.
Try some tricks to see whether or not this is the correct  EPS.
Try the cascade of possible indices
Try the directory given as parameter.
Try the next larger type of this kind
Try to ORDER BY the result set to make distinct processing easier
Try to allocate huge pages first to reduce dTLB misses.
Try to allocate nByte bytes of 8-byte aligned bulk memory for pBuf from the ReusableSpace object.
Try to also make it a MEM_Int if we can.
Try to atomically set the new list head to be our node.
Try to avoid a seek in BtreeInsert()
Try to avoid checking for flags, width or precision
Try to back-off and guess if this is the last block allocated
Try to catch bad usage without preventing flexibility
Try to convert a value into a numeric representation if we can do so without loss of information.
Try to convert the type of a function argument or a result column into a numeric representation.
Try to create a new linked list head here.
Try to create intermediate directory
Try to dereference the start and end of the memory region Catch segfault and report error if it occurs
Try to determine whether text is in some character code we can identify.
Try to do make the outersize as big as possible.
Try to expand the master using the newly freed chunk
Try to fetch class and then find static method.
Try to fetch find static method of given class.
Try to find .htpasswd in requested directory.
Try to find class directly
Try to find out if this is an anchored regular expression.
Try to find the next page in the overflow list using the autovacuum pointer-map pages.
Try to flatten subqueries in the FROM clause up into the main query
Try to get a stream with the registered sockops for the protocol in use We don't want streams to actually *do* anything though, so don't give it anything apart from the protocol
Try to get by with floating-point arithmetic.
Try to get the dll name from the environment
Try to get the file to memory map
Try to get the list of substrings and display a warning if failed.
Try to hit the cache first
Try to increase the size of the parser stack.
Try to insert a new prerequisite/cost entry into the WhereOrSet pSet.
Try to interpret axis as an integer
Try to iterate over the tree until we find item with description/mimetype.
Try to keep nFreeSlot above this
Try to load demoin.png and paste part of it into the output image.
Try to load the dll from the PATH...
Try to look in the scope instead
Try to lookup the cached regex entry, and if successful, just pass back the compiled pattern, otherwise go on and compile it.
Try to match the ORDER BY expression against an expression in the result set.
Try to minimize cache effects of the I/O to and from this file.
Try to obtain a lock of type locktype on the database file.
Try to obtain a page from the cache.
Try to open on pSnapshot when the next read-transaction starts
Try to provide a memory barrier operation, needed for initialization and also for the implementation of xShmBarrier in the VFS in cases where SQLite is compiled without mutexes.
Try to pull the page from the write-ahead log.
Try to query the width by sending the cursor as far to the right and reading back the cursor position.
Try to read the wal-index header.
Try to recycle a page.
Try to restore access, modification times if read it.
Try to return memory used by the pcache module to the main memory heap
Try to set CURSOR_TYPE to dynamic.
Try to treat op as a list of lists
Try to use old VS_PROFILER variable
Try to use the measurement cache.
Try to use the specified logging location.
Try to write in a value to indicate that the data is being written.
Try: HOME, HOMEDRIVE + HOMEPATH and USERPROFILE environment variables TODO: Special Folders - Profile and Personal
Trying the object version of logical_or on float arguments doesn't seem right.
Trying to clean up the stack may not be safe in this case.
Trying to close a file that has already been closed causes an +IOError+ to be raised.
Trying to do so otherwise will result in an error.
Trying to read or write past the end of the data is an error
Trying to read or write past the end of the data is an error.
Tuneable horizontal and vertical resolution in dots per inch
Turn a SELECT statement (that the pSelect parameter points to) into a trigger step.
Turn a relative pathname into a full pathname.
Turn bulk memory into a RowSet object.
Turn bulk memory into a hash table object by initializing the fields of the Hash structure.
Turn off floating point exceptions for divide by zero, etc.
Turn parser tracing on by giving a stream to which to write the trace and a prompt to preface each trace message.
Turn the pExpr expression into an alias for the iCol-th column of the result set in pEList.
Turn the two items into three for the inner loop
Turning on FIPS mode will obviously only have an effect for FIPS-capable installations of the OpenSSL library.
Turns out that wasn't a keyword after all.
Tweak the strides for 0-dim and broadcasting cases
Twelve of these alternating 29-30 day months gives a year of 354 days, which is about 11 1/4 days short of a solar year.
Two BigDecimals with equal sign, fractional part and exponent have the same hash.
Two NULL pointers are considered to be the same.
Two NULL values are considered equal by this function.
Two NULL values are considered equal, and NULL is considered distinct from all other values.
Two UNIQUE or PRIMARY KEY constraints are considered equivalent (and thus suppressing the second one) even if they have different sort orders.
Two bytes are required in the output buffer for the nul-terminator.
Two conditions must be met before writing to the database files.
Two constants are defined:  Zlib::DEF_MEM_LEVEL Zlib::MAX_MEM_LEVEL  The +strategy+ sets the deflate compression strategy.
Two copies of the header content
Two eigenvalues deflated.
Two elements in the vector are set for each substring: the offsets to the start and end of the substring.
Two local variables for possessive quantifiers (char1 cannot use them).
Two lots of padding:  Pad the first block to 64 bytes
Two of six logical functions used in SHA-256, SHA-384, and SHA-512:
Two of the file mapping APIs are different under WinRT.
Two or more AND-connected terms
Two or more OR-connected terms
Two or more indexes share the same root page.
Two problems why we throw exceptions here: PHP is typeless and hence passing one argument that's not an array could be by mistake and the other way round is possible, too.
Two routines for printing the content of an sqlite3_index_info structure.
Two salt values copied from WAL header
Two variations on the public interface for closing a database connection.
Two versions of the official API.
Two versions of the same checksum are calculated.
Two writes per page are required in step (3) because the original database content must be written into the rollback journal prior to overwriting the database with the vacuumed content.
Two-byte-character lead-byte followed by a trail-byte.
Type SegmentNode is used by the following three functions to create the interior part of the segment b+-tree structures (everything except the leaf nodes).
Type code for object to destroy
Type entries can be between 1 and 5 bytes each.
Type name follows column name
Type of expression node pExpr
Type of incoming call
Type of join between this able and the previous
Type of join between this table and the previous
Type of lock currently held on this file
Type of node in this tree
Type of test to make on this file
Type of the array "element" for the bitmap representation.
Type of the container - used for error messages
Type of the new cursor
Type of top-level element
Type of value (SQLITE_NULL, TEXT etc.)
Type of value from change record
Type passed as 4th argument to SegmentReaderIterate()
Type resolution and inner loop selection functions
Type values for all entries in the record
Type2: ldrsb, ldrh, ldrsh
TypeError:: If the +digits+ is not an Integer, this exception is raised.
Types 10 and 11 are currently "reserved for future  use", so it doesn't really matter what the results of comparing them to numberic values are.
Types and lists for handling lists of case mappings.
Types of VDBE cursors
Types with fields need the Python C API for field access
Typical use cases for RSA encryption involve "wrapping" a symmetric key with the public key of the recipient who would "unwrap" that symmetric key again using their private key.
Typically the OP_Permutation should  occur immediately prior to the OP_Compare.
Typically there will be multiple TK_SELECT_COLUMN nodes with the same pLeft pointer to the pVector, but only one of them will own the pVector.
Typically used for securely deriving arbitrary length symmetric keys to be used with an OpenSSL::Cipher from passwords.
Typically, the key length should be larger than or equal to the output length of the underlying digest function, otherwise an attacker could simply try to brute-force the key.
Typically, this method is overridden in descendant classes to provide class-specific meaning.
Typo: kept for backward compatibility.
U       (input/output) DOUBLE PRECISION array, dimension (LDU, N) On entry, an NRU-by-N matrix U.
U       (input/output) REAL array, dimension (LDU, N) On entry, an NRU-by-N matrix U.
U      (input) DOUBLE PRECISION array, dimension ( LDU, SMLSIZ ).
U      (input) DOUBLE PRECISION array, dimension (LDU, N) The last N - K columns of this matrix contain the deflated left singular vectors.
U      (input) REAL array, dimension ( LDU, SMLSIZ ).
U      (input) REAL array, dimension (LDU, N) The last N - K columns of this matrix contain the deflated left singular vectors.
U      (input/output) REAL array, dimension(LDU,N) On entry U contains the left singular vectors of two submatrices in the two square blocks with corners at (1,1), (NL, NL), and (NL+2, NL+2), (N,N).
U      (output) DOUBLE PRECISION array, dimension at least (LDQ, N) On exit, U contains the left singular vectors.
U      (output) REAL array, dimension at least (LDQ, N) On exit, U contains the left singular vectors.
U+4D00-9FFF CJK Unified Ideographs (+ Extension A)
U+F900-FA2F CJK Compatibility Ideographs
U+FDD0-U+FDEF (nonchars) disallowed
U+FE50-FE6F Small Form Variants
U+FF00-FFFF HW/FW Forms
U2     (input) DOUBLE PRECISION array, dimension (LDU2, N) The first K columns of this matrix contain the non-deflated left singular vectors for the split problem.
U2     (input) REAL array, dimension (LDU2, N) The first K columns of this matrix contain the non-deflated left singular vectors for the split problem.
U2 is arranged into four blocks.
UCD_BLOCK_SIZE must be 128 (see the assert below).
UColAttribute constants
UColAttributeValue constants
UDateFormatStyle constants
UFUNC_API  On return, if errobj is populated with a non-NULL value, the caller owns a new reference to errobj.
UFUNC_API  This function applies the default type resolution rules for the provided ufunc.
UFUNC_API  This generic function is called with the ufunc object, the arguments to it, and an array of (pointers to) PyArrayObjects which are NULL.
UFUNC_API  Validates that the input operands can be cast to the input types, and the output types can be cast to the output operands where provided.
UI-OSF Application Platform Profile for Japanese Environment Version 1.1
UID must be set last.
ULocDataLocaleType constants
UNDEF signals that the previous result is an effective double cast, this is only allowed if this instruction would have done the cast anyway (previous check).
UNICODE_NORMALIZATION
UNIQUE           REPLACE      The other row that conflicts with the row being inserted is removed.
UNIQUERYWITHOUTERELEASEATTACHAVINGROUPDATEBEGINNERECURSIVE
UNIX compatible directory access functions for NT
UNIX password, and DES, encryption.
UNROLLED TRANSFORM LOOP NOTE: You can define SHA2_UNROLL_TRANSFORM to use the unrolled transform loop version for the hash transform rounds (defined using macros later in this file).
UNUSED_DEST is not set when no flags should be set.
UNumberFormatAttribute
UNumberFormatPadPosition
UNumberFormatRoundingMode
UNumberFormatStyle constants
UNumberFormatTextAttribute
UPDATE and DELETE statements must identify their target rows by  non-NULL PRIMARY KEY values.
UPDATE statements may not modify PRIMARY KEY columns.
UPDATE:  The assert() below is not necessarily true if the database file is corrupt.
UPDATE: It is actually possible for the condition tested by the assert below to be untrue if the database file is corrupt.
UPDATEIFCOPY means that base points to an array that should be updated with the contents of this array upon destruction.
UPLO    (input) CHARACTER*1 Specifies whether the upper or lower triangular part of the hermitian matrix A is to be referenced.
UPLO    (input) CHARACTER*1 Specifies whether the upper or lower triangular part of the symmetric matrix A is to be referenced.
UPLO   - CHARACTER*1.
URI filenames are parsed according to RFC 3986.
URL encode session_name and id because they might be user supplied
URL is http://php.net or like
URL-decode input buffer into destination buffer.
US-ASCII automatically extended to ASCII-8BIT
US-ASCII case folding still applies.
USAGE  The API declared below allows an application to apply an RBU update  stored on disk to an existing target database.
USERLAND (nearly 1:1 of old output.c)
USE_BACKREF_WITH_LEVEL
USE_CAPITAL_P_NAMED_GROUP
USE_COMBINATION_EXPLOSION_CHECK
USE_CRNL_AS_LINE_TERMINATOR
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE
USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT
USE_NATIVE_THREAD_PRIORITY
USE_POSIX_API_REGION_OPTION
USE_SHARED_CCLASS_TABLE
USE_SLEEPY_TIMER_THREAD
USE_SUNDAY_QUICK_SEARCH
USE_UNICODE_PROPERTIES
USE_VARIABLE_META_CHARS
UTF-16 encoded SQL statement.
UTF-16 surrogate values are illegal in UTF-32
UTF-16-BE Encoding with BOM
UTF-16-LE Encoding with BOM
UTF-8 encoded SQL statement.
UTF-8 has been restricted to max 4 bytes since RFC 3629
UTF-8 leading bytes have either 0xxxxxxx or 11xxxxxx bit representation.
UTF-8 quick four-byte mask: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx Encoding allows to encode U+00010000..U+001FFFFF The maximum character defined in the Unicode standard is U+0010FFFF.
UTF16 with high-order bytes non-zero
Ugly fix for HTTP_PROXY issue, see bug #72573
Unable to edit this page.
Unable to flatten compound queries
Unable to open the database file
Unable to register shutdown function, presumably because of lack of memory, so flush the session now.
Unable to resolve the real path, return -1
Unaligned read is supported.
Unaligned read is unsupported or in 32 bit mode.
Unaligned space available
Unbind the value bound to variable i in virtual machine p.
Unbound methods can only be called after they are bound to an object.
Unbuffered queries should not be a problem as we won't allow sending COM_CHANGE_USER.
Uncommitted Hash table changes
Uncommon, but possible.
Unconditional branch.
Unconditionally destroy existing array -- possible dirty data
Undefine sljit macros.
Undefine some potentially clashing cpp symbols
Undefine symbol remains
Undefined hues always match...
Under BSD, emulate fopencookie using funopen
Under LinuxThreads, a lock created by thread A cannot be modified or overridden by a different thread B.
Under MSVC, this NaN test may fail if compiled with a floating- point precision mode other than /fp:precise.
Under Unix, also make sure that the directory entry for the file has been created by fsync-ing the directory that contains the file.
Under certain circumstances, b-tree nodes (doclists) can be loaded into memory incrementally instead of all at once.
Under memory stress, invoke xStress to try to make pages clean.
Under normal circumstances you do not need to call this method (and probably shouldn't).
Under the assumption that input will be rounded nearest, mode 0 renders 1e23 as 1e23 rather than 9.999999999999999e22.
Under this condition, this method returns any element whose index is within i...j.
Underflow is harmless if the input data is 0 or exceeds underflow_threshold / macheps.
Underlying file handle
Underlying file is readonly
Underscore is covered by ucp_P or ucp_Po.
Understand basic ctypes
Understand ctypes structures -- bit-fields are not supported automatically aligns
Undo any changes made by applyAffinity() to the input registers.
Undo any frames written (but not committed) to the log
Undo balancing of left eigenvectors (CWorkspace: none) (RWorkspace: need N)
Undo balancing of left eigenvectors (Workspace: need N)
Undo balancing of right eigenvectors (CWorkspace: none) (RWorkspace: need N)
Undo balancing of right eigenvectors (Workspace: need N)
Undo scaling if necessary
Undo the NUL-termination kindly provided by process() but leave at least one byte to look at
Undo the effects of sqlite3_initialize().
Undo the hack that converts floating point types to integer for builds on processors without floating point support.
Undo the speculative increase.
Unfortunately SystemTimeToVariantTime function always ignores the wMilliseconds of SYSTEMTIME struct.
Unfortunately VariantTimeToSystemTime always ignores the wMilliseconds of SYSTEMTIME struct(The wMilliseconds is 0).
Unfortunately we cannot tell whether a name is a duplicate in the first pass, so we have to allow for more memory.
Unfortunately, both are within their rights.
Unfortunately, doesn't behave the same way as fopen()...
Unfortunately, it is often rather easy to fool ::getlogin.
Unfortunately, it is too late to change this without breaking compatibility, so we just have to live with the mistake.
Unfortunately, it needs a work array to hold the best-distance-so-far for each histogram cell (because the inner loop has to be over cells, not colormap entries).
Unfortunately, that typedef is not available on all compilers, or if it is available, it requires an #include of specific headers that vary from one machine to the next.
Unfortunately, there's no clean and portable way in C to pass arguments to a variadic function if you don't know the number of arguments at compile time.
Unfortunately, we can't release native threading resource at fork because libc may have unstable locking state therefore touching a threading resource may cause a deadlock.
Unicode character database.
Unified socket address.
Unimplemented version 3 methods
Uninstall ocaml's segfault handler.
Union of locks held by connections other than "p"
Union to read bytes in 32 (intel) bits registers
Unique file ID for vxworks.
Unique file ID logic used by VxWorks.
Unique index on parent key columns in pTab
Universal Time (GMT), the North American timezones (PST, PDT, MST, MDT, CST, CDT, EST, EDT) and the +/-hhmm offset specifed in RFC-822 should be supported.
Unix Standard tar archive
Unix cannot, but some systems may return SQLITE_FULL from here.
Unix file with file desc used in the key
Unix passed away at the age of 11 1/2 on September 14, 1996, 12:18 PM PDT, after a two-month bout with cirrhosis of the liver.
UnixWare and Netware define shutdown to _shutdown, which causes problems later on when using a structure member named shutdown.
Unknown encode/decode
Unknown growth direction.
Unknown opcode in sqlite3_file_control()
Unless  activated, none of the CEROD routines will work.
Unless  activated, none of the SEE routines will work.
Unless  the database name is "temp" anyway.
Unless Trust_FLT_ROUNDS is also #defined, fegetround() will be queried for the rounding mode.
Unless an "EXPLAIN QUERY PLAN" command is being processed, this function is a no-op.
Unless an error has occurred, register numbers are always positive.
Unless an error is encountered, SQLITE_OK is returned.
Unless an error occurs, the following loop runs one iteration for each page in the B-Tree structure (not including overflow pages).
Unless disabled, check whether any single character iterators can be auto-possessified.
Unless it is NULL, apply affinity aff (one of the SQLITE_AFF_* constants) to the value before returning it.
Unless it is NULL, argument zSql points to a buffer allocated using sqlite3_malloc containing an SQL statement.
Unless it is NULL, the argument must be an UnpackedRecord object returned by an earlier call to sqlite3Stat4ProbeSetValue().
Unless it is empty, flush the hash table to disk
Unless one is already present or an error occurs, an entry is added to the changed-rows hash table associated with table pTab.
Unless the SQLITE_Vacuum flag is set, this block generates code to make that determination.
Unless the argument nochdir is true (i.e. non false), it changes the current working directory to the root ("/").
Unless the argument noclose is true, daemon() will redirect standard input, standard output and standard error to /dev/null.
Unless the database is sharable and unlocked, then BtShared.db should already be set correctly.
Unless the pager is (or recently was) in exclusive-locking mode, a user-level read transaction is  open.
Unless the pager is in noSync mode, the journal file was just  successfully synced.
Unless the table has an external primary key index  (i.e. unless *peType is set to 3), then *piPk is set to zero.
Unless this extension is currently being used by a version of SQLite too old to support estimatedRows.
Unless this extension is currently being used by a version of SQLite too old to support index-info flags.
Unless this is a view, open cursors for the table we are  deleting from and all its indices.
Unless this is a virtual table.
Unless this is an in-memory or temporary database, clear the pager cache.
Unlike Array#flatten, this method does not flatten recursively by default.
Unlike Kernel.rand, when +max+ is a negative integer or zero, +rand+ raises an ArgumentError.
Unlike PyArray_SetBaseObject, we do not compress the chain of base references.
Unlike VdbeRecordCompare(), this function deserializes and compares values using the sqlite3VdbeSerialGet() and sqlite3MemCompare() functions.
Unlike Zlib::Deflate, an instance of this class is not able to duplicate (clone, dup) itself.
Unlike Zlib::GzipFile#close, this method never calls the close method of the associated IO object.
Unlike application-level logging via Logger or Log4r, syslog is designed to allow secure tamper-proof logging.
Unlike in the positive case, where we can set appropriate starting bits for specific high-valued UTF-8 characters, in this case we have to set the bits for all high-valued characters.
Unlike memcmp() this routine is guaranteed to return the difference in the values of the last digit if the only difference is in the last digit.
Unlike most of the SQLite API, this function is not guaranteed to operate consistently from one release to the next.
Unlike send, public_send calls public methods only.
Unlike the SQLite database record format, each field is self-contained - there is no separation of header and data.
Unlike the command parser, the help search is sloppy that is partial matches can occur Any single character key is taken as an alias.
Unlike the grow factor, the shrink factor is scaled relative to the child dimension.
Unlike the xFilter argument, xConflict may not be passed NULL.
Unlikely, but possible
Unlimited UTF-8 repeat
Unlink a VFS from the linked list
Unlink a file within a phar archive
Unlink the chunk at index i from  whatever list is currently a member of.
Unlink the given table from the hash tables and the delete the table structure with all its indices and foreign keys.
Unlink the global (r/o) copies of the class, function and constant tables, and use a fresh r/w copy for the startup thread
Unlink the session from the linked list of sessions attached to the database handle.
Unlock a file region.
Unlock a mutex. A return value of 0 indicates success
Unlock a previously locked region
Unlock all of the btrees previously locked by a call to sqlite3VdbeEnter().
Unlock an rbuVfs-file.
Unlock it and stuff it into our variant
Unlock it here so that this doesn't cause problems for the call to BtreeSetPageSize() below.
Unlock notify callback
Unlock the database file to level eLock, which must be either NO_LOCK or SHARED_LOCK.
Unlock the system-level locks
Unlock-notify cb to invoke
Unmap any pages of the existing mapping that cannot be reused.
Unmap the database file.
Unoptimized, but clear version
Unpack the record and then call BtreeMovetoUnpacked() to do the work.
Unpacked record to return
Unpacked version of key
Unpacked version of new.* record
Unqualified name of the index to create
Unqualified name of the table to create
Unread parts of the buffer must be zero-filled
Unrecognized argument
Unrecognized escapes are faulted if PCRE is running in its strict mode.
Unrecognized escapes fall through and are either treated as literal characters (by default), or are faulted if PCRE_EXTRA is set.
Unregister a VFS so that it is no longer accessible.
Unroll 1 to 3 byte UTF-8 sequences, use loop to handle longer ones.
Unroll last two steps.
Unrolled SHA-256 round macros:
Unrolled SHA-512 round macros:
Unscale and sort the singular values.
Unset ignore SKIP-with-argument.
Unset parameters default to +nil+.
Unsigned for byte-order conversions
Unsigned integer types.
Unsigned loop counter
Unsigned right shift.
Unsorted cost of (pFrom+pWLoop)
Unspecified (probably strm) error, let stream-filter error do its own whining
Until IE's user base drops to nill or problem is fixed this code must remain enabled for all systems.
Until removed outright by https://github.com/numpy/numpy/pull/8187
Until the next token is not found.
Unused (padding) field
Unused and unmodified pages will be recycled when the number of pages in the cache exceeds this soft limit.
Unused arg for sqlite3WhereOkOnePass()
Unused dest is possible here.
Unused file descriptors to close
Unused space within the cell content area is collected into a linked list of freeblocks.
Unwind the stack and return the top-level walk call.
Up to MX_DELETION_ATTEMPTs deletion attempts are run before giving up and returning an error.
Up to nine parameters may be passed.
Updata extra data pointer
Update A(1:n,i) Compute i-th column of A - Y * V'
Update a row in a main table b-tree
Update all nested paths
Update all the previous opcodes to use the same variable
Update allocator performance statistics.
Update and factorize the current diagonal block and test for non-positive-definiteness.
Update and insert operations pass:  1.
Update any backup objects copying the contents of this pager.
Update buffer and return
Update checksum -- must be after transform to avoid fouling up last message block
Update cksum3 with the results.
Update context to reflect the concatenation of another buffer full of bytes.
Update contexts for converter error handlers
Update current hash item with the converted value.
Update dictionary keys in fields
Update for normal brackets of all kinds, and conditions with two branches (see code above).
Update hit_start only in the first time.
Update number of bits
Update only applies if a base register exists.
Update opcodes to use new literals table
Update or delete the input segments
Update our new linked list node, which no one can see yet, to point to the current list head.
Update our pos pointer
Update output hash depending on key type
Update right-hand side
Update session data modification/access time stamp.
Update singular vectors
Update singular vectors if desired
Update singular vectors if desired.
Update statement to modify idx values
Update statements used while promoting segments
Update stats for boxes
Update the 'idx' values of the remaining segments in the level so that the idx values are a contiguous sequence starting from 0.
Update the .nOut value of this loop
Update the Fts5PageWriter.term field.
Update the Fts5Structure.
Update the PCache1.pSynced variable if necessary.
Update the access and modification times of the file.
Update the accumulator memory cells for an aggregate based on the current cursor position.
Update the aggregate accumulators based on the content of the current row
Update the assumed sector-size to match the value used by  the process that created this journal.
Update the contents of the rbu_state table within the rbu database.
Update the count of rows that are inserted
Update the current history entry before to overwrite it with tne next one.
Update the database size and return.
Update the db file change counter via the direct-write method.
Update the global lock state and do debug tracing
Update the in-memory representation of all UNIQUE indices by converting the final rowid column into one or more columns of the PRIMARY KEY.
Update the left singular vector matrix.
Update the lockless linked list of events
Update the maximum rowid for an autoincrement calculation.
Update the message length.
Update the number of fragmented bytes within the page.
Update the page-size to match the value read from the journal.
Update the pager's copy of the change-counter.
Update the pointer-map and meta-data with the new root-page number.
Update the private copy of the header.
Update the raw buffer.
Update the right singular vector matrix.
Update the right-hand side
Update the savepoint values to match.
Update the schema version field in the destination database.
Update the sqlite_sequence table by storing the content of the maximum rowid counter values recorded while inserting into autoincrement tables.
Update the state of the lock has held in the file descriptor then return the appropriate result code.
Update the string pointer to point  just after the number read.
Update the value of the change-counter at offsets 24 and 92 in the header and the sqlite version number at offset 96.
Update the wal-index header to reflect this.
Update the write-counter.
Update trailing submatrix.
Update:  The in-memory journal is also used to temporarily cache smaller journals that are not critical for power-loss recovery.
Updating any meta-data associated with pPg (i.e. data stored in the nExtra bytes allocated along with the page) is the responsibility of the caller.
Upgly hack to fix HTTP_PROXY issue, see bug #72573
Uploaded file exceeded MAX_FILE_SIZE
Uploaded file exceeded upload_max_filesize
Upon every read operation, increase nread by the number of bytes read.
Upon failure, one of SQLITE_NOMEM, SQLITE_ERROR, or SQLITE_NOTFOUND will be returned.
Upon reaching the end of input, call the parser two more times with tokens TK_SEMI and 0, in that order.
Upon success, SQLITE_OK will be returned.
Upon successful completion the Readline.completion_append_character will be appended to the input so the user can start working on their next argument.
Upper Hessenberg matrix
Upper bound on the range.
Upper half of a symmetric band matrix
Upper triangular matrix
Upper-case UTF characters are unchanged.
Usable bytes per page
Usable size of mapped region
Usable size of mapping at pMapRegion
Usable size of the page
Usage Paradigm: The user of this library will typically be implementing either an XMLRPC server, an XMLRPC client, or both.
Use "sqlite3_extension_init" if 0
Use #to_s or #hexdigest to return the authentication code that the instance represents.
Use 'Tc' to check frequently.
Use 'Z' rather than 'A' so that ASCII can be detected on Prime machines, on which ICHAR returns a value with bit 8 set.
Use +ARGF.close+ to actually close the current file.
Use -1 to signal no promoted type found
Use -ve numbers here to co-exist with normal unicode chars
Use DMIN1, DN1 for DMIN and DN.
Use DMIN2, DN2 for DMIN and DN.
Use EXIT_SUCCESS as a witness for stdlib.h.
Use ExprList.u.x.iOrderByCol
Use FromAny to enable checking overlap for objects exposing array interfaces etc.
Use Go to start 4 goroutines each of which handles 1/4 of the board.
Use HTTP/1.1 with "Connection: close" by default
Use Johnk's algorithm
Use Kernel#enum_for or Kernel#to_enum instead.
Use MAKE_REF instruction to replace direct pointer with REFERENCE.
Use NpyIter if the trivial iteration is not possible
Use OCIPing instead of OCIServerVersion.
Use OCIServerVersion for Pre-10.2 clients
Use OP_Copy to make a complete copy.
Use OP_RealAffinity to make sure it is really real.
Use PCRE to trim the header into the right format
Use PyMapping_GetItemString to support dictproxy objects as well.
Use SMALL plus a bit, to avoid the possibility of rou nding causing overflow when computing  1/sfmin.
Use SMALL plus a bit, to avoid the possibility of rounding causing overflow when computing  1/sfmin.
Use SQLITE_ENABLE_COMMENTS to enable generation of extra comments on each VDBE opcode.
Use STAT3 or STAT4 data
Use Selection Sort to minimize swaps of eigenvectors
Use Selection Sort to minimize swaps of singular vectors
Use SorterOpen instead of OpenEphemeral
Use U_MULTIPLE_DECIMAL_SEPARATORS
Use WIN32OLE_RECORD class instead of WIN32OLE_VARIANT if the VT_RECORD variant is needed.
Use WIN32OLE_TYPELIB.new(typelib).ole_classes instead.
Use __array_wrap__ on all outputs if present on one of the input arguments.
Use a 4-tuple that numpy 1.6 knows how to unpickle
Use a Level 1 BLAS solve, scaling intermediate results.
Use a PKCS5 v2 key generation method from OpenSSL::PKCS5 instead.
Use a Python float as the canonical type being added
Use a different family local address if no choice, this will cause EAFNOSUPPORT.
Use a different name to avoid a collision when building an amalgamation with built-in FTS3.
Use a full-text search.
Use a macro in all other compilers so that the function is inlined
Use a new PGroup for each PCache
Use a real function in MSVC to work around bugs in that compiler.
Use a recursive mutex if it is available
Use a rollback journal on this file
Use a slightly smaller number to allow for a few compiler-allocated temporary stack slots.
Use a static buffer to store the aligned/cast version, or allocate some memory if more space is needed.
Use a testcase() macro to make sure that malloc failure within  PagerSetPagesize() is tested.
Use a tmpfile and copy the old streams contents into it
Use a value of 0 to disable any limit on the number of terms in a compount SELECT.
Use a zero shift to avoid loss of relative accuracy
Use access macros to learn colors.
Use array_assign_scalar if 'src' NDIM is 0
Use as many args as specified
Use as many entries from the input list as required and update the ppList to point to the unused elements of the list.
Use at least one from xtra.
Use at your own risk.
Use big enough power of 2
Use blocked code after the last block.
Use blocked code initially
Use c to hold the length of the character in bytes, plus UTF_LENGTH to flag that it's a length rather than a small character.
Use cached expanded path.
Use care if you decide to try to use this routine for some other purposes.
Use convert_to_number first to detect getting non-integer
Use covering indices for full-scans
Use custom function to get replacement string and its length.
Use default temporary directory.
Use double for large zend_long values that were serialized on a 64-bit system
Use eigenvalues of trailing submatrix of order NS as shifts.
Use einsum for the stacked cases.
Use either INTEGER or REAL whichever is appropriate.
Use field_count to track additional functions added
Use for looping over pSrcList items
Use full fsync for checkpoint
Use full fsync on the backend
Use generic units if none was specified
Use global passwords file
Use http wrapper to proxy ftp request
Use iBase as the first cursor (either the *piDataCur for rowid tables or the first index for WITHOUT ROWID tables) if it is non-negative.
Use immediate_sweep: false to defer sweeping (use lazy sweep).
Use index only - omit table
Use inline code for maximizing the speed, and do the type test once at the start (i.e. keep it out of the loop).
Use libxml functions otherwise its memory deallocation is screwed up
Use microseconds if none was specified
Use mode OFF as an intermediate
Use native byte order
Use nodeAcquire() to obtain the leaf node containing the record with  rowid iRowid.
Use of ONEPASS not allowed
Use of PS_UPDATE_TIMESTAMP_FUNC() is preferred whenever it is possible.
Use of a hash implementation is OK
Use of hexdig_init omitted 20121220 to avoid a
Use of inappropriate initialize may cause SEGV.
Use of the default name is recommended.
Use of the destination database connection while a backup is in progress might also also cause a mutex deadlock.
Use of this form is discouraged.
Use of this interface is not recommended.
Use one of these instead if they exist.
Use one transaction for all the insertions
Use only function parameters passed from session module.
Use openpty(3) of 4.3BSD Reno and later, or the same interface function.
Use options 'Qi Tv' to verify all points.
Use pPgOld as the original page since it has already been allocated.
Use parse_url - if it returns false, we return NULL
Use pread() and pwrite() if they are available
Use qh_findbestfacet to avoid this case.
Use raw iteration with no heap allocation
Use raw iteration with no heap memory allocation
Use read() instead of fread(), because if we're reading from the CGI pipe, fread() may block until IO buffer is filled up.
Use realloc() to expand the size of zBuffer if required.
Use register P3 as the accumulator.
Use remapped axes for generalized ufunc
Use same C function for all methods
Use sizeof(double) bytes of input
Use sizeof(float) bytes of input
Use sizeof(int) bytes of input
Use some of the same optimizations as OP_RowSetTest: If iSet is zero, assume that the key cannot already be present in the temp table.
Use sorting, slower but equivalent
Use sqlite3EndTable() to add the view to the SQLITE_MASTER table
Use sqlite3OsFileControl() when we are doing something that might fail and we need to know about the failures.
Use sqlite3VdbeMemRelease() to complete erase the Mem prior to abandoning it.
Use sqlite3VdbeMemSetNull() to release just the Mem.xDel space prior to inserting new content into the Mem.
Use standard C library malloc and free on non-Apple systems.
Use switch statements so the compiler can make it fast
Use switch statements to quickly isolate the right enum value
Use switch statements to quickly isolate the right flag
Use syrk if we have a case of a matrix times its transpose.
Use that approximation to avoid the more expensive call to sqlite3VdbeSerialTypeLen() in the common case.
Use the (relatively slow) general-purpose sqlite3GetVarint() routine to extract the value.
Use the C API to convert from UTC to local time
Use the LIMIT for M if it is smaller
Use the LIMIT in cost estimates
Use the Level 2 BLAS solve if the reciprocal of the bound on elements of X is not too small.
Use the SQLITE_ENABLE_MODULE_COMMENTS macro to see some extra no-op comments in VDBE programs that show key decision points in the code generator.
Use the SQLITE_GroupByOrder flag with SQLITE_TESTCTRL_OPTIMIZER to  disable this optimization for testing purposes.
Use the SQLITE_STAT3 table
Use the SQLite core versions if this routine is part of the SQLite amalgamation
Use the SSLServer like an ordinary TCP server.
Use the VAX insv instruction to insert each code in turn.
Use the VFilter and VNext to access the data.
Use the alignment flag to figure out where the data begins after a PyObject_HEAD
Use the axis remapping
Use the built-in recursive mutexes if they are available.
Use the changeset format if argument bPatchset is zero, or the patchset format otherwise.
Use the columns affinity.
Use the common basic header info to make the image object.
Use the contig version if the strides are contiguous or we're telling the caller to wrap the return, because the wrapping uses a contiguous buffer.
Use the current time offset as a last resort.
Use the datetime dtype with generic units so it fills it in
Use the default assignment casting rule
Use the default for complex types, to find the loop producing float
Use the default type resolution if there's a custom data type or object arrays.
Use the default unit if none was specified
Use the default when datetime and timedelta are not involved
Use the detected unit if none was specified
Use the double-shift QR algorithm to handle it.
Use the entire master
Use the fast scalar clip function
Use the foreground thread for this operation
Use the global passwords file, if specified by auth_gpass option, or search for .htpasswd in the requested directory.
Use the i-th iteration dimension to match up ind
Use the incremental approach.
Use the index as a flag, set each to 1
Use the inputs to resolve the unit metadata if requested
Use the key from the main database
Use the manually provided tzoffset
Use the masked loop if a wheremask was specified.
Use the math library isnan() function if compiled with SQLITE_HAVE_ISNAN.
Use the metadata's unit for printing by default
Use the new Expr to populate pOut.
Use the original text of the column expression as its name
Use the patchset format if true
Use the scalar descriptor only if it is of a bigger KIND than the input array (and then find the type that matches both).
Use the separate sqlite3BtreeCursorRestore() routine to restore a cursor back to where it ought to be if this routine returns true.
Use the single layout cache entry.
Use the special VFS "unix-dotfile" that uses dot-files in place of posix advisory locking.
Use the sqlite3OsUnlock() routine to lower a locking level.
Use the sqlite3VdbeRewind() procedure to restore a virtual machine back to its initial state after it has been run.
Use the standard default temporary directory.
Use the standard double-shift algorithm
Use the standard inner loop.
Use the standard library for separate compilation
Use the started flag for the Python iteration protocol to work when buffering is enabled.
Use the symbol +:IMPLICIT+ for implicit tagging and +:EXPLICIT+ if the element requires explicit tagging.
Use the two-part index name to determine the database  to search for the table.
Use the type resolution function to find our loop
Use the value pointer we got if possible
Use the zone allocator available on apple products unless the SQLITE_WITHOUT_ZONEMALLOC symbol is defined.
Use them only rarely on long-running tests.
Use this as a general "out of stream" error
Use this buffer for space if required
Use this buffer to store the file name in.
Use this case if we have ANSI headers
Use this for appending pre-compressed data to a deflate stream.
Use this for commenting out debug-print statements.
Use this for the table cursor, if there is one
Use this function when you have a set of input arrays, and need to determine an output array dtype.
Use this information to construct a string that contains the typename of the column and store that string in zType.
Use this routine after name resolution.
Use this routine prior to clean up prior to abandoning a Mem, or to reset a Mem back to its minimum memory utilization.
Use this routine to reset the Mem prior to insert a new value.
Use this software at your own risk.
Use this text encoding
Use this to try to avoid repeating the same userdef loop search
Use those other routines as the entry point for releasing Mem resources.
Use traditional smaller size: non-PL/SQL errors should fit and it keeps the stack smaller
Use unblocked code below
Use unblocked code for the last or only block.
Use unblocked code to factor the last or only block.
Use unblocked code to reduce the last or only block
Use unblocked code to reduce the remainder of the matrix
Use unblocked code to reduce the rest of the matrix
Use unixClose to clean up the resources added in fillInUnixFile  and clear all the structure's references.
Use up some stack space.
Use user supplied host whitelist
Use version 3 pickle format
Use write-ahead logging
Use xmalloc instead of malloc.
Use xsi:type if it is defined
Use zTemp for any required temporary buffer space.
Used both in old (non-OO) and OO API
Used by DOCID_CMP() macro
Used by PRAGMA temp_store_directory
Used by TK_AGG_COLUMN and TK_AGG_FUNCTION
Used by VdbeSorterCompare()
Used by codeCursorHint()
Used by extra internal tests only run if NDEBUG is not defined
Used by keywordhash.h
Used by readers to open (lock) and close (unlock) a snapshot.
Used by reverse iterators
Used by sqlite3Fts3EvalPhrasePoslist() if this is a descendent of an OR condition.
Used by the fts5vocab module.
Used by the master to efficiently transfer a blob of data to the workers.
Used by this thread only
Used during OR-clause processing
Used for accessing the elements of the stack.
Used for arrays of python objects to increment the reference count of
Used for logging, if connection is not applicable at the moment of logging.
Used for loops not involving calls to RMATCH()
Used for non-textual disassembly into structs.
Used for peer verification in windows
Used for readdir() on an opendir()ed phar directory handle
Used for rounding floating point values
Used for seeking on a phar directory handle
Used for sorting directories alphabetically
Used for testing and analysis only
Used for testing and debugging only.
Used for the dependency hashtable
Used for the shared hashtable
Used for writing to a phar file
Used in RBU vacuum mode only
Used in mysqlnd_debug.c
Used internally - xBestIndex should ignore
Used internally as comparison routine passed to zend_list_del_element
Used internally by sqlite3Fts3SegReaderXXX() calls
Used locally for exec options
Used only by system that substitute their own storage engine
Used only to suppress a compiler warning
Used only when SQLITE_NO_SYNC is not defined.
Used only when debugging GIF compression code
Used reduced-size Expr nodes
Used size of aTree/aIter (power of 2)
Used size of aTree/aReadr (power of 2)
Used to accumulate return value
Used to allocate unique cursor ids
Used to be a conditional
Used to block signals during execution of signal handlers
Used to build up list of table cols
Used to build up table PK declaration
Used to catch return codes
Used to check DES salts to ensure that they contain only valid characters
Used to convert UTF16 parameters into UTF8 for display
Used to detect hash collisions.
Used to divy up the pSpace memory
Used to enforce uniqueness in a CREATE UNIQUE INDEX statement.
Used to find the beginnings of sentences
Used to find the php_curl resource for a given curl easy handle
Used to full index in sorted order
Used to get maximum path length and AppData
Used to get maximum path name length
Used to hold return values of fstat()
Used to implement "IN (SELECT ...)".
Used to iterate from 0 to nCol
Used to iterate from pExpr to root
Used to iterate name contexts
Used to iterate through FKs
Used to iterate through VMs
Used to iterate through aAll
Used to iterate through attached dbs
Used to iterate through attached tables
Used to iterate through cells
Used to iterate through change record
Used to iterate through changes
Used to iterate through columns
Used to iterate through constraint array
Used to iterate through deferred tokens
Used to iterate through entire index
Used to iterate through hash buckets
Used to iterate through indexes
Used to iterate through instances
Used to iterate through levels
Used to iterate through memory cells
Used to iterate through non-root layers
Used to iterate through old.* values
Used to iterate through pTrigger list
Used to iterate through phrase terms
Used to iterate through phrase tokens
Used to iterate through samples
Used to iterate through schemas
Used to iterate through segment-readers
Used to iterate through segments
Used to iterate through table columns
Used to iterate through tokens
Used to iterate through zArg
Used to loop through N hash tables
Used to loop through terms
Used to loop thru the element list
Used to pass information from the analyzer reader through to the callback routine.
Used to preallocate storage space.
Used to save work done on a writeable phar
Used to set error string on failure.
Used to store parts of the eigenvector matrix when the updating matrix multiplies take place.
Used to store transient return codes
Used to test for reference loops
Used to verify lookaside not used for schema
Used to walk the replacement string
Used to write the new, merged, segment
Used when SQLITE_NO_SYNC is not defined and by the assert() and/or OSTRACE() macros.
Used when bit MEM_Zero is set in flags
Used when p4type is P4_COLLSEQ
Used when p4type is P4_EXPR
Used when p4type is P4_FUNCCTX
Used when p4type is P4_FUNCDEF
Used when p4type is P4_INT64
Used when p4type is P4_INTARRAY
Used when p4type is P4_KEYINFO
Used when p4type is P4_MEM
Used when p4type is P4_REAL
Used when p4type is P4_SUBPROGRAM
Used when p4type is P4_TABLE
Used when p4type is P4_VTAB
Useful debugging logic when panicmem is broken.
Useful for atomic operations.
Useful function for conversion when used with PyArg_ParseTuple
Useful to add assertions
Useful when your site is using old B-News Nihongo patch.
User authentication failed
User authentication information
User defined ini files (like .htaccess for apache) are parsed for each request and stored in separate hash defined by SAPI.
User error handler may include() additinal PHP files.
User forgot to call odbc_fetch_row(), or wants to reload the results, do it now
User hasn't sent anything, we will send empty string.
User is requesting the value of the special column with the same name as the table.
User name used to authenticate
User pointer passed to xCreate()
User save handlers may end up directly here by misuse, bugs in user script, etc.
User semantic actions sometimes alter yychar, and that requires that yytoken be updated with the new translation.
User storage begins just after header.
User supplied function is used for comparing the keys.
User visible part of object (see fts5.h)
User-defined callback function
Users are encouraged to modify this subroutine to set the tuning parameters for their particular machine using the option and problem size information in the arguments.
Users can do as they wish with explicit indices.
Userspace Filters using ambiguous wildcards could cause problems.
Userspace functions, see basic_functions.* for arginfo and decls.
Uses 64 bit file length.
Uses C-style conventions
Uses ICU ucol_getSortKey for performance.
Uses INI settings, so needs to be run after it.
Uses OCIPing() or OCIServerVersion() depending on the Oracle Client version
Uses OS features not supported on host
Uses a global variable until hh_shared_init is called, so it's safe to use in the early init stages of the program (as long as you fork after hh_shared_init of course).
Uses an ephemeral index
Uses sqlite3DbMalloc, not sqlite_malloc
Uses the OpenEphemeral opcode
Uses the rejection algorithm compared against the wrapped Cauchy distribution suggested by Best and Fisher and documented in Chapter 9 of Luc's Non-Uniform Random Variate Generation.
Uses the skip-scan algorithm
Using a circular buffer is smarter, but a bit more complex to handle.
Using a new file-control "SQLITE_FCNTL_RBU", a main db rbu_file  object can be marked as the target database of an RBU update.
Using a simple comparison for decimal numbers rather than a memory read is much faster, and the resulting code is simpler (the compiler turns it into a subtraction and unsigned comparison).
Using anything else (like AES) will generate the key/iv using an OpenSSL specific method.
Using both tmp register is better for instruction scheduling.
Using mod_proxy_fcgi and ProxyPass, apache cannot set PATH_INFO As we can extract PATH_INFO from PATH_TRANSLATED it is probably also in SCRIPT_NAME and need to be removed
Using os_unix.c, mxPathname is 512, which is the same as the minimum allowable value for pageSize.
Using some compilers, this will be faster.
Using the  built-in tokenizers, the FTS5 query 'first + place' will match instances of "first place" within the document set, but not alternative forms such as "1st place".
Using the +:never+ TimingSymbol the RuntimeError exception will always be ignored in the first block of the main thread.
Using the _msize() function also requires the malloc.h header file.
Using the interfaces defined in this file,  FTS5 may be extended with:  custom tokenizers, and custom auxiliary functions.
Using the values generated by patch_pc_relative_loads.
Using these macros makes it easy to switch from using memset()/memcpy() and using bzero()/bcopy().
Using these size values we can go forward or backward on the block chain.
Using this cache reduces the number of calls to btreeParseCell().
Using this makes it easier to write code that can merge doclists that are sorted in either ascending or descending order.
Using this method, a query such as '1s*' will match documents that contain the literal  token "1st", but not "first" (assuming the tokenizer is not able to provide synonyms for prefixes).
Using value of sp is very rough...
Using zend_long would truncate a 64-bit var on Win64, so the exact long datatype fits everywhere, as long as there's no 32-bit int overflow.
Usual assignments allows removal of leading one dimensions.
Usually a single sibling on either side of the page are used in the balancing, though both siblings might come from one side if the page is the first or last child of its parent.
Usually called with shape and type but can also be called with buffer, strides, and swapped info For now, let's just use this to create an empty, contiguous array of a specific type and shape.
Usually consists of method, class, module, etc names with decoration.
Usually defaults to -1021.
Usually defaults to -307.
Usually defaults to 1, rounding to the nearest number.
Usually defaults to 1024.
Usually defaults to 15.
Usually defaults to 2 on most systems, which would represent a base-10 decimal.
Usually defaults to 308.
Usually defaults to 53.
Usually derived from locale.
Usually if a stream was prematurely freed.
Usually if no progress is possible.
Usually it is 16-bits.
Usually needs to flush buffer.
Usually only a few pages are meet either condition.
Usually overwrite previous item
Usually programs that embeds CRuby interpreter should not call this function, and should do their own initialization.
Usually qhull will report an error if a data structure becomes inconsistent.
Usually same as #label, without decoration.
Usually the parent term is marked as TERM_CODED.
Usually the path zFilename should not be a relative pathname.
Usually this is SQLITE_BUSY meaning that another thread or process is already running a checkpoint, or maybe a recovery.
Usually this is encoded in the same unicode encoding as the main database (see below for exceptions).
Usually this is the size field of the position list data.
Usually used in a tight spot.
Usually, if data_obj is not an array, dtype should be the result given by the PyArray_GetArrayParamsFromObject function.
Usually, output parameter *piPhrase is set to the phrase number, *piCol to the column in which it occurs and *piOff the token offset of the first token of the phrase.
Usually, the sector size is less than or equal to the page size, in which case pages can be individually written.
Usually, this is called just before cursor pExcept is used to modify the table (BtreeDelete() or BtreeInsert()).
Usually, this object is created and deleted automatically by RBU.
Usually, you do not need to call this method because Release method called automatically when WIN32OLE object garbaged.
Utility Functions for Extensions
Utility functions for adding data types to arrays, with or without key (assoc, non-assoc).
Utility functions used throughout sqlite.
Utility routine to tell whether a sequence of bytes is legal UTF-8.
Utility routines for dealing with JsonNode and JsonParse objects
Utility routines for dealing with JsonString objects
Utils can still be used even if SLJIT_CONFIG_UNSUPPORTED is set.
V       (input/output) COMPLEX array, dimension (LDV,M) On entry, the matrix of right or left eigenvectors to be transformed, as returned by CHSEIN or CTREVC.
V       (input/output) COMPLEX*16 array, dimension (LDV,M) On entry, the matrix of right or left eigenvectors to be transformed, as returned by ZHSEIN or ZTREVC.
V       (input/output) DOUBLE PRECISION array, dimension (LDV,M) On entry, the matrix of right or left eigenvectors to be transformed, as returned by DHSEIN or DTREVC.
V       (input/output) REAL array, dimension (LDV,M) On entry, the matrix of right or left eigenvectors to be transformed, as returned by SHSEIN or STREVC.
V(i+ib,ib-1) must be set to 1.
VALID RANGE  Although this software can handle dates all the way back to the year 1 (3761 B.C.), such use may not be meaningful.
VALID RANGE  These routines only convert dates in years 1 through 14 (Gregorian dates 22 September 1792 through 22 September 1806).
VALUE target_thval - Meant for picking the thread in which the tracepoint is to be created.
VALUE version of this struct
VAX exponent range is so narrow we must worry about overflow here...
VCALL is funcall, so fall through
VCALL: variable or call
VDBE branch coverage testing only works with an amalagmation build.
VDBE cursor for the canonical data source
VDBE cursor number of the pSub result set temp table
VDBE cursor that is the main data repository
VDBE has already been allocated
VDBE has completed execution
VDBE instruction address of the start of the loop
VDBE is ready to execute
VDBE under construction
VDBE under constrution
VDBE_DISPLAY_P4 is true or false depending on whether or not the "explain" P4 display logic is enabled.
VF      (input/output) DOUBLE PRECISION array, dimension ( K ) On entry, VF contains  information passed through DBEDE8.
VF      (input/output) REAL array, dimension ( K ) On entry, VF contains  information passed through DBEDE8.
VFS containing this as the xDelete method
VFS flags returned by xOpen()
VFS flags to open journal file
VFS objects are not reference counted.
VFS to use for this b-tree
VFS to use with this b-tree
VFSes that  do not need this signal should silently ignore this opcode.
VFSes that do not need this signal should silently ignore this opcode.
VFUNCTION(zName, nArg, iArg, bNC, xFunc) Like FUNCTION except it omits the SQLITE_FUNC_CONSTANT flag.
VFW    (workspace) DOUBLE PRECISION array, dimension ( M ) Workspace for VF.
VFW    (workspace) REAL array, dimension ( M ) Workspace for VF.
VIRTUAL operands must be NULL
VL      (input/output) DOUBLE PRECISION array, dimension ( K ) On entry, VL contains  information passed through DBEDE8.
VL      (input/output) REAL array, dimension ( K ) On entry, VL contains  information passed through DBEDE8.
VLW    (workspace) DOUBLE PRECISION array, dimension ( M ) Workspace for VL.
VLW    (workspace) REAL array, dimension ( M ) Workspace for VL.
VM being reprepared (sqlite3Reprepare())
VM bootstrap: phase 1
VM bootstrap: phase 2
VM this frame belongs to
VM to add scanstatus() to
VM-dependent API is not available for this function
VOID-type arrays can only be compared equal and not-equal in which case the fields are all compared by extracting the fields and testing one at a time...
VOID-type arrays without fields are compared for equality by comparing their memory at each location directly (using string-code).
VORONOI only by qh_printbegin
VP routines used in BigDecimal part
VP variable to be printed
VS2012 strftime() returns number of characters, not bytes.
VT      (input/output) DOUBLE PRECISION array, dimension (LDVT, NCVT) On entry, an N-by-NCVT matrix VT.
VT      (input/output) REAL array, dimension (LDVT, NCVT) On entry, an N-by-NCVT matrix VT.
VT     (input) DOUBLE PRECISION array, dimension ( LDU, SMLSIZ+1 ).
VT     (input) DOUBLE PRECISION array, dimension (LDVT, M) The last M - K columns of VT' contain the deflated right singular vectors.
VT     (input) REAL array, dimension ( LDU, SMLSIZ+1 ).
VT     (input) REAL array, dimension (LDVT, M) The last M - K columns of VT' contain the deflated right singular vectors.
VT     (output) DOUBLE PRECISION array, dimension at least (LDVT, M) On exit, VT' contains the right singular vectors.
VT     (output) REAL array, dimension at least (LDVT, M) On exit, VT' contains the right singular vectors.
VT2    (input) DOUBLE PRECISION array, dimension (LDVT2, N) The first K columns of VT2' contain the non-deflated right singular vectors for the split problem.
VT2    (input) REAL array, dimension (LDVT2, N) The first K columns of VT2' contain the non-deflated right singular vectors for the split problem.
VT2 is arranged into three blocks.
VVVVVVVVVVVVVVVVVVVVVVVVV
Valid for 1st elem only
Valid for both the deptbl_entry_t 'key' and 'next' fields.
Valid item id is required.
Valid key id is required.
Valid mapping id is required.
Valid modes are VERIFY_NONE, VERIFY_PEER, VERIFY_CLIENT_ONCE, VERIFY_FAIL_IF_NO_PEER_CERT and defined on OpenSSL::SSL  The default mode is VERIFY_NONE, which does not perform any verification at all.
Valid only after Fts3SegReaderStep() returns SQLITE_ROW.
Valid only on Microsoft Windows.
Valid operators for constraints
Valid sequence id is required.
Valid sqlite3_blob* handles point to Incrblob structures.
Valid tag directives are expected.
Valid value id is required.
Valid values are +:top+, +:method+, +:block+, +:class+, +:rescue+, +:ensure+, +:eval+, +:main+, and +:defined_guard+.
Valid values for the second argument to fts3SqlStmt().
Valid values for the second argument to sqlite3PagerLockingMode().
Valid values of level are Zlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION, Zlib::DEFAULT_COMPRESSION, or an integer from 0 to 9.
Validate index entries for the current row
Validate that no temporary register falls within the range of iFirst..iLast, inclusive.
Validate that the month and day are valid for the year
Validate that the parameters for future expansion are NULL
Validate that the prepare_ufunc_output didn't mess with pointers
Validate that the rest of the dimensions match
Validate the CRC32 of a file opened from within the phar
Validate the core dimensions of all the operands, and collect all of the labelled core dimensions into 'core_dim_sizes'.
Validates that any field of the structured array 'dtype' which has the NPY_ITEM_HASOBJECT flag set does not overlap with another field.
Value at start of group
Value being transferred
Value checking flag in VpNmlz()
Value configured by 'automerge'
Value constant during a single query - might change over time
Value extracted from pLower
Value extracted from pUpper
Value extracted from record
Value for "end_block" field
Value for "from" column of output
Value for "idx" field
Value for "leaves_end_block" field
Value for "level" column of output
Value for "level" field (absolute level)
Value for "start_block" field
Value for Fts3Phrase.iColumn
Value for integer types
Value for the first field of every RtreeMatchArg object.
Value for the stat column of sqlite_stat1
Value from exception raised on the +:raise+ event
Value from parent table row
Value inserted into rank column
Value is a RowSet object
Value is a VdbeFrame object
Value is a real number
Value is either quote-delimited, or ends at first comma or space.
Value is stored in val vector.
Value might be numeric
Value of 'mx_payload' column
Value of 'name' column
Value of 'ncell' column
Value of 'pageno' column
Value of 'pagetype' column
Value of 'path' column
Value of 'payload' column
Value of 'pgOffset' column
Value of 'pgSize' column
Value of 'unused' column
Value of RBU_STATE_STAGE field
Value of a host parameter
Value of each argument
Value of julianday('now') for this statement
Value of k is out of range.
Value of pOp at the top of the loop
Value of the next token
Value passed to FCNTL_SIZE_HINT call
Value returned by GetLastError()
Value returned by SetFilePointer()
Value returned by SetFilePointerEx()
Value returned by authorization callback
Value returned by conflict handler
Value returned by last rbu_step() call
Value returned by preupdate_new/old
Value returned by sqlite3OsAccess()
Value returned by sqlite3_changes()
Value returned by sqlite3_total_changes()
Value returned by system call
Value returned by xInstCount()
Value returned from qh_new_qhull().
Value to append to data
Value to compare to current sorter key
Value to pass to log callback (or 0)
Value to return for s3_vtab_on_conflict()
Value to return from this function
Value to return in *pnEntry
Value to return via *paiCol
Value to return via *pnBind
Value to return via *pnPage
Value to return via *ppIdx
Value to write the string rep.
Value to write to hash-table slot
Value type (SQLITE_NULL, TEXT etc.)
Value used to signify the end of an position-list.
Values above 0xffff are converted to surrogate pairs.
Values accessed by BEFORE triggers are only included in the returned mask if the TRIGGER_BEFORE bit is set in the tr_tm parameter.
Values added after the read transaction was opened may have been written incorrectly - i.e. these slots may contain garbage data.
Values allocated/calculated once only
Values between 0 and 127
Values extracted from pExpr
Values for Fts5Cursor.csrflags
Values for RbuObjIter.eType  0: Table does not exist (error) 1: Table has an implicit rowid.
Values for TAG_PHOTOMETRIC_INTERPRETATION
Values for each of the nCol matchable columns.
Values for parameters to the SQL function
Values for the OP_Variable opcode.
Values for xColumnSize()
Values of 'collapse' and 'hidden' are not supported.
Values of cookies to verify
Values of mode other than 0-9 are treated as mode 0.
Values of width, maxWidth, minWidth, height, maxHeight and minHeight must be specified as pixel values, not as percentages.
Values passed as the 5th argument to allocateBtreePage()
Values that may be OR'd together to form the second argument of an sqlite3BtreeCursorHints() call.
Values to bind to statement
Values used as part of the flags argument passed to IndexQuery().
Variable 'dist' stores the number of tokens read since the most recent TK_DOT or TK_ON.
Variable *pMaxFuncArgs is set to the maximum value of any P2 argument  to an OP_Function, OP_AggStep or OP_VFilter opcode.
Variable DUMMY1 is initialized to a negative value above.
Variable aMI is used only for FTSQUERY_NEAR nodes to store the global matchinfo data.
Variable iDocid is already set for this entry, so all that is required is to set pIter to point to the first byte of the last position-list in the doclist.
Variable iLower will be set to the estimate of the number of rows in  the index that are less than the lower bound of the range query.
Variable iNewStart now contains the first valid leaf node.
Variable iNextHdrOffset is set to the offset at which this problematic header will occur, if it exists.
Variable iPrevDocid is the docid of the most  recently inserted record.
Variable initialization
Variable is not live, certainly won't benefit from pi
Variable nPendingData contains an estimate the memory consumed by the  pending data structures, including hash table overhead, but not including malloc overhead.
Variable tname now contains the token that is the old table-name in the CREATE TRIGGER statement.
Variable to be pushed
Variable used as the phrase counter
Variable zOut is set to point at the output buffer, space obtained from sqlite3_malloc().
Variables above this point are populated when the expression is parsed (by code in fts3_expr.c).
Variables below this point are populated by fts3_expr.c when parsing  a MATCH expression.
Variables dbOrigSize and dbFileSize are valid in states  PAGER_WRITER_LOCKED and higher.
Variables for Floyd-Steinberg dithering
Variables for accumulating image statistics
Variables in which to record status information.
Variables populated based on current entry.
Variables populated by statDecodePage():
Variables related to SQLITE_CONFIG_PAGECACHE settings.
Variables related to the accumulation of tokens and doclists within the in-memory hash tables before they are flushed to disk.
Variables set by fts3SegReaderNext().
Variables used only by sqlite3Fts5PoslistIterXXX() functions.
Variant is modified "in-place"
Variant/ Extlang/Private etc.
Varint 1+nCol:  The total size, in bytes, of all text values in all columns of all rows of the table.
Varint 1..nCol: For each column, the total number of tokens stored in the column for all rows of the table.
Varint that may be written to pOut
Varint values are encoded in the same way as varints in the SQLite  record format.
Varints **** The basic unit of encoding is a variable-length integer called a varint.
Various PAGER_* flags
Various Unix compatibility functions and NT specific functions.
Various constants for the methods in File can be found in File::Constants.
Various elements of the SELECT copied into local variables for convenience
Various methods of the page cache use pointers to instances of this object as parameters or as their return value.
Various register numbers
Various scalar styles:  --- # Implicit empty plain scalars do not produce tokens.
Various scripts scan this source file in order to generate HTML documentation, headers files, or other derived files.
Vdbe being configured
Vdbe is guaranteed to have been allocated by this stage.
Vdbe pre-update hook is invoked by
Vdbe to add scanstatus entry to
Vdbe to generate code within
Vdbe to iterate through the opcodes of
Vdbe.pFrame is set to NULL if the currently executing frame is the main program.
VdbeCursor row cache generation counter
VdbeFrame objects are allocated by the OP_Program opcode in sqlite3VdbeExec().
VdbeSorter.nTask is set to the number of worker threads allowed (see SQLITE_CONFIG_WORKER_THREADS) plus one (the main thread).
Vector expression to be appended.
Vector matrix multiplication -- Level 2 BLAS
Vector of values to consider
Vector size is maintained by queue during add/remove ops.
Vector to extract element from
Verifies FORDELETE and AUXDELETE flags
Verify callback Proc index for ext-data
Verify class name before passing it to __autoload()
Verify condition (1):  If cells are moving left, update iPg only after iPg-1 has already been updated.
Verify condition (2):  If cells are moving right, update iPg only after iPg+1 has already been updated.
Verify correct alignment of TK_ and OP_ constants
Verify given socket address against the ACL.
Verify that all AggInfo registers are within the range specified by AggInfo.mnReg..AggInfo.mxReg
Verify that all NOT NULL columns really are NOT NULL
Verify that all of the variable were assigned exactly once.
Verify that all sibling pages are of the same "type" (table-leaf, table-interior, index-leaf, or index-interior).
Verify that an index entry exists for the current table row
Verify that at least N opcode slots are available in p without having to malloc for more space (except when compiled using SQLITE_TEST_REALLOC_STRESS).
Verify that constants are precomputed correctly
Verify that integers and floating point values use the same byte order.
Verify that no lookaside memory was used by schema tables
Verify that no more than two scratch allocation per thread is outstanding at one time.
Verify that no more than two scratch allocations per thread are outstanding at one time.
Verify that pSnapshot is still valid before continuing.
Verify that the #defines of the locking byte offsets in os_unix.c and os_win.c agree with the WALINDEX_LOCK_OFFSET value.
Verify that the MergeEngine is assigned to a single thread
Verify that the WAL header checksum is correct
Verify that the axes requested are all of size one
Verify that the call to _bytes() does not invalidate the _text() pointer
Verify that the cursor and the BtShared agree about what is the current database connetion.
Verify that the database file has not be deleted or renamed out from under the pager.
Verify that the database still has the same name as it did when it was originally opened.
Verify that the depth of all children is the same.
Verify that the every entry in the mapping region is reachable via the hash table.
Verify that the every entry in the mapping region is still reachable via the hash table even after the cleanup.
Verify that the last entry really is an integer.
Verify that the number of entries in the hash table exactly equals the number of entries in the mapping region.
Verify that the number of pages on the list is N.
Verify that the page list is in accending order
Verify that the version number on the WAL format is one that are able to understand
Verify that there is enough key space remaining to avoid a buffer overread.
Verify that this is case.
Verify the affinity and collating sequence match
Verify the build revision.
Verify the peer against using CA file/path settings
Verify the validity of the current character as a base-2 digit.
Verify this guarantee.
Verify this routine is never called again
Verify we have enough data to match magic type
Version 1 of the callout block
Version 3.10.0 and later
Version 3.12.0 and later
Version 3.14.0 and later
Version 3.31 of the file command considered a file to be ASCII if each of its characters was approved by either the isascii() or isalpha() function.
Version 3.7.16 and later
Version 3.8.11 and later
Version 3.8.7 and later
Version 3.9.0 and later
Version number of OpenSSL the ruby OpenSSL extension was built with (base 16)
Version of OpenSSL the ruby OpenSSL extension is running with
Version of OpenSSL the ruby OpenSSL extension was built with
Version of sqlite3_free() that is always a function, never a macro.
Version string of GNU Readline or libedit.
Version string of WIN32OLE.
Version, Passes, and Digest Length
Versions of SQLite prior to 3.5.8 set the page-size field of the journal header to zero.
Versions of isspace(), isalnum() and isdigit() to which it is safe to pass signed char values.
Verveer's  nd_image package and numpy's arraymap
Very little journalling actually occurs when doing a vacuum since the vacuum_db is initially empty.
Very simple SMTP Send-mail program for sending command-line level emails and CGI-BIN form response for the Windows platform.
Very slow on a palette destination.
Via the BackupUpdate() and BackupRestart() functions, which are invoked by the pager layer to report various state changes in the page cache associated with the source database.
ViewGetColumnNames() is a no-op if pTab is not a view.
Virtual current working directory support
Virtual machine being coded
Virtual machine under construction
Virtual stack - the struct is used as a virtual stack for each thread.
Virtual table columns are numbered from zero in the order in which they appear within the CREATE TABLE statement passed to sqlite3_declare_vtab().
Virtual table configuration
Virtual table cursor handle
Virtual table cursor structure.
Virtual table implementations will typically add additional fields
Virtual table object to return
Virtual table of this cursor
Virtual table structure.
Virtual tables for which the "rowid" column does  not function like a primary key value cannot be updated using RBU.
Virtual tables must be handled separately
Virtual tables with open transactions
Virtual terms from the LIKE optimization
Virtual-table cursor object.
Virtual-table object.
Visibility of parent node
Visit blocks immediately dominated by i.
Visual C++ can't be here
Visual Studio 2013 removed all the _POSIX_ defines, but we depend on some
W       (input) DOUBLE PRECISION array, dimension (K) The first K elements of this array contain the components of the deflation-adjusted updating vector.
W       (input) REAL array, dimension (K) The first K elements of this array contain the components of the deflation-adjusted updating vector.
W       (input/output) DOUBLE PRECISION array, dimension (K) The first K elements of this array contain the components of the deflation-adjusted updating vector.
W       (input/output) REAL array, dimension (K) The first K elements of this array contain the components of the deflation-adjusted updating vector.
W       (output) COMPLEX array, dimension (LDW,NB) The n-by-nb matrix W required to update the unreduced part of A.
W       (output) COMPLEX array, dimension (N) The computed eigenvalues ILO to IHI are stored in the corresponding elements of W.
W       (output) COMPLEX array, dimension (N) The computed eigenvalues.
W       (output) COMPLEX array, dimension (N) W contains the computed eigenvalues.
W       (output) COMPLEX*16 array, dimension (LDW,NB) The n-by-nb matrix W required to update the unreduced part of A.
W       (output) COMPLEX*16 array, dimension (N) The computed eigenvalues ILO to IHI are stored in the corresponding elements of W.
W       (output) COMPLEX*16 array, dimension (N) The computed eigenvalues.
W       (output) COMPLEX*16 array, dimension (N) W contains the computed eigenvalues.
W       (output) DOUBLE PRECISION array, dimension (LDW,NB) The n-by-nb matrix W required to update the unreduced part of A.
W       (output) REAL array, dimension (LDW,NB) The n-by-nb matrix W required to update the unreduced part of A.
W      (output) DOUBLE PRECISION array, dimension (N) The first k values of the final deflation-altered z-vector and will be passed to DLAED3.
W      (output) DOUBLE PRECISION array, dimension (N) The first k values of the final deflation-altered z-vector which will be passed to DLAED3.
W      (output) DOUBLE PRECISION array, dimension (N) This will hold the first k values of the final deflation-altered z-vector and will be passed to DLAED3.
W      (output) REAL array, dimension (N) The first k values of the final deflation-altered z-vector and will be passed to SLAED3.
W      (output) REAL array, dimension (N) The first k values of the final deflation-altered z-vector which will be passed to SLAED3.
W      (output) REAL array, dimension (N) This will hold the first k values of the final deflation-altered z-vector and will be passed to SLAED3.
W before a vowel, else dropped
W is the value of the secular function with its ii-th element removed.
WAITIING_ORACLE_BUG_16695981_FIX
WAL connections never enter this state (since they do not modify the database file, just the log file).
WAL frames perhaps written, or maybe not
WAL mode sets Pager.eState to PAGER_WRITER_LOCKED or CACHEMOD when it has an open transaction, but never to DBMOD or FINISHED.
WAL savepoint context
WAL-INDEX FORMAT  Conceptually, the wal-index is shared memory, though VFS implementations might choose to implement the wal-index using a mmapped file.
WAL_NREADER is the number of available reader locks and should be at least 3.
WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY
WARN64 -- ptr_intT holds a 64-bit pointer
WARNING*: This method is only PKCS5 v1.5 compliant when using RC2, RC4-40, or DES with MD5 or SHA1.
WARNING/TODO: This function currently assumes that the input is a valid changeset.
WARNING:  In order to maintain backwards compatibility, add new interfaces to the end of this structure only.
WARNING:  This routine might reallocate the space used to store WhereTerms.
WARNING: For performance reasons, 'iop' is not bounds-checked, it is not confirmed that 'iop' is actually a reduction operand, and it is not confirmed that EXTERNAL_LOOP mode is enabled.
WARNING: If an axis flagged for removal has a shape equal to zero, the array will point to invalid memory.
WARNING: If the above line is changed for any reason, you must also change the code that abstracts option settings at the start of the pattern and makes them global.
WARNING: There is a huge special case here.
WARNING: This flag is a bad idea, but was the only way to both 1) Support unpickling legacy pickles with object types.
WARNING: This macro is not compatible with the strcmp() family.
WBMP ---- WBMP Level 0: B/W, Uncompressed This implements the WBMP format as specified in WAPSpec 1.1 and 1.2.
WBMP Type 0: B/W, Uncompressed bitmap
WBMP may be smaller than 12 bytes, so delay error
WH becomes W, WR becomes R W if followed by a vowel
WHEN clause for the trigger
WHEN eN THEN rN ELSE y END  Form B: CASE WHEN e1 THEN r1 WHEN e2 THEN r2 ...
WHEN_WE_NEED_TO_CHECK_WHETHER_COMPRESSION_WORKS_CORRECTLY
WHERE analyse context
WHERE analysis context
WHERE clause for partial indices
WHERE clause information
WHERE clause of the UPDATE statement
WHERE clause of trigger step
WHERE clause on PK columns
WHERE clause processing context
WHERE clause term to check
WHERE clause to scan with
WHERE rowid IN ( select )
WHERENAMEAFTEREPLACEANDEFAULTAUTOINCREMENTCASTCOLUMNCOMMIT
WHERE_* flags describing the plan
WHERE_GROUPBY or _DISTINCTBY or _ORDERBY_LIMIT
WHERE_ONEROW would have been helpful
WHITE  (GC_WHITE)   - Member of garbage cycle.
WI      (input) DOUBLE PRECISION The imaginary part of the scalar "w".
WI      (input) REAL The imaginary part of the scalar "w".
WIN32 always set ISREG flag
WIN32OLE.ole_initialize and WIN32OLE.ole_uninitialize are used in win32ole.rb to fix the issue bug #2618 (ruby-core:27634).
WINSHM_UNLCK, WINSHM_RDLCK, or WINSHM_WRLCK
WITH clause attached to this select.
WITH clause that pCte belongs to
WORK    (workspace) COMPLEX array, dimension (LDWORK,K) LDWORK  (input) INTEGER The leading dimension of the array WORK.
WORK    (workspace) COMPLEX*16 array, dimension (LDWORK,K) LDWORK  (input) INTEGER The leading dimension of the array WORK.
WORK    (workspace) DOUBLE PRECISION array, dimension (LDWORK,K) LDWORK  (input) INTEGER The leading dimension of the array WORK.
WORK    (workspace) REAL array, dimension (LDWORK,K) LDWORK  (input) INTEGER The leading dimension of the array WORK.
WORK   (workspace) COMPLEX array, dimension at least (N * NRHS).
WORK   (workspace) COMPLEX*16 array, dimension at least (N * NRHS).
WORK   (workspace) DOUBLE PRECISION array, dimension ( 2 ) WORK contains (D(j) + sigma_I) in its  j-th component.
WORK   (workspace) DOUBLE PRECISION array, dimension ( N ) If N .ne.
WORK   (workspace) DOUBLE PRECISION array, dimension (6 * N + (SMLSIZ + 1)*(SMLSIZ + 1)).
WORK   (workspace) DOUBLE PRECISION array.
WORK   (workspace) REAL array, dimension ( 2 ) WORK contains (D(j) + sigma_I) in its  j-th component.
WORK   (workspace) REAL array, dimension ( N ) If N .ne.
WORK   (workspace) REAL array, dimension (6 * N + (SMLSIZ + 1)*(SMLSIZ + 1)).
WORK   (workspace) REAL array.
WORK  (workspace) DOUBLE PRECISION array, dimension (4*N) Workspace.
WORK  (workspace) REAL array, dimension (4*N) Workspace.
WORK( IU ) is LDWRKU by N
WORK( IVT ) is M by CHUNK
WORK( IVT ) is M by M
WORK( IVT ) is M by N
WORK(IL) is M by CHUNK
WORK(IR) is LDWRKR by N
WORK(IU) is LDWRKU by N
WORKAROUND: X509_STORE can count references, but X509_STORE_free() doesn't care it.
WR      (input) DOUBLE PRECISION The real part of the scalar "w".
WR      (input) REAL The real part of the scalar "w".
WR      (output) DOUBLE PRECISION array, dimension (N) WI      (output) DOUBLE PRECISION array, dimension (N) The real and imaginary parts, respectively, of the computed eigenvalues.
WR      (output) REAL array, dimension (N) WI      (output) REAL array, dimension (N) The real and imaginary parts, respectively, of the computed eigenvalues.
WR      (output) REAL array, dimension (N) WI      (output) REAL array, dimension (N) WR and WI contain the real and imaginary parts, respectively, of the computed eigenvalues.
WRAP ALIGNED CONTIGUOUS TRANSFER FUNCTION
WRC_Abort         Do no more callbacks.
WRC_Continue      Continue descending down the tree.
WRC_Prune         Do not descend into child nodes.
WRITE-AHEAD LOG (WAL) FILE FORMAT  A WAL file consists of a header followed by zero or more "frames".
WRITEABLE implies DIRTY
WRITEABLE pages must also be DIRTY
WRITER_CACHEMOD:  A pager moves from WRITER_LOCKED state to this state when a page is first modified by the upper layer.
WRITER_DBMOD:  The pager transitions from WRITER_CACHEMOD into WRITER_DBMOD state when it modifies the contents of the database file.
WRITER_FINISHED:  It is not possible for a WAL connection to enter this state.
WRITER_LOCKED:  The pager moves to this state from READER when a write-transaction is first opened on the database.
WRITE_BACK must be the first, since it is a flag.
Wagner All rights reserved.
Wagner's implementation of the Mersenne Twister RNG, optimised by Magnus Jonsson.
Wait a little before trying again
Wait a thread shield.
Wait for sem 1 to be zero .
Wait for writers, then checkpoint
Wait to finish sending buffer
Wait until all threads finish
Wait until another thread task take GVL.
Wait until mg_fini() stops
Wait until now, after the page has been successfully journalled, before setting the PGHDR_WRITEABLE bit that indicates that the page can be safely modified.
Wait until the signal has been delivered.
Waiting for read-locks to clear
Wake up timer thread iff timer thread is slept.
Wakeup workers that are waiting for connections to handle.
Wal file descriptor for this main db
Wal filename for this main db file
Wal frame containing data for iDbpage
Wal handle to write to
Wal-index header for current transaction
Wal-index pages  are numbered starting from 0.
Wal-index pages are numbered from zero.
Walk all expressions associated with SELECT statement p.
Walk an expression tree.
Walk down the path_stop starting at path_start.
Walk inside the fields and add every item which will be used for hashing into the list l  Return 0 on success
Walk into subarray, and add items for hashing in l  Return 0 on success
Walk queue putting pointers into array
Walk the expression tree pExpr and increase the aggregate function depth (the Expr.op2 field) by N on every TK_AGG_FUNCTION node.
Walk the parse trees associated with all subqueries in the FROM clause of SELECT statement p.
Walk through config hash and alter matching ini entries using the values found in the hash
Walk through each directory in path and apply any found per-dir-system-configuration from configuration_hash
Walker.u.pi is a pointer to an integer.
Want left and right eigenvectors Copy Schur vectors to VR
Want left eigenvectors Copy Householder vectors to VL
Want right eigenvectors Copy Householder vectors to VR
Want to do one-pass UPDATE/DELETE
Want to return HTTP 500 but apache wants to over write our fault code with their own handling...
Warn on non-scalar, return NotImplemented regardless
Warning message sent already, just bail out
Warning, empty strings need to be passed as stream
Warning:  changing the way overflow payload is distributed in any way will result in an incompatible file format.
Warnings from sqlite3_log()
Was INSERT, UPDATE, DELETE, etc.
Was just an apostrohpe
Was previously a separate restriction deriving from ticket #350.
Was sqlite3_global_recover(), but that function is deprecated
Waste memory like crazy.
We accept any character type even if it is breaked by new lines
We accumulate extra - 1 event for DOCUMENT-START - 2 events for SEQUENCE-START - 3 events for MAPPING-START
We accumulate in a local variable to save frequent testing of lenthptr for NULL.
We add HALF to the value of the SQRT in case the machine underestimates one of these square roots.
We added the xGetLastError() method with the intention of providing better low-level error messages when operating-system problems come up during SQLite operation.
We admit that this is a goofy design.
We allocate new temporaries for values that need to relive FAST_CALLs.
We allocate them with 2MB size granularity, to avoid many reallocations when they are extended by small pieces
We allow very simple pattern matching for filter factories: if "convert.charset.utf-8/sjis" is requested, we search first for an exact match.
We already checked for plain function before.
We already know that pExpr is a binary operator where both operands are column references.
We also add this check as a fast path, to avoid computing GCDs needlessly, as this can take some time.
We also have to invert to match PNG's convention in which 255 is opaque.
We also know that the highest bit is set.
We also set ZEND_ACC_USER_ARG_INFO flag to prevent invalid usage by Reflection
We also set the "follows varying string" flag for subsequently encountered reqchars if it isn't already set and we have just passed a varying length item.
We always assume that the YYYY-MM-DD is according to the Gregorian calendar.
We always double in size
We always have to interpret the contiguous buffer correctly
We are allocating ocaml values.
We are at the beginning of a non-empty line.
We are currently listing subprograms.
We are finished with this character class
We are forced to roll back the active transaction.
We are going to wait for Go initialization to be complete anyhow, later, by waiting for main_init_done to be closed in cgocallbackg1.
We are not necessary in utf mode even in 8 bit mode.
We are not using the subspace, so its size is 1.
We are now at the branch that is to be obeyed.
We are only ever called like this when the stream is cast to a FILE* for include (or other similar) purposes.
We are only willing to ignore this for internal functions because extensions don't always define arg_info.
We are responsible for freeing the memory allocated by this function After copying value into our object heap we need to make sure to free value
We are taking up a previously empty slot.
We are therefore ready to move on.
We are trying for an exclusive lock but another thread in this same process is still holding a shared lock.
We are unlikely to get much useful information out of the shared heap in a core file.
We are working with strings only
We asked for one row, the next one should be EOF, eat it
We assume a 10-byte page header.
We assume any character whose value is greater than 0x80 (any UTF character) can be part of a token.
We assume that close() almost always works, since it is only in a very sick application or on a very sick platform that it might fail.
We assume that other escapes have more than one character in them, so speculatively set both class_has_8bitchar and class_one_char bigger than one.
We assume that right shift corresponds to signed division by 2 with rounding towards minus infinity.
We assume the buffer is at least ndigit long.
We assume this is a transient condition, so return WAL_RETRY.
We assumes it is closed.
We attempt to advance to the next edge on this boundary, but if current second endpoint is not between the two contour levels, we exit back to zone_crosser.
We break it out in an effort to keep the code better organized.
We break the return address cache here, but this is a really rare case.
We build the map in a temporary bit of memory, in case the class contains fewer than two 8-bit characters because in that case the compiled code doesn't use the bit map.
We calculate argc ourselves in order to be on the safe side, even though it is also available from the symbol table.
We call AltB, AeqB, AgtB, EofA, and EofB "subroutines" but they are not actually called using Gosub and they do not Return.
We calloc, because we free().
We can "compress" the constant pool by discarding these literals.
We can add all the point_kinds values later if we need them.
We can allocate this node in any free slot in deptbl, because linked list nodes are only findable from another slot which explicitly specifies its index in the 'next' field.
We can also consider a regex to be anchored if OP_SOM starts all its branches.
We can compute an upper bound for the size of the result in advance and so we can prepare the buffer we pass to `sha256_crypt_r'.
We can compute an upper bound for the size of the result in advance and so we can prepare the buffer we pass to `sha512_crypt_r'.
We can easily detect direct recursion, but not mutual recursion.
We can fish out the UTF-8 setting once and for all into a BOOL, but we must not do this for other options (e.g. PCRE_EXTENDED) because they may change dynamically as we process the pattern.
We can get the item's length from the table, but for those that can match zero occurrences of a character, we must take special action for UTF-8 characters.
We can have twice as many indices as dimensions (because of None).
We can however report it back to PHP.
We can identify i and j with the x and y dimensions, respectively.
We can ignore the temporary data store on the stack from caching point of view.
We can ignore word boundary tests.
We can just ignore the repeat in JS case.
We can not return long strings from ICU functions, so we won't here too
We can only reach this point when reading a corrupt database file.
We can return right away for a truecolor image as deallocating colours is meaningless here
We can reuse a temporary table generated by a SELECT to our right.
We can save the cost of a memory load.
We can still let the OS do its job and be sure that each process gets the same address if desired.
We can then clear the array and begin accumulating any further context pointers without  requiring any dynamic allocation.
We can thus ignore the first parameter.
We can use true global even for ZTS because its usage is wrapped with exclusive lock anyway
We can use unsafe because we know the codepoint is in valid range and that 4 bytes is enough for any unicode point
We can't allow to set connection options for persistent connections.
We can't buffer, so must do UPDATEIFCOPY
We can't count on the environment variables TEMP or TMP, and so must make the Win32 API call to get the default directory for temporary files.
We can't just fail here, because of the possibility of quantifiers with zero minima.
We can't just unset them all at the start of the whole thing because they may get set in one branch that is not the final matching branch.
We can't pass through the aligned flag because it's not appropriate.
We can't return from hh_add until we know that hh_mem would succeed, which is to say that addr is no longer null.
We can't use zend_hash_index_find() because the array may have string keys or gaps.
We can't wait, do fold now
We cannot afford to block and must pass all read bytes immediately to the client.
We cannot allow two or more BtShared objects in the same database connection since doing so will lead to problems with locking.
We cannot avoid (useless) compiler diagnostics here:
We cannot be in random rowid mode if this is an AUTOINCREMENT table.
We cannot do this by looking at the value of code at the start and end of each alternative, because compiled items are discarded during the pre-compile phase so that the work space is not exceeded.
We cannot get connection as NULL or as a stub in this function.
We cannot open it, but we were able to stat it.
We cannot rely on the return value of readdir_r as it differs between various platforms (HPUX returns 0 on success whereas Solaris returns non-zero)
We cannot safely convert datetimes with units back into generic units.
We cannot use TMP3 because of this allocate_stack.
We cannot use a table of offsets, because the lengths of inserts such as XSTRING(MAX_NAME_SIZE) are not known.
We cannot use the new session create logic (OCISessionGet from client-side session pool) when privileged connect or password change is attempted or OCI_CRED_EXT mode is specified.
We cannot use this for other roundtrip calls as there is no way the user can access this error
We chain together the bracket offset fields that have to be filled in later when the ends of the brackets are reached.
We change the repeat type to the non-default.
We check the name first, and then check that we have reached the end of the name in the table.
We check these after opening the stream, so that we save on fstat() syscalls
We check to see if this is a left recursion that could loop for ever, and diagnose that case.
We come here from BRAZERO with allow_zero set TRUE.
We compact the heap when it gets twice as large as its initial size.
We compile conditionally)
We compute the squared-c0-distance term, then add in the other two.
We construct a temporary array, where each element is an array containing our sort key along with the filename.
We copy code into a non-register variable (tempcode) in order to be able to pass its address because some compilers complain otherwise.
We could add extra code to do the comparison, and perhaps we will someday.
We could allocate a fresh RowSetEntry each time one is needed, but it is more efficient to pull a preallocated entry from the pool
We could comp ute RMIN as BASE**( EMIN - 1 ),  but some machines underflow dur ing this computation.
We could compute RMIN as BASE**( EMIN - 1 ),  but some machines underflow during this computation.
We could handle 0-d arrays early on, but this makes sure that array-likes or odder arrays are always handled right.
We could handle PHP_MODE_PROCESS_STDIN in a different manner
We could initialize it, as shown here, to silence those complaints.
We could just call the php method directly ourselves at this point, but we do this with a C callback in case the xmlrpc library ever implements some cool usage stats, or somesuch.
We could link this with -Wl,-no_pie, but it is easier to just open the binary and read it from disk.
We could not find a matching RBRACKET.
We could not restore it to the original state in case of error.
We could probably use something smarter, but this is fast enough.
We could relax this constraint somewhat by saying that the terms of the ORDER BY clause must appear as unmodified result columns in the outer query.
We could try and emulate this by casting to a FD and fstat-ing it, but since the fd might not represent the actual underlying content this would give bogus results.
We count parameters from 1
We count row_count, but will return 0
We count the number of reduction axes at the same time.
We create always persistent, as if the user want to connecto to p:somehost, we can't convert the handle then
We create an anonymous memory file, whose `handle` might be inherited by slave processes.
We currently do not have stub support for non-persistent conns.
We currently don't early-bind classes that implement interfaces
We decided to implement OpenSSL::Config in Ruby level but we need to pass native CONF struct for some OpenSSL features such as X509V3_EXT_*.
We define IPV6_RECVPKTINFO to be IPV6_PKTINFO, so assume the assume user used IPV6_RECVPKTINFO
We define class_uchardata always so that it can be passed to add_to_class() always, though it will not be used in non-UTF 8-bit cases.
We deprecated the arguments for this method, but we decided keeping this behaviour for backward compatibility.
We did A already case 'A': case 'a':
We do a little bit-flipping magic, repeating the MSB as the LSB, to ensure that 0 maps to 0 and 127 maps to 255.
We do a prop-set using the first dimension as the property name, all subsequent dimensions and offset as parameters, with value as the final value
We do a variant of Knuth's algorithm D (vol.
We do have to hash non-persistent connections, and reuse connections.
We do it this way so that the user's traceback function will be called by a C function with proper unwind info.
We do it this way to save on using another stack variable, as stack usage is to be discouraged.
We do not anticipate changes to experimental interfaces but reserve the right to make minor changes if experience from use "in the wild" suggest such changes are prudent.
We do not care about the actual results of the select.
We do not give errors for those.
We do not handle case conversions for the UTF character set since the tables involved are nearly as big or bigger than SQLite itself.
We do not intend to support this case.
We do not need to check for special attributes on trivial types
We do not need to check the return value of php_win32_init_gettimeofday() because the symbol bare minimum symbol we need is always available on our  lowest supported platform.
We do not need to ping brand new connections.
We do not need to select pcre16_printint.c specially, because the COMPILE_PCREx macro will already be appropriately set.
We do not trust systems to provide a working fdatasync().
We do not use XMLWRITER_FROM_OBJECT, xmlwriter init function here
We do not use ZIP_FROM_OBJECT, zip init function here
We do not use zend_compile_binary_op for this because we want to retain the left-to-right evaluation order.
We do not want this code to appear when assert() is disabled.
We do not want to analyze these new virtual terms, so start analyzing at the end and work forward so that the added virtual terms are never processed.
We do not want to analyze these virtual terms, so start analyzing at the end and work forward so that the added virtual terms are never processed.
We do not want to create it again.
We do nothing here, this function is needed to prevent that the fallback header handling is called.
We do the ping in php_oci_create_session, no need to ping again below
We do this as a macro so that if the SQLITE_OMIT_MEMORYDB macro is set, the value of MEMDB will be a constant and the compiler will optimize out code that would never execute.
We do this by setting the "end of previous match" offset, because that is picked up at the top of the loop as the point at which to start again.
We do this in a subroutine because the error used to occur in multiple places.
We do this in the real compile phase, not in the pre-pass, where the whole group may not be available.
We do this part of the computation in 128-bit integers.
We do this regardless of whether or not an error occurred to ensure any dynamic allocation in sContext.s (a Mem struct) is  released.
We do this unconditionally so that out-of-scope pconnects are now consistent with oci_close and out-of-scope new connect semantics.
We don need to copy the data from the buffers which we will clean.
We don't actually need data yet, leave this filter in a feed me state until data is needed.
We don't cache non string object and expand it every time.
We don't handle 3.23 authentication
We don't have 'http://' so we use docref_root
We don't have control whether max_length will be used, unfortunately.
We don't have specialized opcodes for this, do nothing
We don't have to destroy all zvals if they cannot call any destructors
We don't have to free each allocated block separately, but we like to call all the destructors and callbacks in exactly the same order.
We don't have to restore the control head in case of a failed match.
We don't know how many are started and not yet finished (offset_top records the completed total) so we just have to save all the potential data.
We don't know whether it's a class or interface, assume it's a class
We don't mnd_calloc()  for a reason.
We don't need no stinkin' parameters...
We don't need the workspace here.
We don't need to alloc unless we are in a meta tag
We don't need to check for buffer overflow any more.
We don't need to handle soft partial matching case.
We don't need to keep the STR_PTR, only the previous private_data_ptr.
We don't need to repeat the search if we haven't yet reached the place we found it at last time.
We don't need to worry about old siblings that were moved to the free-list - the freePage() code has taken care of those.
We don't perform any cleanup, if dirdepth is larger than 0.
We don't raise exception, instead silently ignore it.
We don't seem to have any good way to detect that.
We don't support _C with pdo because it uses the data in a different way - just references it.
We don't support files.
We don't use isprint() because that can vary from system to system (even without the use of locales) and we want the output always to be the same, for testing purposes.
We don't want to do this as it leads to a memory leak when trying to delete the referenced counted node structures.
We don't want to have an arbitrary limit in the size of the password.
We don't want to leave sensitive data from our actual password hash computation on the stack or in registers.
We dup() here to avoid messing with the passed in fd.
We duplicate the file descriptor, because fclose on a tmpfile will delete the file, but any open descriptors can still access the phantom inode.
We ended up on Saturday, but there's still work to do, so move to Sunday and continue from there.
We expand other objects every time.
We explicitly don't support UTF-8 delimiters for now.
We failed long ago if this is not so
We first check for the minimum number of characters.
We first get a primary token and then create a duplicate impersonation token.
We found the list for 'key', so walk it.
We get back the length of the reference string explicitly rather than passing the address of eptr, so that eptr can be a register variable.
We get here if res was NULL but errflag wasn't set --- i.e. the conversion to a data-descr failed in _use_inherit
We get this from the beginning of htab.
We give an explicit error.
We gonna have a smaller or equally long string, estimation is almost neglecting
We got a bad exponent ('e' and maybe a sign).
We got already an error.
We got an illegal character so we are done accumulating.
We got here because we got a timeout signal, so we are in a signal handler at this point.
We got the info we needed
We got the key we wanted.
We had 3 instrs of which the first 2 can't live in the same bundle.
We handle nodes with measure functions specially here because they are the most expensive to measure, so it's worth avoiding redundant measurements if at all possible.
We have    * compiled a pattern, and performed a single match.
We have a borrowed reference to metadata so no need to alter reference count when throwing away Py_None.
We have a data character whose value is in c.
We have a decimal point, but no following digit.
We have a fixed-length byte sequence.
We have advanced in ps_fetch_from_1_to_8_bytes.
We have already increased count by 1 in pgsql_stmt_fetch()
We have already reached the end of this doclist.
We have an equality constraint on the rowid.
We have asked for CURSOR but got no cursor, because the condition above is not fulfilled.
We have created a converted copy of op1.
We have found a candidate table and column.
We have found a character range, so single character optimizations cannot be done anymore.
We have found a token.
We have found the first match within the subject string.
We have no native chgrp on Windows, nothing left to do if stream doesn't have own implementation
We have no native chown on Windows, nothing left to do if stream doesn't have own implementation
We have not grown past twice the size since we last gc'd
We have reached the end of the string.
We have returned all buffered data.
We have successfully halted and closed the VM.
We have therefore abandoned that approach.
We have to adjust the value or repeat_max, since one less copy is required.
We have to allow for a named reference to a duplicated name (this cannot be determined until the second pass).
We have to assume the last alternative.
We have to back up from the allocation pointer to find the MemBlockHdr.
We have to call shutdown callback it to free TS resources
We have to do a hash_del but need to preserve the resource if there is a positive refcount.
We have to do a slow recursive search in this case, but it is an unusual case.
We have to do some funky casting in order to initialize those fields.
We have to do this instead of letting pAppData point directly at the finder-function since C90 rules prevent a void* from be cast into a function pointer.
We have to fetch all data to clean the line
We have to free the previous contents of user's bound vars
We have to initialize zBuf to prevent valgrind from reporting errors.
We have to invent our own name.
We have to keep per-table autoincrement information in case inserts are done within triggers.
We have to keep per-table autoincrement information in case inserts are down within triggers.
We have to make it ASCIIZ temporarily
We have to push each row into a sorting index, terminate the first loop, then loop over the sorting index in order to get the output in sorted order
We have to realloc the buffer.
We have to release the mutexes on btrees that were acquired at the top.
We have to remember that there was XCLASS data, however.
We have to set differently our shared memory location on Windows.
We haven't enough information to catch that case precisely.
We house it in a separate routine from sqlite3_log() to avoid using stack space on small-stack systems when logging is disabled.
We ignore non-ASCII first chars in 8 bit mode.
We include pcre.h before pcre_internal.h so that the PCRE library functions are declared as "import" for Windows by defining PCRE_EXP_DECL as "import".
We indiscriminately use all the sharing modes, to match UNIX semantics.
We initialize x by assigning it a pointer to the dlsym() function.
We invoke it once here to suppress a compiler warning.
We iterate through all the arrays at once.
We iterate through the pattern, searching for the matching ending delimiter.
We just adjust the length as if we had.
We just cut a block from the end of the free block.
We just have a borrowed reference to op_request_dtype
We just have to import the definition.
We just have to record the current subject position and start match pointer and give a MATCH return.
We just need to update that slot with all the information we've collected.
We just return the 'wrong' day of week to be consistent.
We just store the last char here and then pass back to the caller (sapi_cli_single_write in sapi/cli) which will actually write due to -1 return code
We keep the original size of the heap to estimate how often we should garbage collect.
We know ALT_SIGN_EXT is set if it is an SLJIT_INT_OP on 64 bit systems.
We know at this place that *p is no delimiter, so skip it
We know nothing about other code points, because we have no tables.
We know that STR_PTR was stored on the top of the stack.
We know that the regSampleRowid row exists because it was read by the previous loop.
We know that there is at least one byte left in the subject.
We know that we have a mysqli object, so this failure should be emitted
We know there is enough place on the stack.
We lack experiences to use this API.
We maintain a separate cache for layouts and measurements.
We maintain the invariant that the latest_heap_size is at most the current heap size, to make sure the GC always collects
We make a simple difference and add the needed elements
We make it a bit less than INT_MAX to allow for adding in group terminating bytes, so that we don't have to check them every time.
We make sure "nnn" is not too be to avoid a denial of service attack when the SQL statement comes from an external source.
We may be able to handle single-segment arrays here using appropriate values of Order, Trans1, and Trans2.
We may be doing a cast for the buffer, and that may have failed
We may call a private function if: 1.
We may eventually want to use this information, but def it out for now
We may have half-cooked connections to clean up
We may have the last reference, then call zval_ptr_dtor() or we may leak memory.
We may want more reliable way eventually...
We might as well use the "version()" function as a substitute.
We might decide to remove the regex at all though and let the server side to handle it.
We mostly follow it, although in some cases we are less restrictive that it requires.
We must adjust codelink so that the value of ecode+codelink is unchanged.
We must go back to the parent
We must not advance Generator if we yield from a Generator being currently run
We must not delete any items in EG(zend_contants)
We must not request TSRM before being booted
We must re-initialize function again
We must try the original host and port information.
We mustn't change the current values of the data slot, because they may be set from a previous iteration of this group, and be referred to by a reference inside the group.
We need a : prefix to resolve a name to a parameter number
We need a dummy sqlite3Apis pointer for that code if regular extension loading is not available.
We need a loop in order to check for more white space and more comments after a comment.
We need an extra instruction in any case.
We need both SetEnvironmentVariable and _putenv here as some dependency lib could use either way to read the environment.
We need nothing more.
We need only a few extra variables to hold the errors immediately around the current column.
We need some execute_data placeholder in stacktrace to be replaced by the real stack trace when needed
We need something higher than 0x601 to enable _ftime64 and co
We need the child table as a SrcList for sqlite3WhereBegin()
We need the conn because we are doing lazy zval initialization in buffered_fetch_row
We need the length of the year to figure this out, so find Tishri 1 of the next year.
We need the length of the year to figure this out, so find Tishri 1 of this year.
We need the orinal image with each safe neoghb.
We need to advance the start offset, and continue.
We need to allocate more memory
We need to be sure to make a new copy of the data-type and any underlying dictionary
We need to check both the hash and the address of the data.
We need to check for finiteness, because INF, -INF and NAN must not have a decimal point added.
We need to compute these stretch values and set the final positions.
We need to copy the data from the buffers which we will clean.
We need to copy the resolution information over to the scalar Get the void * from the metadata dictionary
We need to defend against those failures when testing with SQLITE_TEST_REALLOC_STRESS, but we don't want the unreachable branches during a normal build.
We need to define _XOPEN_SOURCE as follows in order to enable recursive mutexes on most Unix systems and fchmod() on OpenBSD.
We need to detect this invalid data (with high probability) and ignore it.
We need to do slightly different things based on client/server method so lets remember which method was selected
We need to do so explicitly for 10.2 and earlier.
We need to do that only for relative elements.
We need to do this after normalisation otherwise we can't get "24H"
We need to do this before the check for active SQL statements below, as the v-table implementation may be storing some prepared statements internally.
We need to figure out the left/right padding lengths.
We need to finalize an internal statement
We need to fixup the parameter numbers on the parameters.
We need to iterate through the pattern, searching for the ending delimiter, but skipping the backslashed delimiters.
We need to manually convert to a pg native boolean value
We need to permute the array so that axis is placed at the end.
We need to preserve the counter.
We need to release the end pointer to perform the backtrack for the zero-length iteration.
We need to rollback the statement transaction, if there is one, or the complete transaction if there is no statement transaction.
We need to set correct status code, thus we need to see all HTTP headers first.
We need to set this because the user might not call use_result() or store_result() and we should be able to scrap the data on the line, if he just decides to close the statement.
We need to store the 'pos' since we'll modify it in the functions we're going to call and which do not support 'pos' as parameter.
We need to use TMP_REG3.
We need to use a union to make a cast.
We need to wait if FIFO is empty.
We nevertheless save it in a field for returning via the pcre_fullinfo() function so that if it becomes variable in the future, we don't have to change that code.
We now have ecode pointing to the condition or callout.
We now know closest, but first try to allocate exact
We now know the quotient digit.
We now use tmp_rsa_cb to generate a key of appropriate size whenever necessary
We only account for the single-byte and two-byte cases because we're only dealing with the first 256 Unicode codepoints.
We only allow comparing string to prevent unexpected results.
We only care about the file size, not the other file attributes, so as far as SQLite is concerned, an fdatasync() is always adequate.
We only care about the first newline character.
We only care about the white-space characters, the  wild-card characters, and the quote characters.
We only distinguish the MS extensions to ISO-8859-1.
We only do this check while compiling, or if any of the magic files were not compiled.
We only have types for characters less than 256.
We only know the exact method that is being called if it is either private or final.
We only need to check the outer level of this two-level loop, because of the requirement that EXTERNAL_LOOP be enabled.
We only need to generate a select expression if there is a limit/offset term to enforce.
We only remove the hash entry.
We only require IEEE, IBM, or VAX double-precision arithmetic (not IEEE double-extended).
We only search for a middle character if there is no range check.
We only set dataOnly if the file size is  unchanged since the file size is part of the inode.
We only special-case the FLOAT_SCALAR and integer types
We only unroll the first 1-, 2-, and 3- byte cases.
We only want positive step values.
We only want to know if the last command was successful.
We optimize the result set, so we don't convert all the data from raw buffer format to zval arrays during store.
We overwrite the high bits of source.
We pass this on to our PHP listeners, if any
We point D at C and try to atomically set events to point at D if and only if events still points at C.
We prefers register and simple consts.
We prepare a DACL (Discretionary Access Control List) so that we, the creator, are allowed all access, while "Everyone Else" is only allowed to read and write to the pipe.
We put the version info first, so future versions can easily change header info.
We re-read metadata for PS
We re-use the histogram space as an "inverse color map", essentially a cache for the results of nearest-color searches.
We reach here if the named table is a really a view
We reach this point for every '/' in `feature`.
We realloc the non-arena memory.
We rebuild load path partially if the cache is invalid.
We recheck it by FindFirstFile().
We recommend keeping 6 bits for G and 5 each for R and B.
We recommend keeping io.o for the extra debugging information it supplies.
We remove common factors of powers of 2 from relevant quantities.
We remove rsrc_dtor because we want the enclosing stream to be deleted from the resource list
We reset the empty-input-file flag for each image, but we don't clear the input buffer.
We return ZEND_INTERNAL_FUNCTION, but arg_info representation is the same as for ZEND_USER_FUNCTION (uses zend_string* instead of char*).
We revisit it when we process the corresponding TERM_VIRTUAL term
We satisfy both worlds: we create an envp array (which is vars), all entries are actually pointers inside buf.
We save the position of DO_FCALL for convenience in find_live_range().
We say the WhereLoop is "one-row" if it generates no more than one row of output.
We say the WhereLoop is "order-distinct" if the set of columns from that WhereLoop that are in the ORDER BY clause are different for every row of the WhereLoop.
We scale relevant quantities using O(log2(k)) rather than O(k) multiplications.
We scan the pattern to check that they are fixed length, and set their lengths.
We see the next array, so we update the sort flags of the previous array and reset the sort flags.
We set headers_sent to 1 here to avoid an infinite loop in case of an error situation.
We set its representation in the length/buffer, and then handle it as a data character.
We set the "hit end" flag if the pointer is at the end of the subject and also past the start of the subject (i.e. something has been matched).
We set the variable find_all to a non-zero value * if the -g option is present.
We should already hold a lock on the database connection
We should always be able to reacquire the read lock
We should be using "void *" but there are still machines that don't understand it.
We should check properly.
We should go back because later in this function there will be an advancement.
We should have hit EOF and not some other kind of error.
We should iterate the extra_op as well
We should keep an reference to return_value to prevent it from being dtor in case nesting calls to unserialize
We should look and see if we can fix that somehow
We should never get here, but just in case someone adds a new flex dtype...
We should never get here.
We should never write to the journal file the page that contains the database locks.
We should not fetch cgo_context_function until they have been, because that is where a call to SetCgoTraceback is likely to occur.
We should not have reserved FDs at this point
We should restore the flags before the label, since other taken jumps has their own flags as well.
We should still be on the same signal stack.
We should wait here instead.
We shouldn't have unconstructed objects in the first place
We skip the mutex on reading because (1) most platforms read a 32-bit integer atomically and (2) even if an incorrect value is read, no great harm is done since this is really just an optimization.
We sort this array, and then extract the filename from the result.
We start with the list of all the tokens produced by the Scanner together with short descriptions.
We still need to check to make sure the same column is used on all terms.
We store the result in the private property string so we can access the result in uncaught exception handlers without memleaks.
We support that for legacy.
We take the approach of translating immediately before every use of yytoken.
We temporarily allocate memory using malloc to serialize the Ocaml object.
We then add that zval to the array.
We then assume that EMAX + abs(EMIN) will sum approximately to the bound that is closest to abs(EMIN).
We think we might have a free slot, try to atomically grab it.
We track intermediate lock states in the sqlite3_file structure, but all locks SHARED or above are really EXCLUSIVE locks and exclude all other processes from access the file.
We try EPSV first, needed for IPv6 and works on some IPv4 servers
We try to avoid this by setting our own value first
We try to avoid to call FindFirstFileW() since it takes long time.
We try to call __sleep() method on object.
We turn this off in php_execute_script()
We unset it here so as to allow assertions later in the group to be quantified.
We use (signed) cast below because MSVC 6 compiler cannot convert unsigned __int64 to double.
We use SSL_CTX_set1_curves_list() to specify the curve used in ECDH.
We use a chained sequence of blocks that actually live on the stack.
We use a do-while loop so that we write at least 1 digit
We use a local variable that is preserved over calls to match() to remember this case.
We use a small timeout which should encourage the OS to send the data, but at the same time avoid hanging indefinitely.
We use a subroutine call to compute 2*DLAMBDA(I) to prevent optimizing compilers from eliminating this code.
We use an approach that tries to minimize side-channel leaks of password information - that is, we mostly use fixed-cost bitwise operations instead of branches or table lookups.
We use an integer converted to char for backward compatibility with pickled arrays.
We use io_seek to back cursor position when changing mode from text to binary, but stdin and pipe cannot seek back.
We use non-nested macros with expansion, as VC has problems
We use select rather than sleep because in older versions of glibc the sleep function does some signal fiddling to handle SIGCHLD.
We use the Indirection-following version of the API since we want to clone as much as possible
We use the last block on the worklist, because predecessors tend to be located before the succeeding block, so this converges faster.
We use this return value to alloc the final buffer.
We use this to detect if a variable is multiply assigned or left unassigned.
We use use saturating conversion to emulate strtol()'s behaviour.
We used the pathname directly.
We used to just set a dummy reference number, because it was not used in the first pass.
We used to require that sqlite3_reset() be called before retrying sqlite3_step() after any error or after SQLITE_DONE.
We used to use IDispatch for this, but it would not always work.
We verify this constraint in the single-threaded case by setting scratchAllocOut to 1 when an allocation is outstanding clearing it when the allocation is freed.
We want NPY_SAFE_CASTING or stricter, so that the loop selection code doesn't choose an integer loop for float inputs, or a float32 loop for float64 inputs.
We want all entries from offset to the end if length is not passed or is null
We want at least one event or timeout
We want our contours to stop if they hit the edge of such a zone, just as if they'd hit the edge of the whole mesh.
We want read to return every single byte, without timeout.
We want the backtrace to look as if the generator function was called from whatever method we are current running (e.g. next()).
We want those files to have *exactly* the same permissions as their original database, unadulterated by the umask.
We want to break any ties in favor of green, then red, blue last.
We want to capture the peer cert even if verification fails
We want to check the current branch of the current pattern to see if it could match the empty string.
We want to interpret it as a tuple, so make it one
We want to iterate through all of the segments.
We want to preserve the original bind type given by the user.
We want to shift the pointer pSpace up such that it is 8-byte aligned.
We want to use the A in "A glob B" to test for function overloading.
We want to verify that szPage and szExtra are the same for pOther and pCache.
We we pretend that the query was positional even if it was named so that we fall into the named rewrite case below.
We will allocate the table only if there are any named subpatterns.
We will atomically increment *heap every time we want to allocate.
We will either leak or give nirvana pointers
We will have to generate an ephemeral table to do the job.
We will just sit and wait forever on the IO operation.
We will make a new file ID
We will need an XCLASS if data has been placed in class_uchardata.
We will need to create our own temporary table to hold the intermediate results.
We will put everything in the object's state, so that on UnPickle it can use the string object as memory without a copy
We will run it anyhow, though, to guard against future changes to the code generator.
We will then skip the binary search of the RHS.
We will use it in two ways: preserving it literally, for use with compatible browsers, and compositing it ourselves against a background of our choosing (alpha blending).
We won't apply some optimization patterns for such variables.
We won't convert it into_DO_FCALL to emit error at run-time
We won't ever encounter XCL_PROP or XCL_NOTPROP when UCP support is not compiled.
We won't handle XLBoxes
We won't recieve unused arguments
We won't try to free something of we don't have loop variable.
We work around this by registering a thread-level mach exception handler and intercepting EXC_BAD_ACCESS.
We would decref newtype here.
We would get the correct results if nothing were ever disabled, but joins might run a little slower.
We would need to alter the memory RENEW code to decrement any reference counts before throwing away any memory.
We wrap the execute function to have fire the execute-entry/return and function-entry/return probes
We'll change its size and try creating palette versions of it.
We'll clear 'no' once we know the user has made a reasonable request.
We'll fall back to strtol, since that's what we used to do anyway.
We'll follow strategy 2.
We'll increment it after all that finishes.
We'll just assume that everything is Windows NT unless the programmer explicitly says otherwise by setting SQLITE_OS_WINNT to 0.
We'll just look for the first codestream at the root of the box structure and handle that.
We'll just refuse to handle such a path.
We'll set 'write' once we know the user's request requires that the image be written back to disk.
We're at the end of the level "cont_level" continuations.
We're done with the handle, so close it if we just opened it.
We're idle at this point.
We're in a PHP_INI_SYSTEM context, no restrictions
We're never going to find a spot
We're on a weekday, but we're going past Friday, so skip right over the weekend.
We're only supposed to get here when destructing the used_files hash, which doesn't really contain open files, but references to their names/paths
We're overriding the const of value here for the set_buf case where we overrode the char * to const char * earlier, since alloc_value actually keeps track of the const-ness for us
We're returning a pointer to ocaml land.
We're seeing this in some tests, which might imply that two flow processes with the same pid are starting up.
We've flushed the data far enough
We've modified it slightly to serve as a standalone hash table implementation for the full-text indexing module.
We've only got one right now.
We've run out of replacement strings, so use an empty one
We've run out of replacement strings, so use an empty one.
We, the developers, have no way to independently verify this, but Frank seems to know what he is talking about so we trust him.
Websites and infrastructure
Welsh parabolic windowing filter
Whaley, Computer Science Dept., Univ.
What actually matters are the bits set at the end of every result set (the EOF packet).
What does distinguish a title, however, is that if it is not None, it will be placed at the end of the tuple inserted into the fields dictionary.and can therefore be used to carry meta-data around.
What follows is a massive switch statement where each case implements a separate instruction in the virtual machine.
What happens is that after this destruction any use of the network will mean usage of the context, which means usage of already freed memory, bad.
What is important is that sparse cursor numbers all get mapped into bit numbers that begin with 0 and contain no gaps.
What operation to perform
What to do in case of uniqueness conflict on iPKey
What to do in state STATE-NUM.
What to do with a uniqueness conflict
What to do with query results
What to do with the lock
What to do with the query results
What to ideally do for truecolor images depends, alas, on the image.
What version of GCC is being used.
What's really needed is a good file locking module.
Whatever FuncDef structure is returned it will have fields overwritten with new information appropriate for the new function.
Whatever is the last value is what should be set
Whatever the cause, try to restore "p" to the place it is supposed to be pointing.
When  BETA  is supplied as zero then C need not be set on input.
When  alpha is zero then  A is not referenced and  B need not be set before entry.
When  doing coverage testing, the condition inside the argument to testcase() must be evaluated both true and false in order to get full branch coverage.
When "string" is specified, sets only "s" that is the first.
When #included in pcretest, we don't need this large table.
When +ext_enc+ and +int_enc+ are specified read strings will be converted from +ext_enc+ to +int_enc+ upon input, and written strings will be converted from +int_enc+ to +ext_enc+ upon output.
When +false+ is given as an argument, +self+ is yielded in blocking mode.
When BETA is supplied as zero then Y need not be set on input.
When Bignum or Rational is used (before 1823, after 2116, under nanosecond), Time works slower as when integer is used.
When EMIN is very small check for splits.
When EP_Reduced is set, then all the child Expr objects in the Expr.pLeft and Expr.pRight subtrees are contained within the same memory allocation.
When EXIF_DEBUG is defined the module generates a lot of debug messages that help understanding what is going on.
When FETCH_SIMPLE then buf wasn't allocated together with buf and we have to free it.
When IN_INDEX_LOOP is used (and the b-tree will be used to iterate through the set members) then the b-tree must not contain duplicates.
When KEY_USER, the last parameter is always the callback
When NEIGHBOR_WRAPPED, carried-out letter is stored into carry.
When NO_RECURSE is *not* defined, these just turn into a recursive call to match() and a "return", respectively (possibly with some debugging if PCRE_DEBUG is defined).
When ObjectSpace::reachable_objects_from returns an object with references to an internal object, an instance of this class is returned.
When Pack_32 is not defined, we store 16 bits per 32-bit Long.
When Rewind() is called, any data remaining in memory is flushed to a  final PMA.
When SQLITE_OMIT_WSD is defined, it means that the target platform does not support Writable Static Data (WSD) such as global and static variables.
When SQLite calls the xTruncate() method, the cache must discard all existing cache entries with page numbers (keys) greater than or equal to the value of the iLimit parameter passed to xTruncate().
When UTF-8 is enabled, a positive value greater than 255 may be returned in chptr.
When Unicode to Unicode conversion, with this and -x option, nkf can be used as UTF converter.
When WSD is unsupported, the variable declarations scattered throughout the SQLite code must become constants instead.
When a +size+ and an optional +default+ are sent, an array is created with +size+ copies of +default+.
When a block is freed, the new free block is connected to its adjacent free blocks if possible.
When a blocking connections transaction is concluded, there may be more than one blocked connection that has registered for an unlock-notify callback.
When a cached column is reused, make sure that its register is no longer available as a temp register.
When a calculation involving Bignum objects returns a result that will fit in a Fixnum, the result is automatically converted.
When a cursor is in  this state, restoreCursorPosition() can be called to attempt to seek the cursor to the saved position.
When a database instance goes down, it can leave several bad connections that need to be flushed out before getting a good one.
When a fiber is created it will not run automatically.
When a flag is True, it indicates to reduce along that axis.
When a function parameter is not used at all within the body of a function, it is generally named "NotUsed" or "NotUsed2" to make things even clearer.
When a master journal file is created, it is populated with the names  of all of its child journals, one after another, formatted as utf-8  encoded text.
When a match is found, the nRef member of the context containing the match is incremented.
When a name is one of a number of duplicates, a different opcode is used and it needs more memory.
When a new tokenizer implementation is registered, the caller provides a pointer to an sqlite3_tokenizer_module containing pointers to the callback functions that make up an implementation.
When a newline is found, its length is returned.
When a page is moved, the pointer in its parent must be updated to point to the new location.
When a pattern with bad UTF-8 encoding is compiled with NO_UTF_CHECK, it may compile without complaining, but may get into a loop here if the code pointer points to a bad value.
When a process first reads the schema it records the cookie.
When a rollback occurs, the value of K is decreased.
When a savepoint is created, the PagerSavepoint.iHdrOffset field is set to 0.
When a write operation exceeds that limit the content is written to a temporary file.
When actually compiling, we need to check whether this was a forward reference, and if so, adjust the offset.
When adding an index to the list of indices for a table, make sure all indices labeled OE_Replace come after all those labeled OE_Ignore.
When adding new APIs, add them to the bottom of this structure in order to preserve backwards compatibility.
When adding the first term to a segment, *ppWriter should be passed NULL.
When all references to all pages are released, a rollback occurs and the lock on the database is removed.
When all uses of a phar have been concluded, this frees the manifest and the phar slot
When allocating a new Vdbe object, all of the fields below should be initialized to zero or NULL
When an allow string is passed in we keep track of the string in state 1 and when the tag is closed check it against the allow string to see if we should allow it.
When an expired statement is executed using sqlite3_step() it will either automatically reprepare itself (if it was originally created using sqlite3_prepare_v2()) or it will fail with SQLITE_SCHEMA.
When appending to an array and the LONG_MAX key is already used null will be returned.
When bits SPILLFLAG_OFF or SPILLFLAG_ROLLBACK of doNotSpill are set, writing to the database from pagerStress() is disabled altogether.
When building up a FROM clause in the parser, the join operator is initially attached to the left operand.
When called from imagewbmp() the quality parameter stands for the foreground color.
When called with +len+, a string of +len+ bytes will be returned.
When called with no arguments, this method will return the contents until the first NULL byte.
When called with no arguments, this method will return the contents with the length of this pointer's +size+.
When called, *ppPoslist must point to the byte immediately following the end of a position-list.
When calling layoutNodeImpl and layoutNodeInternal, if the caller passes an available size of undefined then it must also pass a measure mode of CSSMeasureModeUndefined in that dimension.
When caught an exception (e.g. Ctrl+C), let's broadcast kill request again to ensure killing all threads even if they are blocked on sleep, mutex, etc.
When columnType() is called on the expression  "(SELECT t1.col)", the correct type is returned (see the TK_SELECT branch below.
When comparison of two elements returns +0+, the order of the elements is unpredictable.
When compiled as part of the library, the store is obtained via PUBL(malloc)(), but when compiled inside dftables, use malloc().
When compiling for Windows 10, always assume "mincore.lib" is in use.
When compiling the test fixture or with debugging enabled (on Win32), this variable being set to non-zero will cause OSTRACE macros to emit extra diagnostic information.
When compiling to use the heap rather than the stack for recursive calls to match(), the RRETURN() macro jumps here.
When constructing a certificate chain, search the Store first for the issuer certificate.
When converting floating-point integers less than 1e16, we use floating-point arithmetic rather than resorting to multiple-precision integers.
When converting from UTF-16, the maximum growth results from translating a 2-byte character to a 4-byte UTF-8 character.
When converting from UTF-8 to UTF-16 the maximum growth is caused when a 1-byte UTF-8 character is translated into a 2-byte UTF-16 character.
When create_function_v2() is called to create a function with a destructor, a single object of this type is allocated.
When decompressed_size is 0, then the data is not compressed, and we have wasted 3 bytes
When decrypting, the authenticated data must be set after key, iv and especially *after* the authentication tag has been set.
When deep is false Element nodes still require the attributes Following taken from libxml as xmlDocCopyNode doesnt do this
When deferred constraints are used the commit could fail, and a ROLLBACK implicitly ran.
When determining tokens to defer, each AND/NEAR cluster is considered separately.
When dftables is run, it creates these tables in the current locale.
When disabled - it does not.
When doing a nested parse, one can include terms in an expression that look like this:   #1 #2 ...
When doing a search of an r-tree, instances of the following structure record intermediate results from the tree walk.
When doing coverage testing ALWAYS and NEVER are hard-coded to be true and false so that the unreachable code they specify will not be counted as untested code.
When doing coverage testing, the condition inside the argument to testcase() must be evaluated both true and false in order to get full branch coverage.
When done, the output of Cipher#final should be additionally added to the result.
When dumping an object the instance method _dump is called with an Integer which indicates the maximum depth of objects to dump (a value of -1 implies that you should disable depth checking).
When easy handle is cleaned up, if the handle was previously used by the curl_multi_api, the connection remains open un the curl multi handle is cleaned up.
When enabled, a session object records changes made to the database.
When executed in the CLI or CGI command-line sapi, this works exactly like mapPhar().
When executing a "DROP TABLE" or "DROP INDEX" statement, SQLite checks if there are any currently executing SELECT statements that belong to the same connection.
When expat is done parsing, the tree can be walked, thus retrieving the values.
When finished, drop the ephemeral table.
When finished, leave *pz pointing to the first character past the end of the integer.
When floating-point is omitted, double and int64 are the same thing
When found, set *piTab and *piCol to the table index and column index of the matching column and return TRUE.
When found, the block stops executing and returns _val_ (or +nil+ if no second argument was given to +throw+).
When full-text index nodes are loaded from disk, the buffer that they are loaded into has the following number of bytes of padding at the end  of it.
When gd 1.x was first created, floating point was to be avoided.
When generating code for an SQL UPDATE operation, this function may be called twice - once to "delete" the old row and once to "insert" the new row.
When getNextNode() is called, it sets ParseContext.isNot to true if the 'next node' is a  FTSQUERY_PHRASE with a unary "-" attached to it.
When having the former no comparison of the data is done (part of DIFF_ASSOC)
When having the former no comparison of the data is done (part of INTERSECT_ASSOC)
When holding READ_LOCK(0), the reader ignores the entire log file, which implies that the database file contains a trustworthy snapshoT.
When holding READ_LOCK(0), the reader ignores the entire log file, which implies that the database file contains a trustworthy snapshot.
When idx reaches MERGE_COUNT (default 16), all level 0 segments are merged into a single level 1 segment.
When in doubt return FALSE.
When in doubt, return false.
When inserting multiple records into an intkey b-tree using a single cursor (as can happen while processing an "INSERT INTO ...
When invalid_byte_sequence error, some bytes are discarded and some bytes are buffered to be converted later.
When it *is* set, we substitute Unicode property tests.
When it comes to thread-locals, they are accessible within the entire scope of the thread.
When it is called, *pp1 and *pp2 must both point to position lists.
When it reaches 0, the destructor is invoked and the FuncDestructor structure freed.
When it reaches zero, remove the BtShared structure from the sharing list.
When it reaches zero, the u1.isInterrupted field of the sqlite3 structure is set in order to simulate an interrupt.
When it returns NULL, it does not set a Python exception.
When iterating more than one object, it only flips strides when they are all negative or zero.
When later compared with the data, the sign extension must have happened.
When listen.users and listen.groups not configured, continue with standard right
When loading an object dumped using marshal_dump the object is first allocated then marshal_load is called with the result from marshal_dump.
When locks are created or removed, we have to look at our own internal record of the locks to see if another thread has previously set a lock on that same inode.
When match() is called in other circumstances, don't add to the chain.
When multiple functions have the same name, the hash table points to a linked list of these structures.
When multiple overflows occur, they are always sequential and in sorted order.
When multiple threads all reference the same log-summary, each thread has its own winFile object, but they all point to a single instance of this object.
When multiple threads all reference the same wal-index, each thread has its own unixShm object, but they all point to a single instance of this unixShmNode object.
When nPendingData exceeds nMaxPendingData, all hash tables are flushed to disk.
When ndim is 1 and the strides point in the same direction, the lower-level inner loop handles copying of overlapping data.
When nkf converts to Shift_JIS, nkf adds a specified escape character to specified 2nd byte of Shift_JIS characters.
When no string data is being returned, or no vector has been passed in which to put it, ensure that nmatch is zero.
When not in UTF-8 mode, load a single-byte character.
When not in UTF-8 mode, the length is always 1.
When open_basedir is NULL, always return 0.
When opening a zero-size database, the findInodeInfo() procedure writes a single byte into that file in order to work around a bug in the OS-X msdos filesystem.
When opening the databases, RBU passes the SQLITE_CONFIG_URI flag to sqlite3_open_v2().
When overflow occur, (size_t)-1 is returned.
When overriding this method, it should return a string whose encoding is compatible with the default external encoding.
When pBuf is not NULL simply return pBuf.
When parsed by ASN1.decode, tagged values are always represented by an instance of ASN1Data.
When passing the backup file as isc_spb_dbname and the destination db as bpk_file, things work well.
When people have lines longer than 8K, we waste 1 byte per additional 8K or so.
When playing back page 1, restore the nReserve setting
When present, the BOM is stripped and the external encoding from the BOM is used.
When provided, extobj and typetup contain borrowed references
When reader/writer locks are used, the lock is placed on the same range of bytes that is used for probabilistic locking in Win95/98/ME.
When reading the journal this value tells SQLite to assume that the rest of the journal file contains valid page records.
When readpartial blocks, it waits data or EOF on the stream.
When readpartial doesn't blocks, it returns or raises immediately.
When readpartial meets EWOULDBLOCK and EINTR by read system call, readpartial retry the system call.
When recursion is being used, local variables are allocated on the stack and get preserved during recursion in the normal way.
When recursion is not being used, all "local" variables that have to be preserved over calls to RMATCH() are part of a "frame".
When reducing a lock such that other processes can start reading the database file again, make sure that the transaction counter was updated if any part of the database file changed.
When referencing constants in classes inheriting from Object you do not need to use the full namespace.
When reg can be unused.
When reg cannot be unused.
When reloaded, dlopen() will return the handle of the already loaded module.
When resolving names, the inner-most  context is searched first.
When resolving names, the inner-most context is searched first.
When resuming an RBU update, the zState argument must be passed the same value as when the RBU update was started.
When rolling back such a statement we must not write to the original database unless we know for certain that original page contents are synced into the main rollback journal.
When running from an .apk, /dev/stderr and /dev/stdout redirect to /dev/null.
When running in synchronous mode, this can only happen  if the page is on the free-list at the start of the transaction, then populated, then moved using sqlite3PagerMovepage().
When running trap handler
When sending the next command, which expects response we will read the unexpected data and error message will look weird.
When separated they can both (usually) operate without having to push values to the stack on entry and pop them back off on exit, which saves a lot of pushing and popping.
When set to +true+, all threads will report the exception if an exception is raised in any thread.
When solving the final problem, we no longer need the stored data, so we will overwrite the data from this level onto the previously used storage space.
When space is allocated, *ppFrom is advanced past the end of the allocated space.
When specifying length of UNICODE the number of characters is given to match the STRING interface.
When sqlite3PcacheTrace is 1, single line trace messages are issued.
When sqlite3PcacheTrace is 2, a dump of the pcache showing all cache entries is displayed for many operations, resulting in a lot of output.
When state is saved, any commit to the *-oal file and the commit to the RBU update database are not atomic.
When stress mode is enabled, the GC is invoked at every GC opportunity: all memory and object allocations.
When subclassing the Thread class, the +initialize+ method of your subclass will be ignored by ::start and ::fork.
When such a change is attempted the error is raised in different locations according to the platform.
When suspending, the compressor will back up to a convenient restart point (typically the start of the current MCU).
When suspending, the decompressor will back up to a convenient restart point (typically the start of the current MCU).
When sync mode is true, all output is immediately flushed to the underlying operating system and is not buffered by Ruby internally.
When sync mode is true, all output is immediately flushed to the underlying operating system and is not buffered internally.
When target pid is self, many caller assume signal will be delivered immediately and synchronously.
When terms are satisfied by indices, we disable them to prevent redundant tests in the inner loop.
When testing, also keep a count of the number of open files.
When testing, keep a count of the number of open files.
When that file became too big (over 6000 lines long) it was split up into several smaller files and this header information was factored out.
When that happens and the object looks like a dictionary, we truncate the dimensions and set the object creation flag, otherwise we pass the error back up the call chain.
When that happens, it returns WAL_RETRY to indicate to the caller that it is safe to retry immediately.
When that happens, let sqlite3SelectPrep() do all of the processing for this SELECT.
When that happens, the second error will be reported since these interfaces always report the most recent result.
When that is so, this routine can be used to access the key and data without making a copy.
When the     * newline convention is such that CRLF is a valid newline, we must       * advance by two characters rather than one.
When the BOM is missing the given Unicode encoding is used as +ext_enc+.
When the IN_INDEX_LOOP bit is set, the IN index will be used to loop over all values of the RHS of the IN operator.
When the Interbase client API library libgds.so is first loaded, it registers a call to gds__cleanup() with atexit(), in order to clean up after itself when the process exits.
When the LockFile function was used, it was always expected to fail immediately if the lock could not be obtained.
When the NATURAL keyword is present, add WHERE clause terms for every column that the two tables have in common.
When the Next() operation is invoked, PmaReader 5 will be advanced to the next key in its segment.
When the Next() operation is invoked, iterator 5 will be advanced to the next key in its segment.
When the SQLITE_IOCAP_SAFE_APPEND flag is set.
When the SQLITE_SYNC_DATAONLY flag is used, it means that the sync operation only needs to flush data to mass storage.
When the VdbeSorterWrite()  function flushes the contents of memory to disk, it immediately always creates a new list consisting of a single key immediately afterwards.
When the assertion is part of a condition, we want to return immediately afterwards.
When the b-tree is being used for membership tests, the calling function might need to know whether or not the RHS side of the IN operator contains a NULL.
When the buffer fills up empty it and start over.
When the callback function is called, it will be passed 2 parameters: 1)VALUE tpval - the TracePoint object from which trace args can be extracted.
When the caller is done with it, it should be Release()d.
When the check function is first in the linked objects, it is ambiguous.
When the constructor gets called the object is already created by the engine, so we must only call 'additional' initializations.
When the core wants to read from the virtual table, it creates a virtual table cursor (an instance of the following structure) using the xOpen method.
When the count reaches zero, close any other file descriptors whose close was deferred because of outstanding locks.
When the cursor is OPFLAG_SEEKEQ, this opcode must be followed by an IdxGE opcode with the same arguments.
When the cursor is OPFLAG_SEEKEQ, this opcode must be followed by an IdxLE opcode with the same arguments.
When the enumerator is actually enumerated (e.g. by calling #force), +obj+ will be enumerated and each value passed to the given block.
When the file is created, the caller specifies a buffer size for an in-memory buffer to be used to service read() and write() requests.
When the first argument to this interface is 1, then only the C-API is enabled and the SQL function remains disabled.
When the first call occurs and the request is not set up, flush fails on FastCGI.
When the input +str+ is empty an empty Array is returned as the string is considered to have no fields to split.
When the locking level reaches NO_LOCK, delete the lock file.
When the memory cell is deleted or overwritten, the VdbeFrame object is not freed immediately.
When the method is identified by a string, the string is converted to a symbol.
When the method name parameter is given as a string, the string is converted to a symbol.
When the minimum is greater than 1, there will be earlier copies of the group, and so we still have to wrap the whole thing.
When the new array is deallocated, the original array held in base is updated with the contents of the new array.
When the new root page was allocated, page 1 was made writable in order either to increase the database filesize, or to decrement the freelist count.
When the number of output rows reaches nRow, that means the listing has finished and sqlite3_step() should return SQLITE_DONE.
When the page is next fetched by the b-tree layer, it  will be read from the database file, which may or may not be  current.
When the parser and code generate call themselves recursively, the first part of the structure is constant but the second part is reset at the beginning and end of each recursion.
When the parser is run recursively this way, the final OP_Halt is not appended and other initialization and finalization steps are omitted because those are handling by the outermost parser.
When the position reached at the end, StopIteration is raised.
When the proc is called with a number of arguments that is lower than the method's arity, then another curried proc is returned.
When the ref-count reaches zero, call the xDisconnect() method to delete the object.
When the reference count reaches zero the structure is deleted.
When the schema cookie changes, record the new cookie internally
When the stmt will again be executed then the result set will be cleaned, the bound variables will be separated before that.
When the sub-program is finished,  these values are copied back to the Vdbe from the VdbeFrame structure, restoring the state of the VM to as it was before the sub-program began executing.
When the thread is next woken up, it will attempt to reacquire the lock.
When the transaction is committed, the commit fails if the current value of the counter is greater than zero.
When the value returned to V is a string, space to hold that string is managed by the prepared statement S and will be automatically freed when S is finalized.
When the virtual-table mechanism stabilizes, we will declare the interface fixed, support it indefinitely, and remove this comment.
When the zeros are generated, the zeros and abs(x) consists numdigits*(2**power_level) characters at total.
When there are any characters after the first NUL
When there are no IN operators in the constraints, the "addrNxt" label is the same as "addrBrk".
When there is an IN operator, we also have a "addrNxt" label that means to continue with the next IN value combination.
When there is no more expansion invoke the standard globbing routine to glob the rest of the magic characters
When this function is called the *pFlags variable should contain the default flags to open the database handle with.
When this function is called, *paChange points to the start of the record to deserialize.
When this function is called, *paPoslist points to the position list, and *pnToken is the number of phrase tokens in, the phrase on the other side of the NEAR operator to pPhrase.
When this function is called, *pnEntry contains the current size of the array (in entries - so the allocation is ((*pnEntry) * szEntry) bytes in total).
When this function is called, *pnOut is set to the sqlite3LogEst() of the number of rows that the index scan is expected to visit without  considering the range constraints.
When this function is called, *pp points to the first byte following a varint that is part of a doclist (or position-list, or any other list of varints).
When this function is called, *pp points to the start of an element of the list.
When this function is called, *ppCollist should point to the beginning of the first varint in the column-list (the varint that contains the position of the first matching term in the column data).
When this function is called, *ppData points to the start of the  content area on page pPg.
When this function is called, *ppPoslist is assumed to point to the  start of a column-list.
When this function is called, *ppPoslist is assumed to point to the  start of a position-list.
When this function is called, *ppRec must either point to an object allocated by an earlier call to this function, or must be NULL.
When this function is called, *ppRec points to the start of a record that contains nCol values.
When this function is called, both *paOne and *paTwo point to a value  within a change record.
When this function is called, buffer *ppList (size *pnList bytes) contains  a position list that may (or may not) feature multiple columns.
When this function is called, if *pp points to pEnd or greater, then the end of the buffer has been reached.
When this function is called, the database file has been completely updated to reflect the changes made by the current transaction and synced to disk.
When this function is called, the requested changeset is created using both the accumulated records and the current contents of the database file.
When this global variable is positive, it gets decremented once before each instruction in the VDBE.
When this happened, the server abends when tsrm_tls_table is accessed since it is NULL.
When this is NULL, apache won't override the hard-coded default php.ini path setting.
When this is called the journal file for pager pPager must be open.
When this is called, the master journal should already have been created, populated with this journal pointer and synced to disk.
When this is done, the chunk index refers to the second block of the chunk.
When this is needed, provide a Descr for 'requested_dtype', otherwise provide NULL.
When this is the case, the nmatch and pmatch arguments are ignored, and the only result is yes/no/error.
When this list is changed, the code at HEAP_RETURN below must be updated in sync.
When this returns true, the dtype can be reconstructed from a list of the field names and dtypes with no additional dtype parameters.
When this routine is the Walker.xExprCallback then expression trees are walked without any actions being taken at each node.
When this value reaches its maximum,  an SQLITE_FULL error is generated.
When thread scheduling, running thread release GVL.
When timer thread is polling mode, we don't want to make confusing timer thread interval time.
When to reset OP_Once counters
When turnning cache spill on, the size is set to the current cache_size.
When two keys are equal, the order of the corresponding elements is unpredictable.
When two or more connections are sharing the same database file, each connection has it own private Btree object for the file and each of those Btrees points to this one BtShared object.
When used as an iterator, ranges return each value in the sequence.
When used, the private pool is PRIVATE_MEM bytes long:  2304 bytes, unless #defined to be a different length.
When using #dup, any modules that the object has been extended with will not be copied.
When using ENABLE_MEMORY_MANAGEMENT, memory cell buffers can be freed lazily via the sqlite3_release_memory() API.
When using methods (2) or (3), it is important that the tokenizer only provide synonyms when tokenizing document text (method (2)) or query text (method (3)), not both.
When using the new, both implicity and explicit AND operators have a higher precedence than OR.
When virtual tables intend to provide an overloaded function, they should call this routine to make sure the global function exists.
When we already have some bits in our internal buffer concatenate both inputs first.
When we are actually compiling, find the bracket that is being referenced.
When we choose to "support" invalid salts, nevertheless disallow those containing characters that would violate the passwd file format.
When we come from outside, private_data_ptr contains the previous STR_PTR.
When we find the nearest color for a cell, its colormap index plus one is recorded in the cache for future use.
When we have a complete permutation of array indices, copy the values at those indices into a new array and yield that array.
When we have a complete repeated permutation of array indices, copy the values at those indices into a new array and yield that array.
When we have a match and the offset vector is big enough to deal with any backreferences, captured substring offsets will already be set up.
When we have finished copying the serialized data into our heap we need to free the memory we allocated to avoid a leak.
When we hit a repeat whose minimum is zero, we may have to adjust these values to take the zero repeat into account.
When we reach the first optional character position, we can save stack by doing a tail recurse.
When we see EOFCode, then we don't expect to see any more data.
When we're reducing a single element, and it's still the same element, don't overwrite it even when reuse reduce loops is unset.
When we've finished, and it's an input command (meaning that it's the processes argv), we'll do globing and then build the argument vector.
When working with UTF-8 we move back a number of characters, not bytes.
When x is zero, power_cache_get_power(base, power_level) should be cached already.
When you set a new fiber-local it is only accessible within this Fiber.
When you want to construct a time this way you must pass at least a year.
When you want to handle these conversion errors, use Encoding::Converter#primitive_convert.
When you want to set property with argument, you can use this method.
Whenever  possible, WAL and journal files are created using the same permissions  as the associated database file.
Whenever Mem contains a valid string or blob representation, one of the following flags must be set to determine the memory management policy for Mem.z.
Whenever a leaf page is extracted from the free-list, optimization 2 above is omitted if the corresponding bit is already set in BtShared.pHasContent.
Whenever a page is  moved to become a free-list leaf page, the corresponding bit is set in the bitvec.
Whenever an SQLITE_OPEN_WAL file is opened, the (rbu_file.pWalFd) member variable of the associated database file descriptor is set to point to the new file.
Whenever it returns a negative (error) response, the outer incarnation must also return the same response.
Whenever one of the tokens X, Y, or Z is input to the parser but it does not parse, the type of the token is changed to ID and the parse is retried before an error is thrown.
Whenever the first page of a main database file is read or  written, the value of the change-counter cookie is stored in rbu_file.iCookie.
Whenever this column is read, the rowid will be substituted in its place.
Where +object_id+ is the numerical form, +short_name+ is the short name, and +long_name+ is the long name.
Where 0 stands for Sunday, 1 for Monday, etc.
Where a is numerator and b is denominator.
Where a is real part, b is imaginary part and i is imaginary unit.
Where clause to locate temp triggers
Where return pointer will be stored
Where the ExceptionClass is the interrupt handled by the given block.
Where the SELECT should store results
Where the heap started (bottom)
Where the heap will end (top)
Where the new search starts
Where the value MaxVal is the largest value which can be represented by one BDIGIT word in the computer used.
Where to coninue if an alternative is successfully matched.
Where to continue from afterwards
Where to get hi to lo bytes from
Where to get lo to hi bytes from
Where to jump back to
Where to jump to continue with the next IN case
Where to jump when NULLs seen in step 2
Where to put an error message
Where to put code (updated)
Where to send the data
Where to start scanning
Where to write results
Where to write the extracted value
Where to write the frame
Where two or more frames correspond to the same database page, the iterator visits only the  frame most recently written to the WAL (in other words, the frame with the largest index).
Where we start to search
WhereClause currently being scanned
WhereLoop describes the algorithm.
WhereLoop p is better if: (1)  p has no more dependencies than pTemplate, and (2)  p has an equal or lower cost than pTemplate
WhereLoop.u.btree.pIndex is valid
WhereLoop.u.vtab is valid
Whereas a reader has only read-access to the database, a writer has read- and write-access.
Whether machine is little endian
Whether or not a database might need a master journal depends upon its journal mode (among other things).
Whether or not a match is found, SQLITE_OK is returned if no error occurs.
Whether or not a new page may be allocated by this function depends on the value of the createFlag argument.
Whether or not paBlob is NULL, *pnBlob is set to the size of the blob in bytes before returning.
Whether or not the file does end up memory mapped of course depends on the specific VFS implementation.
Whether or not the journal file is opened by this function, the Pager.pInJournal bitvec structure is allocated.
Whether the centre z is higher than the 1 or 2 contour levels is stored in the saddle array so that it does not need to be recalculated in subsequent passes.
Whether the function call succeeded or failed, set the output parameters to whatever their local counterparts contain.
Whether this speeds things up or slows things down depends on the machine and the number being converted.
Whether to check the server certificate is valid for the hostname.
Whether to preserve keys while copying to the new array or not
Whether to quote additional delim char
Whether to return non-matching entries
Which action to take is determined by the overrideError parameter.
Which can mean that fillInCell() only initializes the first 2 or 3 bytes of pTmpSpace, but that the first 4 bytes are copied from it into a database page.
Which can only happen if a single page is linked into more than one b-tree structure in a corrupt database.
Which can only happen if the database is corrupt in such a way as to link the page into more than one b-tree structure.
Which column of pTab is desired
Which column of the vector to return
Which column to return
Which columns are used by this index.  1st is 0
Which cookie to read or write
Which coordinate to extract
Which db file is being initialized
Which does match the WHERE clause, and so the query returns a row.
Which entry in the FROM clause
Which is a problem, since "rowid" and "docid" are aliases for the same value.
Which is also what we get if we just continue without this special case, so this special case is unnecessary.
Which is undesirable.
Which letters exactly are replaced, and by which other letters, depends on the presence or absence of options, and on the +encoding+ of the string.
Which level of the tree we are on
Which loop to provide hints for
Which metric to return
Which nested loop of the FROM we are coding
Which read lock is being held.
Which tables are currently available
Which uses instances of the  other Fts5StructureXXX types as components.
Which will be cleared by the call to pager_unlock(), as described above.
Which would be incorrect in  WAL mode.
Whichever it was, this module duplicates the  limitation.
Whichever key is smaller, the aTree element is set to the index of it.
While +sync+ mode is +true+, the compression ratio decreases sharply.
While Fixnum values are immediate, Bignum objects are not---assignment and parameter passing work with references to objects, not the objects themselves.
While an RBU handle is open, a SHARED lock may be held on the target database file.
While array unfinished do E(N0) holds the value of SIGMA when submatrix in I0:N0 splits from the rest of the array, but is negated.
While basic arithmetic operators always produce numeric string errors, bitwise operators don't produce errors if both operands are strings
While doing so, set nWork.
While it is not likely in practical situations to have strings longer than INT32_MAX, these are different types and need to be handled carefully.
While reading the file both the internal and external encoding must be specified to obtain the correct result.
While submatrix unfinished take a good dqds step.
While the C API has PyDate_* and PyDateTime_* functions, the following implementation just asks for attributes, and thus supports datetime duck typing.
While the destructive operations will modify the array they were called on, the non-destructive methods usually return a new array with the selected elements, but leave the original array unchanged.
While the pager remains in the ERROR state, all major API calls on the Pager will immediately return Pager.errCode.
While the xInstCount/xInst APIs are more convenient to use, this API may be faster under some circumstances.
While there is nothing to prevent an application from calling sqlite3_log(), doing so is considered bad form.
While this is technically valid in an email address, these parts aren't actually part of the address itself.
While this module could theoretically support it, sqlite3RowSetNext() is never called after sqlite3RowSetText() for the same RowSet.
While this other process is holding the file open, we will be unable to delete it.
While this sounds somewhat
While we need more tokens to fetch, do it.
While we would have liked to simply fix the bug and move on, we have to provide a backwards compatibility feature (essentially the bug) for some systems and a safety measure for some others.
White space is ignored
Whitespace in the separator matches any length of whitespace in the text, and a match for whitespace around the separator is added.
Whitespace is defined as any of the following characters: null, horizontal tab, line feed, vertical tab, form feed, carriage return, space.
Whitespace never causes a state transition and is always ignored.
Whole-pattern recursion is coded as a recurse into group 0, so it won't be picked up here.
Width of the current field
Will also accept ten arguments in the order output by Time#to_a.
Will be freed in the mysqlnd_internal_free_result_contents() called by the resource destructor.
Will become the return value of this function
Will get native-byte order contiguous copy.
Will raise an  +IOError+ if the strio* is not writeable.
Will raise an +IOError+ if the strio* is not readable.
Will raise an EngineError if the digest is unavailable.
Will recompute otherwise centrums are Voronoi centers instead
Win XP specific, Unicode
Win XP specific, Unicode, not to be confused with SubjectDistance and SubjectLocation
Win32 select() will only work with sockets, so we roll our own implementation here.
Win32OLE converts Ruby object into OLE variant automatically when invoking OLE methods.
Win32OLE returns WIN32OLE_RECORD object if the result value of invoking OLE methods.
WinCE has no concept of a relative pathname, or so I am told.
WinCE lacks native support for file locking so we have to fake it with some code of our own.
WinRT has no way to convert a relative path to an absolute one.
Windows "version" 6.2 could be Windows 8/Windows Server 2012, but also Windows 8.1/Windows Server 2012 R2
Windows (win32/crypt) has a stripped down version of libxcrypt and a CryptoApi md5_crypt implementation
Windows 8.1/Windows Server 2012 R2
Windows XXX: we have to use this ugly defined(__GNUC__) because it is not easy to detect the compiler used in distutils itself
Windows and Netware use the internal mail
Windows build boxes and such things
Windows does not like when closed descriptor is closed again.
Windows happily opens files with some garbage in the end of file name.
Windows has GetTempFileName(), but it closes the file after creation, leaving it open to a horrible race condition.
Windows has SecureZeroMemory() since XP.
Windows only implements a limited amount of fields from the rusage struct
Windows platform, either MinGW or Visual Studio (MSVC)
Windows sys/types.h does not provide these
Windows will only let you create file view mappings on allocation size granularity boundaries.
With +ary+ containing only the remainder elements, not including what was shifted to +new_ary+.
With -O2, this jumps to 6.6 percent.
With BTREE_INTKEY, the table key is a 64-bit integer and arbitrary data is stored in the leaves.
With DEBUG enabled, some asserts below will ensure that the byte order of floating point values is correct.
With GROUP BY and DISTINCT the only requirement is that equivalent rows appear immediately adjacent to one another.
With IEEE arithmetic, ties are broken by the IEEE round-even rule.
With ORDER BY, the  pOrderBy terms must be matched in strict left-to-right order.
With SQLITE_ACCESS_EXISTS, the xAccess method simply checks whether the file exists.
With SQLITE_ACCESS_READ, the xAccess method checks whether the file is readable.
With SQLITE_ACCESS_READWRITE, the xAccess method checks whether the named directory is both readable and writable (in other words, if files can be added, removed, and renamed within the directory).
With SQLITE_TEST_REALLOC_STRESS grow the op array by the minimum* amount required until the size reaches 512.
With a covering index, the original table never needs to be accessed.
With a single +String+ argument, raises a +RuntimeError+ with the string as a message.
With a style, so they won't overprint each other.
With arguments, sets the named methods to have private visibility.
With arguments, sets the named methods to have protected visibility.
With arguments, sets the named methods to have public visibility.
With debug mode, all erros added to the OpenSSL error queue will be printed to stderr.
With default precision the result is not proper on WinXP.
With dotfile locking, we really only support state (4): EXCLUSIVE.
With the "v2" prepare interfaces, the underlying reason for the error is returned immediately.
With the PECL OCI 1.3.x extensions, we release pconnections when oci_close takes the refcount to zero.
With the addition of multiple database support, the following structure can also be used to describe a particular table such as the table that is modified by an INSERT, DELETE, or UPDATE statement.
With the addition of the class method ::handle_interrupt, you can now handle exceptions asynchronously with threads.
With the flag set, NULL and false should be returned, respectively.
With the other traits, we are more permissive.
With this method, you can find memory leaks.
With this opcode, register P3 might not contain an integer.
With this option, sqlite3VtabSync() is defined to be simply  SQLITE_OK so p is not used.
With this routine, there is no guarantee that results will be stored in target.
With unsafe casting, convert unrecognized objects into NaT and with same_kind casting, convert None into NaT
With write back, we can create some sophisticated loads, but it is hard to decide whether we should convert downward (0s) or upward (1s).
Within EofA and EofB, and EOF on entry or following nextX causes a jump to the end of the select processing.
Within a changeset generated by this function, all changes related to a single table are grouped together.
Within the  WHERE constraint, it searches for the following:  1.
Within the ORDER BY, either:  5.
Within the RBU_STAGE_OAL stage, each call to sqlite3rbu_step() performs one of the following operations.
Within the format string, any characters other than format sequences are copied to the result.
Within the new.* record, fields associated  with table columns modified by the UPDATE change contain the new  values.
Within the old.* record associated with an UPDATE change, all fields associated with table columns that are not PRIMARY KEY columns and are not modified by the UPDATE change are set to "undefined".
Within this division (the proxying locking implementation) the procedures above this point are all utilities.
Within this file, the parseCell() macro can be called instead of btreeParseCellPtr().
Within this loop, variable eState may be set to 0, 1 or 2, depending on the parsing context.
Without a decimal point, PHP treats a number literal as an int.
Without a valid signature we cannot trust it.
Without an ORDER BY, the Queue table is just a FIFO.
Without brackets, give a string "generic"
Without considering pTerm, it is estimated  that the scan will visit nNew rows.
Without such a constraint, the table cannot operate.
Without the TERM_VNULL flag, the not-null check at the start of the loop will prevent any results from being returned.
Without the funny casting for sizeof, a Windows compiler gave this error: "unary minus operator applied to unsigned type, result still unsigned".
Without the mutexes, it is not safe to use SQLite concurrently from more than one thread.
Without this call, pixels in the foreground color are copied literally, *including* the alpha channel value, resulting in an output image which is potentially not opaque.
Without this option and compile option, ISO-2022-JP is assumed.
Without this option, --fb-skip is assumed.
Without this option, fold length is 60 and fold margin is 10.
Without truecolor this results in far too many color indexes.
Won't be implemented.
Won't happen, but set to NULL
Word boundary assertions
Word or int32 R/M field with op code (/digit)
Word or int32 R/M field with register (/r)
Words that are longer than about 20 bytes are stemmed by retaining a few bytes from the beginning and the end of the word.
Work around a bug in headers on Digital Unix.
Work around a sign-extension bug in the HP compiler for HP/UX
Work around bug in Borland C.
Work around that by making the main executable pass the callback function pointer to us.
Work factor for compression algorithm
Work out number of chunks.
Work out start/end chunks
Work out the year/day within the 400 year cycle
Workaround Win64 fwrite() bug.
Workaround for 8-byte word alignment on 64-bit SPARC.
Workaround for Oracle ODBC Driver bug (#50162) when fetching TIMESTAMP column
Workaround for Oracle Solaris Studio 12.4 C compiler optimization bug with "-xO4" optimization option.
Workaround for Solaris 10 that does not have dirfd.
Workaround for calling the internal _chkstk() function on Windows.
Workaround for drivers that report NVARCHAR(MAX) columns as SQL_WVARCHAR with size 0 (bug #69975)
Worker threads take accepted socket from the queue
Works also for subclasses, but it will not be called on one from the Python API.
Works for both absoulte and relative addresses (immediate case).
Works for both absoulte and relative addresses.
Works for compilers other than LLVM
Works for true color and palette based images
Works for true colour and palette based images
Workstation applications using SQLite normally do not need to invoke either of these routines.
Worse, if the original is deallocated, the copy becomes invalid.
Worst case scenario  is:  + 9 bytes for a new rowid, + 4 byte reserved for the "poslist size" varint.
Would use scope_identity() but it's not implemented on Sybase
Wrap it all up in a new transfer function + data
Wrap pointers if needed
Wrap the copy swap function when swapping is necessary
Wrapper around OS specific sqlite3_os_init() function.
Wrapper around the pluggable caches xUnpin method.
Wrapper module for libqhull, providing Delaunay triangulation.
Wrappers around mmap/munmap
Wraps `localtime` functionality for multiple platforms.
Wraps a transfer function + data in alignment code
Wraps a transfer function to produce one that copies N contiguous elements of src to N contiguous elements of dst.
Wraps a transfer function to produce one that copies one element of src to N contiguous elements of dst.
Wraps an aligned contig to contig transfer function between either copies or byte swaps to temporary buffers.
Wraps around at the maximum value of an ocaml int, which is something like 30 or 62 bits on 32 and 64-bit architectures respectively.
Wraps the dtype copy swap function
Write 'message' to syslog.
Write 'message' to the given file.
Write IM to OUTFILE as a JFIF-formatted JPEG image, using quality QUALITY.
Write VDBE code to erase table pTab and all associated indices on disk.
Write a  single byte to the last byte in each block that falls entirely within the extended region.
Write a 32-bit integer into a string buffer in big-endian byte order.
Write a 32-bit integer into the given file descriptor.
Write a frame or frames to the log.
Write a nice string representation of the contents of cell pMem into buffer zBuf, length nBuf.
Write a pointer to the next unread byte back into *pzNext.
Write a pointer to the page here
Write a set of frames to the log.
Write a single frame for this page to the log.
Write a string containing the final journal-mode to register P2.
Write a temporary byte count which will be calculated as the decompositions are written out.
Write a varint with value iVal into the buffer at aBuf.
Write access is required because  in exclusive-access mode the file descriptor will be kept open  and possibly used for a transaction later on.
Write all frames into the log file exactly once
Write an Image separator
Write an entry into the pointer map.
Write an error message into *pzErr
Write an unsigned 32-bit value in big-endian format to the supplied buffer.
Write and decode big-endian 32-bit integer values
Write any data remaining in the buffer
Write any error message here
Write any error message text into *pzErrMsg.
Write any error messages into *pzErrMsg.
Write back is not used.
Write back to the arrays
Write code to erase the table with root-page iTable from database iDb.
Write content into this buffer
Write current value here
Write data from a buffer into a file.
Write data to a blob handle.
Write data to an rbuVfs-file.
Write data to the file.
Write error here if one occurs
Write error message here
Write error messages here
Write handler must be set.
Write head of the output list here
Write high-water mark here
Write iAmt bytes of content into the WAL file beginning at iOffset.
Write into *pRes a number that is negative, zero, or positive if pC is less than, equal to, or greater than pUnpacked.
Write into *piFrame the frame index where that page was last written into the WAL.
Write into *piNow the current time and date as a Julian Day number times 86_400_000.
Write into *piPage the page number.
Write into *piTable the page number for the root page of the new table.
Write it out to the database.
Write it to disk and push a copy of iRowid (which will become the first rowid on the next doclist-index leaf page) up into the next level of the b-tree  hierarchy.
Write it to the segdir table.
Write meta-information back into the database.
Write minimum integer primary key here
Write nBuf bytes of random data to the supplied buffer zBuf.
Write nData bytes of data to the PMA.
Write nData bytes of data to the file-write object.
Write new OR root to *(*ppOr)++
Write new cell into this node
Write new cursor here
Write new entries to *(*ppTC)++
Write number of errors seen to this variable
Write offset for pTemp2
Write out a Zero-length packet (to end the series)
Write out a single frame of the WAL
Write out a word to the I/O context pointer
Write out extension for transparent colour index, if necessary.
Write out the Background colour
Write out the Global Colour Map
Write out the byte count to maintain header size.
Write out the initial code size
Write out the page data.
Write out the screen width and height
Write out whether or not the image is interlaced
Write page pPg onto the end of the rollback journal.
Write result boolean here
Write result into this Mem object
Write results into this register
Write search results here
Write some memory regions.
Write tail of the output list here
Write that value into register P2.
Write the BOM character.
Write the GIF file terminator
Write the Image header
Write the Magic header
Write the MergeEngine here
Write the SQLite file handle here
Write the averages record
Write the buffer for the segment node pTree and all of its peers to the database.
Write the byte count.
Write the bytes into this buffer
Write the case mapping tables.
Write the character using a surrogate pair (check "reader.c").
Write the column value into *ppVal.
Write the combining class ranges out.
Write the comparison result here
Write the contents of the page out to the database file.
Write the current contents of in-memory linked-list pList to a level-0 PMA in the temp file belonging to sub-task pTask.
Write the current contents of the in-memory linked-list to a PMA.
Write the current in-memory list to a PMA.
Write the current page to the transaction journal if it is not there already.
Write the current time and date as a Julian Day number into *prNow and return 0.
Write the database source cursor number here
Write the decompositions themselves.
Write the element into *pRowid.
Write the estimated row count into *pnRow and return SQLITE_OK.
Write the extra pages and truncate the database file as required
Write the file descriptor here
Write the file descriptor into *pFile.
Write the first index cursor number here
Write the first journal header to the journal file and open  the sub-journal if necessary.
Write the folded case of the last character read to the output
Write the hash value here
Write the header for the new UPDATE change.
Write the index of a new slot here
Write the integer values
Write the list of decomp nodes.
Write the list of kdecomp nodes.
Write the local Cell size (the number of bytes on the original page, omitting overflow) into *pnSize.
Write the lower case table.
Write the master journal data to the end of the journal file.
Write the master journal name into the journal file.
Write the nRec Field - the number of page records that follow this journal header.
Write the nRec value into the journal file header.
Write the name of each database file in the transaction into the new master journal file.
Write the new IncrMerger here
Write the new column list here
Write the new expression node here
Write the new new.* record.
Write the new old.* record.
Write the new value here
Write the new.* vector
Write the next key to the output.
Write the node-id here
Write the number of available bytes here
Write the number of available bytes into *pAmt.
Write the number of columns here
Write the number of columns of result here
Write the number of error seen in *pnErr.
Write the number of rows in the result here
Write the old.* vector first.
Write the output into this preallocated buffer
Write the page out to disk
Write the page pointer here
Write the payload into the local Cell and any extra into overflow pages
Write the property list counts.
Write the property lists.
Write the raw buffer.
Write the referenced table column number here
Write the referenced table cursor number here
Write the result here
Write the result table here
Write the resulting vtab structure here
Write the revised row estimate here
Write the root page number of the new table into register P2  The difference between a table and an index is this:  A table must have a 4-byte integer key and can have arbitrary data.
Write the root page number of the new table into register P2.
Write the sentinel index as the last decomp node.
Write the sequence number into register P2.
Write the serialized data blob for the value stored in pMem into  buf.
Write the size of the Cell here
Write the sorted results here
Write the specified cookie value
Write the standard header.
Write the supplied master journal name into the journal file for pager pPager at the current location.
Write the term for this entry to disk.
Write the title case table.
Write the two values read to *piAbsLevel and  pnInput before returning.
Write the unqualified object name here
Write the upper and lower case table sizes.
Write the upper case table.
Write this item into the set table with bogus data.
Write this value to the list
Write to both stderr and logcat.
Write to the last byte of each newly allocated or extended page
Write to the unixFile structure here
Write transactions are not possible on a read-only database
Write up to nBuf bytes of randomness into zBuf.
Write up to this many output leaves
Write value iVal encoded as a varint to the PMA.
Write value iVal encoded as a varint to the file-write object.
Write values to this array
Write() can  only occur in between Init()/Reset() and Rewind().
Write-ahead log connection
Writers normally append new frames to the end of the WAL.
Writers of suspendable-input applications must note that skip_input_data is not granted the right to give a suspension return.
Writes a buffer directly to a stream, using multiple of the chunk size
Writes a record separator (typically a newline) after any that do not already end with a newline sequence.
Writes are in the reverse order.
Writes the data in one of the slots of the hashtable.
Writes the dependency graph to a file.
Writes to this journal would also be no-ops, and any attempt to read the journal would return SQLITE_IOERR.
Writing a page is skipped if it meets either of the following criteria:  The page number is greater than Pager.dbSize, or The PGHDR_DONT_WRITE flag is set on the page.
Writing concatenation
Writing separate code for cased/caseless versions makes it go faster, as does using an autoincrement and backing off on a match.
Writing should be enabled
Writing to *endp may overwrite *sizep
Written (or, at least, moved) 1999, Philip Warner.
Written 2004, Phil Knirsch.
Written/Modified 1999, Philip Warner.
Wrong number of arguments means "no match"
X       (input) COMPLEX array, dimension (N) The vector x as described above.
X       (input) COMPLEX*16 array, dimension (N) The vector x as described above.
X       (input) DOUBLE PRECISION array, dimension (N) The vector for which a scaled sum of squares is computed.
X       (input) REAL array, dimension (N) The vector for which a scaled sum of squares is computed.
X       (input/output) COMPLEX array, dimension (1+(N-1)*abs(INCX)) On entry, the vector of length N to be conjugated.
X       (input/output) COMPLEX array, dimension (1+(N-2)*abs(INCX)) On entry, the vector x.
X       (input/output) COMPLEX array, dimension (N) On entry, the right hand side b of the triangular system.
X       (input/output) COMPLEX*16 array, dimension (1+(N-1)*abs(INCX)) On entry, the vector of length N to be conjugated.
X       (input/output) COMPLEX*16 array, dimension (1+(N-2)*abs(INCX)) On entry, the vector x.
X       (input/output) COMPLEX*16 array, dimension (N) On entry, the right hand side b of the triangular system.
X       (input/output) DOUBLE PRECISION array, dimension (1+(N-2)*abs(INCX)) On entry, the vector x.
X       (input/output) REAL array, dimension (1+(N-2)*abs(INCX)) On entry, the vector x.
X       (output) COMPLEX array, dimension (LDX,NB) The m-by-nb matrix X required to update the unreduced part of A.
X       (output) COMPLEX*16 array, dimension (LDX,NB) The m-by-nb matrix X required to update the unreduced part of A.
X       (output) DOUBLE PRECISION array, dimension (LDX,NB) The m-by-nb matrix X required to update the unreduced part of A.
X       (output) DOUBLE PRECISION array, dimension (LDX,NW) The NA x NW matrix X (unknowns), as computed by DLALN2.
X       (output) REAL array, dimension (LDX,NB) The m-by-nb matrix X required to update the unreduced part of A.
X       (output) REAL array, dimension (LDX,NW) The NA x NW matrix X (unknowns), as computed by SLALN2.
X      - DOUBLE PRECISION array of dimension at least ( 1 + ( m - 1 )*abs( INCX ) ).
X      - DOUBLE PRECISION array of dimension at least ( 1 + ( n - 1 )*abs( INCX ) ).
X format has only two instructions.
X is further scaled if necessary to assure that norm(ca A - w D)*norm(X) is less than overflow.
X is not a subset of Y
X-scaled Sinc(x) function.
X0201 kana conversion table
X0201 kana conversion table for daguten
X0201 kana conversion table for han-daguten
X0201 kana to X0213 conversion table for han-daguten
X0208 kankaku or ascii space
X0208 kigou conversion table
X3.64/ECMA-43 "next line" character
X509 resource created using openssl_read_x509() .
X: X, etc to allow for multiple instances
XAP: Extensible Authoring Publishing, obsoleted by XMP: Extensible Metadata Platform
XCLASS is used for classes that cannot be represented just by a bit map.
XDECREF all objects found at this record
XISTSAVEPOINTERSECTRIGGEREFERENCESCONSTRAINTOFFSETEMPORARY
XML_XINCLUDE_END node will be a sibling of XML_XINCLUDE_START
XNORM   (output) DOUBLE PRECISION The infinity-norm of X, when X is regarded as an NA x NW real matrix.
XNORM   (output) REAL The infinity-norm of X, when X is regarded as an NA x NW real matrix.
XOR the key with 0x36 to get the ipad)
XPG4 (as of March 1994) says 53 unconditionally
XPG4 erroneously included POSIX.2 rationale text in the main body of the standard.
XXX - The 16-bit string compare probably needs to be done differently, especially if the flags are to be supported.
XXX - the actual Single UNIX Specification says that "L" means "long", as in the C data type, but we treat it as meaning "4-byte integer".
XXX - the actual Single UNIX Specification says that "long" means "long", as in the C data type, but we treat it as meaning "4-byte integer".
XXX - these two should not need
XXX 5.14 at least introdced 100 ns intervals, this is to do
XXX Abused, introduce an additional flag if the value needs to be kept.
XXX FIXME we should really check out SQLSTATE with SQLError in case rc is SQL_SUCCESS_WITH_INFO here.
XXX Kludge until there is resolution regarding mem*() functions XXX in the kernel.
XXX No UINX behavior  Good to know it's doable.
XXX Stupid subtraction for the Cray.
XXX The below are rather not implemented or to check whether makes sense to expose.
XXX add LFCR case if it's gonna be needed
XXX all the crypt related APIs work with int for string length.
XXX avoid warning in debug mode
XXX care about security attributes here if needed, see tsrm_win32_access()
XXX check for already bound parameters
XXX chunk size itself is of size_t, that might be ok or not for a particular case
XXX completely not sure it is done right here
XXX disabling default magic loading so the compiled in data is used
XXX if that's a real multibyte string, olestring is obviously allocated excessively.
XXX not being done as this means a behavior change.
XXX not opening dirs yet, see also at the bottom of this function.
XXX passing NULL means the default timer queue provided by the system is used
XXX possible buffer overflow if VCWD_REALPATH does not know size of resolved_path
XXX set signaled flag to the caller thread, question is - whether it's needed
XXX should be INT_MAX and fetched by pieces
XXX should go in the loop if size exceeds UINT_MAX
XXX this doesn't look right.
XXX this functionality is excluded in php, enable it in apprentice.c:340
XXX this is a complete mess here with FILE/fd/SOCKET, we should let only one to survive probably.
XXX this might be not the end, restart handling with REPARSE_GUID_DATA_BUFFER should be implemented.
XXX this might look wrong, but i just leave it here.
XXX this might need an additional fix so it uses size_t, whereby unsigned is quite big so leaving as is for now
XXX this probably can be improved with some number of retries
XXX this should fit "most" NLS date-formats and Numbers
XXX this will fail again if encoding_converter returns on error something different than SIZE_MAX
XXX this will need to change later when threaded fastcgi is implemented.
XXX value should be parsed in the loop to exhaust size_t
XXX we assume that zend-zval len has 4 bytes
XXX we're crashing here in msvc6 debug builds at php_message_handler_for_zend:839 because SG(request_info).path_translated is an invalid pointer.
XXX: Crash avoidance.
XXX: FIXME --- add ordering argument to Allow Fortran ordering on write This will need the addition of a Fortran-order iterator.
XXX: PyObject_AsWriteBuffer does also this, but it is unsafe, as there is no strict guarantee that the buffer sticks around after being released.
XXX: Should be fine to always read chunk_size
XXX: This will crash, because we will null also the methods.
XXX: const castaway, via strchr
XXX: man page says CPU_ALLOC takes number of cpus.
XXX: should be replaced with rb_threadptr_pending_interrupt_enque()
XXX: should do something better here
XXX: shouldn't this be the parent not the 'prev'
XXX: the constant "20" was determined purely on the heuristics.
XXX: this is horrible memory-usage-wise, but we only expect to do this on small pieces of form data.
XXX: this needs to be optimized to work with blocks of 'safe' chars
XXX: use left most named group as Perl
XXX: we force x iterator to be non contiguous because we need coordinates...
XXXX Add constants here
Xfer function arguments to here
Xps is POSIX space, but from 8.34
Xsp is Perl space, but from 8.34, Perl
Y       (output) COMPLEX array, dimension (LDY,NB) The n-by-nb matrix Y required to update the unreduced part of A.
Y       (output) COMPLEX array, dimension (LDY,NB) The n-by-nb matrix Y.
Y       (output) COMPLEX*16 array, dimension (LDY,NB) The n-by-nb matrix Y required to update the unreduced part of A.
Y       (output) COMPLEX*16 array, dimension (LDY,NB) The n-by-nb matrix Y.
Y       (output) DOUBLE PRECISION array, dimension (LDY,NB) The n-by-nb matrix Y required to update the unreduced part of A.
Y       (output) DOUBLE PRECISION array, dimension (LDY,NB) The n-by-nb matrix Y.
Y       (output) REAL array, dimension (LDY,NB) The n-by-nb matrix Y required to update the unreduced part of A.
Y       (output) REAL array, dimension (LDY,NB) The n-by-nb matrix Y.
Y      - DOUBLE PRECISION array of dimension at least ( 1 + ( n - 1 )*abs( INCY ) ).
Y format has three instructions.
Y if followed by a vowel
Y is the number of rows for which column iCol contains at least one instance of phrase iPhrase.
Y:   The name of a table in a FROM clause.
YARV Thread Design model 1: Userlevel Thread Same as traditional ruby thread.
YYACTIONTYPE       is the data type used for "action codes" - numbers that indicate what to do in response to the next token.
YYACTIONTYPE       is the data type used for storing terminal and nonterminal numbers.
YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.
YYCODETYPE         is the data type used for storing terminal and nonterminal numbers.
YYCODETYPE         is the data type used to store the integer codes that represent terminal and non-terminal symbols.
YYERROR is fine as it does not invoke this function.
YYERRORSYMBOL is not defined
YYFALLBACK         If defined, this indicates that one or more tokens (also known as: "terminal symbols") have fall-back values which should be used if the original symbol would not parse.
YYFALLBACK         If defined, this indicates that one or more tokens have fall-back values which should be used if the original value of the token will not parse.
YYFINAL -- State number of the termination state.
YYINITDEPTH -- initial size of the parser's stacks.
YYLAST -- Last index in YYTABLE.
YYLEX -- calling `yylex' with the right arguments.
YYMAXDEPTH -- maximum size the stacks can grow to (effective only if the built-in stack extension method is used).
YYMINORTYPE        is the data type used for all minor tokens.
YYMINORTYPE        is the data type used for all minor types.
YYNNTS -- Number of nonterminals.
YYNOCODE           is a number of type YYCODETYPE that is not used for any terminal or nonterminal symbol.
YYNOCODE           is a number of type YYCODETYPE which corresponds to no legal terminal or nonterminal number.
YYNRULE            the number of rules in the grammar YYERRORSYMBOL      is the code number of the error symbol.
YYNRULES -- Number of rules.
YYNRULES -- Number of states.
YYNSTATE           the combined number of states.
YYNSTATES -- Number of states.
YYNTOKENS -- Number of terminals.
YYRHS -- A `-1'-separated list of the rules' RHS.
YYSTACKDEPTH       is the maximum depth of the parser's stack.
YYSTR is taken from yytname.
YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.
Years and Months are incompatible with all other units (except years and months are compatible with each other).
Yes it does, break the loop
Yes, there is a color map
Yes: set corresponding bit (and adjust build value) No:  move on Every 8th value, set the value of build and increment the outptr
Yet another complication: We may want a list of closed polygons which outline the region between two contour levels z0 and z1.
Yet another problem:  LinuxThreads do not play well with posix locks.
Yield from root references
You MUST NOT use this function for any other weird games, or call it at any other time after the object is constructed.
You are always considered to have a copy of TIFF6.0 and EXIF2.10 standard.
You are not able to rescue fatal.
You are responsible for making sure that it is not linked into the TSRM hash, and not marked as the current interpreter
You are strongly advised *not* to deploy with SQLITE_NO_SYNC enabled, however, since with SQLITE_NO_SYNC enabled, an OS crash or power failure will likely corrupt the database file.
You can access the most recent match.
You can access this data with RubyVM::InstructionSequence.load_from_binary_extra_data(binary).
You can also insert new BTree entries or retrieve the key or data from the entry that the cursor is currently pointing to.
You can also pass a +Hash+ of +options+ that you want to change, any options not present in the hash will be left unchanged.
You can also pass parts of the time to Time::new such as year, month, minute, etc.
You can also try ::pass, which attempts to pass execution to another thread but is dependent on the OS whether a running thread will switch or not.
You can also use the alias ::getpty.
You can create a Name by parsing a distinguished name String or by supplying the distinguished name as an Array.
You can distribute/modify this program under the same terms of ruby.
You can extract the version by reading the first two bytes of marshaled data.
You can find the source for the VM instructions in +insns.def+ in the Ruby source.
You can get a list of valid versions with OpenSSL::SSL::SSLContext::METHODS
You can give a class a name by assigning the class object to a constant.
You can have more than one handle that points to a single process (unlike pids, where there is a single pid for a process).
You can look ahead in the string without actually scanning.
You can manipulate +ARGV+ yourself to control what +ARGF+ operates on.
You can modify the string being scanned, reset or terminate the scanner, find out or change the position of the scan pointer, skip ahead, and so on.
You can not move this binary data to another machine.
You can not trust the state of target if this function returns failure.
You can not use the binary data which is created by another version/another architecture of Ruby.
You can pass a non-zero value as second argument to force the embedded PHP engine to re-initialise.
You can see that the final node in a linked list always contains two values.
You can set encoding only once.
You can set the output only once.
You can set the source only once.
You can specify a range like 'a..z', it needs to be incrementing.
You can then trace the execution of qhull with "T4P102".
You can use a variety of padding methods depending upon the intended use of encrypted data.
You can use any Ruby APIs (calling methods and so on) on normal event hooks.
You can use php_stream_memory_open to create a readonly stream from an existing memory buffer.
You can use the #type method to check the type of the internal object.
You can use this method in two use cases: a find-minimum mode and a find-any mode.
You can use this method to convert _time_ to another Epoch.
You cannot add a singleton method to an Integer.
You cannot change create_object
You cannot change from static to non static and vice versa.
You cannot resume a fiber that transferred control to another one.
You have 16 bytes +key+, 12 bytes (96 bits) +nonce+ and the associated data +auth_data+.
You have to take care and efree() the buffer on your own.
You know the +key+ and have received +nonce+, +auth_data+, +encrypted+ and +tag+ through an untrusted network.
You may additionally need to check that the received tag has the correct length, or you allow attackers to forge a valid single byte tag for the tampered ciphertext with a probability of 1/256.
You may assume non null *mod_data created by PS_OPEN_FUNC() is passed to PS_*_FUNC().
You may do so whether or not MULTIPLE_THREADS is #defined.
You may need this for interoperability with other applications.
You may need to call `rb_thread_check_ints()' correctly or your program can not process proper process such as `trap' and so on.
You may obtain information about the operation of the GC through GC::Profiler.
You may use Cipher#random_iv to create a secure random IV.
You may want to look at OpenSSL::Digest as it supports more algorithms.
You must call 'normalize_holiday_list' on the result before using it.
You must call this function before any heap allocation by Ruby implementation.
You must explicitly set a class name if necessary.
You must go straight to locking level 0.
You must not use these method.
You must require 'io/console' to use this method.
You must sign the request and resubmit
You must start a transaction  before starting a subtransaction.
You must use stride instead of use some constant value in the iteration.
You need to deal with this information as only a *HINT*.
You need to lower the level first.
You need to record progress of a read_func() and check the progress after `rb_thread_call_without_gvl2()'.
You need to transfer control back to this fiber before it can yield and resume.
You should not load binary data provided by others.
You should not set Encoding::default_internal in ruby code as strings created before changing the value may have a different encoding from strings created after the change.
You should not use this method because this method exists only for debugging WIN32OLE.
You should only untaint a tainted object if your code has inspected it and determined that it is safe.
You should use binary data translated by yourself.
You shouldn't mix "transfer" and "resume".
You still must own this data and have no weak-references and no base object.
You will lose timing support for many of the debugging and testing utilities, but it should at least compile and run.
You will notice that the lengths alternate between 30 and 31 days, except for three anomalies: both July and August have 31 days, both December and January have 31, and February is less than 30.
You'll want this if you redo the *_lite.c files with the -C option to f2c for checking array subscripts.
You're welcome to make changes, but you're on your own if something goes wrong.
Your OS have no capability.
Your platform documentations (e.g. man open(2)) may describe more detailed information.
Your request is unauthorized.
Z            (input) DOUBLE PRECISION array, dimension (3) Each of the elements in z must be positive.
Z            (input) REAL array, dimension (3) Each of the elements in z must be positive.
Z       (input) DOUBLE PRECISION array, dimension ( K ) The first K elements of this array contain the components of the deflation-adjusted updating row vector.
Z       (input) REAL array, dimension ( K ) The first K elements of this array contain the components of the deflation-adjusted updating row vector.
Z      (input) DOUBLE PRECISION array, dimension ( 2 ) The components of the updating vector.
Z      (input) DOUBLE PRECISION array, dimension ( K ) Contain the components of the deflation-adjusted updating row vector.
Z      (input) DOUBLE PRECISION array, dimension ( LDU, NLVL ).
Z      (input) DOUBLE PRECISION array, dimension ( N ) The components of the updating vector.
Z      (input) DOUBLE PRECISION array, dimension (2) The components of the updating vector.
Z      (input) DOUBLE PRECISION array, dimension (K) The first K elements of this array contain the components of the deflation-adjusted updating row vector.
Z      (input) DOUBLE PRECISION array, dimension (N) The components of the updating vector.
Z      (input) REAL array, dimension ( 2 ) The components of the updating vector.
Z      (input) REAL array, dimension ( K ) Contain the components of the deflation-adjusted updating row vector.
Z      (input) REAL array, dimension ( LDU, NLVL ).
Z      (input) REAL array, dimension ( N ) The components of the updating vector.
Z      (input) REAL array, dimension (2) The components of the updating vector.
Z      (input) REAL array, dimension (K) The first K elements of this array contain the components of the deflation-adjusted updating row vector.
Z      (input) REAL array, dimension (N) On entry, Z contains the updating vector (the last row of the first sub-eigenvector matrix and the first row of the second sub-eigenvector matrix).
Z      (input) REAL array, dimension (N) On input this vector contains the updating vector (the last row of the first sub-eigenvector matrix and the first row of the second sub-eigenvector matrix).
Z      (input) REAL array, dimension (N) The components of the updating vector.
Z      (output) DOUBLE PRECISION array, dimension ( M ) On exit Z contains the updating row vector in the secular equation.
Z      (output) DOUBLE PRECISION array, dimension ( M ) The first elements of this array contain the components of the deflation-adjusted updating row vector.
Z      (output) DOUBLE PRECISION array, dimension(N) On exit Z contains the updating row vector in the secular equation.
Z      (output) REAL array, dimension ( M ) On exit Z contains the updating row vector in the secular equation.
Z      (output) REAL array, dimension ( M ) The first elements of this array contain the components of the deflation-adjusted updating row vector.
Z      (output) REAL array, dimension (N) On output this vector contains the updating vector (the last row of the first sub-eigenvector matrix and the first row of the second sub-eigenvector matrix).
Z      (output) REAL array, dimension(N) On exit Z contains the updating row vector in the secular equation.
Z     (workspace) DOUBLE PRECISION array, dimension ( 4*N ) On entry Z holds the qd array.
Z     (workspace) REAL array, dimension ( 4*N ) On entry Z holds the qd array.
Z is initialized to the identity matrix.
Z will strip everything after the first null character
Z:   The name of a column in table Y.
ZEND_ARG_ARRAY_INFO(0, preference, 1)
ZEND_CASE is an exception, that keeps operand unchanged, and allows its reuse.
ZEND_CLASS_DTOR may be used by standard PHP compiler
ZEND_DECLARE_MODULE_GLOBALS(enchant)
ZEND_FAST_CALL can not share temporary var with others since the fast_var could also be set by ZEND_HANDLE_EXCEPTION which could be ahead of it
ZEND_OVERLOADED_FUNCTION
ZERO    (input) REAL Must contain the value 0.0 This is passed to prevent the compiler from optimizing away this code.
ZIP_CREATE gets ignored if file exists and not ZIP_EXCL, just like open()
ZLAED7 handles the case when the eigenvectors of a full or band Hermitian matrix (which was reduced to tridiagonal form) are desired.
ZLAHQR works primarily with the Hessenberg submatrix in rows and columns ILO to IHI, but applies transformations to all of H if WANTT is .TRUE..
ZW     (workspace) DOUBLE PRECISION array, dimension ( M ) Workspace for Z.
ZW     (workspace) REAL array, dimension ( M ) Workspace for Z.
Zend-optimized Extended functions
Zenkaku hirangana to Zenkaku katakana
Zenkaku hirangana to hankaku kana
Zenkaku kana to hankaku kana
Zenkaku katakana to Zenkaku hirangana
Zenkaku katakana to hankaku kana
Zero all counters associated with the sqlite3_stmt_scanstatus() data.
Zero disables auto-merge altogether.
Zero extended number.
Zero extra digits made by scale_min.
Zero from this point onwards on cursor reset
Zero is always returned in this case.
Zero is returned if a malloc() fails.
Zero is returned if the call completes successfully, or -1 if a call to fcntl() fails.
Zero is returned on error.
Zero is returned when the input date is detected as invalid or out of the supported range.
Zero is returned when the input date is detected as invalid.
Zero is the common case.
Zero is used to represent an unlimited cache size.
Zero is used to represent an unlimited session cache size.
Zero means the default is an error.
Zero or more NC_* flags defined below
Zero or more PragFlag_XXX values
Zero or more SORTFLAG_* bits
Zero or more UNIXFILE_* values
Zero or more repeats of character types set the bits and then try again.
Zero out anything following *ppList
Zero out below first M rows of B.
Zero out the memory for safety.
Zero potentially sensitive variables
Zero strides should work but are untested.
Zero tells OP_Found to use a composite key
Zero terminated and dequoted
Zero the contents of pRoot.
Zero the contents of the buffer object.
Zero the destination string completely
Zero the file-handle object.
Zero the histogram or inverse color map
Zero the iterator passed as the only argument.
Zero the newly allocated slots
Zero the output value in case an error occurs.
Zero the output variable in case an error occurs.
Zero the output variables in case an error occurs.
Zero the structure before returning.
Zero values greater than this
Zero width assertions.
Zero-based index of first term.
Zero-length table names are allowed
Zero-sized arrays require nothing be done
Zeroed by VdbeMemRelease() above
Zeroize sensitive information.
Zip64 mismatch between preliminary file header written before data and final file header written afterwards
_  use spaces for padding.
_BlockingOperation_ means that the operation will block the calling thread, such as read and write.
_SHM_UNLCK, _SHM_RDLCK, or _SHM_WRLCK
_UMATHMODULE IS needed in __ufunc_api.h, included from numpy/ufuncobject.h.
_WIN32 Allocate context and initialize reasonable general case defaults.
_WIN32 Write data to the IO channel - opened file descriptor, socket or SSL descriptor.
__FILE__ will be "(eval)", and __LINE__ starts from 1 in the evaluation.
__X accessors explanation: if we have __get and property that is not part of the properties array is requested, we call __get handler.
__classid__: name given to class/module under an anonymous namespace
__classpath__: fully qualified class path
__dtoa() doesn't allocate space for 0 so we do it by hand
__function_entries_here__
__function_stubs_here__
__get handler is called with one argument: property name it should return whether the call was successful or not
__isset handler is called with one argument: property name it should return whether the property is set or not
__set handler is called with two arguments: property name value to be set
__tmp_classpath__: temporary class path which contains anonymous names
__unset handler is called with one argument: property name
_address_family_ should be an integer, a string or a symbol: Socket::AF_INET, "AF_INET", :INET, etc.
_bc_rm_leading_zeros just moves the data "value" pointer to the correct place and adjusts the length.
_close doesn't set _doserrno on failure, but it does always set errno to EBADF on failure.
_cmd_ (which may be a string or a +Proc+ object) or block is executed whenever the variable is assigned.
_cmd_ is a string or an array as follows.
_cmsg_data_ should be a string.
_cmsg_level_ should be an integer, a string or a symbol.
_cmsg_type_ should be an integer, a string or a symbol.
_command..._ is one of following forms.
_cur_limit_ means current (soft) limit and _max_limit_ means maximum (hard) limit.
_dest_sockaddr_ should be a packed sockaddr string or an addrinfo.
_domain_ should be a communications domain such as: :INET, :INET6, :UNIX, etc.
_dump must return a String containing the information necessary to reconstitute the object.
_family_ should be an address family such as: :INET, :INET6, etc.
_file_1_ and _file_2_ can be an IO object.
_file_name_ can be an IO object.
_findfirst/_findnext handle
_flags_ is zero or more of the +MSG_+ options.
_flags_ should be a bitwise OR of Socket::MSG_* constants.
_flags_ should be bitwise OR of Socket::AI_* constants.
_how_ can be symbol or string: - :RD, :SHUT_RD, "RD" and "SHUT_RD" are accepted as Socket::SHUT_RD.
_integer_ is an id indicating the particular process, process group, or user (an id of 0 means _current_).
_io_ may be any kind of IO object or integer file descriptor.
_length_ must be a non-negative integer or nil.
_maxlen_ is the maximum number of bytes to receive.
_mesg_ should be a string.
_mode_ is the same as the argument passed to IO.for_fd
_mode_ specifies the FIFO's permissions.
_n_ can be a string or symbol to reference a named capture.
_onoff_ should be an integer or a boolean.
_opts_ can have the following keys:  _opts_ can have the following keys: max_nesting*: The maximum depth of nesting allowed in the parsed data structures.
_other_ must have an each_pair method.
_outbuf_ will contain only the received data after the method call even if it is not empty at the beginning.
_proc_ takes up to six parameters:  an event name a filename a line number an object id a binding the name of a class  _proc_ is invoked whenever an event occurs.
_protocol_ is optional and should be a protocol defined in the domain.
_protocol_ should be a protocol defined in the domain, defaults to 0 for the domain.
_protocol_ should be a protocol defined in the domain.
_protocol_ should be a protocol defined in the family, and defaults to 0 for the family.
_resource_ indicates the kind of resource to limit.
_rthread_init is hidden in OpenBSD librthread that has TIB.
_secs_ should be the number of seconds.
_signal_ may be an integer signal number or a POSIX signal name (either with or without a +SIG+ prefix).
_sockaddr_ should be a string or an addrinfo for AF_INET/AF_INET6.
_sockaddr_ should be a string or an addrinfo for AF_UNIX.
_sockaddr_ should be one of follows.
_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.
_socktype_ specifies the socket type.
_state_ is a JSON::State object, that can also be used to configure the produced JSON string output further.
_str_ can be modified before the registration, since the encoding will be set to ASCII-8BIT if it is a special global name.
_str_ itself will be registered at the global symbol table.
_strptime does not support specification of flags and width unlike strftime.
_ub, _up, and _ur are used when ungetc() pushes back more characters than fit in the current _bf, or when ungetc() pushes back a character that does not match the previous one in _bf.
_xmlreader_get_valid_file_path and _xmlreader_get_relaxNG should be made a common function in libxml extension as code is common to a few xml extensions
_xmlwriter_get_valid_file_path should be made a common function in libxml extension as code is common to a few xml extensions
_zip_checkcons: Checks the consistency of the central directory by comparing central directory entries with local headers and checking for plausible file and header offsets.
_zip_dirent_read(zde, fp, bufp, left, localp, error): Fills the zip directory entry zde.
_zip_dirent_write Writes zip directory entry.
_zip_file_get_offset(za, ze): Returns the offset of the file data for entry ze.
_zip_headercomp: compares a central directory entry and a local file header Return 0 if they are consistent, -1 if not.
_zip_readcdir: tries to find a valid end-of-central-directory at the beginning of buf, and then the corresponding central directory entries.
``A negative field width argument is taken as a - flag followed by a positive field width.'' -- ANSI X3J11 They don't exclude field widths read from args.
``If the space and + flags both appear, the space flag will be ignored.'' -- ANSI X3J11
``Note that 0 is taken as a flag, not as the beginning of a field width.'' -- ANSI X3J11
``The argument shall be a pointer to void.
``The result of converting a zero value with an explicit precision of zero is no characters.'' -- ANSI X3J11
`ci' should point temporal value (on stack value)
`count` is actually the length of the payload data.
`def` always come along with dtor or separation, thus the origin var info might be also `use`d in the feature(CG)
`from' and `to' must have the same fields, and corresponding fields must be (recursively) castable.
`nin`, the last arg, is unused.
`safe' read for sockets and pipes.
`safe' write for sockets and pipes.
`ubf()' should interrupt `func()' execution by toggling a cancellation flag, canceling the invocation of a call inside `func()' or similar.
`yyvs': related to semantic values.
a 1024 byte window + the size of the halt_compiler token (moving window)
a DBA handler must have specific routines
a SET TRANSACTION statement should be executed with a NULL trans handle
a and b have same exponent, then compare significand.
a and c  are neighbouring floating po int numbers  in the  interval  ( beta**t, beta**( t + 1 ) )  and so their difference is beta.
a and c  are neighbouring floating point numbers  in the  interval  ( beta**t, beta**( t + 1 ) )  and so their difference is beta.
a back ward seek is done by a previous rewind()
a bit of a hack this, but it's needed for COM array access.
a certificate to use for authentication
a character width specification, to be more consistent with
a chunk of whitespaces
a code_int must be able to hold 2**GIFBITS values of type int, and also -1
a dictionary specifying a data-type must have at least two and up to four keys These must all be sequences of the same length.
a file or directory exists in a sub-directory of this path
a future version may break this function.
a is zero(no non-zero digit)
a is zero,then assign b to c
a list specifying a data-type can just be a list of formats.
a little bit of black magic here: we're creating a new array and swapping it for the zval that's already stored in the hash under the name we want.
a little sanity check here
a non-simplicial facet followed by its tricoplanars
a null or mirrored facet
a number that is not 0, 1 or 2 (Which is also Greg's birthday so there)
a number that is not 0, 1 or 2 (Which is also Greg's birthday, so there)
a number that is not Phar::GZ or Phar::BZ2
a numbered reference must not be zero
a pointer to a SrcList
a pointer to a Token structure
a short read or version format mismatch means we need to create a new  conch file.
a stopgap measure for the time being
a string like "SatSun" or "Mon Tue Wed"
a true global for initialization
a will not strip any trailing whitespace or null padding
a xor reg, reg operation would overwrite the flags.
a) If a MATCH operator is present, the cost depends on the other constraints also present.
aKey might point into aMap or into aBuffer.
aMagic is used  as a temporary buffer to inspect the first couple of bytes of the potential journal header.
aRow might point to (ephemeral) data for the current row, or it might be NULL.
aWalData must point to an array of WAL_SAVEPOINT_NDATA u32 values that has been previously populated by a call to WalSavepoint().
abIndexed: If the table has no indexes on it, abIndexed is set to NULL.
abandon if too larger padding
abbreviated month name
abbreviated weekday name
about this size at least
above funcs modify queue
abs(TOLMUL) should be between 1 and 1/EPS, and preferably between 10 (for fast convergence) and .1/EPS (for there to be some accuracy in the results).
absolute file uris - libxml only supports localhost or empty host
absolute index to relative offset
accept a String, and return the pointer of the extension.
accept any ESC-(-x as broken code ...
accept string type since Oid is unsigned int
accept string type since Oid type is unsigned int
accept4 is available since Linux 2.6.28, glibc 2.10.
accepts the data connection, returns updated data buffer
access fdp exactly once here and do not reread fdp
access rights defaults to other
access.log, access.format
accommodate valid FQDN entries ending in "."
according to SQL standard truncation (e.g. loss of precision is not an error) - for detecting possible truncation you have to check mysqli_stmt_warning
according to error handling mode, suppress error, throw exception or show it
according to exif2.1, the thumbnail is not supposed to be greater than 64K
according to the Gregorian calendar system.
acquire global vm lock
action type, VALUE version
activate the converter
active (normal) connection
actor, used in conjunction with must understand.
acts as a GC guard, too
actual extraction done later
actual number of digits returned by cvt
actual string length in ps_buffer
actually either (char*) or (Optable*)
actually execute the regular expression
actually this should be return by ref but atm cannot be
actually used only by LOAD DATA.
actually, actual_size + 1
actually, only want this if static is defined as "" -- this is for usg, in which emacs must undefine static in order to make unexec workable
actually, ucal_setDateTime cannot fail
add " E" for escaping slashes
add "assert(condition) as assertion message
add +key+ to +val+ pair if +hash+ does not contain +key+.
add 1 for trailing slash
add 1 to the number b.
add a "/" between directory and filename
add a byte for minus sign
add a database handle to the TEB with the most recently specified set of modifiers
add a reference for the caller
add a reference for the hash
add a reference for the hash table
add ability to load xpm files to gd, requires the xpm library.
add additional scramble data 5.5+ sent us
add an instruction with label operand (alias of ADD_INSN1)
add an instruction with some operands (1, 2, 3, 5)
add another "key" for the same bucket
add character and check
add custom envelope headers
add each central directory item to the manifest
add final zero blocks
add header to collection
add method call/response to body element
add object id to the hash to ensure uniqueness, for more reference look at bug #40091
add one for string terminator
add one new f_line before this character
add roots into list to free
add separator if required
add serialized data to method call/response.
add shutdown function, removing the old one if it exists
add signature for executable tars or tars explicitly set with setSignatureAlgorithm
add space to end if there isn't one
add space to front if there isn't one
add the FD if not already in
add the embedded line end to the field
add the event to epoll internal queue
add the event to port
add the event to the internal queue
add the extension if it is set in ini
add the last one to the list
add the various elements to the array
add these numbers, I'll let the C compiler do it for me.
add to the appropriate hash
add to the manifest, and then store the pointer to the new guy in entry
add types for this signature
add user-supplied index
add variable to symbol table
add.c: bcmath library file.
add_assoc_resource automatically creates a new zval to wrap the "resource" represented by the current pz_ch
add_data writes dirent
add_property_zval increments the refcount which is unwanted here
add_word sub_word mul_word div_word mod_word
added by gerrit thomson to fix ldap_add using ldap_mod_add
added to fix use of ldap_modify_add for doing an ldap_add, gerrit thomson.
added: support for xml escaping
additional OCIDefineDynamic() call
additional filters to go here
additional functions for attribute based modifications, Gerrit Thomson
additional term is there to amortize the cost of compaction
address of first `dummy', once known
address of first matching command
address of start of instruction
address of the new page
address size 'W' or 'L' (or 'Q' or amd64)
adds maxabs for offset
adjust early binding list
adjust exponent by d, and update sign
adjust exponent for shifting decimal point
adjust how many args we have left and restart loop
adjust obj_limit (object number available in this page)
adjust offset index up
adjust qh.NEARinside for joggle
adjust so point is on the right boundary
adjust so that will not iterate over axis
adjust the sign of significand
adjust timeout for next attempt
adjust user flags so that WRONLY becomes RDWR, as required by this package.
adjust x0 to be on the left boundary (ie to be zero), and y0 to match
advance a whole UTF-8
advance curr_dim for non-fancy indices
advance errorptr to current column
advance facet when processed
advance to first character of hostname
aff2 is the type affinity of the other operand.
affinityStr stores a static string suitable for P4 of OP_MakeRecord.
afp style keeps a reference to the db path in the filePath field  of the struct
after Geomview checks
after T_HALT_COMPILER collect the next three non-dropped tokens
after argnum comes modifiers
after crossing zone, edge/left/fwd is oriented CCW relative to the next zone, assuming we will step there
after excluding deleted files, calculate manifest size in bytes and number of entries
after freeing objspace, you *can't* use ruby_xfree()
after match is SEPARATOR
after modifiers comes width
after our pointer arithmetic jump back to the first element
after subtracting pt.
after this call, bucket is owned by the brigade
after this point, we can't free env without breaking the environment
after width and argnum comes precision
ah illegal: char after COM section not 0xFF
alafim (thousands) case
aliases for downwards compatibility
align to SIMPLESTRING_INCR increments
align: int If true, the data will be aligned.
alignment 1 types should have a efficient alignment for copy loops
alignment must be a power of 2
alignment: A power-of-two alignment.
all IS_TMP_VAR and IS_VAR variable numbers have to be adjusted
all bin edges hold the same value
all charsets are compiled in
all data in a persistent bucket must also be persistent
all fails, output from recovery buffer
all global variables.
all important binary trie traversal
all memory is allocated, proxys are created and assigned,  switch the locking context and pMethod then return.
all negative values become -1.
all non-SGML characters (those marked with UNUSED in DESCSET) should be representable with numeric entities
all other styles use the locking context to store the db file path
all other types have corresponding php types
all persistent connactions are in use, fallback to non-persistent connection creation
all remaining bits on the current unsigned char are set to zero.
all that work just for this
all the other methods
all types are the same and scalar, one recursive call is enough
all vertices of new facets
alloc and clear active_pollfds
alloc and clear pollfds
alloc the data structure
alloc the ftp structure
alloc'ed ai free'd below.
alloca( size ) returns a pointer to at least `size' bytes of storage which will be automatically reclaimed upon exit from the procedure that called alloca().
allocate a C Runtime file handle
allocate a buffer and convert to UTF8
allocate a buffer for reading chunks
allocate a minimal descriptor area
allocate a new stream for a particular ops
allocate a smaller buffer to keep around for smaller "long" columns
allocate a statement handle struct of the right size (struct out_sqlda is inlined)
allocate additional minimum page to work
allocate an array for return
allocate an environment
allocate and prepare query
allocate and prepare statement
allocate array of modifications
allocate buffer for double
allocate buffer for reading data
allocate describe handle
allocate enough memory
allocate maximum possible size--gross overkill
allocate memory and copy
allocate memory and copy string
allocate more memory than alloted originally by PATH_BUFFER_SIZE
allocate output buffer
allocate server data.
allocate space for the PNG image data
allocate space for the values as part of this modification
allocate sqlda and output buffers
allocate stack for child
allocate storage for the column
allocate storage for the parameter, keyed by its "canonical" name
allocate temporally variables
allocate the data struct
allocate the event resource
allocate the field for the result
allocate the input descriptors
allocate the modification struct
allocate the parameter
allocate the requested size (could be only partially filled)
allocate the statement
allocate the structure
allocate thread stack
allocate/fill the buffer
allocated by qh_initflags
allocated by qh_initqhull_buffers
allocated by qh_readfeasible
allocated by qh_readinput, freed if no error
allocated even if there is no FROM clause
allocated in vdbeSorterMerge()
allocated with pestrdup
allocates a class and initializes safely.
allocates a new interpreter context
allocates a new thread-safe-resource id
allocating function to make programming errors due to uninitialized fields less likely
allocation unit, if zero then mx is determined by szVal.
allow 0 (unspecified interface)
allow SSL to re-use sessions
allow as the extension has been found
allow blocking read() on pipes, currently Windows only
allow conditional breakpoints and initialization to access the vm uninterrupted
allow double quoted indentifiers
allow duplicate file names, because the file will be removed directly afterwards
allow enclosed elements
allow extension to proclaim compatibility with any Zend version
allow extra chars in the format
allow faster access by updating key read into next
allow for arrays with one element, no allowance for arrays with none but probably not required, gerrit thomson.
allow for thousand separators
allow multiple '/' for readability
allow optional initial 0x or 0X
allow readable non-descriptor based streams to participate in stream_select.
allow room for NUL terminator
allow room for a NUL.
allow self-signed certs
allow string to handle large OID value correctly
allow the scanner to read one null byte after the end of the string (from ZEND_MMAP_AHEAD) so that if will be able to terminate to match the current token (e.g. non-enclosed string)
allow this to be set as parameter
allow_nan*: If set to true, allow NaN, Infinity and -Infinity in defiance of RFC 4627 to be parsed by the Parser.
allow_string - is_a default is no, is_subclass_of is yes.
allowed node types in look-behind
alnum - word without underscore
alpha 0 is opacity, so be sure to invert at the end
already Titlecase, no changes needed
already accounted for in qh_outerinner()
already an empty val.
already connected, we should close the connection
already in progress - just ignore duplicate signal
already newly created, truncate
already set by qh_mergecycle_neighbors
already tainted, no check
already used refinement
also guards from premature GC
also initializes "a64toi"
also used as column name list in a VIEW
also, their global data references were replaced with structure references.
alternate stack for SIGSEGV
altstack of another threads are allocated in another place
altstack of main thread is reallocated in another place
always 0 for freed obj
always append newline and null terminate
always convert T_DATA
always copy the var, because we do many conversions
always detect duplicates
always fail if not implemented
always free the CV's, in the symtable are only not-free'd IS_INDIRECT's
always mark cut on current edge
always on stack, no need to mark
always open with binary mode
always print trailing zeroes
always propagate the error code back up to the dbh, so that we can catch the error information when execute is called via query.
always return true unless fail_if_interrupted
always skip parent directories not to recurse infinitely
am or pm based on 12-hour clock
amai: Darrel Hankerson did the changes described here.
amalgamator: dontcache
amd64 rex extension byte
amount of allocated memory for data
an 'x' is returned if shadow passwords are in use.
an approximation of ceil(n * log10(2)), upto 65536 at least
an argument is not allowed for (*ACCEPT), (*FAIL), or (*COMMIT)
an array with zero elements is always aligned
an extended version could be implemented, for now direct functions can be used.
an impossible branch was found if:
anchor optimize: resume search range
and 32 bit regs EAX,EBX,ECX,...
and 6 stands for Saturday.
and Python's array iterator
and SELECT(j+1) is .FALSE..
and a minus sign, if needed
and a resource for the private key
and also when all branches start with non-atomic .* for non-DOTALL matches when *PRUNE and SKIP are not present.
and any continuations that match
and are reproduced herein with the permission of UNIX System Laboratories, Inc.
and can be safely ignored.
and choose the highest possible branch in the branch containing only branches lower than idx
and exit because they do not present in at least one of
and have been modified to work with PHP.
and how many extracts were taken
and increment it so it becomes non-zero .
and increment the usage count.
and individual io vectors
and instruct fetch to fetch waiting piece into our buffer
and it might not be supposed to work at all
and it must be after 2 byte 8bit code
and it's delivered as SIGBUS instead of SIGSEGV to userland.
and make it a warning in the exif_process_IFD_TAG which is called
and no error propagated to row below yet
and now call the implementing handlers
and other Node contributors.
and others complain that this one cannot be reached.
and our own private error handle
and replace it with persistent one
and return an error if we've taken too long.
and send 1 for iteration count
and set it on the data connection
and the exception raised then error message print and exit ruby process by Win32OLE itself.
and the missing ridges
and the parameters, if any
and the terminated fiber's return_fiber() is already dead)
and then skip on to the
and using_history() call rl_initialize().
anonymous open of newsgroup
another fix from rv.py to allow sample to exceed popsize/2
another quickie macro to make defining similar functions easier
another thread acquried
any              ABORT        Back out changes from the current command only (do not do a complete rollback) then cause sqlite3_step() to return immediately with SQLITE_CONSTRAINT.
any              FAIL         Sqlite3_step() returns immediately with a return code of SQLITE_CONSTRAINT.
any              IGNORE       The attempt in insert or update the current row is skipped, without throwing an error.
any object with the .fields attribute and/or .itemsize attribute (if the .fields attribute does not give the total size -- i.e. a partial record naming).
any old docroot will do
any other problem is a fatal error
any other value will be considered as background and will not be written out:    the stream where to write
any read operation perform synchronously.
any write operation perform synchronously
any write operation perform synchronously except some meta data
anything else isn't interesting
anything other than 0 is considered to be a valid timestamp
anyway we need buffered getc
apparent you need to call propput, you need this
apparently some systems don't have this one
apparently, GetBindOptions will only ever return a regular BIND_OPTS structure.
appears in the grammar, then ID becomes a fallback token for X, Y, and Z.
append as a newfacet to end of qh facet_list
append bit length of hashed data:
append bytes to the end of a dynamic pointer
append length in bits
append recursive pattern
append the "-conch" suffix to the file
append the calling scripts' current working directory as a fall back case
append to end of qh visible_list
append to linked list
appends an extra t, not worth removing
applies a plane rotation, where the cos and sin (c and s) are real and the vectors cx and cy are complex. jack dongarra, linpack, 3/11/78.
applies a plane rotation.
apply aliases which are qualified with a class name, there should not be any ambiguity
apply aliases which have not alias name, just setting visibility
apply edge boundary marks
apply j-edge start marks -- j-edges are only marked when they are boundaries -- all cut boundary edges marked -- for two level case, a few uncut edges must be marked
apply modification if it's not the first iteration
apply strip_high and strip_low filters
apply the Miyaguchi-Preneel compression function:
apply the r-th round transformation:
apply values from the dn hash
apply_config() needs r in some cases, so allocate server_context early
apply_func() receives the data and decides if the entry should be deleted or recursion should be stopped.
apprentice - make one pass through /etc/magic, learning its secrets.
appropriate date and time representation
appropriate date representation
appropriate time representation
apptype() uses the filename if given, otherwise a tmp file is created with the contents of buf.
arbitrary binary string (ASCII space padded)
arbitrary binary string (null padded)
are a (signed) number, so that neither ERR63 nor ERR29 will be called on this path, nor with the jump to OTHER_CHAR_AFTER_QUERY ever be taken.
are converted into OP_(NOT_)PROP codes.
are generated only when PCRE_UCP is *not* set.
are generated only when PCRE_UCP is not* set.
are lower case letter, but can't convert.
arg can be an EC::Group or a String representing an OID.
arg, opts, rest, post  block
arg.s is string WITHOUT NUL.
arg1 goes to TMP_REG1 or src reg arg2 goes to TMP_REG2, imm or src reg TMP_REG3 can be used for caching result goes to TMP_REG2, so put result can use TMP_REG1 and TMP_REG3.
arg1 goes to TMP_REG1 or src reg.
arg2 goes to TMP_REG2, imm or src reg.
arg2 must be 1 larger
arg3 is possible option offset name
argc and argv must be the original
argc is settled at above
argc/argv may be 0/NULL called before error handling initialized qh_errexit() may not be used
argument is a UID sequence
arguments after the file are considered script args
arr might not have the right number of dimensions and need to be reshaped first by pre-pending ones
arr must be an array at this point
arr_bincount is registered as bincount.
array 11: simple array.
array attribute get and set routines
array can be *huge* so only fetch if asked
array data cache, sz is number of bytes to allocate
array for GETALL, SETALL
array is not allocated
array object functions
array of column indexes
array of coordinates for each point
array of possible signatures.
array's are _very_ special in soap.
array(string classname, array(mixed ctor_args))
array.c assumes that allocated objects are new
array_diff_assoc() or array_diff_key()
array_diff_uassoc() or array_diff_ukey()
array_from_pyobj is used in f2py generated Python extension modules.
array_has_column_major_storage(a) is equivalent to transpose(a).iscontiguous() but more efficient.
array_intersect_assoc() or array_intersect_key()
array_intersect_uassoc() or array_intersect_ukey()
array_uintersect_assoc()
array_uintersect_uassoc()
ary might be destructively operated in the given block
as 0.00xx will be ignored.
as a modified form of the old Roman republican calendar which was based on lunar cycles.
as error, use the values for now...
as far as streams are concerned, we are now at the start of the stream
as is the end, so the line misses the window
as is the end, so the line never cuts the window
as it is not really public, duplicate declaration here to avoid pointless warnings
as long as we don't support non-seekable output, clear data descriptor bit
as soon as someone touches the stdio layer, buffering may ensue, so we need to stop using the fd directly in that case
as the original contributor of this module by leaving this note intact in the source code.
ascii.c -  Onigmo (Oniguruma-mod) (regular expression library)
ascii.c -  Oniguruma (regular expression library)
asis(-1) means "don't call setpgid()".
ask for a passive connection if we need one
ask streams to give us a buffer of an appropriate size
ask the driver to perform any normalization it needs on the parameter name.
ask the event module to add the fd from its own queue
ask the event module to remove the fd from its own queue
assign heap_page body (contains heap_page_header and RVALUEs)
assign heap_page entry
assign_identity : If NULL, PyArray_InitializeReduceResult is used, otherwise this function is called to initialize the result to the reduction's unit.
assignment within conditional expression.
assignment within conditional function
assume "index.php" is starting point
assume OpenSSL verifies this format
assume all params have been bound
assume all types are nullable
assume current mode has at most length 4 (e.g. wbn+)
assume int is enough to store 32bits
assume it works if the file doesn't exist yet
assume no string exceeds INT_MAX
assume ping is successful
assume same as _gmtime64_s()
assume success, we would have failed before
assume tar format, PharData can specify other
assume tar-based phar
assume that create isn't overwritten, so when clone depends on the overwritten one then it must itself be overwritten
assume that it might be a progid instead
assume that sargp is always NULL on fork-able environments
assume the type gid_t is the same as uid_t:
assume timeval.tv_sec has same signedness as time_t
assume zip-based phar
assumes all points extreme
assumes protocol family and address family are identical
assumes there are no single-char entities
assuming 32bit(2's complement) long
assuming each ranges are successive, and mbclen never change in each ranges.
assuming no autoloader call is necessary, class should have been loaded if it's in backtrace ...
assuming that no internal functions will silently swallow exceptions ...
assumption: that the active function (f) is the function we generated for the engine
async message function
async-signal-safe (since SUSv4)
async-signal-safe but don't need to call it in a child process.
at 0h UT (i.e. the sidereal time at the Greenwhich meridian at
at an instant given in d, number of days since
at beginning of first pass, mark first i-edge with SLIT_DN
at end of first pass, mark final i-edge with SLIT_UP
at least a or b is NaN
at least a or b is zero
at least one 0xff is needed before marker code
at this moment, because the ps command of AIX refers to them.
at this point path_translated will be set if: 1.
atexit() handler in the DB2/AIX library segfaults in PHP CLI
atomic assignment in flat memory model
attach to the service manager
attempt reconnect if the first Post fail
attempt to allocate a C Runtime file handle
attempt to connect with mail host
attempt to get the lock
attempt to handle extremely small/large numbers better
attempt to hide zero division from gcc
attempt to reduce exponent
attempt to reshape an array without copying data  The requested newdims are not checked, but must be compatible with the size of self, which must be non-zero.
attempt to set security impersonation for fastcgi will only happen on NT based OS, others will ignore it.
attribute check is expensive for scalar operations, avoid if possible
attributes don't have attributes
auth header if it was specified
auth_plugin_data is split into two parts
authentication-required
auto globals hash keys and names
auto-convert to phar://
auto-detect line endings, looks like unix-lineendings, not to spec, but it is seem in the wild, a lot
auto-detect soft line breaks, found mac line break
auto-detect soft line breaks, found network line break
autodetected values should be removed if these vars specified in config
autoload(:MyModule, "/usr/local/lib/modules/my_module.rb")
autoload_data_i can be deleted by another thread while require
autoload_extensions is not initialized, set to defaults
autoload_i is non-WB-protected
autoload_reset in other thread will resume us and remove us from the waitq list
autoload_reset will wake up any threads added to this iff the GVL is released during autoload_require
automagically determine output serialization type from request type
automatic allocateable buffer for additional header
automatically defined by SQLITE_ENABLE_FTS4
automatically executed on module import
autoseek for resuming
av is 'A' shown in above.
availableInnerMainDim is indefinite which means the node is being sized based on its content.
average number of chunks allocated per request
average string length
avoid BC break, if functions list is empty, will return an empty array
avoid buffering issues while reading header
avoid division by zero
avoid driver auto-translation: we'll do it ourselves
avoid duplicate block, table is usually small
avoid function call for bool
avoid infinity recursion, by taking handler from nested closure
avoid libc5 readdir problems
avoid many reallocs by allocating a good sized chunk to begin with, if we can.
avoid merging old facet if new is ok
avoid modifying RS_default
avoid potential coredump caused by use of a finished context
avoid problems if someone mis-uses the stream
avoid reference counting in debug mode, thus do it manually
avoid same deallocator as PyBaseObject, see gentype_free
avoid shell since no shell meta character found.
avoid strict aliasing
avoided by normal-POP
axis_flags  : Flags indicating the reduction axes of 'operand'.
axis_flags : An array of boolean flags, one for each axis of 'operand'.
b is zero,then assign a to c.
b) The new syntax supports the AND and NOT operators.
b) if the *-wal file does not exist, claim that it does anyway, causing SQLite to call xOpen() to open it.
bCommit is passed true for an auto-vacuum-on-commit  operation, or false for an incremental vacuum.
bCommit is passed true for an auto-vacuum-on-commmit  operation, or false for an incremental vacuum.
bEof: Set to true once iterator has reached EOF.
bPrefixIndex: This is only used for debugging.
back to blocking mode
backref or 7bit octal.
backtrack one byte, the 0x0 at the end of the scramble in 5.1 and previous
backup encoded ")" to paren
backup ensure_list to array for search in another context
backup globals when cleaning
backup the fcall info and cache
backup things and jump back
bad error in module startup - no way we can live with this
badcheck: if non-zero, +ArgumentError+ is raised when +str+ is not valid as an Integer.
balance multiplication by slicing y when x is much smaller than y
balance_quick() inserts a new cell into pParent, which may cause pParent overflow.
balancing multiplication by slicing larger argument
bare string - nothing to do
base register must be R0
base register must be R1
base64 encoded string
base: see +rb_cstr_to_inum+
based on https://en.wikipedia.org/wiki/UTF-8#Sample_code
based on zend_dirname().
basic blocks, with no labels in the middle
be careful: some unix system headers #define R8, R9, etc
be compliant with libmysql - NULL will turn
be defensive in case some platforms set SO_ERROR on the original, interrupted connect()
be equal to that of c
be ignored on reading because it is being generated anyways.
be sure calculation temps are big enough
be sure we didn't leave cache locked
because it may happen GC afterward
because of lazy sweep, str may be unmarked already and swept at next time
because of our update of the current page, we do not need to read in anything.
because of roundoff error
because peephole optimization can modify original iseq
become process group leader
before OpenSSL 1.0, this is 'unsigned long'
before beginning of unix epoch or behind end of unix epoch
before stdio.h in ruby/define.h
before unloading, display all remaining bad function in the module
beginning of path element
beginning of struct, see main/streams/plain_wrapper.c line 111
beginning-of-error-codes
below the horizon, and also selects whether this altitude should
bend backward (left along curve)
bend forward (right along curve)
between prefix and suffix
big long does not fit in 4 bytes
big5.c -  Oniguruma (regular expression library)
bigdivrem_restoring will modify y.
bigdivrem_restoring will not modify y.
bin - is one or few continuous pages (up to 8) used for allocation of a particular "small size".
binary operation with constant operands
binary test if pattern is not text
binary_search_with_guess needs at least a 3 item long array
bincount accepts one, two or three arguments.
bind hdl (will alloc)
bind the classname to the actual class
bind to a local address
bind to write_io temporarily to get rid of memory/fd leak
bind_char_1: If max length set in OCIBindByName is less than the actual length of input string, then we have to overwrite alenp with max value set in OCIBindByName (dummy_len).
binding.eval("local_variables")
bindings should be created from top of frame
bit 16 set iff "diff" was non-zero (on non-match)
bit string (ascending)
bit string (descending)
bitmask (see defines above)
bits 3-5 of mod r/m field
bits 6-7 of mod r/m field
bits are left-justified on b.
bits of precision in B/R histogram
bits of precision in G histogram
bits of precision in R/B histogram
black magic lies herein.
blank - a GNU extension
blk0() and blk() perform the initial expand.
block compression parameters -- after all codes are used up, and compression rate changes, start over.
block eval under the class/module context
block is used instead of pattern argument.
bn2bin bin2bn bn2hex bn2dec hex2bn dec2bn - all these are implemented in ossl_bn_initialize, and ossl_bn_to_s print - NOT IMPL.
body transfar encoding
bogus option but ignored
bold on/off has zero print width so line count is unchanged
bom or wchar detection is prior to 'script_encoding' option
bool type is one byte, so can just use the char
bools are a subclass of int
both coefficients and offset
both edges are all digits
both goto the same one - it's JMP
both script and internal encodings are incompatible w/ flex
both values are integers overflown to the same side, and the double comparison may have resulted in crucial accuracy lost
bound instance method of module
boundaries on sqlite3GlobalConfig.mnReq are enforced in sqlite3_config()
boundary case -- decrement exponent
boundary case -- increment exponent
bounded by numentries, so no overflow
brackets nesting level
break and return the current value if the number is not well-formed that's what Linux strtol() does
break intentionally missing
break intentionally missing again
break intentionally not missing
break intentionally omitted
break is left intentionally
break is missing *intentionally*
break is missing _intentionally_
break is missing intentionally
break is omitted intentionally
break missing *intentionally - the assign_op's may only optimize op2
break missing *intentionally* - the assign_op's may only optimize op2
break missing intentionally
break missing intentionally here too
break omitted intentionally
break possible cycles
brig_in will always be empty here, as the filter MUST attach any un-consumed buckets to its own brigade
brig_out becomes brig_in.
bring php repository up to date with xmlrpc-epi version 0.51  Revision 1.9  2002/07/03 20:54:30  danda root element should not have a parent.
bring the palette colors in im2 to be closer to im1
browser data defined in activation phase, lazily loaded in get_browser.
browser data defined in startup phase, eagerly loaded in MINIT
btreeParseCell method
btreeParseCell() takes a  cell index as the second argument and btreeParseCellPtr()  takes a pointer to the body of the cell as its second argument.
btrfs can take a while to allocate making release worthwhile
buf may be NULL, if flags are set to indicate a flush.
buf will be free in ossl_buf2str
buffer can be shared because no one refers to them.
buffer expanded but stream processing was stopped
buffer for IPC_STAT, IPC_SET
buffer for exponent string
buffer given -- use it
buffer in which to construct conch name
buffer is not long enough to hold full output, double it
buffer isn't completely full, fail
buffer needs to get smaller
buffer to store 'indexes' which will be passed to 'qsort'
buffer to store sort keys
buffer_initial_length*: sets the initial length of the generator's internal buffer.
buffered result sets don't have a connection
buffering is off by default
buffering wasn't enabled, there is nothing to flush
buffersize  : Buffer size for the iterator.
buflen can be zero EITHER because there's not enough room in the string, or because the control command goes to the empty string.
bug for bug compatible with Unix
bug#25371 mysql_change_user() triggers "packets out of sync" When it gets fixed, there should be one more check here
build an array of handles for non-sockets
build properties hash table
build the NEW.* reference row.
build the array of objects
build the old IMAPG(imap_folders) variable to allow old imap_listmailbox() to work
build the old simple array for imap_listsubscribed()
build the output buffer
build up a the new array of objects
build up the reverse mapping
build upper-convex hull even if Qg
build with dtrace support
bump the string table size by enough for the new name and it's null terminator
busdays_in_weekmask: A count of how many 1's there are in weekmask.
but already Titlecase
but anyway we have to care it.
but it's a shadow of private
but not actually..)).
but not needed for now
but pretend copied all
but ruby is single threaded system, so whole system will be blocked forever.
but that could cause some E_NOTICE and also damn long lines.
but this case seems very unlikely.
but this implementation still has problem.
but we are not supposed to change this
but we do need to know the file size.
but we now allow attributes on nodes with no value...
but we only want the offset.
but, unknown error code
by default, use the existing format
by number tokens inserted
by subtracting or adding even multiples of 360.0 until the
by the Gregorian calendar).
by-ref constraints on arguments are invariant
by-ref constraints on return values are covariant
byte offset to char offset
byte-swap on pickle-read
bytecnt checks are to be kept for PHP, see cve-2014-3538.
bytes allocated for WhereInfo struct
bytes not exclusively 0 or 1, sum them individually.
byteswap a single magic entry
c) The old syntax supports the "-" token qualifier.
c-level get_iterator cannot be changed
c-level get_iterator cannot be changed (exception being only Traversable is implmented)
c.ivtbl may change in gen_ivar_copy due to realloc, no need to free
cURL destructors should be invoked only by last curl handle
ca_cert.sign ca_key, OpenSSL::Digest::SHA1.new  The CA certificate is saved to disk so it may be distributed to all the users of the keys this CA will sign.
cache full - replace least-recently-used
cache lookup for absolute path
cache since only current is always required
cache still growing - add new elem
cache where we started so we can parse after validating
cached details from statfs()
caching method info to dummy cc
cainfo holds information about trusted CAs
calculate and check number of parameters
calculate elements count
calculate how long we need to wait in milliseconds
calculate how many required args are at the end of the specifier list
calculate length after match
calculate median value
calculate padding size for aligned memory access
calculate required stack size
calculate strlen, which can be no longer than 100
calculate the free space in the buffer
calculate the length of the return buffer
calculate the slope of the line
calculate transition state
calculating length is more complicated here.
call a function to parse all the text, so that we can use the same function no matter where the headers are from
call a function to parse all the text, so that we can use the same function to parse text from other sources
call additional bug reporters
call ap_set_content_type only once, else each time we call it, configured output filters for that content type will be added
call deepcopy on this argument
call dtor on the old element as in spl_ptr_llist_pop
call failed, pass internal buffer along
call func with error notice
call it's dir_open method - set up params first
call it's stat_url method - set up params first
call it's stream_open method - set up params first
call php's original import as a catch-all
call qh_precision for each of these
call request shutdown for all modules
call the __array_finalize__ method if a subtype.
call the callback provided by the user
call the mkdir method
call the rename method
call the rmdir method
call the unlink method
call this for console only
call this for pipe only
call to the handler for mbstring.language is done after mbstring.internal_encoding is handled.
call-seq WIN32OLE_METHOD#name  Returns the name of the method.
call-seq:  WIN32OLE_TYPELIB.typelibs  Returns the array of WIN32OLE_TYPELIB object.
call-seq: BigDecimal.double_fig  The BigDecimal.double_fig class method returns the number of digits a Float number is allowed to have.
call-seq: BigDecimal.limit(digits)  Limit the number of significant digits in newly created BigDecimal numbers to the specified value.
call-seq: BigDecimal.mode(mode, value)  Controls handling of arithmetic exceptions and rounding.
call-seq: ENV.clear  Removes every environment variable.
call-seq: ENV.length ENV.size  Returns the number of environment variables.
call-seq: ENV.rassoc(value)  Returns an Array of the name and value of the environment variable with +value+ or +nil+ if the value cannot be found.
call-seq: ENV.rehash  Re-hashing the environment variables does nothing.
call-seq: Fiddle.free(addr)  Free the memory at address +addr+
call-seq: Fiddle.malloc(size)  Allocate +size+ bytes of memory and return the integer memory address for the allocated memory.
call-seq: Fiddle.realloc(addr, size)  Change the size of the memory allocated at the memory location +addr+ to +size+ bytes.
call-seq: File.chmod(mode_int, file_name, ...
call-seq: File.chown(owner_int, group_int, file_name,...
call-seq: OpenSSL::ASN1::ObjectId.register(object_id, short_name, long_name)  This adds a new ObjectId to the internal tables.
call-seq: OpenSSL::PKey::EC::Point.new(point) OpenSSL::PKey::EC::Point.new(group) OpenSSL::PKey::EC::Point.new(group, bn)  See the OpenSSL documentation for EC_POINT_*
call-seq: OpenSSL::X509::Extension.new asn1 OpenSSL::X509::Extension.new name, value OpenSSL::X509::Extension.new name, value, critical  Creates an X509 extension.
call-seq: Psych.libyaml_version  Returns the version of libyaml being used
call-seq: String.included(modul)  Extends _modul_ with the String::Extend module.
call-seq: StringScanner.must_C_version  This method is defined for backward compatibility.
call-seq: WIN32OLE#_getproperty(dispid, args, types)  Runs the early binding method to get property.
call-seq: WIN32OLE#_invoke(dispid, args, types)  Runs the early binding method.
call-seq: WIN32OLE#_setproperty(dispid, args, types)  Runs the early binding method to set property.
call-seq: WIN32OLE#ole_free  invokes Release method of Dispatch interface of WIN32OLE object.
call-seq: WIN32OLE#ole_func_methods  Returns the array of WIN32OLE_METHOD object .
call-seq: WIN32OLE#ole_get_methods  Returns the array of WIN32OLE_METHOD object .
call-seq: WIN32OLE#ole_method_help(method)  Returns WIN32OLE_METHOD object corresponding with method specified by 1st argument.
call-seq: WIN32OLE#ole_methods  Returns the array of WIN32OLE_METHOD object.
call-seq: WIN32OLE#ole_put_methods  Returns the array of WIN32OLE_METHOD object .
call-seq: WIN32OLE#ole_type  Returns WIN32OLE_TYPE object.
call-seq: WIN32OLE.codepage  Returns current codepage.
call-seq: WIN32OLE.create_guid  Creates GUID.
call-seq: WIN32OLE_EVENT#handler  returns handler object.
call-seq: WIN32OLE_EVENT.message_loop  Translates and dispatches Windows message.
call-seq: WIN32OLE_METHOD#dispid  Returns dispatch ID.
call-seq: WIN32OLE_METHOD#event_interface  Returns event interface name if the method is event.
call-seq: WIN32OLE_METHOD#helpcontext  Returns help context.
call-seq: WIN32OLE_METHOD#helpfile  Returns help file.
call-seq: WIN32OLE_METHOD#helpstring  Returns help string of OLE method.
call-seq: WIN32OLE_METHOD#invoke_kind  Returns the method kind string.
call-seq: WIN32OLE_METHOD#offset_vtbl  Returns the offset ov VTBL.
call-seq: WIN32OLE_METHOD#params  returns array of WIN32OLE_PARAM object corresponding with method parameters.
call-seq: WIN32OLE_METHOD#return_type  Returns string of return value type of method.
call-seq: WIN32OLE_METHOD#return_type_detail  Returns detail information of return value type of method.
call-seq: WIN32OLE_METHOD#return_vtype  Returns number of return value type of method.
call-seq: WIN32OLE_METHOD#size_opt_params  Returns the size of optional parameters.
call-seq: WIN32OLE_METHOD#size_params  Returns the size of arguments of the method.
call-seq: WIN32OLE_MTHOD#invkind  Returns the method invoke kind.
call-seq: WIN32OLE_PARAM#default  Returns default value.
call-seq: WIN32OLE_PARAM#name  Returns name.
call-seq: WIN32OLE_PARAM#ole_type  Returns OLE type of WIN32OLE_PARAM object(parameter of OLE method).
call-seq: WIN32OLE_PARAM#ole_type_detail  Returns detail information of type of argument.
call-seq: WIN32OLE_RECORD#method_missing(name)  Returns value specified by the member name of VT_RECORD OLE variable.
call-seq: WIN32OLE_RECORD#ole_instance_variable_get(name)  Returns value specified by the member name of VT_RECORD OLE object.
call-seq: WIN32OLE_RECORD#ole_instance_variable_set(name, val)  Sets value specified by the member name of VT_RECORD OLE object.
call-seq: WIN32OLE_TYPE#default_event_sources  Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having IMPLTYPEFLAG_FSOURCE and IMPLTYPEFLAG_FDEFAULT.
call-seq: WIN32OLE_TYPE#default_ole_types  Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having IMPLTYPEFLAG_FDEFAULT.
call-seq: WIN32OLE_TYPE#helpcontext  Returns helpcontext.
call-seq: WIN32OLE_TYPE#helpfile  Returns helpfile path.
call-seq: WIN32OLE_TYPE#implemented_ole_types  Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object.
call-seq: WIN32OLE_TYPE#major_version  Returns major version.
call-seq: WIN32OLE_TYPE#ole_methods # the array of WIN32OLE_METHOD objects.
call-seq: WIN32OLE_TYPE#ole_typelib  Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE object.
call-seq: WIN32OLE_TYPE#source_ole_types  Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE object and having IMPLTYPEFLAG_FSOURCE.
call-seq: WIN32OLE_TYPE#variables  Returns array of WIN32OLE_VARIABLE objects which represent variables defined in OLE class.
call-seq: WIN32OLE_TYPE.progids  Returns array of ProgID.
call-seq: WIN32OLE_TYPE.typelibs  Returns array of type libraries.
call-seq: WIN32OLE_TYPELIB#library_name  Returns library name.
call-seq: WIN32OLE_VARIABLE#name  Returns the name of variable.
call-seq: WIN32OLE_VARIABLE#ole_type  Returns OLE type string.
call-seq: WIN32OLE_VARIABLE#ole_type_detail  Returns detail information of type.
call-seq: WIN32OLE_VARIABLE#value  Returns value if value is exists.
call-seq: WIN32OLE_VARIABLE#variable_kind  Returns variable kind string.
call-seq: WIN32OLE_VARIABLE#varkind  Returns the number which represents variable kind.
call-seq: WIN32OLE_VARIANT.array(ary, vt)  Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY.
call-seq: _dump  Method used to provide marshalling support.
call-seq: array_nl()  This string is put at the end of a line that holds a JSON array.
call-seq: ary.push(obj, ...
call-seq: buffer_initial_length  This integer returns the current initial length of the buffer.
call-seq: ceil(n)  Return the smallest integer greater than or equal to the value, as a BigDecimal.
call-seq: cert.check_private_key(key)  Checks if 'key' is PRIV key for this cert
call-seq: check(pattern)  This returns the value that #scan would return, without advancing the scan pointer.
call-seq: check_until(pattern)  This returns the value that #scan_until would return, without advancing the scan pointer.
call-seq: close  Close this handle.
call-seq: configure(opts)  Configure this State instance with the Hash _opts_, and return itself.
call-seq: dbm.clear  Deletes all data from the database.
call-seq: dbm.close  Closes the database.
call-seq: dbm.delete(key)  Deletes an entry from the database.
call-seq: dbm.replace(obj)  Replaces the contents of the database with the contents of the specified object.
call-seq: dbm.update(obj)  Updates the database with multiple values from the specified object.
call-seq: depth  This integer returns the current depth of data structure nesting.
call-seq: disable_close  Disable a call to dlclose() when this handle is garbage collected.
call-seq: div(value, digits) quo(value)  Divide by the specified value.
call-seq: divmod(value)  Divides by the specified value, and returns the quotient and modulus as BigDecimal numbers.
call-seq: dup clone  Duplicates a StringScanner object.
call-seq: emitter.alias(anchor)  Emit an alias with +anchor+.
call-seq: emitter.canonical  Get the output style, canonical or not.
call-seq: emitter.end_document(implicit)  End a document emission with an +implicit+ ending.
call-seq: emitter.end_mapping  Emit the end of a mapping.
call-seq: emitter.end_sequence  End sequence emission.
call-seq: emitter.end_stream  End a stream emission  See Psych::Handler#end_stream
call-seq: emitter.indentation  Get the indentation level.
call-seq: emitter.line_width  Get the preferred line width.
call-seq: emitter.scalar(value, anchor, tag, plain, quoted, style)  Emit a scalar with +value+, +anchor+, +tag+, and a +plain+ or +quoted+ string type with +style+.
call-seq: emitter.start_document(version, tags, implicit)  Start a document emission with YAML +version+, +tags+, and an +implicit+ start.
call-seq: emitter.start_mapping(anchor, tag, implicit, style)  Start emitting a YAML map with +anchor+, +tag+, an +implicit+ start and end, and +style+.
call-seq: emitter.start_sequence(anchor, tag, implicit, style)  Start emitting a sequence with +anchor+, a +tag+, +implicit+ sequence start and end, along with +style+.
call-seq: emitter.start_stream(encoding)  Start a stream emission with +encoding+  See Psych::Handler#start_stream
call-seq: enable_close  Enable a call to dlclose() when this handle is garbage collected.
call-seq: floor(n)  Return the largest integer less than or equal to the value, as a BigDecimal.
call-seq: from_state(opts)  Creates a State object from _opts_, which ought to be Hash to create a new State instance configured by _opts_, something else to create an unconfigured instance.
call-seq: generate(obj)  Generates a valid JSON document from object +obj+ and returns the result.
call-seq: hash  Creates a hash for this BigDecimal.
call-seq: indent()  Returns the string that is used to indent levels in the JSON text.
call-seq: initialize_copy(orig)  Initializes this object from orig if it can be duplicated/cloned and returns it.
call-seq: inspect  Returns a string formatted with an easily readable representation of the internal state of the pointer.
call-seq: io.iflush  Flushes input buffer in kernel.
call-seq: io.ioflush  Flushes input and output buffers in kernel.
call-seq: io.oflush  Flushes output buffer in kernel.
call-seq: json_create(o)  Raw Strings are JSON Objects (the raw bytes are stored in an array for the key "raw").
call-seq: log(priority, format_string, *format_args)  Log a message with the specified priority.
call-seq: new(initial, digits)  Create a new BigDecimal object.
call-seq: object_nl()  This string is put at the end of a line that holds a JSON object (or Hash).
call-seq: parse()  Parses the current JSON text _source_ and returns the complete data structure as a result.
call-seq: parser.parse(yaml)  Parse the YAML document contained in +yaml+.
call-seq: pathname.make_link(old)  Creates a hard link at _pathname_.
call-seq: pathname.make_symlink(old)  Creates a symbolic link.
call-seq: power(n) power(n, prec)  Returns the value raised to the power of n.
call-seq: precs  Returns an Array of two Integer values.
call-seq: private private(symbol, ...) private(string, ...)  With no arguments, sets the default visibility for subsequently defined methods to private.
call-seq: private_iv_get(target, prop)  Get the private instance variable +prop+ from +target+
call-seq: ptr  Returns a new Fiddle::Pointer instance that is a dereferenced pointer for this pointer.
call-seq: public public(symbol, ...) public(string, ...)  With no arguments, sets the default visibility for subsequently defined methods to public.
call-seq: ref  Returns a new Fiddle::Pointer instance that is a reference pointer for this pointer.
call-seq: remainder(value)  Returns the remainder from dividing by the value.
call-seq: response.basic  Returns a BasicResponse for this response
call-seq: round(n, mode)  Round to the nearest integer (by default), returning the result as a BigDecimal.
call-seq: scan_full(pattern, advance_pointer_p, return_string_p)  Tests whether the given +pattern+ is matched from the current scan pointer.
call-seq: scan_until(pattern)  Scans the string _until_ the +pattern+ is matched.
call-seq: search_full(pattern, advance_pointer_p, return_string_p)  Scans the string _until_ the +pattern+ is matched.
call-seq: size  Get the size of this pointer.
call-seq: skip(pattern)  Attempts to skip over the given +pattern+ beginning with the scan pointer.
call-seq: skip_until(pattern)  Advances the scan pointer until +pattern+ is matched and consumed.
call-seq: source()  Returns a copy of the current _source_ string, that was used to construct this Parser.
call-seq: space()  Returns the string that is used to insert a space between the tokens in a JSON string.
call-seq: space_before()  Returns the string that is used to insert a space before the ':' in JSON objects.
call-seq: sqrt(n)  Returns the square root of the value.
call-seq: store.add_cert(cert)  Adds the OpenSSL::X509::Certificate +cert+ to the certificate store.
call-seq: store.set_default_paths  Configures +store+ to look up CA certificates from the system default certificate store as needed basis.
call-seq: strio.fcntl
call-seq: sym.to_proc  Returns a _Proc_ object which respond to the given method by _sym_.
call-seq: sync(string)  Inputs +string+ into the end of input buffer and skips data until a full flush point can be found.
call-seq: terminate clear  Set the scan pointer to the end of the string and clear matching data.
call-seq: thr.thread_variable_set(key, value)  Sets a thread local with +key+ to +value+.
call-seq: to_h  Returns the configuration instance variables as a hash, that can be passed to the configure method.
call-seq: to_i  Returns the integer memory location of this pointer.
call-seq: to_i  Returns the memory address for this handle.
call-seq: to_json(*)  Converts this object to a string (calling #to_s), converts it to a JSON string, and returns the result.
call-seq: to_json(*)  Returns a JSON string for false: 'false'.
call-seq: to_json(*)  Returns a JSON string for nil: 'null'.
call-seq: to_json(*)  Returns a JSON string for true: 'true'.
call-seq: to_json(*)  Returns a JSON string representation for this Float number.
call-seq: to_json(*)  Returns a JSON string representation for this Integer number.
call-seq: to_json_raw(*args)  This method creates a JSON text from the result of a call to to_json_raw_object of this String.
call-seq: to_json_raw_object()  This method creates a raw object hash, that can be nested into other data structures and will be generated as a raw string.
call-seq: to_s(s)  Converts the value to a string.
call-seq: to_value  Cast this pointer to a ruby object.
call-seq: trace_object_allocations_clear  Clear recorded tracing information.
call-seq: trace_object_allocations_start  Starts tracing object allocations.
call-seq: trace_object_allocations_stop  Stop tracing object allocations.
call-seq: truncate(n)  Truncate to the nearest integer (by default), returning the result as a BigDecimal.
call-seq: vis.build_exception(klass, message)  Create an exception with class +klass+ and +message+
call-seq: vis.path2class(path)  Convert +path+ string to a class
call:  obj.method(...) fcall: func(...) vcall: func
callback can use this, if desired
callback for documentation generation should it be requested
callback for generating keys
callback for the passphrase (for localcert)
callback from Fortran
callback to used to report database server info
called __construct() twice, bail out
called by PDO to clean up a statement handle
called by PDO to close a db handle
called by PDO to commit a transaction
called by PDO to execute a prepared query
called by PDO to execute a statement that doesn't produce a result set
called by PDO to fetch the next row from a statement
called by PDO to get a driver-specific dbh attribute
called by PDO to prepare an SQL query
called by PDO to retrieve driver-specific information about an error that has occurred
called by PDO to retrieve information about the fields being returned
called by PDO to rollback a transaction
called by PDO to set a driver-specific dbh attribute
called by PDO to start a transaction
called by the C server when it first receives an introspection request.
called by the PDO SQL parser to add quotes to values that are copied into SQL
called by xmlrpc C engine as method handler for all registered methods.
called by zip_discard to avoid operating on file from closed archive
called from Init_vm() in vm.c
called when SUPPORT_UTF is not defined.
called when server is being destructed.
callee - removing ourselves
caller accept *ANY* socktype
caller is responsible for cleanup.
caller traces result Optimized for outside points.
caller will handle out of memory
calling SQLDescribeCol() or other, specifically to get the column length, then doing a single read for that size would be slower except maybe for extremely long columns.
calling fclose on an fopencookied stream will ultimately call this very same function.
calls abort() and dumps core
calls from check_bestdist occur after print stats
caml_alloc_string might trigger the GC, when that happens, the GC needs to scan the stack to find the OCaml roots.
can also have an additional key called "metadata" which can be any dictionary  "names" --- field names "formats" --- the data-type descriptors for the field.
can be EUC/SJIS/UTF-8
can be any name referenced from nowhere except Zero() and One().
can be break by raising exception or 'break'
can be done before mapping, they're invariant
can contain null bytes as separators
can delete opened file
can happen when calling eval from a custom sapi
can happen with 'R0.1'
can jump an entire leap year period quickly
can not use qh_errexit()
can not warn about furthest-site Geomview output: no lower_threshold
can now use qh vertex_visit
can pass to optimization
can't allocate additional free objects
can't check polygon here
can't copy a meta file
can't handle paths that contain nul bytes
can't nuke structs until done with palette
can't read nothing or invalid format
can_cpuid and read_cpuid are the two only functions using asm
cancastto is a NPY_NOTYPE terminated C-int-array of types that the data-type can be cast to safely.
cancel server side resources for the statement if we didn't fetch it all
cannot end in : without previous :
cannot include #include "png.h" /usr/include/pngconf.h:310:2: error: #error png.h already includes setjmp.h with some additional fixup.
cannot kill the locker, bail out with error
cannot put the data - skip
canonicalize lang_tag
canonicalize loc_range
capture an option hash - phase 1: pop
capture an option hash - phase 2: assignment
capture iterator block
capture leading mandatory arguments
capture nonblock errnos for WaitReadable/WaitWritable subclasses
capture optional arguments
capture trailing mandatory arguments
capture variable length arguments
case NORMALIZER_NONE: not allowed - doesn't make sense
case PHP_ICONV_ENC_SCHEME_BASE64:
case PHP_ICONV_ENC_SCHEME_QPRINT:
case PragTyp_BUSY_TIMEOUT
case TAG_FMT_BYTE: case TAG_FMT_SBYTE:
case VP_EXCEPTION_OVERFLOW:
case ZEND_ASSIGN_BW_XOR: case ZEND_ASSIGN_CONCAT:
case ZEND_FETCH_CLASS_CONSTANT:
case ZEND_INIT_NS_FCALL_BY_NAME:
case/when condition cache
cast count to signed value to avoid possibly negative n being cast to unsigned value
cast if necessary to desired output typecode
cast of constant operand
cast to avoid gcc-warning
cast to size_t OK as the quantity is always non-negative
cast works around VC++ bug
casting     : The casting rule to apply to the operands.
casting: An exception is raised if the assignment violates this casting rule.
casting: An exception is raised if the copy violates this casting rule.
caution: the Hebrew format produces non unique result.
cblas_sgemv override, based on Netlib CBLAS code
cdb 0.75's default for PROTOless systems
cdb doesn't support delete
cdb/cdb_make and ini are no option here
cdb_free does not close associated file
cdb_make dosn't know replace
cdir spans past EOCD record
center and keepcentrum was set
center and normal copied to tricoplanar facets
centralised open stream for builtin
centrum id for non-simplicial facets
certain schemas like mailto: and zlib: may not have any / after them this check ensures we support those.
certainely useless but proper
certpbe (default RC2-40) keypbe (default 3DES) friendly_caname
chPtr is the int for the result
change "to" into new object (from "object" )
change T only if we have _EX opcode there
change passed value type to string
change the ending to this (not reversed)
changeCountDone  This boolean variable is used to make sure that the change-counter  (the 4-byte header field at byte offset 24 of the database file) is  not updated more often than necessary.
changeset_apply() context
changeset_apply() context object
char offset to byte offset
char-class expanded multi-char only compare with string folded at match time.
character appears in ISO-8859 text
character appears in non-ISO extended ASCII (Mac, IBM PC)
character appears in plain ASCII text
character count for expstr
character encoded in 1 code unit
character never appears in text
character-set, transfer-encoding
charset convert filter
charset is indifferent, used cs_8859_1 for efficiency
charset shouldn't matter, use ISO-8859-1 for performance
chartable partial dup
check again, to ensure that the cache wasn't already cleaned by another process
check blacklist right after ensuring that file was opened
check children of all marked wb-unprotected objects
check coloring  marking:false marking:true marked:false  white         *invalid* marked:true   black         grey
check each fragment, if any bigger than capacity, can't do it due to bug #72533
check flag to see if do_mod was called to perform full add , gerrit thomson
check for ".phar" in extension
check for 1st char of combining characters
check for 2nd char of combining characters
check for NULL buffer in case of memory error in xmlEncodeEntitiesReentrant
check for NULL parameters
check for __COMPILER_HALT_OFFSET__
check for a cached persistent socket
check for a dotted-IP address string
check for any file with .ini extension
check for buffered data
check for bundled IPv4
check for commas present or first (or second) element a digit
check for conclusive modifier
check for contiguous argv strings
check for contiguous environ strings following argv
check for copy on write
check for copy-on-write
check for curl-wrappers that provide headers via a special "headers" element
check for curve closure -- if not, erase any start mark
check for data descriptor
check for dates before SDN 1 (Jan 2, 4713 B.C.)
check for dates before SDN 1 (Nov 25, 4714 B.C.)
check for degen_redundant_neighbors after qh_forcedmerges()
check for domain error
check for encoding name fragment
check for end-of-central-dir magic
check for error set during request parsing / generation
check for existing interned string
check for fault, in which case, there is no intermediate element
check for fault, which is a rather special case.
check for invalid dates
check for invalid redirection URLs
check for its validity, if its valid pass it unchanged
check for japanese chars in BMP
check for japanese chars in CJK Unified Ideographs ext.B (U+2XXXX)
check for japanese chars in compressed mapping area: U+1E00 - U+4DBF
check for jumps into the middle of try block
check for language (and perhaps country) codes
check for limits of field_ind if the field parameter was an int
check for login and password
check for major japanese chars: U+4E00 - U+9FFF
check for mounted directories
check for overflows, if there's a potential overflow do nothing
check for repeated errors to be ignored
check for soft line break according to RFC 2045
check for sortKeyBuf overflow, increasing its size of the buffer if needed
check for the old child and whether the new child is already a child
check for the same interned string
check for uncaught exceptions
check for url like http:// or phar://
check for use of reserved method IDs
check for vality of named entity
check force_cgi after startup, so we have proper output
check health of children
check heap_page status
check if 'round' is needed.
check if NOP breaks incorrect smart branch
check if ZCG(function_table) wasn't somehow polluted on the way
check if a NULL should be inserted
check if a or b is zero
check if already ascending order
check if bound parameter is already available
check if callback is called from include_once or it's a main request
check if caller says we must understand something in a header.
check if coming due to ErrorDocument We make a special exception of 413 (Invalid POST request) as the invalidity of the request occurs during processing of the request by PHP during POST processing.
check if comparison function is valid
check if connection has timed out
check if declare failed
check if entity is valid
check if file is too new (may be it's not written completely yet)
check if fortran contiguous
check if hash is modified during iteration
check if idx is Range
check if indx is Range
check if long can be safely casted to int
check if original array has numeric keys
check if p looks like a pointer using bsearch
check if prev_cfp can be accessible
check if request_method has been sent.
check if result is null.
check if shm is already initialized
check if size_t can be safely casted to int
check if size_t can be safely casted to unsigned int
check if some watchpoint was hit
check if static properties were destoyed
check if string or vector (1 or n)
check if that addr is in a mprotect()'ed memory area
check if the CPU supports AVX
check if the OS is MacOS X Mavericks
check if the RHS is zero
check if the called method has been previous registered
check if the cert is self-signed
check if the connection is still there
check if the data we get is a port this allows us to correctly parse things like a.com:80
check if the event has been triggered
check if the library is already in the cache by getting its name
check if the requested function exists
check if the resolution is specified
check if the same interned string was already stored
check if the stylesheet is using xsl:key, if yes, we have to clone the document _always_ before a transformation
check if there are only NOPs under the branch
check if there is already more data
check if valid name before replacing - with _
check if we can reuse exisiting connection ...
check if we can shift/reduce error token
check if we can write more data
check if we got a 229 response
check if we have Proxy-Authorization header
check if we have a valid host, if we don't reject the string as url
check if we have any param
check if we load xsd from the same server
check in calling scripts' current working directory as a fall back case
check in provided path
check int range overflow
check invalid code point
check invalid handles
check local variable name.
check most likely values: guess - 1, guess, guess + 1
check number of arguments
check objects and convert to right storage order
check optimized method override by a prepended module
check out bom(byte order mark) and see if containing wchars
check page sanity: number of entries should be something reasonable, and all offsets in the index should be in order.
check persistent connections, move used to free
check position in the src image
check possible overflow
check redundant double repeat.
check size limitation
check sortKeyIndxBuf overflow, increasing its size of the buffer if needed
check standardized locales
check that class_type is traversable at c-level or implements at least one of 'aggregate' and 'Iterator'
check that offset is within range
check that the persistent script is indeed the same file we cached (if part of the path is a symlink than it possible that the user will change it) See bug #15140
check that we are not reinterpreting memory containing Objects.
check that we have a string
check the floating point status - errmask: mask of status to check - extobj: ufunc pyvals object may be null, in which case the thread global one is fetched - ufunc_name: name of ufunc
check the highest numbered descriptor
check the indicator to ensure that the data is intact
check the integer part and the equal length part of the fraction.
check to make sure that the year does not exceed 4 digits in length
check to make sure we are dealing with a regular file
check to see if integer can fit into a longlong or ulonglong and return that --- otherwise return object
check to see if the connection is still in place (lurcher)
check to see if the connection is still valid
check to see if this is going to
check to see if we are the last parent's last_child, if so repoint so hash table inserts will go to the right place
check to see if we've got a directory
check unicode characters
check we are at the beginning of the stack, but after argument RECV
check whether arrays with datatype dtype might have object fields.
check whether it is actually a private key if requested
check whether its last access was more than maxlifetime ago
check whether the trait method fulfills the inheritance requirements
check whether the user has write access
check whether we have meta data, zero check works regardless of byte order
check which states can be overridden
check_liveness: not needed
checking whether the following line is part of a folded header
child elements will not be freed.
child to parent column mapping
child_exec is the func that will be executed as the result of clone
children: return listening socket parent: never return
chngToIN holds a set of tables that *might* satisfy case 1.
chngToIN will hold either 0, 1, or 2 bits.
choice point, seeing what to do next.
choose an efficiently fread'able size
choose an efficiently fwrite'able size
chop after the last separator
chunk has to be aligned
chunked encoding - ignore Content-Length header
churn through str, generating array entries as we go
cksum3 is calculated based on the entries extracted by these queries.
class DOMCdataSection extends DOMText  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-667469212 Since:
class DOMCharacterData extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-FF21A306 Since:
class DOMComment extends DOMCharacterData  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-1728279322 Since:
class DOMDocument extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-i-Document Since:
class DOMDocumentFragment extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-B63ED1A3 Since:
class DOMDocumentType extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-412266927 Since:
class DOMElement extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-745549614 Since:
class DOMEntity extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-527DCFF2 Since:
class DOMEntityReference extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-11C98490 Since:
class DOMNameList  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#NameList Since: DOM Level 3
class DOMNotation extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-5431D1B9 Since:
class DOMProcessingInstruction extends DOMNode  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-1004215813 Since:
class DOMText extends DOMCharacterData  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-1312295772 Since:
class Roman def roman_to_int(str) # ...
class and frozen checked in this API
class domdomconfiguration  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMConfiguration Since: DOM Level 3
class domerror  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ERROR-Interfaces-DOMError Since: DOM Level 3
class domerrorhandler  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ERROR-Interfaces-DOMErrorHandler Since: DOM Level 3
class domimplementationlist  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMImplementationList Since: DOM Level 3
class domimplementationsource  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMImplementationSource Since: DOM Level 3
class domlocator  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Interfaces-DOMLocator Since: DOM Level 3
class domstringextend  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#i18n-methods-StringExtend Since:
class domstringlist  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMStringList Since: DOM Level 3
class domtypeinfo  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#TypeInfo Since: DOM Level 3
class domuserdatahandler  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#UserDataHandler Since: DOM Level 3
class table hash keys, class names, properties, methods, constants, etc
class type hinting...
class xsl_xsltprocessor  URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html# Since:
class_table is usually destroyed by free_persistent_script() that overrides destructor.
classes don't have to be destroyed
clause is as specified by the parameter to this routine.
clean before putting into the cache, since clean could call dtors, which could use cached hash
clean path without cwd
clean up all the child ends and then open streams on the parent ends, where appropriate
clean up all the descriptors
clean up anything allocated.
clean up for bigendian systems
clean up from last execution
clean up notice messages
clean up on big-endian systems
clean up persistent connection
clean up persistent sdl
clean up the data block and return it
clean up the fetch buffers if they have been used
clean up the input descriptor
clean up varargs array if it was used
cleanup after ourselves.
cleanup handled in sxe_object_dtor as we dont always have an iterator wrapper
clear any PySequence_Size error, which corrupts further calls to it
clear as info is unnecessary and makes life harder later
clear authentication credentals
clear compression method specific flags
clear dispatch parameter
clear dispatch parameters
clear event in pollfds
clear http input identification.
clear name of dispatch parameters
clear overloaded function.
clear sign bit, which we ignore
clear the ready status
clear unnecessary ZEND_FETCH_CLASS opcode
clear value stack for GC
clear waiting_fd anytime
clear_history is the only function where rl_initialize is not call to ensure correct allocation
clearing is done for backward compatiblity
clip if out of bounds
clone error information into the db handle
clone formatter object
clone formatter object.
clone internal object
close - the streams themselves know how
close /dev/poll if open
close control connection
close data connection
close down the ini config
close files opened earlier
close open file handle - allows removal or rename of the file on windows, which has greedy locking only close if the archive was not already compressed.
close the read side of the pipe
close the statement handle
close the statement here, the connection has been closed
close the transaction
close the write side of the pipe
close those descriptors that we just opened for the parent stuff, dup new descriptors into required descriptors and close the original cruft
close unused sockets that was inherited
close() may block for certain file types (NFS, SO_LINGER sockets, inotify), so let other threads run.
closes the data connection, returns NULL
closes the resource by calling dba_close_rsrc()
closing fastcgi listening socket will force fcgi_accept() exit immediately
cmp TMP_REG2, dst asr #31.
cntr.c General purpose contour tracer for quadrilateral meshes.
cntr_trace is called once per contour level or level pair.
coalesce per file arrays into a single one
code duplicated above
code for both increments equal to 1
code for both increments equal to 1 clean-up loop
code for increment equal to 1
code for increment equal to 1 clean-up loop
code for increment not equal to 1
code for unequal increments or equal increments not equal to 1
code in this file relies on the path being nul terminated, even though this is not required, at least on linux for abstract paths.
code in trail, and vowels unless they separate
code is not necessarily a unicode code point
code ripped off from fopen_wrappers.c
code_ptr can be affected above.
collapse adjacent stars to one, to avoid exponential behavior
collect four bytes into one word:
collision - try another random rowid
colorspace of input image
column list if this is an UPDATE OF trigger
column number to retrieve
columns already in colset object
columns) in the record given by pKey,nKey.
com.typelib_file is the path to a file containing a list of typelibraries to register *persistently*.
combination explosion check and push
combinedLCG() returns a pseudo random number in the range of (0, 1).
command table to be scanned
command...: commandline                 : command line string which is passed to the standard shell cmdname, arg1, ...
commandline                 : command line string which is passed to the standard shell cmdname, arg1, ...
comment, do not parse
comments    : This uses the cursor for the current position.
comments    : Useful for small queues that are constantly changing and would otherwise need constant sorting with the Q_Seek function.
comments    : see Q_Sort for description of 'Comp' function.
commit if we're in auto_commit mode
common part to res_context ends here
common path, if SOCK_CLOEXEC is defined
commonly used constructor and destructor
communication pipe with timer thread and signal handler
compact() is probably most used with a single array of var_names or multiple string names, rather than a combination of both.
compare absolute value.
compare element names
compare element numerically
compare.c: bcmath library file.
compares opcodes with allowing oc1 be _EX of oc2
comparison match reduce strength
compat_leap_month_table is generated by following program.
compatibility for ruby before 1.9.2
compatibility layer for Ruby 2.1
compatibility with older versions of libtidy
compile each node self:  InstructionSequence node:  Ruby compiled node poped: This node will be poped
compile node, this node's value will be popped
compile node, which is popped when 'poped' is true
compile the regular expression from the supplied regex
compiler warns about "non-constant" initializer.
compiler-defined memory barrier
complain if this field doesn't allow NULL values
complete initialization of trait strutures in ce
completely fill the hash, then just add it without
complex conjugate pair of shifts
complex.c: Coded by Tadayoshi Funaba 2008-2012 This implementation is based on Keiju Ishitsuka's Complex library which is written in ruby.
component-wise summing-up of color values
composite PRIMARY KEY value
compound constant name
compress and rehash as necessary
compress as necessary, calculate crcs, serialize meta-data, manifest size, and file sizes
compress consecutive CONCATs
compress consecutive ECHO's.
compress stdin to stdout  Algorithm:  use open addressing double hashing (no chaining) on the prefix code / next character combination.
compressed images only
compressed/interleaved permutation
compression flag already set
compression is better then 2:1, need to allocate more memory
compute ONEmerge, max vertex offset for merging simplicial facets
compute and yield permutations
compute and yield repeated combinations
compute and yield repeated permutations
compute the length of the result string
compute the line's height and find the endIndex
compute the number of idle process to spawn
computed, since it's always very near 0.
concatenate all adjacent text and cdata nodes
conch file header length
conch file host id length
conch host and lock path match
cond is guarded by mutex
conditional expression is constant
conditional group contains more than two branches
conditions cannot be executed by eval()'d code
config.h should contain void if needed
connect the neighbours to this new element
connect the neightbors
connect to the neighbours
connection has timed out
connection-oriented socket may not return a from result
consider the connection closed
const char *fn: list of magic files and directories
const_cast: workaround for old OpenSSL
constant - can be shared among threads
constant arrays can't contain references
constant conditional JMPs
constant expression should be always read context ...
constant sizes so compiler replaces memcpy
constant times a vector plus a vector.
constants are declared in transliterator_register_constants, called from MINIT
constants for Jewish date formatting
constants for easter calculation
constants for jddayofweek
constants for jdmonthname
constraints of fp refcount were not met
constraints when stmt started
construct Random::DEFAULT bits
construct actual offset to file start - local extra_len can be different from central extra_len
construct the spb, hack the service name into it as well
construct the string y1,y2,...,yn
constructor for a JsonEachCursor object for json_each().
constructor for a JsonEachCursor object for json_tree().
consume leading whitespace unconditionally
consume the remainder first
context in which to report errors
contiguous by definition
contiguous, if it got this far
continue marking phase
continue resolution anyway but don't save result in the cache
continuing from the previous line
contradictory, it is very practical:  instead of computing
control chars - set return condition: min number of bytes and timer.
control modes - set 8 bit chars
controllen should be an unsigned with at least 32-bit.
convd has encoding info.
conver ID for each ci
conversion for CJK Unified Ideographs ext.B (U+2XXXX)
conversion for combining characters
convert AF_INET, etc.
convert ESC-less broken JIS
convert HTML numeric entity
convert ID back to base cell indexes
convert JIx0208 alphbet to ASCII
convert JMPZ(X,L1), L1: JMPNZ(X,L2) to JMPZ(X,L1+1)
convert JMPZ_EX(X,L1), L1: JMPNZ_EX(X,L2) to JMPZ_EX(X,L1+1)
convert L: JMP L+1 to NOP
convert MIME B base64 or Q
convert SHUT_RD, SHUT_WR, SHUT_RDWR.
convert SOCK_STREAM, etc.
convert SOL_SOCKET, IPPROTO_TCP, etc.
convert XMLRPC_REQUEST to soap xml dom.
convert XMLRPC_VALUE to soap xml dom.
convert a palette image to true color
convert angle to radians
convert args into zvals.
convert buffercontents to zip_dirent
convert char * to wchar_t
convert chars to upper case and strip non-letter chars
convert constant operands to strings at compile-time
convert escape sequences
convert flags and mode to CreateFile parameters
convert from angle between normals to angle between facets
convert ijrem into value of i or j at which to begin adding an extra zone
convert input array if needed
convert it to unsigned d.
convert justwrote to an integer, since normally it is unsigned
convert ms to timespec struct
convert native php type to xmlrpc type
convert palette to libpng layout
convert string to ascii printable format.
convert the 7-bit alpha channel to an 8-bit alpha channel.
convert the array data into something IB can understand
convert the array to lowercase , also replace hyphens with the underscore and store it in cur_arr
convert the string to UTF-16.
convert the strings to UTF-16.
convert the timestamp into a string
convert timeout into timespec_t
convert to 0-dim array of scalar typecode
convert to 4*(6+2) format
convert to INTP array if Integer array scalar or List
convert to PyArray_Type
convert to VALUE and set the path encoding
convert to known integer size
convert to lower and replace hyphens
convert to microseconds
convert to the encoding number and check encoding
convert to unix epoch
convert xmlrpc data to native php types
convert xmlrpc to native php types
convert_to_null calls destructor
converted string is longer than out buffer
convpath may contain - two-element arrays which contain encodings or encoding names, or - strings representing decorator names.
convpath should be an array.
coordinate Let u be machine roundoff and distround be max error for distance computation The max error for n_0 is sqrt(3) u M_a M_d / norm.
coordinates not kept track of --- need to generate from index
copied data, thus also the ownership.
copied from php-src/main/snprintf.c and slightly modified
copied from sapi/cli/php_cli.c cli_register_file_handles
copied upon generator creation
copies a vector, x, to a vector, y.
copies functions, applies defined aliasing, and excludes unused trait methods
copies will have no base
copy Python object to Fortran array
copy a maximum of nBuf chars to output buffer
copy all elements of first array that are not in exclude set
copy call frame into new stack segment
copy central directory header
copy contents uncompressed rather than lose them
copy digits from after decimal to significand (decrease exponent by d to shift decimal right)
copy digits to exponent
copy escaped character
copy fds because select() alters it
copy file contents + local headers and zip comment, if any, to be hashed for signature
copy file data from an existing to a new phar_entry_info that is not in the manifest
copy flags ONIGENC_CASE_UPCASE     and ONIGENC_CASE_DOWNCASE over to ONIGENC_CASE_UP_SPECIAL and ONIGENC_CASE_DOWN_SPECIAL
copy indices from proxy
copy max significant digits to significand
copy mb char without escaping it
copy non escaped character
copy old contents in entirety
copy oldgen bitmap to mark bitmap
copy out the I/O vectors
copy out the dir from response
copy out the pwd from response
copy over any stragglers
copy part up to the brace
copy pollfds because poll() alters it
copy pre-match substr
copy rb_io_t structure
copy real values from CV slots into symbol table
copy real values from symbol table into CV slots and create INDIRECT references to CV in symbol table
copy relevant flags from second parameter
copy remaining elements
copy remaining elements and NULL
copy replacement and backrefs
copy singleton(unnamed) class
copy the argument array
copy the decimal places.
copy the details from the first item
copy the local files, central directory, and the zip comment to generate the hash
copy the numbers before the decimal point, adding thousand separator every three digits
copy the old data into it
copy the part of the string before the match
copy the rest of p, the NUL is NOT copied
copy the scoreboard not to bother other processes
copy the standard object handlers to you handler table
copy the style values in the stylearr
copy the updated results into the result buffer
copy the value string for work
copy to image, mapping colors
copy underlying tcp fields
copy upto metacharacter
copy what we already have
copy-only-if-necessary
copy: enforce read only access
copyswap for OBJECT increments the reference count
copyswap is faster than memcpy even if we are native
corrected date of the Paschal full moon
corresponding digits to be added.
corresponding digits to be subtracted.
corresponding digits to subtract.
could add array bounds checking
could be POLLERR or POLLHUP but can't tell without probing
could be Windows 8/Windows Server 2012, could be Windows 8.1/Windows Server 2012 R2
could be a separate func.
could be some special code
could not create description
could not resolve address(es)
could support old APIs but need check for ldap_modrdn2()/ldap_modrdn()
could use binary search instead
couldn't convert to string and back
count     - How many arrays there should be (errors if it doesn't match).
count after serializing name, since php_var_serialize_class_name changes the count if the variable is incomplete class
count does not include NUL
count least amount of arguments
count number of elements
count of start markers visited
count the max number of necessary fds for polling
count the number of ' characters
count the number of listed encoding names
count the users and groups configured
count the variables(separators) contained in the "res".
counted in qh_renamevertex
counted is 0 - meaning we had to readlock manually, release readlock now
counted means we are holding read lock for SHM, so that nothing bad can happen
counting static methods
counting static properties
counts number of facets for notfirst
counts number of ridges in output
cover argv with title information
cp1251.c -  Oniguruma (regular expression library)
cp932.c -  Onigmo (Oniguruma-mod) (regular expression library)
cp949.c -  Oniguruma (regular expression library)
create a certificate store and add those certs to it for use in verification.
create a copy of the lock path _only_ if the conch is taken
create a copy of the lock path if the conch is taken
create a fake palette and check for single-shade transparency
create a linked list of elements from 1 to last
create a mapping capable of viewing the whole file (this costs no real resources)
create a new array from the same data with ones in the shape steals a reference to ret
create a new empty value and pass that along to be init'd, then add it to our current vector.
create a new path by replace the trailing '-conch' with '-break'
create a new phar data holder
create a service context
create a socket for this address
create all required sockets
create an OCI statement handle
create an automation SafeArray from a PHP array.
create an entry, this is a new file
create an environment using the character set id
create an image just big enough for the string
create an instance of our class
create and sort array with pointers to the target_hash buckets
create and use new entry, used by zip_add
create any needed directories if the creation of the 1st directory worked
create closure as if it were called from parent scope
create convert filter
create count-sized index arrays for each dimension
create file if it does not exist
create filter to decode response body
create foreground color
create guard : fill 1 out-of-range
create initial children in all pools
create just empty X509Cert
create list of files with index into original archive
create new MapIter object
create new array object from data and update dimensions, strides and descr from it
create new backup in a directory specified by DBBackupPath
create new dimensions and strides
create new file that holds the compressed version
create new interning string in shared interned strings buffer
create new local directory entry
create new multipart_buffer structure
create our return value element
create per-directory config structure
create per-server config structure
create regex pattern buffer
create shutdown function
create the DB if it's not already present
create the argument array
create the background color
create the file if it doesn't exist already
create the full path..
create using the client-side session pool
create wbmp ----------- create an empty wbmp
create_additions*: If set to false, the Parser doesn't create additions even if a matching class and create_id was found.
created thread, reserved
creates the object by - allocating memory - initializing the object members - storing the object - setting it's handlers called from - clone - new
creating a layered source calls zip_keep() on the lower layer, so we free it
creating segment here
cref value cref value
cref value value cref
cross current zone to another cut edge
cross your fingers...
ctor call not really needed for non-ZTS
ctors only have a prototype if it comes from an interface
ctrl+e, go to the end of the line
ctrl-g terminates the search with no effect
ctrl-j terminates the search leaving the buffer in place
curN holds the error propagated from the previous pixel on the current line.
curl-wrappers don't load data until the 1st read
current distance in inner loop
current error or pixel value
current page is not updated here, as sdbm_store will do so, after it inserts the incoming pair.
current position for traversing
current position in (some) buffer
current position in pInput
current position in zInput
current reading position
current size of allocated pages
current status is unusable
current_date()  This function returns the same value as date('now').
current_section_* are only used during parsing
current_time()  This function returns the same value as time('now').
current_timestamp()  This function returns the same value as datetime('now').
currently letting libxml2 set the version string
currently not supported.
currently processed item of input hash
cut off on NULL byte ...
cut off trailing spaces, linefeeds and carriage-returns
cut out bogus OID and retry
cut the UNC path tail to '//host/share'
cwd_length can be 0 when getcwd() fails.
cyclic redirection: O(n)
d) When using the old syntax, the OR operator has a greater precedence than an implicit AND.
darwin's bundled libunwind doesn't support signal trampoline
data        : Data which is passed to assign_identity and the inner loop.
data about character found in CaseFold_11_Table
data about character found in CaseUnfold_11_Table
data are properly aligned
data has alreade been converted to long
data passed to C callback
data phars need only contain a single non-"." to be valid
data_version when pStruct read
database name - used by the update hook
database was opened readonly
database was opened writeonly
date and datetime class - Tadayoshi Funaba 1998-2011  'date' provides two classes Date and DateTime.
date parser's scan function too large for VC6 - VC7.x drop the optimization solves the problem
date( TIMESTRING, MOD, MOD, ...)  Return YYYY-MM-DD
date_core.c: Coded by Tadayoshi Funaba 2010-2014
date_parse.c: Coded by Tadayoshi Funaba 2011,2012
date_strftime.c: based on a public-domain implementation of ANSI C library routine strftime, which is originally written by Arnold Robbins.
date_strptime.c: Coded by Tadayoshi Funaba 2011,2012
datetime( TIMESTRING, MOD, MOD, ...)  Return YYYY-MM-DD HH:MM:SS
day of month, blank padded
day suffix, ignored, nor checked
db:    Pointer to a database connection.
dbFileSize is not used when rolling back a transaction.
dbHintSize  The dbHintSize variable is used to limit the number of calls made to the VFS xFileControl(FCNTL_SIZE_HINT) method.
dbHintSize is set to a copy of the dbSize variable when a write-transaction is opened (at the same time as dbFileSize and dbOrigSize).
dbName is the database name (ex: "main" or "temp") which will receive the imposter.
dbOrigSize is a copy of the dbSize variable at the start of the transaction.
dbPath is a string buffer at least MAXPATHLEN+1 characters in size.
dbSize before the current transaction
dbSize is set based on the size of the database file, which may be  larger than the size of the database (the value stored at offset 28 of the database header by the btree).
dbSize, dbOrigSize, dbFileSize  Variable dbSize is set to the number of pages in the database file.
dbcs/qbcs second byte
dblib do not return more than this length from text/image
dbm_pagfno() and dbm_dirfno() returns different descriptors.
dbm_pagfno() is a macro as DBM_PAGFNO_NOT_AVAILABLE.
dbsize field from frame header
deactivate - common for server/client
deactivate symbol table caching to have these properly destroyed upon stack leaving (especially important for watchpoints)
deal with invalid byte sequence
deallocates all occurrences of a given id
deallocates structure as well
debug function(macro) interface depend on CPDEBUG if it is less than 0, runtime option is in effect.
debug functions ::RubyVM::SDR(), ::RubyVM::NSDR()
debug level: 0: no debug output 1: show node type 2: show node important parameters ...
debug protocol negotiations
debug.c: bcmath library file.
dec  jan  feb  mrt  apr  may  jun  jul  aug  sep  oct  nov  dec
decalre the class entry
decide full GC is needed or not
declare ::RubyVM::InstructionSequence
declare the class handlers
declared in this class, done
declares can only be preceeded by other declares
decode Modified Base64
decode and return the character
decode input character
decode the data from the array
decode the strings first
decompress this file indirectly
dedicated implementation for increased performance: - Make the content type lowercase - Trim descriptive data, stay with the content-type only
def HAVE_NATIVETHREAD
def could be empty, thus don't allocate on the root.
def is not on the root, if allocated at all
default behavior: return first-matching result.
default behaviour is different, as 'is_a' used to be used to test mixed return values and there is no easy way to deprecate this.
default compile-time values
default errobj case, skips dictionary lookup
default is 9 digits (nanosecond).
default location of JIT profiling agent on Android
default no fold in ASCII
default no fold in kinsoku
default size is approx 4 bytes
default sub-type implementation
default tiny heap size: 16KB
default to 'openssl.cnf' if no environment variable is set
default to cached value
default to regular inet (see below)
default transaction is not a registered resource: clean up
default value for FF DBUG
default values by `stty raw`
defaults: season to taste
defer MT decisions to system malloc
define "MUST_ALIGN" if your compiler cannot load/store long integers at arbitrary (e.g. odd) memory locations.
define CAML_NAME_SPACE to ensure all the caml imports are prefixed with 'caml_'
define an overloaded iterator structure
define as global variable instead of using qh
define ini entries on command line
define the base filter class
define wrapper class methods (RubyVM::InstructionSequence)
defined SCANSTAT or STAT4 or ESTIMATED_ROWS
defined here because not used in other files
defined in browscap.c
defined in pyconfig.h
defined in win32/win32.c
defined(HAVE_GETPGID)
defined(HAVE_SSL_GET_SERVER_TMP_KEY)
defined(InterlockedCompareExchange)
defined(LIBXML_HTML_ENABLED)
defined(SQLITE_DEBUG)
defined(SQLITE_ENABLE_ICU)
defined(SQLITE_ENABLE_STAT3_OR_STAT4)
defined(SQLITE_ENABLE_TREE_EXPLAIN)
defined(SQLITE_ENABLE_UPDATE_DELETE_LIMIT)
defined(SQLITE_MUTEX_NOOP)
defined(SQLITE_MUTEX_OMIT)
defined(SQLITE_USE_MALLOC_H)
defined(SQLITE_WIN32_HAS_ANSI)
defined(SQLITE_WIN32_HAS_WIDE)
definitely not in open_basedir..
definition of data structure for compiler
degen_redundant_facet
degen_redundant_neighbors
delay signal handling
delete a specified entry a given key.
delete a specified entry by a given key.
delete all bucket blocks except the first one
delete all data segments except the first one
delete any other parameter registered with this number.
delete descriptor from the hash
delete from source after copying
delete old call_frame from previous stack segment
delete previous stack segment if it becames empty
delete ridge for simplicial horizon
delete self other than main thread from living_threads
delete the collation from the handle
delete the converter if it is the last feed.
delete the converter just in case.
delete the function from the handle
delete this event from the link struct
depending on the source EOL the out str will have all CR/LF duplicated
deprecated, for BC only
deptbl maps a 31-bit integer key to a linked list of 31-bit integer values.
dequeuing will take care of appropriate notification about removal
des submitted this bugfix: gdFree the memory.
describe a value (param, return, type)
deserialize functions
design: Straight line code (consider defining a struct and functions): Parse arguments into variables Determine the number of points Generate the points
design: computes color for facet from its normal prints each ridge of facet
design: see qh_sethalfspace
desired becomes what we consumed this round through
desired fd number in child process
desired position before position or error on tell
dest_reg is the absolute name of the register Useful for reordering instructions in the delay slot.
destination buffer short
destination_buffer should be a string.
destination_byteoffset and destination_bytesize specify the region which the converted result is stored.
destination_byteoffset should be an integer or nil.
destination_byteoffset specifies the start position in destination_buffer in bytes.
destination_bytesize should be an integer or nil.
destination_bytesize specifies maximum number of bytes.
destroy dummy values from before
destroy everything else
destroy old array and add new one
destroy the ast here, it might have been replaced
destroys stack frame, therefore makes core dumps worthless
destruct the function also, then - we have allocated it in get_method
destructor for json_each virtual table
destructor for the manifest hash, frees each file's entry
detach from original tty.
detect if this is a pipe
determine blocking mode
determine if a string represents a soap type, as used in element names
determine if the file is a local file or remote URL
determine if we ignore dir or not
determine if we ignore dir or not later
determine if we need the user's home directory
determine magic associated with soap array type.
determine required length for the buffer (includes NUL terminator)
determine segment size we _really_ need: no more than to include requested_size
determine soap array type.
determine the classname/class entry
determine the key value for the array
determine the statement type
determine the status for the current cert
determine whether a bignum is sparse or not by random sampling
determine whether we have a socket
determining element's name is a bit tricky, due to soap semantics.
determining splitting type in case 5-5-5
did anyone steal our installed handler
didn't find Implicit Result Sets
didn't find boundary, abort
didn't find the boundary
didn't get correct response from EPSV/PASV
didn't get correct response from PASV
didn't get, must be busy
difference of two vectors
different from w_iconv16
different from w_iconv32
different length isn't supported.
different names for subpatterns of the same number are not allowed
digits:: The number of significant digits, as an Integer.
dimension of index result (up to first fancy index)
dimension/stride cache, uses a different allocator and is always a multiple of npy_intp
diouXx conversions ...
dir:: contains the path to the home directory of the user as a String.
directly encode characters
directly encoded characters
directly set the option
directory already mounted
directory exists, or is a subdirectory of an existing file
dirty hack to avoid double free
disable certain classes and functions as requested by php.ini
disable line code conversion
disable multi statements/queries
disable previous keys
disable stepping while eval() in progress
disable this feature because there is no verifier.
disabled functionality
disabling when it's already off
disallows yield from expand_buffer for gzip
discard mime preemble, and goto MIME mode
display html formatted or only show the additional links
display info in phpinfo()
display/log the error if necessary
dissociate from watchpoint to avoid dangling memory watches
distance also computed by main loop below
div in BigDecimal sense
div.c: bcmath library file.
divide different length alternatives in look-behind.
divmod.c: bcmath library file.
dll was already loaded, no need to do it for the second time
dlsym() on UNIX returns void *.
do MIME integrity check
do binsearch with a sorter array
do extra field for perms later
do first-time-only definition of bind/mapping stuff
do fseek() optimisation
do funky checking whether the parsed date was valid date
do funky checking whether the parsed time was valid time
do no MIME integrity check
do not PHAR_GET_16 either on the next line
do not add any magic entries to this directory
do not add/delete without changing size define
do not allocate stmt handle for refcursors, we'll get it from OCIStmtPrepare2()
do not allow unsetting in runtime
do not be tempted to simplify this loop into a for loop, the order of operations is important here if `f` modifies the linked list
do not block on open or for data to become available
do not call qhull functions before qh_new_qhull().
do not close stdout and stderr
do not convert to int, sign distinguishes id from visitid
do not create any child at startup
do not do fseek() optimisation
do not follow symlinks
do not generate HTTP headers
do not generate default content type header
do not inform about in debug
do not insert duplicate lines into history
do not install sigint handlers for remote consoles
do not install watch elements for references
do not log errors for .lck file while in read ony mode on .lck file
do not mark START_ROW
do not output errors as values
do not output the error message to the screen, this helps us to to avoid "information disclosure"
do not process defaultEncoding's here
do not promote WB unprotected objects
do not really flush buffer, but report success to suppress OCI error when flushing not used buffer
do not recompute length here
do not touch TracePoints
do not type-conversion here to prevent from other arguments changing (if exist)
do not update last_major_gc, because full marking is not done.
do not use PHAR_GET_16 on either field of the next line
do not use gdFree here, in case gdFree/alloc is mapped to something else than libc
do not use the reference to itself in json
do nothing to keep BC
do nothing, ignore these characters in the count
do nothing, keep ASCII-8BIT
do nothing, mptr already set
do nothing, the iterator always points to the top element
do regular substitution
do some sanity checking
do some specialized cleanup
do some transliteration
do the FindFirstFile call
do the best we can to inform about the inner exception
do the most common case first
do the stuff needed for OCIDefineByName
do this before tricky precision changes
do utf16 part of the strpos
do we have a direct access
do we have a direct free slot
doNotSpill  This variables control the behavior of cache-spills  (calls made by the pcache module to the pagerStress() routine to write cached data to the file-system in order to free up memory).
doaddsub.c: bcmath library file.
docstring in numpy.add_newdocs.py
does not exist in dest, copy from source
does not happen for round-near
does not include singleton class
does not overlap midpoint, may be used later for qh_areasimplex
doesn't actually do anything in 0.9.8e
doesn't catch all possible sequences
doesn't match pattern
don't allow multi_queries via connect parameter
don't allow number name
don't allow strange buffer overruns due to bogus return
don't assign closure_object since we only reflect the invoke handler method and not the closure definition itself
don't assign closure_object since we only reflect the invoke handler method and not the closure definition itself, even if we have a closure
don't bother doing an extended regex with just a number
don't break the lock if the host id doesn't match
don't break the lock on short read or a version mismatch
don't catch our signals
don't chdir to the script directory
don't clear allowed_clients as it will create an "open for all" security issue
don't colllect constants after any other function call
don't colllect constants after unknown function call
don't create zip files with no entries
don't delete root fiber handle
don't do non-secure authentication
don't do server-based sort
don't evaluate division by zero at compile-time
don't evaluate numeric string error-producing operations at compile-time
don't ever resolve to the color that has been designated as the transparent color
don't forget to reset the various libc globals that we might have changed by an earlier call to tzset().
don't free the data context, it's the same as the control
don't free the string
don't include : before ipv4 unless it's a ::
don't initialize buffer and buffer_length because we use ecalloc
don't initialize is_null and length to 0 because we use ecalloc
don't initialize to 0 : 1.
don't inline funcions with named constants in default arguments
don't inline this, want to debug it easily, will inline when done
don't join to the previous if because it won't work if mysql_stmt_prepare_fails
don't let the child inherit the parent side of the pipe
don't log that function
don't merge other types
don't need C API for a simple print
don't optimise if it should produce a runtime numeric string error
don't parse directories
don't pass up events (internal use)
don't remove NOP, that splits incorrect smart branch
don't report ratio if MINoutside is large
don't return anything if there's nothing to return
don't return on failure, since not closing the default handler could result in memory leaks or other nasties
don't return the generator value as a string unless it doesn't fit in a long
don't run the output handler if it's disabled
don't separate references for __call
don't set FALSE because that's not the way it was before...
don't set U_ILLEGAL_ARGUMENT_ERROR to allow fetching of inner error
don't set is_closure since is the invoke handler, not the closure itself
don't store transfer-encodeing header
don't try to allocate more than possible - mnd_XXalloc expects size_t, and it can have narrower range than uint64_t
don't try to initialize JIT agent the second time
don't try to write the data twice
don't use emit_op() to prevent automatic live-range construction
don't use with PyArray_ITER_GOTO1D because factors are not adjusted
don't want usernames and passwords floating around
don't write anything if current thread has a pending interrupt.
done already - skip here
done if matches up to capacity of buffer
dont allow leading : without another : following
dot '.' changed to _ I immediate form (possibly followed by number of immediate bits).
dot lock style uses the locking context to store the dot lock file path
dot(a,b) Returns the dot product of a and b for arrays of floating point types.
double byte character
double precision float in VAX byte-order
double precision float in native format
double precision float in network byte-order
downscaling using the fixed point implementations are usually much faster than the existing gdImageCopyResampled while having a similar or better quality.
downward stroke proceeds down right side of slit until it hits a boundary or point not between the contour levels
dqd maps Z to ZZ plus Li's test.
draw_bitmap - transfers glyph bitmap to GD image
drop digits after pointed digit
drop redundant information which also shown in address:port part.
drop the last tag if it is close to the fault, otherwise it can cause stack overflow again at the same place.
drop the temporary formatter
dropped if after C else K
dst may be the same as src1 or src2.
dst must be register, TMP_REG1 arg1 must be register, TMP_REG1, imm arg2 must be register, TMP_REG2, imm
dst points to correct array subsection
dst: The destination array.
dtoa for IEEE arithmetic (dmg): convert double to ASCII string.
dtor required to cleanup iterator related data properly
dtors should be called in reverse order
dtype     - If not NULL, overrides the data type of the result.
due to axis-parallel facet
dummy function defined by PS_MOD
dummy zval to pass to transliterator_object_construct
dump class if it is not an alias
dup3 is available since Linux 2.6.27, glibc 2.9.
duplicate the FROM clause as it is needed by both the DELETE/UPDATE tree and the SELECT subtree.
duplicate this into a new chunk of emalloc'd memory, since the engine will efree it
duplicate to make the stream za independent (esp.
duplicated from qh_initqhull_globals
duplicated in qh_initqhull_buffers and qh_clear_ouputflags
during shutdown the symbol table table can be still null
dynamic load with dlopen()
dynamic structure, one per conversion (similar to iconv_t)
e-SSA construction: Pi placement (Pi is actually a Phi with single source and constraint).
e.g. "NOT FOUND" we are not humans so just ignore this
e.g. method(:foo).to_proc.arity
e.g. underlying read(2) returned -1
e.g., can lose _next by deleting and then prepending before _next
e: The value of exponent part.
eCreate defines what to do if the page does not exist.
eCreate value for for xFetch()
eFileLock must be either NO_LOCK or SHARED_LOCK.
eLock  For a real on-disk database, the current lock held on the database file - NO_LOCK, SHARED_LOCK, RESERVED_LOCK or EXCLUSIVE_LOCK.
eMode is always INCRINIT_NORMAL in single-threaded mode
eMode: Parameter eMode may be passed either ONEPASS_OFF (0), ONEPASS_SINGLE, or ONEPASS_MULTI.
eType: Expression node type.
each method can have its own parameters and visibility
each of the last few digits of the b because the a has no
each output bit position
early exit on no space, other errors will also get found during fwrite
eat any spaces on the left
eat up the passed in storage even if it won't be filled in with varargs
edge_walker assumes that the current edge is being drawn CCW around the current zone.
editline may give NULL as input.
effectively, no limit
efficient squaring (2 times faster than normal multiplication) ref: Handbook of Applied Cryptography, Algorithm 14.16 http://www.cacr.math.uwaterloo.ca/hac/about/chap14.pdf
eg: when describing a table that contains an enum column.
either 0 or overflow due to sqrt
either 2 , 3, or 4-d by qh_printbegin
either 2 or 3-d by qh_printbegin
either newly created or already modified
either or both operands are NULL...
either the conch didn't match or we need to create a new one
either when xmlrpc_server_destroy is called, or when request ends.
element contains a quoted string
element contains a wildcard
element doesn't exist
element value is not a string
elif defined(HAVE_FOPENCOOKIE)
else IS_POSIX_REGION()
else fall through for endonly
else for SELECT with OCI_NO_AUTO_COMMIT, leave "rb_on_disconnect" at its previous value.
else if errfacet1, the error was logged to qh.ferr but does not effect the output
else if waserror, the error was logged to qh.ferr but does not effect the output
else if we're a right child page
else no access log are set
else we need to continue via utf16
else we risk a stack overflow upon next run (when clean'ing)
else, another merge fixed the degeneracy and redundancy tested
else, check for single value
else, seed explicitly set to n
emacs_mule.c -  Oniguruma (regular expression library)
emit extra NOP to avoid incorrect SMART_BRANCH in very rare cases
empty and too long paths are invalid
empty length - we've validated start, we can return "" now
empty line marks end of headers
empty loop founded, skip next instruction
empty string behaves like NULL on windows implementation of getservbyname.
empty string means default builtin value to allow "/foo/php.d:" or ":/foo/php.d"
empty variable name, or variable name with a space in it
empty, but position changed
emulate above via a query
emulate blocking connect behavior on EINTR or non-blocking socket
emulate flex constructs
emulate forward moving seeks with reads
emulate fscanf EOF handling
emulate it by fetching and discarding rows
emulate libpq's PQescapeInternal() 9.0 or later
emulate poll(2) using select(2), safely.
emulate the forward seek, by next() calls
enable SSL transport layer
enable data conn encryption
enable extended info output
enabling when it's already on
enc is the encoding of the format.
enc must be str's enc or rb_enc_check(str, str2)
enc1 and enc2 indicate a conversion step as a pair of strings.
enclose a field that contains a delimiter, an enclosure character, or a newline
encode Modified Base64
encode input character
encoded text rotation...
encoding handled by property on doc
encoding is eucJP-ms, so invert to Unicode Private User Area
encoding name resolver
encoding will be ignored if length is specified.
encoding: string or encoding  specifies encoding of the read string.
end  Process.detach(pid)  # Controlling program: Process.kill("USR1", pid) # ...
end  StopIteration raised in the block breaks the loop.
end  The return value is a value from block execution in this case.
end FormatEmailAddress()
end Loop over all index columns
end Olympus specific tags
end additional , gerrit thomson
end argument parsing/validation
end collector dll part.
end loop over pSrcList
end must not be NULL.
end notes: dimension will change in qh_initqhull_globals if qh.PROJECTinput uses malloc() since qh_mem not initialized FIXUP QH11012: qh_readpoints needs rewriting, too long
end of FOREACHneighbor
end of attribute get and set routines
end of control frame pointer
end of duplicate ridge
end of file has been encountered
end of for each new facet at hash
end of if isCanonical
end of loop, go closing
end of temporary locals
end of the 'extern "C"' block
end of the phoned phrase
end of virtual stack.
end of while facet (directed search)
end offset of data to read, 0 for up to EOF
end parse extra config
end the array with NULL in order to parse it
end while Re-merge the eigenvalues/vectors which were deflated at the final merge step.
end:     Byte offset of the byte immediately following the end of the token within the input string.
endif aggregate query
endp: if non-NULL, the address after parsed part is stored.
endwhile If the problem split any number of times, then the eigenvalues will not be properly ordered.
enforce ZEND_MMAP_AHEAD trailing NULLs for flex...
enlarge the arrays for the already active threads
enough for size_t size
ensure 2 pools do not use the same listening address
ensure all symbols are static or pinned down before conversion
ensure doesn't go negative
ensure everything was compile-time evaluated at least once
ensure heartbeat is not lower than FPM_PCTL_MIN_HEARTBEAT
ensure that the link did not die
ensure that we cancel the cursor from a previous fetch
ensure that we don't have spaces or dots in the variable name (not binary safe)
ensure that we free any previous unfetched results
ensure that we restore function_table and class_table In general, they're restored by persistent_compile_file(), but in case the script is aborted abnormally, they may become messed up.
ensure the header is only sent if user_agent is not blank
ensure to close syslog not to interrupt with PHP syslog code
ensure val is a power of 2
ensure we have a clean epoolfds before calling epoll_wait()
ensure we have a clean kevents before calling kevent()
ensure we only return 0 for FILE_DEFAULT
ensure we want: - to log (fastcgi.logging in php.ini) - we are currently dealing with a request - the message is not empty
ensures an exposed class belongs to its own eigenclass
ensures it is OK to read SHM if it's not OK (restart in progress) returns FAILURE if OK returns SUCCESS MUST call accelerator_shm_read_unlock after done lock operations
enter to Ruby world: You can access Ruby values, methods and so on.
entire file is bzip-compressed, uncompress to temporary file
entire file is gzip-compressed, uncompress to temporary file
entire range is only +- 2.6 hours
entire range is only +- 9.2 seconds
entity size is unbounded, we may need more memory
entries changed by initialize
entry and update the cache
entry exists as a file
entry in directory not found
entry is deleted, but has not been flushed to disk yet
enum UConverterCallbackReason
enumerate all the arguments: assume every non-resource argument specifies modifiers for the link ids that follow it
enumerate functions and properties of the object and assign dispatch ids
enumerate implemented interfaces and pick the one as indicated by sink
enums need to be treated like strings
env exists, but it is empty
environment dependent check
eof if we are out of bytes, or if we hit the final boundary
eptr is now past the end of the maximum run
eq_l: all items in left group are equal to S
equal final and static qualifier
equality testing is performed using logical_ands on all the fields.
err check perfomed by dh_instance
err check performed by dsa_instance
err check performed by rsa_instance
err handled by dsa_instance
err handled by rsa_instance
err: (maybe NULL) on failure, an error message line is written to this BIO.
errCode  The Pager.errCode variable is only ever used in PAGER_ERROR state.
errcode set by sqlite3_result_error_code()
errno is not ESRCH or we ran out of tries to kill the locker
errno isn't checked since we allow HUGE_VAL/INF overflow
errobj is a Python object with (string, callable object or None) or NULL
erroffset passed as NULL
error - print best error message possible
error already emitted, but let's emit another more relevant
error check for hints
error consistently about invalid DES fallbacks
error during read occurred
error for below/prev col
error for pixel below cur
error if CREAT and the file exists
error in file descriptor
error is caught by _zip_buffer_eof() call
error is set by writeheaders
error message functions
error messages from qhull code
error or pipe is closed
error or unsupported command
error reported, can not use qh_errexit
error set by comp_impl
error supposedly already shown
error, but message already emitted
error_bytes and readagain_bytes indicate the byte sequences which caused the error.
error_bytes is discarded portion.
errors ignored for sun
escape from ensure block
escape only the variable name.)
escape username and password, if provided
escapedlen returned by PQescapeBytea() accounts for trailing 0
esstsett, thorn, n-tilde, c-cedilla, s-caron, ...
estimate each message at 20 bytes
estimate furthest vertex
estimate number of entries, can't be certain with tar files
estrdup would sometimes allocate more memory and does not return length
estrndup does not return length
etfs cluster size writes are atomic
euc_jp.c -  Onigmo (Oniguruma-mod) (regular expression library)
euc_jp.c -  Oniguruma (regular expression library)
euc_kr.c -  Oniguruma (regular expression library)
euc_tw.c -  Oniguruma (regular expression library)
ev.off_event('BeforeNavigate2') ...
eval() errors do not affect exit_status
evaluate constant expression
evaluate constant expressions
evaluate constant unary ops
even if putenv() failed, clean up and try to delete the variable from the system area.
even though it is the conch
even though lval is declared as unsigned, the value may be negative.
even though setpgrp(0,0) would be preferred.
events have been triggered
events have been triggered, let's fire them
eventually we'll want to enable this in the absence of an explicit dh_param.
every field is 0, FALSE, NULL
every method just calls our standard callback, and it then dispatches to php as necessary
every python object in the array.
everything but private
everything in qh.coplanarfacetset at least searchdist below
evil cast, but we know they are the same
ex. HP-UX, Solaris 10 http://www.gnu.org/software/automake/manual/autoconf/Function-Portability.html
exactly half-way between
exactly one permutation: the zero-length array
examine cache to see if we have a match
examine the available interfaces
example is another ASN1Constructive
except when the .* appears inside capturing parentheses, and there is a subsequent back reference to those parentheses.
exception already thrown
exception are IFD pointers
exception during load
exception from another thread
exception merge point
exception or call failure
exception thrown during comparison
exchange dim and n, e.g., for cdd input format
exchange machine_stack_start between oldfib and newfib
exclude CP936 extension
exclude NUL only if NUL-terminated string
exclude UHC extension area
exclude separator if present
exec "echo *"       # echoes list of files in current directory # never get here  exec "echo", "*"    # echoes an asterisk # never get here
executable phars must contain ".phar" as a valid extension (phar://.pharmy/oops is invalid)
execute arbitrary ftp command
execute only if NOT absolute_path()
execute plain query (with embedded parameters)
execute query with parameters
execute serverside command
execute the statement
execute trap handler, but exception was not raised.
executor is already inactive
execv and execl are async-signal-safe since SUSv4 (POSIX.1-2008, XPG7)
exit label for rboxpoints, defined by setjmp(), called by qh_errexit_rbox()
expand for data + sentinel.
expand ignore-case in char class.
expand repeated string.
expand tilde from the passwd file.
expand to 1 byte per pixel
expanded region will be filled with Qnil.
expat char data handler
expat end of element handler
expat specific errors
expat start of element handler
expat will not expand internal entities if default handler is present otherwise it will expand and pass them to cdata handler
expect a single value
expect tail call optimization
expected a stream resource
expected to be optimized by compiler
expecting a charset name
expecting a chunk of whitespaces
expecting a delimiter
expecting a encoding scheme specifier
expecting a non-encoded word
expecting an encoded portion
expecting any character
expects a language specifier.
expects interface to be contained in ce's interface list already
expensive in high-d, could rebuild
explicit resource number
exponent has 7 bits, but 8 is the right value in b2d
exponent of real numbers
exponent part(including '+/-').
exponential format (e.g. 1.2345e+13)
export the PHP object using our COM wrapper
exptoadd: number of digits needed to compensate negative nf
ext now points to the path suffix
ext/mysql or ext/mysqli are responsible to clean, whatever they have to.
ext/phar has to load phar's metadata into memory
extend modrm r/m, sib base, or opcode reg
extend the sign bit if the comparison is to be signed
extended fcall begin handler
extended fcall end handler
extended statement handler
extension function list
extension not found: not allowed
extension-wide shutdown function
extension-wide startup function
extra bit of validation for instances when same params are bound more than once
extra fields in the "structure record" record the state of ongoing incremental merge operations.
extra_limit limits the relax length
extra_op cannot be broadcast to the indexing result
extract API version, lowest nibble currently unused
extract key from cert, depending on public_key param
extract public key from X509 cert
extract the number of entries
extracts the 8 least significant bits.
f is numeric, s is not
f* FUNC/simplestring_free NAME simplestring_free SYNOPSIS void simplestring_free(simplestring* string) FUNCTION frees contents of a string, if any.
f* REQUEST/XMLRPC_RequestGetData NAME XMLRPC_RequestGetData SYNOPSIS XMLRPC_VALUE XMLRPC_RequestGetData(XMLRPC_REQUEST request) FUNCTION Returns data associated with request, if any.
f* REQUEST/XMLRPC_RequestGetError NAME XMLRPC_RequestGetError SYNOPSIS XMLRPC_VALUE XMLRPC_RequestGetError(XMLRPC_REQUEST request) FUNCTION Returns error data associated with request, if any.
f* REQUEST/XMLRPC_RequestNew NAME XMLRPC_RequestNew SYNOPSIS XMLRPC_REQUEST XMLRPC_RequestNew() FUNCTION Creates a new XMLRPC_Request data struct INPUTS none SEE ALSO XMLRPC_RequestFree () SOURCE
f* SERIALIZE/XMLRPC_VALUE_FromXML NAME XMLRPC_VALUE_FromXML SYNOPSIS XMLRPC_VALUE XMLRPC_VALUE_FromXML(const char* in_buf, int le FUNCTION Retrieve XMLRPC_VALUE from XML buffer.
f* SERIALIZE/XMLRPC_VALUE_ToXML NAME XMLRPC_VALUE_ToXML SYNOPSIS char* XMLRPC_VALUE_ToXML(XMLRPC_VALUE val) FUNCTION encode XMLRPC_VALUE into XML buffer.
f* UTILITY/XMLRPC_Free NAME XMLRPC_Free SYNOPSIS void XMLRPC_Free(void* mem) FUNCTION frees a block of memory allocated by xmlrpc.
f* UTILITY/XMLRPC_GetVersionString NAME XMLRPC_GetVersionString SYNOPSIS const char* XMLRPC_GetVersionString() FUNCTION returns library version string INPUTS  RESULT const char* NOTES SOURCE
f* VALUE/XMLRPC_CreateValueBase64 NAME XMLRPC_CreateValueBase64 SYNOPSIS XMLRPC_VALUE XMLRPC_CreateValueBase64(const char* id, const char* s, int len) FUNCTION Create base64 value.
f* VALUE/XMLRPC_CreateValueDouble NAME XMLRPC_CreateValueDouble SYNOPSIS XMLRPC_VALUE XMLRPC_CreateValueDouble(const char* id, double d) FUNCTION Create double (floating point) value.
f* VALUE/XMLRPC_CreateValueEmpty NAME XMLRPC_CreateValueEmpty SYNOPSIS XMLRPC_VALUE XMLRPC_CreateValueEmpty () FUNCTION Create an XML value to be used/modified elsewhere.
f* VALUE/XMLRPC_DupValueNew NAME XMLRPC_DupValueNew SYNOPSIS XMLRPC_VALUE XMLRPC_DupValueNew(XMLRPC_VALUE value) FUNCTION Make a duplicate (non reference) of an XMLRPC_VALUE with newly allocated mem.
f* VALUE/XMLRPC_GetGlobalServer NAME XMLRPC_GetGlobalServer SYNOPSIS XMLRPC_SERVER XMLRPC_GetGlobalServer() FUNCTION Allocates a global (process-wide) server, or returns pointer if pre-existing.
f* VALUE/XMLRPC_GetValueBoolean NAME XMLRPC_GetValueBoolean SYNOPSIS int XMLRPC_GetValueBoolean(XMLRPC_VALUE value) FUNCTION retrieve boolean value.
f* VALUE/XMLRPC_GetValueInt NAME XMLRPC_GetValueInt SYNOPSIS int XMLRPC_GetValueInt(XMLRPC_VALUE value) FUNCTION retrieve integer value.
f* VALUE/XMLRPC_GetValueTypeEasy NAME XMLRPC_GetValueTypeEasy SYNOPSIS XMLRPC_VALUE_TYPE_EASY XMLRPC_GetValueTypeEasy(XMLRPC_VALUE value) FUNCTION determine data type of the XMLRPC_VALUE.
f* VALUE/XMLRPC_ServerCreate NAME XMLRPC_ServerCreate SYNOPSIS XMLRPC_SERVER XMLRPC_ServerCreate() FUNCTION Allocate/Init XMLRPC Server Resources.
f* VALUE/XMLRPC_SetValueBase64 NAME XMLRPC_SetValueBase64 SYNOPSIS void XMLRPC_SetValueBase64(XMLRPC_VALUE value, const char* s, int len) FUNCTION Set base64 value.
f* VALUE/XMLRPC_SetValueDouble NAME XMLRPC_SetValueDouble SYNOPSIS void XMLRPC_SetValueDouble(XMLRPC_VALUE value, double val) FUNCTION Set double (floating point) value.
f* VECTOR/XMLRPC_AddValuesToVector NAME XMLRPC_AddValuesToVector SYNOPSIS XMLRPC_AddValuesToVector ( target, val1, val2, val3, val(n), 0 ) XMLRPC_AddValuesToVector( XMLRPC_VALUE, ...
f* VECTOR/XMLRPC_CreateVector NAME XMLRPC_CreateVector SYNOPSIS XMLRPC_VALUE XMLRPC_CreateVector(const char* id, XMLRPC_VECTOR_TYPE type) FUNCTION Create a new vector and optionally set an id.
f* VECTOR/XMLRPC_SetIsVector NAME XMLRPC_SetIsVector SYNOPSIS int XMLRPC_SetIsVector(XMLRPC_VALUE value, XMLRPC_VECTOR_TYPE type) FUNCTION Set the XMLRPC_VALUE to be a vector (list) type.
f* VECTOR/XMLRPC_VectorNext NAME XMLRPC_VectorNext SYNOPSIS XMLRPC_VALUE XMLRPC_VectorNext(XMLRPC_VALUE value) FUNCTION Iterate vector to next item in list.
f* xml_element/xml_elem_free_non_recurse NAME xml_elem_free_non_recurse SYNOPSIS void xml_elem_free_non_recurse(xml_element* root) FUNCTION free a single xml element.
f* xml_element/xml_elem_new NAME xml_elem_new SYNOPSIS xml_element* xml_elem_new() FUNCTION allocates and initializes a new xml_element INPUTS none RESULT xml_element* or NULL.
f.gets # won't cause IOError
f2/f3 could introduce media
f: rounding mode nf: digit location to round from the decimal point.
facet.vertices, .ridges, .neighbors
facetlist or facets may overwrite
facility: type of program logging the message
fail if the input is truncated (only one char in last group)
fail on bad characters or if any data follows padding
failed : try next recursion
failed to convert string to date
failed to decompress the file, will try reading the rest of the file
failed to generate bind struct
failed to open/create the lock directory
failure in get_current_data
failure means that they don't get a stream to play with
failure, but notice already emitted
fake VALUE, do not mark/sweep
fall back on IDispatch direct
fall back on regular file access
fall back to call lstat(2)
fall through -- adjust type
fall through if O_CLOEXEC does not work:
fall through to fix_cloexec
fallback to _SC_NPROCESSORS_ONLN
fallback to funcall (e.g. method_missing)
fallback to read_property
falls back to UTF-8 if an unknown encoding name is given
fallthrough -- Non-serializable object
false MIME premble, restart from mime_buffer
false that CHARSET_PARTIAL_SUPPORT(charset)
family is specified as an integer to specify the protocol family such as Socket::PF_INET.
family, socktype and protocol are hint for preferred protocol.
family, socktype and protocol are integers which is used for arguments of socket(2).
fancy indexing has to be used.
fast exit if simple call
fast_calls don't have to be destroyed
faster version - use this if you don't need to treat negative offset
fatal error within this thread, need to stop whole script
fatal errors are real errors and cannot be made exceptions
fault_string   application specific error string.
fci.size is used to check if it is valid
fdatasync() on HFS+ doesn't yet flush the file size if it changed correctly so currently we default to the macro that redefines fdatasync to fsync
fdopen()ed in append mode
fds for pipes in parent/child
feed it to the parser
fetch a blob into a fetch buffer
fetch all on demand, this seems easiest if we've been here before bail out
fetch blob contents into hash
fetch default locales list
fetch the GUID and add the version numbers
fetch the relevant data
fetch the rest into a T_INLINE_HTML
fetch to be able to get the number of tuples later, but don't advance the cursor pointer
fetch zend object from zval "object" into "to"
fetches the requested resource for the current thread
ffs() is defined by Single Unix Specification.
ffs.c - find first set bit
fftpack.c : A set of FFT routines in C.
field name is too long
field size expanded by dprec
field size expanded by sign, etc
field-name can be a string or a 2-tuple data-type can now be a list, string, or 2-tuple (string, metadata dictionary)
fields with 0 are unchanged
figure out chunk sizes -- input nchunk is square root of maximum allowed zones per chunk -- start points for single level case are wrong, so don't try it
figure out docroot SCRIPT_FILENAME minus SCRIPT_NAME
figure out how big a chunk to map to be able to view the part that we need
figure out how many UTF-8 characters are in zName
figure out the GMT offset
figure out the result set format, if any
figure out what we're doing
figure out where the context is coming from exactly
file desc to assoc this lock with
file error after info
file exists, but is either corrupt or not a phar archive
file extension must contain "phar"
file handle is in text mode
file handle opened O_APPEND
file handle opened O_NOINHERIT
file handle refers to a pipe
file handle refers to device
file is on command line, but not in -f opt
filename equals "" or ":memory:"
filenames are empty for stdin
fileno, if Unix descriptor, else -1
fill buffer if needed
fill epoll struct the same way we did in fpm_event_epoll_add()
fill in the basic info
fill in the remote server info.
fill level in output buffer
fill pollfd with event informations
fill pollfd with the same informations as fpm_event_devpoll_add
fill source lines by reading dwarf
fill struct timeval with timeout
fill symbol name and addr from .symtab
fill the child arg vector
fill the ephemeral table
fill the output sqlda with information about the prepared query
fill the param buffer
fill up the WBMP structure
fillInCell() only called for leaves
filled in if error occurs and not NULL.
fills the required data structure with information about the events
filter out the response code
filter resources are cleaned up by the stream destructor, keeping a reference to the stream resource here would prevent it from being destroyed properly
filter_args is the filter_flags
filtered streams can only be cast as stdio, and only when fopencookie is present
filterparams can either be a scalar value to indicate compression level (shortcut method) Or can be a hash containing one or more of 'window', 'memory', and/or 'level' members.
final start point marked by ALL_DONE marker
finally, check if we are on a boundary
finally, close the temp file, rename the original phar, move the temp to the old phar, unlink the old phar, and reload it into memory
finally, delete the element
finally, find index by bisection
find a top level directory we need to create
find a user-set define
find address and figure out binding type
find antialised color
find decimal point, if expected
find first accessed one
find invalid patterns in look-behind.
find leaked huge blocks and free them
find method breaks here
find nearest watchpoint
find out how many rows were affected
find out the size of the file (verifying it exists)
find out what kind of statement was prepared
find out which event occurred
find the corresponding event
find the end point of the string to return
find the entry in the array
find the first node LF and last node LL on the current level LVL
find the full real path
find the largest array index, and assert that all keys are integers
find the length of that component
find the next available segment index at level iLevel+1.
find the number of actually passed arguments
find the number of extensions
find the original easy curl handle
find the phar in our trusty global hash indexed by alias (host of phar://blah.phar/file.whatever)
find the table and ensure it's an array
find total length of blob's data
find type of descriptor
find type of named file
find value for entry in hash, -1 if not found
findCellPastPtr() does the same except it skips past the initial 4-byte child pointer found on interior pages, if there is one.
finds the index of element having max.
finish incremental GC
finish method should be used last.
finished if we found the boundary
fire triggered events
fire up the host and get the domain object
first 2 bits are reserved
first 256 bits for first character, and second 256 bits for the next
first arg is 1 because we want to identify valid named entities even if we are only encoding the basic ones
first call without setting to initialize the timer
first call without setting which to initialize the timer
first care about all methods to be flattened into the class
first character cannot be ' or -, unless explicitly allowed by the user
first check for a single field name
first check for alias in first segment
first check if we have any arrays at all
first code of JIS-8 pair
first copy each file's uncompressed contents to a temporary file and set per-file flags
first digit of major HTTP version
first digit of minor HTTP version
first element is the function name
first fetched OID is out of subtree, fallback to GET query
first get the unmangeld name if necessary, then check whether the property is already there
first letter of a non-encoded word
first letter of an encoded chunk
first look for argnum
first of two- or four-byte char or second of two-byte char
first open readonly so it won't be created if not present
first page on free list trunk
first pass ends when all potential start points visited
first recursion, view equal destination
first section exactly as php_fgetss
first set up the structure to return
first time around -- clear initial gl_offs items
first try the slot which is supposed to be free
first try to open an existing file
first try to open/create the file 2.
first type is the return value
first we add the date and time in ISO format
first we check the hash for the hashed_details key.
first, deal with the crazy/stupid fault format
first, iterate over the manifest and close all PHAR_TMP entry fp handles, this prevents unnecessary unfreed stream resources
first, try interpreting the address as a numeric address
first, we check if the handler is defined
first, we have to get the size of all the elements in the hash
firstweekday is 0 if starting in Sunday, non-zero if in Monday
fix any -1 dimensions and check new-dimensions against old size
fix jumps to point to new array
fix the dimensions and strides of the return-array
fixed by qh_mark_dupridges
fixed size pattern node only
fixup stuff set in motion in oci_bind_output_cb
flag ASCII delimiters
flag can be true, false, or an integer bit-ORed following flags.
flag for #new and #open
flag for #new and #open.
flag for #new and #open: open database as a reader
flag for #new and #open: open database as a writer
flag for full add operation so ldap_mod_add can be put back into oper, gerrit THomson
flag optional arrays not allocated
flag to remember which row we are on
flag values passed to the btree insert
flag_leftjustify            TRUE if a '-' is present or if the field width was negative.
flag_long                   TRUE if the letter 'l' (ell) prefixed the conversion character.
flag_longlong               TRUE if the letter 'll' (ell ell) prefixed the conversion character.
flags are identical, now the value needs to be checked
flags contains all information about the conflict resolution algorithms specified in the ON DELETE, ON UPDATE and ON INSERT clauses.
flags controlling this file
flags field of new pages before shuffling
flags is 4 bytes, we store just 1
flags match what we are looking for
flags passed through to sqlite3_vfs.xOpen()
flags: Mask of FTS5_SEGITER_XXX values.
flex: -1 (or any negative value) is equivalent to flex: 0 1 auto Margins cannot be specified as 'auto'.
flip back into the zone that exists
flist is an array of mbfl_identify_filter instances
floating point precision
floating point string
flock() locking is like dot-file locking in that the various fine-grain locking levels supported by SQLite are collapsed into a single exclusive lock.
floor it just in case
flush and reset filter
flush only when SAPI was started.
flush overflow and terminate region
flush the file handle, so any remaining data is synched to disk
flush the shift-out sequences
flush to commit data written to the fopencookie FILE*
fold and output nothing
fold continuous RECURSIVEs (needed in glob_helper)
follow branch according to bits in idx until having found an impossible branch
follow branch according to bits in idx until the last lower branch before the impossible branch
for "big boy" drivers, we need to allocate memory to fetch the results into, so lets do that now
for 'd', bestdist skips upperDelaunay facets
for AFP simulated shared lock
for BG(mmap_file) (not strictly required)
for FD_CLOSEXEC to work
for OCIBindByName (real "oci" names + short "php" names
for OCIFetchStatement
for OCINewDescriptor (real "oci" names + short "php" names
for OCIWriteTemporaryLob
for ONIG_MAX_ERROR_MESSAGE_LEN
for PDO_HANDLE_STMT_ERR()
for REGISTER_INI_ENTRIES()
for Ruby 1.9.1 compatibility
for SHOW/DESCRIBE and others the column/field count is not available before execute
for SSLSocket#hostname
for UNREGISTER_INI_ENTRIES()
for __FreeBSD_version
for __halt_compiler lexing.
for all oci_fetch_*()
for ancillary registry
for array_item_asarray
for atexit() function to check if restore is needed
for auto-named local lock file, just check the host ID and we'll use the local lock file path that's already in there
for autoloading thread, keep the defined value to autoloading storage
for backward compatibility
for backwards compatibility only
for bound methods, `me' should be rb_callable_method_entry_t *
for buffer expansion block break or exception
for calendar calculation purposes.
for compatibility with CGI (do not chdir to script directory)
for compatibility with CGI (do not generate HTTP headers)
for complex's internal
for convert_shape_to_string
for ctype node hash table
for debug print within C code
for downwards compatibility
for each argument, create and sort list with pointers to the hash buckets
for each dimension for each point collect maximum and minimum point collect maximum of maximums and minimum of minimums determine qh.NEARzero for Gaussian Elimination
for each list element
for each modification
for each of the flags determine whether to ignore, warn, raise error, or call Python function.
for each point with facet assignment
for encdb.h Set base encoding for encodings which are not replicas but not in their own files.
for encdb.h Set encoding dummy.
for exceptional circumstances
for exponent conversion
for ext/socket/lib/socket.rb use only:
for extended types it also includes elsize and alignment
for feasible point in "cdd format" in 3-d: 3 1 coordinates comments begin n 4 real/integer ...
for getpid(), unlink()
for heb_number_to_chars
for import/export functions
for isleap() in iso8601wknum.
for links to relative location, prepend cwd of the entry
for locating error, Znumridges should be duplicated
for makenew_nonsimplicial
for mysqli_fetch_assoc
for mysqli_stmt_set_attr
for now fetch only one row
for now interned strings are supported only for non-ZTS build
for now we are ignoring the last ni+1 values
for npy_mul_with_overflow_intp
for offset of macro if needed
for older versions of libxml2, allow correct detection of charset in documents with a BOM:
for open curve detection only
for our return value, we are interested in the number of bytes consumed from the first filter in the chain
for performance reasons the code is duplicated, so that the if (include_new_line) will not need to be done for every single line in the file.
for php_format_date()
for php_memnstr, used by php_stream_get_record()
for php_raw_url_decode()
for php_set_sock_blocking() :-(
for pointers to histogram cells
for prelude.rb use only:
for prepended Module, then start from cover class
for printing hyperplane intersections
for private and protected we need to unmangle the names
for qh_setdelaunay() notes: when called by qh_setdelaunay, low/high may not match actual data design: compute scale and shift factors apply to last coordinate of each point
for read(), and write()
for resulting hash we'll assign new hash keys rather then reordering
for safety - avoid loop
for single byte encodings
for some reason, using qh ROTATErandom and qh_RANDOMseed does not repeat the run.
for some reasons phar needs to be flushed even if there is no write going on
for stack depth measure
for streaming zlib processing
for systems that need to override reading of environment variables
for testing qh_eachvoronoi_all
for the "what" utility
for the args parentheses
for the backward compatibility
for the case marshal_load is overridden
for the modification hashtable...
for the nodes on bottom level of the tree, solve their subproblems by DLASDQ.
for the nodes on bottom level of the tree, solve their subproblems by SLASDQ.
for the sake of BC to old damaged code
for these types, an empty string can be handled like a NULL value
for this perpouse we allocate additional PHP_IMAP_ADDRESS_SIZE_BUF bytes by default this buffer is 10 bytes long
for tracing with qh_printpoint
for universal binary of NEXTSTEP and MacOS X
for zip comments that are strings
for() loop iterator variable
force OCI8 to update cached size
force correct order on enclosing/enclosed stream destruction (only from resource destructor as in when reverse destroying the resource list)
force create static IDs
force it to be a string and check if it refers to a file
force lock on db file or lck file or disable locking
force new CREATE statements into vacuum_db
force out a line while stepping so the user knows what is happening
force override (no zend_signals) to prevent crashes due to signal recursion in SIGSEGV/SIGBUS handlers
force stderr even on non tty
force stringify if DBBIGINT won't fit in zend_long
force to run finalizer
force unpacking during iteration:
force values-only output
forced from command line options
forces fill_input_buffer on first read
foreach (chunk that ends in a quote)
fork again, to avoid blocking because both pipes filled
fork doesn't copy other threads.
fork succeed, child process
fork succeed, parent process
form feed U+0C allowed
form feed U+0C allowed, but not U+0D
form is optional, defaults to FORM_C
form-url-encoded data differs from URI encoding in a way that it uses '+' as character for space, see RFC 1866 section 8.2.1 http://ftp.ics.uci.edu/pub/ietf/html/rfc1866.txt
format and language are NULLs, so format is "DD-MON-YY" and language is the default language of the session
forms the dot product of a vector.
forms the dot product of two vectors, conjugating the first vector.
forms the dot product of two vectors.
forward declarations *
forward declarations for static (non public, non api) funcs
found an open connection.
found next one, continue
found one, register it for use
found something and it's not a parent's private
found something, but it's not a connection, delete it
found the 1st tag - initialize the return array
fpm has not started yet, let use stdout instead of fcgi
fpm has started, let use fcgi instead of stdout
fpstatus is the ufunc_formatted hardware status errmask is the handling mask specified by the user.
fractional second digits.
free all cached chunks
free allocated error strings
free cached manifests
free dptr which contains zeros
free error string received during previous iteration (if any)
free formatted prompt
free list keys/values
free lists for small sizes
free new true color buffer (y is not allocated, have failed)
free old palette buffer (y is sy)
free previously allocated area
free rb_cont_t or rb_fiber_t
free request-bound globals
free search program after finished
free some cached chunks to keep average count
free sort program after finished
free temporary bind buffer
free the allocated space for passing field values to the db and back
free the buffer storing the error
free the bvalue struct
free the describe handle (Bug #44113)
free the query if trans handle was released
free the system buffer allocated by FormatMessage
free virtual CWD memory
free'd in destroy_server_data()
free_pages - current number of free pages in this chunk  free_tail  - number of continuous free pages at the end of chunk  free_map   - bitset (a bit for each page).
free_slots may not equal to free_objects
freedtoa(s) must be used to free values s returned by dtoa when MULTIPLE_THREADS is #defined.
frees all resources allocated for all threads except current
frees all resources allocated for the current thread
frees an interpreter context.
frees uresult even on error
freewbmp -------- gdFrees up memory occupied by a WBMP structure
from GLOBALS (PG(http_globals))
from IEEE754 double precision
from _findfirst/_findnext
from here on, only map the possible characters in the ASCII range.
from path and restrict it to be under dest directory
from postgresql/src/include/catalog/pg_type.h
from section 3.6.1 of UTR #36: "In a reported illegal byte sequence, do not include any non-initial byte that encodes a valid character or is a leading byte for a valid sequence."
from this point further, shared memory is supposed to be OK
from vdbeSortSubtaskMain()
from winbase.h of the mingw-w64 runtime package.
fromdata - data for frombuffer wrapped - contig to contig transfer function being wrapped wrappeddata - data for wrapped init_dest - 1 means to memset the dest buffer to 0 before calling wrapped.
fromstr always returns 0 for basic dtypes s points to the end of the parsed string if an error occurs s is not changed
fs_encoding should be ascii compatible
fsmagic - magic based on filesystem info - directory, special files, etc.
fstat() info for database file
fstring must not be tainted, at least
fsync'ing is something completely different.
ftp dirstreams only need to support read and close operations, They can't be rewound because the underlying ftp stream can't be rewound.
ftp proxy is read-only
fts3 query parse context
fts3ExprIterate() callback to load the 'global' elements of a FTS3_MATCHINFO_HITS matchinfo array.
fts3ExprIterate() callback used to collect the "global" matchinfo stats for a single query.
fts3ExprIterate() callback used to collect the "local" part of the FTS3_MATCHINFO_HITS array.
fts3_unicode2.c (functions generated by parsing unicode text files)
fts5WriteInit() should have initialized the buffers to (most likely) the maximum space required.
fts5YYACTIONTYPE       is the data type used for "action codes" - numbers that indicate what to do in response to the next token.
fts5YYCODETYPE         is the data type used to store the integer codes that represent terminal and non-terminal symbols.
fts5YYERRORSYMBOL is not defined
fts5YYFALLBACK         If defined, this indicates that one or more tokens (also known as: "terminal symbols") have fall-back values which should be used if the original symbol would not parse.
fts5YYMINORTYPE        is the data type used for all minor types.
fts5YYNOCODE           is a number of type fts5YYCODETYPE that is not used for any terminal or nonterminal symbol.
fts5YYNOERRORRECOVERY
fts5YYNSTATE           the combined number of states.
fts5YYSTACKDEPTH       is the maximum depth of the parser's stack.
fts5_config.c contains contains code to parse the arguments passed to the CREATE VIRTUAL TABLE statement.
full bitset of atomics from max sector size and smaller
func is the "level" of cpuid.
funcname    : The name of the reduction function, for error messages.
funcname : The name of the reduction operation, for the purpose of better quality error messages.
function    : Q_AtHead  purpose     : tests if cursor is at head of queue  parameters  : 'queue' pointer.
function    : Q_AtTail  purpose     : boolean test if cursor at tail of queue  parameters  : 'queue' pointer to test.
function    : Q_BSearch  purpose     : binary search of queue index for node containing key  parameters  : queue pointer 'q', data pointer of key 'key', Comp comparison function.
function    : Q_DelCur  purpose     : Delete the current queue element as pointed to by the cursor.
function    : Q_Destroy  purpose     : Free all queue resources  parameters  : queue pointer  returns     : null.
function    : Q_Find  purpose     : Linear search of queue for match with key in *data  parameters  : queue pointer q, data pointer with data containing key comparison function here called Comp.
function    : Q_Get  purpose     : get the pointer to the data at the cursor location  parameters  : queue pointer  returns     : data element pointer  comments    :
function    : Q_Head  purpose     : position queue cursor to first element (head) of queue.
function    : Q_Init  purpose     : Initialise queue object and pointers.
function    : Q_Insert  purpose     : Insert an element into an indexed queue  parameters  : queue pointer 'q', data pointer 'data', Comp comparison function.
function    : Q_IsEmpty  purpose     : test if queue has nothing in it.
function    : Q_Next  purpose     : Move to the next element in the queue without popping  parameters  : queue pointer.
function    : Q_PopHead  purpose     : remove and return the top element at the head of the queue.
function    : Q_PopTail  purpose     : remove element from tail of queue and return data.
function    : Q_Previous  purpose     : Opposite of Q_Next.
function    : Q_PushHead  purpose     : put a data pointer at the head of the queue  parameters  : 'queue' pointer, void pointer to the data.
function    : Q_Put  purpose     : replace pointer to data with new pointer to data.
function    : Q_Seek  purpose     : use index to locate data according to key in 'data'  parameters  : queue pointer 'q', data pointer 'data', Comp comparison function.
function    : Q_Size  purpose     : return the number of elements in the queue  parameters  : queue pointer  returns     : number of elements  comments    :
function    : Q_Sort  purpose     : sort the queue and allow index style access.
function    : Q_Tail  purpose     : locate cursor at tail of queue.
function arguments array
function as defined by PS_MOD
function implementation
function names with ::
function table hash keys
function to free pUser
function was declared deprecated(strcpy, localtime, etc.)
functions from array.c
functions from assert.c
functions from browscap.c
functions from crypt.c
functions from file.c
functions from filestat.c
functions from fsock.c
functions from ftok.c
functions from mail.c
functions from metaphone.c
functions from output.c
functions from pack.c
functions from syslog.c
functions from type.c
functions from versioning.c
further blocks will not be relevant...
further checks, we could have .......
furthest/horizon already matched
gamma.c -- Gamma function
garbage objects will be collected soon.
gb18030.c -  Oniguruma (regular expression library)
gbk.c -  Oniguruma (regular expression library)
gc_possible_root() will be called to add the nodes to possible roots.
gc_rest can reduce malloc_increase
gcc doesn't provide "asm" keyword if -ansi and the various -std options are given.
gd 2.0.11: gdSeek returns TRUE on success, not 0.
gd 2.0.2: watch out for negative indexes (thanks to David Marwood).
gd 2.02: whoops, was - b (thanks to David Marwood)
gd 2.0: true color images can use freetype too
gd 2.0: we now support truecolor.
gd 2.0: we support this rather thoroughly now.
gd has only 7 bits of alpha channel resolution, and 127 is transparent, 0 opaque.
gd interface to freetype library
gd is intentionally imperfect and doesn't spend a lot of time fussing with such things.
gdAffineexpansion: Find the affine's expansion factor.
gdAntiAliased passed as color: use the much faster, much cheaper and equally attractive gdImageAALine implementation.
gdDPExtractData is the exception to this: it will return the pointer to the internal data, and reset the internal storage.
gdIOCtx JPEG data sources and sinks, T.
gdImageCreateFromWBMPCtx ------------------------ Create a gdImage from a WBMP file input from an gdIOCtx
gdImageGetInterpolationMethod() is only available as of GD 2.1.1
gdImageStringFT -  render a utf8 string onto a gd image
gdMalloc'd storage for the above
gdTcl_UtfToUniChar is borrowed from Tcl ...
gd_gd2.c  Implements the I/O and support for the GD2 format.
gd_getin -------- Wrapper around gdGetC for use with readwbmp
gd_jpeg.c: Read and write JPEG (JFIF) format image files using the gd graphics library (http://www.boutell.com/gd/).
gd_putout --------- Wrapper around gdPutC for use with writewbmp
gd_security.c  Implements buffer overflow check routines.
gdbm 1.9.1 silently ignore it.
gdbm version 1.8 specific
gdcache.c  Caches of pointers to user structs in which the least-recently-used element is replaced in the event of a cache miss after the cache has reached a given size.
gdkanji.c (Kanji code converter)
gegrnam_r() on MacOS X doesn't set errno if buffer size is insufficient
gen fault from xmlrpc style fault codes notice that we get a new node, which must be freed herein.
generally not thread safe, but it *is* thread safe under win32
generate XMLRPC_REQUEST from raw xml
generate a message for worst case: cannot make room after SPLTMAX splits
generate an XMLRPC_REQUEST from the raw xml input
generate crc on compressed file
generate highlighted HTML from source
generate raw xml from xmlrpc data
generate the SELECT expression tree.
generate unique inode number for alias/filename, so no phars will conflict
generator at the root had stopped
genrand_int31 in mt19937ar.c performs a right shift
genrand_int32() and the helper functions, init_genrand() and init_by_array(), were declared static, wrapped in Python calling/return code.
gepwnam_r() on MacOS X doesn't set errno if buffer size is insufficient
get # of online cores
get 4 bytes of the instruction
get CLSID from OLE server name
get ID from property name
get IDispatch interface
get IDispatch interface from IUnknown interface
get OCI_ATTR_SERVER_STATUS
get REF of the TDO for the type
get __pioinfo addr with _isatty
get a byte of the instruction
get a lock on the array itself
get a pointer to the haystack taking into account the offset
get all status information
get character set form
get collection element handle
get color values of neighbouring pixels
get current working directory and prepend it to the path
get dtype which can be positional
get error text into buffer and escape for html if necessary
get field index if the field parameter was a string
get filename w/o .exe extension
get first parameter handle
get lines of text, or CRLF_CRLF
get marker byte, swallowing possible padding
get memory map allocation granularity
get name of the column
get number of columns
get number of ridges to be printed
get offset, then skip over it
get output encoding and check MIME charset name
get perdir ini entries
get pixel location in gd buffer
get pixel value and index into the cache
get pixel value and index into the histogram
get precision of the column
get raw directory listing
get response from server and update upsert values
get rid of Wunused-but-set-variable and Wuninitialized
get rid of a bug of x64 VC++
get rid of bugs in math.h of mingw
get rid of console reading bug
get rid of console writing bug
get rid of converting twice
get rid of decimal places
get rid of old values
get rid of the context.
get rid of the trailing newline
get scale of the column
get serialized variable from shared memory
get sign of significand
get size of the column
get something useful out of it
get sure it won't exceed max_children
get system ini entries
get the TDO (only header)
get the collection type code of the attribute
get the converter output, and return it
get the dataptr from its current coordinates for simple iterator
get the default value for this key and compare
get the fd NB: Most other code will NOT use the PHP_STREAM_CAST_INTERNAL flag when casting.
get the field offset and dtype
get the font (via font cache)
get the host ID via gethostuuid(), pHostID must point to PROXY_HOSTIDLEN  bytes of writable memory.
get the id from a specified key or create new shared memory
get the last dot of the last component
get the last path component
get the length of the true salt
get the public keys we are using to seal this data
get the session from the control connection so we can re-use it
get the significant edge points affecting the pixel
get two bytes of the instruction
get type handle by name
get week number of last week of last year
get week number, Monday as first day of the week
get writeable and aligned
get/set curve GFp, GF2m
get2byteAligned(), unlike get2byte(), requires that its argument point to a two-byte aligned address.
get2bytea() is only used for accessing the cell addresses in a btree header.
get_iterator has to be assigned *after* implementing the inferface
get_iterator implementation
getc_func is not called if already interrupted.
getchar and putchar will be replaced during inclusion
getenv("SQLITE_TMPDIR")
getenv("USERPROFILE")
getfield returns a view we can write to
getnext - get the next key in the page, and if done with the page, try the next page in sequence
getput_arg_fast returned true.
getrusage() is used with RUSAGE_SELF to obtain the time only for the calling process (excluding the time for child processes).
gets rid of qh_MERGEridge
gettimeofday is always available on platforms supported by Ruby.
gid:: contains the group's numeric ID as an integer.
gid:: contains the integer group ID (gid) of the user's primary group.
give it a chance to die
give it a reference to me
give them back the address of the start offset they requested
given a zval which is either a stream or a context, return the underlying stream_context.
giveup write barrier (traditional way)
glibc before version 2.1 uses EINVAL instead of ENAMETOOLONG
glibc posix_openpt() in GNU/Linux calls open("/dev/ptmx", flags) internally.
glibc refused to add ioprio_set, sigh.
glob(3) -- a superset of the one defined in POSIX 1003.2.
global data structure
global pattern matching
global representing whether the BistroJavaCollector can't be loaded
glue together f_p fragments
go ahead and serialize first...
go back to fetch "A" byte
go through the lists and look for common values
go through the sorted array and delete duplicates from the copy
goes to tmp_shared_globals.shared_free
got 0x8e,  first char
got 0x8e,  third char
got it, set the type and return ok
got the key - return it
got the lock, unlock it
goto label requires stmt
government, the Government shall have only "Restricted Rights" in the software and related documentation as defined in the Federal Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).
grab a uint32_t from a possibly unaligned address, and return it in the native host order.
grab an exclusive lock
grab element attributes up front to save redundant while loops
gregorian or julian month
group name must start with a non-digit
grow (or shrink) dynamic pointer
grow buffer if needed
grow buffer to hold this bucket TODO: this can fail for persistent streams
grow the buffer if required TODO: this can fail for persistent streams
growing the file does not occur until the write succeeds
guarantee we have at least 40 bytes to write.
guaranteed to return NULL if it fails
guard against freeing invalid types
guard against putting value of unknown type into vector
guess using a year before 2038.
h points to the first
h_exp may increment to 15, at greatest, in which case the result overflows to a signed inf.
hack to fix use of initialized value
hackish cache in php_stat needs to be cleared
half-open (IMAP connect but no select)
han2zen() was derived from han2zen() written by Ken Lunde.
handle a buffer containing a compiled file.
handle a compiled file.
handle an mmaped file.
handle any left overs of files without new lines
handle enclosure delimited field
handle for the server
handle generic PDO-level attributes
handle mixed syntax declaration or nested namespaces
handle modules / extensions
handle old style win smtp sending
handle re-open of snmp session
handle setting attr first
handle situations where user turns the engine off
handle the case where we are in the buffer
handle this manually, because it isn't involved in folding
handle, but not use it
handled by normal-POP
handled by qh_initthresholds
handler for array apply
handler for situations where there is no source file, ex. php -r
handles misaligned data too
handy char pointer (short term usage)
handy integer (short term usage)
hankaku kana to zenkaku hirangana
hankaku kana to zenkaku hirangana and glue voiced sound mark
hankaku kana to zenkaku kana
hankaku kana to zenkaku katakana
hankaku kana to zenkaku katakana and glue voiced sound mark
hard case: move all data down onto the deleted pair, shift offsets onto deleted offsets, and adjust them.
has UTS#46 API (introduced in ICU 4.6)
has been removed between the two calls
has_privilege() is used to choose vfork() or fork().
hash as used in CA directories to lookup cert by subject name
hash sqlstate to error messages
hash values are always pred-calculated here
have already seen the -
have to duplicate SG(request_info).path_translated to be able to log errrors php_fopen_primary_script seems to delete SG(request_info).path_translated on failure
header + klenlen + dlenlen + klen + dlen
header `titles' can be lower case, or any case combination, according to the various RFC's.
header transfar encoding
header_offset unused in tar
headers lists plain text headers to exclude from the signed portion of the message, and should include to, from and subject as a minimum
headers_lc is only created if we've a header at all
heap for zombies and ghosts
help aliases executes a canned routine
helper function to open an internal file's fp just-in-time
here accelerator is active but we do not hold SHM lock.
here but this would make things only more complicated.
here is the minimum structure required to tell where we are in the mesh sized data array
here so pickle support works seamlessly and unpickled array can be set and reset writeable -- could be abused --
here we get if not all are equal
here we have always intent(in) or intent(inout)
here we have always intent(in) or intent(inout) or intent(inplace)
here we have always intent(in) or intent(inplace)
here we need to compress the data and then write it, first comes the compressed header
here, we know we use ONIGENC_CASE_UP_SPECIAL, and the position is right
hex character table "0123456789ABCDEF"
hex string (high nibble first)
hex string (low nibble first)
hex string, under UNIX strtod() messes it up
hh:mm:60 tends to cause this condition.
hh_server doesn't need this at the moment.
hidden object cannot be overridden
hidden variable from id_internal()
hide from ObjectSpace
higher bits are infinity zeros
highlight stuff coming back from zendlex()
histogram cell c0/c1/c2.
hold a zval reference to the stream (holding a php_stream* directly could also be done, but this makes socket_export_stream a bit simpler)
hold on to self in next call
holder for the second property
hope nobody uses this
hopefully async-signal-safe
horizon facet tested in qh_findhorizon
horizontal segment of scan line y
host might contain binary characters
host names are case-insensitive.
hostname as alphabetical name
hostname as numeric name
hour, 24-hour clock, blank pad
how far we've computed the CRC
how many dimensions we are indirecting to get into this element
how many output handlers the stack contains
how much room do we need to store the field
however, the above was not enough: the FD may already be captured and in the middle of a write while we are running, so wait for that to finish:
http authentication options
http://developer.apple.com/library/mac/#releasenotes/Darwin/SymbolVariantsRelNotes/_index.html  When fd_set is not big enough to hold big file descriptors, it should be allocated dynamically.
http://developer.apple.com/technotes/tn/tn1150table.html
http://en.wikipedia.org/wiki/8.3_filename This check can be skipped for directory components that have file extensions longer than 3 characters, or total lengths longer than 12 characters.
http://en.wikipedia.org/wiki/Pochhammer_symbol
http://gcc.gnu.org/onlinedocs/gcc/Alternate-Keywords.html
http://orange.kame.net/dev/cvsweb.cgi/kame/IMPLEMENTATION
http://pubs.opengroup.org/onlinepubs/009695399/functions/pthread_cond_timedwait.html Let's hide it from arch generic code.
http://www.mibsoftware.com Mib Software does not warrant this software any differently than the University of California, Berkeley as described above.
http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1381.pdf
http://www.opengroup.org/onlinepubs/7908799/xsh/langinfo.h.html  Please extend it as needed and suggest improvements to the author.
http://www.openssl.org/support/faq.html#PROG1
http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-DocCrElNS NAMESPACE_ERR: Raised if 1.
http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-DocCrElNS NAMESPACE_ERR: Raised if 3.
http://xmlrpc-epi.sourceforge.net/specs/rfc.fault_codes.php.
https://tools.ietf.org/html/rfc2822#section-2.2
https://tools.ietf.org/html/rfc2822#section-2.2.1
https://tools.ietf.org/html/rfc2822#section-2.2.3
https://tools.ietf.org/html/rfc2822#section-3.6
hwtime.h contains inline assembler code for implementing  high-performance timing routines.
hwtime.h contains inline assembler code for implementing high-performance timing routines.
i is the position of .
i know this is kinda ugly, but i'm trying to avoid extra cycles in the main execution loop
i.e.  Init() for each record: Write() Rewind() Rowkey()/Compare() Next()  Close()  Algorithm:  Records passed to the sorter via calls to Write() are initially held  unsorted in main memory.
i.e. "mysql" in the FTS3 query "sqlite -mysql".
i.e. Check session data if new sid exists already.
i.e. It deletes all of Set-Cookie headers.
i.e. PS(id), PS(session_status), PS(mod) and any other PS() values.
i.e. closing read_io and/or write_io doesn't cause an error.
i.e. decrement the relevant FK counter for each row of the current table with non-NULL keys.
i.e. execution context has been read from stdin - back it up
i.e. if a full-text index node is 900 bytes in size, then a buffer of 920 bytes is allocated for it.
i.e. if deleting the document with docid pRowid would mean the FTS3 table were empty.
i.e. if the character is a lower-case ASCII character.
i.e. if the following were coded:  OP_Destroy 4 0 ...
i.e. if the parser sees:  ATTACH DATABASE abc AS def  it treats the two expressions as literal strings 'abc' and 'def' instead of looking for columns of the same name.
i.e. if there are no active savepoints and no other statement-transactions open, iStatement is 1.
i.e. if you are called via exdll::myFunction file.dat poop.dat calling popstring() the first time would give you file.dat, and the second time would give you poop.dat.
i.e. put everything back the way we found it.
i.e. the database has been reorganized so that only the first *pnTrunc pages are in use.
i.e. the result can be different to "JST".
i.e. when the *pp1 token appears before the *pp2 token, but not more than nToken slots before it.
i.e., skipBp - verticesB
i.e.: myfilter.foo.bar will always call into myfilter.foo.* never seeing myfilter.* TODO: Allow failed userfilter creations to continue scanning through the list
i386-specific debugger interface also amd64 extensions
iAbsLevel is an absolute level that may be assumed to exist within the database.
iAuxArg is always set if to a positive value if ONEPASS is possible
iColumn matches a term of the ORDER BY clause
iCur is the index of a cursor open on the pTab table and pointing to the entry that needs indexing.
iDataCur is already pointing to the row to delete
iDataCur is an open cursor on the btree that is the canonical data store for the table.
iDataCur is the cursor for the main table when inserting or updating a rowid table, or the cursor for the PRIMARY KEY index when operating on a WITHOUT ROWID table.
iFirstRowid, iLastRowid: These variables are only used for FTS5_PLAN_MATCH cursors.
iIdxCur is always set if to a positive value if ONEPASS is possible
iIdxCur should be used to compute the appropriate cursor depending on which index is used.
iLeafOffset: Byte offset within the current leaf that is the first byte of the  position list data (one byte passed the position-list size field).
iLeafPgno: Current leaf page number within segment.
iLevel value for root of the tree
iLikeRepCntr actually stores 2x the counter register number.
iLimit and iOffset  are the integer memory register numbers for counters used to compute  the limit and offset.
iLimit and iOffset should have been preset to appropriate default values (zero) prior to calling this routine.
iMaster is 0 if there is not master chunk.
iMaster is the index of the master chunk.
iOff: Set to the current offset within record pData.
iPrevTrunk is initially 1.
iReg is a temp register that needs to be freed
iRowidOff: Offset of last rowid written to data area.
iRowidOffset/nRowidOffset/aRowidOffset: These are used if the FTS5_SEGITER_REVERSE flag is set.
iSpecial: If this is a 'special' query (refer to function fts5SpecialMatch()),  then this variable contains the result of the query.
iSrcLine is the source code line (from the __LINE__ macro) that generated the VDBE instruction.
iStart is zero based.
iTab is a sorting index that holds previously seen combinations of the N values.
iTable is the page number of the root of the table.
iTermIdx: Index of current term on iTermLeafPgno.
iTermLeafOffset may be equal to szLeaf if the term is the last thing on the page - i.e. the first rowid is on the following page.
iTermLeafPgno, iTermLeafOffset: Leaf page number containing the last term read from the segment.
ib_result and ib_query point at each other to handle release of statement handle properly
iconv supports errno.
icu default locale - locale has no effect on this iterator
id that may be used to recursive triggers
id_case   one of XMLRPC_CASE RESULT const char*  pointer to the newly allocated id string, or NULL SEE ALSO XMLRPC_SetValueID () XMLRPC_GetValueID () XMLRPC_VALUE XMLRPC_CASE SOURCE
ideas from comp.graphics discussions.
identity mapping of code points to unicode
idle--, active++, request++
idxNum is 1 if the constraint is found, 3 if the constraint and zRoot are found, and 0 otherwise.
idx_affinity is the affinity of an indexed column.
if "from" position is negative, count start position from the end of the string
if "length" position is negative, set it to the length needed to stop that many chars from the end of the string
if (a) the open flags are not O_RDWR, (b) the conch isn't there, and (c) the file system is read-only, then enable no-locking access.
if +len+ is negative, +str+ should be NUL-terminated.
if -r is on the command line more than once just quit
if AI_CANONNAME and if reverse lookup fail, return ai anyway to pacify calling application.
if BN_mod_exp return -1, then DSA_generate_key succeed for failed key so we need to double check that public key is created
if CA is the same letter as CB regardless of case.
if DOCUMENT_ROOT is set, this is easy, otherwise, we have to play the game of hide and seek to figure out what SCRIPT_NAME should be
if JSON_OBJECT_AS_ARRAY is set
if NULL, Qnil is returned when +str+ is not valid as an Integer.
if ONLYmax, furthest may not be outside
if PHP_FILEINFO_UNCOMPRESS
if SQLITE_OMIT_LOAD_EXTENSION is defined:
if SystemTimeToFileTime() fails, it returns zero.
if a fourth parameter is handed over, it is the charset identifier (but is only used in Oracle 9i+)
if a match is found it is set to 1
if a password is required, send it
if a precision is specified, the 0 flag will be ignored.'' -- ANSI X3J11
if a stream is created without encryption, check to see if SSL method parameter is specified and use proper encrypyion method based on constants defined in soap.c
if allow_self_signed is set, make sure that verification succeeds
if already sorted free memory for tag array
if any open call is a locking call: check if we already habe a locking call open that should block this call the problem is some systems would allow read during write
if arithmetic always rounds the same, can test against centrum radius instead
if array is shared, then it is likely it participate in push/shift pattern
if autoresume is wanted ask for remote size
if autoresume is wanted seek to end
if break from joggle, prevents normal output
if buff is 0 then set to non-buffered
if buffer already read in, use it
if buffered, pre-fetch all the data
if cgi, or fastcgi and not found in fcgi env check the regular environment
if cgi, or fastcgi and not found in fcgi env check the regular environment this leaks, but it's only cgi anyway, we'll fix it for 5.0
if cgi.fix_pathinfo is set to "1" and script cannot be found (404) the sapi_globals.request_info.path_translated is set to NULL
if cond return tailcall end
if content-type is not yet set, set it and activate the converter
if decimal point is present
if defined SQLITE_OMIT_AUTOVACUUM
if defined(SQLITE_HAVE_ISNAN)
if encoding is US-ASCII, upgrade to UTF-8
if entry needs expading ifd cache and entry is at end of current ifd cache.
if eocd values are 0xffff, we have to use eocd64 values.
if exception raised in event callback, then you receive cfp consistency error.
if exponent is present
if exponent, scale significand as appropriate and store in result.
if fg is specified by a negative color idx, then don't antialias
if first character, init BB corner values
if for some reason PDO borks something
if fpm has not started yet, use std env
if fpm has started, use fcgi env
if func is 0, then clear all funcs
if getitem fails (unusual) treat this as a single index
if he does not there is no way to determine the libmysql does not allow us to allocate 0 bytes for a buffer so we try 1
if heap_pages has unused pages, then assign them to increment
if instantiating a remote object, either directly, or via a moniker, fill in the relevant info
if ischeckmax, dist can't be positive
if it doesn't fit in a long send it as a string.
if it doesn't, open a new pgsql link, add it to the resource list, and add a pointer to it with hashed_details as the key.
if it exists, it should point us to the right offset where the actual pgsql link sits.
if it is 0, no modifieres has been changed
if it is a column containing "long" data, perform late binding now
if it is a space, check if it is at the line boundary, copy and insert a break, or just keep track of it
if it is already byref, "move" it into the vargs array, otherwise make vargs a reference to this value
if it is already set, skip this
if it is compatible increase the size of the dimension at end (or at the front for NPY_ARRAY_F_CONTIGUOUS)
if it is inside the docroot, we scan the tree up to the docroot to find more user.ini, if not we only scan the current path.
if it is there, and if the haystack is ascii, we are all done
if it isn't there the we are done
if it starts with file:// interpreted as path to key file 4.
if it starts with file:// then it will be interpreted as the path to that cert .
if it's a builtin type, then use the typenumber
if it's a child, stop here without creating the next event this event is reserved to the master process
if it's a response, we append "Response".
if it's a shadow - go to access it's private
if it's allowed, then the autoloader will be called if the class does not exist.
if it's an input vector element and it's enclosed by quotes, we can remove them.
if it's been killed because of dynamic process management don't restart it automaticaly
if it's changed into a warning
if just checking, say yes we can be a FILE*, but don't actually create it yet
if last arg is hash object
if left is 0 then there is nothing more to send, but if the last packet was exactly with the size MYSQLND_MAX_PACKET_SIZE we need to send additional packet, which has empty payload.
if len is passed, set the length of extension to it.
if main entry matches, print it...
if many merges need to recompute centrum
if match exact then push, else jump.
if match exact then push, else none.
if memRootPage is not negative, it means that the index is newly created.
if multiple encodings specified, detect automagically
if name is an absolute filename then test directly
if nearzero, diagonal still ok
if needle was ascii too, we are all done, otherwise we need to try using Unicode to see what we get
if new_type set resets some bits from old_type set We have completely recalculate types of some dependent SSA variables (this may occurs mainly because of incremental inter-precudure type inference)
if new_value is string "NULL" and field has default value, remove element to use default value
if next endpoint not between levels, need to exit to zone_crosser
if no argument given, print newline.
if no children, then must be a scalar value.
if no encoding is returned, assume ascii8bit.
if no script_encoding specified, just leave alone
if non zero missing dirs will be created
if non-existent field
if non-null, this is the path to a temporary file that is to be deleted when the stream is closed
if none available it's simply forgotton
if not already most-recently-used
if not and the object implements Countable we call its count() method
if not given, then "consecutive offsets" will be assumed and placed in the dictionary.
if not long we're operating on lzval
if not power of two it will be accessed bytewise
if not valid serialized data, it is a regular string
if not, and no other alternatives, life is bleak
if not, it's certainly not an HTTP over fcgi request
if not, must zero pagbuf first.
if opened for append, we need to revise our idea of the initial file position
if our parent node, by definition a vector, is not an array, then our element name must be our key identifier.
if pLimit is null, pOffset will always be null as well.
if param_type is PDO_PARAM_ZVAL the driver has to provide correct data
if parts of the stream can't be written, purge it completely
if path is still NULL, use "." for path.
if phar_get_or_create_entry_data returns a sub-directory, we have to free it
if php dies (no chance to run RSHUTDOWN) during execution it has no chance to DEALLOCATE the prepared statements it has created.
if pipe's buffer is full, writing to pipe will block until some data is read from pipe.
if requested, return an unmolested (magic removed) copy of the value
if save path is an empty string, determine the temporary dir
if securityPrefs is set to NONE, we don't have to do any checks, but otherwise...
if signature matched, no need to check CRC32 for each file
if so, check to see if it is a directory and fail if so if not, check to see if its dirname() exists (i.e. "/path/to") and is a directory succeed if we are creating the file, otherwise fail.
if socket was created from a stream, give the stream a chance to take care of the operation itself, thereby allowing it to update its internal state
if subject is an array
if subject is not an array
if that failed, assumed that the GUID is actually a CLSID and attempt to get the library via an instance of that class
if that fails, and this is a lock file (not-conch), try creating the parent directories and then try again.
if that fails, try to open the file read-only otherwise return BUSY (if lock file) or CANTOPEN for the conch file
if the *-wal file does not exist, set the output parameter to non-zero (to tell SQLite that it does exist) anyway.
if the alias is stored we enforce it (implicit overrides explicit)
if the binary is strip-ed, this may effect
if the caller asked for a persistent stream but the wrapper did not return one, force an error here
if the caller put us in the middle of a grapheme, we can't detect it in all cases since we can't back up.
if the conch has data compare the contents
if the conch isn't writable and doesn't match, we can't take it
if the content length is zero.
if the current word puts us over the linelength, copy back up until the last space, insert a break, and move up the laststart
if the curve is closing on a hole, need to make a downslit
if the dll wasn't loaded - exit.
if the file doesn't exist, try to extract PATH_INFO out of it by stat'ing back through the '/' this fixes url's like /info.php/test
if the given filename is an EGD socket, don't write anything back to it
if the global prefix is not set
if the host id matches and the lock path already exists in the conch we'll try to use the path there, if we can't open that path, we'll  retry with a new auto-generated path
if the needle was ascii too, we are done
if the offset of the resulting string exceeds the length, then restore the state
if the opened path is set, copy it out
if the optional eps is not given, it will be chosen automatically.
if the original value is 0 (disabled), then allow setting/unsetting at will.
if the param is NULL, then we assume that they wanted to bind a lob locator into it from the query
if the pointers match then only subtract the length of the path
if the provided output argument is already an array, the wrapping function is None (which means no wrapping will be done --- not even PyArray_Return).
if the provided output argument is already an ndarray, the prepping function is None (which means no prepping will be done --- not even PyArray_Return).
if the query isn't supported by the protocol, fallback to emulation
if the script we've got is stored in SHM
if the socket is in non-blocking mode and there's no data to read, don't output any error, as this is a normal situation, and not an error
if the specified path is the root of a drive and the drive is empty,
if the status code did not change, we do not want to change the status line, and no need to change the code
if the stream doesn't directly support stat-ing, return with failure.
if the stream is a stdio stream let's give it a chance to respond first, to avoid doubling up the layers of stdio with an fopencookie
if the stream was wrapped, allow the wrapper to stat it
if the string is all ASCII up to size+1 - or str_len whichever is first - then we are done.
if the type is however not long, then we will do a goto in the next switch.
if the user has configured who they are, send a From: line
if the user has configured who they are, send that as the password
if the user stream was registered as local and we are in include context, we add allow_url_include restrictions to allow_url_fopen ones
if the value's type is known...
if the value's type is not known...
if the wp prefix is not set
if there are different types
if there is at least on idle child, it will handle the connection, stop here
if there is data in the buffer, it's not EOF
if there is no corresponding entry, return Qnil.
if there is no corresponding entry, return Qundef.
if there is no path name after the file, do not bother
if there is the corresponding entry, return a value of the entry.
if there was an error in the fetch then don't cache
if there wasn't a hash collision, and this doesn't
if there's no ob active, ob has been stopped
if there's no sa_len, assume the ifr_addr field is a sockaddr
if this code fails to work, check main/streams/streams.c, _php_stream_stat_path
if this curve starts on a non-boundary i-edge, we need to determine the level
if this is not first point, clear start mark for this edge
if this is not the first point on the curve, and we're not done, and this is an i-edge, check several things
if this is the first point is not between the levels must do the job of the zone_crosser and mark the first cut here, so that it will be marked again by zone_crosser as it closes
if this is the very first start point, we want to remove the START_ROW marker placed by data_init
if this was byref, update the zval
if turned on - check the compiled script ADLER32 checksum
if unit is infinity, i*unit+beg is NaN
if unknown status, assume SEGV
if val is true, str is the "Y" string, otherwise the "N" string
if we already have a lock, it is exclusive.
if we are a left child page
if we are applying case conversions on column names, do so now
if we are beyond our limit, then the loop is done
if we are cutting, and we've accumulated enough characters, and we haven't see a space for this line, copy and insert a break.
if we are here, this is real bad news.
if we are making a request, we want to use the methodname as is.
if we are not initializing, build the sqlite_master entry
if we are releasing the stream only (and preserving the underlying handle), we need to do things a little differently.
if we are the left most child page
if we assign referenced variable, we should separate it
if we couldn't destruct cleanly, mark all objects as destructed anyway
if we did not manage to read the seed file, we should not write a low-entropy seed file back
if we do not have enough room, we have to split.
if we don't have a user defined error handler
if we don't stop an array/iterator yield from, the exception will only reach the generator after the values were all iterated over
if we failed to get the lock then someone else must have it
if we filled their buffer, return
if we get here, we can be sure that we have enough bytes to copy safely
if we get here, we don't have a numeric string
if we have __call and method which is not part of the class function table is called, we cal __call handler.
if we have __set and property that is not part of the properties array is set, we call __set handler.
if we have called include in the frame above - this is the file we have included.
if we just compared std.properties, don't do it again
if we make it to this point, we must provide a value for the parameter
if we need to replace, delete the key/data pair first.
if we neither have an explicit nor an implicit alias, we use the filename
if we read any data...
if we still have memory then format the origin
if we stripped out all the '/' and still didn't find a valid path...
if we succeeded in taking the reserved lock, unlock it to restore the original state
if we talk to an old ftpd-ssl
if we want to call 16 bit regs AX,BX,CX,...
if we're already in a string, see if this is the terminating close-quote.
if we're not in a string, then we're finished with this element
if we're setting ourselves to ourselves...
if we're started on command line, check to see if we are being started as an 'external' fastcgi server by accepting a bindpath parameter.
if will be normalized
if you need method entry with method cache (normal case), use rb_method_entry() simply.
if you pass a listen port, we will read and write on listen port
if you prepare and then execute passing an array of params keyed by names, then this will trigger, and we don't want that
if you want to remove following line,  you should check in parse and compile time.
if you want to remove following line, you should check in parse and compile time.
if zero, Fixnum 0 is returned in that case.
if(complicated condition)
ifa_flags is usually unsigned int.
ifdef SQLITE_ENABLE_STAT4
ifdef SQLITE_NO_SYNC elif HAVE_FULLFSYNC
ifdef ZIP_OPSYS_DEFAULT
ifndef SQLITE_AMALGAMATION
ifndef SQLITE_DISABLE_FTS3_UNICODE
ifndef SQLITE_ENABLE_FTS4_UNICODE61
ifndef SQLITE_OMIT_AUTOVACUUM
ifndef SQLITE_OMIT_FOREIGN_KEY
ifndef SQLITE_OMIT_INCRBLOB
ifndef SQLITE_OMIT_SHARED_CACHE
ifndef SQLITE_OMIT_TRIGGER
ifndef SQLITE_OMIT_WAL
ifndef _SQLITE3RTREE_H_
ignore 'n', 't' or other stuff
ignore FILE_ATTRIBUTE_DIRECTORY as unreliable for reparse points
ignore RECV_* opcodes
ignore SIGPIPE in standalone mode so that sockets created via fsockopen() don't kill PHP if the remote site closes it.
ignore ZEND_EXT_STMT and ZEND_TICKS
ignore ZERO WIDTH NO-BREAK SPACE
ignore an exception raised.
ignore autogenerated return (well, not too precise with finally branches, but that's okay)
ignore autoresume if autoseek is switched off
ignore dir since path contains a drive letter and a root slash
ignore dir since path drive is different from dir drive
ignore dir since path has UNC root
ignore dir since path has root slash and dir doesn't have drive or UNC root
ignore errors here, just return failure
ignore errors in d2i_ECPKParameters_bio()
ignore fiber context switch because destination fiber is same as current fiber
ignore given single newline
ignore handle parameter in procedural interface
ignore if the module included already in superclasses
ignore if the new value equals the old one
ignore incomplete MIME.
ignore leading spaces in the variable name
ignore max-check if 0
ignore negative precision
ignore partial string matches
ignore query string if sent by Apache (RewriteRule)
ignore sequences of consonants with same soundex
ignore the rest of arguments
ignore upper_bound if it is 0.0
ignores dir since we are expanding home
ii) call OCIAttrGet for each probe definition that uses client_id.
iid that we "implement" for event sinking
illegal character or end of buffer
illegal character output function for conv-filter
im, points, num_points, col
im1 must be True Color
imap_thread, stealing this from header cclient -rjs3
imm constraints when stmt started
immediate action required
impact perf a bit, but not that much.
implementation dependent counters
implementation is based on https://bugs.ruby-lang.org/issues/6962 by funny_falcon
implementation of OpenSSL::SSL::SSLSocket#session is in lib/openssl/ssl.rb
implicit result set statement handle
import inherited sockets
important tuning parms (hah)
in MSVC.NET these are available but only for __cplusplus and not _MSC_EXTENSIONS
in case it's a tables-only JPEG stream
in case of 8th bit is on
in case of Kanji shifted
in case of Roman characters
in case of SSL_ERROR_WANT_READ/WRITE, do not retry in non-blocking mode
in case of already established
in case of not established yet
in case qh_RANDOMint always returns the same value
in case read fails to read anything
in case value is never init'd, we don't dtor to think it is a string or something
in case we need to retry the :auto: lock file -  we should never get here except via the 'continue' call.
in case we need to try again for an :auto: named lock file
in case, qh_printvdiagram2 called by user
in current lexical scope
in hash, if not, try to find a spot for it
in libqhull.h) all memory freed notes: This can be called any number of times.
in most cases bz2 offers at least 2:1 compression, so we use that as our base
in non-OOP version, accept both a transliterator and a string
in non-debug mode we have no problem with 0-length files
in order to avoid signed/unsigned problems
in order to restore at exit
in soap, types may be specified in either element name -or- with xsi:type attribute.
in the beginning of the dialog
in the page header at offset 7.
in this case no array_key_compare is needed
in this case the other parameters weren't filled, just validate and possibly copy arr itself ...
in this case we don't want to pop anything of the argument-stack
in this case, at least 12 digit precision
in this case, don't set upper_threshold
in this function we have to jump through some loops because we're getting the translated table from data structures that are optimized for random access, not traversal
in this situation, we are passing the brig_in brigade into the stream read buffer
in-equality testing is performed using logical_ors on all the fields.
in-memory cache entry is expired
in-memory cache overflow
in1:        Left hand side operand in2:        Right hand side operand out:        Either NULL, or an array into which the output should be placed.
in: a NULL terminated string like "abc,def,ghi"  returns: an emalloced buffer or NULL on failure.
in_free will let streams code skip destructing - big HACK, but STREAMS suck big time regarding persistent streams.
include case folding data generated from the official UnicodeData.txt file
include test DISTround
include_filename always points to the last filename of the last last called-function.
includes handler to validate object state when retrieving methods
includes qh.DISTround
includes vector types.
includes zlib.h and setjmp.h
including parenthesis
including the last byte which causes invalid
incompatible nullability
inconsistent NEWLINE options
incorporated from D.J.Bernstein's cdb-0.75 (http://cr.yp.to/cdb.html)
incrAggDepth(..) is a helper function - a callback for the tree walker.
incrAggFunctionDepth(pExpr,n) is the main routine.
increase multiplier using buffer count to converge quickly
increment (unrotated) pen position
increment entry count
increment pen position
increment recursion depth gauge
increment the cell count
increment the result length by how much we've added to the string
increment, check for overflow and undo increment if so.
incremental initialization of empty Buckets
index entries counter
index into core_dim_ixs
index of current array for PL/SQL or row index for SQL
index of leftmost source unsigned char containing data (1 to 8 bits).
index of next token to be returned
indexes on table zTbl
indicate that there are no more items
indicate that we have element 0
indicate that we want to copy from the current position to the end of the LOB
indicates pending connection
inet_ntop should be used instead of inet_ntoa
inflater.close  See also Zlib::Inflate.new
info about users requires an action first
info: Number of the invalid parameter.
information about each column of an SQL table is held in an instance of this structure.
information to decide on correct contour direction in saddle zones is stored in a mesh sized array.
inheritance ensures the class has necessary userland methods
inheritance ensures the class has the necessary userland methods
inherited members are overridden by members inserted by traits
init empty string in case we don't find any char data
init handler: allocate read buffer and open file
init kqueue and stuff
init the filter class ancestor
init to max poss dist
init value containers
init.c: bcmath library file.
init_key is the array for initializing keys
init_working_dir sets the current working directory to the app root.
initial distance values
initial qh facet_list
initial resource fetch
initial values for increments
initial:: The initial value, as an Integer, a Float, a Rational, a BigDecimal, or a String.
initialise MIME type to none
initialization part - the functions have not been loaded yet.
initialize a few bytes in the case the next function fails
initialize a phar_archive_data's read-only fp for existing phar data
initialize by an array with array-length
initialize by an array with array-length init_key is the array for initializing keys key_length is its length
initialize encoding data
initialize file static vars
initialize filter and collector data
initialize font library and font cache on first call
initialize global variables
initialize internal state
initialize local variables
initialize mark object array, hash
initialize older_index and num_newer: O(n log n)
initialize oldfd and newfd: O(n)
initialize site for this curve
initialize static members of internal class
initialize stream wrappers registry (this uses configuration parameters from php.ini)
initialize the arrays of arrays
initialize the counters for the arrays
initialize the defaults
initialize the stack.
initialize the winsock interface and insure that it's cleaned up at exit.
initialize to use OLE
initialize vararg mechanism
initialize vp to zero.
initialize_result_set_rest
initialized first call
initialized for postponed job
initialized to suppress warning
initializing something before the DLL even is available to be called.
initializing the special array for the return values
inittls allocates a thread-local storage slot for g.
inner loop with constant size memcpy arguments this allows the compiler to replace function calls while still handling the alignment requirements of the platform.
input / output options *
input modes: no break, no CR to NL, no parity check, no strip char, no start/stop output control.
input we are tokenizing
input: an XMLRPC_VALUE representing a fault struct in xml-rpc style.
insert a NULL value into the column
insert an instruction before prev
insert an instruction with some operands (1, 2, 3, 5) before prev
insert into TABLE (IDLIST) select insert into TABLE (IDLIST) default values  The IDLIST following the table name is always optional.
insert into hash, return error on existence or memory issues
insert it before the current one by hacking the internals of cobject to replace the function pointer --- can't use CObject API because destructor is set.
insert serialized variable into shared memory
insert the key, and update the page file.
inside the message body.
inspired from ext/standard/info.c
instance methods that may be overridden
instance methods that need not usually be overridden
instance methods that should be overridden
instance not created by PDO object
instr(haystack,needle) finds the first occurrence of needle in haystack and returns the number of previous characters plus 1, or 0 if needle does not occur within haystack.
instruction information
insurance to avoid type crash
int options(unsigned char *cp)  return values: 0: success -1: ArgumentError
int tailcall_optimization
int trace_instruction
int2num.c: bcmath library file.
int8_t DidInitRun() // returns true int8_t DidMainRun() // returns true int32_t FromPkg() // returns 1024
integer and fancy indexes are transposed together
integer part(may include '+/-').
integer value of exponent
integers do not store objects in indices
intent(cache), optional, intent(hide)
intentional fall-through
intentionally made to be at least NPY_LONG
intentionally using str_find here, in case the hash value is set, but the string val is changed later
interchanges two vectors.
interfaces aren't really implemented, so we create a new table
intern some strings used in ufuncs
internal error: code overflow
internal error: overran compiling workspace
internal error: previously-checked referenced subpattern not found
internal error: unexpected repeat
internal error: unknown opcode in find_fixedlength()
internal use: general memo
internal use: mixed-in module holder
internal use: syntax tree node
internal use: wrapped C pointers
internal xml-rpc error"
interned empty string
internetwork: UDP, TCP, etc.
interpret next item as a typesize
interpret next item as shape (if it's a tuple) and reset the type to NPY_VOID with a new fields attribute.
interpreted as the data from the cert/key file and interpreted in same way as openssl_get_privatekey() 5.
intersect modules, unregister modules loaded "too much", announce not yet registered modules (phpdbg_notice)
invalid UTF-16 string (should not occur)
invalid UTF-32 string (should not occur)
invalid byte shall not happen but
invalid character for encoding"
invalid character in count
invalid character in salt
invalid escape sequence in character class
invalid eucjpms character
invalid euckr character
invalid fd, unless during file system support introspection, in which  it actually means what it says
invalid form: don't change *sp
invalid method parameters"
invalid multibyte header
invalid range in character class
invalid search type, but no need to complain here
invalid ujis character
invalid utf8 character
invalidate cached format types
invalidate phar cache
invalidate the buffer contents
invert IBM extended characters to others
invert NEC-selected IBM extended characters to IBM extended characters
inverted is set to 1 if computed correlate(ap2, ap1), 0 otherwise
invoke the constructor
io.c  Implements the simple I/O 'helper' routines.
io_dp.c  Implements the dynamic pointer interface.
io_file.c  Implements the file interface.
io_ss.c  Implements the Source/Sink interface.
ipkColumn is the index of the primary key as it appears in IDLIST, not as is appears in the original table.
is a child, nothing to do here
is consitent with the way -R works where the stdin file handle
is degen, needs ridges
is easy to generalize ...
is it already missing...
is magic number (cache line size)
is not in hashtable, thus, function is not to be excluded
is re-populated each EXEC_PRE
isAgg is true if the outer query uses aggregates and subqueryIsAgg is true if the subquery uses aggregates.
isCommit flag passed to sqlite3PagerMovepage
isConsonant() and isVowel() determine if their first character in the string they point to is a consonant or a vowel, according to Porter ruls.
isNot: This variable is used by function getNextNode().
isOrdered for (pFrom+pWLoop)
is_resource() may return false for closed resources
is_tar() -- figure out whether file is a tar archive.
isc_drop_database() doesn't invalidate the transaction handles
iseq type of top, method, class, block
isign is -1 for forward transform and +1 for backward transform
isinf may be provided only as a macro.
isn't NULL terminated
isnan() may be a macro, a function or both.
iso8601wknum --- compute week number according to ISO 8601
iso8859_1.c -  Oniguruma (regular expression library)
iso8859_10.c -  Oniguruma (regular expression library)
iso8859_11.c -  Oniguruma (regular expression library)
iso8859_13.c -  Oniguruma (regular expression library)
iso8859_14.c -  Oniguruma (regular expression library)
iso8859_15.c -  Oniguruma (regular expression library)
iso8859_16.c -  Oniguruma (regular expression library)
iso8859_2.c -  Oniguruma (regular expression library)
iso8859_3.c -  Oniguruma (regular expression library)
iso8859_4.c -  Oniguruma (regular expression library)
iso8859_5.c -  Oniguruma (regular expression library)
iso8859_6.c -  Oniguruma (regular expression library)
iso8859_7.c -  Oniguruma (regular expression library)
iso8859_8.c -  Oniguruma (regular expression library)
iso8859_9.c -  Oniguruma (regular expression library)
it appears that the username is always first
it doesn't matter that we do some hash traversal here, since it is done only in an error condition arising from a network connection problem
it is NUL terminated.
it is a directory only, see #40228
it is a standalone directory, job done
it is always safe to cast an interface to IUnknown
it is not safe to keep reading after an error, see #72613
it is really faster to scan twice and allocate mem once instead of scanning once and constantly reallocing
it is sometimes activated temporarily while debugging code responsible  for setting pointer-map entries.
it is sure that there are some errrors as str was NULL for encrypt_rsa_key
it must NOT be in the kanji shifte sequence
it must NOT be written in JIS7
it probably did bail out already
it should be on co-routine (alternative stack).
it should start with "w" or "a" or "r+" otherwise it would cause error.
it then calls the corresponding PHP function to handle the method.
it was stored perfectly
it will be interpreted as the cert data If you supply makeresource, the result will be registered as an x509 resource and it's value returned in makeresource.
it will be reset to SIG_DFL at execve time, instead
it's a private property, so it can't be inherited
it's a triggered event on incoming data
it's an X509 file/cert of some kind, and we need to extract the data from that
it's copied from xpath.c
it's not private anymore
it's ok to convert str_len to in32_t since if it were too big intl_convert_utf8_to_utf16 above would fail
it's possible pemalloc returns NULL instead of causing it to bail out
items are slightly special
iter through params, adding to types array
iterate over all rounds:
iterate through element attributes, pick out useful stuff.
iterate through first character matches
iterate throught triggered events
iterate_upper_bound points beyond the last expected entry
iterates through a list of structs and finds the one with key "name" matching needle.
iterates through docs callbacks and calls any that have not yet been called
iterator handler table
iterator interface, c-level functions used by engine
iterators are always in C-order
iterindex is only used if NPY_ITER_RANGED or NPY_ITER_BUFFERED was set
iternext and get_multi_index functions
ither by passing in the already created xmlnode or passing in the node name
its maximum squared-distance to any point in the update box.
ix is the position (in BDIGITS) of the BDIGIT containing the decimal digit, from the start of the array.
jan  feb  mar  apr  may  jun  jul  aug  sep  oct  nov  dec
jan  feb  mrt  apr  may  jun  jul  aug  sep  oct  nov  dec
joaat_buf - perform a Jenkins's one-at-a-time hash on a buffer  input: buf - start of buffer to hash len - length of buffer in octets  returns: 32 bit hash as a static hash type
json_array_length(JSON) json_array_length(JSON, PATH)  Return the number of elements in the top-level JSON array.
json_extract(JSON, PATH, ...)  Return the element described by PATH.
json_group_array(VALUE)  Return a JSON array composed of all values in the aggregate.
json_group_obj(NAME,VALUE)  Return a JSON object composed of all names and values in the aggregate.
json_insert(JSON, PATH, VALUE, ...)  Create PATH and initialize it to VALUE.
json_remove(JSON, PATH, ...)  Remove the named elements from JSON and return the result.
json_replace(JSON, PATH, VALUE, ...)  Replace the value at PATH with VALUE.
json_set(JSON, PATH, VALUE, ...)  Set the value at PATH to VALUE.
json_type(JSON) json_type(JSON, PATH)  Return the top-level "type" of a JSON string.
json_valid(JSON)  Return 1 if JSON is a well-formed JSON string according to RFC-7159.
judge input/output filter
julianday( TIMESTRING, MOD, MOD, ...)  Return the julian day number of the date specified in the arguments
jump buffer may be uninitialized as SIGINT allowing functions are usually run in other threads than the master thread that receives the signal
jump here if parent key found
jump over anon class declaration
jump:  P2 holds jmp target
jumping to next on NZ - can follow to it and jump only on Z
jumping to next on Z - can follow to it and jump only on NZ
jumps if either operand is NULL
just a hack to free resources allocated by glibc in __res_nsend() See also: res_thread_freeres() in glibc/resolv/res_init.c __libc_res_nsend()   in resolv/res_send.c
just break anyway, to avoid greedy read
just call php_addslashes quotes
just ignore marking bits
just ignore this shit.
just in case long path gets truncated and not null terminated
just in case pstr points in the middle of a character, move forward to the start of the next char
just in case there's a class with a zillion characters in it.
just leave things as-is - an empty variant
just make it available
just no more data ready
just push operand or static value and pop soon, no side effects
just replace it with new function
just return 0 if we hit the end-of-file
just return if the converter is not activated.
just return if we don't have a command line
just take the first one
just two strings: use maximum performance version
just write in single string.
keep NOP to support ZEND_VM_SMART_BRANCH
keep US-ASCII (do nothing)
keep going until we have less than 24 bits
keep group or make empty if not existent
keep hash until is empty
keep in mind that image_info does not store editor value
keep it somewhat sane
keep non-persistent sdl and return it
keep src so discard does not get rid of it
keep stmt when free query
keep the allow-NULL flag
keep the arg as binary, since the encoding is not known
keep the compiler happy
keep track anyway, just to be complete
keep track of last marker
keepdims    : If true, leaves the reduction dimensions in the result with size one.
key is true to get the key or false to get data.
key may contain non-persistent PHAR aliases (see issues #115 and #149)
key points to PS(id), but cannot change here.
key value of the loop.
key1 must be present.
keyClass is one of the constants  FTS3_HASH_BINARY or FTS3_HASH_STRING.
key_length is its length
keylen not needed here
kick RUBY_EVENT_RETURN at invoke_block_from_c() for bmethod
kids will inherit the env, don't let them spawn
kill myself immediately
kill the object handle for the stmt here
kind of contour point
kinsoku point in ASCII
kludge for __dtoa irregularity
known at compile-time
koi8.c -  Oniguruma (regular expression library)
koi8_r.c -  Oniguruma (regular expression library)
koi8_u.c -  Oniguruma (regular expression library)
l,r:left,right group   m:median point
l_in, r_in, l_out, and r_out are in pseudo-"big-endian" format.
label(destination position)
large doclists that span many pages have associated "doclist index" records that contain a copy of the first rowid on each page spanned by the doclist.
large object functions
largest prime smaller than 65536
largest root page number
last attempt to restrict search to items in cache
last character cannot be -, unless explicitly allowed by the user
last error information
last intentionally missing break
last one is beyound our start offset
last parent, last node
last part of sideways add popcount, first three bisections can be skipped as we are dealing with bytes.
last point of outsideset is no longer furthest.
last two of each plane (nonchars) disallowed
last verification status
lastErrno set by seekAndRead
lastErrno set by seekAndWrite
last_id not supported
last_op is the last opcode of the current block
lazy loading of introspection data
lazy sweep only for eden
lc holds the last significant character read and br is a bracket counter.
ldap_init does not support URLs.
ldap_init() is deprecated, use ldap_initialize() instead.
ldap_simple_bind_s() is deprecated, use ldap_sasl_bind_s() instead.
leading " E" needs extra 2 bytes + quote_chars on both end for 2 bytes + NULL
leading '..' must not be removed in case of relative path
leading 0x/X only if non-zero
leading zeroes from decimal precision
leafCorrection:  4 if pPage is a leaf.
leafData:  1 if pPage holds key+data and pParent holds only keys.
leap seconds are determined by IERS.
least significant r bits
leave a sane environment behind since some atexit() handlers call getenv().
leave from Ruby world: You can not access Ruby values, etc.
leave id_internal_ivar being 0
leave name uninitialized so that compiler warn if INIT_ANCHOR is missing
leave previous item in place
leave the variant slot empty to simplify cleanup
leave type reference alone
leave yield from mode to properly allow finally execution
left end of current region
left-adjusting padding (always blank)
legacy and unstructured ioctl number.
legal only when MATCHED_P(s)
len       length of id string if known, or 0 if unknown.
len       length of val string if known, or 0 if unknown.
length excluding ipv4
length goes to next block
length includes itself
length is the number of bytes in the string (bytes, not characters).
length of converted string
length of state vector
length of subroutine name
lengthptr         NULL during the real compile phase points to length accumulator during pre-compile phase Returns:            TRUE on success
lengthptr         NULL during the real compile phase points to length accumulator during pre-compile phase Returns:            TRUE on success FALSE, with *errorcodeptr set non-zero on error
lenp is 32 bit because converted comment can be longer than ZIP_UINT16_MAX
less restrictive than unicode_cp_is_allowed
less than 1 is an error
let IB parse it as a string
let STDOUT function as STDERR, just in case writing to STDOUT directly
let mktime decide if DST is in effect
let python try calling __complex__ on the object.
let rdoc know about mFiddle
let release_sysvsem_sem know we have removed the semaphore to avoid issues with releasing.
let see if the path already exists
let's crypt buffer now
let's hope the pointer is aligned
let's keep the nul-terminate tradition
let's quote all the values
let's see if this string has a matching dsn in the php.ini
let's see if we have one cached....
lets wait on our child process here before we, the parent, exits
lfchars must be encoded in ASCII here
lgamma_r.c  - public domain implementation of function lgamma_r(3m) lgamma_r() is based on gamma().
libancillary - black magic on Unix domain sockets (C) Nicolas George fd_send.c - receiving file descriptors
libancillary - black magic on Unix domain sockets (C) Nicolas George fd_send.c - sending file descriptors
libancillary - black magic on Unix domain sockets (C) Nicolas George test.c - testing and example program
libcurl expects long datatype.
libcurl will free this easy handle, avoid double free
libedit check rl_getc_function only when rl_initialize() is called,
libedit don't need this call which set the tty in cooked mode
libedit is compatible with GNU Readline.
libmysql API docs say it should be so for SELECT statements
libmysql just moves to the end, it does traversing of a linked list
libmysql's documentation says it should be so for SELECT statements
library is already initialized, now init our request
libxml is segfaulting in versions up to 2.6.8 using xmlTextReaderClose so for now we will free the whole reader when close is called as it would get rebuilt on a new load anyways
libxslt uses _private, so we must copy the imported stylesheet document otherwise the node proxies will be a mess
like INTL_CHECK_STATUS, but as a function and varying the name of the func
likely (but not limited to): ECONNREFUSED, ETIMEDOUT, EHOSTUNREACH
limit is at least -1 therefore no need of bounds checking : i will be always less than found
limit output to these functions
limit text/image from network
limits keep track of valid ranges for the neighborhood: if a bound of the neighborhood is outside the array, then limits is the same as boundaries.
linear interpolation between w and v
linear library, need to scan (FUTURE)
linenoise.c -- guerrilla line editing library against the idea that a line editing lib needs to be 20,000 lines of C code.
link field is null-terminated unless it has 100 non-null chars.
link in the cram-md5 authenticator
link in the dummy driver
link in the gss authenticator
link in the imap driver
link in the log authenticator
link in the mbx driver
link in the mh driver
link in the mmdf driver
link in the mtx driver
link in the news driver
link in the nntp driver
link in the phile driver
link in the plain authenticator
link in the pop3 driver
link in the tenex driver
link in the unix driver
link key to the same persistent script in hash table
link the transaction into the connection-transaction list
link_ntoa is also defined at Net2.
linux wants this when XOPEN mode is on
list compiled in modules
list of huge allocated blocks
list of tokens used in vocab
list of unused chunks
list_del is not needed
literals are assumed to not be manipulated during executing of their op_array and as such async safe
little bits about characters for metaphone
little mini hack so that we can use this code from the dbh ctor
load directory or file
load glyph image into the slot (erase previous one)
load in anonymous module as toplevel
load methods from eval.c
load statically linked extensions before rubygems
load the Function from the DLL
load the palette and mark all entries "open" (unused) for now
load up the library from the named file
loaded module, but not needed
loads default options
local consoles cannot disconnect, ignore EOF
local filename, need to perform open_basedir check
local structures and defines *
locale insensitive ctype functions
locale specifies a codeset
locale_get_default has a conflict since ICU also has a function with the same  name in fact ICU appends the version no.
localeconv doesn't return an error condition
localtime  Assuming the current time value is UTC (a.k.a.
localtime converts a 'time_t' into a local 'struct tm'
lock semaphore now but bail out when already locked.
lock support test (TODO: more check)
lock the RESERVED byte
locking_mutex must be Qfalse
locktype must be either NO_LOCK or SHARED_LOCK.
log(Number of iterations due to IN)
log(d * 2 ** numbits)
log-2 base of history window (9 - 15)
log-gamma function to support some of these distributions.
log10(d * 2 ** numbits)
log2(d * 2 ** numbits)
logic above is as follows: If an explicit alias was requested, ensure the filename passed in matches the phar's filename.
logic copied from _php_stream_stat, but we only want to fail if the wrapper supports stat, otherwise, figure it out from the open.
logic hacked from ext/standard/datetime.c
logical database name
long mode (AMD64 instruction set)
longer length is possible behavior because struct sockaddr_dl has "minimum work area, can be larger" as the last field.
longer than any posix_sh_cmds
longest sane line length
look ahead for the line break chars to make a right decision how to consume incoming characters
look at substr() function for more information
look for LF in the data
look for a potential boundary match, only read data up to that point
look for byref params
look for environment variable DLN_LIBRARY_PATH first.
look for more extensions
look it up from the cp1252 table
look up for a delimiter
lookbehind assertion is not fixed length
looking for 'Connection: close'
looking for 'Connection: keep-alive'
looking for 'Transfer-Encoding: chunked'
looking for executable
looks like we'll need to resolve it
lookup by "not-real" path
lookup the initial function
lookup_cv may be using another zend_string instance
loop        : The loop which does the reduction.
loop chunks to find BMHD chunk
loop over core dimensions
loop over input/output arguments
loop terminates because there is an infinite number of primes
loop through all the provided arguments and set dpb fields accordingly
loop to search the first not undefined element...
lower left corner of update box
lower left is a drawn part of boundary
lowercased unqualified constant name
lshift1 - DON'T IMPL.
lunar cycle      The period of time between mean conjunctions of the sun and moon (new moon to new moon).
mach_clock also should be re-initialized in child process after fork
macro generates multiple statements
macros for length in CaseMappingSpecials array in enc/unicode/casefold.h
macros related to ONIGENC_CASE flags
macros to shorten "enc/unicode/casefold.h", undefined immediately after including the file
magic already verified
main entry didn't match, flush its continuations
maintain backwards compatibility
major HTTP version or dot
major problem re-opening, so we ignore this file and the error
make 'y' same seed as 'x'
make a connection attempt
make a copy and push that on the stack instead
make a fresh copy each time - strtok corrupts it.
make a new tweenColorCache on every call because caching colormappings between calls is not safe.
make a room for unshifted items
make argument of event handler
make best effort if BOM is missing
make body with labels and insert line number
make core report what it should
make dot above explicit
make empty directory for .phar magic directory
make empty root directory for empty phar
make extra argv slots point at end_of_area (a NUL)
make first pass to compute required sizes for second pass
make hash table from __.SYMDEF
make instruction sequence
make it permanent object
make it zero-based internally
make kth array positive, ravel and sort it
make new dictionary with replaced PyArray_Descr Objects
make new symbol and ID
make new_strides variable
make old style backtrace directly
make our hash too "full".
make path point to the drive letter
make php call us to get _ENV vars
make scratch large enough to hold the whole URL (over-estimate)
make stream not being closed when the zval is freed
make sure a base-class array is used so that the dimensionality reduction assumption is correct.
make sure everything is saved
make sure it's after qh facet_next
make sure it's null terminated
make sure itemsize is a multiple of 4 so round up to nearest multiple
make sure original values are remembered in ORIG_ copies if we've changed them
make sure path_info/translated are empty
make sure subscript always returns an array object
make sure that the PGSQL_CONNECT_FORCE_NEW bit is not part of the hash so that subsequent connections can re-use this connection.
make sure that the temporary file is removed
make sure that the trait method is not from a class mentioned in exclude_from_classes, for consistency
make sure that y is longer than x
make sure the DN contains no NUL bytes
make sure the shape of the output array is the same
make sure the top level is a normal array
make sure this sorts last
make sure to process initialized vars only
make sure we are at the right location to read the manifest
make sure we got a 227 response
make sure we have enough memory
make sure we've consumed all request input data
make the encoding description string  exp.
make the path lowercase on Windows, for case insensitivity.
make the stdio mode be binary
make vptr point to the start of the buffer and cptr point to the area we'll consider the string table.
make zend_get_property_info silent if we have getter - we may want to use it
makenew_nonsimplicial
makes no representations concerning either the merchantability of this software or the suitability of this software for any particular purpose.
makes sure this is quick
makes the result object tainted if expanding tainted strings or returning modified path
making the actual marks requires a bunch of other stuff
makroom - make room by splitting the overfull page this routine will attempt to make room for SPLTMAX times before giving up.
malformed JSON or PATH arguments result in an error.
malloc the extension array
malloc was used to store value
malloc.c filters out 0 byte requests
malloc/free/realloc hook
many more are invalid, but that depends on whether it's HTML (and which version) or XML.
many numbers are 1 digit
map        - contains service information for each page.
map US-ASCII and ASCII-8bit as code page 1252 (us-ascii)
map a string to an xmlrpc type
map a string to an xmlrpc vector type
map an xmlrpc type to a string
map driver specific error message to PDO error
map parser errors to standard xml-rpc errors
map the buffer to a block:
map the low 64 bits of `n' to the modified-base64 characters
map the modification type
map the modified-base64 character `c' to its 64 bit value
mark `a' and remember (default behavior)
mark `b' and remember
mark all possible sources as used
mark as outside range and get buffer
mark as removed (empty live range)
mark current boundary point
mark endpoint 0 only if value is 1 there, and this is a two level task
mark first pages as allocated
mark instruction as JUMP or RET
mark pointer as "special" using low bit
mark protected global variables
mark run as allocated
mark the beginning of varargs
mark the descriptor close-on-exec, so that it won't be inherited by potential other children
mark the event as not registered
mark the event as registered
mark the old one for deletion
mark the vent as not registered
mark this name as used
marked from machine context can be false positive
marking buffer as enabled and not used
marking buffer as used
marshal_dump may result in smaller Marshal strings.
marshal_dump must return a result containing the information necessary for marshal_load to reconstitute the object.
marshal_dump will take precedence over _dump if both are defined.
marshal_load must recreate the object from the information in the result.
mask     the highest   bit of u
mask POSTPONED_JOB dispatch
mask all but highest   bit of u
mask all but lowest    bit of u
masking bits, we could count them too
match data(str - end) from position (sstart).
match full, case insensitive, command name
match single letter alias
match with empty at end
matched it and printed type
matched key should return above
matches almost anything penalize
matches anything penalize
matches conditional for qh_partitionpoint below
matches qh.upperdelaunay in qh_setfacetplane
matches qh_partitionall
matches qh_triangulate_facet and qh.lower_threshold in qh_initbuild
matches upperdelaunay in qh_setfacetplane()
matching process terminator (no more alternative)
matching region of POSIX API
matmul is not currently implemented for object arrays
max --- return maximum of two numbers
max deflate size increase: size + ceil(size/16k)*5+6
max diameter * sin theta + DISTround for vertex to its hyperplane
max num of child processes
max packet size used internally by BIND
max size of input/output data
maxLocal is the maximum amount of payload to store locally for a cell.
max_n initial value is arbitrary, dump_data will extend it
max_work and reasons for solver failures are as in solve_may_share_memory.
maximum code, given n_bits
maximum depth of the parser stack
maximum length of string
maximum length of the destination buffer
maximum number of bytes we are reading
maximum number of factors in factorization of n
maximum number of grapheme clusters, bytes, or characters (based on extract_type) to return
maximum size before value is interpreted as a LONG value
maximum size of colormap
maximum string length, worst case situation
maximum valid heigth for wbmp (although 127 may be a more accurate one)
maximum valid width for wbmp (although 127 may be a more accurate one)
maxlen can never be smaller than 128
maxoutside is calculated elsewhere so a DISTround error may have occured.
may be dynamic, get only once
may be low by qh hull_dim/2
may carry conversion state (e.g. for iso-2022-jp)
may have more than one horizon ridge
may hold for many new facets
may need more than 16 bits
may need to handle ENC_CODERANGE_BROKEN
may not be initialized if file could not be created
may or may not have Implicit Result Set children
may signal closure on a downstroke
may still have visible facets via qh_triangulate
may warning, and return FALSE
maybe it would be better to create one for this purpose
maybe it's better to use weak name instead
maybe meaningless with no fork environment...
maybe module function
maybe shutdown method call exit, we just ignore it
mbstring.language directive is processed in per-dir or runtime context and 3.
mem(P3) holds an integer
mem.c and qset.c are initialized
mem:: is an Array of Strings containing the short login names of the members of the group.
members from the current class override trait methods
memcmp must come first to avoid
memcmp() is used to compare keys.
memcpy()/memset() or bcopy()/bzero()
memory device output functions
memory remaining after qh_memfreeshort
memrchr is a GNU specific extension Emulate for wide compatibility
memset is required only if mg_stat() fails.
meot (hundreads) case
merge distance done in qh_findhorizon
merge distance is already accounted for
merge per-directory config structures
merge per-server config structures
mergecycle_vneighbors
mergevertex_neighbors
mesh coordinates and function values
metaclass is a kind of singleton class.
method call processes with call_info
method/function oplines need to be normalized (leading backslash, lowercase) and file oplines need to be resolved properly
methods are defined by openssl/config.rb
methods for marshaling
metonic cycle    A 19 year cycle which determines which years are leap years and which are common years.
mfischer, 20020514: I commented this out because it really seems bogus.
might not work for EBCDIC
might use Sys V memset(3) here
milliseconds since Unix epoch
mime decode is explicitly on
mime_content_type(..) emulation
min --- return minimum of two numbers
min and max variables can't be used together
min distance to colormap entry i
min/max aggregates seen.
minimum number of decimal digits to distinguish double values
minor HTTP version or end of request line
mips 32-bit arch dependent functions.
mips 64-bit arch dependent functions.
miserable CBW or CWDE
missing ) after comment
mix of names and numbers
mixed is probably closest thing we have to compound type.
mixed use named group and no-named group
mkstemp is preferred over shm_open on Linux as it allows to choose another directory that `/dev/shm` on system where this partition is too small (e.g. the Travis containers).
mmap() space per open file
mnd_free will reference LOCK_access and crash...
mnd_free will reference LOCK_access and might crash, depending on the caller...
mod_data contains data required by PS modules.
mod_data is guaranteed to have non-NULL value.
mod_data, *key are guaranteed to have non-NULL values.
mod_data, *key, *val are guaranteed to have non-NULL values.
mod_data, *save_path, *session_name are guaranteed to have non-NULL values.
mode can be ignored, maximum depth is 1
mode flags for opening fds
mode for proc_open code
mode: string  specifies mode argument for open().
mode:: string  Specifies the mode argument for open().
model 2: Native Thread with Global VM lock Using pthread (or Windows thread) and Ruby threads run concurrent.
model 3: Native Thread with fine grain lock Using pthread and Ruby threads run concurrent or parallel.
modified 12/3/93, array(1) declarations changed to array(*)
modified 3/93 to return if incx .le.
modified by Tanaka Akira.
modify a bignum by 2's complement
modify capa instead of realloc
modify the original mode
modify type to prevent indirect destruction
module Digest::Instance
module Enumerable # weighted random sampling.
module multiple options in a string are allowed for Perl module
molad            The date and time of the mean conjunction of the sun and moon (new moon).
more general version: calc cost by ins/rep/del weights
more methods live here
more than just our fp resource is open for this file
most general version: calc cost by user-supplied function
most people will use this one when calling socket() or socketpair()
most significant w-r bits
motorola is easier to read
mount an absolute path or uri to a path internal to the phar archive
mount the file just in time
mount the file/directory just in time
move after the comma, to the next string
move all chunks except of the first one into the cache
move chunk into the head of the linked-list
move early ranges to make a room
move extra args into separate array after all CV and TMP vars
move hi bit of u to hi bit of v
move on to first character in field
move past hostname and port
move points from outsideset to coplanarset
move roots into list to free
move shared_segments and shared_free to shared memory
move the environment out of the way
move the memory buffer by the size of the window
move the non-benign sign extension flag to bit 16
moveToLeftmost() finds the left-most entry beneath the *entry* whereas moveToRightmost() finds the right-most entry beneath the *page*.
move_references is set to 0, handled in the wrapping transfer fn, src_stride and dst_stride are set to contiguous, as N will always be 1 when it's called.
move_references is set to 0, handled in the wrapping transfer fn, src_stride is set to zero, because its 1 to N copying, and dst_stride is set to contiguous, because subarrays are always contiguous.
mpz_rootrem() is supported since GMP 4.2, but buggy wrt odd roots of negative numbers
mt must be initialized
mth must be main_thread
multi char folded code is not head of another folded multi char
multi-byte op code - auxiliary table chosen by prefix
multi-line assignment
multiple of qh.max_outside and precision constants
multiple options specified as one (exclude long opts)
multiple values allowed.
multiplication by karatsuba method
multiply by m and add a
must agree with qh_nearcoplanar()
must be NUL-terminated
must be a constructive encoding of a primitive value
must be called ONLY after SUCCESSFUL accelerator_shm_read_lock
must be error since parameters are only allowed after mediatype
must be free before because references the memory pool
must be non-simplicial due to merge
must be safe inside sighandler, so no mutex
must be stdin, stderr or stdout
must cleanup OpenSSL error stack before re-raising
must clear OpenSSL error stack
must come prior to the oniguruma header
must copy previous value because MSVCRT's putenv can free the string without notice
must exist, no qh_merge_degenredunant
must have a valid element
must have global scope (to let the compiler know they may be changed in outside (...
must match allocation in PyArray_NewFromDescr
must match len(runtime.cgoCallers)
must not be process-leader
must not init to FINAL_TOKEN
must understand, sometimes present in headers.
mx:    Maximum number of bytes to accumulate.
mxKeysize: As records are added to the sorter by calls to sqlite3VdbeSorterWrite(), this variable is updated so as to be set to the size on disk of the largest record in the sorter.
mxPathname is the maximum length of a pathname in this VFS.
mysql lied about the column width
mysql_change_user() call
mysql_native_password only works with SCRAMBLE_LENGTH scramble
mysql_stmt_close() clears errors, so we have to store them temporarily
mysqli_link_free_storage partly doubles the work of PHP_FUNCTION(mysqli_close)
mysqli_real_connect flags
mysqlnd extension - profile calls
mysqlnd extension - trace memory functions
mysqlnd keeps track of the binding and has freed its structures in stmt_close() above
mysqlnd_result_unbuffered::fetch_row() expects this to be not NULL.
mysqlnd_stmt_store_result() has been called free the bind variables to prevent leaking of their previous content.
n - The block is used at the moment, and the value contains its size.
n - The size of the previous block.
n is the days in the 400 year cycle.
n1 has the longer scale
n1 is less than n2, subtract n1 from n2.
n2 has the longer scale
n2 is less than n1, subtract n2 from n1.
n:     Size of zBase in bytes.
n: the size of the set r: the number of elements in each permutation p: the array (of size r) that we're filling in values: the Ruby array that holds the actual values to permute
nArg of -2 is a special case
nAutomerge: The minimum number of segments that an auto-merge operation should attempt to merge together.
nBackfill can only be increased by threads holding the WAL_CKPT_LOCK lock (which includes a recovery thread).
nBackfill is the number of frames in the WAL that have been written back into the database.
nBackfillAttempted is the largest value of nBackfill that a checkpoint has attempted to achieve.
nByte is the number of bytes of space needed.
nByte must be a positive
nByte must be a positive multiple of 8.
nBytes is always a value obtained from a prior call to memsys5Round().
nCellKey will always be between 0 and 0xffffffff because of the way that btreeParseCellPtr() and sqlite3GetVarint32() are implemented
nChar must be non-negative.
nCol bytes: 0x01 for PK columns, 0x00 otherwise.
nCol rounded up for alignment
nData: Bytes of data written since iRowidOff.
nExpr+2 registers allocated at regBase
nLimit is set to -1 if there is no LIMIT clause.
nLt is another list of integers that show the approximate number of entries that are strictly less than the sample.
nMax may be  modified at any time by a call to the pcache1Cachesize() method.
nMaxDepth is the maximum allowable depth of the balanced sub-tree.
nMaxpage + 10 - nMinPage
nOp is guaranteed to be less than or equal to 1024/sizeof(Op).
nOut before IN() and WHERE adjustments
nPhaseOneStep is updated to account for the conditions above during the first pass of each source table.
nPhaseOneStep: If the RBU database contains an rbu_count table, this value is set to a running estimate of the number of b-tree operations required to  finish populating the *-oal file.
nPkField is the number of key fields in the  pPk index or 1 for a rowid table.
nPool is the size of the array (in Mem3Blocks) pointed to by aPool less 2.
nReader is automatically rounded up to the next power of two.
nReader may not exceed SORTER_MAX_MERGE_COUNT even after rounding up.
nRec is the number of valid page entries in the journal.
nReq is the number of bytes of memory required.
nRoot is the number of entries in aRoot.
nRow is the sum of the number of rows in the main program, plus the sum of the number of rows in all trigger subprograms encountered so far.
nSeg is always a power of two greater than or equal to the number of segments that this object is merging data from.
nSelectRow set by a constant LIMIT
nSize is ensured to be in the valid range, fall back to it rather than using an undefined bis scan result.
nZero extra zero bytes are appended to the end of the content when constructing the entry.
name is not merged, since zip_stat_t doesn't own it, and src may not be valid as long as dst
name l_type l_whence l_start l_len
name of file to read from
name of scanner method (must be an iterator)
name of the database file
name requires runtime resolution, need to check non-namespaced name
name too long, protect from CVE-2015-0235
name_ast should be evaluated only.
named or open cursors should be closed first
names for leap (13-month) year
names for regular year
nb_inplace_floor_divide
nb_inplace_matrix_multiply
nb_inplace_true_divide
nbr of 1st byte locked if successful
nbytes passed for regularity, maybe need later
nc : number of characters printed
nd : number of digits in fraction part(every 10 digits,
ndbm.h doesn't declare gdbm_version until gdbm 1.8.3.
nditer allows itemsize with npy_intp type, so it works here, but it would *not* work directly, since elsize is limited to int.
nearby parameter for allocateBtreePage()
nearzero.c: bcmath library file.
necessary special case: horizontal line
necessary to be able to store
need a brand new pdbh
need a change to trigger a new backup
need aligned data buffer
need an explicit buffer to hold result
need ap2 as contiguous array and of right type
need ap3 as a 1D aligned, not swapped, array of right type
need more data before we can push data through to the stream
need not to show internal data
need not to sort both sides
need proceed one character at a time
need space for two separate filenames
need space for variable name and value
need the dirfile size to establish max bit number.
need to accumulate GC time for lazy sweep after gc()
need to acquire env from toplevel_binding each time, since it may update after eval()
need to adjust multi-byte string pos
need to convert the first parameter from int constant to string algorithm name
need to copy here since setlocale may change it later
need to copy to strip leading "/", will get touched again
need to ensure these go away now
need to just run handler if we're inactive and getting a signal
need to keep FILE objects of stdin, stdout and stderr
need to re-scan if input filter changed
need to save value before dbm_delete()
need to save value before sdbm_delete()
need to sort left side
need to sort left side only
need to sort right side
need to sort right side only
need to use a PHPAPI function here because it is external module in windows
need to work in utf16
need true dimension for memory allocation
needed because recv doesnt set null char at end
needed because recv/read/gzread doesnt put a null at the end
needed for PG_VERSION
needed for context stuff
needed for mysql_multi_query()
needed for ssize_t definition
needle is converted into wchar
needs and data availability match
needs the userdecrs table and PyArray_NUMUSER variables defined in arraytypes.inc
needs to be cleared, since any returned value is valid
needs to be higher than the 22 bits used for Unicode codepoints
needs to be in printsummary
needs to be malloc (persistent) - GD will free() it later
neg.c: bcmath library file.
negate it (becomes positive) c.
negative value to tell zlib not to write a header
negative value to tell zlib that there is no header
negative values are not supported
neighbor is an horizon facet
neighbor may be deleted
neighbor_intersections
network socket operations
never blindly assume that #digest() returns a string
never blindly assume that subclass methods return strings
never executed -- avoids warning
never use a timeout with non-blocking sockets
new element, call ctor as in spl_ptr_llist_push
new entry, add the old one to the list
new line/NUL character safety check
new style delimiter: locale id follows
new style, using connection string
new, original C python code was added to implement the Random() interface.
new-style file upload
new.* record for first change
new.* record for second change
new_num allocates a number and sets fields to known values.
newfacet already in use
newfacet is null if all ridges defined
newline before label will be subtracted from returned text, but yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc.
newly added (partially filled) entry or error
newobj is a tuple of the Python metadata dictionary and tuple of date_time info (str, num)
newsize is current length + new length
next UID to be assigned
next block is only NOP's
next char should be a hexadecimal digit
next check for a list of field names
next relevant character.
next request should be able to restart it
next try to create a new file
next: check for conflicts with current class
nf: digit position for operation.
nfs lockd on OSX 10.3+ doesn't clear write locks when a read lock is set
nil is returned if address is not available in _ifaddr_.
nil is returned if netmask is not available in _ifaddr_.
nil is returned if no canonical name.
nil is returned if the flags doesn't have IFF_BROADCAST.
nil is returned if the flags doesn't have IFF_POINTOPOINT.
nil means an empty string.
nil means indefinite limit.
nil means no configuration-defined value.
nil means the end of destination_buffer.
nitems will always be 0
nlp_bits stands for number of leading padding bits
nm can be modified in `val.to_str`, don't get `name` before check for `val`
no -tokenlen+tokenlen here
no / detected, restore arch for error message
no NEC special, NEC-selected IBM extended and IBM extended characters
no allocation required
no ambiguous feature names now
no blocking if there's buffered data
no break - intentionally
no break for short-cut
no byteswap necessary
no check for PG(last_error_file) is needed since it cannot be NULL if PG(last_error_message) is not NULL
no coercion for array types
no configuration-defined value
no controls right now
no copy ctor - get already copied it
no creating magic phar files by mounting them
no ctor no args is also ok
no current element on first call
no decimal point was found
no decode on mime_input_buf last in mime_getc
no decode, but read from the mime_buffer
no default cp version
no destination (i.e: store)
no different than CACHE_SERVER in 0.9.8e
no digits, fcvt style
no docref given but function is known (the default)
no domain name may exceed this
no effective name change
no encoding conversion
no entity on this position
no error set in the handle
no extension detected - instead we are dealing with an alias
no extra data - we didn't study the pattern
no fall-through in this inner switch
no formatting on logging output
no further memory to expand hash table
no gil release, need it for error reporting
no interest in caching and no information already present that is needed later inside zend_call_function.
no interpolation needed here
no length supplied or length is too big, return the rest of the string
no link found, so we have to open one
no mapping to unicode required
no match, no substitution
no memory, return the same non-interned string
no message when exiting by signal
no more buffered data
no more data to decompress, and nothing was spat out
no more data to fetch
no more than 15 events
no more ufunc arguments to check
no need in atomicity here
no need of looping because indexes are unique
no need to add source
no need to allocate vm stack
no need to calloc it, we overwrite all pxl anyway
no need to check for length - re2c already did
no need to check ignore case.
no need to check, include_path not even specified in fopen/ no active phars
no need to close the transliterator manually on construction error
no need to copy the array after all
no need to destroy/free zres -- it's NULL in this circumstance
no need to free iv_tbl
no need to mark class.
no need to perform a real lock at this point
no need to rethrow the exception
no need to return exit_status of the last request
no need to test the var 'full'
no need to unescape anyway.
no needs to adjust *high, *high is used as range check only
no new line found, let's read some more
no new ridges in last neighbor
no non-delimiter characters
no other threads acquried
no overflow possible up to now
no permutations: yield nothing
no post handler registered, so we just swallow the data
no prompt command found so try help topic
no read permission, fallback
no reason to continue if we're going to drop it anyway
no result set - not a SELECT
no result set is being returned
no search prefetching
no setuid nor setgid.
no space allocated, yet.
no statistics , will be filled later if there are some
no supported SAPI found - disable acceleration and stop initialization
no text, so print child elems
no user security identifier
no value for mbstring.internal_encoding is given, 2.
no zend_refcounted metadata info
no, haven't placeholders at all
no_read becomes 2 in the second pass, and if this is nonblocking, we should return..
nodename or service can be nil if no conversion intended.
noinine to reduce stack usage in signal handers
non 0 if looking for executable.
non public cannot be dynamic
non representable in this charset
non-ASCII codepoint read from input
non-Linux poll may not work on all FDs
non-blocking exclusive lock
non-blocking shared lock
non-clearing get was only added in 1.9 so this function always cleared keep it so just in case third party code relied on the clearing
non-const due to return
non-const due to strtol
non-cyclic redirection: O(n)
non-default trans might have been rolled back by other call of this dtor
non-portable feature allows the offset to be negative on some systems.
non-shortest form or outside range
non-simplicial facets moved to end
non-simplicial neighbor
non-simplicial, with a ridge for newfacet
non-static since it needs to be referenced
none of the modes present, use the default one
none of the path components exist.
none of these are real files, so they don't exist
nonzero in error recovering mode
noopFunc will never be called so it doesn't matter what the implementation is.
nop is not necessary here, since the sub operation has no side effect.
normal case: need not to follow 'super' link
normal delimiter: encoding scheme follows
normal multiplication when x is small
normal multiplication when x or y is a sparse bignum
normal string: do it fast
normal text without encoding
normalize and expand path
normalize r(remainder)
not NPY_RELAXED_STRIDES_CHECKING
not a X509 certificate, try to retrieve public key
not a broken symlink, move along..
not a real definition
not a relative path after all
not a transliterator object as first argument
not a unicode code point, unless, coincidentally, it's in the 0x20..0x7D range (except 0x5C in sjis).
not allocatable array
not allowed, so fall through
not always canonicalized
not async-signal-safe
not be updated before SCHECK_PARTIAL.
not conforming to spec."
not contiguous enough
not control_len, which may be larger
not defined elsewhere
not defined in musl libc
not enough bytes left for comment
not exif_iif_add_str : this is a buffer
not found, maybe something wrong...
not found, use initial value
not in event loop yet
not increasing anymore
not initialized but needed for several options
not lang or grandfathered tag
not much we can do if chmod fails except make the whole commit fail
not needed private key, but should be
not officially supported
not part of this subtree
not representable in target charset
not ruby script, assume -x flag
not sure, if we need this...
not symlink but real directory
not the primary delete operation
not the same when in for-loop
not to make opened IO the controlling terminal device
not used    0x0010   // Was: SQLITE_IdxRealAsInt
not used for array binds
not while in conditionals
note if you want parameters from the stack, pop them off in order.
note new location within tar
note that changes here should be reflected in main/streams/streams.c::php_stream_fill_read_buffer
note that the quality of the randomness doesn't matter that much
note that the returned value is a completely new value, and must be freed.
note the extra 4 space index in because of the extra ****
note we assume that fill_input_buffer will never return FALSE, so suspension need not be handled.
note: EOF makes readline write prompt again in local console mode - and ignored if compiled without readline
note: does *not* free the passed element, only clean
note: each "row" of PC2 is left-padded with bits that make it invertible
note: here, we assume a "hole" is read as 0s.
note: this only works on strings, and only for date and base64, which do not have native php types.
note: we intentionally preserve `i' from previous loop
nothing can override 'terminating' state
nothing has been found if we got here
nothing to do currently
nothing to do if the path is NULL, :auto: or matches the existing path
nothing to do with the callback
nothing to write, fail silently
notices are no errors and are not treated as such like E_WARNINGS
notnull:    True if 'NOT NULL' is part of column declaration dflt_value: The default value for the column, if any.
now append the file name
now attemmpt to get the exclusive lock range
now block until an event occurs
now call the function
now catch the FreeBSD style of "no matches"
now check all the remaining BDIGITS for zero-ness a whole BDIGIT at a time.
now convert to seconds
now copy the actual file data to the new phar
now copy the chars after the point
now correctly move the decimal point
now deal with the tail end of things
now determine where we are
now eat any non-spaces on the left
now enable ssl if we need to
now everything should be fine and an added ZEND_ACC_IMPLICIT_ABSTRACT_CLASS should be removed
now execute the statement
now extract the public key
now fetch that element
now fracf is whether the digit or any of the remaining digits within v are non-zero now fracf_1further is whether any of the remaining digits within v are non-zero
now generate the new WHERE rowid IN clause for the DELETE/UDPATE
now insert a "." before the last / character
now keep track of the actual new text length
now pull out members of data and set them in the stat buffer
now register the events with the Interbase API
now remove this transaction from all the connection-transaction lists
now round-up to the nearest alignment value
now run through properties that are only going to be returned from a server, not text headers
now set val to be the key param and continue
now start the backup/restore job
now store the name of the lock
now suck data from the stream and stick it into the database
now that we've taken a step, check for the downstroke of a slit on the second pass (upstroke checked above) -- taking step first avoids a race condition
now the rest, first see if it becomes an array
now try again in create(write) mode and log errors
now try to find an appropriate POST content handler
now v is just the digit required.
now walk the charset map and look for the codeset
now we are dealing with regular files, so look for metadata
now we are good to go
now we can add our information
now we can safely use proper decompression
now we expect to find a type specifier
now we have no pool memory
now we have non-pool memory
now we have the "connection" lets call the DataSource object
now we have the directory we can look how long it should be
now we know exactly how long it is
now we need to find the end of the chunk the user wants us to return
now write the manifest
now, 1) EOF is detected, or 2) Code is established, or 3) Buffer is FULL (but last word is pushed)  in 1) and 3) cases, we continue to use Kanji codes by oconv and leave estab_f unchanged.
now, draw to our target surface
now, perhaps, adjust the end of the line
now, perhaps, adjust the far end of the line as well
now, scan the list of persistent Phar objects referencing this phar and update the pointers
now, set the info in _osfhnd array
np.bool_ is also disallowed as Boolean arrays do not currently support index.
nsec negative overflow
nsec positive overflow
nuke trailing whitespace
null and false (and empty string) are implicitly converted to object, anything else results in a null return value.
null and false are implicitly converted to array, anything else results in a null return value.
null blob, all values to zero
null facets moved to end
null fill to absolute position
null is converted to 0
null line, garbage, etc
null loop checker end
null loop checker end (with capture status)
null loop checker start
null means no need to load a library
null pointer constant
null terminate buffer
null terminated string
num at least 3 for D2
num1 is set if str1 and str2 are strings.
num2long.c: bcmath library file.
num2str.c: bcmath library file.
numVars    The number of variables passed to the scan command.
number conversion flags checks
number of allocated fragments
number of alocated chunks
number of antialias color lookups cached
number of antialised colors for indexed bitmaps
number of arguments not including unpacks
number of bind variables doesn't match number of elements in type definition string
number of buckets for data
number of buckets for dimensions/strides
number of bytes in instruction
number of bytes in splitting 4
number of bytes in splitting 8
number of bytes read from a datafile
number of cache entries per bucket
number of cached chunks
number of cached pointers
number of candidate colors
number of cdir-entries
number of cdir-entries on this disk
number of dimension of the current argument
number of distinct keys less than this sample
number of elements in the output vector
number of factors for which we have special-case routines
number of fonts cached before least recently used is replaced
number of free connections in the pool
number of free pages at the end of chunk
number of least significant zero BDIGITs
number of named columns in virtual table
number of named substrings
number of points marked on this curve so far
number of recent messages
number of rows equal to pRec  Return the index of the sample that is the smallest sample that is greater than or equal to pRec.
number of rows equal to pVal  Return SQLITE_OK on success.
number of rows in the table
number of rows to fetch
number of rows where key is less than this sample
number of rows where the key equals this sample
number of slices it is worth, won't update if it is 0:
number of trailing set (1) bits
number of unseen messages
number printable chars on current line
numbers with leading zeros
numelems can not be 0, we checked above
numeric constants reported in printsummary
numpy.newaxis is None
obj can be an instance of InternalObjectWrapper.
obj has the __array_interface__ interface
obj has the __array_struct__ interface
obj is a PEP 3118 buffer
obj is a Tuple, but tuples aren't expanded
obj is not a Sequence
obj is original referenced object and/or weak reference.
object + dimension and strides
object handles are identical, apparently this is the same object
object is alreay initialized
object properties should include no integers
object should be marked or oldgen
object_class*: Defaults to Hash array_class*: Defaults to Array
object_tracing.c - Object Tracing mechanism/ObjectSpace extender for MRI.
objects whose encoding is the same of contents
objspace.c - ObjectSpace extender for MRI.
objspace_dump.c - Heap dumping ObjectSpace extender for MRI.
objspace_xmalloc and objspace_xmalloc2 checks allocation size.
obsoleted by ExtraSamples
obsoleted by SampleFormat
obtain brect so that we can size the image
obtain new controlling terminal
occurs after statistics reported
occurs if lots of merging and a vertex ends up twice in an edge list.
of 'sortKeyBuf' may be changed due to realloc.
of 51th Programming Symposium, pp.21--28 (2010) (in Japanese).
of ORDER BY terms satisfied.
of b, so quotient is 1 and just subtract b from r.
of course we would have failed anyway...
of reg prior to regData available for use
of the TK_xx values...
of the default ASCII testing.
offset (starts with 1)
offset and amt determine what portion of the data or key to retrieve.
offset for ifd values outside ifd directory
offset into directory
offset is relative to the facet's hyperplane Facet is determined as a list of points
offset to first byte to lock
offset to next ifd (points to thumbnail or NULL)
offset/index must be an integer
offset:    A starting offset.
offsets:  An array safely convertible into type int64.
oi to oj and ni to nj give the axis ranges currently worked with
okay, the connection is open and the server is still alive
old calling convention, deprecated since PHP 4.2
old data descriptors have no signature
old non-POSIX version
old.* and new.* values
old.* database record
old.* record for first change
old.* record for second change
omit notice if resource doesn't exist anymore
on BSDish systems we're safe
on PARENT EXEC we want socket fds to be inherited through environment variable
on a walk, an empty string means top of tree - no error
on an resource list destruction, the context, another resource, may have already been freed (if it was created after the stream resource), so don't reference it
on either side of the input string.
on error in the hash iterator above, error is set
on first pass need to count for upstroke as well
on first pass, must apply START_ROW mark in column above previous start marker -- but skip if we just did second of two start case
on no off false yes true extra full
on no results, return an empty array
on success "arg" is converted to IS_STRING
on the first attempt, simply do one more than previous
on the shared btree structure pBt.
once added, assume that classes are stable...
onced forked tell zlog to also send messages through sapi_cgi_log_fastcgi()
one DISTround to actual point and another to computed point
one char buffer for handles opened on pipes
one char strings (the actual interned strings are going to be created by ext/opcache)
one company doing so is very much envolved in JPEG...
one day, we could fill in the details based on Date: and Content-Length: headers.
one element at a time, no stride required but read by innerloop
one extra count for splicing at outer curve
one extra like FOREACH
one id was passed, could be db or trans id
one more qh.DISTround for check computation
one of TK_DELETE, TK_INSERT, TK_UPDATE
one substitution string
one-byte or second of two-byte char
one-byte or second or fourth of four-byte char
only "r" and "rb" are supported
only 1 core, use our own zone to contention over global locks,  e.g. we have our own dedicated locks
only allow abbreviating commands that can be aliased
only bother to open temp file if we have data
only check openbasedir for files, not for phar streams
only do expensive checks if there are any watches at all
only fastcgi will get here
only for OBJECT arrays
only for oci_fetch_array()
only for ocifetchinto BC
only free decode if it was allocated by rfc822_qprint or rfc822_base64
only free local errors
only free up to i - 1
only from qh_precision()
only get here if both points are inside the window
only happens for strange sequence objects
only if *not* interactive and while executing
only in C-locale isalnum() would work
only next pointer used
only non-blocking reading, avoid non-blocking writing
only one FD is necessary at startup for the master process signal pipe
only one char found in the bbuf, save the code point.
only one non-zero word.
only one ridge has nonconvex set
only one ridge is marked nonconvex
only one row at a time is supported for now
only perform the check if the msgno is a message number and not a UID
only pre-calculate slopes if there are relatively few of them.
only print warning if not working with *
only printable, no space
only re-establish the shared lock if necessary
only returns True or raises
only running this hooks
only scheme is available
only set script_file if not set already and not in direct mode and not at end of parameter list
only set the sqlite return value if we are a scalar function, or if we are finalizing an aggregate
only the files, directories are ignored
only the master can store
only these are allowed
only these two are allowed
only to clear pending error
only use signal-safe system calls here
only used here, let do a generic fixed point integers later if required by other part of GD
only used if flags includes ENT_HTML_IGNORE_ERRORS or ENT_HTML_SUBSTITUTE_DISALLOWED_CHARS
only used if qh KEEPnearinside
only when INTERSECT_ASSOC
only workers reach this point
ooo, a real large object
oops, too many signals for us to track, so we'll forget about this one
op        - Where the arrays are placed.
op is a python object supporting the sequence interface.
op2 - Second operand to ufunc (if needed).
op2 value for LIKE/REGEXP/GLOB
op_arrays are allocated on arena, so we don't have to free them
opaque data for stateful encoding
open /dev/poll for future usages
open Backup Engine that we will use for backing up our database
open a directory resource
open a new temp file for writing
open and decompress a compressed phar entry
open default transaction
open failed w/out notice (turned to exception due to EH_THROW)
open file object for the database file
open file pointers refer to this fp, do not free the stream
open file to resolve the path
open for reading and writing
open for reading only
open for writing only
open the data channel
open the files in sequence, and stat the dirfile.
open(2) may block if fname is point to FIFO and it's empty.
open(2) may block if path is FIFO and it's empty.
open_args: array  specifies arguments for open() as an array.
open_args: is exclusive to others.
open_args:: array of strings  Specifies arguments for open() as an array.
open_basedir not set yet, go ahead and give it a value
opens up a data stream
openssl recommends a buffer length of 80
operand     : The array to be reduced.
operand : The array being reduced.
operand of unlimited repeat could match the empty string
operand_dtype : The dtype the inner loop expects for the operand.
opline where T is first used
opt should be nil, a hash or an integer.
optimise remove char in the case of removing the last char
optimise the case where adding a single char to the end and no scrolling is needed
optimization for FLONUM
optimization: color is GC_BLACK (0)
optimization: color is already GC_BLACK (0)
optimization: redefine management
optimize each basic block separately
optimize float array or complex array to a scalar power
optimize fprintf(stderr) (and other unbuffered Unix files)
optimize last facet of coplanarfacetset
optimized single assignment
option flags for qhull, see qh_opt.htm
option set in qh_initqhull_globals
optional error    - error result data.
options for json_decode
options for json_encode
options not implemented case LDAP_OPT_SERVER_CONTROLS: case LDAP_OPT_CLIENT_CONTROLS: case LDAP_OPT_API_INFO: case LDAP_OPT_API_FEATURE_INFO:
options with boolean value
options with control list value
options with int value
options with string value
or (type, ()) was given it is equivalent to type...
or 1.33 seconds of time)
or MOVE, MKCALENDAR, MKACTIVITY, MERGE, M-SEARCH
or PROPFIND or PROPPATCH or PUT
or Unix System Laboratories, Inc.
or anything at all really, so long as its got some text.
or by looking in the input descriptor
or colorindex for foreground of BW images (defaults to black)
or if the multiplier is zero
or if the sub-request environment differs from the main-request.
or invalid singleton at start of language
or the birth of Jesus Christ, did not come into use until several centuries later when Christianity became a dominant religion.
or the load of functions from the DLL failed
or uint, ubigint, usmallint Sybase AS12
or, can be made into one
order     - NPY_CORDER - C-contiguous result.
order does not matter for contiguous 1d arrays
order is important here, we need to keep the original table walkable during GC (GC may be triggered by new_entry call)
order_vertexneighbors
ordinary path element, beginning don't move
origin and buffer available, so lets come up with the error message
original unqualified constant name
other end is outside to the left
other end is outside to the right
other times than 0h UT as well.
other types could be used here - eg: file pointers and read in the data from them
others such as StringIO
otherwise guess at what's safe
otherwise it doesn't matter even if clobbered.
otherwise just skip those entries
otherwise large post merges too slow
otherwise not freed from memory
otherwise the optab entry captures it
otherwise there may be huge holes between two entries
otherwise try the next component in the search path
otherwise we already did this
otherwise we just have one last element to add to the array
otherwise we will crash because the EG(persistent_list) has been freed already, before the modules are shut down
otherwise, allow to override
otherwise, default to generic "item"
otherwise, default to sending all methods
otherwise, make sure that we don't close the FILE* from a cast
otherwise, print element contents
otherwise, the filename of the script will be retreived later via argc/argv
otherwise, use the type as the name.
otherwise, we are going to bypass the buffer
our default PEM callback
our types are not unsigned
out         : NULL, or the array into which to place the result.
out is a borrowed reference
out of range for timestamps
out2:  P2 is an output
out3:  P3 is an output
out:      Either NULL, or an array with 'bool' data type in which to place the resulting dates.
out:      Either NULL, or an array with 'int64' data type in which to place the resulting dates.
outB:    Move the output of the selectB coroutine into the output of the compound query.
out_skip_first_count : This gets populated with the number of first-visit elements that should be skipped during the iteration loop.
outfile is used for output and format options.
outofmem.c: bcmath library file.
output 1 shifted byte
output ASCII space only
output a little shorter than "length"
output any remaining alerts at E_NOTICE level
output any remaining errors at their original error level
output bit is always 0
output c1 and c2, get next
output contour points
output cookie, mini-header, and contents
output from qh_produce_output() use NULL to skip qh_produce_output()
output functions return int, so pass in int max
output information: summary
output is C-order, input is F-order
output modes - disable post processing
output newline and clear
output readable address
output trailing cookie
output variables in select, select for update
output vector for substring information
output.c: bcmath library file.
output: an XMLRPC_VALUE representing a fault struct in soap style, with xmlrpc codes mapped to soap codes, and all other values preserved.
overflow is already checked
overflow or past end of file
overflow should be checked already
overflow to msb of length
overflow to signed inf
overflow, refuse to do anything
overjump leading space
overlay becomes quite opaque.
override original function.
override path_translated if -f on command line
override the default tcp socket provider
overriden for garbage collection
overwrite +p+ by succeeding letter in +enc+ and returns NEIGHBOR_FOUND or NEIGHBOR_WRAPPED.
overwrite Windows GDI define in case of windows build
overwrite `goto-state' by default value
overwrite previous value, or the last value could be used and lead to bug#53503
overwriteable ini defaults must be set in phpdbg_ini_defaults()
overwriteable ini defaults must be set in sapi_cli_ini_defaults()
p cannot be part of a CHECK constraint
p is left pointing to the byte after the list written.
p must correspond to end_word - 1
p now points one beyond the last character of the string in buf
p:     The accumulator to be initialized.
pArg becomes the first argument to xCallback().
pArray is a pointer to an array of objects.
pAux passed to create_module()
pBuf is normally NULL.
pBuf must be a pointer to at least BITVEC_SZ bytes of temporary storage that BitvecClear can use to rebuilt its hash table.
pCell might point to some temporary storage.
pCell points to the content of the cell.
pColumn is NULL if IDLIST is omitted.
pColumns and pExpr form a vector assignment which is part of the SET clause of an UPDATE statement.
pColumns can only be NULL due to an OOM but an OOM will cause an exit prior to this routine being invoked
pConchPath is set to NULL if a memory allocation error occurs.
pContext from when function registered
pCrsr NULL on PseudoTables
pCur is always valid so KeySize cannot fail
pCur might be pointing to text obtained from a corrupt database file.
pCur points at an index entry created using the OP_MakeRecord opcode.
pCurrent gets an accurate estimate of the amount of memory used to store all prepared statements.
pCurrent gets an accurate estimate of the amount of memory used to store the schema for all databases (main, temp, and any ATTACHed databases.
pData,nData hold the content of the new entry.
pData: Record containing the doclist-index data.
pDatabase is NULL if the database name qualifier is missing - the usual case.
pDest is where the output should be sent.
pDestIdx has no corresponding index in pSrc
pDirty, pDirtyTail, pSynced: All dirty pages are linked into the doubly linked list using PgHdr.pDirtyNext and pDirtyPrev.
pDone always used on sub-journals
pDone never used on non-savepoint
pE is a pointer to an expression which is a single term in the ORDER BY of a compound SELECT.
pE is a term in an ORDER BY or GROUP BY clause.
pEList has been resolved.
pEList is a list of expressions which are really the result set of the a SELECT statement.
pEList is the SET clause of an UPDATE statement.
pExpr is a CHECK constraint on a row that is being UPDATE-ed.
pExpr is a comparison expression, eg.
pExpr is a comparison operator.
pExpr is an operand of a comparison operator.
pExpr points to an expression which implements a function.
pFile is a file that has been opened by a prior xOpen call.
pFrom contains an SQL NULL when this routine returns.
pFrom will be left pointing to that path
pFromCol determines which columns in the current table point to the foreign key.
pHighwater is set to zero.
pIdx is a UNIQUE index (or a PRIMARY KEY) and has the right number of columns.
pIdx is a covering index.  No need to access the main table.
pIdx is not a UNIQUE index
pIdx must be one of the indexes of table iCur.
pIdxKey  must be NULL.
pIn is a UTF-8 encoded string, nIn bytes in size.
pIsNocase is set to true if uppercase and lowercase are equivalent for the function (default for LIKE).
pIter now points at the 64-bit integer key value, a variable length  integer.
pKeyInfo is used for comparing keys.
pLast is the last token in the sequence.
pLeaf is the iSeq'th leaf to be added to the tree, counting from zero.
pLeaf: Buffer containing current leaf page data.
pLimit and pOffset hold the expressions that appear in the original SQL statement after the LIMIT and OFFSET keywords.
pList is a list of columns to be indexed.
pList is a list of names  of columns that form the primary key.
pList might be NULL following an OOM error.
pList will be NULL if this is a primary key or unique-constraint on the most recent column added to the table currently under construction.
pMem currently only holds a string type (or maybe a BLOB that we can interpret as a string if we want to).
pMem must be either a string or blob if bPreserve is true.
pName is the name of the table to be dropped.
pName1.pName2 is the name of the index  and pTblList is the name of the table that is to be indexed.
pOrderBy is an ORDER BY or GROUP BY clause in SELECT statement pSelect.
pOrderBy is really a GROUP BY
pOrderby is really a DISTINCT clause
pPage and up to NB siblings after balancing
pPage and up to two siblings
pPage is a leaf node.
pPage is not necessarily writeable since pCell might be auxiliary buffer space that is separate from the pPage buffer area
pPage is the leaf page which is the right-most page in the tree.
pPage must have a single overflow entry which is also the right-most entry on the page.
pParent is its parent.
pParse is uninitialized when this routine is called.
pPayload is a pointer to data stored on database page pDbPage.
pPg must have been returned by an  earlier call to pagerAcquireMapPage().
pPk is the PRIMARY KEY index for WITHOUT ROWID tables and NULL for normal rowid tables.
pPrev is the expression node most recently inserted into the tree.
pRC must be SQLITE_OK when this routine is called.
pRHS cannot be NULL because a malloc error would have been detected before now and control would have never reached this point
pRoot is the head of a list of free chunks of the same size or same size hash.
pRoot is the root of an incremental merge-tree with depth nDepth (according to vdbeSorterTreeDepth()).
pSeg: The segment to iterate through.
pSelect is correlated, not constant
pSortCsr is the cursor that will return results to the user for this query.
pTab is a pointer to a Table structure representing a virtual-table.
pTable and pDatabase are the name of the table and database named in the FROM clause term.
pTemplate is better than p if: (1)  pTemplate has no more dependences than p, and (2)  pTemplate has an equal or lower cost than p.
pTerm can be evaluated using just the index.  So reduce the expected number of table lookups accordingly
pTerm is the term to be  coded.
pText may or may not be nul-terminated.
pTo is the name of the table referred to (a.k.a the "parent" table).
pToCol is a list of tables in the parent pTo table.
pUnpacked is either created without a rowid or is truncated so that it omits the rowid at the end.
pVector retains ownership of the returned subexpression.
pWriter has an exclusive lock
pX is the RHS of an IN operator.
pZ is a UTF-8 encoded unicode string.
paBlob may be NULL or non-NULL.
pad with 0's and finalize with msg_len mod 256
pad with zero bits to complete (N*WBLOCKBITS - LENGTHBITS) bits:
padding for return value from compile_length_cclass_node() to be fix.
page-size bytes of space for parent ovfl
parameter was not defined
parameters  : 'queue' pointer  returns     : True_ if IsEmpty queue, else False_  comments    :
parameters  : 'queue' pointer  returns     : pointer to data at head.
parameters  : 'queue' pointer  returns     : pointer to data at tail , if queue IsEmpty returns NULL  comments    :
parameters  : 'queue' pointer.
parameters  : pointer to queue  returns     : pointer to data of new element else NULL if queue IsEmpty  comments    : Makes cursor move towards the head of the queue.
parameters  : queue pointer  returns     : pointer to data element or NULL if queue is IsEmpty.
parameters  : queue pointer  returns     : pointer to data element that was at tail.
parameters  : queue pointer  returns     : pointer to data element.
parameters  : queue pointer, comparison function compatible with with 'qsort'.
parameters  : queue pointer, data pointer  returns     : boolean- True_ if successful, False_ if cursor at NULL  comments    :
paramname - The name of the parameter that produced 'seq'.
paranoia check for silly drivers which don't keep ioctl convention
parentheses nested too deeply
parentheses too deeply nested
parentheses too deeply nested (stack check)
parse a file or directory of files const char *fn: name of magic file or directory
parse an array (user input) into output options suitable for use by xmlrpc engine and determine whether to return data as xml or php vars
parse core dimensions of one argument, e.g. "()", "(i)", or "(i,j)"
parse estr as "enc" or "enc2:enc" or "enc:-"
parse extra config from args array, promote this to an extra function
parse out the IP and port
parse out the timestamp
parse standard "fopen" modes into open() flags
parse the data source name
parse the return value from one of the stat functions and store the relevant fields into the statbuf provided
parse the string and save the extension in the array
parser stacks and parameters
parses soap arrayType attribute to generate an array_info structure.
part before the match
pass 10: - remove NOPs
pass 11 - compact literals table
pass 11: - Compact literals table
pass 2: - convert non-numeric constants to numeric constants in numeric operators - optimize constant conditional JMPs
pass 4 - optimize INIT_FCALL_BY_NAME to DO_FCALL
pass 5: - CFG optimization
pass 6: - DFA optimization
pass 9: - Optimize temp variables usage
pass all data in one go
pass back a key resource
pass back its IDispatch directly
pass input along, if it's the last handler in the stack
pass the entire chunk through the converter
pass the underlying object
pass the variant by reference
pass the xml_elem_data struct along
passing non string values leaks, object uses toString, it returns NULL See bug38255.phpt
passive connection handler
passwd:: contains the encrypted password as a String.
passwd:: contains the encrypted password of the user as a String.
password message is to long
path for the new unixFile
paths on windows should be case-insensitive
pattern code terminator (success end)
pattern fails, try next one
pattern is terminated with '/'
pattern matching function for filenames.
pazCol:  Set to point to an array of *pnCol strings.
pc is measured in bits for monochrome images
pcache1.separateCache is false if the single PGroup in pcache1.grp is used for all page caches (mode-2).
pcache1FetchWithMutex() is the general case.
pce now contains the compiled regex
pcre_exec() rounds offset_count to a multiple of 3, and then uses only 2/3 of the output vector for storing captured strings, with the remainder used as workspace.
pcre_get_compiled_regex_cache has already sent error
pcre_maketables.c notices this
pcre_printint.c should not include any headers
peType is of type (int*), a pointer to an output parameter of type (int).
peak number of allocated chunks for current request
peak size of allocated pages
pending async interrupt is there.
per RFC 3629, UTF-8 can only represent 21 bits
per-request shutdown function
per-request startup function
per-script activation
per-script deactivation
perform error handling even without logging the error
perform final modification of zip contents for each file in the manifest before saving
perform independent sets of merges
perform sanity check.
perform seek operation
perform the conversion and then pass the request on to the innerstream
performance optimizations by Phong Tran
performs heuristics on an xmlrpc_vector_array to determine appropriate soap arrayType string.
performs registration of introspection methods
perhaps the drive is not exist.
perhaps unnecessary, but check to be sure to not conflict with other segfault handlers
perm no use, just ignore
perm: integer  specifies perm argument for open().
permit spurious check
permuted choice table 1
permuted choice table 2
persist bucket and key
persist the data itself
persistent connections
pg_attribute.atthasdef
pg_attribute.attndims
pg_attribute.attnonull
pg_description.description
pg_fetch_assoc() is added from PHP 4.3.0.
pg_fetch_object() allowed result_type used to be.
pg_insert/update/delete/select options
pgnoRoot is the page that will be used for the root-page of the new table (assuming an error did not occur).
phase 1: look for args
phonize one letter We don't know the buffers size in advance.
php arrays have no distinction between array and struct types.
php_auto_globals_create_files() might have already done that
php_dom_xmlSetTreeDoc is a custom implementation of xmlSetTreeDoc needed for hack in appendXML due to libxml bug - no need to share this function
php_getopt want to identify the last param
php_magic_database is a const, performing writes will segfault.
php_oci_lob_create() checks type
php_set_cookie(name, value, expires, path, domain, secure)
php_signal using sigaction is derived from Advanced Programing in the Unix Environment by W.
php_stream_cast() casts to int internally, and this will leave the higher bits of a SOCKET variable uninitialized on systems with little endian.
php_stream_close segfaults on NULL
php_stream_to_zval() does, add_next_index_resource() does not
phpdbg_parser.y (from php-src root) flex sapi/phpdbg/dev/phpdbg_lexer.l bison sapi/phpdbg/dev/phpdbg_parser.y
phpdbg_watch_efree() is checking against this arrays size
phpext_xml_ptr, phpext_wddx_ptr
pick up last argument of method
pipe2 is available since Linux 2.6.27, glibc 2.9.
place ALL_DONE marker for second pass
place Py_None in object positions
place a flag dictionary in d
place first START_ROW marker
place holder for /bin/sh of try_with_sh.
place immediate stop mark if nothing found
plain sockets only - let winsock handle the whole thing
platform dependent APIs to get real basenames
platform specific alternative separator
please do not add coverage here: the segment would be leaked and impossible to delete via php
pm.start_servers, pm.min_spare_servers, pm.max_spare_servers
pn prints the number NUM in base 10.
pnBlob must be non-NULL.
pnByte is a counter of the number of bytes of space that have failed to allocate.
pnOffsetList is set to the length of the set of column-offset lists, not including the nul-terminator byte.
png_set_strip_16() not yet in effect
point at our new starting point
point at true owner of memory:
point in the phonization we're at.
point undecoded buffer
pointer and length of key
pointer into main cache array
pointer to CClassNode node
pointer to all global variables
pointer to array entry
pointer to globals allocated in SHM and shared across processes
pointer to mbfl string for return value
pointer to next byte to read/write
pointer to original string(hash-item)
pointer to packed byte string
pointer to string array
pointer to the histogram
pointers to fragments
points is an array of halfspaces, the last coordinate of each halfspace is its offset
points to another variant
points to on-stack struct
points to the npy_byte to test
poll() is supported by many OSes, but so far Linux is the only one we know of that supports using poll() in all places select() would work.
polling (TIME_QUANTUM_USEC usec)
pop frame for "singleton_method_added"
populated by sqlite3_create_module()
populated, reset first
port cannot be longer then 5 characters
port is not IO, call write method for it.
porter rule condition: (*o)
porter rule condition: (*v*)
pos in buffer to store sort key
pos is one past the last UChar - and represent the number of code units to advance in the utf-8 buffer
pos:     Token offset of token within input.
position in new buffer of last blank char
position-list size field value
posix monotonic clock - preferred source of time
posix_fadvise(2) doesn't set errno.
posix_fallocate() is defined to "returns zero on success,  or an error number on  failure".
poslist: Used by sqlite3Fts5IterPoslist() when the poslist needs to be buffered.
possible checksum byte
possible request loss
possibly not being initialized.
post-process REQUEST_URI and retrieve the actual request URI.
power of two sizes may be loaded in larger moves
ppFrom points to available space and pEnd points to the end of the available space.
ppStmt may not be NULL.
ppToken should be set to point at a buffer containing the  normalized version of the token (i.e. after any case-folding and/or stemming has been performed).
ppc 32-bit arch dependent functions.
ppc 64-bit arch dependent functions.
pre 4.3 behaviour, shouldn't be used but provides BC
pre-allocate for string length plus 2 quotes
pre-conversion encoding
pre-determine how many nonzero entries there are, ignore dimensionality of input as its a CARRAY
pre-evaluate constant functions: constant(x) function_exists(x) is_callable(x) extension_loaded(x)
pre-evaluate functions: constant(x) function_exists(x) extension_loaded(x) BAD: interacts badly with Accelerator
pre-fetch the element
pre-increment for character + 1 for null
pre-readonly check, we need to know if this is a data phar
predefined by HP cc +Olibcalls
preferred is buffered read
preferred is unbuffered read
preparation for possible allocation improvements
preparation for possible packing improvements
prepare for the next iteration
prepare the statement
prepare the timeout value for use
prepared query: set the query name and defer the actual prepare until the first execute call
prepared statement under construction
prepend newbuffer to curbuffer list
preprocess this out when we are not using it.
preprocessing out the old version for now
prereq always non-zero
preround the result (tmp_value will always be something * 1e14, thus never larger than 1e15 here)
preserve the next character
pretend we don't support this hash type
pretty much apache specific.
prevent a event race condition when child process have not set up its own event loop
prevent a signal race condition when child process have not set up it's own signal handler yet
prevent access into freed memory
prevent accessing locking callback from unloaded extension
prevent any ".phar" without a stub getting through
prevent circular getting
prevent circular setting
prevent circular unsetting
prevent double free if following loop is interrupted
prevent duping if logging to syslog
prevent infinite redirects
prevent leak if variables are already bound
prevent more data from coming in
prevent null-byte poisoning
prevent overflow in openssl
prevent recursive invocation
prevent serious memory issues
prevent serious memory issues by limiting manifest to at most 100 MB in length
prevent tail call to make guard effective
prevent tiny yields mid-stream, save for next zstream_expand_buffer() or stream end
prevent unnecessary test
prevent wakeups from signal handler ASAP
prevent zend_interned_strings_restore from invalidating our string pointers too early (in phpdbg allocated memory only gets freed after module shutdown)
preveprev becomes new end of list
previous does not change
previous namespace declarations were bracketed
previous namespace declarations were unbracketed
previously SQLITE_CONFIG_CHUNKALLOC 12 which is now unused.
previously merged facet
prime candidate for hash improvements.
primitive_convert converts the content of source_buffer from beginning and store the result into destination_buffer.
primitive_convert drops the converted part of source_buffer.
primitive_convert stops conversion when one of following condition met.
print ' ' after every 10 digits
print buf to simplestring
print interbase error and save it for ibase_errmsg()
print php interbase module error and save it for ibase_errmsg()
print silly verbose header for USG compat.
print xml declaration if at root level
print.c - debugging printout routines
printable char offset of last blank char
printfacet2geom_points
printfacet3geom_nonsimplicial
printfacet3geom_points
printfacet3geom_simplicial
printfacet4geom_nonsimplicial
printfacet4geom_simplicial
printfacetNvertex_nonsimplicial
printfacetNvertex_simplicial
printhyperplaneintersection
prints warnings for flipped
printwbmp --------- print a WBMP to stdout for visualisation
private defensive copy of ary
private key may be bundled in certificate file.
private key resource from openssl_get_privatekey() 2.
private or protected property access outside of the class
private subtag start found
probably a corrupted tar - so we will pretend it is one
probably reused, make static ID
proceed to remaining data:
process data in chunks of 8 bits (a more efficient approach would be to take whole-word chunks):
process printable character
process remaining complete blocks
process run of digits
process the remaining bits:
process uses file cache fallback
procmask to protect handler_defer as if it were called by the kernel
produce PyUnicode object
produces numeric string E_NOTICE/E_WARNING
prohibit GC because force T_DATA finalizers can break an object graph consistency
prohibit incremental GC
prop-get using first dimension as the property name, all subsequent dimensions and the offset as parameters
property not found, so lets add it
protect from Thread#raise
protocol is specified as an integer to specify the protocol such as Socket::IPPROTO_TCP.
protocol version we are speaking
protocol:* Typically _zero_.
prototype - The array the new one should be like.
provide correct default value
ps_buffer here is a static const array of size PS_BUFFER_SIZE
psession is being called when the connection is freed - explicitly or implicitly
pseudo marker for start of image(byte 0)
pthreads can automically write to and read from pipes up to N bytes (which I think is usually 512).
ptr is NULL means it already be freed
ptr must reference NUL terminated ASCII string.
ptr, dims can stay the same
ptrdiff_t is not portable
public domain rewrite of finite(3)
public domain rewrite of hypot
public domain rewrite of isinf(3)
public domain rewrite of isnan(3)
public domain rewrite of memcmp(3)
public domain rewrite of strchr(3) and strrchr(3)
public domain rewrite of strerror(3)
public domain rewrite of strstr(3)
public domain rewrite of strtol(3)
public/private key functions
pull data buffer into tmpfile
pull out the LSB of the port
pull out the MSB of the port
purposes for cert purpose checking
push back shebang for pragma may exist in next line
push back-tracker to stack
push some data through the write filter chain.
push the normal char to the output buffer
put back non-standard SNMP port
put conversion here if possible when API is updated
put it back the way it was.
put it on the result array
put parsing code here
put terminal in raw mode after flushing
put the implicit return on the really last line
put the real path into the path buffer
put the value into byref_vals instead
put these on a separate page, to avoid conflicts with other memory
putenv() doesn't handle empty value
putmbi ------ Put a multibyte intgerer in some kind of output stream I work here with a function pointer, to make it as generic as possible.
pv prints a character array as if it was a string of bcd digits.
qh newfacet_list, empty visible_list and newvertex_list
qh newvertex_list newfacet_list visible_list
qh newvertex_list, empty newfacet_list and visible_list
qh newvertex_list, newfacet_list, visible_list
qh visible_list newvertex_list newfacet_list
qh_build_withrestart duplicates next conditional
qh_detangle uses dim+1
qh_findbestfacet is not used by qhull.
qh_findbestnew calls qh_findbesthorizon
qh_initbuffers also checks
qh_initqhull_globals also checks
qh_initqhull_globals errors if Qg without Pdk/etc.
qh_initqhull_outputflags
qh_initstatistics may be called from Qhull::resetStatistics()
qh_qh freed by caller, qh_freeqhull()
qh_skipfilename is non-const
qhull errors are ignored by writing to OS-equivalent of /dev/null.
qhull errors written to stderr.
qhull expects a FILE* to write errors to.
qs6   (Quick sort function)
qsort always requires __cdels callback.
qualify the filename to prevent extraneous searches
query an agent with GET method
query an agent with GETNEXT method
query an agent with SET method
query matches native syntax
quick check if we even need to bother
quick check to see if the string might be there I realize that 'offset' is 'grapheme count offset' but will work in spite of that
quirky behavior of GPFS
quoted length of value
quoted-printable encoded string
r can be EOF or the number of items read (0 or 1)
r can be an Integer when mathn is loaded
r/w/+ is little bit more PHP-like than INV_READ/INV_WRITE and a lot of faster to type.
race condition when multiple threads are used.
raise "Failed to create socket" raise ArgumentError, "No parameters", caller
raise default handler
raise error if it's not null and cannot be ignored
raise.c: bcmath library file.
raisemod.c: bcmath library file.
rand_s() is not available with MinGW
random NFS retry error, unless during file system support  introspection, in which it actually means what it says
random/urandom equivalent on Windows
randomkit.h must be included after windows timeb.h is included.
range out of order in character class
rarely called, numpart does not count nearvertex computations
rational.c: Coded by Tadayoshi Funaba 2008-2012 This implementation is based on Keiju Ishitsuka's Rational library which is written in ruby.
ravel_multi_index implementation - see add_newdocs.py
rb_absint_singlebit_p can be used to determine required buffer size for rb_integer_pack used with INTEGER_PACK_2COMP (two's complement).
rb_cArray must be marked
rb_cloexec_dup2 succeeds as dup2.
rb_compile_warning() reports only in verbose mode
rb_econv_open set them NULL.
rb_event_flag_t events - Event(s) to listen to.
rb_fd_init allocates the memory.
rb_fd_set may re-allocates bitmap.
rb_fd_term free the memory.
rb_objspace_each_objects() is special C API to walk through Ruby object space.
rb_signal_exec runs on queued signal
rb_struct_alloc_noinit itself should not be used because rb_marshal_define_compat uses equality of allocation function
rb_thread_call_with_gvl - re-enter the Ruby world after GVL release.
rb_thread_call_without_gvl - permit concurrent/parallel execution.
rb_thread_call_without_gvl() does: (1) Check interrupts.
rb_thread_call_without_gvl2 - permit concurrent/parallel execution without interrupt process.
rb_thread_call_without_gvl2 uses 0 as interrupted.
rb_thread_call_without_gvl2() does: (1) Check interrupt and return if interrupted.
rb_thread_check_ints() check ruby's interrupts.
rb_thread_wait_fd() release GVL.
rb_time_interval() and might_mode() might convert the argument
rb_warning() reports only in verbose mode
rbuVfsRead() contains  similar logic.
rbu_control value ('x.x.')
rbu_delta() is invoked with two arguments - the original value currently stored in the target table column and the  value specified in the data_xxx table.
re-calculate the manifest location to simplify later code
re-escaping may break backref
re-index like it did before
re-integrate the deflated parts from the last pass
re-negotiation, or perhaps the SSL layer needs more packets: retry in next iteration
re-open internal file pointer just-in-time
re-open just in time for cases where our refcount reached 0 on the phar archive
re-populate after copy-on-write
re-populate entry after copy on write
re-populate with copied-on-write entry
re-read and convert again from mime_buffer.
re-register the event
re-use the same initial timeout.
reachable objects from an oldgen object should be old or (young with remember)
reachable objects from black objects should be black or grey objects
reached an OPEN_END mark, skip the n++
reached end of iteration
reached end-of-string.
read UID, GID from specialEnv
read a chunk into a bucket
read all PNG info up to image data
read all the app marks...
read and parse this file
read any remaining data, it may be omitted
read data for next iteration
read file and fill lines
read from character-based string
read in archive comment, if any
read in central directory
read in the length of the key name
read in the length of the value
read only FS/ lockless
read only funcs for iterating through queue.
read past HTTP headers
read requested data from SAPI
read script from stdin
read space left for getc()
read the conch content
read the existing conch file
read the required number of bytes
read until a boundary condition
read until we hit the position in which we were before
read values not stored in directory itself
read-only access is allowed to magic files in .phar directory
read-only across the board
read_numberlike_string: fp: FILE pointer value: Place to store the value read  Read what looks like valid numeric input and store it in a buffer for later parsing as a number.
readagain_bytes is buffered portion which is read again on next conversion.
readpartial is designed for streams such as pipe, socket, tty, etc.
reads a line the socket , returns true on success, false on error
reads an ftp response, returns true on success, false on error
readwbmp ------- Actually reads the WBMP format from an open file descriptor It goes along by returning a pointer to a WBMP struct.
readwbmp and writewbmp(stdout)
ready to do some actual de-serialization.
realloc if the estimate was way overill Arbitrary cutoff point of 4096
really close the zip will break BC :-D
really convert the utf8 string
really should not happen: We don't return a float here as that violates function contract
realpath("") returns CWD
reasonable circa 2006
rebinding to internal class is not allowed
rebuild map (just for printing)
recall how many parameters have been provided
recall that PATH_INFO won't exist
receive Server welcome message
receiver specified form for private method
recheck after argument conversion
recipcert is a CERT for one of the recipients.
recipkey specifies the private key matching recipcert, if recipcert does not include the key
recmul.c: bcmath library file.
recognized_len + readagain_len used
recompile or use 'TPn'
recompile to trace a facet
recompile to trace a vertex
record current glyph index for kerning
record the fact that this element has a wildcard character N.B.
recovery buffer, max mime pattern length
recurse through sub-elements
recurses    chain of recurse_check to catch mutual recursion Returns:      TRUE if what is matched could be empty
recursive call could loop indefinitely
recursively convert php values into xmlrpc values
recursively convert xmlrpc values into php values
redefine smaller size then default 64
redirect stdin/stdout/stderr if requested
redirect.so and installation instructions available from http://www.koehntopp.de/php.
reduce buffer memory consumption if possible, to avoid a realloc
reduce size if needed
redundant merges occur first
refer to the Sun's center or its upper limb.
reference to non-existent subpattern
references within a phar filename
refix in the next release
refuse to return an empty string just because by accident we knew of EOF in a read that returned no data
reg should have the same dimensions as data, which has an extra iMax + 1 points relative to Z.
reg+N          OLD.* value of right-most column of pTab reg+N+1        NEW.rowid reg+N+2        OLD.* value of left-most column of pTab ...
regBase is the first of an array of register that contains the data for pTab.
regBase itself holds the rowid.
regBase+1 holds the first column.
regBase+2 holds the second column, and so forth.
regOldData is zero for an INSERT.
regReturn is the number of the register holding the subroutine return address.
regcomp.c -  Onigmo (Oniguruma-mod) (regular expression library)
regcomp.c -  Oniguruma (regular expression library)
regenc.c -  Onigmo (Oniguruma-mod) (regular expression library)
regenc.c -  Oniguruma (regular expression library)
regerror.c -  Onigmo (Oniguruma-mod) (regular expression library)
regerror.c -  Oniguruma (regular expression library)
regexec.c -  Onigmo (Oniguruma-mod) (regular expression library)
regexec.c -  Oniguruma (regular expression library)
regexp used for last scan
regext.c -  Oniguruma (regular expression library)
reggnu.c -  Oniguruma (regular expression library)
region array for the mesh (was int)
register a cleanup so we clear out the SG(server_context) after each request.
register additional functions
register atexit just 1 time
register holding first column to insert
register in the persistent list etc.
register iseq as mark object
register native thread id
register our php method
register rebind procedure
register server variables
register single spl_autoload()
register system methods
register the constant
register the standard data types
register the transaction in our own data structures
register this guy so we can modify if necessary
register with C engine.
register with cancastscalarkindto
register with cancastto These lists won't be freed once created -- they become part of the data-type
registered already, so we insert that first
registers all functions in *library_functions in the function hash
registers holding insert rowid
regparse.c -  Onigmo (Oniguruma-mod) (regular expression library)
regparse.c -  Oniguruma (regular expression library)
regposerr.c - Oniguruma (regular expression library)
regposix.c - Oniguruma (regular expression library)
regsyntax.c -  Onigmo (Oniguruma-mod) (regular expression library)
regsyntax.c -  Oniguruma (regular expression library)
regtrav.c -  Oniguruma (regular expression library)
regular expression too large
regular file, check next possibility  If stat() tells us the file has zero length, report here that the file is empty, so we can skip all the work of opening and reading the file.
regversion.c -  Oniguruma (regular expression library)
reinitialize the first chunk and heap
reinstate the default tcp handler
relative extended_value don't have to be changed
relax the limit while incomplete character.
release GIL if it was taken by nditer below
release all output handlers
release current cached element
release the statement
relies on setflags order being write, align, uic
relink remaining roots into list to free
relink to top of list
reload from pointer to avoid a unnecessary stack spill with gcc
reload the rotated glyph (for bbox we needed FT_LOAD_IGNORE_TRANSFORM - bbox is rotated later)
remainder of outside set is coplanar for qh_outcoplanar
remeber the last restart time in the process memory
remember `obj' if needed.
remember control stream
remember env value forcely
remember first valid char
remember just offset, cause address
remember possible key length
remember stream position for restoration
remember the event place in the fd list and suppose next slot is free
remember this slot as free
remember we modified this variant
remember whether this entire phar was compressed with gz/bzip2
remember, illegal UTF-8
remote client disconnected
remove '..' and previous directory
remove J0_START from this boundary edge as boundary is included by the upwards slit from contour line below.
remove Proxy-Authorization header
remove all linked watchpoints, they will be dissociated from their elements
remove already sent session ID cookie
remove compression from old_flags
remove double slashes and '.'
remove duplicate spaces
remove entry from hash, error if not found
remove error handlers before destroying classes and functions, so that if handler used some class, crash would not happen
remove from angle statistics
remove last CRLF from tmp
remove leading-zero-guard
remove non-garbage from the list
remove non-persitent sdl structure
remove shutdown function
remove single watch (i.e. manual unset) or implicit removed
remove some insecure options
remove spaces at head
remove the client bit
remove the event from epoll internal queue
remove the event from port
remove the fd if it's in
remove the file created by php_stream_open_wrapper(), it is not needed since BZ2 functions failed.
remove this from the new phar
remove this from the new phar if deleted, ignore if mounted
remove underscores between digits
remove xinclude processing nodes from recursive xincludes
removed multiple segment interface
removed two unmatched facets
removes all empty text, comments and other insignoficant nodes
rename on windows will fail if newname already exists.
renamed genrand_res53() to random_random() and wrapped in python calling/return code.
render the string, offset origin to center string
renegociate connections
renegotiation rate limiting triggered
reopen file for stdout
repeat since deleted this vertex
repeat since deleted vertex
repeat until result is exhausted
repeat, deleted a neighbor
repeated subpattern is too long
repeating a DEFINE group is not allowed
replace HashTable data
replace any in-string NUL characters with spaces
replace continuation module, from output side
replace freelist with next object
replace modes not supported by fdopen and fopencookie, but supported by PHP's fread(), so that their calls won't fail
replace non ISO-2022-JP with GETA
replace numeric entities
replace the colon with the drive letter
replace the old x coord, if increasing on the right side or decreasing on the left side
replace the path info with the real path of the opened file
replace unicode code point
replace with all named entities
report errors via handler rather than stderr
represents Nothing of VB.NET or VB.
represents VT_ARRAY type constant.
represents VT_BOOL type constant.
represents VT_BSTR type constant.
represents VT_BYREF type constant.
represents VT_CY type constant.
represents VT_DATE type constant.
represents VT_DISPATCH type constant.
represents VT_EMPTY OLE object.
represents VT_EMPTY type constant.
represents VT_ERROR type constant.
represents VT_ERROR variant with DISP_E_PARAMNOTFOUND.
represents VT_I1 type constant.
represents VT_I2 type constant.
represents VT_I4 type constant.
represents VT_I8 type constant.
represents VT_INT type constant.
represents VT_NULL OLE object.
represents VT_NULL type constant.
represents VT_PTR type constant.
represents VT_R4 type constant.
represents VT_R8 type constant.
represents VT_UI1 type constant.
represents VT_UI2 type constant.
represents VT_UI4 type constant.
represents VT_UI8 type constant.
represents VT_UINT type constant.
represents VT_UNKNOWN type constant.
represents VT_USERDEFINED type constant.
represents VT_VARIANT type constant.
request startup only after we've done all we can to get path_translated
request_slowlog_timeout
requested method not found"
require "coverage" 2.
require "my-library.rb" require "db-driver"  Any constants or globals within the loaded source file will be available in the calling program's global namespace.
require or load Ruby source file 4.
required from vm_insnhelper.c
res might be negative because the table is empty.
rescan tricoplanar facets with owner
rescue Errno::EIO # GNU/Linux raises EIO.
rescue block can't tail call because of errinfo
reserve space for arguments, local and temorary variables
reserve workspace for building each individual field
reserved for extensions
reset GC_ADDRESS() and keep GC_BLACK
reset all bind stuff to a normal state...
reset all fields to default
reset all fields to default when not set
reset bits from "0" to "end"
reset bits from "bit" to "end"
reset bits from "bit" to ZEND_MM_BITSET_LEN-1
reset bits from 0 to "bit"
reset connection if it's broken
reset define-list for refcursors
reset descriptor's length
reset errno and errstr
reset initial site for second pass
reset internal php_getopt state
reset length for all piecewise columns
reset libxml generic error handling
reset rfc1867 callbacks
reset size in case ecalloc() fails
reset so we can copy the compressed data over
reset the array_repr function to built-in
reset these because despite the error the filter may be used again
resize buffer if it's much larger than the result.
resize output buffer and reassemble block
resolve Fortran SGEMV from Accelerate
resolve cblas_sgemm from Accelerate
resolve cblas_sgemv from Accelerate
resolve class name ASAP for order-independence
resolve class references
resolve nth opline breakpoints
resolve parameter name to rewritten name
resolve relative path
respect inheritance, don't use spl_ce_RecursiveIterator
response is ecalloc()d in Ack() itself and efree()d here because the content is in *error_message now
restore POSTPONED_JOB mask
restore `tracing' context.
restore after zeroing
restore compiler and scanner global states
restore error information
restore error messages
restore error reporting
restore forced restart request
restore machine stack
restore previous error_reporting value
restore terminal mode
restore terminal mode and signal handler
restore the fcall info and cache
restore the missing neighbors
restore the original handler
restore the original locking context and pMethod then close it
restore the users auto-detect-line-endings setting
restore thread context
restrict to the server/db in the .ini if in safe mode
restricted ASYNC_SAFE
restrictions (1) and (2)
result  : The array into which the result is computed.
result IS_BOOL, it does't have to be destroyed
result from dump is ASCII
result goes to TMP_REG2, so put result can use TMP_REG1 and TMP_REG3.
result undefined(NaN)
result: 0:success -1:failure
result_dtype : The dtype the inner loop expects for the result.
ret can be 0 when error
ret is a contiguous array of intp type to hold returned indexes
retain backwards compat with OCI8 1.4
retrieve a phar_entry_info's current file pointer for reading contents
retrieve information on a file contained within a phar, or null if it ain't there
retrieve kerning distance and move pen position
retrieve last replacer
retrieve requested file within phar
retrieve the cached session pool
retrieving a file defaults to within the current directory, so use this if possible
retrieving a file within the current directory, so use this if possible
retry after converting nil to VT_EMPTY
retry to call args by value
return 0 if job buffer is full
return 0 if not found.
return 0 if we couldn't read enough data
return 0 removes the session
return 0 which means to OpenSSL that the session is still valid (since we created Ruby Session object) and was not freed by us with SSL_SESSION_free().
return 1 if something read, else 0
return FALSE if already remembered
return JS objects as PHP objects by default
return Py_True if this data-type descriptor has native byteorder if no fields are defined  or if all sub-fields have native-byteorder if fields are defined
return TRUE if the frame is finished
return a PHP control object
return a relative file path if for any reason we cannot cannot getcwd() and the requested, relatively referenced file is accessible
return a string matching a given xmlrpc type
return a tuple of (callable object, args, state).
return an unit of an incomplete character just before EOF
return array with the text's bounding box
return byte length of converted char to lower
return byte length of converted to lower char
return class name and "::" or "".
return code (ignored)
return coderange without scan
return data as a dynamic pointer
return driver prototype
return empty string to denote no match found
return entire buffer as a partial line
return fields if op is a string index
return if parameter is missing
return if stack is empty
return info as a struct, to make expansion easier
return level closest to p1
return nil if DB does not exist
return nil if DB not exist
return nil when EOFError
return offset of next part of the string
return old context, so caller can restore it when they're done
return our new hash value
return pointer p to cache, nelem is number of elements of the cache bucket size (1 or sizeof(npy_intp)) of the block pointed too
return resource when executed
return same special value as for OPEN_END
return sec in user time
return signal mask to previous state
return string to free storage
return the allocated string, not a duplicate
return the completed message digest:
return the days after March 21
return the module configuration
return the next free module number
return the number of affected rows
return the original string
return to NORMAL mode
return to central directory parsing
return to the illegal value itself
return true if number and no extra non-whitespace chracters after
return value accumulator
return value form SQLITE_FCNTL_PRAGMA
return value of parser routine
return value should be a string
return whatever type we got back from the callback: let DB handle conversion
return with error if the delimiter string (if any) was not found, we could not completely fill the read buffer with maxlen bytes and we don't know we've reached end of file.
return xmlrpc type of a php value
return_value is IS_NULL for no more data and an array for data.
returned pointer is in ``name'' or NULL.
returning data as a string
returns     : True_ if found , False_ if not in queue.
returns     : True_ if init successful else False_  comments    :
returns     : True_ if sort succeeded.
returns     : True_ if success else False_ if unable to push data.
returns     : boolean - True_ is at head else False_  comments    :
returns     : integer index into array of node pointers, or -1 if not found.
returns     : pointer to data element of new element or NULL if end of the queue.
returns     : pointer to data or NULL if could not find it or could not sort queue.
returns -1 if not present
returns -1, if not in set or maxsize wrong notes: set may be NULL and may contain nulls.
returns 0 for ok, 1 for error
returns 1 for a builtin type and 2 for a user-defined data-type descriptor return 0 if neither (i.e. it's a copy of one)
returns ID if it's an already interned symbol, or 0 with setting local name in String to *namep.
returns NPY_OBJECT_DTYPE_FLAGS if this data-type has an object portion used when setting the state because hasobject is not stored.
returns TRUE if a is an ID separator FALSE otherwise
returns TRUE if the preceding system call was interrupted so we can continue.
returns a documentation string, or empty string
returns a failure code and creates an exception if there was an error
returns a mask of events
returns a new XMLRPC_VALUE representing a soap fault, comprised of a struct with four keys.
returns a new string that must be freed
returns a new string, possibly decoded
returns a pointer to the byte after the last valid character in out
returns an Array-Scalar Object of the type of arr from the given pointer to memory -- main Scalar creation function default new method calls this.
returns an empty array on interrupt
returns false otherwise.
returns handlers buffer
returns localtime time object
returns nil on timeout
returns non-zero if +key+ was contained.
returns number of chars needed to represent vp in specified format.
returns out of this function
returns pointer to storage
returns true if SOCK_CLOEXEC is supported
returns type of OLE class.
retval ought to contain a ZVAL_LONG by now (the result of a comparison, i.e. most likely -1, 0, or 1) I suppose we could accept any scalar return type, though.
reuse the same op_array structure
rfc822_parse_adrlist() modifies passed string.
ridiculous size not allowed for index.php startup filename
right end of current region
right now this function is used for non static method lookup too
right-adjusting blank padding
right-adjusting zero padding
right-hand side of IN is SELECT
ripemd-160 initialization constants
ripper specific tokens
rmzero.c: bcmath library file.
roll:     A rule for how to treat non-business day dates.
rollback any outstanding work
rollback function check
rollback outstanding transactions
room for some optimation here if we stop after a specific # of elements.
root directory requested
root has special perms on plain_wrapper But we don't know about root under Netware
root path doesn't need short name expansion
root user should not do that
rotate bounding rectangle (at 0, 0)
rough mapping of xmlrpc fault codes to soap codes
round to next pixel row
round up for wide char
round up to power-of-two
round up to prime number
rounding position too left(large).
rounding position too right(small).
rounding values: same as FLT_ROUNDS
routines as they walk the parse tree to make database references explicit.
routines to handle JPEG data
rowid field of the current entry.
rownumber will hold the number of rows over which the aggregate was performed.
rows selected by each column
rshift1 - DON'T IMPL.
rt.c: bcmath library file.
ruby_engine should not contain a space
ruby_options() sometimes returns a special value to indicate this process should immediately exit.
ruby_thread_has_gvl_p - check if current native thread has GVL.
ruby_vm_event_flags management
rule #1 checks out ok, allow the function call
run code from command line
run data/file object's finalizers
run event loop forever
run through the whole string, converting as we go
running data/file finalizers are part of garbage collection
running position of non-rotated string
running position of rotated string
runtime failure is OK
rve - digits may be 0
s and e are integers modulo 360 (degrees), with 0 degrees being the rightmost extreme and degrees changing clockwise.
s is numeric, f is not
s is the default suffix
s may not be a valid pointer if OP_FINISH.
s.key.num contains one value and s.next "points" to the rest of the list, as described below.
s.shutdown(Socket::SHUT_RD) disallows further read.
s.shutdown(Socket::SHUT_RDWR) disallows further read and write.
s.shutdown(Socket::SHUT_WR) disallows further write.
s/l - store/load (1 bit) u/s - signed/unsigned (1 bit) w/b/h/N - word/byte/half/NOT allowed (2 bit) It contans 16 items, but not all are different.
s1 is of length len1 s2 is of length len2 If they are NULL terminated, then stop comparison.
sa_family_t is unsigned
saddle zone information for the mesh
safe-level: 0 - strings from streams/environment/ARGV are tainted (default) 1 - no dangerous operation by tainted value
same as IO::EAGAINWaitReadable
same as IO::EAGAINWaitWritable
same as TK_BITAND, in1, in2, out3
same as TK_BITNOT, in1, out2
same as TK_BITOR, in1, in2, out3
same as TK_CONCAT, in1, in2, out3
same as TK_EQ, jump, in1, in3
same as TK_ESCAPE, jump
same as TK_FLOAT, out2
same as TK_FLOAT, out2-prerelease
same as TK_GE, jump, in1, in3
same as TK_GT, jump, in1, in3
same as TK_ISNULL, jump, in1
same as TK_LE, jump, in1, in3
same as TK_LSHIFT, in1, in2, out3
same as TK_LT, jump, in1, in3
same as TK_MINUS, in1, in2, out3
same as TK_NE, jump, in1, in3
same as TK_NOT, in1, out2
same as TK_NOTNULL, jump, in1
same as TK_PLUS, in1, in2, out3
same as TK_RSHIFT, in1, in2, out3
same as TK_SLASH, in1, in2, out3
same as TK_STAR, in1, in2, out3
same as TK_STRING, out2
same as TK_STRING, out2-prerelease
same as TK_TO_BLOB, in1
same as TK_TO_INT, in1
same as TK_TO_NUMERIC
same as TK_TO_NUMERIC, in1
same as TK_TO_REAL, in1
same as TK_TO_TEXT, in1
same as rb_protect if set rollback_func to NULL
same can't be horizon facet for neighbor
same code for error exit and normal return
same opcode and same var as this opcode
same return value 4 used below
same width, just copy it
samecycle neighbors deleted
sample transcode_loop implementation in byte-by-byte stream style
sanitize backslashes with forwardslashes
sanity check for the case where the constant is already defined
sanity check parameter number range
sanity check the cipher
sanity check the stream: it can be either read-only or write-only
sanity check we must use a value between MIN_ACCEL_FILES and MAX_ACCEL_FILES
sanity check we must use at least 8 MB
sanity checks for include/require.
sapi has not started, output to stdout instead of fcgi
sapi has started which means everyhting must be send through fcgi
sapi_update_response_code doesn't free the status line if the code didn't change
sas: Works for me on Linux 2.0.36 and FreeBSD 3.0-current
save  oldfib's machine stack
save absolute path in the cache
save away the results
save for potential restore on error
save in cache any value we found
save modified files to the zip
save pointer of an allocatable array
save stack, linking frames in reverse order
save start of file within tar
save the encoder, decoder state and the pointer
save the new offset location within ufp
save this method in the cache
save_hwm_offset   the hwm forward reference offset at the start of the group Returns:     nothing
saves one function call if zend_execute_internal is not used
say "no" to other stream forms
scale G distances by this much
scale R distances by this much
scale all numbers before output
scale and sumsq must be supplied in SCALE and SUMSQ and scl and smsq are overwritten on SCALE and SUMSQ respectively.
scale, round and offset brect
scales a complex vector by a real constant.
scales a vector by a constant.
scan coderange and return the result
scan over it and pull out the certs
scan through modifiers
scan through our columns for a piecewise column with a matching handle
scanf.c -- This file contains the base code which implements sscanf and by extension fscanf.
schame.table should be "schame"."table"
sched_getaffinity() returns EINVAL if cpuset bitmap is smaller than kernel internal bitmap.
scope argument was given
script is not going to be saved in SHM
script_path_translated being set is a good indication that we are running in a cgi environment, since it is always null otherwise.
sdbm - ndbm work-alike hashed database library based on Per-Aake Larson's Dynamic Hashing algorithms.
search active scope if begins with period
search and get in stack
search and get in stack (non greedy)
search backwards from end of function
search common stack point
search for breakpoints
search for delimiter, but skip buffered_len (the number of bytes buffered before this loop iteration), as they have already been searched for the delimiter.
search for the end of the boundary
search for the file this metadata entry references
search for the first non-digit character
search for the key in the page.
search in the timeout queue for the next timer to trigger
search key and new file ID
search method entry without the method cache.
search next valid char.
search start position
search start-position only
search str-position only
search through the manifest of files, and if we have an exact match, it's a file
searching for UTF-32 specific byte orders, so this will do
second immediate operand
second pass actually computes and stores the point
secondary hash (after G.
seconds since Unix epoch
sections_str DOES start with , and SPACES are NOT allowed in names
security is 0 here so that we can get a better error message than "entry doesn't exist"
security.limit_extensions
see FORMATBUFLEN in unicodeobject.c
see Process.setpriority
see Process.setrlimit
see Regexp.options and Regexp.new
see XML_ELEM_OUTPUT_OPTIONS RESULT void NOTES SEE ALSO xml_elem_serialize_to_string () xml_elem_parse_buf () SOURCE
see XML_ELEM_OUTPUT_OPTIONS buf_len - length of returned buffer, if not null.
see Zend/tests/generators/aborted_yield_during_new.phpt
see bug #15471 (old BTS)
see bug #28739 AND #33295  Following defines will assist in backup / restore values.
see code of vm_analysis_register()
see getput_arg below.
see http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_400.htm
see https://android.googlesource.com/platform/build/+/master/tools/zipalign/ZipAlign.cpp
see if it has TypeInfo available
see if it has an id (key).
see if it makes sense to use simple division to round the value
see if the block we need is already in memory.
see if this is a closure
see if we encountered an error
see if we have enough room now
see libqhull.h for data structures, macros, and user-callable functions.
see qh_initthresholds()
see the system getrlimit(2) manual for details.
see user_eg.c, unix.c, and qhull_interface.cpp for examples.
see vm_insnhelper.h for the values
see: https://bugs.ruby-lang.org/issues/8484
see: qh_call_qhull_once()
see: qh_restore_qhull()
see: qh_save_qhull(), UsingLibQhull
see: tests/classes/__call_004.phpt
seed segment (popped 1st)
seek before start of file on my machine
seek to central directory
seek to just past the path separator
seek to max comment length + end of central directory record
seek to start of internal file and read it
seems libedit doesn't take care of rl_initialize in rl_redisplay see bug #72538
seems to allow surrogate characters, then
seems to be the convention in this lib to return false instead of null on bad parameter types, except on constructors and factory methods
segdir.leaves_end_block
segment of far address
seldom used, qh_findbestnew will retest all facets
select the matching basename by fnmatch
select the page pointer (by looking at sbit) and insert
select() may have set it to something else, in which case we leave it alone, so this branch does nothing
selectNodeIsConstant will disallow
selected properties of GET_THREAD() (see cont_save_thread)
self must be kind of a specified form for protected method
self will be searched in eval
semi-arbitrary, "sensible default"
send a signal to intent that a target thread return from blocking syscall.
send empty packet for eof
send headers, output file contents
send message contents in 1024 chunks
send the AUTH TLS request name
send the site command
send/recv family on windows expects int
send_long_data() not called, send empty string
sending SIGINT then provides a decent way of shutting down the server
sending SIGINT to the worker threads to cancel them is job of the application
sends an ftp command, returns true on success, false on error.
separate freeing to not dtor the symtable too, just the container zval...
separates directory parts in path
separator may contain multiple separator chars.
separator was whitespace wildcard that didn't match
sequence is too large
sequences We use php_str_to_str() and not php_str_replace_in_subject(), since the latter uses ZVAL as it's parameters
sequences are properly displayed in the message body.
serch MIME charset name
serial type of first record field
server info arguments
server related methods *
session_adapt_url() may be used to set Session ID to target url without starting "URL-Rewriter" output handler.
set 0 for consistency of allocated_size/allocations
set a given value to a particular type.
set a lower artificial limit on this in the interest of security and resource friendliness 255 arguments should be more than enough.
set actual exponent size.
set age to RVALUE_OLD_AGE
set age to RVALUE_OLD_AGE - 1
set all arguments to ARGV
set all attributes of mapiter to zero
set all fd to -1 in order to ensure it's not set
set bits from "0" to "end"
set bits from "bit" to "end"
set bits from "bit" to ZEND_MM_BITSET_LEN-1
set bits from 0 to "bit"
set by qh_joggleinput
set charset for old servers
set data connection protection level
set default timeout values
set derived values in qh_initqhull_globals
set effective allocation
set exec if present on command line
set execution context
set first carry be zero
set flag for new, improved array of objects list
set flag for new, improved array of objects mailbox list
set flag for normal, old mailbox list
set flags from command line
set hash code range bound
set hi 16 bit if needed.
set id (key) if one was found.
set iff _offset is in fact correct
set leading-zero-guard
set memory status bit flags.
set new location of file contents
set new value (reallocate if needed -- see f2py generated code for more details )
set option and push recover option
set protection buffersize to zero
set remote flag to stop service shutting down upon quit
set resume position if applicable
set rotation transform
set runnable if th was slept.
set script with -x option
set server handle into service handle
set sign for everything, including 0's and NaNs
set signalled only when not interactive
set skip map for Boyer-Moor search
set skip map for Boyer-Moore search
set skip map for Sunday's quick search
set some required options
set some required request hoojum
set special stream stuff (enforce exact mode)
set the __exposed flag.
set the callback for the GET_ACL function
set the callback for the GET_QUOTA function
set the callback for the GET_QUOTAROOT function
set the connection to be ascii
set the connection to be binary
set the dataptr from its current coordinates
set the ec group curve name
set the error anyway, in case in the future we decide not to throw an error.
set the filter property, this will be used during cleanup
set the incoming values for the calendar
set the individual row_pointers to point at the correct offsets
set the manifest meta-data: 4: uncompressed filesize 4: creation timestamp 4: compressed filesize 4: crc32 4: flags 4: metadata-len +: metadata
set the mask of hint flags for cursor pCsr.
set the maximum number of bytes we're allowed to read from buffer
set the pixel at (x,y) and its 4-connected neighbors with the same pixel value to the new pixel value nc (new color).
set the return value for pclose
set the server handle into service handle
set the thumbnail stuff to nothing so we can test to see if they get set up
set this link pointer to NULL in the transaction
set this slot as free to avoid search on next alloc
set this to 1 so that we know, it was set through this method.
set to largest number
set to the operand type for jump/ret/call
set up HOME and USER anyway
set up error in case error handler is interested
set up hash pointers table
set up hash values table
set up the cursor library, if needed, or if configured explicitly
set up the passive connection
set whole-archive compression and type from parameter
set wrapper data to be a reference to our object
setMaster  When PagerCommitPhaseOne() is called to commit a transaction, it may (or may not) specify a master-journal name to be written into the  journal file before it is synced to disk.
set_ssl_option() function updates this array.
setjmp() must be called in every non-callback function that calls a PNG-reading libpng function
sets default for file streams to binary
sets the ftp transfer type
setting UTF is disabled by the application
setting string is too short
setting string is too short for its type
setup before-GC parameter
setup ep with managing data
setup free-able page counts
setup heap_pages_sorted
setup iseq first (before invoking GC)
setup remote server if necessary
setup some data to pass to the callback function
setup standard CGI variables
setup string-variable and serialize
setup the function table
setup the version number: version 1
setup thread environment
setup_tree does the following work.
several Unix platforms support file descriptors bigger than FD_SETSIZE in select(2) system call.
sha512 crypt has the maximal salt length of 123 characters
shared can just be set because we always have an exclusive
shared memory and mmap are enabled
shared memory is disabled
shared mode is known to be bad for PHP
shared_free must be valid before we call zend_shared_alloc() - make it temporarily point to a local variable
sharing globals is *evil*
shell:: contains the path to the login shell of the user as a String.
shift by negative number
shift the existing data if necessary
shift the extra to the front
shift then add to get rid of overflow
shift/reduce error token
shm_open sets FD_CLOEXEC automatically.
short (elt-only) caching
shortcut - if no Ts, nothing to do
shortcut for empty string
shortcut for most common case
should NEVER generate this code
should be 8 byte aligned
should be ASCII compatible
should be ELEM_ARRAY, but there is an extra level.
should be NUL-terminated if +len+ is negative.
should be NUL-terminated.
should be a multiple of 3
should be a power of 2
should be a stream - try and dup the descriptor
should be after 0x8 because swedish_ci is the default collation
should be after 0x9 because general_ci is the default collation
should be always readable if not NULL
should be before push mem-end.
should be big enough for most date formats and numbers
should be done in the created thread
should be optimized away
should be pattern encoding.
should be same fields with rb_method_iseq_struct
should cause ArgumentError
should do something like above code, but currently ruby does not know
should have allocated TRAVERSE_FOR_ENTITIES_EXPAND_SIZE(olden)
should have filtered bar, but not foo
should include the header
should never be called for builtin-types unless there is a reference-count problem
should never be happen
should not be possible
should not be reached
should not call is_pipe for socket
should not fail except EBADF.
should not finalize fptr because another thread may be reading it
should not overflow long type
should not propagate to meta-meta-class, and so on
should only happen if one does weird stuff with views or external buffers.
should raise exception
should raise exception for consistency
should return NULL, but for BC we return ""
should return pointer suitable for ruby_xfree
should skip temporary variable
shouldn't happen either
shouldn't happen, but let's be ready for it
show catch table information
show local table information
show only the basename of the path.
show the original object, not coerced object
shrink the allocated block
shutdown_executor() takes care of its own bailout handling
sigh, breaking the encapsulation, there aren't any functions manipulating the llist at the place of the zend_llist_position
signal handler should be inherited during exec.
signal necessity to decref...
signal received in syscall
signal that we're cleaning up
signal_enque queues signal for execution 2.
signature algorithm constants
signature checked out, let's ensure this is the last file in the phar
signed value of pivot, and remainder of row
sigtimedwait and sigwaitinfo can return 0 on success on some platforms, e.g. NetBSD
silence erroneous "gcc -Wall" warning.
silence unused warning
silently expunge recycle stream
silently fail, there is nothing to copy
silently ignore mounted entries
silently skip any files that would be added to the magic .phar directory
silly namespace stuff
simple checks for the mailto address
simple kinsoku rules  return 1 means no folding
simple open addressing with quadratic probing.
simple statement for CRAY J916
simple stores are atomic
simple way to get necessary buffer of required size
simplestring is, as the name implies, a simple API for dealing with C strings.
simply skipping this new line
simply truncate arguments
simulate flock by locking a range on the file
simulate multiple hosts by creating unique hostid file paths
simulate output of libmysql
simulate the append mode by fseeking to the end of the file this introduces a potential race-condition, but it is the best we can do, though
since 5.0.3, the default for this option is 0 if not specified.
since Net-SNMP library requires 'udp6:' prefix for all IPv6 addresses (in FQDN form too) we need to perform possible name resolution before running any SNMP queries
since Zend auto allocates space for vars, this is no
since calling malloc() from within a signal handler is not portable, pre-allocate a few records for recording signals
since the user stream has no way of setting the eof flag directly, we need to ask it if we hit eof
since there are places where (v)spprintf called without checking for null, a bit of defensive coding here
since tm_wday starts from 0 whereas ICU WDAY start from 1
since tm_year is years from 1900
since zend_llist_del_element only remove one matched item once, we should remove them by ourself
single byte character
single byte,        ignore case
single level case just uses zone_crosser
single pattern matching
single precision float in VAX byte-order
single precision float in native format
single precision float in network byte-order
single record: (PK fields for DELETE, PK and modified fields for UPDATE, full record for INSERT).
single- and double-quoted strings
singleton at some position except at start strip off the singleton and rest of the loc_name
singleton at start of script, region , variant etc.
singleton found but not a private subtag , hence check further in the string for the private subtag
site needing START_ROW mark
site points to the data arrays in the arrays pointed to by xpa, ypa, zpa, and mpa, so we include them in the structure so we can ensure they are not deleted until we have finished using them.
size after value/piece has been read
size buffer down to actual length
size of constant database
size of converted field or string
size of data in bytes
size of db file in pages
size of each entry in the table
size of each fragment
size of entire array in bytes
size of fragments (number of pointers)
size should be between HT_MIN_SIZE and HT_MAX_SIZE
size: Py_ssize_t Size of buffer in bytes.
sizeConsumedOnCurrentLine is accumulation of the dimensions and margin of all the children on the current line.
sizeConsumedOnCurrentLine is negative which means the node will allocate 0 pixels for its content.
sizeof(MemPage)+sizeof(PgHdr)
sjis.c -  Onigmo (Oniguruma-mod) (regular expression library)
sjis.c -  Oniguruma (regular expression library)
skip "last day of" or "first day of"
skip "new Exception()"
skip 03A2, invalid char between GREEK CAPITAL LETTERS
skip all leading spaces
skip all private and protected properties
skip allocated blocks
skip already copied 0xFF byte
skip any other marker silently.
skip continuation bytes
skip current call region
skip debug_backtrace()
skip empty live range
skip facets that are too far from point
skip failed finalizer
skip first entry since it has a , or paren
skip forwarding spaces
skip global/file headers (pax)
skip header, start decode
skip hooks because this thread doing INTERNAL_EVENT
skip if c is included in the bitset
skip include directories
skip internal handler
skip leading newlines
skip leading newlines and spaces
skip long name conversion if path contains wildcard characters
skip next byte (newline)
skip non-significant digits
skip non-significant significand digits (increase exponent by d to shift decimal left)
skip non-valid multibyte characters
skip over leading zeros
skip over the "227 Some message " part
skip over the host ip, to get the port
skip over the rest and go directly to additional records
skip past protocol and :/, but handle windows correctly
skip possible breakpoints
skip rest of preamble
skip search for wrap members
skip some predefined headers
skip special constants
skip special methods.
skip symbols which is in already checked objects
skip symlink filename - we may add this support in later
skip the first few zeros
skip unimportant stuff
skip unknown characters and whitespace
skip version made by/needed
skipheader ---------- Skips the ExtHeader.
skipping the padded spaces
sljit_set_label is clever enough to do nothing if either the jump or the label is NULL.
slotval now holds whatever some racing writer put there.
slow, would benefit from a struct key hash.
small files not worth the system call
snprintf should be the only externally visible item.
so any allocation of ops that were NULL, or any temporary copying due to casting/byte order/alignment can be done now using a memory layout matching the iterator.
so can index -MAXJSAMPLE ..
so don't accept the 'l' modifier
so newtcb will be memory leaks.
so next time we won't get an error
so point to rightmost pixel
so that entry is created in realpath cache
so that other process won't try to force while we are busy cleaning up
so we don't call the same callbacks ever again
so we don't do this when the string is sufficiently long.
so we don't get warnings under debug
so we know what to cleanup
so, if we hit a 42P05 we deallocate it and retry ONCE (thies 2005.12.15)
soap_call_function_handler should be of type struct _zend_function, not (*handle_function_call).
sockaddr is specified as an array or a string.
sockaddr means struct sockaddr which can be used for connect(2), etc.
socket option for IPv4 multicast is bit confusing.
socktype is specified as an integer to specify the socket type such as Socket::SOCK_STREAM.
softmagic - interpret variable magic from MAGIC
softmagic - lookup one file in parsed, in-memory copy of database Passed the name and FILE * of one file to be typed.
sol_socket options and general case
some Windows' errno have 5 digits.
some broken servers do not have script_filename or argv0 an example, IIS configured in some ways.
some compilers complain if there is no return statement,
some defines for the different JPEG block types
some drivers might need to describe the columns now
some error, return original
some files have their values in other parts of the file
some headers may occur more than once, therefor we need to remake the string into an array
some helpful macros to find points relative to a given directed edge -- points are designated 0, 1, 2, 3 CCW around zone with 0 and 1 the endpoints of the current edge
some interrupt needs thread switching/invoke handlers, and so on.
some kind of overflow happened
some leading directories may be unaccessable
some prototypes for local functions
some records are fetched already, shut down further lookup
some schemas allow the host to be empty
some servers don't open a ftp-data connection if the directory is empty
some software does not count the length bytes of COM section
some tar programs store directories with trailing slash
some zip-files have different values in local and global headers for the bitflags
somebody registered a zone first
somehow some gcc release builds will play a bit around with order in combination with setjmp..., hence volatile
someone else has the lock when we are in NO_LOCK
someone else might have it reserved
someone needs to make this look more like stream_socket_select
something fishy, but allow it to come back as binary
something to hold errors
something went terribly awry, unless during file system support  introspection, in which it actually means what it says
something went wrong.
sometimes we have to create a new copy of the array in order to get the right orientation and because we can't just re-use the buffer with the data in the order it is in.
sometimes we may need to free 'node' variable
sort right side first
sort the array of kths so the partitions will not trample on each other
sort the table by oldfd: O(n log n)
source and destination must both be WITHOUT ROWID or not
source is palette based
source may be either an instance of IO or an object that responds to to_str.
source_buffer should be a string or nil.
source_string is assumed as a part of source.
sources for mcrypt_create_iv
space allocated at zToken
space allocated to zToken buffer
space and POSIX space are the same.
space determined at run time
space for 0x hex-prefix, hexadecimal's 1.
space if previous printed
space in the beginning means same header
space padding, the default
space, open, close, NullS
sparc 32 does not support SLJIT_KEEP_FLAGS.
special ascii to symbol
special case - speeding up
special case -- power of FLT_RADIX to be
special case for Jewish calendar
special case for trailing space
special case for when root element is not an array
special case watchpoints as they aren't on ptr but on ptr + HT_WATCH_OFFSET
special case, perform operations on result
special case: assign to aset or attrset
special case: value near underflow-to-zero
special colours for gd
special const is not markable
special handling for zero-size allocation
special symbol to ascii
special treatment for US-ASCII and UTF-8
specified drive letter, and full path
specified drive, but not full path
specified full path, but not drive letter nor UNC
specified, it means the path referred to a directory.
specify array kids type and array size.
spent a frustrating day finding this out.
spit out the first library error message, at least
split and decode the query
split archives not handled
split the current page
split up input parameter
sq_concat is handled by nb_add
sql variables union used for convert and binding input variables
sqlite3AssertMayAbort() logic
sqlite3BtreeParseCellPtr() uses getVarint32() to extract the payload size, so it is impossible for payloadSize64 to be larger than 32 bits.
sqlite3CompareAffinity() only returns TEXT if one side or the other has no affinity and the other side is TEXT.
sqlite3ExprDelete() specifically skips the recursive delete of pLeft on TK_SELECT_COLUMN nodes.
sqlite3FkActions()  - Code triggers for ON UPDATE/ON DELETE actions.
sqlite3FkDelete()   - Delete an FKey structure.
sqlite3FkOldmask()  - Query for the set of required old.* columns.
sqlite3Fts5ParserFTS5TOKENTYPE     is the data type used for minor type for terminal symbols.
sqlite3GetFuncCollSeq() might be called
sqlite3GetVdbe cannot fail: VDBE already allocated
sqlite3GetVdbe() has always been previously called
sqlite3LocateCollSeq() invokes the collation factory if necessary and generates an error message if the collating sequence cannot be found.
sqlite3MallocAllow() decrements it.
sqlite3MallocDisallow() increments the following counter.
sqlite3MemdebugHasType() is intended for use inside assert() statements.
sqlite3MemdebugHasType() returns true if any of the bits in its second argument match the type set by the previous sqlite3MemdebugSetType().
sqlite3MemdebugNoType() returns true if none of the bits in its second argument match the type set by the previous sqlite3MemdebugSetType().
sqlite3MemdebugSetType() sets the "type" of an allocation to one of the MEMTYPE_* macros defined below.
sqlite3OsRead() return code
sqlite3ParserTOKENTYPE     is the data type used for minor tokens given  directly to the parser from the tokenizer.
sqlite3ParserTOKENTYPE     is the data type used for minor type for terminal symbols.
sqlite3SafetyCheckOk() requires that the db pointer be valid for use.
sqlite3SafetyCheckSickOrOk() allows a db pointer that failed to open properly and is not fit for general use but which can be used as an argument to sqlite3_errmsg() or sqlite3_close().
sqlite3SelectDup() is sometimes called with a NULL argument.
sqlite3SelectExpand() called on this
sqlite3SelectNew() guarantees this
sqlite3SelectPrep() will invoke both sqlite3SelectExpand() and this routine in the correct order.
sqlite3StartTable() gets called first to get things going.
sqlite3VbeCursorRestore() can only fail if the record has been deleted out from under the cursor.
sqlite3VdbeSetColName() installs column names as UTF8 strings so there is no way for sqlite3_column_name() to fail.
sqlite3VdbeSorterClose()      Close the VdbeSorter object and reclaim all resources.
sqlite3VdbeSorterCompare()    Compare the binary blob for the row currently under the read cursor against another binary blob X and report if X is strictly less than the read cursor.
sqlite3VdbeSorterNext()       Advance the read cursor to the next sorted element.
sqlite3VdbeSorterReset()      Refurbish the VdbeSorter for reuse.
sqlite3VdbeSorterRowkey()     Return the complete binary blob for the row currently under the read cursor.
sqlite3VdbeSorterWrite()      Add a single new row to the VdbeSorter object.
sqlite3WalCloseSnapshot() closes the transaction and releases the lock.
sqlite3WalOpenSnapshot gets a read lock and preserves the current state even if the other threads or processes write to or checkpoint the WAL.
sqlite3_backup.pDestDb must be set to 0.
sqlite3_bind_  ***************************  Routines used to attach values to wildcards in a compiled SQL statement.
sqlite3_changegroup handle.
sqlite3_column_  ******************************* The following routines are used to access elements of the current row in the result set.
sqlite3_config() does not allow otherwise
sqlite3_config() shall return SQLITE_MISUSE if it is invoked while the SQLite library is in use.
sqlite3_create_collation only
sqlite3_finalize() return code
sqlite3_int64, sqlite3_int64
sqlite3_io_methods object name
sqlite3_log() must render into a static buffer.
sqlite3_mutex_methods*
sqlite3_pcache Methods
sqlite3_pcache_methods2*
sqlite3_reset() return code
sqlite3_result_  ******************************* The following routines are used by user-defined functions to specify the function result.
sqlite3_snprintf() works like snprintf() except that it ignores the current locale settings.
sqlite3_step() has another row ready
sqlite3_step() has finished executing
sqlite3_step() is called again to retrieve the next row of data.
sqlite3_step() should not be called again on the VM.
sqlite3_step() verifies this
sqlite3_test_control(BENIGN_MALLOC_HOOKS, xBegin, xEnd)  Register hooks to call to indicate which malloc() failures  are benign.
sqlite3_test_control(BITVEC_TEST, size, program)  Run a test against a Bitvec object of size.
sqlite3_test_control(FAULT_INSTALL, xCallback)  Arrange to invoke xCallback() whenever sqlite3FaultSim() is called, if xCallback is not NULL.
sqlite3_test_control(SQLITE_TESTCTRL_ALWAYS, int X)  This action provides a run-time test to see how the ALWAYS and NEVER macros were defined at compile-time.
sqlite3_test_control(SQLITE_TESTCTRL_ASSERT, int X)  This action provides a run-time test to see whether or not assert() was enabled at compile-time.
sqlite3_test_control(SQLITE_TESTCTRL_ISKEYWORD, const char *zWord)  If zWord is a keyword recognized by the parser, then return the number of keywords.
sqlite3_test_control(SQLITE_TESTCTRL_OPTIMIZATIONS, sqlite3 *db, int N)  Enable or disable various optimizations for testing purposes.
sqlite3_test_control(SQLITE_TESTCTRL_RESERVE, sqlite3 *db, int N)  Set the nReserve size to N for the main database on the database connection db.
sqlite3_tokenizer is used to define a particular tokenizer, perhaps including customization information defined at creation time.
sqlite3_tokenizer_cursor is generated by a tokenizer to generate tokens from a particular input.
sqlite3_user_data() context
sqlite3_value_  ******************************* The following routines extract information from a Mem or sqlite3_value structure.
sqlite3_vfs method implementations.
sqlite3_vfs methods ****************************  This division contains the implementation of methods on the sqlite3_vfs object.
sqlite3_vsnprintf() is the varargs version.
sqlite3rbu.nPhaseOneStep is initialized to the sum of (1 + nIndex) * cnt for all rows in the rbu_count table, where nIndex is the number of  indexes on the corresponding target database table.
sqlite_stat2 is now obsolete.
sqlite_stat3 and sqlite_stat4 are only opened when appropriate compile-time options are provided.
sqlstate is following.
sqrt.c: bcmath library file.
srand may be used to ensure repeatable sequences of pseudo-random numbers between different runs of the program.
src and dest get the same subst chars set, so it doesn't really matter which one we read from
src, dst are registers.
src2 and src1 are swapped.
src: The source array.
src_data: The memory element of the source scalar.
src_dtype: The data type of the source scalar.
src_itemsize/dst_itemsize - The sizes of the src and dst datatypes.
src_stride and dst_stride are set to contiguous, because subarrays are always contiguous.
sscanf() is safe here, since send_ssi_file() also uses buffer of size BUFSIZ to get the tag.
ssize_t main_exe_path(void)  store the path of the main executable to `binary_filename`, and returns strlen(binary_filename).
ssizessizeobjargproc sq_ass_slice
st 0: using st with debug information.
stack of filled segments
stack type check mask
standard include files.
start Zend extensions
start a new transaction implicitly if auto_commit is enabled and no transaction is open
start additional PHP extensions
start after the header
start at offset 0 in the subject
start of FAST CGI loop
start of TTTTT  Move the date backwards to the beginning of the current day, or month or year.
start of buffer or start of line
start of line is left of window
start of line is right of window - complement of above
start of search region
start offset of data to read
start reading matching input to buffer
start the clock(for qh_clock).
start the transaction
start tokenizing at the beginning
start up winsock services
starting a new format specifier, reset variables
starting level for closure
starting offset in the subject
starting position in str in bytes
starting site on this curve for closure
startup after we get the above ini override se we get things right
startup extensions statically compiled in
stat - the streams themselves know how
stat an opened phar file handle stream, used by phar_stat()
stat failed, skip password validation
stat information passed in
stat is used, if it made here then the link is broken
state is at least byteorder, subarray, and fields but could include elsize and alignment for EXTENDED arrays
statement are columns, then numeric affinity is used if either column has NUMERIC or INTEGER affinity.
statement are columns, then numeric affinity is used.
statement returns a column value, then the affinity of that column is used to build the index keys.
statement returns a result
statement that will be fetched from
statement this function was invoked with
statement, then this stores a pointer to the SELECT statement.
statement, then this stores the column-names to be inserted into.
statement, then this stores values to be inserted.
static member functions
static variable use is safe here since simple store or fetch operations are atomic and because the actual probe process is not in danger of collisions or race conditions.
stdio buffers data in user land.
stdio state variables.
stdio_file is deallocated anyway even if fclose failed.
stdout of parent is always /dev/null
steals a reference to arr --- so don't increment here
steals a reference to descr.
steals reference to descr -- and enforces native byteorder on it.
steals reference to dtype --- cannot be NULL  This function always makes a copy of arr, even if the dtype doesn't change.
steals reference to mp
steals reference to outcode
steals the reference to dtype if it's not NULL
step to p1 and find next edge -- turn left if possible, else straight, else right -- check for upward slit beginning at same time
stepping through eval on
stick that last bit of string on our output
stick the string into the LOB
still in MIME sigh...
still zero iff exact match
stop before hitting compressed data
stop processing the stream and return to ruby
stop skipping 0 for M_COM
stop timer thread before redirects
stop writing ends of pipes so timer thread notices EOF
storage for current token
store away errors and/or any intermediate output
store lowermost element
store persistent connection
store reference to allow cross-references between different elements
store request init time
store script structure in the hash table
store temp_filename as-is (in case upload_tmp_dir contains escapeable characters.
store the encrypted (or decrypted) result
store the error if it has changed
store the new resource type in the resource sizes table
store the value into "lVal" member of the variant.
stored result, we have to update the max_length before we clone the meta data :(
stores our calculations
stores the lock state
str contains no alnum
str is array of strings
str is the UTF8 next character pointer
str should not be shared
str1 is string but not numeric string just convert it to utf8.
str2num.c: bcmath library file.
str:      pointer to the string to be parsed.
str:  pointer to the string to be parsed.
straight across to opposite edge
strange header bug problem here...
strcmp() is a hack but I think we can get away with it for this temporary measure.
strdup because strtok(3) alters the string it parses
stream flush value for inflate() or deflate()
stream operation already wrote an error message
stream.chunk_size is actually a size_t, but php_stream_set_option can only use an int to accept the new value and return the old one.
stream_seek is not implemented, so disable seeks for this stream
strftime --- produce formatted time
strftime( FORMAT, TIMESTRING, MOD, MOD, ...)  Return a string described by FORMAT.
strftime.c  Public-domain implementation of ANSI C library routine.
strict comparison or not
stride: a distance to next VALUE.
strided cast data copy function
strided cast data free function
strided datetime cast data copy function
strided datetime cast data free function
string eval under the class/module context
string in element was malloc'ed
string is of the form x-avy or a-prv1
strings with special characters will need to be quoted, as a safety measure we add 2 bytes for the quotes just in case.
strip POST headers on redirect
strip brackets from address for getaddrinfo
strip high/strip low ( see flags )
strip it down to the working directory "/path/to".
strip of the target if any
strip the inside NOPs
strip trailing whitespaces
strip trailing whitespaces if we have not done so already
strip xml namespace crap.
strlen() will not be accurate, as returned data may contain embedded nulls.
strptime does not support specification of flags and width unlike strftime.
strptime() cannot handle it, so let IB have a try
strtod for IEEE-, VAX-, and IBM-arithmetic machines.
strtod() will return the nearest possible FP value for that string.
strtok() call in LibC is abending when used in a different address space -- hence using PHP's version itself for now
strtol allows whitespace and other stuff in the beginning we're not interested
struct __sFILE*, size_t, void*, long*, int
struct __sFILE*, struct __suio *
struct already counted as RVALUE size
struct flock is currently missing the NaCl newlib headers TODO(sbc): remove this once it gets added.
struct reprensenting the cpuid flags as put in the register
struct sockaddr_in/sockaddr_in6
stuff in Posix 1003.2 date command
stuff in SunOS strftime routine
stuff in System V ascftime routine
stupid hack to make zend_do_fcall_common_helper return ZEND_VM_ENTER() instead of recursively calling zend_execute() and eventually segfaulting
sub.c: bcmath library file.
subclasses really should redefine this method
subjInMemory  This is a boolean variable.
submicro is formatted in fixed-point packed BCD (without sign).
submicro is only for Ruby 1.9.1 compatibility
subok       : If true, the result uses the subclass of operand, otherwise it is always a base class ndarray.
subok     - If 1, use the prototype's array subtype, otherwise always create a base-class array.
subpats_order is pre-set to pattern mode so we change it only if necessary.
subpattern name expected
subpattern name is too long (maximum 32 characters)
substitute __COMPILER_HALT_OFFSET__ constant
substitute persistent constants
substring longer than string
subtraction must be done.
subvert cmd.exe's feeble attempt at command line parsing
success, leave return_value as it is (set by create_transliterator)
successful command that did not return rows
successful termination
successfully killed locker, process no longer exists
successor block number if a condition is false
successor block number if a condition is true
summon memory to hold the row
summon the aggregation context
super-fast path for ndarray argument calls
supply a name and default to call by parameter
support for custom memory allocator
support for custom memory storage
support for fault spec
support for introspection spec
support for user-defined memory limit
support needs to be added for snefru 128
support numpy 1.6 - this macro was renamed and deprecated at once in 1.7
support only "w"(b), "a"(b), "x"(b)
support only one method
support propput method that takes an argument
support some of the 1999 data types
support windows drive letters as in: file:///c:/somedir/file.txt
suppose binary format
supposed next slot is free
suppress warning if this stream is not explicitly closed
suppress warnings by gcc 4.8
suppress warnings on cygwin, mingw and mswin.
swap and align if needed
swap buffers, unless this is the last handler
swap contexts buffers, unless this is the last handler in the stack
swap elements between two levels
swap: int If true, the data will be swapped.
switch array_desc_type
switch back to the context that was in use prior to our creation of the new one
switch for assignment.
switch from titlecase to lowercase for capitalize
switch over to the persistent one
switch stepping back on
switch the drain direction
switch to global conf
symbolize_names*: If set to true, returns symbols for the names (keys) in a JSON object.
sync directory after journal delete
synchronize our buffer (if possible)
synopsis: Move P3 to P1.rowid
synopsis: Start at P2
syntax error in subpattern name (missing terminator)
sysconf() - get CPU count
system method returns a const
system time of children
system.describeMethods() callback
szMaster is the size (in Mem3Blocks) of the current master.
tab1 and tab2 may not be the same table
tab1 must not be a virtual table
tab1 must not have triggers
tab2 may not be a view
tab2 must be NOT NULL if tab1 is
tab2 must not be a virtual table
table clear for block compress
table for clamping the applied error
table that converts chars "./0-9A-Za-z"to integers 0-63.
table_name is escaped by php_pgsql_meta_data
tack on extra headers
tainted if dir is used and dir is tainted
tainted if path is relative
tainted if path is tainted
take a byte from the source:
take care of head/tail
take from the read buffer first.
takes a cmsghdr, not a msghdr like from_zval_write_control
takes the sum of the absolute values of a complex vector and returns a single precision result.
takes the sum of the absolute values.
tally the length of the added data:
target database handle
target is a character in range 0xFFFF - 0x10FFFF.
tclUtf.c --  Routines for manipulating UTF-8 strings.
teach RDoc about these classes
teach rdoc ConditionVariable
teach rdoc SizedQueue
technically we could combine all of these (except for url_mark) into one variable, saving stack space, but it seems more clear to have them separated.
tell ODBC to put it straight into our buffer, but only if it isn't "long" data, and only if we haven't already bound a long column.
tell exec where it is now
tell the driver that it is going away
tell the driver we just created a parameter
tell the engine we're in non-html mode
temp copy for duplicated docref
temp for arithmetic coding
temp will steal a reference to it
temporary manifest entry
temporary measure for compress-debug-sections
temporary negative sign for floats
temporary profiling space
temporary streams are never persistent
tentative returned length
term sans prefix-byte
term_tok: TK_EOT or TK_SUBEXP_CLOSE
terminate list using NULL
terminate the string temporarily.
terminate the string, remove CRLF
terminator for execve.
test if enought char after the header name + ': '
test lower bits are all zero.
test multiple returns
test samecycle merges
test to_int method availability to reject non-Numeric objects such as String, Time, etc which have to_r method.
test.bash looks for "PASS" to ensure this program has reached the end.
testing basic case with no iterate_upper_bound and no prefix_extractor
testing iterate_upper_bound and forward iterator to make sure it stops at bound
tests `c' and returns true if it is a special character
tests for file existence
tests if N*N would overflow
text can be internal strings
text not set in global iterator
text of name of TABLE
th.raise "stop"  While we are ignoring the RuntimeError exception, it's safe to write our resource allocation code.
th.raise # stop thread  This example can also be written as the following, which you should use to avoid asynchronous interrupts.
that array should only be manipulated during init, so safe for async access during execution
that didn't work, so try and get something from the network/wrapper
that's OK even for ZE2, since opline_num's are resolved in pass 2 later
thats good enough - wait for a newline
the "Domincal number"
the "Dominical number" - finding a Sunday
the "target" block doesn't had any followed block
the "target" block is not followed by current "block"
the -15 is to account for any padding CMSG_SPACE may add after the data
the DEDENT token in Python).
the FD is set in ossl_ssl_setup(), called by #connect or #accept
the FROM clause -- which tables to scan
the INDENT token in Python).
the LHS of the IN operator
the NULL argument is for backwards-compatibility
the RBU update contains REPLACE operations.
the RBU update contains any DELETE operations for which the specified PK does not exist.
the SSL_CTX is frozen, nowhere to save state.
the WHERE clause to be analyzed
the above lines make cc-mode.el confused so much
the array for the state vector
the array holds a ref to the pixbuf pixels through this wrapper
the assertion has failed.
the bbuf contains multiple chars
the behavior here differs from INTERSECT_KEY in php_intersect since in the "diff" case we have to remove the entry from return_value while when doing intersection the entry must not be deleted.
the borrow obtained so far because b has been exhausted.
the buffer we actually used
the byte buffer in the IO object is empty.
the caller has apparently passed a connection-string
the caller has set this
the carry obtained so far because b has been exhausted.
the cast is safe, we are in the range
the character class contains multiple chars
the character class contains no char.
the compiler choked when i tried to make this a macro
the complete WHERE clause
the content of the stream is empty.
the corresponding mbstring globals needs to be set according to the ini value in the later stage because it never falls back to the default value if 1.
the count using a callback.
the counterpart did properly shutdown
the create/append check will be done on the lock when the lib opens the file it is already created
the cursor may advance
the cursor was declared correctly
the data about edges, zones, and points -- boundary or not, exists or not, z value 0, 1, or 2 -- is kept in a mesh sized data array
the data is not the same
the data we have buffered will be lost to the third party library that will be accessing the stream.
the destination weighting is substantially reduced as the
the dir we are reading
the directory to be watched
the driver-specific PDO handle constructor
the dropped part is converted in destination_buffer or buffered in Encoding::Converter object.
the eight basic operations FF() through III()
the element is replaced, delref the old one as in SplDoublyLinkedList::pop()
the entry has a path separator and is a subdirectory
the error_log is NOT used when running in foreground and from a tty (user looking at output).
the false case was done earlier
the final case - the start of the line is inside the window
the first different word digit of w is greater than that
the first item in the connection-transaction list is reserved for the default transaction
the first leap second is at 1972/06/30, so we doesn't need to think about it.
the flags are not identical, thus, we assume properties are not compatible
the following code is only for internal tuning.
the following options deal with files, therefore the open_basedir check is required.
the following three bitmaps are cleared at the beginning of full GC
the following two routines will break if deletions aren't taken into account.
the ftruncate below will fail with errno EINVAL if you try to ftruncate the same sharedmem fd more than once.
the function is meant to process only entries from same group
the function pointers
the hash of the key modulo hash table size
the head check is important, as the tick handler cannot atomically clear both the head and tail
the headers define the proto without the flags parameter.
the human readable status.
the images are meant to be the same dimensions
the impersonated token can't be set here as the impersonation will happen later, in fcgi_accept_request (or whatever is the SAPI being used).
the implementation deeply depends on plain char
the input is near, e.g., twice the smallest denormalized number.
the input value is untouched.
the last instruction of basic block is conditional branch, based on comparison of CV(s)
the length of currently processing key
the length of the subject
the length of utf16_buf
the length will increase by length of xml escape - the character length
the length(X) function if X is a blob, and 3.
the link is not in the persistent list
the list of changed files
the lock-less list of events
the minimum "normal" float
the minimum "subnormal" float
the modifications array
the mutex is released if any kind of error occurs.
the name context cannot be NULL.
the natural logarithm of the Gamma function.
the natural logarithm of the absolute value of the Gamma function
the next line seems false but here IFDlength means length of all IFDs
the number of slots taken in the table
the offset is 'grapheme count offset' so it still might be invalid - we'll check it later
the offset might have been incremented, but without further successful matches
the only way that I know to get the current directory of a particular drive is to change chdir() to that drive, so save the old cwd before chdir()
the parser would return 1 (failure), we can bail out nicely
the path failed to load
the pipe to wakeup the OCaml program
the prepared statement
the qualifiedName has a prefix and the  namespaceURI is null
the qualifiedName is a malformed qualified name 2.
the qualifiedName or its prefix is "xmlns" and the namespaceURI is different from  "http://www.w3.org/2000/xmlns/" 5.
the registry of PDO drivers
the regular substitution character
the rest are parameters
the rest is only used by PM_STYLE_DYNAMIC
the result of this call is that our child_exec will be run in another process returning its pid
the same check, but with a call to DBA_ID_DONE before returning
the size of gzip header
the slow way: restart and seacrch
the solar and lunar corrections
the specified URI holds connection details
the specified altitude altit:
the standard pack utilities do not accept standard input
the statement is 'CREATE DATABASE ...' if the link argument is IBASE_CREATE
the status code isn't changed by a fatal error, so fake it
the steam_context resource will be released by resource list destructor
the stream is not reached to EOF.
the string is already strdup()'ed
the string or number proper
the string was already proved to be valid UTF-8
the supposed free slot is not, let's search for a free slot
the svc api seems to get confused after an error has occurred, so invalidate the handle on errors
the table into which we are inserting
the three basic functions F(), G() and H()
the type may be changed by above block
the typeof() function, 2.
the used and new ndim will be found later
the usefulness of padding with zeroes eludes me, it might even cause problems
the user has called store_result().
the userfilter object probably doesn't exist anymore
the variable idx should point one past the null terminator of the previous string found.
the vertex is shared by facet and neighborA
the way this is used *is* thread safe
the wrapperdata is an array zval containing the headers
the younger chunks have bigger number
then compare magnitude, and divide actually.
then data can be read directly from the database file into the output buffer, bypassing the page-cache altogether.
then do not bother with notifications
then flatten the properties into it, to, mostly to notfiy developer about problems
then int_pow overflow
then nEq is set to 0.
then nEq is set to 1 (as the range restricted column, b, is the second  left-most column of the index).
then non-zero is returned, and a "foreign key mismatch" error loaded into pParse.
then the pager object page size is set to *pPageSize.
then they do more broken stuff and set path_translated to the cgi script location
then use that to figure out the offset for day 1 of week 1
then variable dln_librrb_ary_path.
then we add the timezone name (or similar)
there are big space bug truncated.
there are cases where the length reported by mysql is too short.
there has to be at least one pair
there is no 'right' char
there is no X509_ATTRIBUTE_get0_set() :(
there is no common accessor method to check it either.
there is no conn handle in this function thus we can't set OOM in error_info
there is no free after page_sweep()
there is no guarantee that this ITypeInfo instance has any relation to this IDispatch instance...
there is no way to see if we must call zend_ini_deactivate() since we cannot check if EG(ini_directives) has been initialised because the executor's constructor does not set initialize it.
there is only a mime type
there is possibility to keep living if FREEOBJ events while suppressing tracing
there might be messages to stderr from other parts of the code, we need to log them all
there should be no retval to clean up
there was a collision, check to see if it's already
there was already a non-fancy index after a fancy one
there was an unrecoverable error
there was no 'left' char
there was no previous fancy index, so set consec
there's a chance to unblock
there's always room for 1 byte
there's no lower branch than idx
these actions all expect different types of arguments
these actually mark points
these are for the Data Source type
these are not needed.
these are promoted to int, so no break
these are the actallay a integer
these are used to get the standard arguments
these functions operate on in-memory dynamic pointers
these globals used for forking children on unix systems
these names depend on the values of the PHP_STREAM_AS_XXX defines in php_streams.h
these opcode use the op2 as result
these opcodes are handled separately
these opcodes use the result as argument
these should force the client to close the file and reconnect
these three are allowed
these three kids are about equivalent
these two are dummies and will be destroyed later
these two are real and will be copied over cached_phars/cached_alias later
these variables are true statics/globals, and have to be mutex'ed on every access
they both have to be long's
they even allow mixed.
they gave us a string, but LOBs are represented as streams in PDO
they passed in a string
this "PARAMS" concept is silly.
this IS_FALSE actually means it's a BOOL type
this a jis kanji char
this algo is the only one known to me that works well on all systems
this allocates memory for dimensions and strides (but fills them incorrectly), sets up descr, and points data at PyArray_DATA(ap).
this allows support for RecursiveDirectoryIterator of subdirectories
this anonymous class has been included
this archive has no open references, so emit an E_STRICT and remove it
this assignment must happen before any return with failure because the caller relies on it always being made (so it can just destroy the object to close the transliterator)
this block is nothing but NOP now
this block will not be used, delete all constants there
this can actually happen if you use debug_backtrace() in your error_handler and you're in the top-scope
this can happen if you use a connection pooling software line pgpool which doesn't close the db-connection once php disconnects.
this can happen under merging
this can happen with rewrite rules - and we have no idea what to do then, so return
this check is required to distinguish with other functions.
this code borrowed from here: http://lists.apple.com/archives/Darwin-development/2002/Mar/msg00746.html
this code is duplicated below
this code mistakes salt for IV.
this complies with system.listMethods as defined at http://xmlrpc.usefulinc.com/doc/reserved.html
this complies with system.methodHelp as defined at http://xmlrpc.usefulinc.com/doc/sysmethhelp.html
this complies with system.methodSignature as defined at http://xmlrpc.usefulinc.com/doc/sysmethodsig.html
this constructor shouldn't be called as it's private
this could be made more rigorous.
this could be problematic - alias should never be different from manifest alias for cached phars
this does not track memory managed via zalloc/zfree callbacks
this file is not in the current directory, use the original path
this file is not in the phar, use the original path
this flag is obsolete in gdbm 1.8.
this fp is in use by a phar_entry_data returned by phar_get_entry_data, it will be closed when the phar_entry_data is phar_entry_delref'ed
this function (strncat,sprintf,strcpy) or variable may be unsafe.
this function depends much on packed layout, so that it placed here
this function does no rollback on error
this function does not exist in OpenSSL yet...
this function doesn't check for too many parameters
this function is called asynchronously by the Interbase client library.
this function is designed for copying encoding and coderange from src to new string "dest" which is made from the part of src.
this function is itchin for a re-write
this function is recursive, thus the value and all of its children (if any) will be duplicated.
this function loads the collector dll (BistroJavaCollector) and the relevant functions.
this global stores the global cached pre-parsed manifests
this happens for a comment or white-space
this has too large side effects...
this initializes the data array for curve_tracer
this is FIX2LONG, intended
this is JIS, not SJIS/EUC case
this is a convenience function for fetching a particular element from a (possibly multi-dimensional) safe array
this is a correction to HRUA* by Ivan Frohne in rv.py
this is a new phar that has perhaps had an alias/metadata set, but has never been flushed
this is a poor fit, but it's all we have
this is a saddle zone, determine whether to turn left or right depending on height of centre of zone relative to contour level.
this is a small sample script to use libmbfl.
this is a special, easy case
this is a url like "phar://blah.phar" with no directory
this is already an interned string
this is an array whose size_is(dimensions)
this is an sprintf/snprintf string
this is defined in zlib's zconf.h
this is either a brand new phar or a default stub overwrite
this is exactly what we requested
this is for sure not allowed
this is host:port pair
this is implicitly required
this is long, cast to unsigned int
this is much more efficient with C99 snprintfs...
this is necessary to make it able to work with default array properties, returned to user
this is needed because on WIN32 lock is not decreased unless ZCG(counted) is set
this is not a constructor call
this is not a leave, so skip it
this is not an error here
this is not an error, we're returning NULL here
this is not good enough - seek succeeds even on truncated tars
this is not really an error, so it is allowed.
this is now the new location of the file contents within this fp
this is now the original code by Michael G Schwern: i've changed it just a slightly bit (use emalloc, get rid of includes etc) - thies - 13.09.1999
this is only called once
this is orphaned metadata, erase it
this is padding to get CreateInstance into the correct position
this is part of using Gaussian Elimination.
this is passed down as we recurse, so our children have access to the info.
this is read-only, so it's ok
this is safe to call inside signal handler and timer thread (which isn't a Ruby Thread object)
this is so callers can decide if they should free the X509
this is specific to PM_STYLE_ONDEMAND
this is the case where we have less data than planned
this is the child process
this is the first execute
this is the general case
this is to add backwards compatibility
this is to allow a different env var to be configured in case some server does something different than above
this is to find the ellipsis value or append an ellipsis if necessary.
this is undocumented feature of zlib
this is used for creating images in main memory
this is very unusual case of closing on a mesh hole
this is where the match starts
this is where the match starts as size_t
this link doesn't have a default transaction
this live range already removed
this long winded copy allows compatibility with older PHP versions
this looks nasty to me
this may change *facetlist
this may not be safe to do, but could work and be useful
this may release GVL and switch threads:
this may report MERGEfacet
this means string, not array
this mode only use cageFS, does not use suEXEC
this must never happen
this needs tzset or localtime, instead of localtime_r
this object should not be pre-initialised at compile time, as the order of members may vary
this only looks like magic, it isn't
this order must match the conversion table below
this setting may be not accurate
this short-circuits us out of the recursion.
this should NOT be done in php_rshutdown_session_globals()
this should be a thumbnail IFD
this should be binary search or so.
this should be compatible with the standard zenderror
this should modify object only if it's empty
this should never happen since types always have __name__
this should never happened (just to suppress compiler warning)
this should not happen ever
this should not happen usually
this should only be an issue for 32-bit machines
this should probably moved to a new `timelib_time *timelime_time_clone(timelib_time *)`
this shouldn't be called directly.
this start marker will not be unmarked, but it has been visited
this state is used after a 'Connection: close' message the parser will error out if it reads another message
this structure fits neatly into a cacheline
this timeout is used by standard stream funcs, therefor it should use the default value
this used to be "metachar.h"
this used to be "metaphone.h"
this version of PCRE is not compiled with PCRE_UCP support
this version of PCRE is not compiled with PCRE_UTF8 support
this was a DML or DDL query (INSERT, UPDATE, DELETE, ...
this will create an exception if needed
this will enforce compatibility in .12 version (broken after .11.2)
this will happen once per process, and will un-globalize mem_write_lock
this will have changed for all files that have either changed compression or been modified
this will read in php.ini, set up the configuration parameters, load zend extensions and register php function extensions to be loaded later
those constants/functions are only available in libzip since 0.11.2
though not all OSes support sockaddr_in used in IPv6 sockets
thread-safe memory manager mutex
three functions for attribute base modifications, gerrit Thomson
threshold of ordering element check
threshold was rounded to zero
throw an exception if we are in EH_THROW mode but DO NOT overwrite a pending exception
throw away any blocked signals
throw away any rows it might have returned
throw out return value and write the signature
thus only knows soap pre-defined types.
thus we need to keep the pointer to the hashtable for safety
ticket #3879:  that same register might be in the cache in multiple places, so be sure to get them all.
tidy up any FILE* that might have been fdopened
time zone name or abbreviation
time zone offset east of GMT e.g. -0600
time( TIMESTRING, MOD, MOD, ...)  Return HH:MM:SS
time, imposing no runtime or code overhead.
time_t value * TIME_SCALE.
timer thread will close the read end on exit:
timestamp is just the timestamp when this was added to the phar
timezone is called _timezone in LibC
tm_year is years since 1900
tmp buffer to hold current processing string in utf-16
tmp was lost ownership for the ptr
tmp_ecdh and ecdh_auto conflict.
tmp_ecdh is ignored when ecdh_auto is enabled.
tmp_line isn't relevant after the php_fopen_do_pasv().
tms_cutime and tms_cstime are ignored to exclude the time for child processes.
to advance to next matching row
to avoid U_STRING_NOT_TERMINATED_WARNING
to avoid potential workspace
to avoid this error we use begin rescue end.
to copy anything, but do anyway.
to expose non-free-immediate T_DATA
to force garbage collection.
to force sizeof(header)
to generate the curve, alternate between zone_crosser and edge_walker until closure or first call to edge_walker in single level case
to guarantee that the cleanup is not made twice and compomise the rest of the application if sockets are used elesewhere
to handle the format weekday + last/this/next week
to have the same reference count to src as in the case where it's not stored
to improve support here, it's a matter of building the unicode mappings.
to it also Hence the following undef for ICU version Same true for the locale_set_default function
to maintain BC, we must return original string + ending
to properly compress, we have to tell zlib to add a zlib header
to properly decompress, we have to tell zlib to look for a zlib or gzip header
to provide context for calling into the next filter from user-space
to return the docid, followed by each column of text data in order from left to write.
to silence an erroneous warning about bc.nd0
to store the wrongly-typed keys
to the following byte
to try open the directory
to_path is implemented so Pathname objects are usable with File.open, etc.
tobuffer - copy/swap function from src to an aligned contiguous buffer.
todata - data for tobuffer frombuffer - copy/swap function from an aligned contiguous buffer to dst.
todo: It should be possible to replace this node with a TK_REGISTER expression, as the result of the expression must be stored in a  register at this point.
todo: add more alternative behaviors
todo: really, it's not clear why this might occur, as  wal_autocheckpoint ought to be turned off.
todo: throw an error, we don't support embedded
token conversion table
token.z was originally in "..."
token_sid will be freed in tsrmwin32_dtor
tokenize on the "_" or "-" and stop  at singleton if any
tokenizer for inserts and queries
tolower() is used more often than toupper() by SQLite.
too few parameter bound
too late to rescue this char
too long charset string
too many forward references
too many kinsoku suspension
too many levels of nesting
too many links or broken symlinks
too many named subpatterns (maximum 10,000)
top level elements don't actually represent values, so we just pass the current value along until we are deep enough.
toplevel visibility is private
total page count in a heap
total slot count (about total_pages * HEAP_PAGE_OBJ_LIMIT)
total space to allocate
totalSubs  The number of variables that will be required.
tp_alloc inherited from Python PyBaseObject_Type
tp_compare/tp_reserved
trace second curve with this start immediately
track current and peak memory usage
trail byte or invalid
trailing ', ' except for last element
transaction was released by the query and was a registered resource, so we have to release it
transcoded string never be broken.
transfar text charset
transfer all data over to the new entry
transfer data copy function
transfer data free function
transfer encode filter
transfer this metadata to the entry it refers
transfer zonal existence from reg to data array -- get these for next row so we can figure existence of points and j-edges for this row
transform glyph image
transform the db path to a unique cache name
transitive constraints
translate UNIX type into NT type
translate to LockFileEx() op
translate z values to 0, 1, 2 flags
translates data structures to soap/xml.
translates xml soap dom to native data structures.
trap returns the previous handler for the given signal.
traverse rest objects reachable from root objects
traverse root objects
traverses linked list
treat empty files as empty archives
treat null value as empty string in xmlrpc.
treat with normal error object
trick the compiler into thinking a external signal handler uses this
trick to control varargs functions through cpp
tricky little algorithm for backward compatibility
trigger POLLIN events
trigger callback hook for parameters
trigger error unless signal interrupt
trigger error unless signal interrupt or timeout
triggered also if DIFF_KEY
triggered also when DIFF_KEY
triggered also when INTERSECT_KEY
trim pointer so that its real and logical sizes match
triple byte character
trise set to time when the sun is at south, minus 12 hours while *tset is set to the south time plus 12 hours.
trivial_set checks the index for us
true and zero cause the process to be a process leader of a new process group.
true global environment
true globals, no need for thread safety
true if it's ZEND_SEND_BY_VAL or ZEND_SEND_PREFER_REF
true if shared-cache mode enabled
true if we need to read next token
true means the new process is the root process of the new process group.
true multithread-shared globals
true to ignore case differences
truncate for error message
try "small" random rowids for the initial attempts
try allocating this much, if not - try shrinking
try and avoid allocating a FILE* if the stream is not naturally a FILE*
try and force the stream to be FILE*
try and open it directly first
try looking at the first HOWMANY bytes
try memory handlers in order
try next '*' position
try to allocate tail pages after this block
try to avoid breaking words
try to avoid the bug of testing an 8087 register value
try to create all the intermediate directories
try to detect the charset for the locale
try to determine the index by looking in the named_params hash
try to evaluate if thumbnail data is present
try to fetch args only if an FCALL was just made - elsewise we're in the middle of a function and debug_baktrace() might have been called by the error_handler.
try to figure out the charset from the locale
try to find an idle connection and kill it
try to find cached script by full real path
try to find cached script by key
try to find if we already have this link in our persistent list
try to find if we already have this link in our persistent list, no matter if it is to be persistent or not
try to interpret next item as a type
try to lookup the table name in the resource list
try to lookup the type in the resource list
try to make sure that the OS sends all data before we close the connection.
try to map tail right after this block
try to map the name to the column
try to match the buffer mode as best we can
try to match the database file R/W permissions, ignore failure
try to open source file, then create internal phar file and copy contents
try to read up to maxlen length bytes while we don't find the delim
try to reuse a connection
try to see if the element already exists in the hash
try to use it as a moniker
try with a non-escaped URI this may be a strange filename
try_with_sh and exec_with_sh should be async-signal-safe.
try_with_sh() is async-signal-safe.
trying to compute the length
ts management functions
turn auto-commit back on again
turn off high bit in final byte
turn off proxy locking - already off - NOOP
turn off proxy locking - not supported
turn off proxy locking - not supported.
turn on proxy file locking
turning off twice is OK
turning on auto_commit with an open transaction is illegal, because we won't know what to do with it
turning on twice leads to an error
tweencolor cache functions
twice what is normally needed, but every ridge could be DUPLICATEridge
two bits set, at least.
two digit day, with leading zero
two digit day, without leading zero
two digit hour, with leading zero
two digit hour, without leading zero
two digit minute, with leading zero
two digit month, with leading zero
two digit month, without leading zero
two digit second, with leading zero
two named subpatterns have the same name
two starts handled specially
two traits can't define the same non-abstract method
two unicode code points in UTF-8
type for the 2nd-level pointers
type for top-level pointer
type of output (xml/php)
type of the next token
type of the previous token
type:* The type of communications between the two endpoints, typically Socket::SOCK_STREAM Socket::SOCK_DGRAM.
typedef DIR - not the same as Unix
typedef for the authorization callback function.
typedefs for the array
types for sequence handling
typically of type xmlrpc_request_response RESULT 1 if it contains a fault, else 0 SEE ALSO XMLRPC_ValueIsFault () SOURCE
typically of type xmlrpc_request_response.
u.hdr.size4x is 4 times the size of the allocation in blocks if the allocation is free.
uPattern is an unescaped escape character, or 4.
uPattern is an unescaped match-one character "_", 3.
uPattern is to be handled as an ordinary character
ubf_wakeup_thread() doesn't guarantee to wake up a target thread.
uchar_pos is the 'nth' Unicode character position of the needle
ucol_getSortKey is exception in that the key length includes the NUL terminator
uid:: contains the integer user ID (uid) of the user.
uid_t can be signed or unsigned (generally unsigned)
ultra-compact, newlines, pretty/level indented.
umask() never fails and returns the previous
unary operation on constant operand
uncollectible objects are marked already
unconditionally free all remaining elements to avoid memory leaks
unconditionally keep this for later reference
uncorrected date of the Paschal full moon
undef, null and false are implicitly converted to array, anything else results in a null return value.
undefine AIX-specific macro
undefined public property
under some circumstances, the properties hash table may contain numeric properties (e.g. when casting from array).
underlying OS file HANDLE
underlying file descriptor
undo the safety (for comparison)
unfortunately IID_IMultiLanguage2 is not included in any libXXX.a in Cygwin(mingw32).
unicode characters usable in IDs
unicode.c -  Oniguruma (regular expression library)
union magic ensures that this works out
unix (and dos) line endings
unixFile created and returned by ref
unixFile.pInode is always valid here.
unixInodeInfo that owns this SHM node
unixify the path back, otherwise non zip formats might be broken
unknown POSIX class name
unknown behavior on non-linux so don't try it we don't want explicit zeroing to happen
unknown growth direction
unknown manufacturer, not an error, use it as a string
unknown option bit(s) set
unknown or unsupported join type
unknown version specified
unless DOTMATCH, skip current directories not to recurse infinitely
unlikely() or likelihood() function
unload prev errs into array
unlock again if finalizer took mutexes.
unlock all locking mutexes
unlock failed with an error
unlock is always non-blocking, I hope
unmatched parentheses
unpack() is based on Perl's unpack(), but is modified a bit from there.
unravel_index implementation - see add_newdocs.py
unregister functions, so that they don't linger for the next request
unregister rebind procedure
unset the associated relaxNG context and schema if one exists
unset user-defined handler
unspecified in function call, use session-wise
unsuported by Unicode 6.0
unsupported encoding"
unsure this signal is not blocked
until Time#succ removed
until argument to prevent double remove of children elements
until here it is not a copy
unused functions from the original were deleted.
unwrapped is now the dispatch pointer we want
up to six digit millisecond
update branch targets
update brk/cont array
update conch with host and path (this will fail if other process has a shared lock already), if the host id matches, use the big stick.
update curbit and hmask as getpage would have done.
update early binding list
update last errors and warnings
update our pointer in the original UTF-8 buffer by as many characters as ubrk_next iterated over
update previously generated FREE/FE_FREE opcodes
update ptrs to point to valid keys.
update referens to live-ranges from stack
update ridge in case of qh_makeridges
update status structure for all PMs
update the buffer length
update the column index on named bound parameters
update those bound column variables now
update try/catch array
update xtra for next call.
update zval string data
updete next root that is going to be freed
upon fatal errors etc.
upper or lower case string in place if required.
uppercase equivalent to lowercase
upward stroke of slit proceeds up left side of slit until it hits a boundary or a point not between the contour levels -- this never happens on the first pass
url is of the form "file:///path/to/Info.plist".
usableSpace: Number of bytes of space available on each sibling.
use 'FIELD' if name is empty
use 'int' for calculation temps
use IEEE 64bit values if not defined
use NLS_LANG if no or invalid charset specified
use Net-SNMP value translation
use OID suffix (`index') for keys in array output mode in WALK  method
use SEEK_CUR to allow emulation in streams that don't support seeking
use UTF-8 mapping from ASCII
use a 0 second timeout when checking if the socket has already died
use a newly define parameter into the do_modify so ldap_mod_add can be used the way it is supposed to be used , Gerrit THomson
use another var because type of cmsg_len varies
use arch (the basename for the archive) for fname instead of fname
use builtin print for GEN_OTHERNAME, GEN_X400, GEN_EDIPARTY, GEN_DIRNAME, GEN_IPADD and GEN_RID
use char strides here
use default character tables
use dummy scope if we're binding an object without specifying a scope
use emalloc() for large values, use static array otherwize
use fast memchr variant for sparse data, see gh-4370 the fast bool count is followed by this sparse path is faster than combining the two loops, even for larger arrays
use fg color directly.
use filesystem encoding if expanding home dir
use first character from string
use fout for geomview output
use getnameinfo for scope_id.
use good old OCIServerVersion()
use iv() not uiv() in order to check data range
use lowercase names, case insensitive
use malloc since memory not setup
use n1 as the boundary if getting but n2 if setting
use non-persistent if allowed number of persistent links is exceeded
use now the lower branch of which we can be sure that it contains only branches lower than idx
use only if it can use POPCNT
use our fopencookie emulation
use our proxy position
use pclose instead of fclose
use port 21 if one wasn't specified
use prepared stmts for that
use pstat(PSTAT_SETCMD, ...)
use qh_findbestnew instead of qh_findbest
use rb_vm_cbase() as same as rb_f_autoload.
use registers as much as possible
use scope of passed object
use search for last point
use separate timeout for our private funcs
use shared array for big "queues"
use strlen() because s is ascii encoding.
use temporary *overriden HashTable to detect hidden conflict
use the buffer directly
use the configured timeout when checking eof
use the flags from set_client_option()
use the following to trap hashcount errors
use the global environment
use the numeric one for calculations.
use the original file or directory name as it wasn't found
use the same stream for locking and database access
use the temp stream as our base
use this if "k" is allocated to a register ...
use this if your "long" int indexing is slow
use to specify stdin.
use user-supplied OID names for keys in array output mode in GET method
use wid for horizontal stroke
use wid for vertical stroke
useType determines which name is returned.
use_realpath is 0 in the call below coz path is absolute
usec to msec, and half the configured delay
used by prepare and exec to allocate a statement handle and prepare the SQL
used by qh_maxouter()
used by qh_scalepoints
used for calling F90 module routines
used for fopen('phar://...') and company
used for implicit anchor optimization
used in return_value then
used on printing backtrace
used only for checking EOF
used only in main chunk
used to avoid memory leak in case of exception
used to check if script restored to SHM or process memory
used to close fd's in the 3..255 range here, but it's problematic
used to close fd's in the range 3.255 here, but it's problematic
used ubf internal see thread_pthread.c.
used with LOCK_SH or LOCK_EX. see File#flock
used with SYNC or DSYNC.
useless jump elimination (if/unless destination): if   L1 jump L2 L1: ...
useless jump elimination: jump LABEL1 ...
user calls trap(sig, "IGNORE"), setting SIG_IGN 3.
user cannot instantiate
user handler may have returned TRUE
user may specify qh MINoutside
user requested a directory, we must return one
user requested cancel of current operation
user specified file, perform open_basedir checks
user specified redirect code
user time of children
user_stub and len should be both 0 if the default or existing stub should be used
uses constants declared in soap.c to determine ssl uri protocol
uses early out instead of checking vertex count
uses mark-bit on collisions - need extra 1 bit, ID is strictly 3 bits larger than rb_id_serial_t
uses mmap if possible
uses unrolled loop for increments equal to one.
uses unrolled loops for increment equal to 1.
uses unrolled loops for increment equal to one.
uses unrolled loops for increments equal one.
uses unrolled loops for increments equal to 1.
uses unrolled loops for increments equal to one.
using a prepared statement
using a stream here is a bit more efficient (resource wise) than php_gzopen_wrapper
using pre-9.0 syntax as PDO_pgsql is 7.4+ compatible
usual case: not a fault.
usually allocated by qh_readinput
usually runs once only for detection
utf16_be.c -  Oniguruma (regular expression library)
utf16_le.c -  Oniguruma (regular expression library)
utf32_be.c -  Oniguruma (regular expression library)
utf32_le.c -  Oniguruma (regular expression library)
utf8.c -  Oniguruma (regular expression library)
utf8tbl.c - Conversion Table for nkf
utf_16be.c -  Oniguruma (regular expression library)
utf_16le.c -  Oniguruma (regular expression library)
utf_32be.c -  Oniguruma (regular expression library)
utf_32le.c -  Oniguruma (regular expression library)
utf_8.c -  Oniguruma (regular expression library)
utility func to generate a new attribute.
utility function for xi_system_describe_methods_cb
v is the value of this BDIGIT ioffset is the number of extra decimal places along of this decimal digit within v.
va_copy() is __va_copy() in old gcc versions.
val        The desired new boolean value.
val        The desired new integer value RESULT SEE ALSO XMLRPC_GetValueInt () XMLRPC_VALUE XMLRPC_VALUE_TYPE SOURCE
val        The desired new string val.
val now holds the lower bound of the coordinate pair
val now holds the upper bound of the coordinate pair
valid as single byte character or leading byte
valid character in source encoding but no related character(s) in destination encoding
valid characters are a..z,A..Z,0..9
validate UTF-8 string first
validate a modified-base64 character
validate and compute length of output string
validate and set shape
validate cookie length -- + CRLF * 2
validate fd by using _get_osfhandle() because we cannot access _nhandle
validate pipe on this process
validate the parameters
validate/change dtype, validate flags, ndim, etc ...
validation was successful
vals must be large enough to hold maxvals
vals must be large enough to hold maxvals.
value and typeDescription behave about the same
value assigned(char).
value handled in browscap.c's MINIT
value of function parameters
value ptr of tiff directory entry
value returned by declare_vtab()
value, key, retval, values
var    Number of bytes of data.
var    Number of bytes of key.
variable number or class name literal number
variable to be assigned the value.
variable-argument wrapper around sqlite3VXPrintf().
variables for recursive traversals
variables needed to make a copy, to remove in the future
variables that we want in registers, most important first
variant is not a string
varint containing prefix size
varint containing suffix size
varintRecordCompareInt() also assumes that it is safe to overread a buffer by at least the  maximum possible legal header size plus 8 bytes.
varintRecordCompareInt() and varintRecordCompareString() both assume that the size-of-header varint that occurs at the start of each record fits in a single byte (i.e. is 127 or less).
various aspects of the generated parser.
various tables for locale C
various tables, useful in North America
vdbe.h also requires a few of the opaque pointer types (i.e. FuncDef) defined above.
vdbePmaReadBlob() return code
vdbeSorterIterRead() return code
vend: a pointer to next to the valid heap_page area.
vendor should have at least CPUID_VENDOR_STRING_LEN characters
verbosity of generated xml
verify local file header
verify that all abstract methods from traits have been implemented
verify that it is suitable
verify that out is usable
verify the host name presented in the peer certificate
verify the number of args
verifyDbFile() warnings have been issued
version byte at the front, and a null at the end
version number of this pickle type.
version of the gdbm library
version of xml to output
vertex 0 is vertex-at-infinity
vertex and coplanar point can joggle in opposite directions
vertexB always from facet2, neighborB always from facet1
very simplistic small memory block cache to avoid more expensive libc allocations base function for data cache with 1 byte buckets and dimension cache with sizeof(npy_intp) byte buckets
vfs module to open wal and wal-index
view the array at the new offset+dtype
view the wbmp on stdout
virtual codepoint values for invalid encoding byte 0xfe and 0xff
visible_list at end of qh facet_list
visible_list, newfacet_list
visit all new facets starting with startfacet, maybe qh facet_list
vm_args.c - process method call arguments.
vm_insnhelper.c - instruction helper functions.
void (*func)(VALUE, void *) - A callback function.
void *data - Void pointer that will be passed to the callback function.
void f2py_show_args(const int type_num,
void php_output_set_implicit_flush(int enabled) Enable or disable implicit flush
void*, int nByte, int min
volatile for signal handler use:
volatile is not enough if the compiler has an LTO (link time optimization).
volatile so we can gdFree it on return from longjmp
volatile so we can gdFree them after longjmp
vsnprintf NUL terminates the buf and writes at most n-1 chars+NUL
w.close  :close is specified as a hash value to close a fd individually.
w1 + w2 guaranteed to not overflow as we only have 0 and 1 data.
wait 0.5 sec and try the lock again
wait 10 sec and try the lock again
wait for 10s before exiting with error the child is supposed to send 1 or 0 into the pipe to tell the parent how it goes for it
wait for events or timeout
wait for incoming event or timeout
wait for inconming event or timeout
wait for inconming event or timeout.
wait until after qh_makeridges
wait until something interesting happens in the socket.
wake up joining threads
wake up main thread from rb_thread_terminate_all
wakeup any waiters we had
walk the descriptor spec and set up files/pipes
walk through the ACLLIST
warn if we computed outlen incorrectly
warn if writing to a copy.
warn when writing to the copy
warning, and returns NULL
warnings sent, bailing out
was signed in the original code.
was skipped during pre-merging
watch collisions are responsible for having only one watcher on a given refcounted/refval and having a mapping back to the parent zvals
watchpoints must be unique per element.
wbuf and wbuf_len is a target buffer and its length.
we allocate from here
we allow load data local infile by default
we allow strides even when we create the memory, but be careful with this...
we already changed the value, free the changed value
we already duplicated this pointer
we already have an opened zip, free it
we already have it, free it then
we already know we can retrieve the phar if we reach here
we already read the 8 signature bytes
we already were inside restart this means it's not safe to touch shm
we also support IPV6_TCLASS, but that can be handled by the default integer optval handling in the caller
we always consume all the data passed to us.
we are at the end of the string, so we fail
we are checking for existence of a file within the relative path.
we are completely hosed now
we are going to the break
we are going to write a new APP13 marker, so don't output the old one
we are in include_once or FastCGI request
we are in the global section
we are leaving group now: that means we cannot find the key
we are limited by the 32-bit ssize_t return value on 32-bit
we are not interested in gc and flags
we are persistent and if this is a real pconn used by mysql/mysqli, then the context would not survive cleaning of EG(regular_list), where it is registered, as a resource.
we are pretending it came from the environment
we are running as cgi or fastcgi
we are running from shell and got filename was there 2.
we are still using a memory based backing.
we assume that LOBs are binary and don't need charset conversion
we assume that any glob pattern will match files from one directory only so checking the dirname of the first match should be sufficient
we botched the k estimate
we can achieve this without allocating more memory
we can apply more optimize
we can avoid the key_type check here, because we tested it in the other loop
we can be modified and already be compressed, such as when chmod() is executed
we can change the type so long as nothing is currently stored.
we can create an io context
we can fill as many others as we wish.)
we can just use self, but incref for error handling
we can keep this entry, the file that refers to it exists
we can not fit this string
we can return a real value
we can skip these cause they were (effectively) done above in calc'ing s
we can skip these cause they were (effectively) done above while calculating s
we can skip this cause it was (effectively) done above in calc'ing s
we can't convert from packed to hash during unserialization, because reference to some zvals might be keept in var_hash (to support references)
we can't delete this in-memory until it is closed
we can't do a ZEND_VERIFY_RESOURCE(what), otherwise we end up with a leak if we have an invalid filehandle.
we can't immediately free them in zend_generator_close() else yield from won't be able to fetch it
we cannot release GVL when callback proc is supplied
we cannot substitute constants here or it will break ReflectionParameter::getDefaultValueConstantName() and ReflectionParameter::isDefaultValueConstant()
we cannot use strlcpy - here the problem is that we have to copy NUL chars up to byte_count, we also have to add a single NUL character to force end of string.
we checked that it will fit:
we convert numbers to integers and treat them as a string
we copy original hostname for further processing
we correct SCRIPT_NAME now in case we don't have PATH_INFO
we could also reopen the file in "rb" mode but there is no need for that
we could create a second info struct here (end_info), but it's only useful if we want to keep pre- and post-IDAT chunk info separated (mainly for PNG-aware image editors and converters)
we could do a binary search but it's not worth it since we have at most two entries...
we could have it if we want it
we could use sizeof(stage3_table_be_apos_00000) as well
we couldn't create the proxy lock file with the old lock file path so try again via auto-naming
we currently ignore misc params, local_size, stack_size and param.size are all calculated
we deny permission to open it
we did not find an entity for this char.
we did not process messages (timed out)
we didn't find it in the hash.
we differ here with the TCL implementation in allowing for
we do have getter - fail and let it try again with usual get/set
we do not know the order of sections
we do not ping non-persistent connections
we do not want to process defaultEncoding's here
we do our own reading directly from the phar, don't change the next line
we don't care about the first
we don't care about the server's credentials
we don't care if the function name is longer, in fact lowercasing only the beginning of the name speeds up the check process
we don't handle this well for now.
we don't know the socket until we have determined if we are binding or connecting
we don't need external character sets, all character sets are compiled in.
we don't need run-time check
we don't support 64-bit offsets
we don't support JIS X0213
we don't use atoi here
we don't use strtol because we don't want to allow negative values
we don't want headers to be sent
we don't want resource id 0
we don't want resource type 0
we don't want to count the null byte.
we don't work with *stream but need its value for comparison
we either have a query that returned a result set or an error occurred lets see if we have access to a result set
we either run out, or there is nothing on this page..
we end up here if none of the switch cases handled the field
we expect at least one parameter in varargs
we force PHP_STREAM_CALL_DTOR because that's from where the enclosing stream can free this stream.
we forked/spawned and this is the parent
we found another match put a newline and '-' to do some simple formatting
we get here when the last filter in the chain has data to pass on.
we got a persistent guy from our cache
we got our dispatchable object
we got position already from last fetch
we have 5 32-bit items plus 1 byte at least
we have a docref for a function AND - we show errors in html mode AND - the user wants to see the links
we have a non-valid entry...
we have desired string in buffer, just use it
we have enough room or split is successful.
we have everything we need in psal, flush peername and fill it properly
we have no blacklist to talk about
we have no mappings outside the BMP
we have to avoid both deadlock and busy loop.
we have to do this one special, as the "copy" method of array objects isn't set up early enough to be added by PyArray_SetNumericOps.
we have to free SG(request_info).path_translated here because php_destroy_request_info assumes that it will get freed when the include_names hash is emptied, but we're not adding it in this case
we have to initialize the rest to get the updated max length
we have to initialized the rest to get the updated max length
we have to iterate through the set of code points for this encoding and map them to unicode code points
we have to keep the order :(
we have to rebuild HashTable with numeric keys
we have to return NULL on error here to avoid memleak because of ZE duplicating uninitialized_zval_ptr
we have to return original length here
we have to save error information, cause MYSQLI_DISABLE_MQ will reset error information
we have to search the class hierarchy for this (implicit) public or protected property
we have to test if path is part of DOCUMENT_ROOT.
we have to use xmlNodeAddContent() to get the same behavior as with xmlNewText()
we have unprocessed OIDs
we have valid persistent_script, so it's safe to free op_array
we haven't created a lazy object yet
we haven't initialized our ctx yet, oh well
we interpret 0x5C as the Yen symbol.
we just handle 3 octets of data
we look for directory separator from the end of string, thus hopefuly reducing our work load
we might still be _FP but we need fsize() work
we must first to copy all classes and then prepare functions, since functions may try to bind classes - which depend on pre-bind class entries existent in the class table
we must have at the very least phar://alias.phar/
we must have at the very least phar://alias.phar/internalfile.php
we must initialize our wrapper in pthread_create, because it is valid to call pthread_create in a static constructor, and in fact, our test for issue 9456 does just that.
we must reuse the old SSL session id
we need filename and lineno for both execute and function probes
we need the workaround when the CPU supports AVX and the OS version is Mavericks
we need this since some servers refuse to accept SIZE command in ASCII mode
we need to "flush" the stream to save the newly deleted file on disk
we need to allocate more memory
we need to be binary safe on systems that support an abstract namespace
we need to be careful about setting attributes because these objects are pointed to by arrays that depend on them for interpreting data.
we need to check if the ctor is the ctor of the class level we we looking at since we might be looking at an inherited old style ctor defined in base class.
we need to copy the additional fields that the underlying tcp transport doesn't know about
we need to create an object and load using OleLoadFromStream
we need to decompress the data
we need to determine if the enclosure is 'real' or is it escaped
we need to disable auto-commit now, to be able to initiate a transaction
we need to do this every time since GLOB_ONLYDIR does not guarantee that all directories will be filtered.
we need to get the drive letter or UNC share name
we need to handle xml: namespace specially, since it is an implicit schema.
we need to increment the generator refcount here as it became integrated into the tree (no leaf), but we must not increment the refcount of the *whole* path in tree
we need to make sure and get a copy so the input array is not changed before the error is called
we need to prune the list - cc
we need to reset the sse here as unixtime2gmt modifies it
we need to save the state.
we need to upconvert to type that handles both intype and stype also don't forcecast the scalars.
we need val to be emalloc()ed
we never go into mime_begin again for a while.
we never should have no matching child
we never take stdin if we're (f)cgi, always rely on the web server giving us the info we need in the environment.
we never use getc, ungetc
we only really care about strings because they can represent base64 and datetime.
we only support VARRAYs and TABLEs
we only take string arguments
we output 'no input file' now.
we pass additional args to the respective handler
we processed messages
we quit remote consoles on recv SIGINT
we release the columns at the end of a fetch
we return nothing for disable breakpoints
we return only drive letter
we save ebx because it is used when compiled by -fPIC
we should also need to replace the object store entry, since it was created with emalloc
we should be already be in non blocking mode for network socket
we should introduce something like PARAM_PASSTHRU...
we should never have mapping in persistent encoder
we should print if no more data to come
we should print if no more space in the buffer
we should set it to -1 to know, that it's just not initialized
we should still add element even if it's not OK, since we already wrote the length of the array before
we shouldn't free this particular cert, as it is a resource.
we still need this one...
we store the signature followed by the signature length
we track data dependencies only insight a single basic block
we use "jmp_hitlist" to avoid infinity loops during jmp optimization
we use persistent resources for the driver connection stuff
we use this to allow the child to inherit handles
we use this to calculate API version, 1.1.1 is used for phars with directories
we want the private key
we want to create a copy of this zval that we store in the multihandle structure element "easyh"
we want to serve more requests if this is fastcgi so cleanup and continue, request shutdown is handled later
we we're looking for a private prop
we we're looking for a private prop but found a non private one of the same name
we we're looking for a private prop but found a private one of the same name but another class
we were opened as a plain file descriptor, so we need fdopen now
we will collect all possible key lengths
we work backwards so that we can use atoi more easily
we would result in an instable executor otherwise
we'll flush them at the end
we'll let any ol element with children through
we'll let it go this time
we'll need to  reestablish the shared lock if we can't get the  afpUnlock
we'll only need this when we have persistent statements, if ever
we'll use a siginfo handler
we're about to hit image data, or are at EOF.
we're executing the stub, which doesn't count as a file
we're going to insert a NULL column
we're here courtesy of longjmp
we're no longer executing anything
we're not going to free these
we're okay to be zero based here
we're only interested in parameters for prepared SQL right now
we've found an extension that ends at a directory separator
we've found this file, don't re-check include_path or run realpath
we've got an unterminated enclosure, assign all the data from the start of the enclosure to end of data to the last element
we've got at least 1 byte to read less than 1 is an error AND read bytes match written
we've got at least 1 byte to read.
we've reached here - the phar exists and is a regular phar
we've started allocating resources, goto from now on
web server need set this
week of year according ISO 8601
week of year, Monday is first day of week
week of year, Sunday is first day of week
weekmask: A 7-element boolean mask, 1 for possible business days and 0 for non-business days.
weeknumber --- figure how many weeks into the year
weird case of open hole at lower left
when PCRE_UCP is set.
when a filter needs feeding, there is no brig_out to deal with.
when in read only mode try to use existing .lck file first
when not in read mode or failed to open .lck file read only.
when num_commands is 0, then realloc will be effectively a malloc call, internally
when php is started by mod_fastcgi, no regular environment is provided to PHP.
when reading file, it must exist
when reading the whole file, check for CRC errors
when removing this a lot of handlers need to be redone
when we get here, we've got a pair of pointers to the element, base and ptr.
when we handle prop put and get, this will look nicer
when we hit an existing break, copy to new buffer, and fix up laststart and lastspace
when we request only the header, don't fail even on error codes
when writing file (but not appending), it must NOT exist, unless a context option exists which allows it
where # of 'x's is fig.
where (GMST0) is the GMST last time UT was 0 hours, one simply
where a tag bit distinguishes the keys from the values, to create edges (key1, val1), (key1, val2), ..., (key2, val3), (key2, val4), ...
where new box will go
where this bit comes from
where to put the answer
where to store the events.
where we assume the Euclidean norm of Z is 1.
whereLoopAddBtree() always generates and inserts the automatic index case first.
whereLoopXfer() copies fields above
wheremask   : NOT YET SUPPORTED, but this parameter is placed here so that support can be added in the future without breaking API compatibility.
wheremask: If non-NULL, a boolean mask specifying where to copy.
wheremask: If non-NULL, a boolean mask specifying where to set the values.
whether CRC was computed for complete file
whether to check CRC on EOF and return error on mismatch
whether to preserve keys
which chunk this bit comes from
which columns to include in the result
which function caused the problem if any at all
while True, for each facet in qh.coplanarfacetset
while in the 'pending-lock' state, no connection may start a new transaction.
whoops: sockfd has disappeared
wide range catch handler must put at last
wide to utf8 failed, should never happen.
wildcard, if present, must only be present in the left-most component
will be filled in on fetch
will be freed by Zend, thus don't use the mnd_ allocator
will be incremented by zend_hash_update_mem()
will delete samecycle
will not be considered(1.1.7), full precision specified by szVal is allocated.
will point to argv area
will qh_setdelaunay()
will shrink, also we discover if strtext
windows has no IPV6_RECVPKTINFO, and uses IPV6_PKTINFO for the same effect.
windows_1250.c -  Oniguruma (regular expression library)
windows_1251.c -  Oniguruma (regular expression library)
windows_1252.c -  Oniguruma (regular expression library)
windows_1253.c -  Oniguruma (regular expression library)
windows_1254.c -  Oniguruma (regular expression library)
windows_1257.c -  Oniguruma (regular expression library)
with Oracle, there is nothing special to be done
with PyArg_ParseTuple("s#", ...)) we do *not* define bf_releasebuffer at all.
with capture status and push check-end
with curl 7.17.0 and later, we can use COPYPOSTFIELDS, but we have to provide size before
with double precision rho is zero until 1.4e-8
with ioctlsocket, a non-zero sets nonblocking, a zero sets blocking
with the root pages numbers for all tables and indices in the database.
within cell range so no contribution to min_dist
without an argument list.
without the following downcast, the write will fail (i.e., will write a zero byte) for all big endian architectures:
won't happen but makes compiler happy
word - a Perl extension
work around inability to specify freedom in write and strictness in read count
work is handled by EVT_NORMALIZE
work left to right in this row
work out remaining time
work right to left in this row
work-around for longtext and alike
workaround for ICU bug
workaround for Solaris 10: grantpt() doesn't work if FD_CLOEXEC is set.
workaround for VC++8 SP1
workaround for x64 SEH
workaround invalid codepage
workaround the following race: 1.
worring about sub-dividing and re-hashing.
wrap copy swap data copy function
wrap copy swap data free function
wrap internal function handler to avoid memory leak
wrapper around send/recv to handle timeouts
write delay, read avoidance/cache shuffle: select the page for incoming pair: if key is to go to the new page, write out the previous one, and copy the new one over, thus making it the current page.
write empty packet to server
write it out to the temporary break file
write out manifest pre-header
write out the PNG header info (everything up to first IDAT)
write separator for all but last one
write space left for putc()
write the WBMP to a gd file descriptor
write the encrypted data
write the manifest header
write the signed data
write to the gets stream if it is set, otherwise forward to c-clients gets
write_property will add 1 to refcount
www., wiki., windows., master., and others, I guess pecl.
x IN (SELECT ...) x IN (value, value, ...)  The left-hand side (LHS) is a scalar expression.
x IN (SELECT ...) x IN (value, value, ...)  The left-hand side (LHS) is a scalar or vector expression.
x is the INTEGER PRIMARY KEY
x, y coordinates in orbit
x.pSelect is valid (otherwise x.pList is)
x.remainder(y) means x-y*(x/y).truncate
x86 32-bit arch dependent functions.
x86 64-bit arch dependent functions.
xBegin - begin transaction
xBestIndex - Analyze a WHERE and ORDER BY clause.
xBestIndex - Determine search strategy
xBestIndex inserts its results into the **Outputs** fields.
xCheckReservedLock method
xCheckReservedLock() is defined as returning true "if there is a RESERVED  lock held by this process or any others".
xClose - Close a cursor.
xClose - close a cursor
xColumn - Return a column value.
xColumnCount(pFts): Return the number of columns in the table.
xColumnSize(pFts, iCol, pnToken): If parameter iCol is less than zero, set output variable *pnToken to the total number of tokens in the current row.
xColumnText: This function attempts to retrieve the text of column iCol of the current document.
xColumnTotalSize(pFts, iCol, pnToken): If parameter iCol is less than zero, set output variable *pnToken to the total number of tokens in the FTS5 table.
xCommit - commit transaction
xCommit():   Final part of two-phase commit.
xConnect - connect to an existing table
xCreate - create a table
xCreate/xConnect argument array
xCurrentTimeInt64 (version 2)
xDelete: This function is invoked to delete a tokenizer handle previously allocated using xCreate().
xDestroy - Drop a table
xDeviceCharacteristics
xDisconnect - Disconnect from a table
xEof - Return true if the cursor is at EOF, or false otherwise.
xEof - check for end of scan
xFetch()'d data for this page
xFilter - Initialize a cursor to point at the start of its data.
xFilter - configure scan constraints
xFindFunction - function overloading
xGeom and xQueryFunc are the callback functions.
xGeom and xQueryFunc argument
xGetAuxdata(pFts5, bClear)  Returns the current auxiliary data pointer for the fts5 extension  function.
xInst: Query for the details of phrase match iIdx within the current row.
xInstCount: Set *pnInst to the total number of occurrences of all phrases within the query within the current row.
xNext - Advance the cursor to the next row, if any.
xNext - advance a cursor
xNext() method for a node of type FTS5_TERM.
xOpen - Open a cursor.
xOpen - open a cursor
xOpen must do this even if the open fails.
xPhraseCount: Returns the number of phrases in the current query expression.
xPhraseFirstColumn() This function and xPhraseNextColumn() are similar to the xPhraseFirst() and xPhraseNext() APIs described above.
xPhraseNext() See xPhraseFirst above.
xPhraseNextColumn() See xPhraseFirstColumn above.
xPhraseSize: Returns the number of tokens in phrase iPhrase of the query.
xQueryPhrase(pFts5, iPhrase, pUserData, xCallback): This API function is used to query the FTS table for phrase iPhrase of the current query.
xRelease(int S):    Commit and close savepoint S.
xRename - rename the table
xRollback - rollback transaction
xRollback(): Rollback the transaction.
xRollbackTo(int S): Rollback to start of savepoint S.
xRowCount(pFts5, pnRow)  This function is used to retrieve the total number of rows in the table.
xRowid - Return the current rowid for the cursor.
xRowid: Returns the rowid of the current row.
xSetAuxdata(pFts5, pAux, xDelete)  Save the pointer passed as the second argument as the extension functions  "auxiliary data".
xShmLock() calls to unlock the same locks are no-ops (so that once obtained, these locks are never relinquished).
xSize should return the allocated size of a memory allocation previously obtained from xMalloc or xRealloc.
xSync - sync transaction
xSync():     Initial part of two-phase commit.
xTokenize: This function is expected to tokenize the nText byte string indicated  by argument pText.
xTokenize: Tokenize text using the tokenizer belonging to the FTS5 table.
xUnlock() decreases the lock.
xfer opt does not play well with PRAGMA count_changes
xmalloc() alway returns(or throw interruption)
xml_elem_entity_escape  Purpose: escape reserved xml chars and non utf-8 chars as xml entities Comments: The return value may be a new string, or null if no conversion was performed.
xmlrpc "faults" are not directly represented in this xmlrpc API or data structures.
xmlrpc_none if not a value.
xor the bottom with the current octet
xpath query from xpath_array
xpgSize is guaranteed to be at least one larger than objIndex.
xxx: check return value
xxx: other threads may modify given string.
xxx: str may be invalid
xxx: target position may be negative if buffer is filled by ungetc
y is NaN so all results are NaN
y is bound safe at this point
year  mon   mday  hour  min   sec   off
year of ISO week with century
year of ISO week without a century
year without a century
year without a century, 00 - 99
yes, tlsbase from mrc might not be correctly aligned.
yes, tlsbase from mrs might not be correctly aligned.
yet another hack for the "fault" crap
yield from was used, try another resume.
yields pairs, never false
you should empty the stack of your parameters, and ONLY your parameters.
yup, this break isn't here on purpose too
yygotominor is uninitialized when a rule reduces that does not set the value of its left-hand side nonterminal.
yyn is the number of a rule to reduce with.
zBase: An initial buffer.
zContentExprlist:  pzErrmsg: This exists in order to allow the fts5_index.c module to return a  decent error message if it encounters a file-format version it does not understand.
zFilename encoded in UTF-8 instead of UTF-16
zFilename is a temporary or immutable file
zFilename is the name of the database file.
zIn is a UTF-16 encoded unicode string at least nChar characters long.
zMaster may be NULL, which is interpreted as no master journal (a single database transaction).
zMaster must point to a buffer of at least nMaster bytes allocated by the caller.
zMaster points to the name of a master journal file that should be written into the individual journal file, or is NULL, indicating no master journal file  (single database transaction).
zMaster points to the name of a master journal file that should be written into the individual journal file.
zMasterName is the name of the master table.
zMasterSchema and zInitScript are set to point at the master schema and initialisation script appropriate for the database being initialized.
zName must be a pointer to a nul terminated string.
zNum is a 19-digit numbers.
zNum is empty or contains non-numeric text or is longer than 19 digits (thus guaranteeing that it is too large)
zNum must be decimal.
zOut is at least big enough to hold nIn bytes.
zOut is guaranteed to point to a buffer of at least (DEVSYM_MAX_PATHNAME+1) bytes.
zOut points to a buffer of at least sqlite3_vfs.mxPathname bytes  (in this case, MAX_PATHNAME bytes).
zPath is a path to a WAL or journal file.
zProc may be 0 in which case a default entry point name (sqlite3_extension_init) is used.
zSpan holds DB.TABLE.COLUMN
zSql is a zero-terminated string of UTF-8 SQL text.
zTo is in normal order.
zType is either "ORDER" or "GROUP" depending on which type of clause pOrderBy is.
z_crc_t is defined since zlib-1.2.7.
z_j are uniquely determined because of the gcd property.
zdef_(type,name,doc,average)
zend_alloc allocates memory from OS by CHUNKs, these CHUNKs and huge memory blocks are always aligned to CHUNK boundary.
zend_alloc is designed to be a modern CPU cache friendly memory manager for PHP.
zend_alter_ini_entry() is called for each entry.
zend_call_function may change args to IS_REF
zend_compile() replacement
zend_file_handle_dtor() operates on the copy, so we have to NULLify the original here
zend_hash_quick_update does not check, as add_assoc_zval_ex do, whether the index is a numeric and convert it to it.
zend_hash_quick_update needs length + trailing zero
zend_object_store_set_object: It is ONLY valid to call this function from within the constructor of an overloaded object.
zend_resolve_path() replacement for PHP 5.3 and above
zend_stack_push returns stack level
zend_str_tolower_copy won't necessarily set the zero byte
zend_stream_open_function() replacement for PHP 5.3 and above
zero (as opposed to blank) pad
zero before decimal point
zero for the background color, nothig gets outside anyway
zero initialized data, sz is number of bytes to allocate
zero one value_one - DON'T IMPL.
zero or more BTCF_* flags defined below
zero or more SQLITE_TRACE flags
zero size: either a fresh database, or one with a single, unsplit data page: dirpage is all zeros.
zero-padded data copy function
zero-terminate the buffer for safety.
zero.c: bcmath library file.
zeroblobs already expanded
zip or tar-based phar
zip_discard: frees the space allocated to a zipfile struct, and closes the corresponding file.
zip_file_get_offset.c -- get offset of file data in archive.
zip_file_set_mtime.c -- set modification time of entry.
zip_open is a macro for renaming libzip zipopen, so we need to use PHP_NAMED_FUNCTION
zip_stat_init.c -- initialize struct zip_stat.
zlib FAQ: Valgrind (or some similar memory access checker) says that deflate is performing a conditional jump that depends on an uninitialized value.
zlib.c - An interface for zlib.
zmsg should be passed by ref
zone_crosser assumes you are sitting at a cut edge about to cross the current zone.
zval to struct msghdr, version for recvmsg().
zval_dtor() will handle also Unicode/Non-unicode mode.
