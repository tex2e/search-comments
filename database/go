"--" terminates the flags
"-all" flag enables all non-experimental checks
"..." arguments are untracked
"/tmp/go-buildNNNN/os/exec"
"/tmp/go-buildNNNN/os/exec/_test"
"A server that receives a larger header block than it is willing to handle can send an HTTP 431 (Request Header Fields Too Large) status code"
"Abstract" Unix domain socket.
"An instruction consisting entirely of binary 0s is guaranteed always to be an illegal instruction."
"Arguments" and "pipelines" are evaluations of data, defined in detail in the corresponding sections that follow.
"ExternalCode" is better than "etext".
"If-Range: version" means "ignore the Range: header unless version matches the current file." We only support ETag versions.
"Last" instance of the day.
"Multi-line field","comma is ,"
"One-pass" regexp execution.
"Portable" code generation.
"Portable" optimizations.
"Windows" paths are no exception to the rule.
"_" TODO(gri) avoid repeated "_" lookup
"abcdefgh12345678ABCDEFGH"
"c-shared": build a main package, plus all packages that it imports, into a single C shared library.
"compile", "build", etc.
"data" will be replaced with keys/values below.
"files" means /etc/hosts.
"fmt" "go/parser" "go/token"
"for range x" (nil lhs in assignment)
"func" already consumed
"helper" does not produce a valid document fragment, so should not be Executed directly.
"ideal-char" for compatibility with old tool TODO(gri) change to "ideal-rune"
"identity" encoding is not recorded
"if the second iteration variable is the blank identifier, the range clause is equivalent to the same clause with only the first variable present."
"insert" comma and continue
"list" is in order of increasing literal value.
"local" here means in the sense of the dynamic linker, i.e. not visible outside of the module (shared library or executable) that contains its definition.
"localhost" not "localhost."
"localhost.localdomain." not "localhost.localdomain"
"no panic" is checked below
"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
"permutation" is a bad name here, but it is what Smhasher uses.
"priority" for a value
"read only" data with relocations needs to go in its own section when building a shared library.
"shared": combine all packages passed on the command line, and their dependencies, into a single shared library that will be used when building with the -linkshared option.
"special" empty directories
"undef" means undefined.
"value" of a function is the address of the function's closure
"x is a string and T is a slice of bytes or runes"
"x is an integer or a slice of bytes or runes and T is a string type"
"x is assignable to T"
"x" is the value of .X
"x's type and T are both complex types"
"x's type and T are both integer or floating point types"
"x's type and T are unnamed pointer types and their pointer base types have identical underlying types"
"x's type and T have identical underlying types"
' ' is spacer for numbers
'"' opening already consumed
'(' '*' embed ')' oliteral
'(' embed ')' oliteral
'(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres
'*' '(' embed ')' oliteral
'-' is a width modifier, always valid.
'.' can start a number.
'.' is a precision for float, max width for strings.
'/' does not work in link's content
'Go test' recompiles each package along with any files with names matching the file pattern "*_test.go".
'`' opening already consumed
'b' format in strconv.Float requires knowledge of bias for 0.0
'b' is between 'a' and 'c', so the charclass range checking is no help here.
'cap out of range' is true too, but since the cap is only being supplied implicitly, saying len is clearer.
'go help documentation' generates doc.go.
'go run' uses the installed copy of runtime.a, which may be out of date.
'h' omit "func" and receiver in function types 'u' (only in -/Sym mode) print type identifiers wit package name instead of prefix.
'kind' is a kind of assembly variable.
'p' exponents are invalid - the 'p' is not considered part of a floating-point number, but introduces a new (unexpected) name.
'p' format not supported in strconv.Format
("", false) is returned if call's argument at the index idx isn't a string literal.
(*Buffer).grow allows for 2x capacity slop before sliding, so set our error threshold at 3x.
(*DB).mu is not held while calling it.
(*response).w, a *bufio.Writer of bufferBeforeChunkingSize bytes 3.
(1) Before the build IDs were introduced, building with alternate tags would happily reuse installed objects built without those tags.
(1) Conversion of a *T1 to Pointer to *T2.
(2) Any XCHG, which always has an implicit LOCK, can have XACQUIRE or XRELEASE.
(2) Consume 'x' and transition past the first value character.
(2) Conversion of a Pointer to a uintptr (but not back to Pointer).
(2) If only executable code is distributed, then the accompanying documentation must state that "this software is based in part on the work of the Independent JPEG Group".
(2) we don't know what pointers might point at them and we want loads via those pointers to see updated values and vice versa (issue 7995).
(3) Conversion of a Pointer to a uintptr and back, with arithmetic.
(3) The common use of "go install -a ./..." led to reports of problems when the -a forced the rebuild of the standard library, which for some users was not writable.
(4) Conversion of a Pointer to a uintptr when calling syscall.Syscall.
(5) Conversion of the result of reflect.Value.Pointer or reflect.Value.UnsafeAddr from uintptr to Pointer.
(6) Conversion of a reflect.SliceHeader or reflect.StringHeader Data field to or from Pointer.
(7 is arbitrary position to test at)
(9) could check that it is fn of no args/returns
(A Go func value is a pointer to a C function pointer.
(A nil interface value is identified by the empty string and transmits no value.) Upon receipt, the decoder verifies that the unpacked concrete item satisfies the interface of the receiving variable.
(A signed integer, essentially.)
(A) Arabic (Egyptian).
(Algorithm suggestion by Russ Cox.)
(All the saved pairs record a PC that is a return address, so we rewind it into the CALL instruction.)
(Alternately, it cannot see the panic of 2 because there is an active panic of 3.
(Alternatively, the buffer is empty and the byte count will be absorbed by recvMessage.)
(Alternatively, we could not install stack barriers over frame boundaries with up-pointers).
(Although we still probably leak the number of leading zeros.
(And Decode has already marked them implicit.) However, if there is an F3 anywhere, then the extra F2s do print.
(And in fact frame 3 is resumable.
(And it's already filtered out) It's mildly hacky, but not terrible.
(As a special case, it also will copy bytes from a string to a slice of bytes.) The source and destination may overlap.
(B) Chinese (simplified).
(By always passing in a result value via the receiver, memory use can be much better controlled.
(C) Chinese (traditional).
(Can adapt this code to generate it too.)
(Can adapt this code to generate them too.)
(Cannot be a valid delta.)
(Comparison operators always have spaces around them.)
(Cumulative) line number of last error.
(Cyclic data with finalizers is never finalized, nor collected.)
(DWARF writes out 0-length arrays as if they were 1-length arrays.)
(Don't get test dependencies for test dependencies.) We pass useVendor here because p.load does not vendor-expand TestImports and XTestImports.
(Done at time tNow + 0 ms.) 2.
(Entry 0 is never used.)
(Even if this is not called, the runtime gradually returns memory to the operating system in a background task.)
(Eventually that will produce other warnings.)
(F) Hindi (Devanagari).
(File format still up in the air a little.)
(Files starting with a period are ignored.) By default, gofmt prints the reformatted sources to standard output.
(Foo starts with a capital letter so it cannot match a package path.) go doc encoding/json Show documentation for the encoding/json package.
(For an example of the kinds of things that can go wrong, see http://article.gmane.org/gmane.linux.kernel/1853266.)
(For an expression like fmt.Println, only add "fmt" to the set of unresolved names, not "Println".)
(For historical reasons the meaning of skip differs between Caller and Callers.) The return values report the program counter, file name, and line number within the file of the corresponding call.
(For instance, if the length of key is impossible given the RSA public key.)
(G) Japanese (kanji and hiragana).
(Global identifiers are resolved in a separate phase after parsing.)
(H) Korean (Hangul syllables).
(HCLEN+4)*3 bits: code lengths in the magic codeOrder order.
(Hard-coded in binaries so not likely to change.)
(Host, User-Agent, If-Modified-Since).
(I) Russian (Cyrillic).
(I.e., the race instrumentation references a variable before it is defined.)
(Ideally, we'd see if the AST parent is a SelectorExpr, but that requires PathEnclosingInterval from golang.org/x/tools/go/ast/astutil.)
(If a change to a release tree must be made by hand, the way to force the install is to run make.bash, which will remove the old package archives before rebuilding.)
(If it was a method argument, we'd know what we need.) The syntax guides us to some extent.
(If large arrays are involved, they can be arbitrarily more compact.)
(If msg is empty, a suitable default message will be sent.) After such a timeout, writes by h to its ResponseWriter will return ErrHandlerTimeout.
(If the interface shrinks, we will notice because a method signature emitted during the last loop will disappear.)
(If v is not live after b).
(If we don't do this, the callee will try to use r12 to compute r2.)
(If we ran that code here we could invoke orderstmt on the if-else chain instead.) For now just clean all the temporaries at the end.
(In Sydney, Australia, both standard and daylight-savings time are abbreviated "EST".
(In general the number of instances of typ being allocated is dataSize/typ.size.)
(In multiple calls to Parse with the same receiver template, only one call can contain text other than space, comments, and template definitions.)
(In this regard it is stricter than UnreadByte, which will unread the last byte from any read operation.)
(Inside select, assignment waits until case is chosen,
(Interfaces and pointers are safe to copy.)
(Issue 13626) We should have "Hello" at least sitting there.
(It may still contain test files, files hidden by build tags, and so on.)
(It's always handling the instruction from the current lex line.) It returns int32 because that's what type ../asm prefers.
(Its values are still in Montgomery form however.)
(Knuth, volume 4, section 7.3.1)
(Locks are a problem as they require a valid G, which restricts their useability.)
(Making the opposite mistake, rebuilding unnecessarily, is only a performance problem and not a correctness problem, so we ignore that one.)
(Maps don't use append.)
(On Unix, *syscall.Rusage matches struct rusage as defined in the getrusage(2) manual page.)
(On non-Unix systems forceCgoDNS returns nil.)
(Only matters on big-endian, but be clean anyway.)
(Only valid for client connections.)
(Orderexpr has already been called on n, so we know k is addressable.)
(Otherwise it could be decrypted with a square-root.)
(Otherwise it creates a recursive call cycle and stack overflows)
(Otherwise the trace will end at runtime.sigpanic and we won't get to see who faulted.)
(Otherwise the trace will end at sigpanic and we won't get to see who faulted).
(Otherwise, madvise will round them *out* and release more memory than we want.)
(Otherwise, we get double replacement for patterns that match both empty and nonempty strings.)
(Per the go/build package dependency tests, we cannot import path/filepath and simply use filepath.Dir.)
(Pipe is close-on-exec so if exec succeeds, it will be closed.) In the child, this function must not acquire any locks, because they might have been locked at the time of the fork.
(Pointer bits are ignored by scanobject but consulted by typedmemmove.)
(Popping happens automatically.)
(ProbablyPrimes' argument sets the number of Miller-Rabin rounds to be performed.
(Query n done at tNow + (n+2)*1001 ms.)
(Regalloc has the same issue for standard regs, and it runs next.)
(See Daan Leijen, ``Division and Modulus for Computer Scientists''.) See DivMod for Euclidean division and modulus (unlike Go).
(See also the comment in cmd/compile/internal/gc/bimport.go importer.obj, switch case importing functions).
(See details in comment above.) Catch calls that might, by replacing the stack guard with something that will trip any stack check and leaving a flag to tell newstack to die.
(See fakethis above.)
(See the examples below.) However, if the argument starts with a capital letter it is assumed to identify a symbol or method in the current directory.
(Slices, maps, and chans take care of themselves.)
(Slow, but portable) 1.
(Some commands, such as 'go list', do not attempt to rebuild.)
(Standard output is reserved for report data.)
(StoreReg, stack-based phis, inputs, ...)
(The "http://www.w3.org/2000/xmlns/" name space is also predefined as "xmlns", but users should not be trying to use that one directly - that's our job.)
(The argument to Unmarshal must be a non-nil pointer.)
(The arithmetic value is compared, not the bit pattern, so all negative integers are less than all unsigned integers.) However, as usual, one may not compare an int with a float32 and so on.
(The cache empties when re gets garbage collected.)
(The client declares which trailers it will later send.)  While the handler is reading from Body, it must not reference Trailer.
(The comparison ignores leading and trailing space.) These are examples of an example:
(The default value is represented as a string.)
(The escape analysis tags do not apply to func vars.) But it must not suppress struct field tags.
(The netgo tag controls whether package net uses cgo or pure Go for functionality such as name resolution.) Using the installed non-netgo package defeats the purpose.
(The number of repeats can be zero.) Because we are decompressing on-demand our state is kept in the reader object.
(The other candidate would be map access, but map access returns a pointer to the result data instead of taking a pointer to be filled in.)
(The parent package is not nil if the the name is an unqualified struct field or interface method name belonging to a type declared in another package.)
(The pipe write end is close-on-exec so if exec succeeds, it will be closed.)
(The remaining compound ops are decomposed with rewrite rules.)
(The sent value itself can never contain stack pointers.)
(The span is only a few hundred years for nanoseconds in an int64.)
(The temporary cleaning must follow that ninit work.)
(The threshold is about 500us.)
(The type is a struct so this isn't valid Go, but it parses and that's all we need.)
(The types also distinguish functions from global variables.) If using a standard gcc, cgo can parse the DWARF debug information for the __cgo_enum__N to learn the identifier's value.
(There are a few other methods that do not match this pattern.)
(There is always 1 allocation of the bucket array.
(There is no place to put a flag regeneration instruction.)
(There's no "timeType" in fieldParameters to determine what type of time should be expected when implicitly tagged.)
(This assumes that the AST was generated by a Go parser.)
(This code is only needed for dot-imports.
(This doesn't send any packets).
(This encoding ignores the mod bits.) The decoder sees the non-register mod and reads farther ahead to decode the memory reference that isn't really there, causing the size to be too large.
(This is a magic loop that gets lowered to memclr.)
(This is meaningless as a server because renegotiation is not supported in that case.)
(This is one, in the Montgomery domain.)
(This is the name of a temporary file.) Because we run the temporary file in 'go run' and 'go test', the name will show up in ps listings.
(This is the standard convention.) Not friendly to overwrite in place, but the callers below don't care.
(This is used for types reachable by reflection.)
(This is used in order to remove ambiguity with optional elements.)
(This shouldn't be far from the bottom of the stack, so there's little cost in handling everything below it carefully.)
(Transport support requires Go 1.6 or later)
(Typically the block is bigger than sizeof(MLink).) Since assignments to mlink.next will result in a write barrier being performed this cannot be used by some of the internal GC structures.
(Unless we're fetching test dependencies for this package, in which case we want to process it again.)
(Use ld's -headerpad option) dsym is the path to the macho file containing DWARF from dsymutil.
(We could also require that SP be changed only after g, but the stack bounds check is needed by other cases, so there is no need to impose an additional requirement.)
(We don't want Testiness.)
(When BuildmodeShared, always keep typelinks and itablinks.)
(When not compiling to support Go shared libraries, all symbols are local in this sense unless there is a cgo_export_* directive).
(a compiler might see that p is a pointer and go looking in S without noticing PS.)
(all SelectorExprs are in main, not lib)
(also tests success cases, but mostly it's about errors).
(and changed in Issue 14391)
(any other unsatisfied word will work as well, but ``ignore'' is conventional.)
(arg0 + arg1) / 2 as unsigned, all 64 result bits
(as the continuous build coordinator does).
(be consistent with generating three digits, since the Transport requires it)
(by setting srv.TLSNextProto non-nil) It must only be called via srv.nextProtoOnce (use srv.setupHTTP2).
(cgo depends on -fPIC fundamentally.)
(con, con is a 'mask').
(e.g. in a struct with fields '_type' and 'type', the latter would be rendered as '__type' in Go).
(e.g. on proxy.c.Do(req2))
(either a new part or the end boundary)
(for example, from the client having gone away)
(g++/h/i) where ++ is a postfix operator on g is much more common.
(golang.org/issue/10206)
(golang.org/issue/4183) TODO(bradfitz): also bound this copy in time.
(golang.org/issue/6932) TODO(rsc): Decide the appropriate integer types for various fields.
(golang.org/issue/7069)
(http2 doesn't have Hijack)
(i.e. the second point is affine.)
(if not hijacked, the server should close the connection afterwards)
(if we have the bytes on the machine, we might as well read them)
(including any calls onto interfaces returned via that Conn, such as calls on Tx, Stmt, Result, Rows)
(int32)(-1) if carry is set, 0 if carry is clear.
(int64)(-1) if carry is set, 0 if carry is clear.
(io.Pipe is always unbuffered)
(last-i) is the shift, and lenSuffix is len(suffix).
(likely editor temporary files) - files with build constraints not satisfied by the context
(linux AND 386) OR (darwin AND (NOT cgo))
(linux OR darwin) AND 386
(methodsym), typesym, weaksym
(min and max are not themselves valid.)
(n is always even if karatsubaThreshold is even, but be conservative)
(nb could be 1.) Since we loaded typ.ptrdata/sys.PtrSize bits but are pretending to have typ.size/sys.PtrSize, there might be no replication necessary/possible.
(no argument evaluated yet)
(not permitted by RFC 2616, but we'll accept it anyway)
(note: no leading spaces and no space in "//go") where command is the generator to be run, corresponding to an executable file that can be run locally.
(or for cancelation or death)
(permitted by RFC 2616)
(pipe).Field1.Field2 has pipe as .Node, fields as .Field.
(reg+reg) Register pair for PPC64.
(reg, reg) A destination register pair.
(required by addMulVVW and the for loop).
(same invariants and behavior as parseHeaderFieldRepr)
(see fmt.go, parser.go as "documentation" for how to use/setup data structures)
(selector) operator on structs.
(should NOT panic with slice index error, for example.)
(so we can clean up the nextFile)
(superset of) keys of the above map, for deterministic iteration map from location to the value it contains
(tagString is only used when tracing is enabled)
(the io.Reader interface's contract promises nothing about the return values of Read calls after an error, yet this package does do multiple Reads after error)
(the jumps are actually still valid code, since they're just going to another goto to the same label.
(the original Request given to RoundTrip is not modified)
(this code is not valid Go because the first t cannot be accessed and thus is never used, the extra scope is needed for the correct error message).
(to avoid races in tests)
(uint64(arg0) + uint64(arg1)) / 2, correct to all 64 bits.
(used for mime type, before sniffing) if modtime.IsZero(), modtime is unknown.
(we can't use an pre-initialized array because we must be sure all types are set up)
(we don't use nat.add because we need z to stay the same slice, and we don't need to normalize z after each addition)
(where things are root but not quite) Both of these are our own environment variables.
(x,y) of the base point
* A span may transition from free to in-use or stack during any GC phase.
* A struct field with tag "-" is never unmarshalled into.
* An anonymous struct field is handled as if the fields of its value were part of the outer struct.
* Backward copies: Runs of one or more symbols are copied from previously emitted data.
* If the XML element contains a sub-element that hasn't matched any of the above rules and the struct has a field with tag ",any", unmarshal maps the sub-element to that struct field.
* If the XML element contains a sub-element whose name matches a field without any mode flags (",attr", ",chardata", etc), Unmarshal maps the sub-element to that struct field.
* If the XML element contains character data, that data is accumulated in the first struct field that has tag ",chardata".
* If the XML element contains comments, they are accumulated in the first struct field that has tag ",comment".
* If the XMLName field has an associated tag of the form "name" or "namespace-URL name", the XML element must have the given name (and, optionally, name space) or else Unmarshal returns an error.
* If the struct has a field named XMLName of type xml.Name, Unmarshal records the element name in that field.
* Literal insertions: Runs of one or more symbols are inserted into the data stream as is.
* by the sql package, for converting from a driver's Value type to a user's type in a scan.
* converting a value as given from the database into one of the driver Value types.
*CertRevocationCrlInfo
*Error entries are sorted by position, other errors are sorted by error message, and before any *Error entry.
*GenDecl with CONST, TYPE, or VAR token
*Ident, *ParenExpr, *SelectorExpr, *StarExpr, or any of the *XxxTypes
*StdSizes implements Sizes.
*ast.File ast.FuncType ast.BlockStmt ast.IfStmt ast.SwitchStmt ast.TypeSwitchStmt ast.CaseClause ast.CommClause ast.ForStmt ast.RangeStmt
*ast.File, or ast.Expr, ast.Decl, ast.Spec, or ast.Stmt
*ast.ImportSpec    *PkgName for dot-imports and imports without renames ast.CaseClause    type-specific *Var for each type switch case clause (incl.
*byte is really *runtime.Type
*gcBits triggers recursive type bug.
*sel is on the current goroutine's stack (regardless of any escaping in selectgo).
*typ where typ is an interface has no methods.
*x for x of type *T has type T when x is an expr.
+ extra Constants for the first byte in CreatorVersion
+ filename + extra + comment
+ v04*z**4 with absolute approximation error bounded by 2**-72.
++ and -- are not regexp preceders, but + and - are whether they are used as infix or prefix operators.
+1 because EOF also has a position
+1 because p.pc is incremented in append, below.
+1 because symbolizer expects return pc.
+1 for Val, -1 for Opt, 0 for not yet set
+1 for sentinel for common case of s.next()
+1 for sign of 64bit value in base 2
+1 to step past closing brace.
+100 in case we screw up
+1: skip tabwriter.Escape
+Inf + -Inf -Inf + +Inf value of z is undefined but make sure it's valid
+Inf - +Inf -Inf - -Inf value of z is undefined but make sure it's valid
+Inf is OK in both 32- and 64-bit floats.
+PCQuantum because traceFrameForPC expects return PCs and subtracts PCQuantum.
+PCQuantum so that previous instruction is in same function
+build amd64 +build linux darwin Copyright 2016 The Go Authors.
+build amd64 amd64p32
+build amd64 amd64p32 +build darwin dragonfly freebsd linux nacl netbsd openbsd solaris
+build arm mips64 mips64le
+build cgo +build darwin +build arm arm64
+build cgo +build darwin +build arm arm64 ios
+build cgo Even though this file requires no C, it is used to provide a listGroup stub because all the other Solaris calls work.
+build cmd_go_bootstrap This code is compiled only into the bootstrap 'go' binary.
+build darwin +build arm arm64
+build darwin dragonfly freebsd
+build darwin dragonfly freebsd linux nacl netbsd openbsd
+build darwin dragonfly freebsd linux nacl netbsd openbsd plan9 solaris Unix cryptographically secure pseudorandom number generator.
+build darwin dragonfly freebsd linux nacl netbsd openbsd solaris
+build darwin dragonfly freebsd linux nacl netbsd openbsd solaris Export guts for testing.
+build darwin dragonfly freebsd linux nacl netbsd openbsd solaris Unix environment variables.
+build darwin dragonfly freebsd linux nacl netbsd openbsd solaris windows
+build darwin dragonfly freebsd linux netbsd openbsd
+build darwin dragonfly freebsd linux netbsd openbsd plan9
+build darwin dragonfly freebsd linux netbsd openbsd solaris
+build darwin dragonfly freebsd linux netbsd openbsd solaris DNS client: see RFC 1035.
+build darwin dragonfly freebsd linux netbsd openbsd solaris Fork, exec, wait, etc.
+build darwin dragonfly freebsd linux netbsd openbsd solaris Minimal RFC 6724 address selection.
+build darwin dragonfly freebsd linux netbsd openbsd solaris Read system DNS config from /etc/resolv.conf
+build darwin dragonfly freebsd linux netbsd openbsd solaris Read system port mappings from /etc/services
+build darwin dragonfly freebsd linux netbsd openbsd solaris Socket control messages
+build darwin dragonfly freebsd linux netbsd openbsd solaris windows
+build darwin dragonfly freebsd linux netbsd openbsd windows
+build darwin dragonfly freebsd linux netbsd openbsd windows solaris
+build darwin dragonfly freebsd nacl netbsd openbsd os code shared between *BSD systems including OS X (Darwin) and FreeBSD.
+build darwin dragonfly freebsd nacl netbsd openbsd solaris
+build darwin dragonfly freebsd netbsd openbsd
+build darwin dragonfly freebsd netbsd openbsd BSD system call wrappers shared by *BSD based systems including OS X (Darwin) and FreeBSD.
+build darwin dragonfly freebsd netbsd openbsd Berkeley packet filter for BSD variants
+build darwin dragonfly freebsd netbsd openbsd solaris
+build darwin dragonfly freebsd openbsd
+build darwin dragonfly nacl netbsd openbsd solaris
+build darwin freebsd netbsd
+build darwin nacl netbsd openbsd
+build darwin nacl netbsd openbsd plan9 solaris windows
+build darwin,386 darwin,amd64 dragonfly freebsd linux nacl netbsd openbsd solaris Parse "zoneinfo" time zone file.
+build dragonfly freebsd linux
+build dragonfly freebsd linux nacl netbsd openbsd solaris
+build dragonfly freebsd linux netbsd solaris
+build dragonfly freebsd nacl netbsd openbsd solaris
+build dragonfly freebsd netbsd openbsd
+build dragonfly linux netbsd
+build dragonfly linux netbsd openbsd solaris
+build freebsd linux netbsd
+build freebsd,386 freebsd,arm
+build gen This program generates Go code that applies rewrite rules to a Value.
+build ignore Build this command explicitly: go build gotype.go
+build ignore Compute Fibonacci numbers with two goroutines that pass integers back and forth.
+build ignore Generate Windows callback assembly file.
+build ignore Generate a self-signed X.509 certificate for a TLS server.
+build ignore Generate builtin.go from builtin/runtime.go and builtin/unsafe.go.
+build ignore Generates root_darwin_armx.go.
+build ignore The gen command generates Go code (in the parent directory) for all the architecture-specific opcodes, blocks, and rewrites.
+build ignore The run program is invoked via the dist tool.
+build ignore This file contains declarations to test the assembly in test_asm.s.
+build ignore This file contains tests for the dead code checker.
+build ignore This file is run by the x509 tests to ensure that a program with minimal imports can sign certificates without errors resulting from missing hash functions.
+build ignore This is a mini version of the stringer tool customized for the Anames table in the architecture support for obj.
+build ignore This program generates md5block.go Invoke as
+build ignore Unicode table generator.
+build ignore detect attempts to autodetect the correct values of the environment variables used by go_darwin_arm_exec.
+build ignore encgen writes the helper functions for encoding.
+build ignore fastlog2Table contains log2 approximations for 5 binary digits.
+build ignore go:generate echo Success
+build ignore mkpost processes the output of cgo -godefs to modify the generated types.
+build linux +build mips64 mips64le
+build linux +build ppc64 ppc64le
+build linux darwin dragonfly freebsd openbsd netbsd solaris
+build linux dragonfly openbsd solaris
+build math_big_pure_go
+build mips64 mips64le
+build mips64 mips64le +build linux
+build msan,linux,amd64
+build nacl plan9 solaris
+build nacl plan9 windows
+build netbsd openbsd
+build race +build darwin freebsd linux
+build race Public race detection API, present iff build with -race.
+build race This program is used to verify the race detector by running the tests and parsing their output.
+build race,linux,amd64 race,freebsd,amd64 race,darwin,amd64 race,windows,amd64
+build test_run Compute Fibonacci numbers with two goroutines that pass integers back and forth.
+build test_run Pass numbers along a chain of threads.
+build test_run Run the game of life in C using Go for parallelization.
+build toolate // ERROR "build comment must appear before package clause and be followed by a blank line"
+build windows Package registry provides access to the Windows registry.
+len(text)+1 since comment applies to next line
+register (ULEB128 offset)
+v on structs with Stringable items
, trailing zeros included
- "Fast Stable In-Place Sorting with O(n) Data Moves" J.I.
- "Practical in-place mergesort" from  Jyrki Katajainen, Tomi A.
- "all" expands to all package directories found in all the GOPATH trees.
- "cmd" expands to the Go repository's commands and their internal libraries.
- "std" is like all but expands to just the packages in the standard Go library.
- (.Lloadfrom + 4)) assembles to:
- .go files in package documentation - files starting with _ or .
- 2: one above, one more below
- 3-index slices always require the 2nd and 3rd index
- A Pointer can be converted to a pointer value of any type.
- A Pointer can be converted to a uintptr.
- A boolean, string, character, integer, floating-point, imaginary or complex constant in Go syntax.
- A parenthesized instance of one the above, for grouping.
- A type assertion x.(T) where T is an interface type is invalid if any (statically known) method that exists for both x and T have different signatures.
- A uintptr can be converted to a Pointer.
- A variable declared inside a function literal can falsely be identified as shadowing a variable in the outer function.
- All other types have size WordSize.
- All the optimal in-place sorting/merging algorithms I found are either unstable or rely on enough different elements in each step to encode the performed block rearrangements.
- An endpoint holder that opens a destination-unspecific datagram connection, known as a datagram listener
- An endpoint holder that opens a passive stream connection, known as a stream listener
- An endpoint holder that opens an active stream or a destination-specific datagram connection, known as a dialer
- An endpoint holder that opens the other connection, such as talking to the protocol stack inside the kernel
- Boolean types use the low-order byte of a register.
- Contentions are scaled to cycles.
- Delays are scaled to cycles and then to nanoseconds.
- Floating-point types live in the low natural slot of an sse2 register.
- For conversions to interfaces, use the argument's default type.
- For latency-sensitive applications, such as web browsing, each TLS record should fit in one TCP segment.
- For throughput-sensitive applications, such as large file transfers, larger TLS records better amortize framing and encryption overheads.
- GCC's __rotate for block rotations: Not faster.
- In the kernel form, zero value of the length field doesn't mean 0.0.0.0/0 or ::/0
- Keep untyped nil for untyped nil arguments.
- Often "optimal" algorithms are optimal in the number of assignments but Interface has only Swap as operation.
- Package "unsafe" contains special signatures requiring extra care when printing them - ignore since it is not going to change w/o a language change.
- Phi optimization is a separate pass (in ../ssa/phielim.go).
- The character '.' (period): .
- The keyword nil, representing an untyped Go nil.
- The length field of the kernel form indicates the prefix length in bytes, not in bits
- The name of a field of the data, which must be a struct, preceded by a period, such as .Field The result is the value of the field.
- The size of a struct is the offset of the last field plus that field's size.
- The size of an array of n elements corresponds to the size of a struct of n consecutive fields of the array's element type.
- The size of explicitly sized basic types (int16, etc.) is the specified size.
- The size of slices is 3*WordSize.
- The size of strings and interfaces is 2*WordSize.
- There are SymID in the object file that should really just be strings.
- Unused portions of AuxInt (or the Val portion of ValAndOff) are filled by sign-extending the used portion.
- We choose R0 as the temporary register.
- We do not use AH,BH,CH,DH registers.
- We don't care about the API of commands.
- We want to copy stacktmp1 to stacktmp0.
- When doing sub-register operations, we try to write the whole destination register to avoid a partial-register write.
- a field with a tag including the "omitempty" option is omitted if the field value is empty.
- a field with tag ",attr" becomes an attribute with the field name in the XML element.
- a field with tag ",chardata" is written as character data, not as an XML element.
- a field with tag ",comment" is written as an XML comment, not subject to the usual marshalling procedure.
- a field with tag ",innerxml" is written verbatim, not subject to the usual marshalling procedure.
- a field with tag "-" is omitted.
- a field with tag "name,attr" becomes an attribute with the given name in the XML element.
- an anonymous struct field is handled as if the fields of its value were part of the outer struct.
- are indirected before calling their encoders.
- converts its arguments to a slice of Values.
- file:line info for variables - make strings a typedef so prettyprinters can see the underlying string type
- for YCbCrK, the Y and K channels have full samples.
- if u.Host is empty, host/ is omitted.
- if u.Host is non-empty and u.Path begins with a /, the form host/path does not add its own /.
- msym is the method symbol - t is function type (with receiver) - tpkg is the package of the type declaring the method during import, or nil (ignored) --- for verification only
- new malloc spans can be created during the concurrent sweep Even if this is stop-the-world, a concurrent exitsyscall can allocate a stack from heap.
- returns the results as a slice of Values, one per formal result.
- the method has return type error.
- the method has two arguments, both exported (or builtin) types.
- the method is exported.
- the method's second argument is a pointer.
- this is the last line of note 4
-- should not appear in valid identifiers.
-- time.Duration Value
--- compiler-specific export data ---
--- compiler-specific export data --- read compiler-specific flags
--- generic export data ---
--- inlined function bodies ---
-----BEGIN MALFORMED BLOCK----- junk that may look like header lines or data lines, but no END line
-1 because first digit was printed before '.'
-1 disables passing the first argument in register
-1 disables use of REGARG
-1 means no corruption.
-1 means no file change
-1 means signed, +1 means unsigned, 0 means non-integer/non-pointer.
-1 means the driver doesn't know how to count the number of placeholders, so we won't sanity check input here and instead let the driver deal with errors.
-1 means the value is not used.
-1 means unknown, 0 means exactly none
-1 to avoid final newline
-1022  smallest unbiased exponent (normal)
-1074  smallest unbiased exponent (denormal)
-126  smallest unbiased exponent (normal)
-149  smallest unbiased exponent (denormal)
-1: global, 0: return variables, 1:function top level, increased inside function for every loop or label to mark scopes
-1: no separator before first group
-A is for cmd/gc/mkbuiltin script, so export everything
-B disables bounds checks
-D address Set data segment address.
-E entry Set entry symbol name.
-H type Set executable format type.
-L Show complete file path in error messages.
-N Disable optimizations.
-R quantum Set address rounding quantum.
-S -S Print assembly listing to standard output (code and data).
-S Print assembly listing to standard output (code only).
-T address Set text segment address.
-V Print compiler version and exit.
-V Print the linker version and exit.
-args or --args signals that everything that follows should be passed to the test.
-asmflags 'flag list' arguments to pass on each go tool asm invocation.
-asmhdr file Write assembly header to file.
-benchmem Print memory allocation statistics for benchmarks.
-benchtime t Run enough iterations of each benchmark to take t, specified as a time.Duration (for example, -benchtime 1h30s).
-blockprofile block.out Write a goroutine blocking profile to the specified file when all tests are complete.
-blockprofilerate n Control the detail provided in goroutine blocking profiles by calling runtime.SetBlockProfileRate with n.
-buildmode mode Set build mode (default exe).
-buildmode mode build mode to use.
-c Compile the test binary to pkg.test but do not run it (where pkg is the last element of the package's import path).
-c or profiling flag: create action to copy binary to ./test.out.
-cmd Treat a command (package main) like a regular package.
-compiler name name of compiler to use, as in runtime.Compiler (gccgo or gc).
-complete Assume package has no non-Go components.
-count n Run each test and benchmark n times (default 1).
-cover Enable coverage analysis.
-coverpkg pkg1,pkg2,pkg3 Apply coverage analysis in each test to the given list of packages.
-coverprofile cover.out Write a coverage profile to the file after all tests have passed.
-cpu 1,2,4 Specify a list of GOMAXPROCS values for which the tests or benchmarks should be executed.
-cpuprofile cpu.out Write a CPU profile to the specified file before exiting.
-cpuprofile file Write CPU profile to file.
-cpuprofile file Write a CPU profile for the compilation to file.
-d Disable generation of dynamic executables.
-d suppresses dynamic loader format
-d suppresses dynamic loader format, so we may as well not compute these sections or mark their symbols as reachable.
-debug-define Debugging option.
-debug-gcc Debugging option.
-dynlink Allow references to Go symbols in shared libraries (experimental).
-dynlinker Write dynamic linker as part of -dynimport output.
-dynout file Write -dynimport output to file.
-dynpackage package Set Go package for -dynimport output.
-e Print all (including spurious) errors.
-e Remove the limit on the number of errors reported (default limit is 10).
-exec flag, for run and test
-exec xprog Run the test binary using xprog.
-exportheader file If there are any exported functions, write the generated export declarations to file.
-extar ar Set the external archive program (default "ar").
-extld linker Set the external linker (default "clang" or "gcc").
-extldflags flags Set space-separated flags to pass to the external linker.
-f Ignore version mismatch in the linked archives.
-g Disable Go package data checks.
-gccgo Generate output for the gccgo compiler rather than the gc compiler.
-gccgoflags 'arg list' arguments to pass on each gccgo compiler/linker invocation.
-gccgopkgpath path The -fgo-pkgpath option to be used with gccgo.
-gccgoprefix prefix The -fgo-prefix option to be used with gccgo.
-gcflags 'arg list' arguments to pass on each go tool compile invocation.
-godefs Write out input file in Go syntax replacing C package names with real values.
-h Halt with a stack trace at the first error detected.
-i Install packages that are dependencies of the test.
-import_runtime_cgo If set (which it is by default) import runtime/cgo in generated output.
-import_syscall If set (which it is by default) import syscall in generated output.
-importpath string The import path for the Go package.
-installsuffix suffix a suffix to use in the name of the package installation directory, in order to keep output separate from default builds.
-l Do not print reformatted sources to standard output.
-largemodel Generated code that assumes a large memory model.
-ldflags 'flag list' arguments to pass on each go tool link invocation.
-libgcc file Set name of compiler support library.
-linkmode mode Set link mode (internal, external, auto).
-linkshared Link against installed Go shared libraries (experimental).
-ll and more is useful to flush out bugs.
-memprofile file Write memory profile for the compilation to file.
-memprofile file Write memory profile to file.
-memprofile mem.out Write a memory profile to the file after all tests have passed.
-memprofilerate n Enable more precise (and expensive) memory profiles by setting runtime.MemProfileRate.
-memprofilerate rate Set runtime.MemProfileRate for the compilation to rate.
-memprofilerate rate Set runtime.MemProfileRate to rate.
-msan Insert calls to C/C++ memory sanitizer.
-msan Link with C/C++ memory sanitizer support.
-msan enable interoperation with memory sanitizer.
-n and -x are important enough to be mentioned explicitly in the docs but they are part of the build flags.
-n print the commands but do not run them.
-nolocalimports Disallow local (relative) imports.
-o file Compile the test binary to the named file.
-o file Write object to file (default file.o or, with -pack, file.a).
-o file Write output to file (default a.out, or a.out.exe on Windows).
-objdir directory Put all generated files in directory.
-outputdir directory Place output files from profiling in the specified directory, by default the directory in which "go test" is running.
-p n the number of programs, such as build commands or test binaries, that can be run in parallel.
-p path Set expected package import path for the code being compiled, and diagnose imports that would cause a circular dependency.
-pack Write a package (archive) file rather than an object file -race Compile with race detector enabled.
-parallel n Allow parallel execution of test functions that call t.Parallel.
-pkgdir dir install and load all packages from dir instead of the usual locations.
-r rule Apply the rewrite rule to the source before reformatting.
-race Link with race detection libraries.
-race enable data race detection.
-run regexp Run only those tests and examples matching the regular expression.
-s Omit the symbol table and debug information.
-s Try to simplify code (after applying the rewrite rule, if any).
-short Tell long-running tests to shorten their run time.
-style comment (no newline at the end)
-style comment always contains a newline
-style comment literal doesn't contain newline
-style comment: look for newline
-tags 'tag list' a list of build tags to consider satisfied during the build.
-timeout t If a test runs longer than t, panic.
-tmpdir dir Write temporary files to dir.
-toolexec 'cmd args' a program to use to invoke toolchain programs like vet and asm.
-trace Generate print statement after every syscall.
-trace trace.out Write an execution trace to the specified file before exiting.
-trimpath prefix Remove prefix from recorded source file paths.
-u Show documentation for unexported as well as exported symbols and methods.
-v Print trace of linker operations.
-v Verbose mode -printfuncs A comma-separated list of print-like function names to supplement the standard list.
-v Verbose output: log all tests as they are run.
-v print the names of packages as they are compiled.
-w Do not print reformatted sources to standard output.
-w Omit the DWARF symbol table.
-work print the name of the temporary work directory and do not delete it when exiting.
-x print the commands.
.(*FuncType) underneath
...except for the bizarre soft hyphen.
...of the platform's SP register...
...of the return address...
...plus the word size (because the call instruction implicitly adds one word to the frame).
...to use the value in the platform's SP register (defined in l.go)...
../../../../runtime/type.go:/UnsafePointerType
../../../../runtime/type.go:/interfaceType
../../../../runtime/type.go:/structType for security, only the exported fields.
../cmd/cgo/cgo -cdefs defs_linux.go defs1_linux.go defs2_linux.go
.000 or .999 - repeated digits for fractional seconds.
.Children of last entry returned by Next
.Val(AttrSibling) of last entry returned by Next
.bss doesn't have data in object file
.bss must have all 0s
.c, .h C source files.
.cc, .cpp and .cxx source files
.cc, .cxx and .cpp source files
.f, .F, .for and .f90 Fortran source files
.go source files (excluding CgoFiles, TestGoFiles, XTestGoFiles)
.go source files ignored for this build
.go source files that import "C"
.go source files with detected problems (parse error, wrong package name, and so on)
.go sources files that import "C"
.go sources ignored due to build constraints
.got (and .toc on ppc64)
.h, .hh, .hpp and .hxx source files
.i refers to s4.S1.i, unambiguously
.lib section in a.out corrupted
.m (Objective-C) source files
.m Objective-C source files.
.namedT2.namedT0.W addressable
.plt entry, this depends on the .got entry
.plt is a data section filled solely by the dynamic linker (more like .plt.got on other architectures).
.s, .S Assembler source files.
.swig, .swigcxx SWIG definition files.
.syso System object files.
.syso object files to add to archive Cgo directives
.syso system object files added to package Cgo directives
.syso system object files to add to archive Cgo directives
/*-style comments may end on a different line than where they start.
// +build linux darwin +build 386
// +build linux,cgo darwin,cgo
// +build windows linux
// ERROR "import path"
// ERROR "unexpected semicolon"
// Field appears in JSON as key "Field" (the default), but the field is skipped if empty.
// Field appears in JSON as key "myName" and the field is omitted from the object if its value is empty, as defined above.
// Field appears in JSON as key "myName".
// Field is ignored by this package.
// FromContext returns the User value stored in ctx, if any.
// FuncArgsType contains Type fields specific to TFUNCARGS types.
// INVALID: a directly-declared header will not hold Data as a reference.
// INVALID: end points outside allocated space.
// INVALID: uintptr cannot be stored in variable before conversion back to Pointer.
// INVALID: uintptr cannot be stored in variable before implicit conversion back to Pointer during system call.
// NewContext returns a new Context that carries value u.
// Package user defines a User type that's stored in Contexts.
// Stream generates values with DoSomething and sends them to out until DoSomething returns an error or ctx.Done is closed.
// This comment is associated with the hello constant.
// This comment is associated with the main function.
// User is the type of value stored in the Contexts.
// key is an unexported type for keys defined in this package.
// objects defined in Universe scope have no package
// userKey is the key for user.User values in Contexts.
//go: appears at the beginning of the line and is syntactically safe.
//go:binary-only-package
/etc/mime.types /etc/apache2/mime.types /etc/apache/mime.types
/etc/services file does not exist on android, plan9, windows.
/sys/include/ape/sys/socket.h:/SOMAXCONN
/tmp/x.go:5: cannot use _ as value
/usr/bin does not usually exist on Plan 9 or Android.
0 Header contains the request header fields either received by the server or to be sent by the client.
0 _Grunnable means this goroutine is on a run queue.
0 has no effect when - is present.
0 is considered to have length 1.
0 is default, more positive is less likely.
0 is end of iteration
0 means no ":status" line
0 means unlimited buf is the unparsed buffer.
0 or 00 is not a legal offset.
0 or 1 expression on RHS.
0) a raw zero value has 1 as denominator
0-3, the R_METHODOFF relocs of runtime.uncommontype
0-length objects are okay.
0.01 represented directly in float64 is F64.
0.1s seems plenty long
01: scalar  not marked 10: pointer not marked 11: pointer     marked 00: scalar      marked Xoring with 01 will flip the pattern from marked to unmarked and vica versa.
07), use an _ instead of a space in the layout string.
0F 01 F8, 0F 05, 0F 07: these are 64-bit instructions but libopcodes accepts them.
0F 01 F8: we say swapgs but that's only valid in 64-bit mode.
0F 18 77 11: Invalid instructions for which libopcodes prints "nop/reserved".
0F AE E9: xed says lfence, which is wrong (only 0F AE E8 is lfence).
0x prefix selects hex
0x00 if positive or zero, 0xff if negative
0x00c0 causes conflicts with AddressSanitizer which reserves all memory up to 0x0100.
0x17F is an old English long s (looks like an f) and folds to s.
0x212A is the Kelvin symbol and folds to k.
0x5F is a single-byte pop instruction.
0x6f MMX MOVQ (shorter encoding)
0x80 and 0x40 are reserved
0x80 is variable length
0xE0-0xFF reserved for user-specific
0xd800-0xdc00 encodes the high 10 bits of a pair.
0xdc00-0xe000 encodes the low 10 bits of a pair.
0xef gave constant type float64.
1 1-byte size of data retrieved
1 2-byte offset of DIE
1 4- or 8-byte offset of DIE
1 4-byte offset of DIE
1 ULEB128 size of piece addressed
1 _Grunning means this goroutine may execute user code.
1 bit - lock for read operations.
1 bit - lock for write operations.
1 constant address (size target specific)
1 op, 1 byte stack index
1 op, ULEB128 register
1 op, ULEB128 size of piece
1 op, signed 2-byte constant
1 op, signed LEB128 constant
1 or 0: enable or disable panning (default enabled)
1 or 0: enable or disable zooming (default enabled)
1 pointer at start of representation
1 pointer can remain on stack or elsewhere
1 signed 2-byte constant
1 successor, control is call op (of memory type)
1 successor, control is nilcheck op (of void type)
1) Compute normalized mantissa mant and exponent exp for x such that the lsb of mant corresponds to 1/2 ulp for the precision of x (i.e., for mant we want x.prec + 1 bits).
1) Everything reachable from the object must be marked.
1) If there is a binary operator with a right side unary operand that would clash without a space, the cutoff must be (in order):
1) Mutator writes below the lowest un-hit stack barrier.
1) Of those fields, if any are JSON-tagged, only tagged fields are considered, even if there are multiple untagged fields that would otherwise conflict.
1) The log.Print from the http server (generated by the caught panic) will go to the pipe instead of stderr, making the output quiet.
1) find reverse postordering 2) find approximate dominators, the actual dominators if the flow graph is reducible otherwise, dominators plus some other non-dominators.
1-byte redo (see undo method)
1-byte size of data retrieved
1-byte version, then 15 bytes of padding
1-word objects are always pointers
1.7 added an additional seq arg
1.72 seconds instead of 172 seconds
10 MB is a lot of text.
10.5.1 Limits on Header Block Size: ..
100 Continue response was written
100 Hz is a reasonable choice: it is frequent enough to produce useful data, rare enough not to bog down the system, and a nice round number to make it easy to convert sample counts to seconds.
100 is enough spewage
100-continue but requesting client to deny us, so it never reads the body.
100-digit Fibonacci number Test a for primality.
100-nanosecond intervals since January 1, 1601
101 and 251 are arbitrary prime numbers.
1011 1111 These names of these constants are chosen to give nice alignment in the table below.
1023  largest unbiased exponent (normal)
11 bytes, an odd number.
110011 is shifted h.shift and complemented.
12 take into account the maximum nacl literal pool alignment padding size
12-bit unsigned, shifted left by 0 or 12
12-bit unsigned, unshifted
127  largest unbiased exponent (normal)
1280 is a reasonable initial size for IP over Ethernet, see RFC 4035
13 bytes, another odd number.
136:148 --- consider using pax for finer granularity
15 Start scanning the window from top bit
16 bit GOT offset for GD
16 bit GOT offset for IE
16 bit GOT offset for LDM
16 bit PC relative reference
16 bit call through glbl offset tbl
16 bit escape and opcode escape
16 bit escape and opcode escape + REX.W
16 bytes is enough to describe 128 pointer-sized words, 512 or 1024 bytes depending on the system.
16 general + 16 floating
16 seems to provide enough amortization, but other than that it's mostly arbitrary number.
16-bit addressing - no scale
16-bit instruction prefix
192.0.2.0/24 is "TEST-NET" in RFC 5737 for use solely in documentation and example source code and should not be used publicly.
1a) a zero value remains zero independent of denominator
1st FieldDecl A type name used as an anonymous field looks like a field identifier.
1st ParameterDecl A list of identifiers looks like a list of type names.
2 ULEB128 register followed by SLEB128 offset
2 _Gsyscall means this goroutine is executing a system call.
2 bits per work, 4 pairs per byte, and a mask is hard coded.
2 for OABI, 3 for EABI
2 successors, always takes the first one (second is dead)
2 tx per year, 100 years on each side of this year
2's complement big-endian.
2's complement little-endian.
2) 0 is represented as all zeros, -0 isn't.
2) Finalizer specials (which are not in the garbage collected heap) are roots.
2) If there is a mix of level 5 and level 4 operators, then the cutoff is 5 (use spaces to distinguish precedence) in Normal mode and 4 (never use spaces) in Compact mode.
2) If there is exactly one field (tagged or not according to the first rule), that is selected.
2) Mutator writes above the lowest un-hit stack barrier.
2) On Read failure, if reqWasCanceled is true, the error is wrapped and marked as net.Error that hit its timeout.
2) Otherwise, if there are transition times, and the first transition is to a zone in daylight time, find the first non-daylight-time zone before and closest to the first transition zone.
2) Precedence uses Go rules not C rules.
2) The value received by the receiver (the current G) is written to ep.
2) Upper-case keys define aliases for package sets, which can then be used as dependencies by other rules.
2) We read from the pipe to verify that the handler actually caught the panic and logged something.
2) We reserve space for a pointer in the .plt section (once per referenced dynamic function).
2) aliasing of numerator
2) move factory functions
2) round to desired precision
2*tinyBlockSize slack is for any boundary effects.
2, 3, and 4 are all plausible maximums depending on the hardware details of the machine.
2-address opcode arithmetic
2-element slice of pointer.
2-input arithmetic Types must be consistent with Go typing.
20 bits - number of outstanding read waiters.
20 bits - number of outstanding write waiters.
20 bits - total number of references (read+write+misc).
2048*sqrt(2)*cos(1*pi/16)
2048*sqrt(2)*cos(2*pi/16)
2048*sqrt(2)*cos(3*pi/16)
2048*sqrt(2)*cos(5*pi/16)
2048*sqrt(2)*cos(6*pi/16)
2048*sqrt(2)*cos(7*pi/16)
255 char name is fine:
256 char name is bad:
26 9B: libopcodes reports "fwait"/1, ignoring segment prefix.
28-bit circular left shift
2: CS/HS (C set), 3: CC/LO (C clear)
2a) an integral value becomes a fraction depending on denominator
2b) an integral value becomes a fraction depending on denominator
2nd operand must always be a register.
2nd register output operand
2nd word -- The size of the stack (StackSize).
3 _Gwaiting means this goroutine is blocked in the runtime.
3 varints (max 10 each) + some bytes
3) Compute upper bound by adding 1/2 ulp.
3) If there are no level 4 operators or no level 5 operators, then the cutoff is 6 (always use spaces) in Normal mode and 4 (never use spaces) in Compact mode.
3) Otherwise, use the first zone that is not daylight time, if there is one.
3) Runtime writes to the stack.
3) The blocking Read call prevents this TestHandlerPanic function from exiting before the HTTP server handler finishes crashing.
3) We generate the "call stub" x_stub (once per dynamic function/object file pair).
3) aliasing of denominator
3) capture errors, expect two.
3) changing the numerator/denominator of a Rat changes the Rat
3) find all nodes with a predecessor dominated by the current node.
3) read digits out and format
301 (Moved Permanently) 302 (Found) 303 (See Other) 307 (Temporary Redirect)
32 bit but illegal if 64-bit mode
32 bit offset from start of TLS block
32 bit offset to GOT (index,off) pair
32 bit offset to GOT (index,zero) pair
32 bit offset to GOT static TLS offset entry
32 bit offset within static TLS block
32 bit, sign-extended to 64
32 bytes provides more opportunities for combining, but can lead to 4x worst case wastage.
32 general + 32 floating
32 low bits of auxint
32-bit access registers
32-bit machine cannot print 64-bit results
32-bit or 64-bit form Consume SIB encoding if present.
337:345 keep a reference to the prefix to allow to overwrite it later if we detect that we can use ustar longnames instead of pax
345:500  prefix Use the GNU magic instead of POSIX magic if we used any GNU extensions.
386 float register bug used to load constant before call
3rd word -- The first address on the stack.
4 _Gmoribund_unused is currently unused, but hardcoded in gdb scripts.
4 bytes, pointer aligned
4 bytes: length, must be multiple of thearch.ptrsize 4 bytes: Pointer to the CIE above, at offset 0 ptrsize: initial location ptrsize: address range
4 is to exclude the length field.
4 tabs + token bytes + newline
4 x 4,000,000 exceeds MaxStackVarSize, therefore it must be heap allocated if pointers are 4 bytes or larger.
4 zeros: the string termination + 3 fields.
4) Otherwise, use the first zone.
4) aliasing of numerator and denominator
4) capture errors, stop after first error.
4*Widthptr is an arbitrary constant.
4*sizeof(uintreg): extra space added below sizeof(uintreg): caller's LR (arm) or return address (x86, in gostartcall).
4- or 8- byte offset of DIE
4.1.2.3 is not normative, but "Domain Matching" (5.1.3) and "Canonicalized Host Names" (5.1.2) are.
4.5 (reads and writes zip64 archives) limits for non zip64 files
400 BC tests (leap-year)
43 90 decodes as XCHG R8D, EAX and is *not* NOP.
48 90 decodes as XCHG RAX, RAX and is NOP too.
482, with two adaptations.
4th word -- Sampling period (in microseconds).
5 _Gdead means this goroutine is currently unused.
5 for the header, 3 for the trailer.
5 is out of range indexing "hi"
5) We generate the glink resolver stub (only once).
5) numerator and denominator are the same
512 GB (MaxMem) should be big enough for now.
5g bug used to set up the 0 for -f() before calling f, and the call to f smashed the register.
6 _Genqueue_unused is currently unused.
6.3 Dynamic Table Size Update Top three bits are '001'.
6.9.1 The Flow Control Window "If a sender receives a WINDOW_UPDATE that causes a flow control window to exceed this maximum it MUST terminate either the stream or the connection, as appropriate.
6.9.2 Initial Flow Control Window Size
61 is NumSizeClasses in the C code.
64 bits should be enough.
64 blocks taking 14 bytes each see ../../../../runtime/mkduff.go
64-bit 387 floating point registers.
64-bit atomic operations require 64-bit alignment, but 32-bit compilers do not ensure it.
64-bit expanded header
64-bit file system and 32-bit uid calls (386 default is 32-bit file system and 16-bit uid).
64-bit immediates are really 32-bit sign-extended unless moving into a register.
64-bit masks (rldic etc)
64-bit math without using 64-bit numbers, so that we can generate the test program even if the compiler has buggy or missing 64-bit support.
64-bit memory address
64-bit only, no prefix
64-bit ops are hard on 32-bit machine.
64-bit pseudo operation
64-bit sequence number
64-bit special registers
64-bit type signature.
64-bit value: high 32 bits are counter, low 32 bits are waiter count.
66 0F AE 38: clflushopt but we only know clflush
66 90 decodes as XCHG AX, AX and is NOP too.
66 F3 0F D6 C5, 66 F2 0F D6 C0: libopcodes reports use of XMM register instead of MMX register, but only when the instruction has a 66 prefix.
6g accepts the program below even though it is syntactically incorrect: Each statement in the list of statements for each case clause must be terminated with a semicolon.
6g complains correctly for imports other than "unsafe".
6g used to call f twice here
6g used to compile these as two different hash codes so it missed the duplication and worse, compiled the wrong code for one of them.
6g used to get confused by the f:1 above and allow uses of f that would be silently dropped during the compilation.
6g uses 4-byte relocation offsets, so the entire segment must fit in 32 bits.
6g/8g print the offset as dec, but 5g/9g print the offset as hex.
6l prints very strange messages about .this.Bytes etc when we do that though, so MyBuffer is defined at top level.
7 _Gcopystack means this goroutine's stack is being moved.
7, 5 and 2 are not valid padding lengths, and so 1, 3 and 6 are not valid dlen values.
7g never generates a from3
7g never generates a to2
8 S-boxes composed of 4 rows and 16 columns Used in the DES cipher function
8 _Gscan combined with one of the above states other than _Grunning indicates that GC is scanning the stack.
8 bytes would result in no wastage at all, but provides less opportunities for combining.
8 integer + 8 floating
8 is the size of Rel32.
8 is to reduce flakiness.
800 chances to get a different iteration order.
800 is small enough to not overflow the stack when using gccgo on a platform that does not support split stack.
86Open common IA32 ABI
9B D9 11: libopcodes reports FSTSW instead of FWAIT + FNSTSW.
9g never generates a from3
@version 3.0 (December 2000)
A 'VARDEF x' annotation in the instruction stream tells the liveness analysis to behave as though the variable x is being initialized at that point in the instruction stream.
A *gc.Node referring to a local (auto) variable.
A *gc.Node referring to the argument/result variable.
A *gc.Sym referring to a global variable Note: the offset for an external symbol is not calculated until link time.
A *rtype for each in and out parameter is stored in an array that directly follows the funcType (and possibly its uncommonType).
A *rtype representing a struct is followed directly in memory by an array of method objects representing the methods attached to the struct.
A 1-byte payload with an 0x02 byte.
A 2nd method on the same level may be in the method set and may not collide with the first one, thus leading to a false positive.
A 4-byte match has been found.
A BadDecl node is a placeholder for declarations containing syntax errors for which no correct declaration nodes can be created.
A BadExpr node is a placeholder for expressions containing syntax errors for which no correct expression nodes can be created.
A BadStmt node is a placeholder for statements containing syntax errors for which no correct statement nodes can be created.
A Basic represents a basic type.
A BasicLit node represents a literal of basic type.
A BinaryExpr node represents a binary expression.
A Bits value b represents a finite floating-point number x of the form
A Block represents a PEM encoded structure.
A Block represents an implementation of block cipher using a given key.
A BlockMode represents a block cipher running in a block-based mode (CBC, ECB etc).
A BlockStmt node represents a braced statement list.
A BoolType represents a boolean type.
A BranchStmt node represents a break, continue, goto, or fallthrough statement.
A Buffer is a variable-sized buffer of bytes with Read and Write methods.
A Buffer needs no initialization.
A BufferPool is an interface for getting and returning temporary byte slices for use by io.CopyBuffer.
A BuildMode indicates the sort of object we are building: "exe": build a main package and everything it imports into an executable.
A Builtin represents a built-in function.
A ByteOrder specifies how to convert byte sequences into 16-, 32-, or 64-bit unsigned integers.
A C union translates into a struct containing the first union member and perhaps additional padding.
A CallExpr node represents an expression followed by an argument list.
A CancelFunc does not wait for the work to stop.
A CancelFunc tells an operation to abandon its work.
A CaseClause represents a case of an expression or type switch statement.
A Certificate is a chain of one or more certificates, leaf first.
A Certificate represents an X.509 certificate.
A Chan represents a channel type.
A ChanDir value indicates a channel direction.
A ChanType node represents a channel type.
A Change is a record of source code changes, recording user, language, and delta size.
A CharData represents XML character data (raw text), in which XML escape sequences have been replaced by the characters they represent.
A CharType represents a signed character type.
A CheckEqualError is the result CheckEqual finding an error.
A CheckError is the result of Check finding an error.
A Checker maintains the state of the type checker.
A Cipher is an instance of RC4 using a particular key.
A Class is the DWARF 4 class of an attribute value.
A Client is an HTTP client.
A Client is higher-level than a RoundTripper (such as Transport) and additionally handles HTTP details such as cookies and redirects.
A Client represents a client connection to an SMTP server.
A ClientCodec implements writing of RPC requests and reading of RPC responses for the client side of an RPC session.
A Cmd cannot be reused after calling its Run, Output or CombinedOutput methods.
A CommClause node represents a case of a select statement.
A Command is an implementation of a go command like go build or go fix.
A CommentGroup represents a sequence of comments with no other tokens and no empty lines between.
A CommentMap maps an AST node to a list of comment groups associated with it.
A CommentedNode bundles an AST node and corresponding comments.
A CommonType holds fields common to multiple types.
A ComplexType represents a complex floating point type.
A CompositeLit node represents a composite literal.
A Compressor returns a new compressing writer, writing to w.
A Cond can be created as part of other structures.
A Cond must not be copied after first use.
A Config node controls the output of Fprint.
A Config only specifies a width and height (two integers) while an image.Image's Bounds method returns an image.Rectangle (four integers).
A Config specifies the configuration for type checking.
A Config structure contains options for running a test.
A Config structure is used to configure a TLS client or server.
A Conn represents a secured connection.
A Conn represents a textual network protocol connection.
A ConnState represents the state of a client connection to a server.
A Const represents a declared constant.
A Content-Length is set, but the Content-Type will be sniffed.
A Content-Type is set, but no length.
A Context carries a deadline, a cancelation signal, and other values across API boundaries.
A Context specifies the supporting context for a build.
A ContinuationFrame is used to continue a sequence of header block fragments.
A Cookie represents an HTTP cookie as sent in the Set-Cookie header of an HTTP response or the Cookie header of an HTTP request.
A CookieJar manages storage and use of cookies in HTTP requests.
A CorruptInputError reports the presence of corrupt input at a given offset.
A Cpu is a Mach-O cpu type.
A DLL implements access to a single DLL.
A Data is a reference to data stored in an object file.
A DataFrame conveys arbitrary, variable-length sequences of octets associated with a stream.
A DeclStmt node represents a declaration in a statement list.
A Decoder is the decoding context for incremental processing of header blocks.
A Decoder manages the receipt of type and data information read from the remote side of a connection.
A Decoder reads and decodes JSON values from an input stream.
A Decoder represents an XML parser reading a particular input stream.
A DecodingError is something the spec defines as a decoding error.
A Decompressor returns a new decompressing reader, reading from r.
A DeferStmt node represents a defer statement.
A Dialer contains options for connecting to an address.
A Dir contains the metadata for a file.
A Dir implements FileSystem using the native file system restricted to a specific directory tree.
A Dlist stores a pointer to a TFIELD Type embedded within a TSTRUCT or TINTER Type.
A DotDotDotType represents the variadic ...
A Duration represents the elapsed time between two instants as an int64 nanosecond count.
A Dylib represents a Mach-O load dynamic library command.
A DylibCmd is a Mach-O load dynamic library command.
A Dysymtab represents a Mach-O dynamic symbol table command.
A DysymtabCmd is a Mach-O dynamic symbol table command.
A ExpFunc is an exported function, callable from C.
A ExtInst represents a single decoded instruction parsed from an external disassembler's output.
A FatArch is a Mach-O File inside a FatFile.
A FatArchHeader represents a fat header for a specific image architecture.
A FatFile is a Mach-O universal binary that contains at least one architecture.
A Fetcher reads and returns the profile named by src.
A Field is a single attribute/value pair in an Entry.
A Field or FieldList has as its type a comma-separated list of the types of the fields.
A Field represents a field in a struct or a method in an interface or associated with a named type.
A FieldFilter may be provided to Fprint to control the output.
A FieldList represents a list of Fields, enclosed by parentheses or braces.
A File collects information about a single Go input file.
A File has a name, size, and line offset table.
A File is an opened executable file.
A File is returned by a FileSystem's Open method and can be served by the FileServer implementation.
A File represents an open ELF file.
A File represents an open Mach-O file.
A File represents an open PE file.
A File represents an open Plan 9 a.out file.
A FileHeader describes a file part of a multipart request.
A FileHeader represents a Mach-O file header.
A FileHeader represents a Plan 9 a.out file header.
A FileHeader represents an ELF file header.
A FileInfo describes a file and is returned by Stat and Lstat.
A FileMode represents a file's mode and permission bits.
A FileSystem implements access to a collection of named files.
A Filter represents a socket system call filter.
A FilterType represents a filter type.
A Flag represents the state of a flag.
A FlagSet creates and parses command-line flags.
A FlagSet represents a set of defined flags.
A Float may also be zero (+0, -0) or infinite (+Inf, -Inf).
A FloatType represents a floating point type.
A FmtFlag value is a set of flags (or 0).
A ForStmt represents a for statement.
A FormatError reports that the input is not a valid JPEG.
A FormatError reports that the input is not a valid PNG.
A Frame describes a single line in a source file.
A Frame is the base interface implemented by all frame types.
A FrameHeader is the 9 byte header of all HTTP/2 frames.
A Framer reads and writes Frames.
A Func collects information about a single function.
A Func represents a Go func declaration (or function literal) and its body.
A Func represents a Go function in the running binary.
A Func represents a declared function, concrete method, or abstract (interface) method.
A FuncData is a single function-specific data value.
A FuncDecl node represents a function declaration.
A FuncLit node represents a function literal.
A FuncType collects information about a function type in both the C and Go worlds.
A FuncType node represents a function type.
A FuncType represents a function type.
A G adds itself to this list when it first invalidates its stack scan.
A GC program with a struct.
A GET * request on a ServeMux should fail.
A GenDecl node (generic declaration node) represents an import, constant, type or variable declaration.
A Generator can generate random values of its own type.
A Generator represents the state of a single Go source file being scanned for generator commands.
A Go function called by C code may not return a Go pointer.
A Go function called by C code may take a Go pointer as an argument, but it must preserve the property that the Go memory to which it points does not contain any Go pointers.
A Go shared library contains a note indicating which other Go shared libraries it was linked against in an unmapped section.
A Go source file is defined to be a file ending in a literal ".go" suffix.
A GoAwayFrame informs the remote peer to stop creating streams on this connection.
A GoStmt node represents a go statement.
A Handler responds to an HTTP request.
A HardwareAddr represents a physical hardware address.
A Header represents a single header in a tar archive.
A Header represents the key-value pairs in a mail message header.
A HeaderField is a name-value pair.
A HeadersFrame is used to open a stream and additionally carries a header block fragment.
A ImmAlt is an alternate encoding of an integer constant.
A KeyInfo describes the statistics of a key.
A KeyValueExpr node represents (key : value) pairs in composite literals.
A Kind represents the specific kind of type that a Type represents.
A Label is a text (code) address.
A Label represents a declared label.
A LabeledStmt node represents a labeled statement.
A LazyDLL implements access to a single DLL.
A LazyProc implements access to a procedure inside a LazyDLL.
A Level encodes the reference state and context applied to (stack, heap) allocated memory.
A LimitedReader reads from R but limits the amount of data returned to just N bytes.
A LineEntry is a row in a DWARF line table.
A LineFile is a source file referenced by a DWARF line table entry.
A LineRange records one such range.
A LineReader reads a sequence of LineEntry structures from a DWARF "line" section for a single compilation unit.
A LineReaderPos represents a position in a line table.
A LineStack is an entry in the recorded line history.
A LineTable is a data structure mapping program counters to line numbers.
A Listener is a generic network listener for stream-oriented protocols.
A Load represents any Mach-O load command.
A LoadBytes is the uninterpreted bytes of a Mach-O load command.
A LoadCmd is a Mach-O load command.
A LocalSlot is a location in the stack frame.
A Location maps time instants to the zone in use at that time.
A Locker represents an object that can be locked and unlocked.
A Logger represents an active logging object that generates lines of output to an io.Writer.
A Lookup function returns a reader to access package data for a given import path, or an error if no matching package is found.
A MIMEHeader represents a MIME-style header mapping keys to sets of values.
A Map represents a map type.
A MapType node represents a map type.
A Markov chain algorithm generates text by creating a statistical model of potential textual suffixes for a given prefix.
A MarshalXMLError is returned when Marshal encounters a type that cannot be converted into XML.
A Mem is a memory reference made up of a base R and index expression X.
A Mem is a memory reference.
A MemProfileRecord describes the live objects allocated by a particular call sequence (stack trace).
A MemStats records statistics about the memory allocator.
A Message represents a parsed mail message.
A MetaHeadersFrame is the representation of one HEADERS frame and zero or more contiguous CONTINUATION frames and the decoding of their HPACK-encoded contents.
A Mode is an instruction execution mode.
A Mode value is a set of flags (or 0).
A Mutex is a mutual exclusion lock.
A Name collects information about C.xxx.
A Name represents an XML name (Local) annotated with a name space identifier (Space).
A Named represents a named type.
A Node is a single node in the syntax tree.
A Node is an element in the parse tree.
A Note is a string describing a process note.
A Note represents a marked comment starting with "MARKER(uid): note body".
A NumError records a failed conversion.
A Number represents a JSON number literal.
A PB is used by RunParallel for running parallel benchmarks.
A PCDATA instruction sets the value in effect at future non-PCDATA instructions.
A PCRel describes a memory address (usually a code label) as a distance relative to the program counter.
A PNG image can't have zero width or height, but for an interlaced image, an individual pass might have zero width or height.
A Package collects information about the package we're going to write.
A Package describes a Go package.
A Package describes a single package found in a directory.
A Package describes the Go package found in a directory.
A Package is a parsed Go object file or archive defining a Go package.
A Package node represents a set of source files collectively building a Go package.
A PackageError describes an error loading information about a package.
A PackageInit describes an imported package that needs initialization.
A ParenExpr node represents a parenthesized expression.
A ParseError is returned for parsing errors.
A ParseError is the error type of literal network address parsers.
A Part represents a single part in a multipart body.
A PingFrame is a mechanism for measuring a minimal round trip time from the sender, as well as determining whether an idle connection is still functional.
A PipeReader is the read half of a pipe.
A PipeWriter is the write half of a pipe.
A Pipeline manages a pipelined in-order request/response sequence.
A PkgName represents an imported Go package.
A Planet defines the properties of a solar system object.
A Point is an X, Y coordinate pair.
A Pointer represents a pointer type.
A Pool is a set of temporary objects that may be individually saved and retrieved.
A Pool is safe for use by multiple goroutines simultaneously.
A Prefix represents an Intel instruction prefix.
A PriorityFrame specifies the sender-advised priority of a stream.
A PriorityQueue implements heap.Interface and holds Items.
A PrivateKey represents an RSA key
A Proc implements access to a procedure inside a DLL.
A Profile is a collection of stack traces showing the call sequences that led to instances of a particular event, such as allocation.
A Profile's methods can be called from multiple goroutines simultaneously.
A Prog is a compiled regular expression program.
A Prog represents a single ELF program header in an ELF binary.
A ProgHeader represents a single ELF program header.
A ProtocolError describes a protocol violation such as an invalid response or a hung-up connection.
A PtrType represents a pointer type.
A PublicKey represents the public part of an RSA key.
A PushPromiseFrame is used to initiate a server stream.
A Qid represents a 9P server's unique identification for a file.
A Qualifier controls how named package-level objects are printed in calls to TypeString, ObjectString, and SelectionString.
A REPN applied to certain control transfers is a BND prefix to bound the range of possible destinations.
A RSTStreamFrame allows for abnormal termination of a stream.
A Rand is a source of random numbers.
A RangeStmt represents a for statement with a range clause.
A Rat represents a quotient a/b of arbitrary precision.
A RawValue represents an undecoded ASN.1 object.
A ReadError reports an error encountered while reading input.
A Reader allows reading Entry structures from a DWARF ``info'' section.
A Reader implements convenience methods for reading requests or responses from a text protocol network connection.
A Reader implements the io.Reader, io.ReaderAt, io.Seeker, io.WriterTo, io.ByteScanner, and io.RuneScanner interfaces by reading from a string.
A Reader implements the io.Reader, io.ReaderAt, io.WriterTo, io.Seeker, io.ByteScanner, and io.RuneScanner interfaces by reading from a byte slice.
A Reader is an io.Reader that can be read to retrieve uncompressed data from a gzip-format compressed file.
A Reader provides sequential access to the contents of a tar archive.
A Reader reads records from a CSV-encoded file.
A Rectangle is also an Image whose bounds are the rectangle itself.
A Ref refers to an expression of the form C.xxx in the AST.
A Reg is a single register.
A Reg is a wrapper around a single Prog (one instruction) that holds register optimization information while the optimizer runs.
A RegList is a register list.
A RegShift is a register shifted by a constant.
A RegShiftReg is a register shifted by a register.
A RegX represents a fraction of a multi-value register.
A Regexp is a node in a regular expression syntax tree.
A Regexp is safe for concurrent use by multiple goroutines.
A Rel is an offset relative to the current instruction pointer.
A Reloc describes a relocation applied to a memory image to refer to an address within a particular symbol.
A Rename describes a single renaming.
A Request represents an HTTP request received by a server or to be sent by a client.
A Response that's just no bigger than 2KB, the buffer-before-chunking threshold.
A ResponseWriter interface is used by an HTTP handler to construct an HTTP response.
A ResponseWriter may not be used after the Handler.ServeHTTP method has returned.
A Result summarizes an executed SQL command.
A ReturnStmt node represents a return statement.
A Rgn represents a single regopt variable over a region of code where a register could potentially be dedicated to that variable.
A Ring is an element of a circular list, or ring.
A RoundTripper must be safe for concurrent use by multiple goroutines.
A SIGHUP, SIGINT, or SIGTERM signal causes the program to exit.
A SIGQUIT, SIGILL, SIGTRAP, SIGABRT, SIGSTKFLT, SIGEMT, or SIGSYS signal causes the program to exit with a stack dump.
A SIGTSTP, SIGTTIN, or SIGTTOU signal gets the system default behavior (these signals are used by the shell for job control).
A ScanToken represents an input item.
A Scanner holds the scanner's internal state while processing a given text.
A Scope maintains a set of objects and links to its containing (parent) and contained (children) scopes.
A Scope maintains the set of named language entities declared in the scope and a link to the immediately surrounding (outer) scope.
A Section represents a single section in a Plan 9 a.out file.
A Section represents a single section in an ELF file.
A Section32 is a 32-bit Mach-O section header.
A Section32 is a 64-bit Mach-O section header.
A SectionHeader represents a single ELF section header.
A SectionHeader represents a single Plan 9 a.out section header.
A Segment represents a Mach-O 32-bit or 64-bit load segment command.
A Segment32 is a 32-bit Mach-O segment load command.
A Segment64 is a 64-bit Mach-O segment load command.
A SegmentHeader is the header for a Mach-O 32-bit or 64-bit load segment command.
A SelectCase describes a single case in a select operation.
A SelectDir describes the communication direction of a select case.
A Selection describes a selector expression x.f.
A SelectorExpr node represents an expression followed by a selector.
A SendStmt node represents a send statement.
A Server defines parameters for running an HTTP server.
A Server is an HTTP server listening on a system-chosen port on the local loopback interface, for use in end-to-end HTTP tests.
A ServerCodec implements reading of RPC requests and writing of RPC responses for the server side of an RPC session.
A SettingsFrame conveys configuration parameters that affect how endpoints communicate, such as preferences and constraints on peer behavior.
A SetupError is the result of an error in the way that check is being used, independent of the functions being tested.
A Shift describes an ARM shift operation.
A Signal is a number describing a process signal.
A Signal represents an operating system signal.
A Signature represents a (non-builtin) function or method type.
A Slice reads from a slice of Tokens.
A Slice represents a slice type.
A Sockaddr is one of the SockaddrXxx structs.
A Stack is a stack of TokenReaders.
A StackRecord describes a single execution stack.
A StarExpr node represents an expression of the form "*" Expression.
A StartElement represents an XML start element.
A Stat represents a per-cookie socket statistics.
A Status represents the status of a socket.
A Stmt is safe for concurrent use by multiple goroutines.
A Stream represents a stream cipher.
A StringReader delivers its data one string segment at a time via Read.
A Struct represents a struct type.
A StructField describes a single field in a struct.
A StructField represents a field in a struct, union, or C++ class type.
A StructTag is the tag string in a struct field.
A StructType node represents a struct type.
A StructType represents a struct, union, or C++ class type.
A StructuralError suggests that the ASN.1 data is valid, but the Go type which is receiving it doesn't match.
A Switch represents a callpath point switch for socket system calls.
A SwitchStmt node represents an expression switch statement.
A Sym describes a single symbol in an object file.
A Sym is a named symbol in an object file.
A Sym is a symbol defined in an executable file.
A Sym represents a single symbol table entry.
A SymID - the combination of Name and Version - uniquely identifies a symbol within a package.
A SymKind describes the kind of memory represented by a symbol.
A Symbol is a Mach-O 32-bit or 64-bit symbol table entry.
A Symbol represents an entry in a Plan 9 a.out symbol table section.
A Symbol represents an entry in an ELF symbol table section.
A Symbolizer annotates a profile with symbol information.
A Symtab represents a Mach-O symbol table command.
A SymtabCmd is a Mach-O symbol table command.
A SyntaxError is a description of a JSON syntax error.
A SyntaxError represents a syntax error in the XML input stream.
A SyntaxError suggests that the ASN.1 data is invalid.
A TCP implementation may send a RST if our request body data was known to be lost, which may trigger our reads to fail.
A Tag is the classification (the type) of an Entry.
A TagPathError represents an error in the unmarshalling process caused by the use of field tags with conflicting paths.
A Thread is a Mach-O thread state command.
A Ticker holds a channel that delivers `ticks' of a clock at intervals.
A Time represents an instant in time with nanosecond precision.
A Time value can be used by multiple goroutines simultaneously.
A Timeout of zero means no timeout.
A Timer must be created with NewTimer or AfterFunc.
A Token holds a value of one of these types:
A Token is a scan token plus its string value.
A Token is an interface holding one of the token types: StartElement, EndElement, CharData, Comment, ProcInst, or Directive.
A TokenReader is like a reader, but returns lex tokens of type Token.
A Tokenizer is a simple wrapping of text/scanner.Scanner, configured for our purposes and made a TokenReader.
A Transport internally caches connections to servers.
A Transport is a low-level primitive for making HTTP and HTTPS requests.
A Tree is a binary tree with integer values.
A Type collects information about a type in both the C and Go worlds.
A Type conventionally represents a pointer to any of the specific Type structures (CharType, StructType, etc.).
A Type is the Mach-O file type, e.g. an object file, executable, or dynamic library.
A Type represents a Go type.
A Type represents a type of Go.
A TypeAssertExpr node represents an expression followed by a type assertion.
A TypeAssertionError explains a failed type assertion.
A TypeName represents a declared type.
A TypeRepr contains the string representation of a type.
A TypeSpec node represents a type declaration (TypeSpec production).
A TypeSwitchGuard may declare a variable in addition to the variable declared in the initial SimpleStmt.
A TypedefType represents a named type.
A UI manages user interactions.
A URL represents a parsed URL (technically, a URI reference).
A UcharType represents an unsigned character type.
A UintType represents an unsigned integer type.
A UnaryExpr node represents a unary expression.
A ValAndOff is intended to be encoded into an AuxInt field.
A ValAndOff is used by the several opcodes.
A Value can be changed only if it is addressable and was not obtained by the use of unexported struct fields.
A Value can be moved to any block that dominates all blocks in which it is used.
A Value can be used concurrently by multiple goroutines provided that the underlying Go value can be used concurrently for the equivalent direct operations.
A Value equal to v which is currently in a register.
A Value provides an atomic load and store of a consistently typed value.
A Value represents a value in the SSA representation of the program.
A Value represents the value of a Go constant.
A ValueError occurs when a Value method is invoked on a Value that does not support it.
A ValueSpec node represents a constant or variable declaration (ConstSpec or VarSpec production).
A Var describes a variable in a function stack frame: a declared local variable, an input argument, or an output result.
A Var represents a single variable that may be stored in a register.
A Variable represents a declared variable (including function parameters and results, and struct fields).
A Visitor's Visit method is invoked for each node encountered by Walk.
A VoidType represents the C void type.
A WaitGroup waits for a collection of goroutines to finish.
A WindowUpdateFrame is used to implement flow control.
A Word represents a single digit of a multi-precision unsigned integer.
A WordDecoder decodes MIME headers containing RFC 2047 encoded-words.
A WordEncoder is an RFC 2047 encoded-word encoder.
A WriteError reports an error encountered while writing output.
A Writer generates multipart messages.
A Writer implements convenience methods for writing requests or responses to a text protocol network connection.
A Writer is a connection to a syslog server.
A Writer is a filter that inserts padding around tab-delimited columns in its input to align them in the output.
A Writer is a quoted-printable writer that implements io.WriteCloser.
A Writer is an io.WriteCloser.
A Writer must be initialized with a call to Init.
A Writer provides sequential writing of a tar archive in POSIX.1 format.
A Writer takes data written to it and writes the compressed form of that data to an underlying writer (see NewWriter).
A Writer writes records to a CSV encoded file.
A Zipf generates Zipf distributed variates.
A and AStride are analogous to the Y and YStride fields of the embedded YCbCr.
A bad algorithm that thinks the previous float32 is 8388607p+69 will shorten incorrectly to 4.95176e+27.
A bailout panic is raised to indicate early termination.
A bailout panic is used for early termination.
A batch version of this computation is in image/draw/draw.go.
A benchmark ends when its Benchmark function returns or calls any of the methods FailNow, Fatal, Fatalf, SkipNow, Skip, or Skipf.
A binary exponent is only permitted if binExpOk is set.
A bit of a cheat: we only have a basename, so that's also ok for FileInfo.
A bit string is padded up to the nearest byte in memory and the number of valid bits is recorded.
A black object is marked and not on a work queue.
A block is a simple data buffer.
A block tracks label declarations in a block and its enclosing blocks.
A block uses between two and six different Huffman trees.
A blockRecord is the bucket data for a bucket of type blockProfile, part of the blocking profile.
A bodyReadMsg tells the server loop that the http.Handler read n bytes of the DATA from the client on the given stream.
A boolean is encoded within an unsigned integer: 0 for false, 1 for true.
A bucket for a Go map.
A bucket holds per-call-stack profiling information.
A bucket is at most bucketSize*(1+maxKeySize+maxValSize)+2*ptrSize bytes, or 2072 bytes, or 259 pointer-size words, or 33 bytes of pointer bitmap.
A bug was introduced that broke map lookups for lower-case names.
A bug was reported with blob uploads failing when the other fields were empty.
A build constraint, also known as a build tag, is a line comment that begins
A builder holds global state about a build.
A builtinId is the id of a builtin function.
A bvec is a bit vector.
A byte loop is correct because all metacharacters are ASCII.
A byteq is a byte queue.
A c.Domain containing illegal characters is not sanitized but simply dropped which turns the cookie into a host-only cookie.
A cacheKey is the key for use in the lookupCache.
A call to Data must be preceded by one or more calls to Rcpt.
A call to Rcpt must be preceded by a call to Mail and may be followed by a Data call or another Rcpt call.
A call to ValueOf returns a Value representing the run-time data.
A caller need only call Close to force the pipe to close sooner.
A cancelCtx can be canceled.
A canceler is a context type that can be canceled directly.
A caseClause is a single case clause in a switch statement.
A cb is a combination of color type and bit depth.
A certificate containing a DSA key
A certificate containing a static DH key
A certificate containing a static DH key See RFC 4492 sections 3 and 5.5.
A certificate containing an ECDH-capable public key, signed with ECDSA.
A certificate containing an ECDH-capable public key, signed with RSA.
A certificate containing an ECDSA-capable public key, signed with ECDSA.
A certificate containing an RSA key
A chains of type assertions.
A change to remove this useless iteration is to assign 1 to i in the init statement.
A child forked while the cgo fd is open inherits that fd.
A cipher is an instance of AES encryption using a particular key.
A cipherSuite is a specific combination of key agreement, cipher and MAC function.
A client wishing to use the service establishes a connection and then invokes NewClient on the connection.
A close from the opposing client is treated as a graceful close, even if there was some unparse-able data before the close.
A closeWaiter is like a sync.WaitGroup but only goes 1 to 0 (open to closed).
A closing tag will be written for every parent popped.
A code is a 12 bit value, stored as a uint32 when encoding to avoid type conversions when shifting bits.
A collection is triggered when the ratio of freshly allocated data to live data remaining after the previous collection reaches this percentage.
A collection of global state used by liveness analysis.
A collision indicates that multiple fields with the same unique id appeared.
A collision indicates that multiple methods with the same unique id appeared.
A command is a simple value (argument) or a function or method call, possibly with multiple arguments: Argument The result is the value of evaluating the argument.
A comment containing newlines acts like a newline.
A comment group g is associated with a node n if:
A commentListReader helps iterating through a list of comment groups.
A common error is to use https://packagepath because that's what hg and git require.
A common use of Search is to find the index i for a value x in a sorted, indexable data structure such as an array or slice.
A composite literal commonly spans several lines, so the line number on errors may be misleading.
A concrete type implements T if it implements all methods of T.
A conflict occurs when the path (parent + name) to a field is itself a prefix of another path, or when two paths match exactly.
A conn is one side of a stream-based network connection.
A conn represents the server side of an HTTP connection.
A connect method may be of the following types:
A constant is used, rather than querying the kernel for the actual MSS, to avoid complexity.
A context represents the context within which an object is type-checked.
A cookie a domain attribute may start with a leading dot.
A copy of Sqrt tests from the math package to test the purely integer arithmetic implementation in sqrt.go.
A copy of the chatty flag.
A copy of the code in ../gc/subr.go.
A countProfile is a set of stack traces to be printed as counts grouped by stack trace.
A couple of type definitions to make the units clear.
A csv file contains zero or more records of one or more fields per record.
A daylight savings time transition skips or repeats times.
A dddSlice is a types.Type representing ...T parameters.
A deadline is an absolute time after which I/O operations fail with a timeout (see type Error) instead of blocking.
A decimal point followed by one or more nines represents a fractional second, printed to the given number of decimal places, with trailing zeros removed.
A decimal point followed by one or more zeros represents a fractional second, printed to the given number of decimal places.
A decimal represents an unsigned floating-point number in decimal representation.
A declInfo describes a package-level const, type, var, or func declaration.
A declaration is represented by one of the following declaration nodes.
A decodeOp is a single instruction in the decoder bytecode program.
A delta of 0 terminates the structure.
A denominator of zero signifies the end.
A description of the high level operation of this code follows.
A desiredState represents desired register assignments.
A devFile is the implementation required of device files like /dev/null or /dev/random.
A devReader satisfies reads by reading the file named name.
A different CA marked its own trusted root certificate as being invalid for certificate signing.
A different kind of very large number.
A direct call on the stack will cause gentraceback to stop walking the stack prematurely and if there are leftover stack barriers it may panic.
A directive of the form, go:generate -command xxx args...
A dirent describes a single directory entry.
A distTest is a test run by dist test.
A dnsConn represents a DNS transport endpoint.
A dnsDialer provides dialing suitable for DNS queries.
A dnsStruct describes how to iterate over its fields to emulate reflective marshalling.
A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as "300ms", "-1.5h" or "2h45m".
A entry is an entry on a queue.
A failed authentication closes the connection.
A few are known to ../runtime/type.go to convey to debuggers.
A few instructions inhibit this behavior.
A few methods to test chaining.
A few of the canonical methods have very common names.
A few of the structure elements have string tags to aid the generic pack/unpack routines.
A few profiles are predefined:
A few special functions convert between Go and C types by making copies of the data.
A few tests (of things like the environment) require these to be set.
A field or method name.
A field represents a single field found in a struct.
A fieldScan represents an item on the fieldByNameFunc scan work list.
A fieldSet is a set of fields and name collisions.
A file called copy_ssa.go will be written into the parent directory containing the tests.
A file called zero_ssa.go will be written into the parent directory containing the tests.
A file is an open file, something with a file descriptor.
A file may have multiple build constraints.
A file represents a single executable being analyzed.
A file with no build tags will always be tested.
A fileImpl is the implementation of something that can be a file.
A fileStat is the implementation of FileInfo returned by Stat and Lstat.
A finalizer can be set for an inner byte of an object, find object beginning.
A finishedHash calculates the hash of a set of handshake messages suitable for including in a Finished message.
A fixed-size value is either a fixed-size arithmetic type (int8, uint8, int16, float32, complex64, ...) or an array or struct containing only fixed-size values.
A flow is kept both on a conn and a per-stream.
A fmt is the raw formatter used by Printf etc.
A foreign thread received the signal sig, and the Go code does not want to handle it.
A forkableWriter is an in-memory buffer that can be 'forked' to create new forkableWriters that bracket the original.
A format holds an image format's name, magic header and how to decode it.
A format is a DWARF data encoding format.
A fractional second is represented by adding a period and zeros to the end of the seconds section of layout string, as in "15:04:05.000" to format a time stamp with millisecond precision.
A frag represents a compiled program fragment.
A gate lets two goroutines coordinate their activities.
A gcWork can be used on the stack as follows:
A gcWork provides the interface to produce and consume work for the garbage collector.
A gclink is a node in a linked list of blocks, like mlink, but it is opaque to the garbage collector.
A gclinkptr is a pointer to a gclink, but it is opaque to the garbage collector.
A gcprog is a 4-byte uint32 indicating length, followed by the actual program.
A general consequence of this is that the garbage collector may cache the value of mheap_.arena_used.
A general rule is that the result of getcallersp should be used immediately and can only be passed to nosplit functions.
A generated method with a return value large enough to be initialized by duffzero is not a leaf method, which violated assumptions made by cmd/internal/obj/ppc64.
A generic XML header suitable for use with the output of Marshal.
A generic linked list of blocks.
A gobError is used to distinguish errors (panics) generated in this package.
A goroutine can be preempted during a futile wakeup and migrate to another P.
A goroutine is used to preprocess the input by merging lines, removing spaces in hex values and identifying the start of new keys and signature blocks.
A grey object is one that is marked and on a work queue.
A guintptr holds a goroutine pointer, but typed as a uintptr to bypass write barriers.
A halfConn represents one direction of the record layer connection, either sending or receiving.
A hash iteration structure.
A hash table entry is a uint32.
A header for a Go map.
A heap is a common way to implement a priority queue.
A heap is a tree with the property that each node is the minimum-valued node in its subtree.
A heap must be initialized before any of the heap operations can be used.
A helper function for EnsureDropM.
A heuristic is used to mix the comments and whitespace.
A huffmanNode is a node in the tree.
A huffmanTree is a binary tree which is navigated, bit-by-bit to reach a symbol.
A invertible implements fast inverse mod Curve.Params().N
A ipv4-ipv4wild listen, "tcp4" + "" or "0.0.0.0" We use an IPv4 (AF_INET) wildcard address listen.
A job is an entry on the backtracker's job stack.
A key identifies a specific value in a Context.
A labeled statement will un-indent to position the label.
A later pass will remove the no-ops.
A lazybuf is a lazily constructed path buffer.
A lead comment is a comment group that starts and ends in a line without any other tokens and that is followed by a non-comment token on the line immediately after the comment group.
A leading dot is okay but won't be sent.
A leaf function with no locals has no frame.
A left-leaning tree of byte multiplications.
A levelInfo describes the state of the constructed tree for a given depth.
A line break immediately followed by a "correcting" unindent is swapped with the unindent - this permits proper label positioning.
A line comment is a comment group that follows a non-comment token on the same line, and that has no tokens after it on the line where it ends.
A line consisting of only white space is never continued.
A line number table may contain information for multiple potentially disjoint instruction sequences.
A line with only whitespace characters (excluding the ending newline character) is not considered a blank line.
A lineInfo object describes alternative file and line number information (such as provided via a //line comment in a .go file) for a given file offset.
A list of cipher suite IDs that are, or have been, implemented by this package.
A list of readers to use in conjunction with UnreadByte.
A listener accepts incoming stream-based network connections.
A listener implements a network listener (net.Listener) for TLS connections.
A little clunky to merge these, but avoids duplicating the code and all its subtlety.
A little test program and benchmark for rational arithmetics.
A local relative path is interpreted relative to srcDir.
A local variable assignment, not an interpolation.
A locked Mutex is not associated with a particular goroutine.
A lone import, however, may be safely ignored.
A lower-case character in the user's string matches either case in the program's.
A machine holds all the state during an NFA simulation for p.
A macro is stored as a sequence of Tokens with spaces stripped.
A malformed c.Domain will result in an error.
A manually-unpacked version of (id, bits).
A map is just a hash table.
A memRecord is the bucket data for a bucket of type memProfile, part of the memory profile.
A method value represents a curried method invocation like r.Read for some receiver r.
A methodSet describes a set of methods.
A methodSet is a set of methods and name collisions.
A mode value is a set of flags (or 0).
A more precise approach would be to include only tags that have an effect on the build.
A more reliable solution is to explicitly annotate tests with required execution order by means of a special "invisible" synchronization primitive (that's what is done for C++ ThreadSanitizer tests).
A more systematic approach would always indent, but this would cause significant reformatting of the code base and not necessarily lead to more nicely formatted code in general.
A msgq is a queue of messages.
A namedType represents a named unqualified (package local, or possibly predeclared) type.
A negative number has to be converted to two's-complement form.
A negative or zero duration causes Sleep to return immediately.
A negative percentage disables garbage collection.
A negative precision selects the smallest number of decimal digits necessary to identify the value x uniquely using x.Prec() mantissa bits.
A netAddr is a network address in the global listener map.
A netFile is an open network file.
A netproto contains protocol-specific functionality (one for AF_INET, one for AF_INET6 and so on).
A new GC cycle starts with the call to finishsweep_m.
A new best spill candidate.
A new block is started to load the return values.
A new instance of Once is required for each function to execute.
A new state is created for nested objects.
A newline is appended if the last character of s is not already a newline.
A nice example: walk a binary tree.
A nice long list of positions.
A nice long list of statements-per-block, so we can give a conventional valuation of "percent covered".
A nil *Options is equivalent to a zero Options.
A nil URL and nil error are returned if no proxy is defined in the environment, or a proxy should not be used for the given request, as defined by NO_PROXY.
A nil argument is equivalent to an empty slice.
A nil check is redundant if the same nil check was successful in a dominating block.
A nil entry corresponds to that file being closed when the process starts.
A nil interface value encodes as the null JSON value.
A nil literal may be converted to uintptr if it is an unsafe.Pointer
A nil mask is treated as opaque.
A nil or empty-color.Palette Config.ColorModel means that each frame has its own color table and there is no global color table.
A nil pointer encodes as the null JSON value.
A nil pointer in a mutex method call should not corrupt the race detector state.
A nil pointer in an atomic operation should not deadlock the rest of the program.
A nil return means the next item is not a term.
A nil return means the next item is not an operand.
A nil value gets sent as the empty string for the name, followed by no value.
A nil value is valid and may be useful for testing but it is not secure: it means that the HTTP server for foo.co.uk can set a cookie for bar.co.uk.
A node lower on the stack lexically contains the nodes higher on the stack.
A node n is marked if n.mark corresponds to the current mark value.
A nodeStack keeps track of nested nodes.
A non-2xx response doesn't cause an error.
A non-2xx status code doesn't cause an error.
A non-comment token or n empty lines terminate a comment group.
A non-control action such as a field evaluation.
A non-empty interface.
A non-nil Response with a non-nil error only occurs when CheckRedirect fails, and even then the returned Response.Body is already closed.
A non-nil ep must point to the heap or the caller's stack.
A non-nil err should be reserved for failure to obtain a response.
A non-nil return does not necessarily indicate an invalid address.
A non-pointer escaping from a struct does not concern us.
A non-recursive template that ends in a different context.
A nonstandard encoding with a funny padding character, for testing
A note about ZIP64: To be backwards compatible the FileHeader has both 32 and 64 bit Size fields.
A note must start at the beginning of a comment with "MARKER(uid):" and is followed by the note body (e.g., "// BUG(gri): fix this").
A numBytesReader is an io.Reader with a numBytes method, returning the number of bytes remaining in the underlying encoded data.
A number is normalized if the slice contains no leading 0 digits.
A numerical constant.
A onePassInst is a single instruction in a one-pass regular expression program.
A onePassProg is a compiled one-pass regular expression program.
A package that redeclares common builtin names.
A parameter specifying the result is named z (typically the receiver).
A parse error in the attribute value (unquoted) and before attribute value states.
A particular *file may appear in files multiple times, due to use of Dup or Dup2.
A patchList is a list of instruction pointers that need to be filled in (patched).
A pattern matcher for call instructions.
A peekReader wraps an io.Reader, allowing one to peek ahead to see what's coming without stealing the data from the client of the Reader.
A period with no following number specifies a precision of zero.
A phi is redundant if its arguments are all equal.
A pipe is the shared pipe structure underlying PipeReader and PipeWriter.
A pipeFile is an in-memory implementation of a pipe.
A pipeline of commands.
A pipelined server can use the same calls to ensure that responses computed in parallel are written in the correct order.
A pktconn is one side of a packet-based network connection.
A place that an ssa variable can reside.
A pmode value represents the current printer mode.
A pointer so we know the interface value won't allocate.
A pointer to a SID structure representing a group that will become the primary group of any objects created by a process using this access token.
A pointer to the in-memory store is available in the returned CertContext's Store field.
A precise nanosecond-precision timestamp and a stack trace is captured for most events.
A predecessor of b is primary if it is the closest predecessor that appears before b in the layout order.
A prefix can have multiple suffixes.
A prefix is a string of prefixLen words joined with spaces.
A pretty printer for basic blocks.
A pretty printer for control flow graphs.
A previous version of this code said:
A private method to prevent users implementing the interface and so future additions to it will not violate Go 1 compatibility.
A process is created at first demand for a rat and dies after the rat has been sent to both outputs.
A process is created at first demand for an item and dies after the item has been sent to both outputs.
A program fragment must be a syntactically valid declaration list, statement list, or expression.
A program should not declare or allocate variables of these struct types.
A public suffix list implementation is in the package golang.org/x/net/publicsuffix.
A queue is a 'sparse array' holding pending threads of execution.
A queue is the bookkeeping for a synchronized buffered queue.
A random session ID is used to detect when the server accepted the ticket and is resuming a session (see RFC 5077).
A reader decompresses bzip2 compressed data.
A reader is an io.Reader that can also peek ahead.
A reasonable value in case of an error.
A record is a slice of strings with each string being one field.
A rectangle's methods always return well-formed outputs for well-formed inputs.
A recursive helper template that ends in its start context.
A recursive template that ends in a different context.
A recursive template that ends in a similar context.
A recursive template that ends in its start context.
A reference to an out of range or unmatched index or a name that is not present in the regular expression is replaced with an empty slice.
A regFileReader is a numBytesReader for reading file data from a tar archive.
A register phi must have the phi and all of its inputs allocated to the same register.
A relative srcDir is interpreted relative to the current working directory.
A resolverConfig represents a DNS stub resolver configuration.
A response represents the server side of an HTTP response.
A response to a request for a single range MUST NOT be sent using the multipart/byteranges media type."
A return instruction with a p.to is a tail return, which brings the stack pointer back up (if it ever went down) and then jumps to a new function entirely.
A return value of nil indicates no match.
A right-leaning tree of byte multiplications.
A rngReader satisfies reads by reading from the Windows CryptGenRandom API.
A run of value columns (V) can be moved into the type column if there is no type for any of the values in that column (we only move entire columns so that they align properly).
A runtimeSelect is a single case passed to rselect.
A scanner is a JSON scanning state machine.
A score includes scores accumulated in previous turns for each player, as well as the points scored by the current player in this turn.
A scriptedReader is an io.Reader that executes its steps sequentially.
A section further describes the pieces of that block for use in debuggers and such.
A segment describes a block of file to load into memory.
A segment of text may be escaped by bracketing it with Escape characters.
A select comm case block should have exactly one successor.
A sender MUST remove the received Content-Length field prior to forwarding such a message downstream."
A sequence of 0 bytes will eventually terminate any parsing state in the object file.
A sequence of constant indexings.
A sequence of field accesses.
A sequence of match results.
A sequence of non-constant indexings.
A sequencer schedules a sequence of numbered events that must happen in order, one after the other.
A series is used for arguments smaller in magnitude than 0.5.
A server implementation will often provide a simple, type-safe wrapper for the client.
A server may register multiple objects (services) of different types but it is an error to register multiple objects of the same type.
A server registers an object, making it visible as a service with the name of the type of the object.
A set of constants for precedence-based expression parsing.
A shadowed variable is a variable declared in an inner scope with the same name and type as a variable in an outer scope, and where the outer variable is mentioned after the inner one is declared.
A short description of the test case.
A side-effect of using xadduintptr() is that we need to check for overflow errors.
A signed integer, i, is encoded within an unsigned integer, u.
A similar story applies to factory functions.
A similar strategy is used for funcTypeFixed4, ...funcTypeFixedN.
A simple algorithm for now Cooper, Harvey, Kennedy
A simple encoding: plain text.
A simple implementation of TestMain is:
A simple starter example.
A simple template definition to test our function.
A simple test of the garbage collector.
A simplified copy of the pre-Go 1 compress/flate/inflate.go and a modified copy of the zip reader in package time.
A simulated Unix-like file system for use within NaCl.
A simulated network for use within NaCl.
A single - indicates no match.
A single goroutine runs all finalizers for a program, sequentially.
A single variable may be represented by multiple disjoint Rgns and each Rgn may choose a different register for that variable.
A slash after a value starts a div operator.
A sockaddr represents a TCP, UDP, IP or Unix network endpoint address that can be converted into a syscall.Sockaddr.
A source file can appear multiple times in a object.
A source position is represented by a Position value.
A space, a quote or a control character is a syntax error.
A sparseEntry holds a single entry in a sparse file's sparse map.
A sparseFileReader is a numBytesReader for reading sparse file data from a tar archive.
A sparseTree is a tree of Blocks.
A special TLS case which doesn't use an ASN1 prefix.
A special Unknown value may be used when a value is unknown due to an error.
A special case to make write barriers more efficient.
A special routine at the bottom of stack of a goroutine that does an systemstack call.
A specification is five fields separated by one or more tabs.
A stack phi must have the phi and all of its inputs allocated to the same stack location.
A strategy chooses an action for any given score.
A string may be empty, but not nil.
A struct field of chan or func type is treated exactly like an unexported field and is ignored.
A struct with all basic types, stored in interfaces.
A struct with interfaces in it.
A subbenchmark is like any other benchmark.
A subsequent deadcode pass is needed to actually remove the copies.
A subsequent deadcode pass is required to actually remove duplicate expressions.
A substring of the error that should result.
A suffix is a single word.
A symbol points to other symbols using an index into the symbol reference sequence.
A symbol reference is a string name followed by a version.
A tagCmd describes a command to list available tags that can be passed to tagSyncCmd.
A tar archive consists of a sequence of files.
A template called in a context other than the start.
A template called in the start context.
A template invocation action.
A template invocation does not inherit variables from the point of its invocation.
A template may be executed directly or through ExecuteTemplate, which executes an associated template identified by name.
A template may be executed safely in parallel.
A template that is called in two different contexts.
A test ends when its Test function returns or calls any of the methods FailNow, Fatal, Fatalf, SkipNow, Skip, or Skipf.
A test should call runPending if it wants to make sure that it is not running in parallel with earlier tests, or if it has some other reason for needing the earlier tests to be done.
A text instruction marks the entry point to a function and the definition point of all in arguments.
A thread is the state of a single path through the machine: an instruction and a corresponding capture array.
A timerCtx carries a timer and a deadline.
A tiny object can have several finalizers setup for different offsets.
A top-level nil pointer generates a panic with a helpful string-valued message.
A trace can be analyzed later with 'go tool trace' command.
A transaction must end with a call to Commit or Rollback.
A transition function takes a context and template text input, and returns the updated context and the number of bytes consumed from the front of the input.
A triState is a boolean that knows whether it has been set to either true or false.
A trie node may have zero, one or more child nodes: if the remaining fields are zero, there are no children.
A tripleDESCipher is an instance of TripleDES encryption.
A trivial example of wrapping a C library in Go.
A trivial example server is:
A true return value indicates that there are no more entries to read.
A type is represented by a tree consisting of one or more of the following type-specific expression nodes.
A type known at compile time is OK since it's constant.
A type not known at compile time will be in the heap and will not be OK.
A type should be added at most once, so typ.decl should be nil - if it is not, simply overwrite it.
A type switch guard must be of the form:
A type that can unmarshal itself.
A type that is just a cycle of pointers (such as type T *T) cannot be represented in gobs, which need some concrete data.
A type that won't be defined in the gob until we send it in an interface value.
A type, typically a collection, that satisfies sort.Interface can be sorted by the routines in this package.
A typeConv is a translator from dwarf types to Go types with equivalent memory layout.
A typeId represents a gob Type as an integer that can be passed on the wire.
A typeSwitch walks a type switch.
A typedef of an unnamed struct didn't work when used with an exported Go function.
A typical object with DWARF version 4 debug info will have multiple .debug_types sections.
A typical use is transporting arguments and results of remote procedure calls (RPCs) such as those provided by package "net/rpc".
A uintptr is an integer, not a reference.
A unique identifier for the block.
A unique identifier for the value.
A valid response might be returned together with an ErrPersistEOF, which means that the remote requested that this be the last request serviced.
A valid signature is indicated by returning a nil error.
A valid value is between 16k and 16M, inclusive.
A value can be one of several "attribute classes" defined by DWARF.
A value is addressable if it is an element of a slice, an element of an addressable array, a field of an addressable struct, or the result of dereferencing a pointer.
A value of -1 causes encoding/asn1 to omit the value as desired.
A value of 0 means unlimited and is the default from NewDecoder.
A value of 25e5 produces a memory layout that confuses the gc on 32bit platforms.
A value of 25e6 consumes 465mb of heap on 32bit platforms, which is too much for most ARM systems.
A value sent as a placeholder for the server's response value when the server receives an invalid request.
A valueCtx carries a key-value pair.
A valueMap maps a case value (of a basic Go type) to a list of positions where the same case value appeared, together with the corresponding case types.
A variable can interfere with itself.
A variable declaration creates a new variable in the current scope.
A variable is considered shadowed (if *strictShadowing is off) only if the shadowing variable is declared within the span of the shadowed variable.
A variable is live on input to this block if it is live on output from this block and not set by the code in this block.
A variable is live on output from this block if it is live on input to some successor.
A variable's scope extends to the "end" action of the control structure ("if", "with", or "range") in which it is declared, or to the end of the template if there is no such control structure.
A variant of the last problem is that some binary distributions do not set the mtime on all files to the same time.
A variant of the last problem is when the inputs change for other reasons.
A vcsCmd describes how to use a version control system like Mercurial, Git, or Subversion.
A vcsPath describes how to convert an import path into a version control system and repository name.
A version of a bug reported on golang-nuts.
A version of the phase name with "_" replaced by " " is also checked for a match.
A version of this is in the Go playground.
A very few functions that do not return to their caller (e.g. gogo) are not identified as leaves but still have no frame.
A very large number (initially wrongly parsed by the fast algorithm).
A very large value uses a GC program, which is a different code path.
A wbufptr holds a workbuf*, but protects it from write barriers.
A wireType defines a single field.
A wonderfully Go-like piece of magic.
A work queue might be slightly faster.
A write barrier here could break because of the way that mmap uses the same value both as a pointer and an errno value.
A write to a broken pipe on file descriptors 1 or 2 (standard output or standard error) will cause the program to exit with a SIGPIPE signal.
A write to a broken pipe on some other file descriptor will take no action on the SIGPIPE signal, and the write will fail with an EPIPE error.
A writeCountingDiscard is like ioutil.Discard and counts the number of times Write is called on it.
A writeRequest is sent by the readLoop's goroutine to the writeLoop's goroutine to write a request while the read loop concurrently waits on both the write response and the server's reply.
A writer is a buffered, flushable writer.
A writer is pending, wait for it.
A year has 53 weeks when Jan 1 or Dec 31 is a Thursday, meaning Jan 1 of the next year is a Friday or it was a leap year and Jan 1 of the next year is a Saturday.
A zero or non-finite Float x ignores x.mant and x.exp.
A zero time value disables the deadline.
A zero value for t means I/O operations will not time out.
A zero value for t means Read and Write will not time out.
A zero value for t means Read will not time out.
A zero value for t means Write will not time out.
A zeroed Mutex is unlocked (no need to initialize each lock).
A zone represents a single time zone such as CEST or CET.
A zoneTrans represents a single time zone transition.
A(a).g() // static error: cannot call pointer method on A literal.B.C
A001620 special cases
AC scans must have only one component.
ACM Transactions on Programming Languages and Systems (TOPLAS), 14(2):127-144, New York, NY, USA, 4/1992.
ACM press.) See QuoRem for T-division and modulus (like Go).
ADDR(DOT(IND(p))) needs a check also
AEAD is a cipher mode providing authenticated encryption with associated data.
ALPN protocols must not be empty.
AMD documents an extension that the LOCK prefix can be used in place of a REX prefix in order to access CR8 from 32-bit mode.
AMOVL into a register zeros the top of the register, so this is not always necessary, but if we rely on AMOVL the optimizer is almost certain to screw with us.
AND with this to use the opcode as an array index.
ANDL avoids partial register write and is smaller than ANDQ, used by old compiler
AOffset returns the index of the first element of A that corresponds to the pixel at (x, y).
API Compatibility Checks for cgo
ARM 64-bit Architecture (AArch64)
ARM libgcc may be Thumb, which internal linking does not support.
ARM64 IP0, for external linker, runtime, duffzero and duffcopy
ARM64 IP1, for external linker, runtime, duffcopy
ARM64 backend doesn't eliminate shifts by 0.
ARM64 instructions with one input and two outputs.
ARM64 platform register, unused in the Go toolchain
ARM64 uses R31 as both stack pointer and zero register, depending on the instruction.
ARM64: register pair (R1, R2) for LDP/STP.
ARM64Suffix handles the special suffix for the ARM64.
ARMConditionCodes handles the special condition code situation for the ARM.
ARMMRCOffset implements the peculiar encoding of the MRC and MCR instructions.
ASCII (special-cased so test carefully)
ASCII alphanumerics and underscore are not separators
ASCII space, U+0020, is handled separately.
ASCII, and sr is upper case.
ASCII, invalid or valid.
ASCII, invalid, or valid.
ASCII_Hex_Digit is the set of Unicode characters with property ASCII_Hex_Digit.
ASN.1 class types represent the namespace of the tag.
ASN.1 has IMPLICIT and EXPLICIT tags, which can be translated as "instead of" and "in addition to".
ASN.1 is a syntax for specifying abstract objects and BER, DER, PER, XER etc are different encoding formats for those objects.
ASN.1 is very complex and this package doesn't attempt to implement everything by any means.
AVARLIVE must be considered a use, do not skip it.
AX gets reused for something else ...
AX: zero DI: ptr to memory to be zeroed DI is updated as a side effect.
AX:DX becomes DX, AX.
Abort since obj is absent and no subsequent checks can be performed.
Aborted panics are marked but remain on the g.panic list.
Aborts can be handled if desired, otherwise they cause a stack trace.
About 3e9 test cases (calls to checkdiv3).
About 4e6 test cases (calls to checkdiv3).
Above this length, the GC information is recorded as a GC program, which can express repetition compactly.
Above we've sanity checked that we never overwrote an existing entry.
Abs returns an absolute representation of path.
Abs returns the absolute value (also called the modulus) of x.
Abs returns the absolute value of x.
Abs sets z to the absolute value of x and returns z.
AbsFileLine returns the absolute file name and line number at the top of the stack for the given lineno.
Absolute URL references
Absolute address of GOT for -ve static TLS
Absolute paths always have a drive letter (ignoring UNC).
Absolutely no data, suggesting that a garbage collection has not yet happened.
Absorb next byte (If it's a multibyte we'll get an error in Unquote).
Abstract exhaustive test: all sizes up to 100, all possible return values.
Abstract unix domain sockets, a Linux-ism.
Acc returns the accuracy of x produced by the most recent operation.
Accept accepts connections on the listener and serves requests for each incoming connection.
Accept accepts connections on the listener and serves requests to DefaultServer for each incoming connection.
Accept any number of fractional second digits (including none) for .999...
Accept as a proper nil value.
Accept badly encoded bytes.
Accept blocks until the listener returns a non-nil error.
Accept commands interactively
Accept implements the Accept method in the Listener interface.
Accept one connection per address.
Accept waits for and returns the next connection to the listener.
Accept waits for and returns the next incoming TLS connection.
Accept wraps syscall.Accept.
Accept4 wraps syscall.Accept4.
AcceptEx wraps syscall.AcceptEx.
AcceptTCP accepts the next incoming call and returns the new connection.
AcceptUnix accepts the next incoming call and returns the new connection.
Accepted connections are configured to enable TCP keep-alives.
Accepted quoted string.
Accepted socket has no address.
Accepting it keeps old build systems working with both Go 1.2 and Go 1.3.
Access permission flags.
Access registers (ARs).
Access to net.Conn methods.
Accessed without lock.
Accessing a corrupted shared lib
Accessing gcRescan is unsafe.
Accessing the header between logically writing it and physically writing it means we need to allocate a clone to snapshot the logically written state.
Accessing the same keys in a row.
Accommodate implicit selectgo control flow.
According to RFC 6265 domain-matching includes not being an IP address.
According to RFC 6874, an HTTP client, proxy, or other intermediary must remove any IPv6 zone identifier attached to an outgoing URI.
According to sticky(8), neither open(2) nor mkdir(2) will create a file with the sticky bit set.
According to the manuals, the REP/REPE prefix applies to all of these, while the REPN applies only to some of them.
Account 3 extra bytes for possible addition of a sign and "0x".
Account for 400 year cycles.
Account for caller's saved LR
Account for internal fragmentation in the assist debt now that we know it.
Account for leading '.' on the PPC ELF v1 ABI.
Account for this span allocation.
Accumulate a number of values and print them out all at once.
Accumulate dimensions,
Accumulate exported functions.
Accumulate pointers to uses of C.x.
Accumulate ptrmask into b.
Accumulate verneed information.
Accumulator generator
Accuracy: according to an error analysis, the error is always less than 1 ulp (unit in the last place).
Achieve this by writing the sign out and then padding the unsigned number.
Acos returns the arccosine, in radians, of x.
Acosh returns the inverse hyperbolic cosine of x.
Acquire the fork lock so that no other threads create new fds that are not yet close-on-exec before we fork.
Acquire the fork lock to prevent other threads from creating new fds before we fork.
Acquired semaphore, semawakeup unregistered us.
Act as if the user wrote new(httptest.ResponseRecorder) rather than using NewRecorder (which initializes HeaderMap)
Act like goroutine called runtime.Gosched.
Action for building pkg.test.
ActionNode holds an action (something bounded by delimiters).
Actions Here is the list of actions.
Active spinning for sync.Mutex.
Active spinning makes sense.
Active spinning runtime support.
Actual body from App Engine on a blob upload.
Actually we reserve 544 GB (because the bitmap ends up being 32 GB) but it hardly matters: e0 00 is not valid UTF-8 either.
Adapted directly from the original TOPLAS article's "simple" algorithm
Add "error" to return type list.
Add "net/http" and "log" to your imports and the following code to your main function:
Add 16 bit signed extended pc relative symbol value
Add 16 bit zero extended symbol value
Add 2 more entries to the cache.
Add 32 bit sign extended symbol value
Add 32 bit signed pcrel offset to GOT.
Add 32 bit zero extended symbol value
Add 4 entries to the cache and look them up.
Add 64 bit symbol value.
Add 8 bit signed extended pc relative symbol value
Add 8 bit zero extended symbol value
Add GOT-relative symbol address.
Add PC-relative GOT offset.
Add PC-relative GOT table address.
Add PC-relative PLT offset.
Add PC-relative symbol value.
Add a "hdr-" prefix to avoid conflicting with IDs used for package symbols.
Add a CALL relocation for the immediate in a RIL style instruction.
Add a call trampoline to .text in that case.
Add a config that simulates no dns servers being available.
Add a count to guarantee uniqueness.
Add a destination to move this value back into place.
Add a dummy padding argument after the receiver to make up the difference.
Add a fall-through when the instruction is not an unconditional control transfer.
Add a leading 0x or 0X.
Add a little margin so rounding errors and concurrent sweep are less likely to leave pages unswept when GC starts.
Add a method, declared as a function.
Add a new parse tree.
Add a non-empty template to check that the error is helpful.
Add a relocation for the immediate in a RIL style instruction.
Add a space between two non-string arguments.
Add a tag with all string labels
Add a timer to the heap and start or kick the timer proc.
Add a type conversion to the argument so that the type assertion will succeed.
Add additional slack to avoid too many jumps in size.
Add adds an Error with given position and error message to an ErrorList.
Add adds delta, which may be negative, to the WaitGroup counter.
Add adds the current execution stack to the profile, associated with value.
Add adds the key, value pair to the header.
Add adds the named field (which should start with a period) to the end of the chain.
Add adds the value to key.
Add an amount to the current time to round it up to the next exact second.
Add an entry by hand.
Add animation info if necessary.
Add another driver template.
Add back links so the instructions in a basic block can be traversed backward.
Add buffering if r does not provide ReadByte.
Add buildid to beginning of text segment, on non-ELF systems.
Add called from rpc.NewClient called from mypkg.Run called from main.main
Add dir in front of every directory in the PATH.
Add displacement to GP
Add edges for branches and fall-through instructions.
Add end marker to simplify printing loop.
Add entry to defer stack in case of panic.
Add everything as literals
Add extra mappings of bitmap words as needed.
Add final "" entry to get trailing newline from Join.
Add final fragment to bit buffer.
Add final sample to save any leftover data.
Add final slash to the joined path.
Add final value if necessary.
Add flag recomputations where they are needed.
Add implicit arguments not present in the tables.
Add implicit arguments.
Add imports, but avoid duplicates.
Add in 100-year cycles.
Add in 4-year cycles.
Add in days before this month.
Add in days before today.
Add in days from 400-year cycles.
Add in non-leap years.
Add in time elapsed today.
Add information about what program was running.
Add is no longer being called.
Add it to the large stack cache instead.
Add it to the schedule.
Add it, in reverse, to the buffer
Add leading 0x or 0X for each element.
Add leading 0x or 0X.
Add len(b.Values) to adjust from end-of-block distance to beginning-of-block distance.
Add load address of shared object.
Add m to the extra list.
Add methods and collisions at this depth to base if no entries with matching names exist already.
Add missing successor edges to the selectgo blocks.
Add new live values from scanning this block.
Add notes that dll is a system32 DLL which should only be loaded from the Windows SYSTEM32 directory.
Add optional additional arguments for an address expression.
Add ourselves to nwait to disable "easy case" in semrelease.
Add p to the running checksum d.
Add padding of given size to fld.
Add panics if the profile already contains a stack for value.
Add panics with ErrNaN if x and y are infinities with opposite signs.
Add pattern to bit buffer and flush bit buffer, c/npattern times.
Add pre-existing methods so that we can detect redeclarations.
Add recover edge to exit code.
Add reference to Go arguments for C or assembly functions without them.
Add returns the rectangle r translated by p.
Add returns the sum of (x1,y1) and (x2,y2)
Add returns the time t+d.
Add returns the vector p+q.
Add s suffix to indicate shortened FPU state (I guess).
Add section headers pointing to the sections emitted in dwarfemitdebugsections.
Add section symbols for DWARF debug info.
Add sets z to the sum x+y and returns z.
Add signal to outgoing queue.
Add some entries by hand.
Add some files to the archive.
Add spacing around real punctuation.
Add sparse info to headers, chopping off the extra comma
Add stores value in an internal map, so value must be suitable for use as a map key and will not be garbage collected until the corresponding call to Remove.
Add symbol's offset from its base register.
Add system object files.
Add the block as a successor of the selectgo block.
Add the default if the select would otherwise block forever, and maybe add it anyway.
Add the field if it doesn't conflict with other fields.
Add the multiplication factor and subtract one, effectively rounding up.
Add the newly parsed trees, including the one for t, into our common structure.
Add the remaining small block
Add this G to an assist queue and park.
Add to entry count if already present in table.
Add to running list in ctxt.
Add to the list of tests to be released by the parent.
Add to typehash if not seen before.
Add together the idx and subbucket value to obtain a function index.
Add trailing dot to canonicalize name.
Add variants to both.
Add w suffix to indicate use of 16-bit target.
Add w suffix to indicate use of CX register instead of ECX.
Add zeros in front of the number until requested precision is reached.
Add, for example, must take two values of the same type and produces that same type.
AddAux adds the offset in the aux fields (AuxInt and Aux) of v to a.
AddCert adds a certificate to a pool.
AddCookie adds a cookie to the request.
AddDate normalizes its result in the same way that Date does, so, for example, adding one month to October 31 yields December 1, the normalized form for November 31.
AddDate returns the time corresponding to adding the given number of years, months, and days to t.
AddEdgeTo adds an edge from block b to block c.
AddExtensionType sets the MIME type associated with the extension ext to typ.
AddFile adds a new file with a given filename, base offset, and file size to the file set s and returns the file.
AddFloat adds delta to the *Float value stored under the given map key.
AddImport adds a package to the list of imported packages.
AddInt32 atomically adds delta to *addr and returns the new value.
AddInt64 atomically adds delta to *addr and returns the new value.
AddLine adds the line offset for a new line.
AddLineInfo adds alternative file and line number information for a given file offset.
AddLineInfo is typically used to register alternative position information for //line filename:line comments in source files.
AddMethod adds method m unless it is already in the method list.
AddParseTree adds parse tree for template with given name and associates it with t.
AddParseTree creates a new template with the name and parse tree and associates it with t.
AddSetCarry generates add and set carry.
AddTypes will add one .debug_types section to the DWARF data.
AddUint32 atomically adds delta to *addr and returns the new value.
AddUint64 atomically adds delta to *addr and returns the new value.
AddUintptr atomically adds delta to *addr and returns the new value.
Adding 66 anywhere in the prefix section of the last two cases does not change the outcome.
Adding a nil entry is valid.
Adding the file will set the file set's Base() value to base + size + 1 as the minimum base value for the next file.
Adding the letter v to an operation, as in pv or rv, enables verbose operation: For the c and r commands, names are printed as files are added.
Addition in a characteristic 2 field is just XOR.
Addition of strings turns into a function call.
Addition of these binary polynomials corresponds to binary xor.
Additional ARM-specific assembly routines.
Additional regress tests.
Additional routines compiled into the package only during testing.
Additional section information
Additionally, OpenSSL right shifts excess bits from the number if the hash is too large and we mirror that too.
Additionally, accept the special package name fakePkgName if we are looking at cmd documentation.
Additionally, concurrent handshake and application data flow is not permitted so renegotiation can only be used with protocols that synchronise with the renegotiation, such as HTTPS.
Additionally, files containing a certificate and matching private key for the server must be provided.
Additionally, not all Linux systems have it, either.
Additions to the reserved area must be above this line.
Addr is the network address for which this error occurred.
Addr is typically used to obtain a pointer to a struct field or slice element in order to call a method that requires a pointer receiver.
Addr represents a network end point address.
Addr returns a pointer value representing the address of v.
Addr returns the address of the i'th element of Nodes.
Addr returns the address of the procedure represented by p.
Addr returns the listener's network address, a *TCPAddr.
Addr returns the listener's network address.
Addr2line is a minimal simulation of the GNU addr2line tool, just enough to support pprof.
Addr2line reads hexadecimal addresses, one per line and with optional 0x prefix, from standard input.
Address already in use
Address and OpIndex together form an operation pointer that can reference any individual operation within the instruction stream.
Address family not supported by protocol family
Address in memory image.
Address information is listed like:
Address is *not* guaranteed to be in map and may be anywhere in the span.
Address is guaranteed to be in map and is guaranteed to be start or end of span.
Address is the program-counter value of a machine instruction generated by the compiler.
Address not available
Address of ElfNN_Rel relocations.
Address of ElfNN_Rela relocations.
Address of PLT relocations.
Address of a variable.
Address of finalization function.
Address of initialization function.
Address of string table
Address of string table.
Address of symbol hash table.
Address of symbol table
Address of symbol table.
Address of the array of pointers to initialization functions
Address of the array of pointers to pre-initialization functions.
Address of the array of pointers to termination functions
Address represents a single mail address.
AddressList parses the named header field as a list of addresses.
AddressSize returns the size in bytes of addresses in the current compilation unit.
AddressSize returns the size in bytes of addresses in the current type unit.
Addressable value receiver.
Addressable, indirect, possibly read-only.
Addresses collected in a cgo backtrace when crashing.
Addresses from stack traces may point to the next instruction after each call.
Addresses from stack traces point to the next instruction after each call.
Addresses of arrays are easier to manipulate with reflection than are slices.
Addresses to test for faulting behavior.
Addressing makes some registers used.
Addrs are the IPv4 and/or IPv6 addresses found in the DNS lookup.
Addrs returns interface addresses for a specific interface.
Adds a finalizer to the object p.
Adds a use record for id at distance dist from the start of the block.
Adds an edge between two basic blocks by making from a predecessor of to and to a successor of from.
Adds stack x to the free pool.
Adds the special record s to the list of special records for the object p.
Adjust all frames by -1 to land on the call instruction.
Adjust any pointers contained therein.
Adjust by -1 to land somewhere on the actual call.
Adjust by program base
Adjust defer argument blocks the same way we adjust active stack frames.
Adjust local variables if stack frame has been allocated.
Adjust pointers in the Defer structs.
Adjust pointers in the new stack.
Adjust relevant exponent accordingly.
Adjust remaining structures that have pointers into stacks.
Adjust saved base pointer if there is one.
Adjust special case opcodes.
Adjust sudogs, synchronizing with channel ops if necessary.
Adjust that with indentAdj.
Adjust the allocCache so that s.freeindex corresponds to the low bit in s.allocCache.
Adjust the frame to account for LR.
Adjust the return value pointer appropriately.
Adjust the text segment boundaries downwards to include it.
Adjust which prefixes will be displayed.
Adjusting GOGC just changes the linear constant (and also the amount of extra memory used).
Adjustpointer checks whether *vpp is in the old stack described by adjinfo.
Advance consumes tokens until it finds a token of the stop- or followlist.
Advance evacuation mark
Advance over initial comments until first stack trace.
Advance pointer as part of increment.
Advance the buffer instead of seeking.
Advance the index.html file's modtime, but not the directory's.
Advance to the next non-comment token.
Advance to the next token.
Advanced Micro Devices x86-64
Advise the huge pages containing v and v+n-1.
After 17 performance degrades
After Body.Read has returned io.EOF, Trailer will contain any trailer values sent by the server.
After Done is closed, successive calls to Err return the same value.
After ErrFinalToken is received by Scan, scanning stops with no error.
After ExpectContinueTimeout, the reading will be started.
After GC prev stats are added to final stats and recent stats are moved into prev stats.
After Grow(n), at least n bytes can be written to the buffer without another allocation.
After Scan returns false, the Err method will return any error that occurred during scanning, except that if it was io.EOF, Err will return nil.
After Stop, no more ticks will be sent.
After a '.' import, "unsafe" shouldn't be defined as an identifier.
After a Scan into a RawBytes, the slice is only valid until the next call to Next, Scan, or Close.
After a Write has timed out, the TLS state is corrupt and all future writes will return the same error.
After a call to Commit or Rollback, all operations on the transaction fail with ErrTxDone.
After a call to Hijack(), the HTTP server library will not do anything else with the connection.
After a stack split check the SP is allowed to be this many bytes below the stack guard.
After all data has been written, the client should call the Flush method to guarantee all data has been forwarded to the underlying io.Writer.
After all flags are defined, call flag.Parse() to parse the command line into the defined flags.
After any of them, the function returns a bool which indicates if the body should be sent.
After calling CreatePart, any previous part may no longer be written to.
After calling ResetForTesting, parse errors in flag handling will not exit the program.
After calling dropg and arranging for gp to be readied later, the caller can do other work but eventually should call schedule to restart the scheduling of goroutines on this m.
After canSend is built, the best is selected.
After changing its configuration, the caller should call Start or StartTLS.
After completion, the error status.
After dropping the final element using Split, the path is Cleaned and trailing slashes are removed.
After dropping the final element, the path is Cleaned and trailing slashes are removed.
After each of the calls are applied to the context, the
After eliminating them, we may end up with fewer than n matches.
After emitting the mandatory debug_abbrev section, it calls writelines() to set up the per-compilation unit part of the DIE tree, while simultaneously emitting the debug_line section.
After flagalloc, records whether flags are live at the end of the block.
After fn returns, reflectcall copies n-retoffset result bytes back into arg+retoffset before returning.
After is the real type checker.
After it is called, changing rw.Header will not affect rw.HeaderMap.
After later resuming execution, Wait locks c.L before returning.
After linking the 4 bytes stored at s+off will be rsym+roff-(start of section that s is in).
After observing that the channel is not closed, we observe that the channel is not ready for sending.
After observing that the channel is not ready for receiving, we observe that the channel is not closed.
After one call to ParseMultipartForm, subsequent calls have no effect.
After one has been passed to a TLS function it must not be modified.
After popping the element, apply any undo records from the stack to restore the name translations that existed before we saw this element.
After printing the source tree, add some declarations for the counters etc.
After readMore, f is invalid and more frames can be read.
After reading from Body returns EOF, Trailer can be read again and will contain non-nil values, if they were sent by the client.
After regalloc we can allow non-distinct predecessors.
After regalloc, consider all values to be live.
After registration, exported methods of the object will be accessible remotely.
After reports whether the time instant t is after u.
After running multiple hammers in parallel, check that we end with the correct total.
After signaling a keep-alive close, any pipelined unread requests will be lost.
After such assignment, if b contents escape, b escapes as well.
After switch to 64-bit ints the compiler generates illegal instructions when using large array bounds or indexes.
After text symbols are converted from a linked list to a slice, delete blk and give this function its name.
After that call, clients can inspect resp.Trailer to find key/value pairs included in the response trailer.
After the GC nobody wakes up the goroutine from Gwaiting status.
After the HTTP request is sent the map values can be updated while the request body is read.
After the Handler has returned, there is no guarantee that the channel receives a value.
After the LZW decoder completes, there will be a 0-byte block remaining (0, ()), which is consumed when checking that the blockReader is exhausted.
After the call to setg we can only call nosplit functions with no pointer manipulation.
After the concurrent scan, there are three possible classes of stack modifications that must be tracked:
After the first call, subsequent calls to a CancelFunc do nothing.
After the fix to unblock TCP Reads in https://golang.org/cl/15941, this sleep is required on plan9 to make sure TCP Writes before an immediate TCP close go out on the wire.
After the last value has been received from a closed channel c, any receive from c will succeed without blocking, returning the zero value for the channel element.
After the request is handled, the state transitions to StateClosed, StateHijacked, or StateIdle.
After this call, port_getn will return one and only one event for that particular descriptor, so this function needs to be called again.
After this header, two lists of objects and the list of inlined function bodies follows.
After this phase returns, the order of b.Values matters and is the order in which those values will appear in the assembly output.
After this phase returns, the order of f.Blocks matters and is the order in which those blocks will appear in the assembly output.
After this point, the background mark worker is scheduled cooperatively by gcController.findRunnable.
After waits for the duration to elapse and then sends the current time on the returned channel.
After we receive an event for a file descriptor, it's our responsibility to ask again to be notified for future events for that descriptor.
After you update to a new Go release, fix helps make the necessary changes to your programs.
AfterFunc waits for the duration to elapse and then calls f in its own goroutine.
Again but take address of the ValueOf value.
Again this is to match what the liveness bitmaps say.
Again, it could be an optional element.
Again, this time with nohup, assuming we can find it.
Again, this time writing them down.
Again, with an unexported method.
Again, without temporary Crashes because x.F is 0.
Aggregate by size class.
Aggregate counter data.
Aggregate local stats.
Aggregate merges the locations in the profile into equivalence classes preserving the request attributes.
Aggregate to file/line for callgrind.
Ahom is the set of Unicode characters in script Ahom.
Alarms can be handled if desired, otherwise they're ignored.
Alas, currently G is not inlineable (at least via export data), so the issue is moot, here.
Alert logs a message with severity LOG_ALERT, ignoring the severity passed to New.
AlgKind describes the kind of algorithms used for comparing and hashing a Type.
Algorithm from: Dumas, J.G.
Algorithm: 1) Store input in multiprecision decimal.
Algorithm: 1) convert Float to multiprecision decimal 2) round to desired precision 3) read digits out and format 1) convert Float to multiprecision decimal
AlgorithmIdentifier represents the ASN.1 structure of the same name.
Align down to 4 bytes and use 32-bit CAS.
Align returns the alignment in bytes of a value of this type when allocated in memory.
Align tiny pointer for required (conservative) alignment.
Alignment in memory and file.
Alignment of stack prologue zeroing was wrong on 64-bit Native Client (because of 32-bit pointers).
Alignment will be wrong.
Alignof must implement the alignment guarantees required by the spec.
Alignof returns the alignment of a variable of type T.
Alive reports whether the specified cell is alive.
All 0-3 byte strings have distinct hashes.
All Floats are ordered, and the ordering of two Floats x and y is defined by x.Cmp(y).
All Objects have a package, except predeclared ones.
All Rights Reserved except as specified below.
All Stmts prepared for this transaction.
All Value types provided by this package satisfy the Getter interface.
All architectures that Go supports or seems likely to ever support automatically enforce data dependency ordering.
All architectures turn faults into apparent calls to sigpanic.
All arguments to be scanned must be either pointers to basic types or implementations of the Scanner interface.
All array elements from 0 to nmatch-1 must be specified in the outcome.
All attempted writes after the first error become no-ops.
All attribute offsets are relative to dat.
All basic types are easy: they are predefined.
All bit rotations of a set of distinct keys
All bitmaps are assumed to be of equal length.
All bytes inside literal return scanContinue op code.
All calls to Store for a given Value must use values of the same concrete type.
All calls to addUse must happen with nonincreasing dist.
All candidates are copies of printpath.exe.
All cases below are in the single-byte UTF-8 group.
All characters are UTF-8-encoded code points.
All cipher suites currently assume RSA key agreement.
All code operating on a *Func must call raw to get the *_func instead.
All comparisons to here said "equal", so just return whatever the final comparison reports.
All complex divide by zero should not error.
All computation is done with int32s, so that overflow behavior is identical regardless of whether int is 32-bit or 64-bit.
All current spans have been swept.
All data should have been read.
All declaration nodes implement the Decl interface.
All embedded fields must be structs (rather than pointer to structs).
All empty rectangles are considered equal.
All errors that arise visiting files and directories are filtered by walkFn.
All expression nodes implement the Expr interface.
All expressions are checked via rawExpr, which dispatches according to expression kind.
All failures, and the result is a string that must appear in the error message.
All fields must be comparable.
All flags are later written out onto the _cgo_flags file for the build system to use.
All float64ing divide by zero should not error.
All formats are equivalent.
All forward jumps jumping over a variable declaration are possibly invalid (they may still jump out of the block and be ok).
All frames have a local color table, so a global color table is not needed.
All functions share the same line table.
All in one place to show how crappy it all is.
All integer divide by zero should error.
All integers are stored in a zigzag varint format.
All keys types that are implemented via crypto.Signer are supported (This includes *rsa.PublicKey and *ecdsa.PublicKey.)
All literals with nonzero fields have already been rewritten during walk.
All m's that have already received SIGQUIT have signal masks blocking receipt of any signals, so the SIGQUIT will go to an m that hasn't seen it yet.
All memory allocations are local and do not escape outside of the profiler.
All method expressions created via reflect have the same underlying code pointer, so their Pointers are equal.
All methods are mentioned by relocations on their receiver's *rtype.
All multiword objects are 2-word aligned, so we know that the initial word's 2-bit pair and the second word's 2-bit pair are in the same heap bitmap byte, *h.bitp.
All must be registers.
All names declared in the preamble may be used, even if they start with a lower-case letter.
All node types implement the Node interface.
All non-windows test should work as intended if prefixed with volume letter.
All non-windows tests should fail, because they have no volume letter.
All objects are 8-aligned, so the first array is indexed by the size divided by 8 (rounded up).
All objects implement the Object interface.
All of the video-*.jpeg files are 150x103.
All other Ps are stopped, so it's safe to manipulate their GC work caches.
All other bytes remap to 5, and genericReplacer.tableSize will be 5.
All other fields except ID are 0/nil.
All other multibyte runes are correctly encoded and assumed printable.
All other slices and arrays are sent as an unsigned count followed by that many elements using the standard gob encoding for their type, recursively.
All other types are handled through the base type, never a pointer.
All other users should use NewGCM, which is faster and more resistant to misuse.
All parsed with ANSIC.
All phase action must be benign in the presence of a change.
All phis are at distance delta (we consider them simultaneously happening at the start of the block).
All pointers are dereferenced, as in the text/template package.
All published variables.
All reads and writes of g's status go through readgstatus, casgstatus castogscanstatus, casfrom_Gscanstatus.
All reads from r performed through it are matched with corresponding writes to w.
All regions not covered by a sparseEntry are logically filled with zeros.
All registers die at this point, so claim everything is set (and not used).
All remaining fields have the same length.
All runes in this test are 3 bytes long
All runs of space characters in either input or format behave as a single space.
All sets but the first and last get the MixColumn transform applied.
All slots hold nil so no scanning is needed.
All statement nodes implement the Stmt interface.
All successors must be distinct (to make phi values in successors unambiguous).
All tables and data are stored in memory only.
All test hooks must be non-nil so they can be called directly, but the tests use nil to mean hook disabled.
All tests are run as subtests
All tests depend on runtime being built into a shared library.
All that is left should be the pseudo-uses added for values which are live at the end of b.
All the ASCII is printable from space through DEL-1.
All the CPPFLAGS and CXXFLAGS directives in a package are concatenated and used to compile C++ files in that package.
All the CPPFLAGS and FFLAGS directives in a package are concatenated and used to compile Fortran files in that package.
All the LDFLAGS directives in any package in the program are concatenated and used at link time.
All the Solaris dynamic imports from libc.so begin with "libc_".
All the arguments are evaluated.
All the cgo CPPFLAGS and CFLAGS directives in a package are concatenated and used to compile C files in that package.
All the cookies received from fromURL
All the functions are named init so we don't have to do anything special to call them.
All the other build-tag-specific lookupIP funcs also take a context now, so this name is no longer great.
All the other error codes are compile errors.
All the others already are (see swapVerticalBar).
All the pkg-config directives are concatenated and sent to pkg-config simultaneously to add to each appropriate set of command-line flags.
All the strings have the same prefix, so ignore it for map purposes, but use a slice of the symbol name string to reduce long-term memory overhead.
All the varint and string reading code earlier should already catch overlong things and return ErrStringLength, but keep this as a last resort.
All the wrappers can share the same linehist entry.
All the writeFrame methods below are scheduled via the frame writing scheduler (see writeScheduler in writesched.go).
All these are valid now.
All these initializations should be done at link time.
All these sends, receives and selects interact chaotically at runtime, but we are careful that this whole construct does not deadlock.
All these variables are set by the Windows executable loader before the Go program starts.
All these variables can be changed concurrently, so the result can be inconsistent.
All this is opaque to clients of the API and can be changed if a better implementation presents itself.
All types implement the Type interface.
All uses scheduled, w is now schedulable.
All we need to see that UnmarshalJSON is called.
Allocate 1M 4-byte objects and set a finalizer for every third object.
Allocate 2 pages of memory.
Allocate a Defer, usually using per-P pool.
Allocate a bigger segment and move the stack.
Allocate a bit vector for each class and facet of value we are tracking.
Allocate a blank image of the full size.
Allocate a bunch of goroutines and grow their stacks.
Allocate a chunk of memory for frame.
Allocate a meg to ensure that mcache.next_sample is updated to 1.
Allocate a multiple of 64kB.
Allocate a new arena.
Allocate a new g, with a stack big enough for stacksize bytes.
Allocate a new m unassociated with any thread.
Allocate a new maxTinySize block.
Allocate a new span of npage pages from the heap for GC'd memory and record its size class in the HeapMap and HeapMapCache.
Allocate a new stack from the heap.
Allocate a reusable buffer with the longest possible frequency table.
Allocate a slice to remember where we have seen selectgo calls.
Allocate a span of exactly npage pages from the list of large spans.
Allocate a span to use in an MCache.
Allocate a temp location to spill a register to.
Allocate a temporary that will be cleaned up when this statement completes.
Allocate a temporary to hold the strings.
Allocate a word of thread local storage and store the offset from the thread local base to the thread local storage in this variable.
Allocate an object of size bytes.
Allocate and populate it (pkg.imports may not be empty if we are checking test files incrementally).
Allocate annotations and assign to instructions.
Allocate another pipe for parent to child communication for synchronizing writing of User ID/Group ID mappings.
Allocate another span worth.
Allocate args to their assigned locations.
Allocate black during GC.
Allocate child status pipe close on exec.
Allocate hmap buffer on stack.
Allocate larger stack and relocate to new stack.
Allocate memory in one call.
Allocate memory to hold a cgo traceback if the cgo call crashes.
Allocate more Ps than processors.
Allocate new buffer to hold the full pieces and the fragment.
Allocate new defer+args.
Allocate one bucket on stack.
Allocate room for a slightly bigger profile, in case a few more entries have been added since the call to MemProfile.
Allocate room for a slightly bigger profile, in case a few more entries have been added since the call to ThreadProfile.
Allocate some pointers.
Allocate space to record the desired registers for each value.
Allocate stack buffer for value stored in interface.
Allocate starting block
Allocate starting values
Allocate the current slice and remember pointers to both current and old.
Allocate the destination interface value.
Allocate v to the new register.
Allocates S but returns I Arg is unused but important: if you take it out (and the 0s below) then the bug goes away.
Allocates a span of the given size.
Allocates a stack from the free pool.
Allocating a 512 GB region takes away 39 bits, and the amd64 doesn't let us choose the top 17 bits, so that leaves the 9 bits in the middle of 0x00c0 for us to choose.
Allocating a large run of pages amortizes the cost of talking to the operating system.
Allocating a small object proceeds up a hierarchy of caches:
Allocating and freeing a large object uses the page heap directly, bypassing the MCache and MCentral free lists.
Allocating many objects amortizes the cost of locking the heap.
Allocating memory can write to various mfixalloc structs that look like they are non-Go memory.
Allocation is done using size segregated per P allocation areas to minimize fragmentation while eliminating locks in the common case.
AllocsPerRun returns the average number of allocations during calls to f.
AllocsPerRun sets GOMAXPROCS to 1 during its measurement and will restore it before returning.
Allow a nudged context to join with an unnudged one.
Allow argframe+0(FP).
Allow both IP versions even if the OS default is otherwise.
Allow checked, selected, disabled, but not JS or CSS attributes.
Allow either uint32 or uint64 as shift type, to avoid unnecessary conversion from uint32 to uint64 just to do the comparison.
Allow embedding in HTML without further escaping.
Allow front end to emit CALL REG, and rewrite into CALL (REG).
Allow multicast UDP and raw IP datagram sockets to listen concurrently across multiple listeners.
Allow other writers to proceed.
Allow regular escape sequences even though many need not be escaped in this context.
Allow reuse of recently-used addresses.
Allow reuse of recently-used ports.
Allow source file to specify override mappings.
Allow that the internal Hostname returns a Fully Qualified Domain Name and the /bin/hostname only returns the first component
Allow title or alt, but not a URL.
AllowIllegalReads permits the Framer's ReadFrame method to return non-compliant frames or frame orders.
AllowIllegalWrites permits the Framer's Write methods to write frames that do not conform to the HTTP/2 spec.
Allowed and HTML escaped.
Allowed but not escaped.
Allows testing to work without running a subprocess.
Almost as fast path: track bit count and refill from pbits.
Almost no inner loops have more than 32 exits, and this allows use of a bitvector and a sparseMap.
Alpha (written in the absence of an ABI)
Alpha is an in-memory image whose At method returns color.Alpha values.
Alpha represents an 8-bit alpha color.
Alpha16 is an in-memory image whose At method returns color.Alpha16 values.
Alpha16 represents a 16-bit alpha color.
Already Accepted connections are not closed.
Already accepted connections are not closed.
Already exists, should succeed.
Already in the process of diagnosing an error.
Already known and highest priority
Already saw EOF, so no need going to look for it.
Already-simple constructs
Also add the correct arg from the saved phi values.
Also assumes that gc convention is to word-align the input and output parameters.
Also avoid existing fields
Also bad, but see the comment above.
Also below in convT2I.
Also check that functions are only used in calls.
Also check that we can register T but send *T.
Also consider errors as a non-existent field tag and let getTypeInfo itself report the error.
Also convert everything to slash-separated paths for uniform handling.
Also don't touch stackcache during gc as it's flushed concurrently.
Also exclude floating point registers with fixed constants
Also exercise the ReaderFrom path
Also has better error detection characteristics than IEEE.
Also insert any ninit queued during the previous loop.
Also known to export_test.go.
Also known to reflect/type.go.
Also leave it enabled on Solaris which doesn't support statically linked binaries.
Also need to explicitly trap on division on zero, the hardware will silently generate undefined result.
Also note that struct dirent is different for these two.
Also nothing to relocate in .shstrtab or notes.
Also nothing to relocate in .shstrtab.
Also print all text from Log and Logf calls even if the test succeeds.
Also record whether there are any writes to main memory.
Also record whether there are any writes to variables whose addresses have been taken.
Also see "Worker thread parking/unparking" comment at the top of the file.
Also see comments for nmspinning manipulation.
Also short-circuit in (1) when the header's been sent and not in chunking mode, writing directly to (4) instead, if (2) has no buffered data.
Also stream if we're showing output anyway with a single package under test or if parallelism is set to 1.
Also test the trimming of leading and trailing spaces.
Also tests removal of leading and trailing whitespace.
Also tests top-level slice of interfaces.
Also the byte divide instruction needs AH, which we otherwise don't have to deal with.
Also this function must not allocate while holding trace.lock: allocation can call heap allocate, which will try to emit a trace event while holding heap lock.
Also this is a leaf, so we're not holding up the memory for long.
Also we know we're decoding a struct now, so the client must have sent one.
Also works if b is a string.
Also, 0 is never a valid chunk, because the lower 4 "count" bits should be between 1 and 15.
Also, F0 is the *only* register we ever evaluate into, so we should only see register/register as F0/F0.
Also, compute sorted list of filenames, so that subsequent iterations can always iterate in the same order.
Also, determine whether we need to save character data or comments.
Also, find object file boundaries.
Also, for each error encountered, the Scanner field ErrorCount is incremented by one.
Also, if the action declares variables, don't print the result.
Also, if the number of arguments scanned is less than the number of arguments provided, an error is returned.
Also, if x is a constant, it must be representable as a value of typ, and if x is the (formerly untyped) lhs operand of a non-constant shift, it must be an integer value.
Also, it is not speed-critical.
Also, nginx expects it for POST and PUT.
Also, p.handoff is non-zero, so flushlog will return false.
Also, since pkg.build.ImportPath is sometimes the unhelpful "" or ".", it looks for a directory name in GOROOT or GOPATH if that happens.
Also, stop before a blank or non-memory field.
Also, the Go standard library expects that any signal handlers will use the SA_RESTART flag.
Also, the Groups field is assigned considering the element path provided in its tag.
Also, the executable example for time.Format demonstrates the working of the layout string in detail and is a good reference.
Also, the old syntax on x86 for a "register pair" was AX:DX, for which the new syntax is DX, AX.
Also, the underlying type must be a struct, map, slice, or array.
Also, this is a 64-bit only instruction.
Also, tophash is meaningless for these kinds of keys.
Also, we can't get all the way back up to our conn's LimitedReader that *might* be backing this bufio.Reader.
Also, when the ignored object contains an interface value, it may define types.
Alternate pseudo-random implementation for use on systems without a reliable /dev/urandom.
Alternatively, create a new type checked with NewChecker and invoke it incrementally by calling Checker.Files.
Alternatively, it passes the request onto runtime netpoll and waits for completion or cancels request.
Although DWARF specifies the lowpc attribute, comments in gdb/dwarf2read.c say that some versions of GCC use the entrypc attribute, so we check that too.
Although Linux manpage says "sa_restorer element is obsolete and should not be used".
Although gcc is needed to compile package net, gcc is not needed to link programs that import package net.
Although it can be used to scan the tree multiple times, it only walks the tree once, caching the data it finds.
Although leading space characters (space, tab, carriage return, newline) at the beginning of src are dropped, trailing space characters at the end of src are preserved and copied to dst.
Although sending an empty NPN extension is reasonable, Firefox has had a bug around this.
Although the history at any given line number is a stack, the record for all line processed forms a tree, with common stack prefixes acting as parents.
Although the public keys are compatible (actually, indistinguishable) from the 2-prime case, the private keys are not.
Although the return value has type float64, it will always be an integral value.
Although without Connection:close, body isn't sent.
Always check errors even if they should not happen.
Always reg, reg, con, con, reg.
Always runs without a P, so write barriers are not allowed.
Always save LINK to stack so that panics in leaf functions are correctly handled.
Always save LR to stack so that panics in leaf functions are correctly handled.
Always the same seed for reproducible results.
Always use dynamic Huffman or Store
Always use tabs for indentation columns (i.e., padding of leading empty cells on the left) independent of padchar.
Ambiguously live variables are zeroed immediately after function entry.
Amount of space left for adding load commands that refer to dynamic libraries.
Amount of white space should not matter.
An "address" is an SSA Value which encodes both the address and size of the write.
An "unfortunate" case: the feature was once included in the API (e.g. go1.txt), but was subsequently removed.
An ASN.1 BIT STRING can be written to a BitString.
An ASN.1 ENUMERATED can be written to an Enumerated.
An ASN.1 INTEGER can be written to an int, int32, int64, or *big.Int (from the math/big package).
An ASN.1 OBJECT IDENTIFIER can be written to an ObjectIdentifier.
An ASN.1 PrintableString or IA5String can be written to a string.
An ASN.1 SEQUENCE OF x or SET OF x can be written to a slice if an x can be written to the slice's element type.
An ASN.1 SEQUENCE or SET can be written to a struct if each of the elements in the sequence can be written to the corresponding element in the struct.
An ASN.1 UTCTIME or GENERALIZEDTIME can be written to a time.Time.
An Addr is an argument to an instruction.
An AddrMode is an ARM addressing mode.
An AddrType represents a machine address type.
An AddressParser is an RFC 5322 address parser.
An AfterFilter represents a socket system call filter after an execution of a system call.
An Archive represents an open archive file.
An Arg is a single instruction argument, one of these types: Endian, Imm, Mem, PCRel, Reg, RegList, RegShift, RegShiftReg.
An Arg is a single instruction argument, one of these types: Reg, Mem, Imm, Rel.
An Args holds the instruction arguments.
An Array represents an array type.
An ArrayType node represents an array or slice type.
An ArrayType represents a fixed size array type.
An As denotes an assembler opcode.
An AssignStmt node represents an assignment or a short variable declaration.
An Attr identifies the attribute type in a DWARF Entry's Field.
An Ellipsis node stands for the "..." type in a parameter list or the "..." length in an array type.
An EmptyOp specifies a kind or mixture of zero-width assertions.
An EmptyStmt node represents an empty statement.
An Encoder manages the transmission of type and data information to the other side of a connection.
An Encoder writes JSON values to an output stream.
An Encoder writes XML data to an output stream.
An Encoding is a radix 32 encoding/decoding scheme, defined by a 32-character alphabet.
An Encoding is a radix 64 encoding/decoding scheme, defined by a 64-character alphabet.
An EndElement represents an XML end element.
An Endian is the argument to the SETEND instruction.
An Entry is the internal representation of the per-file header information of one entry in the archive.
An EnumType represents an enumerated type.
An EnumValue represents a single enumeration value.
An ErrCode is an unsigned 32-bit error code as defined in the HTTP/2 spec.
An ErrNaN implements the error interface.
An ErrNaN panic is raised by a Float operation that would lead to a NaN under IEEE-754 rules.
An ErrPersistEOF error is returned if the connection has been closed in an HTTP keepalive sense.
An ErrUnexpectedEOF indicates the remote closed the underlying TCP connection, which is usually considered as graceful close.
An Errno is an unsigned number describing an error condition.
An Error describes a failure to parse a regular expression and gives the offending expression.
An Error represents a network error.
An Error represents a numeric error response from a server.
An ErrorCode describes a failure to parse a regular expression.
An ErrorHandler may be provided to Scanner.Init.
An ErrorList implements the error interface.
An EscStep documents one step in the path from memory that is heap allocated to the (alleged) reason for the heap allocation.
An Example represents an example function found in a source files.
An ExitError reports an unsuccessful exit by a command.
An ExprStmt node represents a (stand-alone) expression in a statement list.
An ExtDis is a connection between an external disassembler and a test.
An HMAC is a cryptographic hash that uses a key to sign a message.
An HTML parser is in this state when its parse position is outside an HTML tag, directive, comment, and special element body.
An IP is a single IP address, a slice of bytes.
An IP mask is an IP address.
An IPNet represents an IP network.
An IPv4 address and that same address in IPv6 form are considered to be equal.
An IPv4 address can be converted to an IPv6 address by adding a canonical prefix (10 zeros, 2 0xFFs).
An Ident node represents an identifier.
An If-Range resource for entity "A", but entity "B" is now current.
An IfStmt node represents an if statement.
An Image contains colors, which are described in the image/color package.
An Imm is an integer constant.
An ImportMode controls the behavior of the Import method.
An ImportSpec node represents a single package import.
An Importer must determine the canonical import path and check the map to see if it is already present in the imports map.
An Importer resolves import paths to Packages.
An Importer resolves import paths to package Objects.
An IncDecStmt node represents an increment or decrement statement.
An IndexExpr node represents an expression followed by an index.
An InitOrder may already have been computed if a package is built from several calls to (*Checker).Files.
An Initializer describes a package-level variable, or a list of variables in case of a multi-valued initialization expression, and the corresponding initialization expression.
An InsecureAlgorithmError
An Inst is a single instruction in a regular expression program.
An Inst is a single instruction in an assembly listing.
An Inst is a single instruction.
An InstOp is an instruction opcode.
An Int represents a signed multi-precision integer.
An IntHeap is a min-heap of ints.
An IntType represents a signed integer type.
An Interface represents an interface type.
An InterfaceType node represents an interface type.
An InternalError reports an error in the flate code itself.
An InvalidIndexError is returned when an encoder references a table entry before the static table or after the end of the dynamic table.
An InvalidUnmarshalError describes an invalid argument passed to Unmarshal.
An Item is something we manage in a priority queue.
An LSym is the sort of symbol that is written to an object file.
An MSpan is a run of pages.
An MSpan representing actual memory has state _MSpanInUse, _MSpanStack, or _MSpanFree.
An MX represents a single DNS MX record.
An NS represents a single DNS NS record.
An Nlist32 is a Mach-O 32-bit symbol table entry.
An Nlist64 is a Mach-O 64-bit symbol table entry.
An OPTIONS * request should succeed.
An OXDOT uses the Sym field to hold the field to the right of the dot, so s will be non-nil, but an OXDOT is never a valid struct literal key.
An Obj represents a collection of functions in a symbol table.
An ObjFile is a single object file: a shared library or executable.
An ObjTool inspects shared libraries and executable files.
An Object describes a named language entity such as a package, constant, type, variable, function (incl.
An Offset represents the location of an Entry within the DWARF info.
An Op encodes the specific operation that a Value performs.
An Op is a single regular expression operator.
An Op is an ARM opcode.
An Op is an x86 opcode.
An RWMutex is a reader/writer mutual exclusion lock.
An SRV represents a single DNS SRV record.
An SelectStmt node represents a select statement.
An SliceExpr node represents an expression followed by slice indices.
An TypeSwitchStmt node represents a type switch statement.
An UnknownFrame is the frame type returned when the frame type is unknown or no specific frame type parser exists.
An UnmarshalError represents an error in the unmarshalling process.
An UnmarshalFieldError describes a JSON object key that led to an unexported (and therefore unwritable) struct field.
An UnmarshalTypeError describes a JSON value that was not appropriate for a value of a specific Go type.
An UnspecifiedType represents an implicit, unknown, ambiguous or nonexistent type.
An UnsupportedError reports that the input uses a valid but unimplemented JPEG feature.
An UnsupportedError reports that the input uses a valid but unimplemented PNG feature.
An UnsupportedTypeError is returned by Marshal when attempting to encode an unsupported value type.
An absolute symbol (e_value is a constant, not an address)
An abstract method may belong to many interfaces due to embedding.
An action represents a single action in the action graph.
An action that declares a variable produces no output.
An action transitions stochastically to a resulting score.
An actionQueue is a priority queue of actions.
An additional argument of a slice or array means that it needs to check the entire slice/array, but nothing else.
An additional argument of true means that it only needs to check a single element.
An addr is a sequence of bytes uniquely identifying a network address.
An addrList represents a list of network endpoint addresses.
An addrinfoErrno represents a getaddrinfo, getnameinfo-specific error number.
An alternate solution might be to split the cmd.Run into separate cmd.Start and cmd.Wait, and then use an RWLock to make sure that copyFile only executes when no cmd.Start call is in progress.
An alternative implementation might use a "visited" map, but that is probably less efficient overall.
An anonymous struct field of interface type is treated the same as having that type as its name, rather than being anonymous.
An anonymous struct field with a name given in its JSON tag is treated as having that name, rather than being anonymous.
An application can use these keys as entry points to the registry.
An appropriate use of a Pool is to manage a group of temporary items silently shared among and potentially reused by concurrent independent clients of a package.
An approximation of the sng command-line tool.
An array composite literal needs to be created freshly every time.
An array of pure memory would be handled by the standard algorithm, so the element type must not be pure memory.
An array of pure memory would be handled by the standard memequal, so the element type must not be pure memory.
An array with a bit vector for each safe point tracking live pointers in the arguments and locals area, indexed by bb.rpo.
An artificial input source.
An asmArch describes assembly parameters for an architecture
An asmFunc describes the expected variables for a function on a given architecture.
An asmVar describes a single assembly variable.
An attacker can align the record so that a correct padding will cause one less hash block to be calculated.
An attempt to read into a struct with an unexported field will panic.
An earlier attempt to use 0x11f8 caused out of memory errors on OS X during thread allocations.
An element of a pipeline.
An embeddedSet describes a set of embedded types.
An empty Dir is treated as ".".
An empty block signifies the end of the image data.
An empty byte slice argument represents 0.
An empty file has an empty line offset table.
An empty line or non-comment token terminates a comment group.
An empty list denotes the "identity" encoding.
An empty list means ExtKeyUsageServerAuth.
An empty list of certificateAuthorities signals to the client that it may send any certificate in response to our request.
An empty method means "GET".
An empty string means deleted (or a duplicate to be ignored).
An empty username and password will work.
An emptyCtx is never canceled, has no values, and has no deadline.
An encodeState encodes JSON into a bytes.Buffer.
An encoded data is written to w.
An encoder is an io.Writer that satisfies writes by writing PNG IDAT chunks, including an 8-byte header and 4-byte CRC checksum per Write call.
An encoding is invalid if it is incorrect UTF-8, encodes a rune that is out of range, or is not the shortest possible UTF-8 encoding for the value.
An entry is a sequence of attribute/value pairs.
An entry is a sequence of data items of a given format.
An entry of -1 indicates an empty slot.
An entry with two frames with 'System' in its top frame exists to record a PC without a traceback.
An eqclass approximates an equivalence class.
An errReader returns (0, err) where err is not io.EOF.
An errWriteCloser is an io.WriteCloser that always returns a given error.
An errWriter wraps a writer, recording whether a write error occurred.
An error either way, but the error message is confusing.
An error is returned if caused by client policy (such as CheckRedirect), or failure to speak HTTP (such as a network connectivity problem).
An error is returned if pos is not within the package or if the node cannot be evaluated.
An error is returned if targpath can't be made relative to basepath or if knowing the current working directory would be necessary to compute it.
An error is returned if the Client's CheckRedirect function fails or if there was an HTTP protocol error.
An error is returned if the copy would result in loss of information.
An error is returned if the value is a different form.
An error is returned if there are multiple matches.
An error is returned if there were too many redirects or if there was an HTTP protocol error.
An error on not-const:1 indicates that foo is not an integer constant.
An error on not-declared:1 indicates that foo is undeclared.
An error on not-type:1 indicates that foo is not a type (if declared at all, it is an identifier).
An error should be returned if the value cannot be stored without loss of information.
An errorString represents a runtime error described by a single string.
An escape analysis pass for a set of functions.
An example is the implementation of math.Float64bits:
An example of a method M with receiver type T or *T is named ExampleT_M.
An example of good use of a Pool is in the fmt package, which maintains a dynamically-sized store of temporary output buffers.
An example of such a line is: 220 plan9.bell-labs.com ESMTP
An example of wrapping a C library in Go.
An example with no such comment, or with no text after "Output:" is compiled but not executed.
An example would be an RSA key kept in a hardware module.
An exhaustive is a mechanism for writing exhaustive or stochastic tests.
An existing Userinfo value is guaranteed to have a username set (potentially empty, as allowed by RFC 2396), and optionally a password.
An explicit extension should override the DNSNames from the template.
An exponent means multiplication by ebase**exp.
An expression is represented by a tree consisting of one or more of the following concrete expression nodes.
An extFloat represents an extended floating-point number, with more precision than a float64.
An extra number (exit code, signal causing a stop) is in the high bits.
An fsys is a file system.
An fsysFile is the fileImpl implementation backed by the file system.
An identifier denoting a constant, a constant literal, or a qualified identifier (imported untyped constant).
An idle timeout can be implemented by repeatedly extending the deadline after successful Read or Write calls.
An ifacePair is a node in a stack of interface type pairs compared for identity.
An image's bounds do not necessarily start at (0, 0), so the two loops start at bounds.Min.Y and bounds.Min.X.
An image.YCbCr is always fully opaque, and so if the mask is nil (i.e. fully opaque) then the op is effectively always Src.
An implementation may support additional entries, depending on the underlying operating system.
An implementation must call the following function to denote that the pd is ready.
An implementation that always returns "" is valid and may be useful for testing but it is not secure: it means that the HTTP server for foo.com can set a cookie for bar.com.
An implicitly tagged time value, that happens to have an implicit tag equal to a GENERALIZEDTIME, should still be parsed as a UTCTime.
An import path can also name a package to be downloaded from a remote repository.
An import path is a pattern if it includes one or more "..." wildcards, each of which can match any string, including the empty string and strings containing slashes.
An import path that is a rooted path or that begins with a .
An importStack is a stack of import paths.
An important exception is builds using a pre-compiled copy of the standard library.
An importer is used to import packages referred to from import declarations.
An importer must determine the canonical package path and check imports to see if it is already present in the map.
An incr/decr op precedes a div operator.
An indent of 4 spaces will neatly align the dashes with the status indicator of the parent.
An individual object file only records version 0 (extern) or 1 (static).
An initial period is ignored.
An inode is a (possibly special) file in the file system.
An instArg describes the encoding of a single argument.
An instFormat describes the format of an instruction encoding.
An instance triggering a type name of 1.6 GB.
An interesting case because they have finalizers and used to have self loops that kept them from being collected.
An interface with several implementations
An invalid encoding is considered a full Rune since it will convert as a width-1 error rune.
An invalid value is likely a nil map, etc.
An ipv6ZoneCache represents a cache holding partial network interface information.
An objNode represents a node in the object dependency graph.
An objReader is an object file reader.
An object can have both finalizer and profile special records.
An object identifier is a sequence of variable length integers that are assigned in a hierarchy.
An object implements the common parts of an Object.
An objset is a set of objects identified by their unique id.
An objset is similar to a Scope but objset elements are identified by their unique id, instead of their object name.
An offset from the thread-local storage base is written off(reg)(TLS*1).
An onlyReader only implements io.Reader, no matter what other methods the underlying implementation may have.
An onlyWriter only implements io.Writer, no matter what other methods the underlying implementation may have.
An operand represents an intermediate value during type checking.
An operandMode specifies the (addressing) mode of an operand.
An optimizer bug in 8g triggers a runtime fault instead of an out of bounds panic.
An ordinary basic block.
An similar test crashed once during development, but it was only testing this tangentially and temporarily until another TODO was fixed.
An undefined (extern) symbol
An underscore represents a zero pad, if required.
An unmatched subexpression formats its pair as a single - (not illustrated above).
An unset flag will be set by -all, so defaults to true.
An unsigned integer is sent one of two ways.
An unsigned integer x of the form
An untyped nil constant.
An untyped nil does not need a pointer check, and when _cgoCheckPointer returns the untyped nil the type assertion we are going to insert will fail.
An unused data size override should probably be shown, to distinguish DATA16 CRC32B from plain CRC32B, but libopcodes always treats the final override as implicit and the others as explicit.
An upper bound for error, computed in errorscale*ulp.
An version of bytes.Buffer without ReadFrom and WriteTo
Analogous to testing's *T type.
Analyze lhs of assignment.
Analyze the import path to determine the version control system, repository, and the import path for the root of the repository.
Analyzing both legs pointing to Alts is for another day
Anatolian_Hieroglyphs is the set of Unicode characters in script Anatolian_Hieroglyphs.
Anchored match, past beginning of text.
Anchored search must start at the beginning of the input
And a HEAD request too, because they're always weird.
And because Go's native resolver doesn't do mDNS or similar local resolution mechanisms, assume that libc might (via Avahi, etc) and use cgo.
And concurrently with all that start/stop trace 3 times.
And do the assignment
And especially not outside the directory.
And finally the linkedit section.
And if not, it must not.
And if there are bugs, they're more likely in the current development tree than in a standard release like Go 1.4, so don't do this rebuild by default.
And it cannot see the panic of 3 because it is at the wrong level (too high on the stack).)
And it's just much safer.
And kill the child CGI process so we don't hang on the deferred cmd.Wait above if the error was just the client (rw) going away.
And now just block, making the server block on our 100000 bytes of body that will never arrive.
And now verify that if we register it as a system32-only DLL, the implicit loading from the current directory no longer works.
And runtime will essentially enter into deadlock state, except that there is a thread that will call exit soon.
And so on, up the dependency tree.
And so the program ends up with two copies of sanitizer runtime.
And some other informational 1xx but non-100 responses, to test we return them but don't re-use the connection.
And test that we see an EOF chunk, even though our buffer is already full:
And the same for Formatter.
And this does fix it.
And this only applies to the multiple-assignment form.
And verify that the final rows.Next() call, which hit EOF, also closed the rows connection.
And verify we can just seek past the end and get an EOF
Android should always use cgo.
Android's stock lsof does not obey the -p option, so extra filtering is needed.
Android/386 constant - offset from 0(GS) to our TLS slot.
Android/amd64 constant - offset from 0(FS) to our TLS slot.
Angle brackets escaped to prevent injection of close tags, entity not re-escaped.
Annotate Ref in Prog with C types by parsing gcc debug output.
Annotate ambiguously live variables so that they can be zeroed at function entry.
Annotations in the template refer to elements of the data structure (typically a field of a struct or a key in a map) to control execution and derive values to be displayed.
Announce to readers there is a pending writer.
Announce to readers there is no active writer.
Announce we are entering a system call so that the scheduler knows to create another M to run goroutines while we are in the foreign code.
Anonymous field of type T or *T.
Anonymous fields are recorded with the parent type.
Anonymous fields to explore at the current level and the next.
Anonymous functions are considered part of the init expression/func declaration which contains them: use existing package-level declaration info.
Anonymous struct fields are usually marshaled as if their inner exported fields were fields in the outer struct, subject to the usual Go visibility rules amended as described in the next paragraph.
Another European CA marked its signature keys as not being valid for signatures.
Another bug from golang-nuts, involving nested interfaces.
Another bug: this caused a crash with the new Go1 Time type.
Another bug: variable read must ignore following punctuation.
Another common strategy is to use d.Token to process the XML object one token at a time.
Another common strategy is to use repeated calls to e.EncodeToken to generate the XML output one token at a time.
Another disambiguator: If the symbol starts with an upper case letter, it can only be a symbol in the current directory.
Another place where we intentionally omit memory barriers is when accessing mheap_.arena_used to check if a pointer points into the heap.
Another problem is that binary distributions often set the mtime on all files to the same time.
Another problem is that due to file system imprecision, an input and output that are actually ordered in time have the same mtime.
Another request finished first and its net.Conn became available before our dial.
Another sequence of indexings.
Another variant Println inserts blanks between operands and appends a newline.
Another zip64 file with different Extras fields.
Any +build directives must appear within this region.
Any .c, .s, or .S files will be compiled with the C compiler.
Any .cc, .cpp, or .cxx files will be compiled with the C++ compiler.
Any .f, .F, .for or .f90 files will be compiled with the fortran compiler.
Any .h, .hh, .hpp, or .hxx files will not be compiled separately, but, if these header files are changed, the C and C++ files will be recompiled.
Any Image may be encoded, but images that are not image.NRGBA might be encoded lossily.
Any bits between the current index and the new index are set to zero, meaning the corresponding words are scalars.
Any blocked Accept operations will be unblocked and return errors.
Any blocked Read or Write operations will be unblocked and return errors.
Any blocked ReadFrom or WriteTo operations will be unblocked and return errors.
Any call can send this back with an error, and some calls only have return values so they send it back on success too.
Any changes here must be matched by changes to the definition of moduledata in runtime/symtab.go.
Any changes here must be matched changes to the code in cmd/internal/ld/symtab.go:symtab.
Any comments that need to appear before that token are printed first, taking into account the amount and structure of any pending white- space for best comment placement.
Any common use of the -a flag should be considered prima facie evidence that isStale is returning an incorrect false result in some important case.
Any control flow, such as branches or fall-throughs, that target the existing instruction are adjusted to target the new instruction.
Any current user of r is kicked out.
Any error encountered during the write is also returned.
Any error encountered while writing is reported as a read error.
Any error except io.EOF encountered during the read is also returned.
Any error from filling shouldn't show up until we get past the valid bytes.
Any error is stored in s.err.
Any error that occurred will be in d.err
Any existing identifier that already has the same name on the C-side will cause the Go-mangled version to be prefixed with _.
Any file with a .swigcxx extension will be passed to SWIG with the -c++ option.
Any frames above this have not executed since the concurrent scan of gp and any writes through up-pointers to above this barrier had write barriers.
Any free page of memory can be split into a set of objects of one size class, which are then managed using free list allocators.
Any functions whose execution was deferred by F are run in the usual way, and then F returns to its caller.
Any h2c support must be implemented in terms of providing a suitably-behaving net.Conn.
Any hooks defined in the provided trace will be called first.
Any incomplete escape sequence at the end is considered complete for formatting purposes.
Any invalid instruction.
Any item stored in the Pool may be removed automatically at any time without notification.
Any load must come before the following store.
Any mutations to the returned pool are not written to disk and do not affect any other pool.
Any name-based heuristics are only relative to other calls, and less influential than inferences from loop structure.
Any name-like node of non-local class is marked for re-export by adding it to the exportlist.
Any names still using the _C syntax are not going to compile, although in general we don't know whether they all made it into the file, so we can't warn here.
Any nested type definitions should be written to b, before the encoded value.
Any number of digits in braces.
Any other error value is a StreamError of type ErrCodeProtocol.
Any other panic remains.
Any other read operation.
Any other value returns an error.
Any parsing state is discarded.
Any particular hook may be nil.
Any previous user is kicked out and spilled (if necessary).
Any remaining unresolved identifiers are reported as undeclared.
Any request or response that contains a character not permitted in a header field value MUST be treated as malformed (Section 8.1.2.6).
Any returned error will usually be of type *ExitError.
Any semrelease after the cansemacquire knows we're waiting (we set nwait above), so go to sleep.
Any specific hook may be nil.
Any timeout or deadline given in the dialer apply to connection and TLS handshake as a whole.
Any type that implements heap.Interface may be used as a min-heap with the following invariants (established after Init has been called or if the data is empty or sorted):
Any typed value can be assigned to the blank identifier.
Any unreached text symbols are removed from ctxt.Textp.
Any valid stream must start with a literal insertion if no preset dictionary is used.
Any values which have no more uses are deallocated from registers.
Any work created by write barriers here will be cleaned up by mark termination.
Anything after this offset is scalar data.
Anything else we assume means the pages are mapped.
Anything interesting that happens from here is a fatal.
Anything listed on the command line is fine.
Anything that didn't get a register gets a stack location here.
Anything that inspects or manipulates the stack potentially needs to understand stack barriers.
Anything that unwinds the stack such as panic/recover must unwind stack barriers in tandem with unwinding the stack.
Anything unchanged since the concurrent scan phase will be marked because it is marked by the concurrent scan.
Apologies for the proprietary path, but we need objdump 2.24 + some committed patches that will land in 2.25.
Append "ip6.arpa." and return (buf already has the final .)
Append .o to the file, just in case the pkg has file.c and file.cpp
Append .o to the file, just in case the pkg has file.c and file.f
Append .o to the file, just in case the pkg has file.c and file.m
Append 4 bytes to s and create a R_CALL relocation targeting t to fill them in.
Append a U+FFFD REPLACEMENT CHARACTER character to the current attribute's value.
Append any extras destinations we generated.
Append any new body prologue to ninit.
Append appends entries to Nodes.
Append appends entries to f.
Append appends the string representation of x, as generated by x.Text(base), to buf and returns the extended buffer.
Append appends the values x to a slice s and returns the resulting slice.
Append appends to buf the string form of the floating-point number x, as generated by x.Text, and returns the extended buffer.
Append code to p to check for stack split.
Append code to p to load g into cx.
Append context information.
Append emits the given GC program into the current output.
Append forces heap allocation and copies entries in vals to heap, therefore they escape to heap.
Append returns first argument.
Append returns the updated slice.
Append some randomly generated blocks of varying sparseness.
Append text to current cell.
Append the extensions to an existing attribute if possible.
Append this command to the header to show where the new file came from.
AppendBool appends "true" or "false", according to the value of b, to dst and returns the extended buffer.
AppendBool, AppendFloat, AppendInt, and AppendUint are similar but append the formatted value to a destination slice.
AppendCertsFromPEM attempts to parse a series of PEM encoded certificates.
AppendFloat appends the string form of the floating-point number f, as generated by FormatFloat, to dst and returns the extended buffer.
AppendFormat is like Format but appends the textual representation to b and returns the extended buffer.
AppendHuffmanString appends s, as encoded in Huffman codes, to dst and returns the extended buffer.
AppendInt appends the string form of the integer i, as generated by FormatInt, to dst and returns the extended buffer.
AppendNodes appends the contents of *n2 to n, then clears n2.
AppendQuote appends a double-quoted Go string literal representing s, as generated by Quote, to dst and returns the extended buffer.
AppendQuoteRune appends a single-quoted Go character literal representing the rune, as generated by QuoteRune, to dst and returns the extended buffer.
AppendQuoteRuneToASCII appends a single-quoted Go character literal representing the rune, as generated by QuoteRuneToASCII, to dst and returns the extended buffer.
AppendQuoteRuneToGraphic appends a single-quoted Go character literal representing the rune, as generated by QuoteRuneToGraphic, to dst and returns the extended buffer.
AppendQuoteToASCII appends a double-quoted Go string literal representing s, as generated by QuoteToASCII, to dst and returns the extended buffer.
AppendQuoteToGraphic appends a double-quoted Go string literal representing s, as generated by QuoteToGraphic, to dst and returns the extended buffer.
AppendRange should collapse each of the new ranges into the earlier ones (it looks back two ranges), so that the slice never grows very large.
AppendSlice appends a slice t to a slice s and returns the resulting slice.
AppendUint appends the string form of the unsigned integer i, as generated by FormatUint, to dst and returns the extended buffer.
Appendix B, C of FIPS 197: Cipher examples, Example vectors.
Appends to (does not overwrite) p.
Apple clang version 1.7 (tags/Apple/clang-77) (based on LLVM 2.9svn) doesn't have -Wno-unneeded-internal-declaration, so we need yet another flag to disable the warning.
Apple publishes the list of trusted root certificates for iOS on support.apple.com.
Apple's LLVM-based gcc does not include the enumeration names and values in its DWARF debug output.
Apple's codesign_allocate (a helper utility for the codesign utility) can do this fine itself if it is run on a dynamic Mach-O binary.
Application Extension with "NETSCAPE2.0" as string and 1 in data means this extension defines a loop count.
Application Identifier.
Apply all fixes to file.
Apply default /profilez.
Apply fix: should get tt.Out.
Apply legacy options and diagnose conflicts.
Apply name space translation to name n.
Apply nodecount defaults for non-interactive mode.
Apply replacements to buffer.
Apply sbox0 to each byte in w.
Apply the desired decimal shift on f.
Applying them to UTC times will use "UTC" as the time zone abbreviation, while strictly speaking those RFCs require the use of "GMT" in that case.
Approximately 1 in a 100 binaries fail to start.
Approximation is too wide.
Approximation of log(1+f).
Approximation of log1p(f).
Approximation of notifyList in runtime/sema.go.
Arabic is the set of Unicode characters in script Arabic.
ArbitraryType is here for the purposes of documentation only and is not actually part of the unsafe package.
Arch represents an individual architecture.
Arch wraps the link architecture object with more architecture-specific information.
ArchFamily represents a family of one or more related architectures.
Architecture-specific flags.
Architectures need to support 64-bit high multiplications (OHMUL) in order to perform divide by constant optimizations.
Architectures that use a link register save its value on the stack in the function prologue and so always have a pointer between the hardware stack pointer and the local variable area.
Arena where we read and write pointers like crazy.
Arg returns an empty string if the requested element does not exist.
Arg returns the i'th argument.
Arg returns the i'th command-line argument.
Arg(0) is the first remaining argument after flags have been processed.
ArgWidth returns the total aligned argument size for a function.
Args are "pre-spilled" values.
Args hold the command-line arguments, starting with the program name.
Args must be evaluated.
Args need to be indirected and dereferenced sometimes.
Args returns the non-flag arguments.
Args returns the non-flag command-line arguments.
ArgsSizeUnknown is set in Func.argsize to mark all functions whose argument size is unknown (C vararg functions, and assembly code without an explicit specification).
Arguably should be handled by f.flagValue, but aren't.
Argument could leak through recover.
Argument index present.
Argument list too long
Argument reduction: Given x, find r and integer k such that
Arguments An argument is a simple value, denoted by one of the following.
Arguments are handled in the manner of fmt.Print.
Arguments are handled in the manner of fmt.Printf.
Arguments are handled in the manner of fmt.Println.
Arguments are immediately after format string.
Arguments in lexical order: Identifier, field, or constant.
Arguments must be assignable to parameter types.
Arguments must be assignable to the slice's element type.
Arguments of OADDSTR do not escape.
Arguments of this value
Arguments to the call have already been written to the stack.
Argwid is the total width of the function receiver, params, and results.
Arithmetic expressions are typically written as a sequence of individual method calls, with each call corresponding to an operation.
Arm both EVFILT_READ and EVFILT_WRITE in edge-triggered mode (EV_CLEAR) for the whole fd lifetime.
Armenian is the set of Unicode characters in script Armenian.
Arrange for it to run on a cpu again.
Arrange for the bucket to have no pointers by changing the type of the overflow field to uintptr in this case.
Arrange so that d0 is first transition date, d1 second, i0 is index of zone after first transition, i1 second.
Arrange the data structures to report both calls, so that if there is an error, stkprint shows all the steps involved.
Arrange to call fn with a traceback hz times a second.
Arrange to rebuild, writing to that same tree, all packages q such that the test depends on q, and q depends on p.
Array of 1 direct iface type can be direct.
Array of rtype pointers follows funcType.
Array values are deeply equal when their corresponding elements are deeply equal.
Array, pointer to array, slice.
ArrayOf also calls cacheGet/cachePut and thus may modify the state of the lookupCache mutex.
ArrayOf returns the array type with the given count and element type.
ArrayType contains Type fields specific to array types.
ArrayValue: uint(n) FieldValue*n
Arrays are comparable if and only if their element type is comparable.
Arrays are passed implicitly as pointers in C.
Arrays of bytes are not required to be word aligned.
As Apple converts gcc to a clang-based front end they keep breaking the DWARF output.
As ELF section names are not supposed to be special, one looks for a particular note by scanning all SHT_NOTE sections looking for a note with a particular "name" and "tag".
As Go doesn't have support for C's union type in the general case, C's union types are represented as a Go byte array with the same length.
As Go uses bsdthread_register when running without cgo, this function is not safe to use after initialization as it does not pass an M as fnarg.
As Go uses raw syscalls directly, it must use the real value, not the glibc value.
As a consequence, can do the write only for the first waiter, otherwise concurrent Waits will race with each other.
As a convenience, if err is nil, NewSyscallError returns nil.
As a convenience, it returns the number of bytes written to dst, but this value is always EncodedLen(len(src)).
As a courtesy to developers installing new versions of the compiler frequently, define that packages are stale if they are older than the compiler, and commands if they are older than the linker.
As a disassembler, we don't really know whether we're seeing a meaningless prefix or one whose meaning we simply haven't been told yet.
As a heuristic, we move this assist to the back of the queue so that large assists can't clog up the assist queue and substantially delay small assists.
As a matter of fact, this benchmark still triggers some spinning in the mutex.
As a more whimsical example, this program guesses your number:
As a precaution, ServeFile will reject requests where r.URL.Path contains a ".." path element.
As a register, TLS refers to the thread-local storage base, and it can only be loaded into another register:
As a result, implementing an interface once can make a type useful in multiple encodings.
As a rule, unknown must not be shown but it might possibly happen due to issue 4856 for now.
As a sanity check, the GC has a 'checkmark' mode that retraverses the object graph with the world stopped, to make sure that everything that should be marked is marked.
As a side effect, flushes all the MCaches so the MSpan.freelist lists contain all the free objects.
As a simpler heuristic, we limit its use to when the source and destination belong to the same special purpose block.
As a special case, ServeFile redirects any request where r.URL.Path ends in "/index.html" to the same path, without the final "index.html".
As a special case, durations less than one second format use a smaller unit (milli-, micro-, or nanoseconds) to ensure that the leading digit is non-zero.
As a special case, handleResponse may return (nil, nil) to skip the frame (currently only used for 100 expect continue).
As a special case, if Chan is a zero Value, then the case is ignored, and the field Send will also be ignored and may be either zero or non-zero.
As a special case, if a negative base is provided, the current value of the FileSet's Base() is used instead.
As a special case, if a variable s is of struct type and f is a field within that struct, then Alignof(s.f) will return the required alignment of a field of that type within a struct.
As a special case, if req.URL.Host is "localhost" (with or without a port number), then a nil URL and nil error will be returned.
As a special case, if the "Content-Transfer-Encoding" header has a value of "quoted-printable", that header is instead hidden from this map and the body is transparently decoded during Read calls.
As a special case, the returned file server redirects any request ending in "/index.html" to the same path, without the final "index.html".
As a special case, to unmarshal an empty JSON array into a slice, Unmarshal replaces the slice with a new empty slice.
As a special case, x/...
As a special exception, field and method names that are exported use the Sym associated with localpkg instead of the package that declared them.
As an example, the following func
As an exception to that rule, we typically write down all the size variants of an operation even if we just use a subset.
As an exception, allow exactly one Content-Length header if its value is "0".
As an exception, in the degenerate single-code case, we allow odd chunks to be missing.
As an implementation detail we allow to set finalizers for an inner byte of an object if it could come from tiny alloc (see mallocgc for details).
As an optimization, those etype-specific structs which contain exactly one pointer-shaped field are stored as values rather than pointers when possible.
As an optimization, we can initialize the min bits to read at a time for the HLIT tree to the length of the EOB marker since we know that every block must terminate with one.
As each 1 in s.allocCache was encountered and used for allocation it was shifted away.
As ever, signatures provide authenticity, not confidentiality.
As for now only Solaris uses level-triggered IO.
As for ptracePeek, we need to align our accesses to deal with the possibility of straddling an invalid page.
As in Go, each input argument must be assignable to the type of the function's corresponding input parameter.
As in Go, each x's value must be assignable to the slice's element type.
As in Go, key's value must be assignable to the map's key type, and val's value must be assignable to the map's value type.
As in Go, the key's value must be assignable to the map's key type.
As in Go, x's value must be assignable to the channel's element type.
As in Go, x's value must be assignable to v's type.
As in the Go tree, each target operating system and architecture pair has its own subdirectory of pkg (pkg/GOOS_GOARCH).
As in the cases above, it is invalid to store the result before the conversion:
As initial capacity for readAll, use n + a little extra in case Size is zero, and to avoid another allocation after Read has filled the buffer.
As interface types are only used for static typing, a common idiom to find the reflection Type for an interface type Foo is to use a *Foo value.
As is, the number of iterations is so low that it hardly seems to be worth the complexity.
As it goes, it collects methodref and interface method declarations.
As long as it gets removed, we should be happy.
As long as one gchelper is actively marking objects it may create a workbuffer that the other helpers can work on.
As long as the Buffer has at least MinRead bytes beyond what is required to hold the contents of r, ReadFrom will not grow the underlying buffer.
As long as the fields have the same name and implement the interface, we can cross-connect them.
As long as the length is 0, we don't care about the content.
As of 2014-04-02, doing this to the godoc binary is actually a net loss: we save about 50k of argument bitmaps but the new PCDATA tables cost about 100k.
As of Go 1.1, a Stmt will not be closed if it's in use by any queries.
As of Go 1.2, Marshal instead coerces the string to valid UTF-8 by replacing invalid bytes with the Unicode replacement rune U+FFFD.
As of Go 1.6 the compiler handles that case automatically.
As of iOS 8, there is no API for querying the system trusted X.509 root certificates.
As of version 9, next_marker in jdmarker.c treats this as a warning (JWRN_EXTRANEOUS_DATA) and continues to decode the stream.
As opposed to runtime mutex we don't do passive spinning here, because there can be work on global runq on on other Ps.
As per RFC 7230 field-name is a token, tokens consist of one or more chars.
As per re2's Prog::IsWordChar.
As per the PNG spec, a PLTE chunk is optional (and for practical purposes, ignorable) for the ctTrueColor and ctTrueColorAlpha color types (section 4.1.2).
As returned by NewReader, a Reader expects input conforming to RFC 4180.
As returned by NewWriter, a Writer writes records terminated by a newline and uses ',' as the field delimiter.
As soon as it's complete, it's converted to an http.Request.
As soon as this happens, the garbage collector running on another processor could read p and look up s in h_spans.
As soon as we attach, the owner P may schedule the worker, so this must be done after the G is stopped.
As soon as we drop worldsema another cycle could start and smash the stats we're trying to print.
As soon as we unlock the channel, fields in any sudog with that channel may change, including c and waitlink.
As such it is only called by C code in runtime/cgo.
As such, the constant 0 is now used instead.
As such, the invariants documented for each method call must be respected.
As such, this library treats values as being encoded in decimal.
As such, this loop iterates through one or more "header files" until it finds a "normal file".
As such, we need to know exactly how many bytes to send.
As the comment above says, it is here only for symmetry with package bytes.
As the doc comment says, the returned pointer is an underlying code pointer but not necessarily enough to identify a single function uniquely.
As the result, all allocated memory must stay alive.
As the syslog package is frozen, Windows users are encouraged to use a package outside of the standard library.
As the top TokenReader hits EOF, it resumes reading the next one down.
As this method is called internally by writePax header to allow it to suppress writing the pax header.
As this time is unlikely to come up in practice, the IsZero method gives a simple way of detecting a time that has not been initialized explicitly.
As usual, there are three slightly different syntaxes:
As we know the tests haven't started, we are not hiding flaky tests with this retry.
As we move the working directory to the GOROOT pkg directory, we install the zoneinfo.zip file in the pkgpath.
As we step through indirections, run another type at half speed.
As with Header Frames, This is the low level call for writing individual frames.
As with Mutexes, a locked RWMutex is not associated with a particular goroutine.
As with all element types, if the struct is used in an array its size must first be aligned to a multiple of the struct's alignment.
Asin returns the arcsine, in radians, of x.
Asin returns the inverse sine of x.
Asinh returns the inverse hyperbolic sine of x.
Ask all Ps to run the safe point function.
Ask for a compressed version if the caller didn't set their own value for Accept-Encoding.
Ask for everything we can get.
Ask for preemption and self scan.
Ask for two PCs: the one we were asked for and what it called, so that we can see if it "called" sigpanic.
Ask the driver at the given path for information for this GccgoInstallation.
Ask to be notified on c1 when a SIGWINCH is received.
Ask to be notified on c2 when a SIGHUP is received.
Asm defines some two-character lexemes.
Asm must use AMRC for both instructions, so we return the opcode for MRC so that asm doesn't need to import obj/arm.
Asm, typically invoked as ``go tool asm'', assembles the source file into an object file named for the basename of the argument source file with a .o suffix.
AsmBuf is a simple buffer to assemble variable-length x86 instructions into.
Assemble as 0xbea71700 which is guaranteed to raise undefined instruction exception.
Assemble as 0xf7fabcfd which is guaranteed to raise undefined instruction exception.
Assemble decimal in reverse order.
Assembly file for a Go package.
Assembly used to not notice.
Assert that aesCipherAsm implements the cbcEncAble and cbcDecAble interfaces.
Assert that aesCipherAsm implements the ctrAble interface.
Assert that aesCipherGCM implements the gcmAble interface.
Assert that all wantOut entries were used exactly once.
Assert that expr somehow gets assigned to dst, if non nil.
Assert that the size of important structures do not change unexpectedly.
AssertableTo reports whether a value of type V can be asserted to have type T.
Assign IDs to preallocated values/blocks.
Assign PCs in text segment.
Assign defer allocations to pools by rounding to 16, to match malloc size classes.
Assign each comment to the import spec preceding it.
Assign it to the value fn represents.
Assign mangled names.
Assign same position as the previous import, so that the sorter sees it as being in the same block.
Assign the concrete value to the interface.
Assign to fn declared outside of loop triggers escape of closure.
AssignComputeBounds sets f to the floating point value defined by mant, exp and precision given by flt.
Assignable if addressable and not read-only.
Assignable reports whether the corresponding expression is assignable to (provided a value of the right type).
AssignableTo reports whether a value of the type is assignable to type u.
AssignableTo reports whether a value of type V is assignable to a variable of type T.
Assignment operators precede regexps as do all exclusively prefix and binary operators.
Assigns a reverse post order number to each connected basic block using the standard algorithm.
Assist is proportional to this distance, so enforce a minimum distance, even if it means going over the GOGC goal by a tiny bit.
Assist the GC to correct this before allocating.
Assists and workers can start the moment we start the world.
Associate label with its control flow node, if any
Associate method with receiver base type name, if possible.
Associate our new socket with IOCP.
Associate p and the current m.
Associated templates Each template is named by a string specified when it is created.
Associated with uint type if AllDecls is set.
Assume TestImplicitMapConversion covered the basics.
Assume added imports follow convention of using last element.
Assume all darwin/arm devices are have VFPv3.
Assume assembly will refer to single unnamed result as r.
Assume background mark hit its utilization goal.
Assume default duration: 30 seconds
Assume each TYPE instruction describes a different local variable or parameter, so no dedup.
Assume everything will work out, so set up our return value.
Assume first byte is '"'.
Assume if command exited cleanly (even with non-zero status) it printed any messages it wanted to print.
Assume it is a call to a splitting function, so we have to make sure it can call morestack.
Assume it is malformed and return nil on error.
Assume path ends at NUL.
Assume server is okay (TestServer is above).
Assume string s should be encoded.
Assume that if reader has its own ReadByte, it's efficient enough.
Assume that of all the types we saw during the tests, if there wasn't an explicit entry for a conversion between a pair of types, then it's not to be allowed.
Assume that stack variables with address not taken can be loaded multiple times from memory without being rechecked.
Assume that they might conflict.
Assume that uintptr arguments must be held live across the call.
Assume that we're in steady state, so the reachable heap size is the same now as it was at the beginning of the GC cycle.
Assume the executable is the first Mapping entry.
Assume the note content is in the data, already read.
Assume the other BSDs do too.
Assume the percentage itself is implemented fine during GC, which is harder to test.
Assume these will return same data: no GC during ReadGCStats.
Assume they're enough.
Assumed by the unixToInternal computation below.
Assumes all the entries for a single dt are in one worklist.
Assumes db.mu is locked.
Assumes non-moving garbage collector.
Assumes q is in this function.
Assumes that each node name is unique.
Assumes that in gcc, char is 1 byte, short 2 bytes, int 4 bytes, long long 8 bytes.
Assumes that the underlying io.Pipe implementation is solid and we're just testing the net wrapping.
Assuming ERROR_NOT_FOUND is returned, if IO is completed.
Assuming that SetFinalizer is not called again, the next time the garbage collector sees that obj is unreachable, it will free obj.
Assuming that tiny block size is 16, some objects get finalizers setup only for middle bytes.
Assumptions about Finalizer layout checked below.
Asymptotically, the ratio is favorable at 1/2 the divW()'s, and is made better by splitting the subblocks recursively.
Asynchronous semaphore for sync.Mutex.
At EOF, the count will be zero and err will be io.EOF.
At a minimum, that includes the source files for the package and also any compiled packages imported by those source files.
At each step fraction does not overflow.
At end of file, that error is io.EOF.
At entry, r12 holds the address of the symbol resolver stub for the target routine and the argument registers hold the arguments for the target routine.
At first it figures address family out from the net.
At implements the Image interface.
At least 2 blocks of zeros are read.
At least bigger than a single bucket:
At least one deref, thus only content.
At least one goroutine is in fn now and all of them have at least reached the line before the Do.
At least one timer pending.
At least that's the idea.
At least they'll be DeepEqual for h1-vs-h2 comparisons tests.
At least this should only be used in tests.
At least two channels are needed because otherwise the compiler optimizes select out.
At least two digits of precision are printed.
At least, that's the idea.
At most one Write call is made.
At most one can be set.
At most one goroutine can be running writeFrameAsync at a time per serverConn.
At most one of the booleans in ut is set.
At returns color.Opaque for points in the rectangle and color.Transparent otherwise.
At returns the bit at the given index.
At returns the color of the pixel at (x, y).
At returns the i'th variable of tuple t.
At returns the input stack in effect at lineno.
At some future point we might be able to avoid this round-about way and create the rewritten nodes directly, possibly avoiding a lot of duplicate work (name resolution, type checking).
At some point later, the newly saved value will be moved back to its final destination in processDest.
At some point this may get another default and become switch-offable with -N.
At that point, future loads of that package must not pass useVendor, because disallowVendor will reject direct use of paths containing /vendor/.
At that point, the program is terminated and the error condition is reported, including the value of the argument to panic.
At the beginning of a line we print the current offset in hex.
At the beginning of the program (if cgo is in use) the list is seeded with a single m.
At the end of STW mark termination all spans are marked as "needs sweeping".
At the end of a directory, the error is io.EOF.
At the end of the cycle, this is how much of the retained heap is scannable.
At the end of the input stream, Token returns nil, io.EOF.
At the end of the line there's an extra space and the bar for the right column.
At the end of the walk the panic stack can thus contain defers (d3 in this case) for dead frames.
At the goto above, src refers to cap and rlen holds the new len
At the moment EXRL instructions are not emitted by the compiler and only reference local symbols in assembly code.
At the moment there is no easy way to know about future (not yet interspersed) comments in this function.
At the moment, it handles only pointers to basic types.
At the next build, we can recompute the build ID and compare it to the one in the generated object.
At the receive side, a Decoder retrieves values from the encoded stream and unpacks them into local variables.
At the same time, Wait can be used to block until all goroutines have finished.
At the same time, can raise StackBig in ../../runtime/stack.h.
At the start of a primary expression, array, or expression statement, expect a regexp.
At the time of the call it may differ from ut.indir, which was computed when the engine was built.
At this point all Ps have enabled the write barrier, thus maintaining the no white to black invariant.
At this point all goroutines have passed through a GC safepoint and know we are in the GCscan phase.
At this point all signals are blocked, so there is no race.
At this point cgo knows the meaning of each C.xxx well enough to start the translation process.
At this point either background GC has satisfied this G's assist debt, or the GC cycle is over.
At this point p is dead: the code here cannot get to the bottom of the function.
At this point s is a non-empty span, queued at the end of the empty list, c is unlocked.
At this point s.allocCache contains all 0s.
At this point the mark bits are cleared and allocation ready to go so release the span.
At this point the position information of identifiers in f2 should match the position information of corresponding identifiers in f1.
At this point we can just return and the signal will be re-raised and caught by the default handler with the correct context.
At this point we created a large stack and unwound it via recovery.
At this point we give the new connection to DB.
At this point we have a consistent stream of events.
At this point we have at least one field.
At this point we have extracted the next potential pointer.
At this point we know we don't error on the values we're testing
At this point, r is the first value in a that we find by walking backwards.
At this point, the decoder buffer contains a delimited value.
At this point, the pipeline is complete
At this point, we prefer IPv4 when ip is nil.
At time of writing, re2-exhaustive.txt is 59 MB but compresses to 385 kB, so we store re2-exhaustive.txt.bz2 in the repository and decompress it on the fly.
At top level, can just ignore the call and make sure to preserve side effects in the argument, if any.
At(Bounds().Max.X-1, Bounds().Max.Y-1) returns the lower-right one.
At(Bounds().Min.X, Bounds().Min.Y) returns the upper-left pixel of the grid.
Atan returns the arctangent, in radians, of x.
Atan returns the inverse tangent of x.
Atan2 returns the arc tangent of y/x, using the signs of the two to determine the quadrant of the return value.
Atanh returns the inverse hyperbolic tangent of x.
Atof doesn't handle power-of-2 exponents, but they're easy to evaluate.
Atoi is shorthand for ParseInt(s, 10, 0).
Atomic add and return new value.
Atomic mistakes Flag: -atomic Common mistaken usages of the sync/atomic package.
Atomically decreases a given *system* memory stat.
Atomically increases a given *system* memory stat.
Attached to left delimiter, trims trailing spaces from preceding text.
Attached to right delimiter, trims leading spaces from following text.
Attempt to parse the given private key DER block.
Attempt to start first store.
Attempting to change properties of the original using this duplicate may or may not have the desired effect.
Attempting to encode such a value at the top level will fail.
Attempting to encode such a value causes Marshal to return an UnsupportedTypeError.
Attempting to exec a shared library
Attempting to link in too many libs
AttrCompDir is optional if all file names are absolute.
AttrField returns the Field associated with attribute Attr in Entry, or nil if there is no such attribute.
Attribute comment tests should pass if the comments are successfully elided.
Attribute is a set of common symbol attributes.
Attributes already contained a value for this extension and it takes priority.
Attributes is the dried husk of a bug and shouldn't be used.
Auth authenticates a client using the provided authentication mechanism.
Auth is implemented by an SMTP authentication mechanism.
Auto-configure the http2.Transport's MaxHeaderListSize from the http.Transport's MaxResponseHeaderBytes.
AutoSymbol is an aux value that encodes a local variable's constant offset from SP.
AutoVar returns a *Node and int64 representing the auto variable and offset within it where v should be spilled.
Automatically add http:// to URLs of the form hostname:port/path.
Automatically inserted safety checks
Autos after anything else, within autos, unused after used, within used, things with pointers first, zeroed things first, and then decreasing size.
Aux identifies the variable.
AuxInt is used for integer values, Aux is used for other values.
AuxInt must be zero, so leave canHaveAuxInt set to false.
Auxiliary info for the block.
Auxiliary info for this value.
Auxiliary information if the File describes a directory
Auxiliary information.
Available checks: Assembly declarations Flag: -asmdecl Mismatches between assembly files and Go function declarations.
Available reports whether the given hash function is linked into the binary.
Available returns how many bytes are unused in the buffer.
Average the mallocs over the runs (not counting the warm-up).
Avestan is the set of Unicode characters in script Avestan.
Avoid .foo, _foo, and testdata directory trees, but do not avoid "." or "..".
Avoid .foo, _foo, and testdata directory trees.
Avoid allocation if we can.
Avoid allocation of buffer if prefix is empty.
Avoid both problems by writing a file with a .c extension.
Avoid calling morestack via a PLT when dynamically linking.
Avoid creating a reflect.Value if it's not a pointer.
Avoid err "z declared and not used"
Avoid errors that would make the program not compile.
Avoid for-loop so that this function can be inlined
Avoid function call if we hit the local time cache.
Avoid function calls when possible.
Avoid future fixed uses if we can.
Avoid getting out of sync.
Avoid hard cases in the construction of the test inputs.
Avoid having the working directory inserted into the symbol table.
Avoid infinite recursion on overflow.
Avoid lots of small slice allocations later by allocating one large one ahead of time which we'll cut up into smaller slices.
Avoid making variables for direct-called functions.
Avoid needless hbits.next() on last iteration.
Avoid partial register write
Avoid registers we're saving for other values.
Avoid setting the sweep ratio extremely high
Avoid taking the address for simple enough types.
Avoid the copy if the first call produced a full line.
Avoid tracking open-close jitterbugs between netFD and socket that leads to confusion of information inside socktest.Switch.
Avoid unintentionally clobbering RSB using R28.
Avoid unintentionally clobbering g using R10.
Avoid unintentionally clobbering g using R13.
Avoid unintentionally clobbering g using R28.
Avoid unintentionally clobbering g using R30.
Avoid violation of structure preservation.
Avoid zero denominator.
Avoiding recursion on the larger subproblem guarantees a stack depth of at most lg(b-a).
Avoids an allocation and a copy.
Avoids filling out half a data structure before discovering a JSON syntax error.
Avoids partial register write
B is a type passed to Benchmark functions to manage benchmark timing and to specify the number of iterations to run.
B) decrement use counts of v's args.
BAD -- level of leak ought to be 0
BAD: i should not escape
BAD: need fine-grained (field-sensitive) analysis to avoid spurious escape of ps
BAD: need fine-grained analysis to avoid spurious escape of ps
BAD: p should not escape here
BAD: we are not leaking param x, only x.p2
BAD: x need not leak.
BAD: x should not escape here
BAD: x should not escape to heap here
BAD: x should not leak
BAD: x should not leak here
BADPAT is acceptable in place of any regcomp(3) error code.
BEncoding represents Base64 encoding scheme as defined by RFC 2045.
BIT STRING BitString is the structure to use when you want an ASN.1 BIT STRING type.
BImportData imports a package from the serialized package data and returns the number of bytes consumed and a reference to the package.
BLS call-to-morestack
BOMs are invisible and should not be quoted.
BP is part of the calling convention if framepointer_enabled.
BRC (branch relative on condition) instruction.
BRCL (branch relative on condition long) instruction.
BSD interface for threading.
BUCKETSIZE is 8, so the struct is aligned to 64 bits to this point.
BUG need an interface map both ways too
BUG segmentation fault
BUG(agl): RC4 is in common use but has design weaknesses that make it a poor choice for new protocols.
BUG(agl): The crypto/tls package does not implement countermeasures against Lucky13 attacks on CBC-mode encryption.
BUG(akumar): This package is not implemented on Plan 9.
BUG(brainman): Lookup and LookupId functions do not set Gid and HomeDir fields in the User struct returned on windows.
BUG(brainman): The definition of Linger is not appropriate for direct use with Setsockopt and Getsockopt.
BUG(brainman): This package is not implemented on Windows.
BUG(brainman,rsc): On Windows, the operating system does not provide complete time zone information.
BUG(gri) When rounding ToNegativeInf, the sign of Float values rounded to 0 is incorrect.
BUG(issue13847): For does not support non-nil lookup functions.
BUG(minux): This package is not implemented on NaCl (Native Client).
BUG(r): There is no mechanism for full case folding, that is, for characters that involve multiple runes in the input or output.
BUG(rsc): FieldByName and related functions consider struct field names to be equal if the names are equal, even if they are unexported names originating in different packages.
BUG(rsc): On OS X 10.6, child processes may sometimes inherit unwanted fds.
BUG(rsc): On x86-32, the 64-bit functions use instructions unavailable before the Pentium MMX.
BUG(rsc): Profiles are only as good as the kernel support used to generate them.
BUG(rsc): Sometimes bugs have multiple paragraphs.
BUG(rsc): The implementation of -r is a bit slow.
BUG(rsc): The rule Title uses for word boundaries does not handle Unicode punctuation properly.
BUG(rsc,mikio): On DragonFly BSD and OpenBSD, listening on the "tcp" and "udp" networks does not listen for both IPv4 and IPv6 connections.
BUG(uid): bug0 TODO(uid): todo0 A note with some spaces after it, should be ignored (watch out for emacs modes that remove trailing whitespace).
BUG(uid): bug1 TODO(uid): todo1 TODO(): ignored
BUG: cannot take len() of a string field
BUG: should refer back to values until out-of-range
BUG: this will not work on arm.
BUG: we _may_ want to instrument PAUTO sometimes e.g. if we've got a local variable/method receiver that has got a pointer inside.
Back out the number of bytes of assist credit that this scan work counts for.
Back returns the last element of list l or nil.
Back to Los Angeles for subsequent tests:
Back to the outer multipart/mixed, reading the image attachment.
Back up so d.value can have the byte we just read.
Back up the cursor to "next" and return success.
Back-quoted: Anything goes until EOF or back quote.
Background Color Index.
Background marking is performed by per-P G's.
Background marking will stop when the work queues are empty and there are no more workers (note that, since this is concurrent, this may be a transient state, but mark termination will clean it up).
Background read already started.
Background returns a non-nil, empty Context.
BackgroundIndex is the background index in the global color table, for use with the DisposalBackground disposal method.
Backslash and quote chars are reserved, but otherwise any punctuation chars are allowed in a tag name.
Backslashes escape newlines.
Backward copies come as the tuple (dist, length) where dist determines how far back in the stream to copy from and length determines how many bytes to copy.
Backward distance (0 if this is an insertion)
Backwards compatibility: skip optional first argument index after the colon.
Bad UTF-8: should see every byte.
Bad argument reorderings.
Bad reports an error and sets the exit code..
Bad stuff found, but goroutines might just still be shutting down, so give it some time.
Bad things the front end has done to us.
Badf reports a formatted error and sets the exit code.
Bail out before reading a full 'body', if possible.
Balinese is the set of Unicode characters in script Balinese.
Bamum is the set of Unicode characters in script Bamum.
Banner prints the 'now you've installed Go' banner.
Base must be between 2 and 36, inclusive.
Base returns the base address to use when looking up symbols in the file.
Base returns the base offset of file f as registered with AddFile.
Base returns the last element of path.
Base returns the minimum base offset that must be provided to AddFile when adding the next file.
BaseConfig optionally sets the base configuration for values.
BaseName returns the symbol name without the package or receiver name.
Based loosely on x/tools/go/importer.
Based on algorithms and data structures used in http://code.google.com/p/google-perftools/.
Based on cmd/go's matchPackages function.
Based on the CSS3 nmchar production but ignores multi-rune escape sequences.
Based on the OpenSSL implementation.
Basic algorithm: Expressions are checked recursively, top down.
Basic test cases for cgo.
Basic type encodings -- the value for AttrEncoding in a TagBaseType Entry.
Basic types A BasicType holds fields common to all basic types.
Basic types and interfaces do not need to be described.
BasicAuth returns the username and password provided in the request's Authorization header, if the request uses HTTP Basic Authentication.
BasicBlock indicates that Address is the beginning of a basic block.
BasicInfo is a set of flags describing properties of a basic type.
BasicKind describes the kind of basic type.
Basically no one should use strings.Compare.
Basics A stream of gobs is self-describing.
Bassa_Vah is the set of Unicode characters in script Bassa_Vah.
Batak is the set of Unicode characters in script Batak.
Batch is a ring buffer starting at batchHead.
Be absolutely sure the received map is non-nil.
Be careful about removing/overwriting dst.
Be careful to avoid wraparound.
Be cautious and check for presence of entry.
Be conservative about where we preempt.
Be conservative and use the *ast.File extent if we don't have a *token.File.
Be conservative for now (for Go 1.6) at least and don't automatically enable http2 if they've specified a custom TLS config.
Be louder and abort instead.
Be sure to run at least one more than last time.
Because ':' is an invalid token byte anyway, there is no ambiguity.
Because Copy is defined to read from src until EOF, it does not treat an EOF from Read as an error to be reported.
Because Goexit is not panic, however, any recover calls in those deferred functions will return nil.
Because ReadAll is defined to read from src until EOF, it does not treat an EOF from Read as an error to be reported.
Because ReadAll is defined to read until EOF, it does not treat end of file as an error to be reported.
Because ReadFile reads the whole file, it does not treat an EOF from Read as an error to be reported.
Because ReadRune is implemented by the interface, Read should never be called by the scanning routines and a valid implementation of ScanState may choose always to return an error from Read.
Because Unmarshal uses the reflect package, it can only assign to exported (upper case) fields.
Because Unmarshal uses the reflect package, the structs being written to must use upper case field names.
Because a channel cannot be reopened, the later observation of the channel being not closed implies that it was also not closed at the moment of the first observation.
Because a complit type may be a qualified identifier which is handled by pexpr (together with selector expressions), complits are parsed there as well (operand is only called from pexpr).
Because c.L is not locked when Wait first resumes, the caller typically cannot assume that the condition is true when Wait returns.
Because compilation units can describe multiple regions of the executable, in the worst case SeekPC must search through all the ranges in all the compilation units.
Because concurrent GC may read a pointer and then look up its span, the span state must be monotonic.
Because immediate instruction arguments can follow the PC-relative memory reference in the instruction encoding, the two may not coincide.
Because interpreting an interface requires dereferencing the itab word, the misinterpretation will try to deference Inner.P1, causing a crash during garbage collection.
Because it has a special type, we need to use the Var function and therefore create the flag during init.
Because it's always at the end of the move-to-front list, and never gets moved to the front, it has this unique value.
Because it's neither chunked, nor declared:
Because it's racy, we skip this test in short mode, and then retry it several times with an increasing sleep in between our final write (via srv.Close below) and the following read.
Because it's usually not owned, we can only process it under Write.
Because many other build systems have the same sensitivity to mtimes, most programs manipulating source code take pains not to break the mtime assumptions.
Because movement is only within a stack slot's lifetime, it is safe to do this.
Because msanenabled is false, none of these functions should be called.
Because net must be used by any package that wants to do networking portably, it must have a small dependency set: just L0+basic os.
Because no call to Do returns until the one call to f returns, if f causes Do to be called, it will deadlock.
Because now we know what kind of I/O we are interested in (reading/writing), we can call port_associate passing the correct type of event set (POLLIN/POLLOUT).
Because null is often used in JSON to mean ``not present,'' unmarshaling a JSON null into any other Go type has no effect on the value and produces no error.
Because of (re-)exported inlined functions the importpkg may not be the package to which this function (and thus its parameter) belongs.
Because of benign races during marking, this number may not be the exact number of marked bytes, but it should be very close.
Because of deficiencies in the encrypted-PEM format, it's not always possible to detect an incorrect password.
Because of golang.org/issue/10958, the tight loops in the test program are not preemptible.
Because of masking operations in the encodings, each register space should start at 0 modulo some power of 2.
Because of one-token look-ahead, print the previous token when tracing as it provides a more readable output.
Because of that load, we get here, so we need to know what to do with C_MOVCON.
Because of the Scan interface, this makes it impossible for the client to distinguish correctly encoded replacement runes from encoding errors.
Because of the bit-ordering, doubling is actually a right shift.
Because of this, glibc's dynamic ELF loader occasionally (like in version 2.13) assumes that a dynamic binary always refers to at least one dynamic library.
Because of this, it cannot appear at the top of a split stack.
Because of this, there are restrictions on passing pointers between Go and C.
Because of this, we need to load the constant from memory.
Because os.FileInfo's Name method returns only the base name of the file it describes, it may be necessary to modify the Name field of the returned header to provide the full path name of the file.
Because raceenabled is false, none of these functions should be called.
Because that takes a few seconds, do it here and have all tests use the version built here.
Because the checks are dynamic, such methods would not cause a compile error if they have the wrong signature: instead the dynamic check would fail, sometimes mysteriously.
Because the copy has already happened, we call writebarrierptr_nostore, and this is nosplit so the copy and write barrier appear atomic to GC.
Because the data returned from ReadSlice will be overwritten by the next I/O operation, most clients should use ReadBytes or ReadString instead.
Because the http1 Transport doesn't de-dup TCP dials to outbound hosts (because it doesn't know the protocol), it can get into a situation where it has multiple TLS connections.
Because the instruction might be rewritten to a BL which returns in R0 the register must be zero.
Because the instruction tables distinguished these two, any operand size prefix has been marked as used (to decide which branch to take).
Because the internals of maps are not visible to us, we must use reflection rather than pointer magic.
Because the parser doesn't know the composite literal type, it cannot know if a key that's an identifier is a struct field name or a name denoting a value.
Because the pointers haven't been filled in yet, we can reuse their storage to hold the list.
Because the pos often points to the start of an expression instead of the inner part with the actual error, the precision can mislead.
Because the position information may only be partially correct, we also have to read the comment text.
Because the return comes back one instruction early, the PCDATA must begin one instruction early too.
Because the sql package maintains a free pool of connections and only calls Close when there's a surplus of idle connections, it shouldn't be necessary for drivers to do their own connection caching.
Because the testdata is so small, it would fit in both the h1 and h2 Server's write buffers.
Because the translations are unexported, a Go package should not expose C types in its exported API: a C type used in one Go package is different from the same C type used in another.
Because the world is stopped, all Ps will observe that write barriers are enabled by the time we start the world and begin scanning.
Because these have to go in the Mach-O header, we can't just pick a "big enough" header size.
Because these interfaces and primitives wrap lower-level operations with various implementations, unless otherwise informed clients should not assume they are safe for parallel execution.
Because they are from a trap instead of from a saved pair, the initial PC must not be rewound to the previous instruction.
Because this build ID is computed before the build begins, the comparison does not have the race that mtime comparison does.
Because this directive can subvert the type system and package modularity, it is only enabled in files that have imported "unsafe".
Because this flag consumes the remainder of the command line, the package list (if present) must appear before this flag.
Because this is for purposes of escape accounting, not execution, some semantically dubious node combinations are (currently) possible.
Because unused fields are filled with NULs, we need to skip leading NULs.
Because we didn't understand that the real problem was the bug -a was working around, we changed -a not to apply to the standard library.
Because we have assembly for amd64, 386, and arm, this prevents bitrot of the reference implementations.
Because we keep no values in registers across a call, make every use past a call appear very far away.
Because we let text/scanner strip the blanks for us, this is extremely rare, hard to fix, and not worth it.
Because we send on c.signal during a top-of-stack deferred function now, we know that the send only happens after any other stacked defers have completed.
Before Go 1.2, an InvalidUTF8Error was returned by Marshal when attempting to encode a string value with invalid UTF-8 sequences.
Before Go 1.4, a file called "linux.go" would be equivalent to having a build tag "linux" in that file.
Before TLS 1.2 the signature algorithm was implicit from the key type, and only one hash per signature algorithm was possible.
Before any call to WriteHeader or Write, declare the trailers you will set during the HTTP response.
Before exporting or importing, the type tables are populated with the predeclared types (int, string, error, unsafe.Pointer, etc.).
Before looping back to the top of this function and peeking on the bufio.Reader, wait for the caller goroutine to finish reading the response body.
Before reports whether the time instant t is before u.
Before the beginning of the function
Before the fix, this next line would race with cmd.Wait.
Before we encode a message, we reserve space at the head of the buffer in which to encode its length.
Before we pick a register for the output value, allow input registers to be deallocated.
Before we shut down our two httptest.Servers, start a timer.
Begin starts a transaction.
Begin starts and returns a new transaction.
Behavior without subtests.
Being able to produce identical output for identical input is much more beneficial than having build timestamp in the header.
Being live all the way to the start of the entry block prevents other values from being allocated to the same slot and clobbering the input value before we have a chance to load it.
Believe it or not, this is the best we can do on Linux (and is what glibc does).
Below here are the types considered public by ispubtype
Benchmark benchmarks a single function.
BenchmarkAppendInPlace tests the performance of append when the result is being written back to the same slice.
BenchmarkByteByteMap compares byteByteImpl against Map.
BenchmarkByteByteReplaces compares byteByteImpl against multiple Replaces.
BenchmarkHTTPClientServer benchmarks both the HTTP client and the HTTP server, on small requests.
Benchmarks are run sequentially.
Benchmarks omitted since the underlying implementation is identical.
Bengali is the set of Unicode characters in script Bengali.
Berkeley packet filter
Besides doing this, it must also re-associate the events that were not part of this current notification with the file descriptor.
Besides, one is almost always all you need.
Bessel function of the first and second kinds of order n.
Bessel function of the first and second kinds of order one.
Bessel function of the first and second kinds of order zero.
Best effort to find what we need.
Best fit in list of large spans.
Best is to split blocks until one more split would take longer (because of the nat/nat div()) than the twice as many divW()'s of the iterative approach.
Best to send nothing at all if config.NextProtos is empty.
Best-effort remove stack barriers so they don't get in the way of things like GDB and perf.
Between 0 and pi/4 the cosine is approximated by 1  -  x**2 Q(x**2).
Between 0 and pi/4 the sine is approximated by x  +  x**3 P(x**2).
Between background workers and assists, we don't really know how many workers there will be, so we pretend to have an arbitrarily large number of workers, almost all of which are "waiting".
Between pi/4 and pi/2 the cosine is represented as 1  -  x**2 Q(x**2).
Between pi/4 and pi/2 the sine is represented as x  +  x**3 P(x**2).
Beyond indicating the general state of a G, the G status acts like a lock on the goroutine's stack (and hence its ability to execute user code).
Beyond that, must be one of these: indexing into array or pointer to array negative constant large constant
Bgen generates code for branches:
Bidi_Control is the set of Unicode characters with property Bidi_Control.
Big chunked, so read a bit before giving up.
Big stuff escapes unconditionally "Big" conditions that were scattered around in walk have been gathered here
Big with Connection: close, but chunked, so search for trailers.
Big with Connection: close, so don't do any reads on Close.
Big with Content-Length, so give up immediately if we know it's too big.
BigEndian is the big-endian implementation of ByteOrder.
BigKey and BigVal must be larger than 256 bytes, so that compiler sets KindGCProg for them.
Bigger than we need, not too big to worry about overflow
Binary api computes the exported API of a set of Go packages.
Binary mode treats the writer's input as pure binary and processes end of line bytes as binary data.
Binary names can conflict.
Binary package export.
Binary package import.
Binary search to find a matching byte slice.
Binary shift left (* 2) by k bits.
Binary shift right (/ 2) by k bits.
Binary to decimal floating point conversion.
BinaryMarshaler is the interface implemented by an object that can marshal itself into a binary form.
BinaryOp returns the result of the binary expression x op y.
BinaryUnmarshaler is the interface implemented by an object that can unmarshal a binary representation of itself.
BindToDevice binds the socket associated with fd to device.
Bingo, we have a function node, and it has an inlineable body
Binomial sets z to the binomial coefficient of (n, k) and returns z.
Bit masks for each code point under U+0100, for fast lookup.
Bit returns the value of the i'th bit of x.
Bit vector of free marks.
BitIndex returns the number of bits written to the bit stream so far.
BitLen returns the length of the absolute value of x in bits.
Bitmask indicating exit blocks from loop in which spill/val is defined.
Bitno reports the lowest index of a 1 bit in b.
Bits or'ed together to control what's printed.
Bits provides raw (unchecked but fast) access to x by returning its absolute value as a little-endian Word slice.
Bits represents a set of Vars, stored as a bit set of var numbers (the index in vars, or equivalently v.id).
Bits starting at nelem are undefined and should never be referenced.
Bits used in the table.
Bits waiting to be written to memory.
Black is an opaque black uniform image.
Blank fields, padded fields, fields with non-memory equality need special compare.
Blank line after comment to separate from next item.
Blank lines are ignored.
Blanks not in doc output: S has a padding field.
Blanks until first byte
Bloc defines a block for Fun.
Block is broken up now.
Block of constants -u.
Block of variables -u.
Block on the channel.
Block represents a basic block in the control flow graph of a function.
Block represents the information about a basic block to be recorded in the analysis.
Block signals before unminit.
Block until a signal is received.
BlockFragment is part (or all) of a Header Block.
BlockProfile returns n, the number of records in the current blocking profile.
BlockProfileRecord describes blocking events originated at a particular call sequence (stack trace).
BlockSize returns the cipher's block size.
BlockSize returns the hash's underlying block size.
BlockSize returns the mode's block size.
Blocked workers and assists will run when we start the world again.
Blocking or non-blocking again, after the receive.
Blocking or non-blocking, before the receive (same reason as in recv).
Blocking or non-blocking, before the receive.
Blocking or non-blocking.
Blocks are padded using a scheme where the last n bytes of padding are all equal to n.
Blows up a naive compiler.
Body is actually empty.
Body is closed after it is sent.
Body is the request's body.
Body represents the response body.
Body was already consumed and closed.
Body was closed in handler with non-EOF error.
Body-EOF logic based on other methods (like closing, or chunked coding)
Bool defines a bool flag with specified name, default value, and usage string.
Bool is a ValueConverter that converts input values to bools.
Bool returns n as an bool.
Bool returns v's underlying value.
Bool, Int, Float64, and String define new flags, like the functions of the same name in package flag.
BoolNode holds a boolean constant.
BoolTmpVarCode returns source code for bool temp variable.
BoolVal returns the Go boolean value of x, which must be a Bool or an Unknown.
BoolVar defines a bool flag with specified name, default value, and usage string.
Boolean conditions Flag: -bool Mistakes involving boolean operators.
Boolean flags may be: 1, 0, t, f, T, F, true, false, TRUE, FALSE, True, False Duration flags accept any input valid for time.ParseDuration.
Boolean flags of one ASCII letter are so common we treat them specially, putting their usage on the same line.
Boolean values encode as JSON booleans.
Bopomofo is the set of Unicode characters in script Bopomofo.
Both 1 and 2 are possible at the same time.
Both Content-Type and Content-Length set.
Both F0 and G0 should appear as functions.
Both F1 and G1 should appear as functions.
Both IE and Chrome allow certificates with Server Gated Crypto as well.
Both URL and unpadding conversions
Both are impossible results for correct, non-empty UTF-8.
Both are keyed by field name.
Both are type SELFGOT, so in that case we skip size comparison and fall through to the name comparison (conveniently, .got sorts before .toc).
Both cases are invalid because a zero length tree cannot encode anything and a length-1 tree can only encode EOF and so is superfluous.
Both failed: figure out which error to return.
Both gccgo and gofmt correctly refuse this program as is and accept it when the semicolons are present.
Both guarded by Transport.idleMu:
Both have non-nil Map Special case for Maps which include a recursive type where the recursion is not broken with a named type
Both inputs and the result are assumed to be in big-endian representation (to match the semantics of Int.Bytes and Int.SetBytes).
Both instructions are coded as MRC.
Both interface and slice are nil if first word is 0.
Both keep-alive and close, on different Connection lines.
Both keep-alive and close, on the same Connection line.
Both kinds of deltas are sent as variable-length little-endian base-128 integers, where the 0x80 bit indicates that the integer continues.
Both lists are indexed by the same PCDATA index, so the corresponding pairs must be considered together when merging duplicates.
Both literal and element do not escape.
Both literal and element escape.
Both lzwr and br should be exhausted.
Both may be missing or the method may be missing.
Both p and size must be pointer-aligned.
Both should fail without nohup and succeed with nohup.
Both slices must be at least 'max' bytes in size.
Both sums are done modulo 65521.
Both the GNU linker and gold always generate 32-bit sizes, so that is what we assume here.
Both the name and value are treated as opaque sequences of octets.
Both the receiver and transmitter will do all necessary indirection and dereferencing to convert between gobs and actual Go values.
Both values have the same sign as f.
Both x and y must have the same length n and n must be a power of 2.
Bottom 7 bits give the number of length bytes to follow.
Boundaries returns a Profile as a set of Boundary objects within the provided src.
Boundary represents the position in a source file of the beginning or end of a block as reported by the coverage profile.
Boundary returns the Writer's boundary.
Bounds implements the Image interface.
Bounds returns the domain for which At can return non-zero color.
Boute, ``The Euclidean definition of the functions div and mod''.
Brahmi is the set of Unicode characters in script Brahmi.
Braille is the set of Unicode characters in script Braille.
Branch around the base adjustment if the resulting cap will be 0.
Branch is an unresolved branch.
Branch predict prefixes are overloaded segment prefixes, since segment prefixes don't make sense on conditional jumps.
BranchNode is the common representation of if, range, and with.
Branches remembers all the branch instructions we've seen and where they would like to go.
Brcom is not valid on floats when NaN is involved.
Break and recurse since it's not ok for one field path to be itself the prefix for another field path.
Break nl and nr into real and imaginary components.
Break on slashes and look for the first numeric field
Break the cycle by doing acquirem/releasem around new(sudog).
BreakTimestampsForTesting causes the parser to randomly alter timestamps (for testing of broken cputicks).
BreakWithError causes the next Read (waking up a current blocked Read if needed) to return the provided err immediately, without waiting for unread data.
Breakpoint executes a breakpoint trap.
Breaks .X.Y into two pieces.
Brian Connell, ``A Huffman-Shannon-Fano Code,'' Proceedings of the IEEE, 61(7) (July 1973), pp 1046-1047.
Bridge package to expose http internals to tests in the http_test package.
Brittle: the assertion may fail spuriously when the algorithm changes, but should remain stable otherwise.
Broadcast wakes all goroutines waiting on c.
Browsers also just send UTF-8 directly without RFC 2231, at least when the source page is served with UTF-8.
Browsers do handle such stuff (actually differently) but RFC 6265 seems to be clear here (e.g. section 4.1.2.3) in requiring a reject.
Brrev returns reverse(op).
Buckets are incrementally copied from the old bucket array to the new bucket array.
Buf is a fixed-size buffer for the result, it is not nil if the result does not escape.
Buf is where the traceback information should be stored.
Buffer is empty, reset to recover space.
Buffer panics if it is called after scanning has started.
Buffer sets the initial buffer to use when scanning and the maximum size of buffer that may be allocated during scanning.
Buffer the output here.
Buffer used as argument to split.
BufferPool optionally specifies a buffer pool to get byte slices for use by io.CopyBuffer when copying HTTP response bodies.
Buffered reading and decoding of DWARF data streams.
Buffered returns a reader of the data remaining in the Decoder's buffer.
Buffered returns the number of bytes that can be read from the current buffer.
Buffered returns the number of bytes that have been written into the current buffer.
Bufio will keep err until next read.
Bug in method values: escape analysis was off.
BugD's tagged S field should dominate BugA's.
Buginese is the set of Unicode characters in script Buginese.
Buhid is the set of Unicode characters in script Buhid.
Build ID is a hash of the information we want to detect changes in.
Build ID mismatch - ignore.
Build ID-based staleness checks still apply to the standard library, even in release versions.
Build IDs have made that workaround unnecessary: "go build -tags netgo myprog.go" cannot use a non-netgo copy of package net.
Build IDs have made that workaround unnecessary: "go install ./..." will rebuild any objects it finds that were built against a different toolchain.
Build Package structs describing: ptest - package + test files pxtest - package of external test files pmain - pkg.test binary
Build a GOPATH package (depBase) into a shared library that links against the goroot runtime, another package (dep2) that links against the first, and and an executable that links against dep2.
Build a GOPATH package into a shared library that links against the goroot runtime and an executable that links against both.
Build a GOPATH package into a shared library with gccgo and an executable that links against it.
Build a buffer of lots of line lengths up to but not exceeding smallMaxTokenSize.
Build a hash and minimally populate ft.
Build a sorted version of the data.
Build a trivial program that links against the shared runtime and check it runs.
Build an SSA backend function.
Build an executable that uses cgo linked against the shared runtime and check it runs.
Build bad character table.
Build chains from standard input.
Build count of each stack.
Build fake transition to cover all time.
Build good suffix table.
Build heap with greatest element at top.
Build interference graph among values needing a slot.
Build it up from Trailer.
Build list of all actions, assigning depth-first post-order priority.
Build list of all mergeable variables.
Build list of argument strings.
Build list of case-folding groups attached to each canonical folded char (typically lower case).
Build list of full paths to all Go files in the package, for use by commands like go fmt.
Build list of imported packages and full dependency list.
Build list of search choices.
Build list of symbols, and assign instructions to lists.
Build map from values to their names, if any.
Build map of named subexpression matches for expand.
Build name of function: assertI2E etc.
Build name of function: convI2E etc.
Build new argument list without -xc and trailing -.
Build pointer mask for Finalizer array in block.
Build reads text from the provided Reader and parses it into prefixes and suffixes that are stored in Chain.
Build runtime for actual goos/goarch too.
Build sorted list of addresses of all symbols.
Build tags Flag: -buildtags Badly formed or misplaced +build tags.
Build tags on multiple lines are AND-ed together.
Build tags separated by a comma are AND-ed together.
Build tags separated by a space are OR-ed together.
Build the error message in reverse.
Build the source code.
Build the wrapper function compiled by cmd/compile.
Build the wrapper function compiled by gcc.
Build toolchain using Go 1.4.
BuildID returns the GNU build ID of the file, or an empty string.
BuildNameToCertificate parses c.Certificates and builds c.NameToCertificate from the CommonName and SubjectAlternateName fields of each of the leaf certificates.
Builder reports the name of the builder running this test (for example, "linux-amd64" or "windows-386-gce").
Building an executable that imports both explicit and implicit builds the code from implicit into the executable rather than fetching it from the shared library.
Building blocks for types constructed by reflect.
Building method for interface table and receiver is smaller than the single pointer-sized word that the interface call will pass in.
Builds a type representing a Bucket structure for the given map type.
Builds a type representing a Hmap structure for the given map type.
Built a test slice while we write the data
Built-in library paths used by this installation.
Builtins are not considered values.
Builtins are visible everywhere.
Builtins defined in the C prolog.
Builtins don't have a valid type.
Bump against the 2-second sane minimum.
Bunch of small chunks, all read together.
But -no-pie is not supported by all compilers.
But ARM5 floating point emulation is slow (Issue 10749), so do less for that builder:
But I'm not sure anybody uses it in practice.
But Perm also effects r.
But at least the current goroutine is running.
But avoid printing nothing.
But because bufio.Writer may bypass its chunking, sometimes p may be arbitrarily large.
But changing runtime/internal/sys/zversion.go should have an effect: that's how we tell when we flip from one release to another.
But check that if we change it to be matching against an IP address, it is rejected.
But do at least 500 iterations (which should take about 100ms), otherwise TestCPUProfileMultithreaded can fail if only one thread is scheduled during the testing period.
But do the full amount only on builders (not locally).
But even for Add and Double, it's faster to apply and reverse the transform than to operate in affine coordinates.
But for named types (or pointers to them), qualify with import path (but see inner comment).
But for the more general problem of syntactically identifying dead code, continue redirects control flow just like the other terminating statements.
But have no fear, identically-named but distinct Autos are ok, albeit maybe confusing for a debugger.
But hopefully we can just use the mtimes always.
But if 66 has special meaning, perhaps F2/F3 have special meaning that we don't know.
But if callback is set, we're doing a garbage collection and must get everything, so crash loudly.
But if it does have a fmt.ScanState, then the rest has to match.
But if the import path is "command-line-arguments", like it is during 'go run', use the package name.
But if the package is up-to-date, the read is overhead.
But if there have been changes, then we assume a new build might not produce the same result, so we rebuild.
But if we do get errors, fetch() will retry 5 times with some delays between.
But if we do that, then we will continue execution at the function entry point, and we will not hit the gdb breakpoint.
But in the statically typed argument frame created by reflect, the receiver is always an *Outer.
But inc/dec is 1 byte smaller.
But it has the useful feature that we hit 2**224 exactly, making the reflections during a reduce much nicer.
But it should be unnecessary.
But it won't reuse temporaries as aggressively as it might, and it can result in unnecessary zeroing of those variables in the function prologue.
But it's a little complex to do and in practice doesn't matter enough.
But it's good enough.
But it's so rare we barge in assuming it's fine.
But it's still racey: we have wait for them to finish first.
But maybe I should flesh out the fakeConn.Exec implementation so this properly fails.
But member, call, grouping, and array expression terminators precede div ops.
But most users of ServeContent will be using it on GET or HEAD, so only support those for now.
But on real 64-bit systems, where words are larger but the stack limit is not, even timediv is too heavy, and we really need to use just an ordinary machine instruction.
But on windows it returns symlink target, if current directory is a symlink.
But only once, and only the last Go 1.4 build of mypkg.a happened before Go 1.5 was installed.
But otherwise, if there is a non-empty locals section, the author of the code is responsible for making sure that the frame size is 8 mod 16.
But our dial is still going, so give it away when it finishes:
But port lookup generally just involves local files, and the os package has no context support.
But re-typecheck ONAME/OTYPE/OLITERAL/OPACK node in case context has changed.
But still check that RelatedGoroutines does not crash, hang, etc.
But such a situation implies a cycle in the dominator graph.
But that's okay, since what we're really testing is that the remote side hung up on us before we wrote too much.
But the TODO is that for a lot of drivers, this copy will be unnecessary.
But the current textual export code only exports (inlined) methods, even if the methods came from embedded interfaces.
But the definition of x3 doesn't dominate b2.
But the effect of a tag on the build is to include or exclude a file from the compilation, and that file list is already in the build ID hash.
But then we'd get conflicts when we include the system headers for things like ucontext_t, so that happens in a separate file, defs1.go.
But they do not use the previous value at the address, so we also mark them RightWrite.
But this ASCII-only code will probably always beat UTF-8 aware code.
But this is just a debug function, so this is acceptable for now.
But wait only 5 seconds for it.
But we are not doing the final link, we will link the resulting object file again.
But we can't call ReadMemStats on g0 holding locks.
But we do not know any other way to wait for it.
But we don't want to add dots for local names from /etc/hosts.
But we don't want to do an unbounded amount of reading here for DoS reasons, so we only try up to a threshold.
But we have tests for these special cases.
But we must be extra careful with rounding in that case.
But we need to set it before we make the span available for allocation (return it to heap or mcentral), because allocation code assumes that a span is already swept if available for allocation.
But we optionally accept binary as first arg for Go 1.5 traces.
But we pass the receiver by reference to the autogenerated pointer-receiver version of the function.
But we rather do not crash the program because of tracing, because tracing can be enabled at runtime on prod servers.
But we use the unbuffered channel 'rc' to guarantee that persistConn.roundTrip got out of its select potentially waiting for this persistConn to close.
But we want to close the body in cases where we won the race.
But we're going to be much more lenient for now and just search for any byte that's not a valid byte in any of those expressions.
But when we're dynamically linking, we need all those global symbols.
But, it seems, IO operation succeeded before the cancelation request run.
By checking assignment of x to an invisible temporary (as a compiler would), we get all the relevant checks.
By comparison, it's reasonable to mishandle some times in the year -292277022399.
By construction will not escape.
By construction, single page spans of the smallest object class have the most objects per span.
By convention there should be only one package comment but collect all of them if there are more than one.
By convention, arrays or slices are typically encoded as a sequence of elements, one per entry.
By convention, tag strings are a concatenation of optionally space-separated key:"value" pairs.
By convention, this is arranged by starting each path with a unique prefix that belongs to you.
By default env prints information as a shell script (on Windows, a batch file).
By default fix considers all known rewrites.
By default it is empty, but custom builds that need to keep their outputs separate can set InstallSuffix to do so.
By default the -all flag is set so all checks are performed.
By default the pure Go resolver is used, because a blocked DNS request consumes only a goroutine, while a blocked C call consumes an operating system thread.
By default the server should use the client's preference.
By default this signal should be ignored.
By default, 'go run' runs the compiled binary directly: 'a.out arguments...'.
By default, Import searches vendor directories that apply in the given source directory before searching the GOROOT and GOPATH roots.
By default, Import uses the operating system's file system calls to read directories and files.
By default, Linux's "transparent huge page" support will merge pages into a huge page if there's even a single present regular page, undoing the effects of the DONTNEED below.
By default, Scan uses an internal buffer and sets the maximum token size to MaxScanTokenSize.
By default, Transport caches connections for future re-use.
By default, a Scanner skips white space and Go comments and recognizes all literals as defined by the Go language specification.
By default, a failure prints a stack trace for the current goroutine, eliding functions internal to the run-time system, and then exits with exit code 2.
By default, cmd/link will present the same interface it does today: cmd/link main.a produces a file named a.out, even if cmd/link does so by invoking the host linker in external linking mode.
By default, get uses the network to check out missing packages but does not use it to look for updates to existing packages.
By default, go test needs no arguments.
By default, it is set to 4096, which is the same size of the default dynamic header table size described in HPACK specification.
By default, keep-alives are always enabled.
By default, no benchmarks run.
By default, no functions are defined in the template but the Funcs method can be used to add them.
By default, omits runtime frames.
By default, print out the unmodified req.RequestURI, which is always set for incoming server requests.
By default, the list command prints an error to standard error for each erroneous package and omits the packages from consideration during the usual printing.
By default, the zero FlagSet uses an empty name and the ContinueOnError error handling policy.
By default, this includes functions like fmt.Errorf and fmt.Sprintf and methods like String and Error.
By directory: go tool vet source/directory recursively descends the directory, vetting each package it finds.
By far, the most common redundant pair are generated by bounds checking.
By files: go tool vet source/directory/*.go vets the files named, all of which must be in the same package.
By forcing the linkedit section to end on a 16-byte boundary, codesign_allocate will not need to apply any alignment padding itself, working around the issue.
By is the type of a "less" function that defines the ordering of its Planet arguments.
By preserving REGTLS, we can just retrieve g from TLS when we aren't sure.
By providing a Config with our own error function, it will continue past the first error.
By sleeping, we increase the chances that the client sees our FIN and processes its final data before they process the subsequent RST from closing a connection with known unread data.
ByName implements sort.Interface by providing Less and using the Len and Swap methods of the embedded Organs value.
ByWeight implements sort.Interface by providing Less and using the Len and Swap methods of the embedded Organs value.
Bypass gcc if there's nothing left to find out.
Byte arrays are encoded as an unsigned count followed by the raw bytes.
Byte before dash cannot be dot.
Byte before dot cannot be dot, dash.
Byte stuffing is specified in section F.1.2.3.
BytePtrFromString returns a pointer to a NUL-terminated array of bytes containing the text of s.
ByteReader is the interface that wraps the ReadByte method.
ByteScanner is the interface that adds the UnreadByte method to the basic ReadByte method.
ByteSliceFromString returns a NUL-terminated slice of bytes containing the text of s.
ByteWriter is the interface that wraps the WriteByte method.
Bytes left in fragment
Bytes marked (blackened) on this gcWork.
Bytes not in the pattern can skip one pattern's length.
Bytes processed in one iteration.
Bytes read from r are decoded using the specified byte order and written to successive fields of the data.
Bytes returns a slice of length b.Len() holding the unread portion of the buffer.
Bytes returns the absolute value of x as a big-endian byte slice.
Bytes returns the contents of the buffer.
Bytes returns the data over which the index was created.
Bytes returns the most recent token generated by a call to Scan.
Bytes returns v's underlying value.
Bytes returns z's representation as a big-endian byte array.
Bytes written to w are encoded using the specified byte order and read from successive fields of the data.
C ABI TLS base pointer
C arithmetic types translate to precisely-sized Go arithmetic types.
C arrays become Go arrays.
C clobbers REGG, so if Go were to clobber REGTLS, sigtramp won't know which convention to use.
C code may call function pointers received from Go.
C code may not keep a copy of a Go pointer after the call returns.
C code may store Go pointers in C memory, subject to the rule above: it must stop storing the Go pointer when the C function returns.
C compilers are aware of this calling convention and adjust the call accordingly, but Go cannot.
C function pointers become Go's uintptr.
C has float64 mantissa width
C has much more relaxed rules than Go for implicit type conversions.
C implements Marshaler and returns unescaped JSON.
C pointers become Go pointers.
C preamble (doc comment on import "C")
C struct fields that cannot be expressed in Go, such as bit fields or misaligned data, are omitted in the Go struct, replaced by appropriate padding to reach the next field or the end of the struct.
C void pointers become Go's unsafe.Pointer.
C.misaligned should have x but then a padding field to get to the end of the struct.
CALL is followed by load of result from stack
CALL is last instruction on this line
CANotAuthorizedForThisName results when an intermediate or root certificate has a name constraint which doesn't include the name being checked.
CAPI doesn't build the chain with the duplicated GeoTrust entry so the results don't match.
CAS to 1 to win select race (may point to stack)
CAUTION: The rounding modes ToNegativeInf, ToPositiveInf are affected by the sign of z.
CAUTION: This interface does not support the import of locally vendored packages.
CAx constants should appear after CBx constants.
CBC AES test vectors.
CBC mode always works in whole blocks.
CBC mode works on blocks so plaintexts may need to be padded to the next whole block.
CBC provides confidentiality by xoring (chaining) each plaintext block with the previous ciphertext block before applying the block cipher.
CBx constants should appear before CAx constants.
CConv formats ARM condition codes.
CFB (Cipher Feedback) Mode.
CGO_CFLAGS Flags that cgo will pass to the compiler when compiling C code.
CGO_CPPFLAGS Flags that cgo will pass to the compiler when compiling C or C++ code.
CGO_CXXFLAGS Flags that cgo will pass to the compiler when compiling C++ code.
CGO_ENABLED Whether the cgo command is supported.
CGO_LDFLAGS Flags that cgo will pass to the compiler when linking.
CIDRMask returns an IPMask consisting of `ones' 1 bits followed by 0s up to a total length of `bits' bits.
CJK UNIFIED IDEOGRAPH-6C34 (water)
CL 21202 introduced a compiler crash in the handling of a varargs function in the same recursive group as a function that calls it.
CLZ doesn't support .nil
CMYK is an in-memory image whose At method returns color.CMYK values.
CMYK represents a fully opaque CMYK color, having 8 bits for each of cyan, magenta, yellow and black.
CMYKModel is the Model for CMYK colors.
CMYKToRGB converts a CMYK quadruple to an RGB triple.
COFF string table is located right after COFF symbol table.
COFF symbols with auxiliary symbol records removed
COFFSymbol represents single COFF symbol table record.
CONNECT request for RPC:
CONNECT request with IP address:
CONNECT request with domain name:
CONNECT requests are used two different ways, and neither uses a full URL: The standard use is to tunnel HTTPS through an HTTP proxy.
CONNECT requests normally give just the host and port, not a full URL.
COffset returns the index of the first element of Cb or Cr that corresponds to the pixel at (x, y).
CPP contentionz profiles don't have format.
CPP contentionz profiles don't have resolution.
CPU capability bit flags
CPU faults upon signed overflow, which occurs when most negative int is divided by -1.
CPUProfile returns the next chunk of binary CPU profiling stack trace data, blocking until data is available.
CRAMMD5Auth returns an Auth that implements the CRAM-MD5 authentication mechanism as defined in RFC 2195.
CRC-32, IEEE polynomial (section 8)
CRC32 has a mandatory F2 prefix.
CRL Distribution Points
CRTValue contains the precomputed Chinese remainder theorem values.
CSS encapsulates known safe content that matches any of: 1.
CStride is the Cb and Cr slice index delta between vertically adjacent pixels that map to separate chroma samples.
CTLs are used to create the new chain beginning with the self-signed certificate from the original chain as the end certificate of the new chain.
CTR AES test vectors.
CTR converts a block cipher into a stream cipher by repeatedly encrypting an incrementing counter and xoring the resulting stream of data with the input.
CTR mode is the same for both encryption and decryption, so we can also decrypt that ciphertext with NewCTR.
CText implements Marshaler and returns unescaped text.
CXX The command to use to compile C++ code.
Cache of already computed node sizes.
Cache of already-translated or in-progress types.
Cache of known paths.
Cache of most recently computed line position.
Cache of the allocBits at freeindex.
Cache of types that have been serialized already.
Cache runtime.mheap_.allspans in work.spans to avoid conflicts with resizing/freeing allspans.
Cache the current array for sweeping.
Cache the framepointer experiment.
Cache the type, nil to start.
Cached value of haveexperiment("framepointer")
Calculate 256 hashes at the time (more L1 cache hits)
Calculate a 16-bin histogram for m's red, green, blue and alpha components.
Calculate derived stats.
Calculate memory allocator stats.
Calculate the addend as the offset into the section.
Calculate the value mod the product of smallPrimes.
Calculate week as number of Mondays in year up to and including today, plus 1 because the first week is week 0.
Call Pos to obtain an error position in that case.
Call Read to accumulate the text of a file
Call ReadByte to accumulate the text of a file
Call ReadString (which ends up calling everything else) to accumulate the text of a file.
Call WriteHeader to begin a new file, and then call Write to supply that file's data, writing at most hdr.Size bytes in total.
Call a Windows function with stdcall conventions, and switch to os stack during the call.
Call a function for each entry in an ast.FieldList, passing the index into the list, the name if any, and the type.
Call all Error and String methods before freezing the world.
Call atan and determine the quadrant.
Call calls the function v with the input arguments in.
Call constructed function f.
Call emitCopy, and then see if another emitCopy could be our next move.
Call equality function directly.
Call executes procedure p with arguments a.
Call from C back to Go.
Call g with small arguments so that there is something predictable (and different from the correct results) in those positions on the stack.
Call goexit1 instead.
Call invokes the named function, waits for it to complete, and returns its error status.
Call is okay if inlinable and we have the budget for the body.
Call its Sort method to sort the data.
Call libc's malloc rather than malloc.
Call of inlined method with blank receiver.
Call operations carry the argsize of the callee along with them Finish call block
Call panic with a descriptive error.
Call panics if v's Kind is not Func.
Call represents an active RPC.
Call underlying function.
CallSlice panics if v's Kind is not Func or if v is not variadic.
Callback from C into Go, runs on g0.
Callback with zero arguments used to make the stack misaligned, which broke the garbage collector and other things.
Calldepth is used to recover the PC and is provided for generality, although at the moment on all pre-defined paths it will be 2.
Called after regopt and peep have run.
Called at garbage collection time.
Called before allocating npage pages.
Called by libpreinit so runtime may not be initialized.
Called by malloc to record a profiled block.
Called by sigtramp from Windows VEH handler.
Called by the parser, not in the lexing goroutine.
Called from ../reflect/asm_*.s go:linkname reflect_makemap reflect.makemap
Called from dropm to undo the effect of an minit.
Called from sighandler to send a signal back out of the signal handling thread.
Called from syscall package after fork in parent.
Called from syscall package before fork.
Called from syscall.Setenv.
Called from syscall.unsetenv.
Called if we receive a SIGPROF signal.
Called on the new thread, can not allocate memory.
Called on the new thread, cannot allocate memory.
Called on the parent thread (main thread in case of bootstrap), can allocate memory.
Called only by Package.packageDoc.
Called only when a panic is acceptable and unexpected.
Called to initialize a new m (including the bootstrap m).
Called to receive the next queued signal.
Called to rewind context saved during morestack back to beginning of function.
Called to start an M.
Called when a G is made runnable (newproc, ready).
Called when backing up on a branch.
Called when descending on a branch.
Called when freeing a profiled block.
Caller has added extra mappings to the arena.
Caller may have known better.
Caller must be in sync with connection: handshake data if handshake not yet completed, else application data.
Caller must call f.Free() before calling NewFunc again.
Caller must call runtime_procUnpin() when done with the pool.
Caller must disable preemption.
Caller must have changed gp status to Gcopystack.
Caller reports file and line number information about function invocations on the calling goroutine's stack.
Caller should close resp.Body when done reading from it.
Callers can keep state in the object but the first word is smashed by freeing and reallocating.
Callers fills the slice pc with the return program counters of function invocations on the calling goroutine's stack.
Callers must check the result (using checkExpr or checkExprOrType), depending on context.
Callers must inspect the primary return value to decide whether an error occurred (according to the semantics of the specific function being called) before consulting the error.
Callers must verify the result.
Callers should call heapBitsBulkBarrier immediately after calling memmove(p, src, size).
Callers should not assume any relation between values passed to Put and the values returned by Get.
Callers should therefore pop the stack after they are finished executing commands depending on the pipeline value.
Callers should use Table's LineToPC method instead.
Callers should use Table's PCToLine method instead.
Callers should use b to set the string contents and then drop b.
Callers that create an Encoder and then invoke EncodeToken directly, without using Encode, need to call Flush when finished to ensure that the JSON is written to the underlying writer.
Callers that wish to set the fields in Writer.Header must do so before the first call to Write, Flush, or Close.
Callers will generally type-assert the specific frame type: HeadersFrame, *SettingsFrame, *WindowUpdateFrame, etc.
CallersFrames takes a slice of PC values returned by Callers and prepares to return function/file/line information.
Calling Close does not close the wrapped io.Reader originally passed to NewReader.
Calling Dial here is scary -- we have to be sure not to dial a name that will require a DNS lookup, or Dial will call back here to translate it.
Calling FailNow does not stop those other goroutines.
Calling Goexit from the main goroutine terminates that goroutine without func main returning.
Calling GoroutineProfile twice in a row should find the same number of goroutines, but it's possible there are goroutines just about to exit, so we might end up with fewer in the second call.
Calling Lookahead is equivalent to reading yychar from within in a grammar action.
Calling MantExp with a nil argument is an efficient way to get the exponent of the receiver.
Calling Notify with a syscall.Note will cause that value to be sent on the channel when that string is posted as a note.
Calling Read on special types like TypeLink, TypeSymLink, TypeChar, TypeBlock, TypeDir, and TypeFifo returns 0, io.EOF regardless of what the Header.Size claims.
Calling SkipNow does not stop those other goroutines.
Calling UnreadByte after ReadLine will always unread the last byte read (possibly a character belonging to the line end) even if that byte is not part of the line returned by ReadLine.
Calling a method inappropriate to the kind of type causes a run time panic.
Calling a method inappropriate to the kind of type causes a run-time panic.
Calling after a Close will return ErrWriteAfterClose.
Calling between Go and C There are two different ways to call between Go and C/C++ code.
Calling code in runtime/debug should make the slice large enough.
Calling f.Position(p) is equivalent to calling f.PositionFor(p, true).
Calling panic is not actually safe, but the for loop above won't break and this shuts up the compiler.
Calling panic with one of the errors below will call errorString.Error which will call mallocgc to concatenate strings.
Calling s.Position(p) is equivalent to calling s.PositionFor(p, true).
Calling stdcall on os stack.
Calling these functions checks at compile time that the argument can be converted implicitly to (used as) the given type.
Calling this method is only necessary if the client needs control over the host name used.
Calling use(p) ensures that p is kept live until that point.
Calls f and empirically verifies that f always/never blocks depending on signal.
Calls f and verifies that f always/never panics depending on signal.
Calls force spills, also lead to puzzling spill info.
Calls pkg-config if needed and returns the cflags/ldflags needed to build the package.
Calls the function n using the specified call type.
Calls to Scan will invoke the error handler err if they encounter a syntax error and err is not nil.
Calls to panic change the flow.
Calls to the runtime are done directly from src/runtime/race.go.
Calls to this func must be checked for Println-like arguments.
Calls to this func must be skipped when checking for Println-like arguments.
Calls with a negative delta, or calls with a positive delta that start when the counter is greater than zero, may happen at any time.
Can appear but is illegal, will be rejected by the linker.
Can be executed by any P.
Can be set only once.
Can be used by any P.
Can be used only by the respective P.
Can be used to test ServeRequest.
Can change header back to text content and send error code.
Can check field count now that we've handled the myriad comment formats.
Can clear at most 256 bytes per instruction.
Can compare encodings directly now.
Can connect to RPC service using HTTP CONNECT to rpcPath.
Can discard old overflow buckets as well.
Can happen if C/C++ code calls Go from a global ctor.
Can happen if timeout has fired and unblocked us, but before we had a chance to run, timeout has been reset.
Can have no source to cover if e.g. blocks abut.
Can interlace the computation of w with the rounds below if needed for speed.
Can not lock the mutex while pinned.
Can not throw, because scheduler is not initialized yet.
Can only be a literal register here.
Can only be called once per call of next.
Can only happen if AST is incorrect.
Can only happen if buffer is silly small.
Can only slice if it is addressable.
Can return false right away.
Can run concurrently with GC.
Can run concurrently with another hash_iter_init().
Can use 2-byte encoding.
Can use p for allocation context if needed.
Can't access a needed shared lib
Can't advance format.
Can't always set n.Type directly on OLITERAL nodes.
Can't be run with -race because it inserts calls into newOSProcCreated() that require a valid G/M.
Can't change that code, because that code is only for loading the non-test copy of a package.
Can't change uid unless root, but can try changing the group id.
Can't check the signature here without a package cycle.
Can't do better than this:
Can't do this below or we will add a counter to an empty statement list after, say, a return statement.
Can't happen, but in case it does...
Can't make directory named after file.
Can't make subdirectory of file.
Can't print a function.
Can't put null val into non-null col
Can't run a non-existent binary
Can't send after socket shutdown
Can't set trace.enabled yet.
Can't shadow the blank identifier.
Can't short-circuit here even if specs are already sorted, since they might yet need deduplication.
Can't stat root - no hope.
Can't test decode easily because we can't encode one, so we can't pass one to a Decoder.
Can't use MVC, fall back onto basic moves.
Can't use SP as the index register
Can't use bufio.Scanner because it can't handle long lines, which are likely to appear when using generate.
Can't use error directly because Typeof takes an empty interface value.
Can't use function closgen in such case, because it would lead to name clashes.
Can't use pool if the function has return values.
Can't use slice because that will introduce implicit allocations.
CanAddr reports whether the value's address can be obtained with Addr.
CanBackquote reports whether the string s can be represented unchanged as a single-line backquoted string without control characters other than tab.
CanInterface reports whether Interface can be used without panicking.
CanSet reports whether the value of v can be changed.
Canadian_Aboriginal is the set of Unicode characters in script Canadian_Aboriginal.
Cancel desired registers if they get clobbered.
Cancel is an optional channel whose closure indicates that the client request should be regarded as canceled.
Cancel is an optional channel whose closure indicates that the dial should be canceled.
CancelIo Windows API cancels all outstanding IO for a particular socket on current thread.
CancelRequest cancels an in-flight request by closing its connection.
CancelRequest cannot cancel HTTP/2 requests.
CancelRequest should only be called after RoundTrip has returned.
Canceled is the error returned by Context.Err when the context is canceled.
Canceling this context releases resources associated with it, so code should call cancel as soon as the operations running in this Context complete.
Canceling this context releases resources associated with it, so code should call cancel as soon as the operations running in this Context complete:
Caninl determines whether fn is inlineable.
Cannot be an issue, only keeps the sets smaller.
Cannot call casgstatus directly, because we are racing with an async wakeup that might come in from netpoll.
Cannot check +Inf, -Inf, nor the float next to them (MaxFloat32).
Cannot check +Inf, -Inf, nor the float next to them (MaxFloat64).
Cannot contain escaped characters.
Cannot determine call's signature.
Cannot encode larger values than maxEncodedLevel.
Cannot happen because we only have slices of already-scanned text, but be prepared.
Cannot just b.push(inst.Out, pos, 0) b.push(inst.Arg, pos, 0) If during the processing of inst.Out, we encounter inst.Arg via another path, we want to process it then.
Cannot just embed net.Conn because that would export the struct field too.
Cannot modify the LineStack directly, or else lookups for the earlier line numbers will get the wrong answers, so make a new one.
Cannot remove VARDEF instruction, because - unlike TYPE handled above - VARDEFs are interspersed with other code, and a jump might be using the VARDEF as a target.
Cannot represent bit-sized elements in Go.
Cannot split the stack because it needs to reliably find the stack segment of its caller.
Cannot split the stack because we reuse the caller's frame to call the deferred function.
Cannot use 'for range s' because we need to preserve the width of the runes in the input.
Cannot use Content-Length with non-identity Transfer-Encoding.
Cannot use go/build directly because cmd/dist for a new release builds against an old release's go/build, which may be out of sync.
Cannot use t.Parallel - modifies global GOMAXPROCS.
Cannot use t.Parallel - modifies global hooks.
Canon returns the canonical version of r.
CanonicalHeaderKey returns the canonical format of the header key s.
CanonicalMIMEHeaderKey returns the canonical format of the MIME header key s.
Canonicalize order to reduce number of entries in visited.
Canonicalize spaces after commas first.
Canonicalize spacing in printed form.
Canonicalize the hostname by removing any trailing dot.
Canonicalize: first letter upper case and upper case after each dash.
Cap adjusted indent to zero.
Cap returns the capacity of the buffer's underlying byte slice, that is, the total space allocated for the buffer's data.
Cap returns v's capacity.
CapNames walks the regexp to find the names of capturing groups.
Capacity of the result is unimportant.
Capture all headers and checksums.
Capture pos to register, but save old value.
Careful: another GC cycle may start now.
Careful: can overflow
Careful: gp may itself be the last G on the list.
Careful: negative Rats too small for float64 become -0, but Rat obviously cannot preserve the sign from SetString("-0").
Carian is the set of Unicode characters in script Carian.
Carriage returns before newline characters are silently removed.
Carriage-return followed by newline.
Carry out a depth first search of the problem graph.
Case for decoding uppercase hex characters, since Encode always uses lowercase.
Case should not matter
Case-insensitive lookup.
Case-sensitive lookup.
CaseRange represents a range of Unicode code points for simple (one code point to one code point) case conversion.
Cases deserving special comments
Cases this gets wrong (TODO): - If a for loop's continuation statement mentions a variable redeclared in the block, we should complain about it but don't.
Cases where Go can handle it without cgo and C thread overhead.
Cast AuxInt to a ValAndOff to extract Val and Off fields.
Cast bytes as floats to use the common distribution-validity checks.
Cast to void* to avoid warnings due to omitted qualifiers and explicit incompatible struct types.
Cast to void* to avoid warnings due to omitted qualifiers.
Castagnoli's polynomial, used in iSCSI.
Cat, testing stdin and stdout.
Catch this by making assertE2I2 call runtime.GC, which will force a stack scan and failure if there are bad pointers, and then fill the stack with bad pointers and run the type switch.
CatchSIGIO starts catching SIGIO signals.
Categories is the set of Unicode category tables.
Categorize their uses: loadUse contains stores which are used by a subsequent load.
Caucasian_Albanian is the set of Unicode characters in script Caucasian_Albanian.
Cause of bug -- escape of closure failed to escape (shared) data structures of map.
Cause panic if method is not appropriate.
Caused a gccgo crash on compilation.
Caused an internal compiler error in gccgo.
Caused gccgo to emit multiple definitions of the same symbol.
Causes deadlock if either condition isn't met.
Caution: Effects may be unpredictable due to follow-up errors.
Caution: This flag affects all uses of WriteType, globally.
Caution: stmt will emit more than one node for statement nodes n that have a non-empty n.Ninit and where n cannot have a natural init section (such as in "if", "for", etc.).
Cautious handlers should read the Request.Body first, and then reply.
Cc is the set of Unicode characters in category Cc.
Ceil returns the least integer value greater than or equal to x.
Central cache of sudog structs.
Central list of free objects of a given size.
Central pool of available defer structs of different sizes.
Centralize all scheduler state (would inhibit scalability).
CertGetCertificateChain will traverse Windows's root stores in an attempt to build a verified certificate chain.
CertPool is a set of certificates.
Certain checks are relevant only if they touch both test and non-test files.
Certain file systems get rather angry and EINVAL if you give them an empty string of data, rather than NULL.
Certain frames are not stream-specific, in which case this field is 0.
Certain headers are special-cased as okay but not transmitted later.
Certain nodes are not rewritten but should be.
Certainly if we don't see the completed:1 error, we did not get all the errors we expected.
Certificate chain presented by the server
Certificate chains we built for verification
Certificate part of raw ASN.1 DER content.
Certificate request info part of raw ASN.1 DER content.
Certificate types (for certificateRequestMsg)
CertificateInvalidError results when an odd error occurs.
CertificateList represents the ASN.1 structure of the same name.
Certificates contains one or more certificate chains to present to the other side of the connection.
Cf is the set of Unicode characters in category Cf.
CgenTemp creates a temporary node, assigns n to it, and returns it.
Cgo CFLAGS directives
Cgo CPPFLAGS directives
Cgo CXXFLAGS directives
Cgo FFLAGS directives
Cgo LDFLAGS directives
Cgo call and callback support.
Cgo effectively takes the address of all result args, but the compiler can't see that.
Cgo enables the creation of Go packages that call C code.
Cgo inconsistently translated zero size arrays.
Cgo incorrectly computed the alignment of structs with no Go accessible fields as 0, and then panicked on modulo-by-zero computations.
Cgo may have left stack size in stack.hi.
Cgo must decide which.
Cgo output unhelpful error messages for invalid C preambles.
Cgo parses the DWARF debug information for __cgo__N to learn the type of each identifier.
Cgo pkg-config directives Dependency information
Cgo provides a way for Go programs to call C code linked into the same address space.
Cgo reads a set of Go source files and looks for statements saying import "C".
Cgo recognizes any use of a qualified identifier C.xxx and uses gcc to find the definition of xxx.
Cgo takes a different approach.
Cgo transforms the specified input Go source files into several output Go and C source files.
Cgo translates C types into equivalent unexported Go types.
Cgo's most interesting translation is for functions.
Chain contains a map ("chain") of prefixes to a list of suffixes.
ChainNode holds a term followed by a chain of field accesses (identifier starting with '.').
Chained for convenience.
Chained nodes did not work as arguments.
Chakma is the set of Unicode characters in script Chakma.
Cham is the set of Unicode characters in script Cham.
Chan and Send must be zero Values.
ChanArgs returns the channel type for TCHANARGS type t.
ChanArgsType contains Type fields specific to TCHANARGS types.
ChanDir is whether a channel can send, receive, or both.
ChanDir represents a channel type's direction.
ChanDir returns a channel type's direction.
ChanDir returns the direction of a channel type t.
ChanOf returns the channel type with the given direction and element type.
ChanType contains Type fields specific to channel types.
ChanType returns t's extra channel-specific fields.
Change encoding generated by assemblers and compilers (if any) and remove.
Change encoding generated by assemblers and compilers and remove.
Change it to 1.1 here.
Change name to dump debugging information only for a specific function.
Change number of processors.
Change nw from counting possibly-pointer words to total words in allocation.
Change the last character of the output file (which was c or s).
Change to single 1 with adjusted decimal point.
Changes here must also be made in src/cmd/internal/gc/select.go's selecttype.
Changes should not be made to this map without prior discussion.
Changes to operating system CPU allocation after process startup are not reflected.
Changes to the slice entries will be reflected in f.
Changing mtime and content of runtime/internal/sys/sys.go should have no effect: we're in a release, which doesn't rebuild for general mtime or content changes.
Changing the behavior of signals in Go programs The functions in this package allow a program to change the way Go programs handle signals.
Changing the export format requires making symmetric changes to bimport.go and bexport.go.
Changing the toolchain is changing the set of inputs, without affecting any mtimes.
Changing the value of the element at index i and then calling Fix is equivalent to, but less expensive than, calling Remove(h, i) followed by a Push of the new value.
Channel c must be empty and locked.
Channel c must be full and locked.
Channel number out of range
Channel used to signal tests that are ready to be run in parallel.
Channel, complex, and function values cannot be encoded in JSON.
Channel: The channel's buffer is initialized with the specified buffer capacity.
Character class operators are listed simplest to most complex (OpLiteral, OpCharClass, OpAnyCharNotNL, OpAnyChar).
Character class simplification
Character special file
Charge the allocation against the G.
Charge the current user G for this allocation.
CharsetReader, if non-nil, defines a function to generate charset-conversion readers, converting from the provided charset into UTF-8.
CharsetReader, if non-nil, defines a function to generate charset-conversion readers, converting from the provided non-UTF-8 charset into UTF-8.
Charsets are always lower-case.
Chdir changes the current working directory to the file, which must be a directory.
Chdir changes the current working directory to the named directory.
Chdir so current directory and a.go reside on the same drive.
Cheap integer to fixed-width decimal ASCII.
Cheaper to just emit the bits.
Cheat sheet for left shift: table indexed by shift count giving number of new digits that will be introduced by that shift.
Check ../../runtime/hashmap.go:maxValueSize before changing.
Check 1K total values, down from 64M.
Check ExampleFoo and ExampleBadFoo.
Check ExampleFoo_Method and ExampleFoo_BadMethod.
Check ExampleFoo_Method_suffix and ExampleFoo_Method_Badsuffix.
Check Example_suffix and Example_BadSuffix.
Check a PC near but not at the very end.
Check actual assigned registers at the start of the next block(s).
Check any forward gotos.
Check assumptions made in finalizer1 array above.
Check at compile time that the sizes we use match our expectations.
Check cansemacquire to avoid missed wakeup.
Check cgoCallersUse to make sure that we are not interrupting other code that is fiddling with cgoCallers.
Check constant indexes for negative values, and against constant length if known.
Check conversion of constant to float32/float64 near min/max boundaries.
Check correct termination location and error.
Check delayed until now so that importPaths and packagesForBuild have a chance to print errors.
Check destination to see if scanf code was included.
Check each type in this type switch case.
Check end-of-file CRC.
Check error for conversion and 'not used' in defer/go.
Check every function, but do the nosplit functions in a first pass, to make the printed failure chains as short as possible.
Check exactness using slow algorithm.
Check expected encoding, especially TYPE_CONST vs TYPE_ADDR.
Check f is best approximation to r.
Check file contents for // +build lines.
Check file name for GOOS or GOARCH.
Check first that a symbol is defined for this type.
Check flagging of invalid conversion of constant to float32/float64 near min/max boundaries.
Check for "internal" element: three cases depending on begin of string and/or end of string.
Check for "unsafe-uintptr" tag provided by escape analysis.
Check for "vendor" element.
Check for 32 bit operands
Check for EOF, to verify the zlib checksum.
Check for PAX/GNU special headers and files.
Check for PC-relative load.
Check for a PAX format sparse file
Check for a explicit (and valid) Content-Length header.
Check for base-256 (binary) format first.
Check for bounds and size restrictions.
Check for bug 6459: Tree field was not set in Parse.
Check for build constraints only up to the actual code.
Check for case-insensitive collision of input files.
Check for compile or link error.
Check for cycles in a function call.
Check for cycles in a function value.
Check for cycles in a method call.
Check for cycles in a method expression call.
Check for cycles in a method expression.
Check for cycles in a method value.
Check for cycles in a pointer literal's method call.
Check for cycles in a pointer literal's method value.
Check for cycles in a pointer method expression.
Check for cycles in a pointer value's method call.
Check for cycles in a pointer value's method value.
Check for cycles in an embedded method expression.
Check for cycles in an embedded struct literal's method call.
Check for cycles in an embedded struct literal's method value.
Check for cycles in an embedded struct's method call.
Check for cycles in an embedded struct's method value.
Check for cycles in the call of a pointer method expression.
Check for cycles in the method call of a pointer value returned from a function call.
Check for cycles in the method call of a value literal.
Check for cycles in the method call of a value returned from a function call.
Check for cycles in the method call of an embedded struct returned from a function call.
Check for cycles in the method value of a pointer value returned from a function call.
Check for cycles in the method value of a value literal.
Check for cycles in the method value of a value returned from a function call.
Check for cycles in the method value of an embedded struct returned from a function call.
Check for cycles when calling an embedded method expression.
Check for deadlock situation.
Check for duplicate loads of the same package.
Check for end of object
Check for extra arguments unless the call accessed the arguments out of order, in which case it's too expensive to detect if they've all been used and arguably OK if they're not.
Check for incompatible duplicates.
Check for invalid cgo pointer passing.
Check for named captures, first introduced in Python's regexp library.
Check for newline (or EOF) if required (Scanln etc.).
Check for old GNU sparse format entry.
Check for overflow or underflow.
Check for passing the address of a bad type.
Check for recursive types.
Check for sparse format indicators
Check for sticky errors.
Check for syntactically unreachable code.
Check for text marshaler.
Check for the Start Of Image marker.
Check for them here so we don't have to handle ...
Check for unknown sparse format
Check for unmarshaler.
Check for unusual characters.
Check for use of json or xml tags with unexported fields.
Check for vertical "line of stars" and correct prefix accordingly.
Check for well-formedness.
Check functions in the traceback.
Check go:noescape annotations.
Check header: 4-byte magic, two zeros, pc quantum, pointer size.
Check if all valid addresses can be parsed, formatted and parsed again
Check if compiling the preamble by itself causes any errors, because the messages we've printed out so far aren't helpful to users debugging preamble mistakes.
Check if implements S1*g + S2*p
Check if it points into heap and not back at the current object.
Check if newsuccs is the same set as succs.
Check if there were any formatting errors.
Check if this is the case and if so, remove.
Check if v is already in a requested register.
Check if we are in a chroot by checking if the inode of / is different from 2 (there is no better test available to non-root on linux).
Check if we're allowed to clobber the destination location.
Check individual entries.
Check instruction invariants.
Check instrumentation of unaddressable arrays (issue 4578).
Check internal Hostname() against the output of /bin/hostname.
Check line numbers are accurate.
Check looks for an input to f, any function that returns bool, such that f returns false.
Check minimum values (and tweaks for unsigned)
Check mutually recursive interfaces
Check n.Orig because constant propagation may produce typed nil constants, which don't exist in the Go spec.
Check no allocation occurs in write, as long as we're single-threaded.
Check nowritebarrierrec functions.
Check optimization results for append and slicing.
Check order of operations along the way by calling functions that check
Check out a different repo into the wrong place.
Check parameters and result parameters for type equality.
Check presence of 2nd and 3rd index here rather than during type-checking to prevent erroneous programs from passing through gofmt (was issue 7305).
Check r0 and r1 for desired output register.
Check stack size in effect for this span.
Check stack walk during div by zero fault, especially on software divide systems.
Check standard iteration.
Check symbol version.
Check that DecodeRune and DecodeLastRune correspond to the equivalent range loop.
Check that DeepEqual can look at unexported fields.
Check that InputOffset returned actual token.
Check that Parse (and ParseInLocation) understand that Feb 01 AST (Arabia Standard Time) and Feb 01 AST (Atlantic Standard Time) are in different time zones even though both are called AST
Check that S-boxes are inverses of each other.
Check that SHA-384 intermediates (which are popping up) work.
Check that UnreadRune works
Check that a name constrained intermediate works even when it lists multiple constraints.
Check that a time without a Zone still produces a (numeric) time zone when formatted with MST as a requested zone.
Check that all mappings/locations/functions are in the tables Check that there are no duplicate ids
Check that all the type constructors return concrete *rtype implementations.
Check that an HTTPS client can interpret a particular TLS error to determine that the server is speaking HTTP.
Check that an error from a method flows back to the top.
Check that an error from a nested template contains all the relevant information.
Check that aranges are valid even when lldb isn't installed.
Check that buffer has correct data.
Check that calling an invalid field on nil pointer prints a field error instead of a distracting nil pointer error.
Check that closures can set output arguments.
Check that end pos is on a valid token boundary.
Check that entries match when seeking backward.
Check that every function behaves correctly with this amount of stack, following direct calls in order to piece together chains of non-splitting functions.
Check that finding the closest color considers alpha, not just red, green and blue.
Check that first character is good.
Check that for each referring identifier, a lookup of its name on the innermost enclosing scope returns the correct object.
Check that gobin is bound before /bin.
Check that hogCount and lightCount are within a factor of 2, which indicates that both pairs of goroutines handed off the P within a time-slice to their buddy.
Check that if reader returns final data and EOF at same time, jpeg handles it.
Check that it's still correct in pp.a (which contains p.6).
Check that iterating over the map produces at least two different orderings.
Check that link target's gid is unchanged.
Check that math constants are accepted by compiler and have right value (assumes strconv.ParseFloat works).
Check that math functions of high angle values return accurate results.
Check that memcopy returns the actual amount copied before the fault (8*size - 5, the offset we skip in the argument).
Check that negative runes encode as U+FFFD.
Check that nothing satisfies an interface with blank methods.
Check that one-pass cutoff does trigger.
Check that p points to the correct subobject of the tiny allocation.
Check that pattern matching is working.
Check that permuting child process fds doesn't interfere with reporting of fork/exec status.
Check that pointer in cx was adjusted correctly.
Check that profile is well formed and contains need.
Check that reading a directory one entry at a time gives the same result as reading it all at once.
Check that registration handles lots of bad methods and a type with no suitable methods.
Check that returned Keys match keys in range.
Check that sample values are consistent
Check that seeking to a PC returns the right line.
Check that stacks have been scanned.
Check that start pos is on a valid token boundary.
Check that system has "Volume level setting" set.
Check that the FDCT and IDCT functions are inverses, after a scale and level shift.
Check that the actual results equal the expected results.
Check that the arch genfile handles all the arch-specific opcodes.
Check that the backtrace matches the source code.
Check that the certificate isn't being added twice.
Check that the ciphersuite/version used for the previous session are still valid.
Check that the client is still offering the ciphersuite in the session.
Check that the clipped rectangle is contained by the dst / src / mask rectangles, in their respective coordinate spaces.
Check that the coding is complete (i.e., that we've assigned all 2-to-the-max possible bit sequences).
Check that the color indexes are inside the palette.
Check that the entries in the jar matches content.
Check that the error messages says  bug337.go:16: len("foo") not used and not bug337.go:16: 3 not used
Check that the error messages says  bug378.go:17: 1 + 2 not used and not bug378.go:17: 1 not used
Check that the export information is correct in p.6.
Check that the first waiter does get signaled.
Check that the induction variable is a phi that depends on itself.
Check that the init functions appear in descending priority order.
Check that the is the next line in path
Check that the looping-at-EOF check doesn't trigger for merely empty tokens.
Check that the note is no more than ERRMAX bytes (including the trailing NUL).
Check that the optimizations for IsLetter etc.
Check that the optimized and slow FDCT implementations agree.
Check that the optimized and slow IDCT implementations agree.
Check that the optimized implementations of cipher modes will be picked up correctly.
Check that the orig and extra slices were not modified.
Check that the package's own init function has the package's priority
Check that the resultant dst image matches the golden output.
Check that the resultant pixel at (8, 8) matches what we expect (the expected value can be verified by hand).
Check that the right amount makes it out and that the data is correct.
Check that the running page count matches reality.
Check that the same machine can be used with the standard matcher and then the backtracker when there are no captures.
Check that the true physical page size is compatible with the runtime's assumed physical page size.
Check that these cases are handled correctly.
Check that these do not use "by value" capturing, because changes are made to the value during the closure.
Check that this is an appropriate place for the repo to be checked out.
Check that time.Round works.
Check that time.Truncate works.
Check that transition is valid.
Check that value for missing key is zero.
Check that value lookup is correct.
Check that we also support the ciphersuite from the session.
Check that we can access methods of the underlying os.File.`
Check that we can still decode the resultant image.
Check that we do loads exactly once.
Check that we don't compact too often.
Check that we don't ignore EOF.
Check that we get the same error if we call Execute again.
Check that we got a reasonable number of samples.
Check that we have all the space we need.
Check that we only get root cause message, no further complaints about r undefined
Check that we used all labels
Check that we were able to parse the unknown section offset field, even if we can't figure out its DWARF class.
Check that write errors are returned properly.
Check that, for a Palette with no repeated colors, the closest color to each element is itself.
Check the architectures match the syntax.
Check the array rather than the pointer.
Check the current hash table for the data.
Check the global runnable queue once in a while to ensure fairness.
Check the hash of the name against a partial input hash.
Check the implementations
Check the next character is space or end of line.
Check the resulting bytes
Check the returned error is well-formed.
Check the slice rather than the pointer.
Check the stack is empty again.
Check the stack is initially empty.
Check the tag is followed by a proper separator
Check the total number of allocations, to ensure some sampling occurred.
Check the validity of m because we might be called in cgo callback path early enough where there isn't a m available yet.
Check them here but fall through for the remaining fields.
Check there are no duplicates in the register list.
Check this interface instead:
Check those values and values above and below, along with bitwise inversions of the same (done in checkdiv2).
Check to make sure all Blocks referenced are in the function.
Check to make sure all Values referenced are in the function.
Check to make sure all args dominate uses.
Check to make sure argument count makes sense (argLen of -1 indicates variable length args)
Check to make sure aux values make sense.
Check to see if YearDay is location sensitive
Check to see if earlier prefix F2 is present.
Check to see if earlier prefix F3 is present.
Check type and overwrite data.
Check type of target.
Check type-checks a package and returns the resulting package object and the first error if any.
Check whether l and r are the same side effect-free expression, so that it is safe to reuse one instead of computing both.
Check whether n is marked live in args/locals.
Check whether n with its updated args is itself now a constant.
Check whether p is 3 mod 4, and if so, use the faster algorithm.
Check whether the error is too large: that is, if the mantissa is perturbated by the error, the resulting float64 will change.
Check whether the old definition and the new definition match.
Check whether the profiler needs to be turned on or off.
Check whether we can generate static data rather than code.
CheckCRLSignature checks that the signature in crl is from c.
CheckEqual looks for an input on which f and g return different results.
CheckRedirect specifies the policy for handling redirects.
CheckSignature reports whether the signature on c is valid.
CheckSignature verifies that signature is a valid signature over signed from a crypto.PublicKey.
CheckSignature verifies that signature is a valid signature over signed from c's public key.
CheckSignatureFrom verifies that the signature on c is a valid signature from parent.
CheckValid tests whether the profile is valid.
Checked by signal handlers.
Checked during Phase 2 loop.
Checking isSystemGoroutine here makes GoroutineProfile consistent with both NumGoroutine and Stack.
Checking that line number is correct in error message.
Checking that various temporaries do not persist or cause ambiguously live values that must be zeroed.
Checking two ranges helps when appending case-folded alphabets, so that one range can be expanding A-Z and the other expanding a-z.
Checkmark bit is type bit, bottom bit of every 2-bit entry.
Checkmarking To help debug the concurrent GC we remark with the world stopped ensuring that any object encountered has their normal mark bit set.
Checks whether chunked is part of the encodings stack
Checks whether the encoding is explicitly "identity".
Checksum returns the Adler-32 checksum of data.
Checksum returns the CRC-32 checksum of data using the polynomial represented by the Table.
Checksum returns the CRC-64 checksum of data using the polynomial represented by the Table.
ChecksumIEEE returns the CRC-32 checksum of data using the IEEE polynomial.
Cherokee is the set of Unicode characters in script Cherokee.
Child process should not open WER dialogue, but return immediately instead.
Child returns a child of x in the dominator tree, or nil if there are none.
Child's process group ID if Setpgid.
Children have all been visited.
Children have not been visited yet.
Chmod changes the mode of the file to mode.
Chmod changes the mode of the named file to mode.
Chmod is not supported under windows.
Choices are: reg reg reg imm reg reg reg imm reg If the immediate is the middle argument, use From3.
Choose perfect fit over approximate.
Choose the earliest match (the counters are in unpredictable order).
Choose the first/innermost such h.
Chooses the filter to use for encoding the current row, and applies it.
Choosing 0x00c0 means that the valid memory addresses will begin 0x00c0, 0x00c1, ..., 0x00df.
Choosing a good value for e has significant performance impact because it increases the chance that a value can be reused.
Chop leading white space.
Chop test into multiple functions so that there's not one enormous function to compile/link.
Chown changes the numeric uid and gid of the named file.
Chown is not supported under windows or Plan 9.
Chrome calls this socket late binding.
Chtimes changes the access and modification times of the named file, similar to the Unix utime() or utimes() functions.
Chunk size for FixAlloc
Chunk size for heap growth Per-P, per order stack segment cache size.
Chunked response in response to a HEAD request
Chunked response with Content-Length.
Chunked response without Content-Length.
Cipher block chaining (CBC) mode.
CipherSuites is a list of supported cipher suites.
CipherSuites lists the CipherSuites supported by the client (e.g. TLS_RSA_WITH_RC4_128_SHA).
Ciphersuite negotiated for the session
Ciphersuite order is chosen so that ECDHE comes before plain RSA and RC4 comes before AES-CBC (because of the Lucky13 attack).
Claim goroutine by setting scan bit.
Clamp hz to something reasonable.
Clang could inline its definition, so we require clang on Darwin/ARM.
Clang doesn't emit DW_AT_byte_size for pointer types.
Clang embeds prototypes for some builtin functions, like malloc and calloc, but all size_t parameters are incorrectly typed unsigned long.
ClassAddress represents values of type uint64 that are addresses on the target machine.
ClassConstant represents values of type int64 that are constants.
ClassFlag represents values of type bool.
ClassLinePtr represents values that are an int64 offset into the "line" section.
ClassLocListPtr represents values that are an int64 offset into the "loclist" section.
ClassMacPtr represents values that are an int64 offset into the "mac" section.
ClassMacPtr represents values that are an int64 offset into the "rangelist" section.
ClassReference represents values that are an Offset offset of an Entry in the info section (for use with Reader.Seek).
ClassReferenceAlt represents values of type int64 that are an offset into the DWARF "info" section of an alternate object file.
ClassReferenceSig represents values that are a uint64 type signature referencing a type Entry.
ClassString represents values that are strings.
ClassStringAlt represents values of type int64 that are an offset into the DWARF string section of an alternate object file.
ClassUnknown represents values of unknown DWARF class.
Classify returns the policyTableEntry of the entry with the longest matching prefix that contains ip.
Classify samples per source file.
Clean and double-check that dir is in (a subdirectory of) srcRoot.
Clean deletes temporary objects.
Clean opportunistically.
Clean returns the shortest path name equivalent to path by purely lexical processing.
Clean temporaries from condition at beginning of both branches.
Clean temporaries from condition evaluation at beginning of loop body and after for statement.
Clean temporaries from first branch at beginning of second.
Clean the host, in case it arrives with unexpected stuff in it.
Clean this up and write more tests.
Clean up and return nil.
Clean up in a deferred call so we can recover if the example panics.
Cleaner removes anything from /data/local/tmp/goroot not on a builtin list.
Cleantemp emits VARKILL instructions for each temporary above the mark on the temporary stack and removes them from the stack.
Cleantempnopop emits to *out VARKILL instructions for each temporary above the mark on the temporary stack, but it does not pop them from the stack.
Cleanup removes any temporary files selected for deferred cleaning.
Cleanup, so we don't leak goroutines.
Clear all elem before unlinking from gp.waiting.
Clear all elements by iterating
Clear all relevant package cache entries before doing any new loads.
Clear all shadowed addresses.
Clear as much of scratch as we will (re)use
Clear aux structures.
Clear bits corresponding to objects.
Clear central defer pools.
Clear central sudog cache.
Clear duplicate keys.
Clear everything but ID (which we reuse).
Clear m and g, and return m to the extra list.
Clear p and endp as sentinel for using pbits.
Clear pointer fields so garbage collector does not complain.
Clear recorded stack barriers so copystack doesn't try to adjust them.
Clear references to pi so that the only way the garbage collection will find the pointer is in the argument frame, typed as a *Outer.
Clear screen and print field.
Clear the pointers later in the array so that we can tell where the coalesced bitmaps stop and so that we don't double-free when cleaning up.
Clear tinyalloc pool.
Clearenv deletes all environment variables.
Client represents an RPC Client.
Client returns a new TLS client side connection using conn as the underlying transport.
Client.Timeout firing before getting to the body
ClientAuth determines the server's policy for TLS Client Authentication.
ClientAuthType declares the policy the server will follow for TLS Client Authentication.
ClientCAs defines the set of root certificate authorities that servers use if required to verify a client certificate by the policy in ClientAuth.
ClientConn is an artifact of Go's early HTTP implementation.
ClientConn is the state of a single HTTP/2 client connection to an HTTP/2 server.
ClientConnPool manages a pool of HTTP/2 client connections.
ClientHello is optionally followed by extension data
ClientHelloInfo contains information from a ClientHello message in order to guide certificate selection in the GetCertificate callback.
ClientPreface is the string that must be sent by new connections from clients.
ClientSessionCache implementations should expect to be called concurrently from different goroutines.
ClientSessionCache is a cache of ClientSessionState objects that can be used by a client to resume a TLS session with a given server.
ClientSessionState contains the state needed by clients to resume TLS sessions.
ClientTrace is a set of hooks to run at various stages of an HTTP client request.
Clients are safe for concurrent use by multiple goroutines.
Clients must call Flush when done calling Write.
Clients must call resp.Body.Close when finished reading resp.Body.
Clients of ReadAt can execute parallel ReadAt calls on the same input source.
Clients of WriteAt can execute parallel WriteAt calls on the same destination if the ranges do not overlap.
Clients should treat data returned by Read as tentative until they receive the io.EOF marking the end of the data.
Clients should typically use variables of type Listener instead of assuming TCP.
Clients should typically use variables of type Listener instead of assuming Unix domain sockets.
Clients should use those packages to construct templates rather than this one, which provides shared internal data structures not intended for general use.
Clients that need to understand more about the parser state can create the parser separately from invoking it.
Clients that require high-performance serialization, especially for large data structures, should look at more advanced solutions such as the encoding/gob package or protocol buffers.
Clobber the global pointer.
Clock returns the hour, minute, and second within the day specified by t.
Clone can be used to prepare common templates and use them with variant definitions for other templates by adding the variants after the clone is made.
Clone it, so we can modify r1 as needed.
Clone returns a duplicate of the template, including all associated templates.
Clone t0 as t3, but do not execute t3 yet.
Clone the global color table.
Clone the helper set to create a new name space from which to run them.
Clone the repo via HTTP manually.
Clone, the Linux rfork.
Cloning t1 should fail as it has been executed.
Close blocks until all requests are finished.
Close called and we didn't read to the end of src
Close calls Hijack and then also closes the underlying connection.
Close closes a connection to the syslog daemon.
Close closes open key k.
Close closes the File, rendering it unusable for I/O.
Close closes the File.
Close closes the Reader.
Close closes the Rows, preventing further enumeration.
Close closes the Writer, flushing any unwritten data to the underlying io.Writer, but does not close the underlying io.Writer.
Close closes the Zip file, rendering it unusable for I/O.
Close closes the channel v.
Close closes the connection.
Close closes the database, releasing any open resources.
Close closes the encoder, flushing any pending output.
Close closes the file, releasing associated resources.
Close closes the listener.
Close closes the rows iterator.
Close closes the statement.
Close closes the tar archive, flushing any unwritten data to the underlying writer.
Close closes the underlying Writer and returns its Close return value, if the Writer is also an io.Closer.
Close directory, because windows won't remove opened directory.
Close does any teardown required.
Close ensures that the body has been fully read and then reads the trailer if necessary.
Close fds we don't need.
Close finishes the multipart message and writes the trailing boundary end line to the output.
Close finishes writing the zip file by writing the central directory.
Close flushes and closes the writer.
Close flushes any pending output from the encoder.
Close indicates whether to close the connection after replying to this request (for servers) or after sending this request and reading its response (for clients).
Close invalidates and potentially stops any current prepared statements and transactions, marking this connection as no longer in use.
Close is called when the last reference to a *file is removed from the file descriptor table.
Close is idempotent and does not affect the result of Err.
Close marks the closeWaiter as closed and unblocks any waiters.
Close operations must do increfAndClose/decref.
Close pipe, restore stdout, get output.
Close records whether the header directed that the connection be closed after reading Body.
Close releases access to access token.
Close releases any external processes being used for the mapping.
Close semantics (i.e. HTTP/1.0)
Close shuts down the server and blocks until all outstanding requests on this server have completed.
Close stops listening on the TCP address.
Close stops listening on the Unix address.
Close the body (regardless of w.closeAfterReply) so we can re-use its bufio.Reader later safely.
Close the connection.
Close the hole by making the previous import appear to "end" where this one did.
Close the position array.
Close the statements-per-block array.
Close the struct initialization.
Close will complete once pending I/O is done.
Close wraps syscall.Close.
CloseClientConnections closes any open HTTP connections to the test Server.
CloseIdleConnections closes any connections which were previously connected from previous requests but are now sitting idle in a "keep-alive" state.
CloseIdleConnections closes any connections which were previously connected from previous requests but are now sitting idle.
CloseNotify is undefined after a hijack, but we have no place to return an error, so just return a channel, even though it'll never receive a value.
CloseNotify may wait to notify until Request.Body has been fully read.
CloseNotify returns a channel that receives at most a single value (true) when the client connection has gone away.
CloseRead shuts down the reading side of the TCP connection.
CloseRead shuts down the reading side of the Unix domain connection.
CloseWithError always returns nil.
CloseWithError causes the next Read (waking up a current blocked Read if needed) to return the provided err after all data has been read.
CloseWrite shuts down the writing side of the TCP connection.
CloseWrite shuts down the writing side of the Unix domain connection.
Closer is the interface that wraps the basic Close method.
Closes all Stmts prepared for this transaction.
Closesocket wraps syscall.Closesocket.
Closest means the latest one that is not after the current release.
Closing c does not affect f, and closing f does not affect c.
Closing l does not affect f, and closing f does not affect l.
Closing ln does not affect f, and closing f does not affect ln.
Closing the encoder will make any future Write calls return errClosed
Closing the returned chunkedWriter sends the final 0-length chunk that marks the end of the stream.
Closure used in the Less method.
Closures appear in the same list as their outer functions.
Closures that order the Change structure.
Closures that order the Planet structure.
Closures with no captured variables are globals, so the assignment can be done at link time.
Clumsy because of variadics.
Clumsy but important.
Cmd is a convenience method that sends a command after waiting its turn in the pipeline.
Cmd represents an external command being prepared or run.
Cmd returns the id of the command, for use with StartResponse and EndResponse.
Cmdline responds with the running program's command line, with arguments separated by NUL bytes.
Cmp compares x and y and returns:
Cmp is a comparison between values a and b.
CmpInt compares x and y.
CmsgLen returns the value to store in the Len field of the Cmsghdr structure, taking into account any necessary alignment.
CmsgSpace returns the number of bytes an ancillary element with payload of the passed data length occupies.
Co is the set of Unicode characters in category Co.
Co-recursive templates that end in its start context.
Coalesce with earlier, later spans.
Coalesced is whether the Addrs were shared with another caller who was doing the same DNS lookup concurrently.
Code and data passes.
Code badCode is an end marker
Code below this line can ignore wb.
Code between fork and exec must not allocate memory nor even try to grow stack.
Code borrowed from old code generator.
Code for enumerating all possible paths through some logic.
Code for general data structures probably should catch those as well.
Code in vendor directories deeper in the source tree shadows code in higher directories.
Code in vendor directories is not subject to import path checking (see 'go help importpath').
Code inside the grammar actions may refer to the variable yylex, which holds the yyLexer passed to yyParse.
Code not using these patterns is likely to be invalid today or to become invalid in the future.
Code outside the standard Go repository should be migrated to use the corresponding package in the golang.org/x/sys repository.
Code patterns that caused problems in the past.
Code points in the surrogate range are not valid for UTF-8.
Code points that are out of range or a surrogate half are illegal.
Code should store references to gclinks as gclinkptr, not as *gclink.
Code should use context.TODO when it's unclear which Context to use or it is not yet available (because the surrounding function has not yet been extended to accept a Context parameter).
Code targeting Go 1.1 or later should use EscapeText.
Code that creates temps does not bother to set defn, so do it here.
Code that must precede any return (e.g., copying value of heap-escaped paramout back to true paramout)
Code to check that pointer writes follow the cgo rules.
Code to resolve elided DOTs in embedded types.
Code we downloaded and all code that depends on it needs to be evicted from the package cache so that the information will be recomputed.
CodecEmulator provides a client-like api and a ServerCodec interface.
Codes 0-15 are single byte codes.
Codes 16-18 are followed by additional information.
Coerce gcc into telling us whether each name is a type, a value, or undeclared.
Coerce to well-formed UTF-8.
Col reports the source column number of the token.
Collapse numeric labels into maxNumNodelets buckets, of the form: 1MB..2MB, 3MB..5MB, ...
Collect Go stack that leads to the call.
Collect Go stack that leads to the cgo call.
Collect a parameter from the CLI
Collect all samples at address granularity for assembly listing.
Collect all samples at fileline granularity for source listing.
Collect all samples at function granularity for peek command
Collect basic blocks with selectgo calls.
Collect comments from all package files.
Collect data symbols by type into data.
Collect declarations from all package files.
Collect import specs from all package files.
Collect matching benchmarks and determine longest name.
Collect names to demangle.
Collect new nodes into a report.
Collect outgoing edges.
Collect package comments from all package files into a single CommentGroup - the collected package documentation.
Collect rtype pointers to methods for later processing in deadcode.
Collect source coordinates from profile.
Collect them all and check counts afterwards.
Collect them for later analysis.
Collect types from the previous module into typehash.
Collects and returns a slice of *Nodes for functions arguments and local variables.
Color can convert itself to alpha-premultiplied 16-bits per channel RGBA.
Color type, as per the PNG spec.
ColorIndexAt returns the palette index of the pixel at (x, y).
ColorModel implements the Image interface.
ColorModel returns the Image's color model.
Column (rune index) where the error occurred
Column cells must be tab-terminated, not tab-separated: non-tab terminated trailing text at the end of a line forms a cell but that cell is not part of an aligned column.
Column is the column number within the source line of these instructions.
ColumnConverter may be optionally implemented by Stmt if the statement is aware of its own columns' types and can convert from any type to a driver Value.
ColumnConverter returns a ValueConverter for the provided column index.
Columns are numbered beginning at 1.
Columns returns an error if the rows are closed, or if the rows are from QueryRow and there was a deferred error.
Columns returns the column names.
Columns returns the names of the columns.
Columns terminated by horizontal (or "hard") tabs are not affected by this flag.
Combination of fork and exec, careful to be thread safe.
Combinations used in the manual.
Combine the Cpu and SubCpu (both uint32) into a uint64 to make sure there are not duplicate architectures.
CombinedOutput runs the command and returns its combined standard output and standard error.
Comma is the field delimiter.
Command describes the actions for a pprof command.
Command packages are referring to evicted packages from the package cache.
Command returns the Cmd struct to execute the named program with the given arguments.
CommandLine is the default set of command-line flags, parsed from os.Args.
CommandNode holds a command (a pipeline inside an evaluating action).
Commands are built into binaries and cannot be imported.
Commands describes the commands accepted by pprof.
Commands lists the available commands and help topics.
Commands that require no post-processing.
Commas and colons are elided.
Comment about block of constants.
Comment about block of variables.
Comment about constructor for exported type.
Comment about exported function.
Comment about exported interface.
Comment about exported method.
Comment about exported type.
Comment about internal constant.
Comment about internal function.
Comment about internal variable.
Comment about unexported method.
Comment about unexported type.
Comment before ConstOne.
Comment before VarOne.
Comment before exported field.
Comment before exported method.
Comment content does not correspond to any parsed structure or human-readable content, so the simplest and most secure policy is to drop content interpolated into comments.
Comment is something like +buildasdf not +build.
Comment markers (//, /*, and */), the first space of a line comment, and leading and trailing empty lines are removed.
Comment on line with ConstTwo.
Comment on line with VarTwo.
Comment on line with constThree.
Comment on line with exported embedded *field.
Comment on line with exported embedded field.
Comment on line with exported field.
Comment on line with exported method.
Comment on line with unexported embedded *field.
Comment on line with unexported embedded field.
Comment on line with unexported field.
Comment on line with unexported method.
Comment on line with varThree.
Comment out either this line or the next line and the program works
Comment with +build but not at beginning.
Comment, if not 0, is the comment character.
Comments do not nest and must start and end at the delimiters, as shown here.
Comments returns the list of comment groups in the comment map.
Comments that were associated with the old node are associated with the new node.
Commercial implementations of MPEG-1 and MPEG-2 video, including shareware, are subject to royalty fees to patent holders.
Commit commits the transaction.
Commit size must be strictly less than reserve size otherwise reserve will be rounded up to a larger size, as verified with VMMap.
Commit the release of mp.
Commit() should have closed the statement
Committed to parse or return error.
Committed to succeed.
Common case for escapes is 16 bits 000000000xxxEEEE where commonest cases for xxx encoding in-to-out pointer flow are 000, 001, 010, 011  and EEEE is computed Esc bits.
Common case, easier, most likely to be profitable
Common case: the write happened well before the response, so avoid creating a timer.
Common cases, without reflect.
Common confusing case: local interface type, remote concrete type.
Common element type comparison for TARRAY, TCHAN, TPTR32, TPTR64, and TSLICE.
Common flag sets for printf verbs.
Common functions called from rewriting rules
Common individual register masks
Common is the set of Unicode characters in script Common.
Common slices of register masks
Common uses should use the Sign function in this package directly.
Common uses should use the Sign* functions in this package.
Common values for tests.
CommonPrefixLen doesn't really make sense for IPv4, and even causes problems for common load balancing practices (e.g., https://golang.org/issue/13283).
CommonType holds elements of all types.
Commonly found format not specified by RFC 5322.
Communication error on send
Compact appends to dst the JSON-encoded src with insignificant space characters elided.
Compact liveness information by coalescing identical per-call-site bitmaps.
Comparable reports whether values of this type are comparable.
Comparable reports whether values of type T are comparable.
Compare against argp reported by caller.
Compare backwards from the end until the first unmatching character.
Compare compares types for purposes of the SSA back end, returning an ssa.Cmp (one of CMPlt, CMPeq, CMPgt).
Compare is included only for symmetry with package bytes.
Compare non-memory fields with field equality.
Compare numbers in sequence.
Compare reads values from two Walkers that run simultaneously, and returns true if t1 and t2 have the same contents.
Compare register with immediate and jump.
Compare returns an integer comparing two strings lexicographically.
Compare returns the result of the comparison x op y.
Compare the average delta to the tolerance level.
Compare the decompressed data.
Compare the two pix data, one 8x8 block at a time.
Compare the two, in SNG format, line by line.
Compare two Funcs for equivalence.
Compare two registers and jump.
Compare with our simple starter example.
Compare-to-golden test data was generated by the ZLIB example program at http://www.zlib.net/zpipe.c
CompareAndSwapInt32 executes the compare-and-swap operation for an int32 value.
CompareAndSwapInt64 executes the compare-and-swap operation for an int64 value.
CompareAndSwapPointer executes the compare-and-swap operation for a unsafe.Pointer value.
CompareAndSwapUint32 executes the compare-and-swap operation for a uint32 value.
CompareAndSwapUint64 executes the compare-and-swap operation for a uint64 value.
CompareAndSwapUintptr executes the compare-and-swap operation for a uintptr value.
Compared to the WebSafe, the idea is to reduce the color resolution by dicing the color cube into fewer cells, and to use the extra space to increase the intensity resolution.
Compared to the network form below, the changes are: 1.
Comparing the first field of a named struct can be done directly.
Comparison of padding rules with C printf.
Comparison predicate used for sorting basic blocks by their rpo in ascending order.
Compatibility note: crosscall2 actually takes four arguments, but it works to call it with three arguments when calling _cgo_panic.
Compatibility with original API: If the term is of type NodeField or NodeVariable, just put more fields on the original.
Compatibility: Any future changes to the package will endeavor to maintain compatibility with streams encoded using previous versions.
Compatible determines if two profiles can be compared/merged.
Compensate by skewing the addend.
Compensate for relocation size of 2
Compile .go file, import data from .o file, and write Go string version.
Compile all files in the directory in lexicographic order.
Compile compiles the regexp into a program to be executed.
Compile is the main entry point for this package.
Compile parses a regular expression and returns, if successful, a Regexp object that can be used to match against text.
Compile the expression once, usually at init time.
Compile, typically invoked as ``go tool compile,'' compiles a single Go package comprising the files named on the command line.
CompilePOSIX is like Compile but restricts the regular expression to POSIX ERE (egrep) syntax and changes the match semantics to leftmost-longest.
Compiled but not run.
Compiler Directives The compiler accepts compiler directives in the form of // comments at the beginning of a line.
Compiler can only refer to wrappers for non-blank methods.
Compiler flags of interest, ...
Compiler has an optimization to avoid that now.
Compiler is the name of the compiler toolchain that built the running binary.
Compiler rejected "bool(true)" as not a constant.
Compiles but does not run.
Compiles but need not run.
Compiling successfully means that bug has been avoided.
Complain about non-space byte on next call.
Complete ASN.1 DER content (CSR, signature algorithm and signature).
Complete ASN.1 DER content (certificate, signature algorithm and signature).
Complete computes the interface's method set.
Complete first store.
Complete is true if the prefix is the entire match.
Complete requires the type's embedded interfaces to be fully defined, but we do not define any
Complete returns the receiver.
Complete source file.
Completed top-level before the current byte.
Completer is a function for command-line autocompletion
Completing one pointer type might produce more to complete.
Complex circular arc cosine
Complex circular arc tangent
Complex circular cosine
Complex circular cotangent
Complex fmt used to leave the plus flag set for future entries in the array causing +2+0i and +3+0i instead of 2+0i and 3+0i.
Complex hyperbolic cosine
Complex hyperbolic sine
Complex hyperbolic tangent
Complex numbers are just a pair of floating-point numbers, real part first.
Complex numbers: exhaustively tested in TestComplexFormatting.
Complex returns v's underlying value, as a complex128.
Complex subexpressions (e.g. involving quantifiers) are not safe to factor because that collapses their distinct paths through the automaton, which affects correctness in some cases.
ComplexType is here for the purposes of documentation only.
Complexity (linearity) test is in maplinear.go.
Complexity of Stable Sorting Complexity of block swapping rotation Each Swap puts one new element into its correct, final position.
Complicating matters, taking the address of a slice or array element permits the C program to access all elements of the slice or array.
Component identifier.
Component specification, specified in section B.2.2.
Componentgen copies a composite value by moving its individual components.
Compression with dynamic Huffman codes
Computations on time.
Compute additional distance for the edge.
Compute and set the actual precision explicitly.
Compute and store the bases in gcMarkRootPrepare instead of the counts.
Compute avarinitany and avarinitall for entry to block.
Compute d before division since there may be aliasing of x.mant (via xadj) or y.mant with z.mant.
Compute days since the absolute epoch.
Compute digits of the fractional part.
Compute fields without lock.
Compute file 'go build' would have created.
Compute hash to make our evacuation decision (whether we need to send this key/value to bucket x or bucket y).
Compute hour, minute, second if needed.
Compute how many data and BSS root blocks there are.
Compute how much of the stack is currently in use and only shrink the stack if gp is using less than a quarter of its current stack.
Compute huge page containing v+n-1.
Compute huge page containing v.
Compute in Float64 to minimize cancellation error
Compute initial values for controls that are updated throughout the cycle.
Compute input allocation order.
Compute liveness info for values needing a slot.
Compute longest shared prefix with imports in this block.
Compute maximum common white prefix of all but the first, last, and blank lines, and replace blank lines with empty lines (the first line starts with /* and has no prefix).
Compute nanoseconds as 128-bit number.
Compute new len as j-i, cap as k-i.
Compute new scale matrix in current mouse position
Compute next cycle trigger ratio.
Compute number of components based on input image type.
Compute number of replacements.
Compute overall GC CPU utilization.
Compute postorder walk
Compute pre-shift by factoring power of 2 out of d.
Compute primary predecessors.
Compute quotient and remainder (q, r).
Compute quotient and remainder mod d.
Compute relaxation of idom entries
Compute sleep deadline.
Compute space needed for "U+" , number, " '", character, "'".
Compute substitutions we would like to do.
Compute the amount of scan work we need to do to make the balance positive.
Compute the determinant of a 4x4-matrix by the sum over all index permutations.
Compute the euclidean distance between math.Log2 and the FastLog2 implementation over the range of interest for heap sampling.
Compute the expected scan work remaining.
Compute the expected type.
Compute the heap distance remaining.
Compute the heap goal for this cycle
Compute the in-register flag value we want at the end of each block.
Compute the mutator assist ratio so by the time the mutator allocates the remaining heap bytes up to next_gc, it will have done (or stolen) the remaining amount of scan work.
Compute the next Fibonacci number, storing it in a.
Compute the ratio of in-use pages to sweep per byte allocated.
Compute the set of spill-movement candidates live at entry to exit blocks.
Compute the size _S of a Word in bytes.
Compute the size of a Word in bytes.
Compute the size of stack barrier array.
Compute the square root of 2 using Newton's Method.
Compute the total mark utilization goal and divide it among dedicated and fractional workers.
Compute total weight of current set of nodes.
Compute transitive closure of live values.
Compute upper and lower such that any decimal number between upper and lower (possibly inclusive) will round to the original floating point number.
Compute used register for reg
Compute width of the encoding taking into account the f.sharp and f.space flag.
Compute year, month, day if needed.
Computed and initialized by InitSizes.
Computed during livenessprologue using only the content of individual blocks:
Computed during livenesssolve using control flow information:
Computes a Hilbert matrix, its inverse, multiplies them and verifies that the product is the identity matrix.
Computes ptr+sizeof(*v.type)*index, where index is extended to ptrwidth type
Computes the effects of an instruction on a set of variables.
Concatenate 16 4-bit integers into a 64-bit number.
Concrete types implementing M method.
Concurrency and Computation: Practice and Experience 15(3-5), 2003.
Concurrent goroutines must not be able to read lock the mutex.
Concurrent marking happens through four different mechanisms.
Concurrent sweep needs to sweep all of the in-use pages by the time the allocated heap reaches the GC trigger.
Cond implements a condition variable, a rendezvous point for goroutines waiting for or announcing the occurrence of an event.
Cond is handled specially for this instruction.
Condition should never trigger.
Conditional branch based on presence or absence of prefixes.
Conditional branches.
Conditional operators, like EQ, NE, etc.
Config holds an image's color model and dimensions.
Config is the global color table (palette), width and height.
Config may be changed after calling NewUnstartedServer and before Start or StartTLS.
Configuration (does not change after initialization)
ConfigureServer adds HTTP/2 support to a net/http Server.
ConfigureServer must be called before s begins serving.
ConfigureTransport configures a net/http HTTP/1 Transport to use HTTP/2.
Conj returns the complex conjugate of x.
Conn is a connection to a database.
Conn is a generic stream-oriented network connection.
Conn is assumed to be stateful.
Conn is the connection that was obtained.
Conn, a convenient packaging of Reader, Writer, and Pipeline for use with a single network connection.
ConnPool optionally specifies an alternate connection pool to use.
ConnState specifies an optional callback function that is called when a client connection changes state.
Connect an idle TCP connection to this server before we run our real tests.
Connect the blocks together and specify control values.
Connect to listener to retrieve file and verify digest matches expected.
Connect to successors.
Connect to the remote SMTP server.
Connect to the server, authenticate, set the sender and recipient, and send the email all in one step.
Connect wraps syscall.Connect.
ConnectDone is called when a new connection's Dial completes.
ConnectEx windows API does not support connectionless sockets.
ConnectEx windows API requires an unconnected, previously bound socket.
ConnectEx wraps syscall.ConnectEx.
ConnectStart is called after a Dial with the results.
ConnectStart is called before a Dial.
ConnectStart is called when a new connection's Dial begins.
Connecting to tons of addresses should not trip the deadline.
Connecting with a custom root-certificate set.
Connection Name:  Bluetooth Network Connection Network Adapter:  Bluetooth Device (Personal Area Network) Physical Address: N/A Transport Name:   Hardware not present
Connection Name:  VMware Network Adapter VMnet8 Network Adapter:  VMware Virtual Ethernet Adapter for VMnet8 Physical Address: Disabled Transport Name:   Disconnected
Connection Name:  Wireless Network Connection Network Adapter:  Wireles WLAN Card Physical Address: XX-XX-XX-XX-XX-XX Transport Name:   Media disconnected
Connection already in progress
Connection reset by peer
ConnectionError is an error that results in the termination of the entire connection.
ConnectionState records basic TLS details about the connection.
ConnectionState returns basic TLS details about the connection.
Connections begin at this state and then transition to either StateActive or StateClosed.
Connections transition from StateIdle to either StateActive or StateClosed.
Consecutive comments may be used to indicate multiple errors for the same token position.
Consecutive groups of suffixes in sa are labeled as sorted groups or unsorted groups.
Consecutive groups of suffixes with identical first h characters are an unsorted group.
Consequently, if no field has a tag, tags may be nil.
Consequently, the corresponding field in the AST (ast.FuncDecl.Recv) field is not restricted to one entry.
Conservative approach is to assume it has a pointer.
Conservative approach: assume pointer.
Conservative default for cross-compilation.
Consider adjusting the logic here a bit.
Consider all content up to any end tag.
Consider removing this code.
Consider that you want to parse out data between parens in "foo()bar", you find the indices and convert the subslice to string.
Consider the following example where the mutator writes into a slot and then loads the slot's mark bit while the GC thread writes to the slot's mark bit and then as part of scanning reads the slot.
Consider the following situation.
Const and var declarations must not have initialization cycles.
Const block where first entry is unexported.
ConstInt returns an int constant representing its argument.
Constant flag values.
Constant folding computes the exact constant value (constant.Value) for every expression (ast.Expr) that is a compile-time constant.
Constant time table access
Constant values are stored in the aux or auxint fields.
Constant values have a non- nil Value.
ConstantTimeCompare returns 1 iff the two slices, x and y, have equal contents.
ConstantTimeSelect returns x if v is 1 and y if v is 0.
Constants Comment about exported constant.
Constants and variables behave the same.
Constants describing the Accuracy of a Float.
Constants for multiplication: four random odd 32-bit numbers.
Constants for multiplication: four random odd 64-bit numbers.
Constants for readRequest's deleteHostHeader parameter.
Constants plundered from strconv/atof_test.go.
Constants plundered from strconv/testfp.txt.
Constants tied to ExportedType.
Constants tied to unexportedType.
Constants with an imported type that needs to be propagated.
Constants: The hexadecimal values are the intended ones for the following constants.
ConstraintViolationError results when a requested usage is not permitted by a certificate.
Constraints may appear in any kind of source file (not just Go), but they must appear near the top of the file, preceded only by blank lines and other line comments.
Construct a call stub in stub that calls symbol targ via its PLT entry.
Construct a disembodied instruction.
Construct a gcc struct matching the gc argument and result frame.
Construct a gcc struct matching the gc argument frame.
Construct a new PCDATA instruction associated with and for the purposes of covering an existing instruction.
Construct it by chopping the same number of path elements (actually the same number of bytes) from parent's import path and then append /vendor/path.
Construct list of node names for sample.
Construct query of addresses to symbolize.
Construct random seek arguments.
Construct search path to examine
Construct the global liveness state.
Construct type to represent an array of BucketSize keys
Construct type to represent an array of BucketSize values
Construct waiting list in lock order.
Constructing a temporary slice on the stack should not require any write barriers.
Constructors are printed by typeSummary, below, and so can be suppressed here.
Constructs a complete CFG, solves for the liveness of pointer variables in the function, and emits a runtime data structure read by the garbage collector.
Constructs a control flow graph from a sequence of instructions.
Constructs a new basic block containing a single instruction.
Constructs a new liveness structure used to hold the global state of the liveness computation.
Consult caseOrbit table for special cases.
Consult the span table to find the block beginning.
Consume a comment and return it and the line on which it ends.
Consume a group of adjacent comments, add it to the parser's comments list, and return it together with the line at which the last comment in the group ends.
Consume disp16 if present.
Consume disp32 if present.
Consume disp8 if present.
Consume the "if" token.
Consume the body, or, which will also lead to us reading the trailer headers after the body, if present.
Consume the maximum number of characters possible, with the consumed characters matching one of the named references.
Consumer: receives from myc.
Containing basic block
Contains 0 and MaxRune.
Contains all the special cased Latin-1 chars.
Contains newline inside raw quote.
Contains reports whether a comma-separated list of options contains a particular substr flag.
Contains reports whether subslice is within b.
Contains reports whether substr is within s.
Contains reports whether the network includes ip.
Contains returns true if pos is within the scope's extent.
Contains transfer encodings from outer-most to inner-most.
ContainsAny reports whether any Unicode code points in chars are within s.
ContainsAny reports whether any of the UTF-8-encoded Unicode code points in chars are within b.
ContainsRune reports whether the Unicode code point r is within b.
ContainsRune reports whether the Unicode code point r is within s.
Content-Length in response to a HEAD request
Content-Length in response to a HEAD request with HTTP/1.1
ContentLength records the length of the associated content.
Contention profile options
Contents make it to memory, lose track.
Contents of gopher.txt: Gopher names: George Geoffrey Gonzo Contents of todo.txt: Get animal handling license.
Context register for closures.
Context returns the request's context.
Context's methods may be called by multiple goroutines simultaneously.
ContextClientTrace returns the ClientTrace associated with the provided context.
Continuation frames are handled elsewhere.
Continuation of the (assembly) sigtramp() logic.
Continue calculating one level up.
Continue with the next sequential argument.
Continue with the next statement.
Continuing the example above, the package list would have to appear before -myflag, but could appear on either side of -v.
Control can also be live.
Control flow analysis.
Control flow statements are easy.
Convconst converts constant node n to type t and places the result in con.
Convenience functions for creating new exported variables.
Convenience map initializer
Convenience wrappers for common cases Ints sorts a slice of ints in increasing order.
Convenience wrappers for common cases.
Conveniently this is the layout of both runtime.method and runtime.imethod.
Conventionally, code zero indicates success, non-zero an error.
Conventions Upper-case for power series.
Conversely, if any flag is explicitly set to false, only those tests are disabled.
Conversely, if there exists an initialization cycle involving a variable in the program, the tree walk will reach a cycle involving that variable.
Conversion between RGB and Y'CbCr is lossy and there are multiple, slightly different formulae for converting between the two.
Conversion between identical interfaces.
Conversion of a uintptr back to Pointer is not valid in general.
Conversion of debug output to Go types.
Conversion type-checks the conversion T(x).
Conversions, field access, slice all preserve the input value.
Conversions: signed extensions, zero (unsigned) extensions, truncations
Convert 3x 8bit source bytes into 4 bytes
Convert 4x 6bit source bytes into 3 bytes
Convert C.ulong to C.unsigned long, etc.
Convert GNU extensions to use PAX headers.
Convert a list of IP strings into TCPAddrs.
Convert a literal into a literal token.
Convert a reference string to URL-encoding
Convert a reference string to raw, unpadded format
Convert args to C form.
Convert array of coefficients, constant term first to a (finite) power series
Convert back to uintptr.
Convert between function type strings and lists of types.
Convert convenient dnsMsg into wire-like dnsHeader.
Convert file name to replace: turn go into cgo.
Convert from a quality rating to a scaling factor.
Convert from alpha-premultiplied to non-alpha-premultiplied.
Convert from bytes to colors.
Convert from colors to bytes.
Convert from float64 to int32.
Convert from image.Image (which is alpha-premultiplied) to PNG's non-alpha-premultiplied.
Convert from non-premultiplied color to pre-multiplied color.
Convert from scan bytes back to work.
Convert heap bitmap to pointer bitmap.
Convert i to a hexadecimal string.
Convert integer to decimal string
Convert integer to decimal string.
Convert it to the appropriate underlying type, such as *syscall.Rusage on Unix, to access its contents.
Convert it to the appropriate underlying type, such as syscall.WaitStatus on Unix, to access its contents.
Convert mantissa into decimal representation.
Convert node n for assignment to type t.
Convert raw string to the prefix that will be used in the symbol table.
Convert returns the palette color closest to c in Euclidean R,G,B space.
Convert returns the value v converted to type t.
Convert tests not to return syntax errors.
Convert the AST-based IR to the SSA-based IR
Convert the YCbCr part of the YCbCrK to RGB, invert the RGB to get CMY, and patch in the original K.
Convert the point to affine form.
Convert the slice of pointers into a slice of values
Convert the source directory into a more useful path.
Convert the table above.
Convert the tables above.
Convert the uint64 to a signed integer typeId
Convert these to all hexadecimal fe80::5efe:c0a8:8c01 for later string comparisons.
Convert to Go struct, being careful about alignment.
Convert to absolute paths.
Convert to driver subset type
Convert to pointer so it should hold the object live across GC call.
Convert unsigned and check range.
Convert unsigned integer to decimal string
Convert unsigned integer to decimal string.
Convert words of q to base b digits in s.
ConvertValue converts a value to a driver Value.
ConvertibleTo reports whether a value of the type is convertible to type u.
ConvertibleTo reports whether a value of type V is convertible to a value of type T.
Converting a Pointer to a uintptr creates an integer value with no pointer semantics.
Converting a Pointer to a uintptr produces the memory address of the value pointed at, as an integer.
Converting constants between types must introduce rounding.
Converting the plaintext number to bytes will strip any leading zeros so we may have to left pad.
Converts a Go function to a function pointer conforming to the cdecl calling convention.
Converts a Go function to a function pointer conforming to the stdcall calling convention.
Cookie returns the named cookie provided in the request or ErrNoCookie if not found.
Cookies implements the Cookies method of the http.CookieJar interface.
Cookies parses and returns the HTTP cookies sent with the request.
Cookies parses and returns the cookies set in the Set-Cookie headers.
Cookies returns the cookies to send in a request for the given URL.
Copied and simplified from ../../x86/x86asm/ext_test.go.
Copied and simplified from ../../x86/x86asm/objdumpext_test.go.
Copied from package net.
Copied from strings to avoid a dependency.
Copied from the C++ snappy implementation:
Copies attributes by value.
Copies gp's stack to a new stack of a different size.
Copies of iota ONONAME nodes are assigned the current value of iota_.
Copies src's children into dst.
Coptic is the set of Unicode characters in script Coptic.
Copy "HTTP_FOO_BAR" variables to "Foo-Bar" Headers
Copy .h files named for goos or goarch or goos_goarch to names using GOOS and GOARCH.
Copy a single uncompressed data block from input to output.
Copy all immediate files and testdata directories between the package being tested and the source root.
Copy any cycle location to a temp register.
Copy argument frame into Values.
Copy backward, being careful not to move dstp/srcp out of the array they point into.
Copy base form to other variants
Copy binaries into tool binary directory.
Copy body and comments, as the originals may be used elsewhere.
Copy copies from src to dst until either EOF is reached on src or an error occurs.
Copy copies the contents of src into dst until either dst has been filled or src has been exhausted.
Copy creates a duplicate of security identifier sid.
Copy current seq into the timer arg.
Copy data from shared object.
Copy data into place.
Copy declaration slice, rewriting the ExampleX function to main.
Copy does a deep copy of the Node and all its components.
Copy down to beginning of buffer, inserting newlines.
Copy forward, being careful not to move dstp/srcp out of the array they point into.
Copy from 1-bit ptrmask into 2-bit bitmap.
Copy from a register that v is already in.
Copy from a source of v, register preferred.
Copy full pieces and fragment in.
Copy headers to rw's headers, after we've decided not to go into handleInternalRedirect, which won't want its rw headers to have been touched.
Copy in receiver and rest of args.
Copy inferences and edits from e1 back into e.
Copy inputs into args.
Copy key into new temp and do not clean it (it persists beyond the statement).
Copy leftover output from last decode.
Copy makes a fully independent copy of a profile.
Copy map lazily: it's time.
Copy non-overlapping section after destination position.
Copy of math/sqrt.go, here for use by ARM softfloat.
Copy of mheap.allspans for marker or sweeper.
Copy out for statistics table.
Copy over all fields except the field "data" from the generic bucket.
Copy phi ops into new schedule.
Copy pointers from mask into program.
Copy position information from old expr into new expr, in case expression being replaced is first on line.
Copy possibly overlapping section before destination position.
Copy result so future changes to the map won't change the underlying value.
Copy results back into argument frame.
Copy return values out of args.
Copy returns a copy of the Tree.
Copy returns a new Regexp object copied from re.
Copy returns a shallow copy of the Type.
Copy returns the number of elements copied, which will be the minimum of len(src) and len(dst).
Copy sets z to x, with the same precision, rounding mode, and accuracy as x, and returns z.
Copy src triple into base, len, cap.
Copy symbol at runtime
Copy the File, as it may be used elsewhere.
Copy the FuncDecl, as it may be used elsewhere.
Copy the buf, since ParseCertificate does not create its own copy.
Copy the input file to the output file, decrypting as we go.
Copy the input file to the output file, encrypting as we go.
Copy the interface value to the target.
Copy the last block of ciphertext in preparation as the new iv.
Copy the length to be a prefix of the message.
Copy the nil interface value to the target.
Copy the part of the stack the sudogs point in to while holding the lock to prevent races on send/receive slots.
Copy the stack (or the rest of it) to the new location
Copy the suffix chain into output and then write that to w.
Copy the test binary to a location that a non-root user can read/execute after we drop privileges
Copy the unmatched characters after the last match.
Copy the unmatched characters before this match.
Copy the values from channel 'in' to channel 'out', removing those divisible by 'prime'.
Copy these hooks so we don't race on the postPendingDial in the goroutine we launch.
CopyBuffer is identical to Copy except that it stages through the provided buffer (if one is required) rather than allocating a temporary one.
CopyN copies n bytes (or until an error) from src to dst.
CopyToken returns a copy of a Token.
Copying Garbage Collection without stopping the world.
Copying locks Flag: -copylocks Locks that are erroneously passed by value.
Copyright (C) 1996, MPEG Software Simulation Group.
Copyright (c) 2001 David E.
Copyright (c) 2002 by Lucent Technologies.
Copyright 2009 The Go Authors.
Copyright 2010 The Go Authors.
Copyright 2011 The Go Authors.
Copyright 2012 The Go Authors.
Copyright 2013 The Go Authors.
Copyright 2014 The Go Authors.
Copyright 2015 The Go Authors.
Copyright 2016 The Go Authors.
Copysign returns a value with the magnitude of x and the sign of y.
Core of the Tonelli-Shanks algorithm.
Correct import paths, but the packages don't exist.
Correct import paths.
Correct patterns If a regexp pattern is correct, all split regexps need to be correct as well.
Correct queueing behavior is tested elsewhere, since After and AfterFunc share the same code.
Correct the type so that the shift result is of integer type.
Correct usage but still a race
Correctly reached EOF.
Correlate the symbols from the binary with the profile samples.
Corrupt DNS SRV reply, with its final RR having a bogus length (perhaps it was truncated, or it's malicious) The mutation is the capital "FF" below, instead of the proper "21".
Corrupt foo.txt's final crc32 byte, in both the file header and TOC.
Corrupt one of the CRC32s in the data descriptor:
Corrupt record: we only have a header.
Cos returns the cosine of the radian argument x.
Cosh returns the hyperbolic cosine of x.
Cosh(x) is computed from the exponential func for all arguments.
Cot returns the cotangent of x.
Could avoid reloading registers on each iteration if we know the cgen_wb is not going to use a write barrier.
Could be Float32 or Float64
Could be parenthesized expression or (R).
Could be smarter but this one optimization is enough for now, since ...
Could check that the high byte is zero but it's not worth it.
Could determine if that is the case and then show those methods in an appropriate section.
Could do the same for slice except that we need to use the real index for the bounds checking.
Could do write barrier check around entire copy instead of each element.
Could generate code to test for forward/backward copy, but instead just copy to a temporary location first.
Could happen for an architecture having other registers prefixed by R
Could have a small cache.
Could make a table but not worth it.
Could not evict entry.
Could parallelize, by assigning to text and then letting threads copy down, but probably not worth it.
Could use int64 hw for int32.
Could work harder to calculate message size, but this is far more than we need and not big enough to hurt the allocator.
Count and mark instructions to annotate.
Count counts the number of non-overlapping instances of sep in s.
Count integral digits: there are at most 10.
Count is encoded in a varint in the next bytes.
Count leading (high order) zeroes (returns 0-16)
Count leading zeroes (returns 0-32)
Count leading zeroes (returns 0-64)
Count number of codes of each length, compute min and max length.
Count number of moves required to move components.
Count occurrences in s of any bytes in t.
Count of queued names for current level and the next.
Count of successive empty tokens.
Count parameter and local (auto) syms
Count returns the number of execution stacks currently in the profile.
Count text symbols and attach frame sizes, parameters, and locals to them.
Count the adjacent cells that are alive.
Count the number of adjacent dashes or pluses.
Count the number of free objects in this span.
Count the number of package docs, comments and declarations across all package files.
Count trailing (low  order) zeroes (returns 0-16)
Count trailing zeroes (returns 0-32)
Count trailing zeroes (returns 0-64)
Counted string: 1 byte length.
Counter is 0, no need to wait.
Counting the 4 entries in hb not yet written to memory, there are more entries than possible pointer slots.
Cover is also used by 'go test -cover' to rewrite the source code with annotations to track which parts of each function are executed.
Cover records information about test coverage checking.
CoverBlock records the coverage data for a single basic block.
CoverVar holds the name of the generated coverage variables targeting the named file.
Covered returns a string describing which packages are being tested for coverage.
Crash now instead of silently executing the garbage collection or stack copy incorrectly and setting up for a mysterious crash later.
Crash to find call stack.
Crashes 6g, 8g https://golang.org/issue/238
Create P goroutines and wait until they all run.
Create a CSPRNG that xors a stream of zeros with the output of the AES-CTR instance.
Create a ServerHello that selects a different cipher suite than the sole one that the client offered.
Create a YCbCr image m, whose bounds are r translated by (delta.X, delta.Y).
Create a buffer to write our archive to.
Create a buffer with space for at least two copies of the pause history tracked by the runtime.
Create a bunch of busy goroutines to load all Ps.
Create a custom split function by wrapping the existing ScanWords function.
Create a decoder and receive a value.
Create a decoder and receive some values.
Create a dummy entry in the type list.
Create a dummy file to find out.
Create a fake "in use" span and free it, so that the right coalescing happens.
Create a fake mapping to hold the user option, and associate all samples to it.
Create a good hash for the new string by using the FNV-1 hash's mixing function to combine the old hash and the new "*".
Create a goroutine blocked before tracing.
Create a goroutine blocked in syscall before tracing.
Create a new ArrayType with unknown length (-1) and finish setting it up after analyzing the literal.
Create a new Name for this Ref which causes the variable to be declared in Go land.
Create a new channel.
Create a new deferred function fn with siz bytes of arguments.
Create a new entry in the .init_array section that points to the library initializer function.
Create a new g running fn with narg bytes of arguments starting at argp and returning nret bytes of results.
Create a new g running fn with siz bytes of arguments.
Create a new goroutine to get a default-size stack segment.
Create a new list and put some numbers in it.
Create a new ptrType starting with the description of an *unsafe.Pointer.
Create a new tar archive.
Create a new template and parse the letter into it.
Create a new zip archive.
Create a priority queue, put the items in it, and establish the priority queue (heap) invariants.
Create a random, but compressible stream.
Create a slice of formatted names for a location.
Create a split function that delivers a little data, then a predictable error.
Create a template, add the function map, and parse the text.
Create a temporary file.
Create a temporary we can take the address of and read.
Create a tree of contexts.
Create a type, because it is typically *T or *p.T and we might care about that type.
Create absolute path for file, so that it will be used in error messages and recorded in debug line number information.
Create adds a file to the zip file using the provided name.
Create all the blocks and values.
Create an AES-CTR instance to use as a CSPRNG.
Create an archive with a large linkname
Create an archive with a large name
Create an archive with a path that failed to split with USTAR extension in previous versions.
Create an archive with an xattr
Create an archive with non ascii.
Create an ast.CommentMap from the ast.File's comments.
Create an encoder and send a value.
Create an encoder and send some values.
Create an extra M for callbacks on threads not created by Go.
Create an incomplete template t0.
Create and seed the generator.
Create any remaining sanitizers.
Create bin directory.
Create closure in the form of a composite literal.
Create command shorthand.
Create creates the file named name and returns a Writer for that file.
Create creates the named file with mode 0666 (before umask), truncating it if it already exists.
Create direct pointer mask by turning each 1 bit in elem into count 1 bits in larger mask.
Create dotted edges to bridge any broken connections.
Create extra goroutine locked to extra m.
Create in-memory network connection, send message to server.
Create information about each of the levels.
Create map containing class and all fold-equivalent chars.
Create maps for easy lookup of instruction names etc.
Create new connection from rwc.
Create new map with old contents plus new entry.
Create new temporary directory and arrange to clean it up.
Create object directory.
Create object file, write header.
Create our input and output channels.
Create package directory.
Create program that emits one element and then repeats to make the array.
Create some templates and clone the root.
Create some templates.
Create start element.
Create temporary buffer for result string on stack.
Create temporary buffer for slice on stack.
Create temporary buffer for string on stack.
Create the AST by parsing src.
Create the LineReader.
Create the directory for the .a files.
Create the glink resolver if necessary
Create the package if we have parsed both the package path and package name.
Create the symlink farm using relative paths.
Create tool directory.
Create top-level function
Create top-level function.
Create variable for each name being declared with this type.
Create worker goroutines that handle incoming requests using the latest config value.
CreateCRL returns a DER encoded CRL, signed by this Certificate, that contains the given list of revoked certificates.
CreateCertificate creates a new certificate based on a template.
CreateCertificateRequest creates a new certificate based on a template.
CreateFormField calls CreatePart with a header using the given field name.
CreateFormFile is a convenience wrapper around CreatePart.
CreateHeader adds a file to the zip file using the provided FileHeader for the file metadata.
CreateKey creates a key named path under open key k.
CreateKey returns the new key and a boolean flag that reports whether the key already existed.
CreatePart creates a new multipart section with the provided header.
CreateSymbolicLink is not supported before Windows Vista
Created based on output of `cgo -cdefs defs_darwin.go` and Darwin/ARM specific header (mainly mcontext and ucontext related stuff)
Created by cgo - DO NOT EDIT.
Created by cgo -cdefs and then converted to Go by hand ../cmd/cgo/cgo -cdefs defs_linux.go defs1_linux.go defs2_linux.go
Created by cgo -godefs - DO NOT EDIT cgo -godefs types_darwin.go +build arm,darwin
Creates a SyntaxError with the current line number.
Creates a new system thread without updating any Go state.
Creates a slightly optimized copy of the original Prog that cleans up some Prog idioms that block valid onepass programs
Creating a slice causes the runtime to repeat a bitmap, which exercises a different path from making the compiler repeat a bitmap for a small array or executing a repeat in a GC program.
Credential holds user and group identities to be assumed by a child process started by StartProcess.
Credit for this trick goes to Ken.
Crit logs a message with severity LOG_CRIT, ignoring the severity passed to New.
Cross mount point (not really error)
CryptBlocks can work in-place if the two arguments are the same.
CryptBlocks encrypts or decrypts a number of blocks.
CryptoAPI can find alternative validation paths so we don't perform this test with system validation.
Cs is the set of Unicode characters in category Cs.
Ctype describes the constant kind of an "ideal" (untyped) constant.
Ctz16 counts trailing (low-order) zeroes, and if all are zero, then 16.
Ctz32 counts trailing (low-order) zeroes, and if all are zero, then 32.
Ctz64 counts trailing (low-order) zeroes, and if all are zero, then 64.
Ctz8 counts trailing (low-order) zeroes, and if all are zero, then 8.
Cumulative line number across source files.
Cuneiform is the set of Unicode characters in script Cuneiform.
Current file is a GNU sparse file.
Current file is a PAX format GNU sparse file.
Current number of alive object in the heap and amount of alive heap memory are calculated by scanning all spans.
Current output position in buffer
Current returns the current user.
Current setting is 16 bytes, which relates to 2x worst case memory wastage (when all but one subobjects are unreachable).
Current working directory.
Currently 4 int32's are combined into a 16-byte block, ensure that most of them are finalized.
Currently build mode shared forces external linking mode, and external linking mode forces an import of runtime/cgo (and math on arm).
Currently build modes c-shared, pie, and -linkshared force external linking mode, and external linking mode forces an import of runtime/cgo.
Currently cputicks() is used in blocking profiler and to seed fastrand1().
Currently it only supports UTF-8 and ASCII.
Currently only recognizes "force", which causes it to overwrite any existing data.
Currently only the responder role is supported.
Currently there are no instructions which write to multiple registers in copyu.
Currently this includes only .onion and .local names, per RFC 7686 and RFC 6762, respectively.
Currently this is the bytes of heap scanned.
Currently this is used only for func/file:line info after tracing session, so we assume single-threaded access.
Currently this must be zero.
Currently this re-prepares each time.
Currently this test doesn't look like it accomplishes this goal.
Currently we never generate a From3 with anything other than a constant in it.
Currently we never generate three register forms.
Currently, that's just size and the GC program.
Currently, the reader code doesn't verify the fileheader and TOC's crc32 match if they're both non-zero and only the second line above, the TOC, is what matters.
Curried method of interface value.
Curried method of pointer to pointer.
Curried method of pointer.
Curried method of value.
CurveID is the type of a TLS identifier for an elliptic curve.
CurveParams contains the parameters of an elliptic curve and also provides a generic, non-constant time implementation of Curve.
CurvePreferences contains the elliptic curves that will be used in an ECDHE handshake, in preference order.
Custom error messages.
Custom example of RFC 2047 "B"-encoded ISO-8859-1 address.
Custom example of RFC 2047 "B"-encoded ISO-8859-15 address.
Custom example of RFC 2047 "B"-encoded UTF-8 address.
Custom example with "." in name.
Custom locations can be added for other binary types as needed, like we did for ELF.
CustomFlags indicates that the command will do its own flag parsing.
Cut off 100-year cycles.
Cut off 4-year cycles.
Cut off years within a 4-year cycle.
Cut this off safely by making minLevel sticky: once you get that deep, you cannot go down any further but you also cannot go up any further.
Cut, pasted, tr-and-awk'ed from tables in http://dwarfstd.org/doc/Dwarf3.pdf Table 18
Cuts the root set down a bit (g0 stacks are not scanned, and we don't need to scan gc's internal state).
Cvt32Fto64U, branchy code expansion instead
Cvt64Fto64U, branchy code expansion instead float
Cvt64Uto32F, branchy code expansion instead
Cvt64Uto64F, branchy code expansion instead
Cycle errors are reported when type-checking types.
Cycles in the dominator graph can only happen in an unreachable cycle.
Cypriot is the set of Unicode characters in script Cypriot.
Cyrillic is the set of Unicode characters in script Cyrillic.
D (should not see this)
D mod (P-1) (or mod Q-1)
DB is a database handle representing a pool of zero or more underlying connections.
DB should deal with this situation without leaking the connection.
DBStats contains database statistics.
DC D4: xed says 'fcom st0, st4' but that instruction is D8 D4.
DC components are delta-encoded.
DD C8: libopcodes says FNOP but the Intel manual is clear FNOP is only D9 D0.
DD C9, DF C9: xed says 'fxch st0, st1' but that instruction is D9 C9.
DDDField returns the slice ...
DDDFieldType contains Type fields specific to TDDDFIELD types.
DE D4: xed says 'fcomp st0, st4' but that instruction is D8 D4.
DER demands that "If the encoding represents the boolean value TRUE, its single contents octet shall have all eight bits set to one." Thus only 0 and 255 are valid encoded values.
DER encoded SubjectPublicKeyInfo.
DER is used in X.509 because it's fast to parse and, unlike BER, has a unique encoding for every object.
DER requires that lengths be minimal.
DESCRIPTION: Returns radian angle between -pi/2 and +pi/2 whose tangent is x.
DF D4: xed says 'fstp st4, st0' but that instruction is DD D4.
DFS on the dominator tree.
DIVW will leave unpredicable result in higher 32-bit, so always use DIVD/DIVDU.
DIVW will leave unpredictable result in higher 32-bit, so always use DIVD/DIVDU.
DLLError describes reasons for DLL load failures.
DLLName returns DLL function name for function f.
DLLName returns DLL name for function f.
DLLs return dll names for a source set src.
DNS responses (resource records).
DNSConfigError represents an error reading the machine's DNS configuration.
DNSDone is called after a DNS lookup completes (or fails).
DNSDone is called when a DNS lookup ends.
DNSDoneInfo contains information about the results of a DNS lookup.
DNSError represents a DNS lookup error.
DNSStart is called when a DNS lookup begins.
DNSStart is called with the hostname of a DNS lookup before it begins.
DNSStartInfo contains information about a DNS request.
DO NOT CHANGE THIS DATA TO FIX BUILDS.
DO NOT EDIT THIS FILE.
DO NOT add 'checkout master' here.
DO NOT gofmt THIS FILE.
DUFFZERO consists of repeated blocks of 4 MOVUPSs + ADD, See runtime/mkduff.go.
DWARF 4 defines four *ptr classes, but doesn't distinguish them in the encoding.
DWARF debug info is split into a sequence of compilation units.
DWARF debug information entry parser.
DWARF returns DWARF debug data for the file, if any.
DWARF returns the DWARF debug information for the Mach-O file.
DWARF type information structures.
DWARF version 4 distinguishes attribute value classes more finely than previous versions of DWARF.
DWARF version number.
DWAttr.data is copied as pointer only.
DX is the port, but libopcodes prints it as if it were a memory reference.
Darwin and FreeBSD can't read or write 2GB+ at a time, even on 64-bit systems.
Darwin does the same, see: https://golang.org/issue/2603
Darwin external linker on arm64 and on amd64 and arm in c-shared/c-archive buildmode complains about absolute relocs in __TEXT, so if the section is not executable, put it in __DATA segment.
Darwin kernels require 32-bit aligned access to routing facilities.
Darwin pops up annoying dialog boxes if programs try to do their own DNS requests.
Darwin/Android ARM64 fails with internal linking.
Darwin/arm64 only supports external linking
Dash is the set of Unicode characters with property Dash.
Data blocks and strings are both stored as an integer followed by that many bytes.
Data buffer being decoded.
Data directory, also the package directory for the test.
Data format, other than byte order.
Data is processed before segtext, because we need to see all symbols in the .data and .bss sections in order to generate garbage collection information.
Data issues a DATA command to the server and returns a writer that can be used to write the mail headers and body.
Data layout and relocation.
Data matching the table in section 6.
Data must be a fixed-size value or a slice of fixed-size values, or a pointer to such data.
Data must be a pointer to a fixed-size value or a slice of fixed-size values.
Data read from the web.
Data reads and returns the contents of the ELF section.
Data reads and returns the contents of the Mach-O section.
Data reads and returns the contents of the PE section s.
Data reads and returns the contents of the Plan 9 a.out section.
Data reads and returns the contents of the segment.
Data represents the DWARF debugging information loaded from an executable file (for example, an ELF or Mach-O executable).
Data returns the frame's data octets, not including any padding size byte or padding suffix bytes.
Data sorting criteria.
Data written to the returned writer will be encoded and then written to w.
Data written to the returned writer will be encoded using enc and then written to w.
DataErrReader changes the way errors are handled by a Reader.
DataErrReader wraps a Reader and changes its behavior so the final error is returned along with the final data, instead of in the first call after the final data.
DataLength field should be sum of all TXT fields.
DataOffset returns the offset of the file's possibly-compressed data, relative to the beginning of the zip file.
Date panics if loc is nil.
Date parses the Date header field.
Date returns a time that is correct in one of the two zones involved in the transition, but it does not guarantee which.
Date returns the Time corresponding to yyyy-mm-dd hh:mm:ss + nsec nanoseconds in the appropriate zone for that time in the given location.
Date returns the year, month, and day in which t occurs.
Day returns the day of the month specified by t.
Dead stores are those which are unconditionally followed by another store to the same location, with no intervening load.
Deadline hasn't arrived.
Deadline is the absolute point in time after which dials will fail.
Deadline returns the time when work done on behalf of this context should be canceled.
DeadlineExceeded is the error returned by Context.Err when the context's deadline passes.
Deadlines can be set and enforced in both Read and Write.
Deal with raw values.
Deal with the ANY type.
Dealing with memory ordering:
Debian/Ubuntu/Gentoo etc.
Debug causes the writer to print a debugging trace to out during future calls to methods like Ptr, Advance, and End.
Debug logs a message with severity LOG_DEBUG, ignoring the severity passed to New.
Debug prints a human-readable representation of the gob data read from r.
DebugData returns any debug data in the GOAWAY frame.
Debugging Information Entries and their attributes.
Debugging support: -cpuprofile filename Write cpu profile to the specified file.
December 29 to 31 are in week 1 of next year if they are after the last Thursday of the year and December 31 is a Monday, Tuesday, or Wednesday.
December, last month, 31 days
Decide if we need a phi or not.
Decide if we need to grow
Decide if we need to increment, or "round up", the (unsigned) mantissa.
Decide on registers for phi ops.
Decide whether the given rune is in the XML Character Range, per the Char production of http://www.xml.com/axml/testaxml.htm, Section 2.2 Characters.
Decide which byte the padding should be filled with.
Decimal number literals
Declaration here to give assembly routines correct stack maps for arguments.
Declarations for runtime services implemented in C or assembly that are only present on 32 bit systems.
Declarations for runtime services implemented in C or assembly.
Declare a couple of templates first.
Declare a result struct.
Declare a user-defined boolean flag type.
Declare a user-defined flag type.
Declare all variables at top in case any declarations require heap allocation (e.g., err1).
Declare all variables at top in case any declarations require heap allocation (e.g., errbuf).
Declare and initialize variable holding receiver.
Declare builtins for testing.
Declare slice so that gc can see the base pointer in it.
Declare slice so that the garbage collector can see the base pointer in it.
Declare the coverage struct as a package-level variable.
Declare variable holding addresses taken from closure and initialize in entry prologue.
Declaring a var avoids inlining at the call site.
Decode (receive) and print the values.
Decode (receive) the value.
Decode CU's line table.
Decode a single Huffman block from f.
Decode and see error.
Decode chunk into p, or d.out and then p if p is too small.
Decode decodes an RFC 2047 encoded-word.
Decode decodes an entire block.
Decode decodes an image that has been encoded in a registered format.
Decode decodes src into DecodedLen(len(src)) bytes, returning the actual number of bytes written to dst.
Decode decodes src into dst, returning both the number of bytes written to dst and the number consumed from src.
Decode decodes src using the encoding enc.
Decode decodes the leading bytes in src as a single instruction.
Decode expects these to have been stripped by the caller.
Decode final fragment, without padding.
Decode ignores space and control characters in src.
Decode instruction stream, interpreting decoding instructions.
Decode into y, which is big enough.
Decode is the function that decodes the encoded image.
Decode leftover input from last read.
Decode loop, executing decoder program.
Decode normal struct into a nil.
Decode normal struct into an empty struct
Decode quantum using the base32 alphabet
Decode quantum using the base64 alphabet
Decode reads a GIF image from r and returns the first embedded image as an image.Image.
Decode reads a JPEG image from r and returns it as an image.Image.
Decode reads a PNG image from r and returns it as an image.Image.
Decode reads bits from the given bitReader and navigates the tree until a symbol is found.
Decode reads the next JSON-encoded value from its input and stores it in the value pointed to by v.
Decode reads the next value from the input stream and stores it in the data represented by the empty interface value.
Decode returns the Unicode code point sequence represented by the UTF-16 encoding s.
Decode runtime type information for type methods to help work out which methods can be called dynamically via interfaces.
Decode singleton slice into a nil.
Decode singleton slice of interfaces into a nil.
Decode singleton string into a nil.
Decode struct containing an interface into a nil.
Decode the AC coefficients, as specified in section F.2.2.2.
Decode the DC coefficient, as specified in section F.2.2.1.
Decode the JPEG data.
Decode the argument value.
Decode the structure as usual
Decode will find the next PEM formatted block (certificate, private key etc) in the input.
Decode works like xml.Unmarshal, except it reads the decoder stream to find the start element.
DecodeAll reads a GIF image from r and returns the sequential frames and timing information.
DecodeConfig decodes the color model and dimensions of an image that has been encoded in a registered format.
DecodeConfig is the function that decodes just its configuration.
DecodeConfig returns the color model and dimensions of a JPEG image without decoding the entire image.
DecodeConfig returns the color model and dimensions of a PNG image without decoding the entire image.
DecodeConfig returns the global color model and dimensions of a GIF image without decoding the entire image.
DecodeElement works like xml.Unmarshal except that it takes a pointer to the start XML element to decode into v.
DecodeHeader decodes all encoded-words of the given string.
DecodeLastRune unpacks the last UTF-8 encoding in p and returns the rune and its width in bytes.
DecodeLastRuneInString is like DecodeLastRune but its input is a string.
DecodeRune returns the UTF-16 decoding of a surrogate pair.
DecodeRune unpacks the first UTF-8 encoding in p and returns the rune and its width in bytes.
DecodeRuneInString is like DecodeRune but its input is a string.
DecodeString returns the bytes represented by the base32 string s.
DecodeString returns the bytes represented by the base64 string s.
DecodeString returns the bytes represented by the hexadecimal string s.
DecodeValue reads the next value from the input stream.
DecodedLen returns the maximum length in bytes of the decoded data corresponding to n bytes of base32-encoded data.
DecodedLen returns the maximum length in bytes of the decoded data corresponding to n bytes of base64-encoded data.
Decoding any particular image format requires the prior registration of a decoder function.
Decoding the type.* symbols.
DecodingError represents an error during the decoding of the symbol table.
Decompress the file to a bytes.Reader.
Decrease the length of the slice by one, safely.
Decrease the running count for this test.
Decrement the counter when the goroutine completes.
Decrypt decrypts ciphertext with priv.
Decrypt decrypts msg.
Decrypt decrypts the first block in src into dst.
Decrypt one block from src into dst, using the expanded key xk.
Decrypt one block from src into dst, using the subkeys.
Decrypt with blinding.
DecryptOAEP decrypts ciphertext using RSA-OAEP.
DecryptPEMBlock takes a password encrypted PEM block and the password used to encrypt it and returns a slice of decrypted DER encoded bytes.
DecryptPKCS1v15SessionKey is designed for this situation and copies the decrypted, symmetric key (if well-formed) in constant-time over a buffer that contains a random key.
Decrypter is an interface for an opaque private key that can be used for asymmetric decryption operations.
Deduct credit for this span allocation and sweep if necessary.
Deep equality test via reflection
DeepEqual doesn't compare functions.
DeepEqual has been defined so that the same short-cut applies to slices and maps: if x and y are the same slice or the same map, they are deeply equal regardless of content.
DeepEqual reports whether x and y are ``deeply equal,'' defined as follows.
DefPredeclaredTestFuncs defines the assert and trace built-ins.
Default and fallthrough.
Default behavior of signals in Go programs By default, a synchronous signal is converted into a run-time panic.
Default coverage mode is atomic when -race is set.
Default is left-alignment.
Default is the default Context for builds.
Default parameters are used if a nil *Options is passed.
Default returns an Importer for the compiler that built the running binary.
Default route masks for IPv4.
Default space does not apply to attribute names.
Default space for untagged names
Default text/top to 10 nodes on interactive mode
Default to 4:4:4 subsampling.
Default to printed representation for unnamed types
Default types are used for untyped arguments, and res may be nil.
Default visibility (see binding).
DefaultClient is the default Client and is used by Get, Head, and Post.
DefaultMask returns the default IP mask for the IP address ip.
DefaultMaxHeaderBytes is the maximum permitted size of the headers in an HTTP request.
DefaultMaxIdleConnsPerHost is the default value of Transport's MaxIdleConnsPerHost.
DefaultParameterConverter is the default implementation of ValueConverter that's used when a Stmt doesn't implement ColumnConverter.
DefaultParameterConverter returns its argument directly if IsValue(arg).
DefaultQuality is the default quality encoding parameter.
DefaultRemoteAddr is the default remote address to return in RemoteAddr if an explicit DefaultRemoteAddr isn't set on ResponseRecorder.
DefaultServeMux is the default ServeMux used by Serve.
DefaultServer is the default instance of *Server.
DefaultTransport is the default implementation of Transport and is used by DefaultClient.
Defaults used by HandleHTTP
Defensively zero out everything, 2 reasons: 1.
Defer blocks internally use/clobber the flags value.
Defer might stop a panic and show the return values as they exist at the time of panic.
Defer of nil function.
Defer setup during panic shouldn't crash for nil defer.
Defer structs themselves are never on the stack.
DeferDelete marks a file to be deleted by next call to Cleanup()
Deferred calls will appear to be returning to the CALL deferreturn(SB) that we are about to emit.
Define Huffman Table.
Define Quantization Table.
Define Restart Interval.
Define T2, version A, and parse it.
Define T2, version B, and parse it.
Define a flag to accumulate durations.
Define a helper function to make the examples' output look nice.
Define a pair of blackholed (IPv4, IPv6) addresses, for which dialTCP is expected to hang until the timeout elapses.
Define a split function that separates on commas.
Define gotype, for composite ones recurse into constituents.
Define intgo when compiling with GCC.
Define the type id if necessary.
Define these so that they'll get put into the symbol table.
Defined SymKind values.
Defined by the runtime package.
Defined in Pub 800-20 Decrypting the Table A.1 plaintext with the 0x01...
Defined in Pub 800-20 Encrypting the Table A.1 ciphertext with the 0x01...
Defined in tracebackctxt_c.c.
Defining them locally avoids this package depending on package unicode.
Definitely want -fPIC but on Windows gcc complains "-fPIC ignored for target (all code is position independent)"
Deflate is ambiguous and not as universally supported anyway.
Defs maps identifiers to the objects they define (including package names, dots "." of dot-imports, and blank "_" identifiers).
Del deletes the values associated with key.
Delay Time (1/100ths of a second) Transparent color index.
Delay applying focus/ignore until after creating the report so the report reflects the total number of samples.
Delay defaultlit until after we've checked range, to avoid a redundant "constant NNN overflows int" error.
Delay error for next iteration (after scan).
Delay operand checking until we know the final type by marking the lhs expression as lhs shift operand.
Delayed until this part of the code so that we can use the same double-checking mechanism as the 1-bit case.
Delaying the setting in this way preserves type ids while allowing recursive types to be described.
Delete all fields that are hidden by the Go rules for embedded fields, except that fields with JSON tags are promoted.
Delete all of obj to clean up.
Delete it from f.Imports.
Delete it from the map so we can detect any upcoming features which were never seen.
Delete merged nodes from declaration list.
Delete the ODCL nodes here and recreate them inside the body below.
Delete the next line to include in the gob package.
Delete the syscallsp information that we left for the garbage collector during the system call.
Delete timer t from the heap.
Delete will take the address of the key.
DeleteKey deletes the subkey path of key k and its values.
DeleteValue removes a named value from the key k.
Deliberately inserted nops set R0.
Delicate dance: thread transitions from spinning to non-spinning state, potentially concurrently with submission of new goroutines.
DelimitedMessage: uint(lengthOfMessage) Message
Delims sets the action delimiters to the specified strings, to be used in subsequent calls to Parse, ParseFiles, or ParseGlob.
Deltas are the number to add to the code point to reach the code point for a different case for that character.
Demangle attempts to demangle and optionally simplify any function names referenced in the profile.
Demangle returns an empty map and a nil error.
Demangle translates a batch of symbol names from mangled form to human-readable form.
Demangler maps symbol names to a human-readable form.
Denote blocking of the new syscall.
Denote completion of the current syscall.
Denso NDR1 microprocessor.
Depend on appendRange to coalesce ranges on the fly.
Dependencies are closed via a goroutine, so this polls waiting for numDeps to fall to want, waiting up to d.
Dependencies for each test.
Dependencies for testmain.
Depending on map iteration, body can be either of these.
Depending on the machine and OS, this test might be too fast to measure with accurate enough granularity.
Depending on the state of the handler, we either own the map or not.
Depending on the test, it may be necessary to do the same when invoking a generated test binary directly.
Depends on Map scanning in order and calling the closure once per rune.
Depends on an analysis of the encodings performed by 5l.
Depends on section type.
Depends on syslog daemon running, and sometimes it's not.
Deprecated is the set of Unicode characters with property Deprecated.
Deprecated: ErrWriteAfterFlush is no longer used.
Deprecated: For backward compatibility Bugs is still populated, but all new code should use Notes instead.
Deprecated: Kept for compatibility.
Deprecated: New code should use Slice instead.
Deprecated: No longer returned.
Deprecated: Not implemented, do not use.
Deprecated: Reader is deprecated.
Deprecated: The supported way to create a compiled-only package is to write source code containing a //go:binary-only-package comment at the top of the file.
Deprecated: Use BytePtrFromString instead.
Deprecated: Use ByteSliceFromString instead.
Deprecated: Use Client or Transport in package net/http instead.
Deprecated: Use CompressedSize64 instead.
Deprecated: Use DialContext instead.
Deprecated: Use Dialer instead.
Deprecated: Use FormatMessage from golang.org/x/sys/windows instead.
Deprecated: Use Request.Cancel instead.
Deprecated: Use SlicePtrFromStrings instead.
Deprecated: Use UTF16FromString instead.
Deprecated: Use UTF16PtrFromString instead.
Deprecated: Use UncompressedSize64 instead.
Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.
Deprecated: Use the Client or Transport in package net/http instead.
Deprecated: Use the Context and WithContext methods instead.
Deprecated: Use the Server in package net/http instead.
Dereference down to the underlying type.
Dereference one pointer looking for a named type.
Dereference or skip nil pointer, interface values.
Dereference t so that any panic happens before the lock is held.
Dereferencing nil pointer while evaluating function arguments should not panic.
Derive decryption key from encryption key.
Derive frame pointer and link register.
Derive minCodes, maxCodes, and valsIndices.
Derive size of arguments.
Derive the look-up table.
Derived by running 'go test -calibrate'.
Derived from Inferno utils/6l/l.h http://code.google.com/p/inferno-os/source/browse/utils/6l/l.h
Derived from bytes/compare_test.go.
Derived from go/build.Context.shouldBuild.
Describe the value, "" for non-numeric tags
Described in http://www.dcl.hpi.uni-potsdam.de/research/WRK/2007/08/getting-os-information-the-kuser_shared_data-structure/
Description is a human-readable description of the problem.
Description of build modes The 'go build' and 'go install' commands take a -buildmode argument which indicates which kind of object file is to be built.
Description of testing flags The 'go test' command takes both flags that apply to 'go test' itself and flags that apply to the resulting test binary.
Description of testing functions The 'go test' command expects to find test, benchmark, and example functions in the "*_test.go" files corresponding to the package under test.
Description of the stream
Deseret is the set of Unicode characters in script Deseret.
Design doc at https://golang.org/s/go11sched.
Design note: At most 10 bytes are needed for 64-bit values.
Design note: It is tempting to eliminate extra blanks occurring in whitespace in this function as it could simplify some of the blanks logic in the node printing functions.
Desired assignments will be small, so we just use a list of valueID+registers entries.
Desired register is allowed and unused.
Despite the name, a sparseEntry represents an actual data fragment that references data found in the underlying archive stream.
Destination address required
Destination for output.
Destroy one of the listening sockets, creating an unreachable port.
Detach fd 0 from controlling terminal
Details are presented bottom-up.
Detect those and execute them more quickly.
DetectContentType always returns a valid MIME type: if it cannot determine a more specific one, it returns "application/octet-stream".
DetectContentType implements the algorithm described at http://mimesniff.spec.whatwg.org/ to determine the Content-Type of the given data.
Determine alignment, size, and kind of type in declaration.
Determine and append trailing space.
Determine and prepend indentation of first code line.
Determine and prepend leading space.
Determine architecture from +build line if possible.
Determine architecture from file name if possible.
Determine canonical identifier for this package.
Determine canonical import path, if any.
Determine cutpoint where +build comments are no longer valid.
Determine directory from import path.
Determine frame's 'continuation PC', where it can continue.
Determine if the lhs is a (possibly parenthesized) identifier.
Determine if the signal occurred inside Go code.
Determine if we can factor out functionality in a public API.
Determine if we should run the following test.
Determine name of import.
Determine opcode suffix.
Determine operand sizes from instruction.
Determine package files.
Determine the (final, unnamed) underlying type by resolving any forward chain (they always end in an unnamed type).
Determine the expected body length, using RFC 2616 Section 4.4.
Determine the signature type.
Determine the uncompressed size of testfile.
Determine the white space on the first line after the /* and before the beginning of the comment text, assume two blanks instead of the /* unless the first character after the /* is a tab.
Determine underlying embedded (possibly incomplete) type by following its forward chain.
Determine whether the match we're holding is the first or second argument.
Determine whether to hang up after sending a request and body, or receiving a response and body 'header' is the request headers
Determine whether we are in a released copy by inspecting the version.
Determine which command to use to display open files.
Determined empirically by running the below in various browsers.
Determines if the signal should be handled by Go and if not, forwards the signal to the handler that was installed before Go's.
Determines whether rune is an ASCII word char.
Devanagari is the set of Unicode characters in script Devanagari.
Developed at SunPro, a Sun Microsystems, Inc.
Developed at SunSoft, a Sun Microsystems, Inc.
Deviations from RFC 2045: 1.
Device or resource busy
Diacritic is the set of Unicode characters with property Diacritic.
Diagnose this helpfully.
Dial connects to a JSON-RPC server at the specified network address.
Dial connects to an RPC server at the specified network address.
Dial connects to the address on the named network.
Dial connects to the given address on the given network using net.Dial and then returns a new Conn for the connection.
Dial connects to the given network address using net.Dial and then initiates a TLS handshake, returning the resulting TLS connection.
Dial establishes a connection to a log daemon by connecting to address raddr on the specified network.
Dial returns a new Client connected to an SMTP server at addr.
Dial specifies the dial function for creating unencrypted TCP connections.
DialContext connects to the address on the named network using the provided context.
DialHTTP connects to an HTTP RPC server at the specified network address listening on the default HTTP RPC path.
DialHTTPPath connects to an HTTP RPC server at the specified network address and path.
DialIP connects to the remote address raddr on the network protocol netProto, which must be "ip", "ip4", or "ip6" followed by a colon and a protocol number or name.
DialTCP connects to the remote address raddr on the network net, which must be "tcp", "tcp4", or "tcp6".
DialTLS specifies an optional dial function for creating TLS connections for non-proxied HTTPS requests.
DialTLS specifies an optional dial function for creating TLS connections for requests.
DialTimeout acts like Dial but takes a timeout.
DialUDP connects to the remote address raddr on the network net, which must be "udp", "udp4", or "udp6".
DialUnix connects to the remote address raddr on the network net, which must be "unix", "unixgram" or "unixpacket".
DialWithDialer connects to the given network address using dialer.Dial and then initiates a TLS handshake, returning the resulting TLS connection.
Dialer optionally specifies a dialer configuration to use for new connections.
Dialing with the zero value of Dialer is therefore equivalent to just calling the Dial function.
Did not write enough.
Didn't call validateType on function results.
Didn't protect against nil or literal values in field chains.
Didn't reach EOF, so must have found a non-space byte.
Die with an error message.
Different allocations should not be equal.
Different kind of attribute: href implies a URL.
Different length strings of all zeros have distinct hashes.
Different query class.
Different query name.
Different query type.
Different return type.
Different routines recognize different length tok_i based on matches of ch_i.
Different types of soft line-breaks.
Different values can take different paths through the generated code.
Difficult test for function call because of implicit padding between arguments.
Difficult to tell what sizes are okay.
Digest covers the NUL terminator.
Digit is the set of Unicode characters with the "decimal digit" property.
Digital Alpha (standard value).
Digits are OK only after the first character.
Digits is the digits of the irrational number e.
Dijkstra pointed out that maintaining the no black to white pointers means that white to white pointers do not need to be noted by the write barrier.
Dijkstra, Leslie Lamport, A.
Dim returns the maximum of x-y or 0.
Dir is hidden by this other directory
Dir returns all but the last element of path, typically the path's directory.
Dir returns the direction of channel c.
Dir specifies the working directory of the command.
Direct goroutine handoff.
Direct package dependencies.
Direct value generation not implemented for this architecture.
Direct value, fetch from struct, fetch from struct pointer.
Directly initialize frac as the fractional inverse of the result of recur.
Director must be a function which modifies the request into a new request to be sent using Transport.
Directory and file names that begin with "." or "_" are ignored by the go tool, as are directories named "testdata".
Directory structure on the target device androidtest.bash assumes.
Dirs is a structure for scanning the directory tree.
Disable SIO_UDP_CONNRESET behavior.
Disable any prompting for passwords by Git.
Disable assists and background workers.
Disable before debugging non-obvious errors from the type-checker.
Disable checknils while compiling this code.
Disable parallelism if printing or if using a simulator.
Disable preemption and prepare to reattach to the P.
Disable preemption so scanstack cannot run while the caller is manipulating the stack barriers.
Disable preemption so we can use the gcw.
Disable preemption, otherwise we can be rescheduled to another thread that has profiling enabled.
Disable registerization for globals, because: (1) we might panic at any time and we want the recovery code to see the latest values (issue 1304).
Disable registerization for results if using defer, because the deferred func might recover and return, causing the current values to be used.
Disable safemode while compiling this code: the code we generate internally can refer to unsafe.Pointer.
Disable sampling, otherwise it's difficult to assert anything.
Disable signals during clone, so that the new thread starts with signals disabled.
Disable signals during create, so that the new thread starts with signals disabled.
Disable some mechanisms based on mode string.
Disable stack growth as we don't want Windows to fiddle with the thread stack limits, which we set ourselves to circumvent the stack checks in the Windows exception dispatcher.
Disable/enable preemption, implemented in runtime.
DisableCompression, if true, prevents the Transport from requesting compression with an "Accept-Encoding: gzip" request header when the Request contains no existing Accept-Encoding value.
DisableKeepAlives, if true, prevents re-use of TCP connections between different HTTP requests.
Disabled on android and iOS.
Disabled so the test doesn't crash but left here for reference.
Disables match search and only does Huffman entropy reduction.
Disallow caching workbufs and indicate that we're in mark 2.
Disallow int64 aux values.
Disallow leading zeros.
Disallow sigprof scans of this stack and block if there's one in progress.
Disallow starting new workers so that any remaining workers in the current mark phase will drain out.
Disambiguate these classes using the attribute.
Disasm disassembles the named object file, starting at the start address and stopping at (before) the end address.
Disasm is a disassembler for a given File.
Disasm returns a disassembler for the file f.
Disasm returns an error.
Disassemblers seem to agree that later prefixes take priority over earlier ones.
Disassociate p and the current m.
Discard current half-byte.
Discard is an io.Writer on which all Write calls succeed without doing anything.
Discard it when making the name for the embedded struct field.
Discard of 0 shouldn't cause a read:
Discard result, because t might be moving in the heap.
Discard samples tagged with key:value matching regexp
Discard skips the next n bytes, returning the number of bytes discarded.
Discard the excess entries (can't be more than 3).
Discardable as long as the subpieces are.
Discardable as long as we know it won't fail because of a bad size.
Discardable as long as we know it's not division by zero.
Discards errors of the form: http: proxy error: read tcp 127.0.0.1:44643: use of closed network connection
Disclaimer of Warranty  These software programs are available to the user without any license fee or royalty on an "as is" basis.
Disconnect cached list before dropping it on the floor, so that a dangling ref to one entry does not pin all of them.
Discover the nodes and construct the MIB OID.
Discovered during CL 144530045 review.
Discriminator is an arbitrary integer indicating the block to which these instructions belong.
Display allocated memory size
Display allocated object counts
Display in-use memory size
Display in-use object counts
Display mean delay at each region
Display number of delays at each region
Display total delay at each region
Display windows errno in error message.
Disposal is the successive disposal methods, one per frame.
Distinguish by checking dataSize.
Distinguish the cases in the error messages.
Distinguish these cases using the column number, since we don't see the space itself.
Div returns the vector p/k.
DivMod implements Euclidean division and modulus (unlike Go):
Divide sizeLeft evenly among the struct fields.
Division and mod using (slow) hardware instruction.
Division by zero leads to a run-time panic.
Divisor for normalization.
Do NOT make changes to the golden outputs.
Do a 64-bit add, the overflow goes into the carry.
Do a POST instead of a GET to prevent the Transport's idempotent request retry logic from kicking in...
Do a blocking read on the log output pipe so its logging doesn't bleed into the next test.
Do a bunch of traffic from different goroutines.
Do a bunch of various stuff (timers, GC, network, etc) in a separate goroutine.
Do a logical right right on -1 to keep pow bits.
Do a lookup for a single name, which must be rooted (otherwise answer will not find the answers).
Do all the prep-work like for an INSERT but don't actually insert the row.
Do an additional mProf_GC, because all 'free' events are now real as well.
Do any (remaining) shift right in decimal representation.
Do any shift left in binary representation.
Do approximate manual to decimal conversion to avoid precise but possibly slow Float formatting.
Do as much work concurrently as possible
Do calls f for each entry in the map.
Do calls f for each exported variable.
Do calls function f on each element of the ring, in forward order.
Do calls the function f if and only if Do is being called for the first time for this instance of Once.
Do executes and returns the results of the given function, making sure that only one execution is in-flight for a given key at a time.
Do explicit nil case right here.
Do initial scan for metadata needed for writing _testmain.go Use that metadata to update the list of imports for package main.
Do integer test first so we get 0x123 etc.
Do invertibility testing on the various structures that we test
Do is convenience method that writes a request and reads a response.
Do is intended for initialization that must be run exactly once.
Do it again now that we have that type info.
Do it again with file list arguments.
Do it again without verbose.
Do not add a new write barrier.
Do not add generated file to clean list.
Do not add to import "C", to avoid disrupting the association with its doc comment, breaking cgo.
Do not add/remove lines in this block without updating the line numbers.
Do not allow access to unexported values via Interface, because they might be pointers that should not be writable or methods or function that should not be callable.
Do not allow preemption during this call, or else the m might be different in this function than in the caller.
Do not allow preemption during this call, or else the m might be in different in this function than in the caller.
Do not allow preemption here, because the garbage collector won't know the form of the arguments until the jmpdefer can flip the PC over to fn.
Do not allow wildcards in the repo root.
Do not apply filters if we're just generating a proto, so we still have all the data.
Do not attempt to re-symbolize a mapping that has already been symbolized.
Do not change another G's status while holding this lock (in particular, do not ready a G), as this can deadlock with stack shrinking.
Do not change the slice until you are done with the Frames.
Do not check type from unknown package.
Do not consider edges from/to nodes that are expected to be removed.
Do not embed SectionReader directly to avoid having Read and Seek.
Do not emit PT_TLS for OpenBSD since ld.so(1) does not currently support it.
Do not expect any parsing failures due to the regexp matching.
Do not fill window if we are in store-only mode.
Do not flush mcaches during concurrent phase.
Do not get confused by this common mistake.
Do not get confused by this, and do not try to use the path.
Do not insert instructions to allocate a stack frame for this function.
Do not let the host linker generate COPY relocations.
Do not loop endlessly in indirect for non-empty interfaces.
Do not modify one without the other.
Do not need to call fd.writeLock here, because fd is not yet accessible to user, so no concurrent operations are possible.
Do not need to update the timerproc: if it wakes up early, no big deal.
Do not pad with zeros to the right.
Do not pass a nil Context, even if a function permits it.
Do not pop variables so they persist until next end.
Do not print columns.
Do not print location details past the first line
Do not profile threads blocked on Notes, this includes idle worker threads, idle timer thread, idle heap scavenger, etc.
Do not prune frames before the first user frame, to avoid pruning everything.
Do not push here too, or else stk will say arg imports arg.
Do not remove/overwrite if dst exists and is a directory or a non-object file.
Do not reorder or fragment the conditional branch opcodes, or the predication code will break
Do not reprocess funcsyms on next dumpglobls call.
Do not require key to be exported, so that DeepEqual and other programs can use all the keys returned by MapKeys as arguments to MapIndex.
Do not resolve signatures or embedded types yet to avoid cycles referring to this interface.
Do not run - loops forever.
Do not start another M below.
Do not treat as a Stringer.
Do not unwind past the bottom of the stack.
Do not update the input escaper, e.
Do not use defer for unlock.
Do not write DT_NULL.
Do nothing if there is no "Output:" or "Unordered output:" comment.
Do nothing to a reference base64 string (leave in standard format)
Do positive and negative values
Do regular flags processing
Do sends an HTTP request and returns an HTTP response, following policy (such as redirects, cookies, auth) as configured on the client.
Do should also follow redirects.
Do the interesting allocations.
Do the interface allocations only once for common Errno values.
Do the work in all cases since it's not too hard and not speed-critical.
Do this before setting it to runnable so we still own the G.
Do this test here because the error rune encodes to three bytes.
Do whatever cleanup needs to be done to deallocate s.
DoChan is like Do but returns a channel that will receive the results when they are ready.
Doc (usually run as go doc) accepts zero, one or two arguments.
Doc accepts zero, one, or two arguments.
Doc tests only run on builders.
Does not appear in the final tree.
Does not check for overflow.
Does not check that other bits were not written, unfortunately.
Does not escape to heap, result, or parameters.
Does not work on 32-bits due to partially conservative GC.
Does not work on 32-bits, or with gccgo, due to partially conservative GC.
Does not work on gccgo due to partially conservative GC.
Doesn't fit in a byte:
Doing anything on exit is a problem because sometimes functions exit via panic instead of an ordinary return, so panic would have to know to do the same math when unwinding the stack.
Doing it earlier would duplicate work, since an out of range rune wouldn't have fit in one or two bytes.
Doing it this way means we don't have to worry about peek double counting.
Doing so correctly handles I/O errors that happen after reading some bytes and also both of the allowed EOF behaviors.
Doing so would cause a deadlock (issue 1547).
Doing that could be an interesting test case for go/typechecker: the constraints about working with partial information will likely exercise it in interesting ways.
Doing that here - and returning to the faulting code - results in an infinite loop.
Doing this eagerly discovers invalid regexp syntax without having to run a command that needs that regexp.
Doing too much here makes the exhaustive loop too exhausting, so just do two swaps.
Domain names are a sequence of counted strings split at the dots.
Dominator tree (f.sdom) is computed by the generic domtree pass.
Don't advertise TLS 1.2-only cipher suites unless we're attempting TLS 1.2.
Don't allocate the buffer if the result won't fit.
Don't allow a Body.Read after Body.Close.
Don't always call NewWriter, as that forces a bytes.Buffer and other small bufio Writers to have a minimum 4k buffer size.
Don't annotate an empty select - creates a syntax error.
Don't annotate an empty switch - creates a syntax error.
Don't annotate an empty type switch - creates a syntax error.
Don't assist in non-preemptible contexts.
Don't bother building a graph for scalars.
Don't bother figuring out if they're exported.
Don't bother loading others.
Don't bother modifying it.
Don't bother parsing the rest if we had errors already.
Don't bother parsing the rest if we had errors parsing the package clause.
Don't bother parsing the rest if we had errors scanning the first token.
Don't bother running a worker now because it'll just return immediately.
Don't bother saving PC if it's zero, which is probably a call to a nil func: the old link register is more useful in the stack trace.
Don't bother uncompressing: too big.
Don't bother with GOOS, GOHOSTOS, GOARCH, and GOHOSTARCH, because setup will take care of those when bootstrapBuildTools returns.
Don't call this if you could be at EOF.
Don't carry reference this around longer than necessary
Don't check the error.
Don't complain if a file was deleted in the meantime (i.e. the directory changed concurrently while running gofmt).
Don't complain if the span of validity of the shadowed identifier doesn't include the shadowing identifier.
Don't complain if the types differ: that implies the programmer really wants two different things.
Don't count trailing NUL for abstract address.
Don't crash, just give error when allocating a huge slice.
Don't crash, just give error with invalid type id.
Don't decrement the open count here, finalClose will take care of that.
Don't depend on Log(0.5)*(1/Ln2)+exp being exactly exp-1.
Don't do any more processing.
Don't do any operations that lock the heap on the G stack.
Don't do keep-alive on error if either party requested a close or we get an unexpected informational (1xx) response.
Don't duplicate work: only need to consider each function at top of safe zone once.
Don't emit that, or else our own program will end.
Don't evaluate lhs if it is the blank identifier.
Don't forget to close the connection:
Don't free the old array if it's referenced by sweep.
Don't generate any code for complete copy of a variable into itself.
Don't get test dependencies recursively.
Don't grow too fast in case we had timing errors previously.
Don't have a complete line after the peek.
Don't hold on to ss structs with large buffers.
Don't insert stack check preamble.
Don't interfere with the next test on plan9.
Don't just return r.peek here: it might have been left by peekByte(false) and this might be peekByte(true).
Don't know how to handle - fall back to detailed prints.
Don't know which way to go back.
Don't leave a mess, just in case.
Don't let the scanner try to parse the checksum as a number.
Don't let the value be too small, i.e, set the most significant two bits.
Don't let these environment variables confuse the test.
Don't need to unregister because calling close() on fd will remove any kevents that reference the descriptor.
Don't potentially block reading a new chunk header.
Don't preallocate a huge buffer, just in case.
Don't preload anything live after the loop.
Don't print it in full.
Don't process it as usual because its name should default to empty rather than to the field name.
Don't profile the marked routine.
Don't read all the export data.
Don't reorder case expressions.
Don't repeat the error here.
Don't report an error for now so that the build remains green.
Don't report an error in this case.
Don't requote the already-quoted strings.
Don't return EOF yet.
Don't reuse bad connections.
Don't rewrite the import stack in the error if we have an import cycle.
Don't run examples with no output.
Don't run it - produces too much output.
Don't run out of ephermeral ports too quickly:
Don't save err from unmarshal into dec.err: the connection is still usable since we read a complete JSON object from it before the error happened.
Don't select a ciphersuite which we can't support for this client.
Don't send 0-length data.
Don't send any messages.
Don't shrink the allocation below the minimum-sized stack allocation.
Don't skip comments: we need to count newlines.
Don't split the stack as this function may be invoked without a valid G, which prevents us from allocating more stack.
Don't split the stack as this method may be invoked without a valid G, which prevents us from allocating more stack.
Don't test ScanInts and ScanNumbers since some parts of the floats in the source look like (illegal) octal ints and ScanNumbers may return either Int or Float.
Don't track autotmp_ variables.
Don't track named output values.
Don't trust that that the ConnState state machine will get to StateClosed.
Don't try to convert infinities (will not terminate).
Don't try to parse it.
Don't type-check signature yet - use an empty signature now and update it later.
Don't use 127.0.0.1 for every case, it won't work on IPv6-only systems.
Don't use Duff's device
Don't use Duff's device on Plan 9, because floating point operations are not allowed in note handler.
Don't use ast.CommentGroup.Text() - we want to see exact comment text.
Don't use range since exportlist may grow during this phase and we want to export all remaining objects.
Don't use range--typecheck can add closures to xtop.
Don't use range--walk can add functions to xtop.
Don't use secure for http
Don't worry much about the base levels, but check the ones in our own package.
Don't write back fields we aren't changing.
Done decrements the WaitGroup counter.
Done is provided for use in select statements:
Done may return nil if this context can never be canceled.
Done returns a channel that's closed when work done on behalf of this context should be canceled.
Done returns a channel which is closed if and when this pipe is closed with CloseWithError.
Done with xlen and xcap.
Dot encoding is a common framing used for data blocks in text protocols such as SMTP.
DotNode holds the special identifier '.'.
DotReader returns a new Reader that satisfies Reads using the decoded text of a dot-encoded block read from r.
DotWriter returns a writer that can be used to write a dot-encoding to w.
Dots are not valid in user names
Dots are okay if they are surrounded by atext.
Dots of all kinds to test basic evaluation.
Dots that are part of a number are div preceders.
Double buffer size and try again.
Double pattern until the whole uintptr is filled.
Double quotes inside if/else.
Double returns 2*(x,y)
Double-check SizeToClass.
Double-check phase ordering constraints.
Double-check that bits to be written were written correctly.
Double-check that overflow field is final memory in struct, with no padding at end.
Double-check the heap bits written by GC program by running the GC program to create a 1-bit pointer mask and then jumping to the double-check code below.
Double-check trace.enabled now that we've done m.locks++ and acquired bufLock.
Double-check use of type as embedded type.
Double-quoted: Include the quotes and let strconv.Unquote do the backslash escapes.
Doubling and truncating is fewer steps than iterating by nb each time.
Doubly special: evaluation order for select is stricter than ordinary expressions.
Download if the package is missing, or update if we're using -u.
DragonFly and FreeBSD do not have _SC_GETPW_R_SIZE_MAX.
DragonFly declares errno with __thread, which results in a symbol type of R_386_TLS_GD or R_X86_64_TLSGD.
DragonFly incorrectly returns EACCES rather EISDIR when a directory is opened for write.
DragonFly uses 0 as the "until EOF" value.
DragonflyBSD system calls.
Drain heap marking jobs.
Drain root marking jobs.
Drain the buffer and restore the space at the front for the count of the next message.
Draw 1 column at a time.
Draw 1 pixel at a time.
Draw 1 row at a time.
Draw a line at the start of the body of the first function literal we find.
Draw aligns r.Min in dst with sp in src and then replaces the rectangle r in dst with the result of drawing src on dst.
Draw calls DrawMask with a nil mask.
Draw implements the Drawer interface by calling the Draw function with this Op.
Draw the (src, mask, op) onto a copy of dst using a slow but obviously correct implementation.
Draw the same combination onto the actual dst using the optimized DrawMask implementation.
Draw the whole image at once.
DrawMask aligns r.Min in dst with sp in src and mp in mask and then replaces the rectangle r in dst with the result of a Porter-Duff composition.
DrawYCbCr draws the YCbCr source image on the RGBA destination image with r.Min in dst aligned with sp in src.
Drawer contains the Draw method.
Drawer is used to convert the source image to the desired palette.
Drill into interfaces and pointers.
Drill through non-dereferences.
Driver for complex division table defined in cmplxdivide1.go For details, see the comment at the top of in cmplxdivide.c.
Driver is the interface that must be implemented by a database driver.
Driver returns the database's underlying driver.
Drivers returns a sorted list of the names of the registered drivers.
Drop all longer entries, which is easy: just truncate the slice.
Drop all the cgo_import_static declarations.
Drop any values which are no longer live.
Drop lock, drop reference and wake read waiter if present.
Drop misaligned fields, the same way we drop integer bit fields.
Drop preamble and final newline.
Drop the Chrominance tables.
Drop the hostname field from the Fprintf.
Drop the package prefix from locals and arguments.
Drop the size of last record, which is likely to be truncated.
Dropping the tRNS chunk makes that color's alpha 0xff instead of 0x7f.
Dst and src each must have kind Slice or Array, and dst and src must have the same element type.
Dst and src may be the same slice but otherwise should not overlap.
Dst and src may point at the same memory.
Dst and src may point to the same memory.
DualStack enables RFC 6555-compliant "Happy Eyeballs" dialing when the network is "tcp" and the destination is a host name with both IPv4 and IPv6 addresses.
Due to a detail of gc's internals, the huge constant errors happen in an earlier pass than the others and inhibits the next pass from running.
Due to broken stack memory accounting (https://golang.org/issue/7468), StackInuse can decrease during function execution, so we cast the values to int64.
Due to embedding, an interface may contain methods whose receiver type is a different interface.
Due to inlining, the source line information is in general a list of positions representing a call stack, with the leaf function first.
Due to the Transport's "socket late binding" (see idleConnCh in transport.go), the numReqs HTTP requests below can finish with a dial still outstanding.
Due to the order of evaluation, variables are expanded even inside quoted strings.
Due to timer granularity, pause can actually be 0 on windows or on virtualized environments.
Dummy annotation marking that the value x escapes, for use in cases where the reflect code is so clever that the compiler cannot follow.
Dummy declaration for _cgo_main.c
Dummy send, receive to keep compiler from optimizing select.
Dummy test function so that godoc does not use the entire file as example.
DummyFrontend is a test-only frontend.
Dump all the types that appear in the type field of any Eface described by this bit vector.
Dump any types we will need to resolve Efaces.
Dump fields in the local vars section
Dump fields in the outargs section
Dump it and remember we did so.
Dump main body of stack frame.
Dump returns a string that contains a hex dump of the given data.
Dump the source (base) object
DumpRequest returns the given request in its HTTP/1.x wire representation.
DumpRequest should not return the "Content-Length" if unset
DumpRequest should return the "Content-Length" in ReadRequest
DumpRequest should return the "Content-Length" when set
DumpRequestOut is like DumpRequest but for outgoing client requests.
DumpRequestOut uses Transport
DumpResponse is like DumpRequest but dumps a response.
Dumper returns a WriteCloser that writes a hex dump of all written data to w.
Dumps a matrix to a string (useful for debug).
Dumps a slice of bitmaps to a symbol as a sequence of uint32 values.
Duplicate parameter name is bogus.
Duplicates functionality in strconv, but avoids dependency.
Duployan is the set of Unicode characters in script Duployan.
Duration defines a time.Duration flag with specified name, default value, and usage string.
DurationVar defines a time.Duration flag with specified name, default value, and usage string.
During GC all mcaches are flushed into the central cache, so they are empty.
During a particular build, the following words are satisfied:
During arithmetic operations, denormalized values may occur but are always normalized before returning the final result.
During benchmark execution, b.N is adjusted until the benchmark function lasts long enough to be timed reliably.
During checkmarking, 1-word objects store the checkmark in the type bit for the one word.
During concurrent GC, we can do this during concurrent mark.
During concurrent shrinking, these areas may be written to.
During deepValueEqual, must keep track of checks that are in progress.
During imports, unqualified non-exported identifiers are from builtinpkg (see parser.go:sym).
During initialization and after a phase change, the worker may have been running on a different P.
During initialization this is set to 4MB*GOGC/100.
During mark termination, allglen isn't changing, so we'll scan all Gs.
During mark termination, these caches can still be used temporarily, but must be disposed to the global lists immediately.
During parsing, storage classes are called declaration contexts.
During program execution we only count number of frees and amount of freed memory.
During that sweep each span allocated room for its gcmarkBits in gcBitsArenas.next block.
During the algorithm it may represent the union of several of the final equivalence classes.
During the copy, both R0 and stacktmp0 are clobbered, losing both copies of v.
During this first phase, more objects may be added to the exportlist (due to inlined function bodies and their dependencies).
During those time slices, write barriers are enabled, so the mutator is running slower.
Dx and Dy return a rectangle's width and height.
Dx returns r's width.
Dy returns r's height.
Dying takes precedence over doing more work.
DynString returns the strings listed for the given tag in the file's dynamic section.
Dynamic element names are typically used to switch between (thead, tfoot, tbody), (ul, ol), (th, td), and other replaceable sets.
Dynamic linker symbol table
Dynamic linking information
Dynamic linking information segment.
Dynamic linking sections
Dynamic register desires (from partially completed allocations) will trump this information.
Dynamic symbol hash table
DynamicRecordSizingDisabled disables adaptive sizing of TLS records.
DynamicSymbols returns the dynamic symbol table for f.
Dynamically assigned registers will trump the static desired registers computed during liveness analysis.
DynlinkingGo returns whether we are producing Go code that can live in separate shared libraries linked together at runtime.
E (should see this for E2 and E3)
E.g., if this is 0.6, then GC should start when the live heap has reached 1.6 times the heap size marked by the previous cycle.
ECC primes: http://tools.ietf.org/html/draft-ladd-safecurves-02
ELF TLS base is 0(GS).
ELF binaries store the build ID in a proper PT_NOTE section.
ELF definitions that are independent of architecture or word size.
ELF header size in bytes
ELF standards differ as to the sizes in note sections.
ELF uses TLS offset negative from FS.
ELF32 Compression header.
ELF32 Dynamic structure.
ELF32 Program header.
ELF32 Relocations that don't need an addend field.
ELF32 Relocations that need an addend field.
ELF32 Section header.
ELF64 Compression header.
ELF64 Dynamic structure.
ELF64 Program header.
ELF64 Section header.
ELF64 relocations that don't need an addend field.
ELF64 relocations that need an addend field.
ELF64 symbol table entries.
ELF_NOTE_GOABIHASH_TAG
ELF_NOTE_GOPKGLIST_TAG
END ERROR EXAMPLE OMIT
ENOMEM means unmapped, which is what we want.
ENUMERATED An Enumerated is represented as a plain int.
EOF acts like a newline
EOF is signaled by a zero count with err set to 0.
EOF is signaled by a zero count with err set to io.EOF.
EOF is signaled by a zero count with err set to nil.
EOF is the error returned by Read when no more input is available.
EOF represents the end of input.
EOF, return all we have
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo75 ...
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo75a ...
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo75esc ...
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo76b ...
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo76c ...
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo76d ...
ERROR "1 does not escape" "2 does not escape" "3 does not escape" "foo76e ...
ERROR "2nd index required"
ERROR "3-index slice of string"
ERROR "3-index slice of string" "final index required in 3-index slice"
ERROR "3-index slice of string" "middle index required in 3-index slice"
ERROR "3-index slice of string" "middle index required in 3-index slice" "final index required in 3-index slice"
ERROR "3-index slice of string" check invalid indices
ERROR "3rd index required"
ERROR "Bad passes lock by value: testdata.CustomLock" Passing lock values into interface function arguments
ERROR "Bad passes lock by value: testdata.L0 contains testdata.L1 contains testdata.L2"
ERROR "Bad passes lock by value: testdata.LocalOnce contains sync.Mutex" False negative: LocalMutex doesn't have a Lock method.
ERROR "BadFunc passes lock by value: sync.Mutex"
ERROR "BadFunc passes lock by value: testdata.EmbeddedRWMutex"
ERROR "BadFunc passes lock by value: testdata.FieldMutex contains sync.Mutex"
ERROR "BadMeth passes lock by value: testdata.EmbeddedRWMutex"
ERROR "BadMeth passes lock by value: testdata.FieldMutex contains sync.Mutex"
ERROR "BadRet returns lock by value: sync.Mutex"
ERROR "BadRet returns lock by value: testdata.EmbeddedRWMutex"
ERROR "Branch prediction rule stay in loop"
ERROR "ClosureLeak1 ...
ERROR "ClosureLeak1 s does not escape"
ERROR "ClosureLeak1a func literal does not escape"
ERROR "ClosureLeak2 ...
ERROR "ClosureLeak2 s does not escape"
ERROR "ClosureLeak2a func literal does not escape"
ERROR "ExampleBuf_Append_Bad has malformed example suffix: Bad"
ERROR "ExampleBuf_Clear refers to unknown field or method: Buf.Clear"
ERROR "ExampleBuf_Len should be niladic" "Puffer" is German for "Buffer".
ERROR "ExampleBuf_Reset should return nothing"
ERROR "ExamplePuffer refers to unknown identifier: Puffer"
ERROR "ExamplePuffer_Append refers to unknown identifier: Puffer"
ERROR "ExamplePuffer_suffix refers to unknown identifier: Puffer"
ERROR "Example_BadSuffix has malformed example suffix: BadSuffix"
ERROR "FooN vals does not escape"
ERROR "TFooJ1 a does not escape" "TFooJ1 b does not escape" "TFooJ1 c does not escape" "TFooJ1 ...
ERROR "UTF-8" "invalid identifier character"
ERROR "a escapes to heap" "b escapes to heap" "c escapes to heap" "TFooI ...
ERROR "a escapes to heap" "b escapes to heap" "c escapes to heap" "TFooJ2 ...
ERROR "address of out parameter"
ERROR "append: full update"
ERROR "append: len-only update"
ERROR "arg p in Sprintln call causes recursive call to String method"
ERROR "arg s for printf causes recursive call to String method"
ERROR "arg s in Sprintln call causes recursive call to String method"
ERROR "arg someFunction in Println call is a function value, not a function call"
ERROR "arg someFunction in log call is a function value, not a function call"
ERROR "arg someFunction in printf call is a function value, not a function call"
ERROR "array index 100 out of bounds"
ERROR "assignment copies lock value to t: testdata.Tlock contains sync.Once contains sync.Mutex"
ERROR "assignment copies lock value to y: sync.Mutex"
ERROR "assignment.*Mutex"
ERROR "boolean or range expression"
ERROR "break is not in a loop"
ERROR "break label not defined: dance"
ERROR "buf1 does not escape"
ERROR "buf2 escapes to heap"
ERROR "can inline add1" "leaking param: p to result"
ERROR "can inline add2" "leaking param: p to result"
ERROR "can inline alloc" "moved to heap: x"
ERROR "can inline f" "leaking param: x to result"
ERROR "can inline f2" No inline for panic, recover.
ERROR "cannot assign to true"
ERROR "cannot convert true" "mismatched types int and bool"
ERROR "cannot declare init - must be func"
ERROR "cannot define new methods on non-local type"
ERROR "cannot directly assign to struct field .* in map"
ERROR "cannot fallthrough final case in switch"
ERROR "cannot import package as init"
ERROR "cannot switch on"
ERROR "cannot use .* as type int in array or slice literal"
ERROR "cannot use _ as value"
ERROR "cannot use fn .type func.float32..
ERROR "cannot use nil as type uintptr in return argument"
ERROR "cannot use.*as type string"
ERROR "cannot use.*type bool.*as type Bool"
ERROR "cannot use.*type byte.*as type float64"
ERROR "compare.*to nil"
ERROR "constant 256 overflows byte"
ERROR "constant 300 overflows int8" "constant 1200 overflows int8"
ERROR "continue is not in a loop"
ERROR "continue label not defined: on"
ERROR "convert" implicit conversions merit scrutiny
ERROR "declaration of .err.
ERROR "declaration of .x.
ERROR "declared and not used"
ERROR "dir does not escape"
ERROR "direct assignment to atomic value"
ERROR "division by zero"
ERROR "duplicate key"
ERROR "embed.*pointer"
ERROR "embedded pointer"
ERROR "embedded pointer" The following cases are OK.
ERROR "embedded type cannot be a pointer"
ERROR "escapes to heap"
ERROR "expected 'chan'"
ERROR "expected 'package'"
ERROR "expected anonymous field"
ERROR "expected boolean expression"
ERROR "expected boolean or range expression"
ERROR "expected channel type"
ERROR "expected expression"
ERROR "expected if statement or block"
ERROR "expected operand"
ERROR "expected switch expression"
ERROR "expected type, found '...'"
ERROR "final index required in 3-index slice"
ERROR "first letter after 'Benchmark' must not be lowercase"
ERROR "first letter after 'Test' must not be lowercase"
ERROR "fmt without selector" "fmt is not a constant"
ERROR "foo p does not escape"
ERROR "format reads arg 1, have only 0 args" Printf from external package
ERROR "format reads arg 1, have only 0 args" user-defined Println-like functions
ERROR "func can only be compared to nil"
ERROR "func literal does not escape" "can inline f1.func1"
ERROR "func literal escapes to heap"
ERROR "func literal escapes to heap" "can inline f1.func2"
ERROR "func literal escapes to heap" "p does not escape"
ERROR "func passes lock by value: sync.Mutex"
ERROR "function call copies lock value: sync.Mutex"
ERROR "function call copies lock value: testdata.Tlock contains sync.Once contains sync.Mutex"
ERROR "g a does not escape"
ERROR "generated nil check"
ERROR "generated nil check"  // bug would like to remove before indirect
ERROR "generated nil check" // bug would like to remove before indirect
ERROR "generated nil check" 0-byte indirect doesn't suffice.
ERROR "generated nil check" This one should be removed but the block copy needs to be turned into its own pseudo-op in order to see the indirect.
ERROR "heap-allocated closure, not allowed in runtime."
ERROR "i does not escape"
ERROR "i might be too small for shift of 32"
ERROR "i16 too small for shift of 16"
ERROR "i32 too small for shift of 32"
ERROR "i64 too small for shift of 64"
ERROR "i8 too small for shift of 8"
ERROR "identifier cannot begin with digit"
ERROR "illegal syntax for printf argument index"
ERROR "import path cannot be absolute path"
ERROR "import path contains invalid character"
ERROR "import path is empty"
ERROR "import path" Invalid local imports.
ERROR "import statement"
ERROR "import statement" Each of these pairs tests both `` vs "" strings and also use of invalid characters spelled out as escape sequences and written directly.
ERROR "import unsafe package"
ERROR "imported and not used"
ERROR "imported and not used.*bufio" again, package without anything in it
ERROR "imported and not used.*empty"
ERROR "imported and not used.*fmt" renamed
ERROR "imported and not used.*math" import dot
ERROR "impossible type assertion"
ERROR "in argument to f"
ERROR "in argument to h"
ERROR "index bounds check elided"
ERROR "index bounds check elided" Bitwise and truncates the maximum value to the mask value.
ERROR "index bounds check elided" Division cuts the range like right shift does.
ERROR "index bounds check elided" Right shift cuts the effective number of bits in the index, but only for unsigned (signed stays negative).
ERROR "index must be non-negative integer constant"
ERROR "indirection"`)
ERROR "inlining call to add1"
ERROR "inlining call to add2" "inlining call to add1"
ERROR "interface contains embedded non-interface int"
ERROR "intrinsic substitution for Bswap32"
ERROR "intrinsic substitution for Bswap64"
ERROR "intrinsic substitution for Ctz16"
ERROR "intrinsic substitution for Ctz32"
ERROR "intrinsic substitution for Ctz64"
ERROR "invalid break label .*L1"
ERROR "invalid break label .*L4"
ERROR "invalid break label .*L5"
ERROR "invalid continue label .*L1"
ERROR "invalid continue label .*L2"
ERROR "invalid indirect.*unsafe.Pointer"
ERROR "invalid map key type"
ERROR "invalid map key"
ERROR "invalid operation"
ERROR "invalid operation.*mismatched types"
ERROR "invalid operation.*not defined"
ERROR "invalid operation.*not defined" i and n are not assignable to each other
ERROR "invalid package name _"
ERROR "invalid recursive type T"
ERROR "invalid recursive type foo"
ERROR "invalid recursive type"
ERROR "invalid slice index"
ERROR "invalid variable name"
ERROR "invalid" "as type float32"
ERROR "invalid" "as type float64"
ERROR "jumps into block"
ERROR "label .*L1.* defined and not used"
ERROR "label .*L2.* defined and not used"
ERROR "label .*L3.* defined and not used"
ERROR "label .*L4.* defined and not used"
ERROR "label .*L5.* defined and not used"
ERROR "label .*L6.* already defined"
ERROR "label .*defalt.* defined and not used"
ERROR "label go2 not defined"
ERROR "leaking param content: args"
ERROR "leaking param content: np"
ERROR "leaking param content: p"
ERROR "leaking param content: x"
ERROR "leaking param content: x" "hugeLeaks1 y does not escape" "mark escaped content: x"
ERROR "leaking param: m"
ERROR "leaking param: p to result k" "leaking param: p"
ERROR "leaking param: p to result s" "leaking param: q to result r"
ERROR "leaking param: p to result"
ERROR "leaking param: p"
ERROR "leaking param: p" "func literal does not escape"
ERROR "leaking param: p" "leaking param: q"
ERROR "leaking param: ss" "func literal does not escape"
ERROR "leaking param: t to result"
ERROR "leaking param: vals"
ERROR "leaking param: x"
ERROR "leaking param: x" "hugeLeaks2 y does not escape"
ERROR "leaking param: x" "leaking param content: vals"
ERROR "leaking param: x" "leaking param: vals" "leaking param content: vals"
ERROR "leaking param: x" "leaking param: y"
ERROR "len argument too large"
ERROR "len larger than cap"
ERROR "literal copies lock value from t: testdata.Tlock contains sync.Once contains sync.Mutex"
ERROR "live at call to makemap: autotmp_.* ret"
ERROR "live at call to printnl: autotmp_.* ret"
ERROR "m does not escape"
ERROR "m escapes to heap"
ERROR "map can only be compared to nil" Comparison with interface that cannot return true (would panic).
ERROR "methods must have a unique non-blank name"
ERROR "middle index required in 3-index slice"
ERROR "middle index required in 3-index slice" "final index required in 3-index slice"
ERROR "mismatched types B and B2"
ERROR "mismatched types B2 and B"
ERROR "missing argument for Printf.* reads arg 3, have only 2"
ERROR "missing argument for Sprintf.* reads arg 3, have only 1"
ERROR "missing condition"
ERROR "missing constant value"
ERROR "missing return"
ERROR "missing return" again, but without the leading print(1).
ERROR "missing return" block ending in terminating statement is okay
ERROR "missing return" even an empty dead block triggers the message, because it becomes the final statement.
ERROR "missing return" if any breaks refer to the select, the select isn't okay anymore, even if they're dead
ERROR "missing return" if any breaks refer to the switch, switch is no longer okay
ERROR "missing return" if there's a condition - even "true" - the loops are no longer syntactically terminating
ERROR "missing return" if-else chain with final else and all terminating is okay
ERROR "missing return" return is okay
ERROR "missing return" select in which all cases terminate and none break are okay.
ERROR "missing return" switch with default in which all cases terminate is okay
ERROR "missing return" type switch with default in which all cases terminate is okay
ERROR "missing statement after label"
ERROR "missing variable type or initialization"
ERROR "missing verb at end of format string in Printf call"
ERROR "moved to heap: a"
ERROR "moved to heap: b"
ERROR "moved to heap: buf2"
ERROR "moved to heap: i"
ERROR "moved to heap: i" "moved to heap: j"
ERROR "moved to heap: i" "moved to heap: j" "moved to heap: k"
ERROR "moved to heap: i" BAD: j should not escape
ERROR "moved to heap: j"
ERROR "moved to heap: p" "func literal does not escape"
ERROR "moved to heap: p2"
ERROR "moved to heap: x"
ERROR "moved to heap: x1" "moved to heap: x3"
ERROR "multiple receiver"
ERROR "must be called"
ERROR "must be function call"
ERROR "name list not allowed in interface type"
ERROR "name list not allowed"
ERROR "no formatting directive"
ERROR "non-canonical import path .unicode//utf8.
ERROR "non-integer.*cap"
ERROR "non-integer.*len"
ERROR "nonescapingEface .foo.
ERROR "not an expression" "cannot assign to byte"
ERROR "not compatible with reflect.StructTag.Get"
ERROR "not compatible with reflect.StructTag.Get: bad syntax for struct tag key"
ERROR "not compatible with reflect.StructTag.Get: bad syntax for struct tag pair"
ERROR "not compatible with reflect.StructTag.Get: bad syntax for struct tag value"
ERROR "not enough arguments in call to f"
ERROR "not enough arguments in call to method expression Fooer.Foo"
ERROR "not enough arguments to return"
ERROR "not enough arguments"
ERROR "out of bounds"
ERROR "out of bounds" slice bounds not checked
ERROR "outside of array literal"
ERROR "outside type switch"
ERROR "overflow" but these implicit conversions are okay
ERROR "overflow" unsafe.Pointer can only convert to/from uintptr
ERROR "p does not escape"
ERROR "p does not escape" "func literal does not escape"
ERROR "p escapes to heap"
ERROR "p might be too small for shift of 32"
ERROR "p2 escapes to heap"
ERROR "pointer receiver"
ERROR "pointer to interface"
ERROR "pointer to interface, not interface"
ERROR "possible formatting directive in Error call"
ERROR "possible formatting directive in Log call"
ERROR "possible formatting directive in Println call"
ERROR "possible formatting directive in Warn call"
ERROR "possible misuse of unsafe.Pointer"
ERROR "possible misuse of unsafe.Pointer" but only in reflect
ERROR "possible misuse of unsafe.Pointer" certain uses of reflect are okay
ERROR "prototype xyz does not escape"
ERROR "range var k copies lock: sync.Mutex"
ERROR "range var m copies lock: sync.Mutex"
ERROR "range var mu copies lock: sync.Mutex"
ERROR "range var t.mu copies lock: sync.Mutex"
ERROR "range var v copies lock: sync.Mutex"
ERROR "range variable f captured by func literal"
ERROR "range variable i captured by func literal"
ERROR "range variable v captured by func literal"
ERROR "recur1 s does not escape"
ERROR "removed nil check before indirect"
ERROR "removed nil check"
ERROR "removed repeated nil check"
ERROR "removed.* nil check"
ERROR "requires explicit dereference"
ERROR "result of errors.New call not used"
ERROR "result of fmt.Errorf call not used"
ERROR "result of fmt.Sprint call not used"
ERROR "result of fmt.Sprintf call not used"
ERROR "return copies lock value: sync.Mutex"
ERROR "s does not escape"
ERROR "self-assignment of s.x to s.x"
ERROR "self-assignment of x to x" Another mistake
ERROR "should have signature ReadByte"
ERROR "should have signature Scan"
ERROR "single-value context"
ERROR "slice can only be compared to nil"
ERROR "slice of unaddressable value"
ERROR "slice of unaddressable value" these are okay because they are slicing a pointer to an array
ERROR "slice: omit check for 1st index" "slice: result cap not computed" "slice: skip base adjustment for 1st index 0" "slice: len-only update"
ERROR "slice: omit check for 1st index" "slice: skip base adjustment for 1st index 0"
ERROR "slice: omit check for 1st index" "slice: skip base adjustment for 1st index 0" "slice: len-only update"
ERROR "slice: omit check for 1st index" "slice: skip base adjustment for 1st index 0" "slice: len/cap-only update"
ERROR "slice: omit check for 2nd index"
ERROR "slice: omit check for 3rd index"
ERROR "slice: omit slice operation"
ERROR "struct field x has json tag but is not exported"
ERROR "struct field y has xml tag but is not exported"
ERROR "suspect or: .et.
ERROR "switchType x does not escape"
ERROR "too many arguments"
ERROR "type I is not an expression"
ERROR "type assertion inlined"
ERROR "type assertion not inlined"
ERROR "u might be too small for shift of 32"
ERROR "u16 too small for shift of 16"
ERROR "u32 too small for shift of 32"
ERROR "u64 too small for shift of 64"
ERROR "u8 too small for shift of 8"
ERROR "uint8" Test across imports.
ERROR "undefined.*Blah"
ERROR "undefined.*asdf"
ERROR "undefined.*indexWriter"
ERROR "undefined.*init"
ERROR "undefined.*io.ReadWriterCloser"
ERROR "undefined: OpenFile"
ERROR "undefined: any"
ERROR "undefined: syscall.X"
ERROR "undefined: voidpkg"
ERROR "unexpected EOF"
ERROR "unexpected case at end of statement"
ERROR "unexpected comma"
ERROR "unexpected default at end of statement"
ERROR "unexpected p0"
ERROR "unexpected p10"
ERROR "unexpected var" "cannot declare name"
ERROR "unexported field"
ERROR "unexported" "undefined: testing.anyLowercaseName"
ERROR "unkeyed fields"
ERROR "unreachable code"
ERROR "unrecognized printf flag"
ERROR "unrecognized printf verb"
ERROR "use of untyped nil"
ERROR "used as value"
ERROR "v does not escape"
ERROR "v escapes to heap"
ERROR "v1 escapes to heap"
ERROR "var declaration not allowed in for initializer"
ERROR "variable declaration copies lock value to z: testdata.Tlock contains sync.Once contains sync.Mutex"
ERROR "write barrier"
ERROR "wrong number of args for format in Printf call"
ERROR "wrong number of args for format in Printf call.*4 args"
ERROR "wrong number of args for format in Sprintf call"
ERROR "wrong number of args for format in Warnf call"
ERROR "x escapes to heap"
ERROR "x escapes to heap, not allowed in runtime."
ERROR "y escapes to heap"
ERROR "z does not escape"
ERROR HERE "function must be invoked"
ERROR comments must be of the form /* ERROR "rx" */ and rx is a regular expression that matches the expected error message.
ERROR comments must start with text `ERROR "rx"` or `ERROR rx` where rx is a regular expression that matches the expected error message.
EType describes a kind of type.
Each Cond has an associated Locker L (often a *Mutex or *RWMutex), which must be held when changing the condition and when calling the Wait method.
Each DIE (except the root ones) has at least 1 attribute: its name.
Each Float value also has a precision, rounding mode, and accuracy.
Each Go source directory it finds is delivered on d.scan.
Each P holds a pool for defers with small arg sizes.
Each Profile has a unique name.
Each Time has associated with it a Location, consulted when computing the presentation form of the time, such as in the Format, Hour, and Year methods.
Each allocation scans allocBits starting at freeindex until it encounters a 0 indicating a free object.
Each appearance in Value.Args and Block.Control counts once.
Each architecture defines a register space as a unique integer range.
Each architecture is allotted a distinct subspace of opcode values for declaring its arch-specific opcodes.
Each begins with this header, aligned to a word boundary.
Each bucket contains a few high-order bits of each hash to distinguish the entries within a single bucket.
Each bucket contains up to 8 key/value pairs.
Each bucket represents 4096 bytes of the text segment.
Each call allocates once.
Each call to Read updates N to reflect the new amount remaining.
Each call to SeekPC starts the search at the compilation unit of the last call, so in general looking up a series of PCs will be faster if they are sorted.
Each call will leave the fields of the struct set to the same values they had upon return, except for the PC field when the More field is zero.
Each command is named for its source directory, but only the final element, not the entire path.
Each command is named for its source directory, but only using the final element, not the entire path.
Each data item in the stream is preceded by a specification of its type, expressed in terms of a small set of predefined types.
Each decoder is responsible for handling any indirections associated with the data structure.
Each defer must be released with freedefer.
Each directory listed in GOPATH must have a prescribed structure: The src directory holds source code.
Each directory listed in the Go path must have a prescribed structure:
Each dot ends a segment of the name.
Each element encoded by two hexadecimals will get a leading 0x or 0X.
Each element in a JSON object or array begins on a new, indented line beginning with prefix followed by one or more copies of indent according to the indentation nesting.
Each element of the array is size bytes.
Each encoder copies and scales the tables according to its quality parameter.
Each encoder for a composite is responsible for handling any indirections associated with the elements of the data structure.
Each encountered method is compared against the interface method signatures, if it matches it is marked as reachable.
Each entry in the grid should be about REP/2.
Each entry is a list of bits representing a floating-point number (see fromBits).
Each entry is two bytes.
Each exported struct field becomes a member of the object unless - the field's tag is "-", or - the field is empty and its tag specifies the "omitempty" option.
Each expr is evaluated at the position of the comment and the result is compared with the expected value and type.
Each file record has a fixed-size one-line header followed by data bytes followed by an optional padding byte.
Each flood uses a new value of gen so that we don't have to clear all the r.Active words after each variable.
Each frame of a GIF can have a frame-local palette override the GIF-global palette.
Each frame's bounds must be within the rectangle defined by the two points (0, 0) and (Config.Width, Config.Height).
Each function must have either a single return value, or two return values of which the second has type error.
Each goroutine has its own bytes.Buffer.
Each indexed item must be a map, slice, or array.
Each init function in the list other than the first one is a dependency of the function immediately before it.
Each iteration adds /name to the beginning of dir.
Each iteration generates one std value.
Each iteration gives us 16 bytes so 10 iterations will be sufficient.
Each iteration of the loop eliminates two words by adding values to words to their right.
Each iteration of the loop returns a different set of results, until all possible result sets have been explored.
Each iteration processes one std value.
Each jarTest has to be performed on a fresh, empty Jar.
Each key is a non-empty string consisting of non-control characters other than space (U+0020 ' '), quote (U+0022 '"'), and colon (U+003A ':').
Each level includes the earlier output as well.
Each line is either blank, or looks like (tag: refs/tags/go1.4rc2, refs/remotes/origin/release-branch.go1.4, refs/heads/release-branch.go1.4) We need to find an element starting with refs/tags/.
Each listed package causes the execution of a separate test binary.
Each load command begins with uint32 command and length.
Each local has the encoding:
Each log is its own line, so we need to buffer writes until we see a newline.
Each logging operation makes a single call to the Writer's Write method.
Each major Go release in the Go 1.x series should add a tag here.
Each match result is either a single -, meaning no match, or a space-separated sequence of pairs giving the match and submatch indices.
Each message structure has a Walk method that is used by a generic pack/unpack routine.
Each object in the graph is serialized by writing its fields sequentially.
Each of the ExtKeyUsage* constants define a unique action.
Each of the Name structures contained in the Token has the Space set to the URL identifying its name space when known.
Each of the bloc names and valu names should be unique across the Fun.
Each of the four 20-iteration rounds differs only in the computation of f and the choice of K (_K0, _K1, etc).
Each of these extra m's also has a g0 and a curg that are pressed into service as the scheduling stack and current goroutine for the duration of the cgo callback.
Each of these flags is also recognized with an optional 'test.' prefix, as in -test.v.
Each of these observations is a single word-sized read (first c.closed and second c.recvq.first or c.qcount depending on kind of channel).
Each of these observations is a single word-sized read (first c.sendq.first or c.qcount, and second c.closed).
Each of these pairs tests both `` vs "" strings and also use of invalid characters spelled out as escape sequences and written directly.
Each of these should decode to the string "foobar", without errors.
Each of these should decode to the string "sure", without errors.
Each of these vars has a corresponding case in (*File).Visit.
Each pair creates 4 goroutines: client reader/writer and server reader/writer.
Each parameter is converted into string by applying fn to it before conversion.
Each pass should clear opt when done, but you never know, so clear them all ourselves too.
Each record is a slice of fields.
Each record is separated by the newline character.
Each record starts on a new line.
Each relocation has the encoding:
Each run will generate two files, a .go file and a .c or .cxx file.
Each sample will include a tag "source" with the addresses recognized in string format.
Each section contains its own relocation list.
Each size class has its own page count that gets allocated and chopped up when new objects of the size class are needed.
Each span of unindented non-blank lines is converted into a single paragraph.
Each stanza gives the disassembly for a contiguous range of addresses all mapped to the same original source file and line number.
Each subbucket represents 256 bytes of the text segment.
Each symbol is laid out as the following fields (taken from LSym*):
Each test does only one real send or receive at a time, but phrased in various ways that the compiler may or may not rewrite into simpler expressions.
Each test has a unique name and belongs to a group (heading)
Each test is in a separate function just so that if the compiler stops processing after one error, we don't lose other ones.
Each test must be performed on an empty new Jar.
Each tests entry is list of files belonging to the same package.
Each time analyze is called with a list of functions, every function on that list only calls other functions on the list or functions that have been passed in previous invocations of analyze.
Each time we see a bit, we square, thus doubling the power.
Each time, 10*fraction fits in a uint64 without overflow.
Each trial runs in a different goroutine so that an earlier stack growth does not invalidate a later attempt.
Each type of GC state transition is protected by a lock.
Each type unit defines a single primary type and an 8-byte signature.
Each unit has its own abbreviation table and address size.
Each update batch results in a (pc, line) pair, where line applies to every PC from pc up to but not including the pc of the next pair.
Each value is quoted using U+0022 '"' characters and Go string literal syntax.
Each value maps to a uint32 of which the 8 most significant bits hold the codeword size in bits and the 24 least significant bits hold the codeword.
Each value we send is preceded by its type definition: an encoded int.
Each variable on its first use in a basic block leaves a FwdRef in that block representing the incoming value of that variable.
Each will execute its own stop, and the stops will be serialized.
Each write to the returned writer sends a log message with the given facility, severity and tag.
Each write to the returned writer sends a log message with the given priority and prefix.
Easier to just skip nil arguments.
Easier to loop over the input for 8-bit values.
Easiest test: require monotonicity.
Easiest way to avoid for int8, int16: use int32.
Easy case: two hex digits.
Easy implementation: read from /dev/urandom.
Easy nested recursive panic.
Easy: current directory.
Echo all incoming data.
Echo back the first line of each incoming connection.
EcmaScript 4 uses only the Python form.
Edit the documentation in other files and rerun mkalldocs.sh to generate this one.
Effectively an incremental read
Eg genwrapper may declare out of package names later.
Egyptian_Hieroglyphs is the set of Unicode characters in script Egyptian_Hieroglyphs.
Either ".rel" or ".rela" depending on which type of relocation the target platform uses.
Either flagIndir is set and v.ptr points at array, or flagIndir is not set and v.ptr is the actual array data.
Either flagIndir is set and v.ptr points at struct, or flagIndir is not set and v.ptr is the actual struct data.
Either number, quoted string, or identifier.
Either sgp is the only element in the queue, or it has already been removed.
Either this pointer is a stack or an unused span or it's a C allocation.
Either those labels were never defined, or they are inside blocks and not reachable for the respective gotos.
Either way, TestStop should still be able to catch them when it wants them and then when it stops wanting them, the original behavior should resume.
Either way, line should begin with "go object ".
Either way, the stack scan has completed when scang returns.
Either way, we might now have too many instead of too few.
Either way, you need to have a working compiler binary first.
Either we failed to advance, we have a percent character, or we ran out of input.
Either will still generate correct results, it will just lead to imprecision.
Elaborate way to say runtime.Gosched that does not put the goroutine onto global runq.
Elbasan is the set of Unicode characters in script Elbasan.
Elem returns a type's element type.
Elem returns element type of array a.
Elem returns the element type for the given pointer p.
Elem returns the element type of channel c.
Elem returns the element type of map m.
Elem returns the element type of slice s.
Elem returns the type of elements of t.
Elem returns the value that the interface v contains or that the pointer v points to.
Element flag same as Elem of Ptr.
Element is an element of a linked list.
Element is int, element is quad (struct).
Elements of the elliptic curve group are represented in Jacobian coordinates: (x, y, z).
Elements which reach their final position are no longer moved.
Elements will be separated by a space.
ElfType is only set for symbols read from Go shared libraries, but for other symbols it is left as STT_NOTYPE which is fine.
ElfType is set for symbols read from shared libraries by ldshlibsyms.
Eliminate copy inputs.
Eliminate each inner ..
Eliminate nil entries from the decls list if entries were filtered.
Eliminate redundant nil pointer checks.
Eliminate the coefficients at 2**224 and greater.
Eliminate the nil check.
Eliminate top while maintaining the same value mod p.
Ellipsis must represent at least one 0 group.
Else, use the CC environment variable and defaultCC as fallback.
Embed ReaderAt for ReadAt method.
Embedded fields are always of the form T or *T where T is a named type.
Embedded in all non-trivial Nodes.
Embedded interface: The type must be a (possibly qualified) identifier denoting another interface.
Embedded template definitions are added to the treeSet map.
Embedding via pointer.
Emerg logs a message with severity LOG_EMERG, ignoring the severity passed to New.
Emit .debug_pubnames/_types.
Emit 120-bit chunks of full bytes (max is 127 but we avoid using partial bytes).
Emit VEX prefix and opcode byte.
Emit a or p according to actual offset, even if label is wrong.
Emit code for runtime.getg() directly instead of calling function.
Emit control flow instructions for block
Emit debug_abbrevs, debug_info and debug_line sections to current offset in cout.
Emit digits for the fractional part.
Emit garbage collection symbols.
Emit literal 0 bit, then repeat as needed.
Emit move from src to dst.
Emit semantically uninteresting bytes (in particular, punctuation in strings) unmodified.
Emit sequence of counted strings, chopping at dots.
Emit text up to the start of the tag or comment.
Emit the AC components.
Emit the CIE, Section 6.4.1
Emit the FDE header, Section 6.4.1.
Emit the cgo_dynamic_linker line.
Emit the live pointer map data structures
Emit them as literal bytes.
Emit vardef if needed.
EmitEnabled reports whether calls to the emitFunc provided to NewDecoder are currently enabled.
Emphasize and escape a line of text for HTML.
Empty alternate is special case (shouldn't happen but easy to handle).
Empty and built-in protocol types are blacklisted and can't be overridden with alternate implementations.
Empty buf through repeated reads into fub.
Empty but non-nil maps are sent, so if the receiver has not allocated one already, one will always be allocated on receipt unless the transmitted map is nil and not at the top level.
Empty character classes
Empty composite literals to small globals were not filled in
Empty concatenation is special case.
Empty content type is legal - should be treated as application/octet-stream (RFC 2616, section 7.2.1)
Empty control statements created syntax errors.
Empty file is a "valid" tar file
Empty identifier is valid but useless.
Empty interface has one layout, all interfaces with methods have a second layout.
Empty interfaces holding values.
Empty matches abutting a preceding match are ignored.
Empty means no error.
Empty method means GET:
Empty paths are uninteresting.
Empty reports whether the rectangle contains no points.
Empty reports whether the result of String would be "".
Empty returns true if t is the empty interface.
Empty returns true if the profile contains no samples.
Empty rings are represented as nil Ring pointers.
Empty string as a regular expression.
Empty string used to be mishandled.
Empty strings are not valid input when scanning a string.
Empty trees are permitted.
Empty with room to grow.
EmptyOpContext returns the zero-width assertions satisfied at the position between the runes r1 and r2.
Enable HTTP/2 by default if the user hasn't otherwise configured their TLSNextProto map.
Enable mutator assists to put back-pressure on fast allocating mutators.
Enable netpoller, affects schedler behavior.
Enable tracing if requested.
Encode (send) some values.
Encode (send) the value.
Encode 5-bit blocks using the base32 alphabet
Encode HTML specials as hex so the output can be embedded in HTML attributes without further encoding.
Encode a *T, decode a T
Encode a 1x1 red image.
Encode a T, decode a *T
Encode and send the request.
Encode calls Flush before returning.
Encode does not add these.
Encode each byte as two hexadecimal digits.
Encode encodes src into EncodedLen(len(src)) bytes of dst.
Encode encodes src into at most MaxEncodedLen(len(src)) bytes of dst, returning the actual number of bytes written.
Encode encodes src using the encoding enc, writing EncodedLen(len(src)) bytes to dst.
Encode filename as length of common prefix with previous filename, followed by (possibly empty) suffix.
Encode implements hexadecimal encoding.
Encode instructions and create relocation for accessing s+d according to the instruction op with source or destination (as appropriate) register reg.
Encode returns 0 when len(src) is 0
Encode returns the UTF-16 encoding of the Unicode code point sequence s.
Encode returns the encoded-word form of s.
Encode that image as JPEG.
Encode the pixels: neither is in range, because there is no palette.
Encode the response header
Encode the value into a new buffer.
Encode transmits the data item represented by the empty interface value, guaranteeing that all necessary type information has been transmitted first.
Encode writes the Image m to w in GIF format.
Encode writes the Image m to w in JPEG 4:2:0 baseline format with the given options.
Encode writes the Image m to w in PNG format.
Encode writes the JSON encoding of v to the stream, followed by a newline character.
Encode writes the XML encoding of v to the stream.
Encode x as an octal ASCII string and write it into b with leading zeros.
EncodeAll writes the images in g to w in GIF format with the given loop count and delay between frames.
EncodeElement calls Flush before returning.
EncodeElement writes the XML encoding of v to the stream, using start as the outermost tag in the encoding.
EncodeRune returns the UTF-16 surrogate pair r1, r2 for the given rune.
EncodeRune writes into p (which must be large enough) the UTF-8 encoding of the rune.
EncodeToString returns the base32 encoding of src.
EncodeToString returns the base64 encoding of src.
EncodeToString returns the hexadecimal encoding of src.
EncodeToken allows writing a ProcInst with Target set to "xml" only as the first token in the stream.
EncodeToken does not call Flush, because usually it is part of a larger operation such as Encode, and those will call Flush when finished.
EncodeToken used to silently eat tokens with an invalid type.
EncodeToken writes the given XML token to the stream.
EncodeValue transmits the data item represented by the reflection value, guaranteeing that all necessary type information has been transmitted first.
EncodedLen returns the length in bytes of the base32 encoding of an input buffer of length n.
EncodedLen returns the length in bytes of the base64 encoding of an input buffer of length n.
EncodedLen returns the length of an encoding of n source bytes.
Encoder configures encoding PNG images.
Encoder supports nil Bytes but decoder returns initialized.
Encoder supports nil Headers but decoder returns initialized.
Encoding Details This section documents the encoding, details that are not important for most users.
Encoding and decoding functions and methods that do not return an error either use panic to report an error or are guaranteed error-free.
Encoding can be prescient, so no check on length.
Encoding failure defaults to heap.
Encoding for VEX prefix in tables.
Encoding headers and splitting them into any necessary CONTINUATION frames is handled elsewhere.
Encoding is of a wireType.
Encountered bad address in store/load.
Encountered extended key usages unknown to this package.
Encrypt encrypts the first block in src into dst.
Encrypt one block from src into dst, using the expanded key xk.
Encrypt one block from src into dst, using the subkeys.
Encrypt the buffer using AES in ECB mode.
EncryptOAEP encrypts the given message with RSA-OAEP.
EncryptPEMBlock returns a PEM block of the specified type holding the given DER-encoded data encrypted with the specified algorithm and password.
Encrypted ticket used for session resumption with server
Encrypting twice with a DES weak key should reproduce the original input
Encrypting with one member of the semi-weak pair and then encrypting the result with the other member should reproduce the original input.
Encryption and decryption of a given message must use the same hash function and sha256.New() is a reasonable choice.
Encryption key setup.
End all calculations for this level.
End mark and end test
End marks the end of the program, writing any remaining bytes.
End notifies the sequencer that the event numbered id has completed, allowing it to schedule the event numbered id+1.
End of boilerplate cgo prologue.
End of flags, starting group or not.
End of linear dependency definitions.
End offset of fragment
End range, but avoid flip flop.
End returns the corresponding XML end element.
End returns the offset of the first byte immediately after this field.
End symbol references
End-of-Band run, specified in section G.1.2.2.
End-to-end serving tests
EndHeaders indicates that this frame contains an entire header block and is not followed by any CONTINUATION frames.
EndRequest notifies p that the request with the given id has been sent (or, if this is a server, received).
EndResponse notifies p that the response with the given id has been received (or, if this is a server, sent).
EndSequence indicates that Address is the first byte after the end of a sequence of target machine instructions.
EndStream indicates that the header block is the last that the endpoint will send for the identified stream.
Endeavor to get gcscandone set to true, either by doing the stack scan ourselves or by coercing gp to scan itself.
Enough for a DNS name.
Enqueue the element to send.
Ensure 6l outputs sections without overlaps.
Ensure Benchmark initialized common.w by invoking it with an error and normal case.
Ensure Opaque resets the URL.
Ensure cmd/compile treats absent and empty tags as equivalent.
Ensure only one update at a time checks resolv.conf.
Ensure ordered execution of Reads and Writes
Ensure ordered execution of Writes
Ensure package reflect treats absent and empty tags as equivalent.
Ensure pipeline order
Ensure root node uses a lookup table (for performance).
Ensure samples are sorted by address.
Ensure sign/zero-extended result.
Ensure that close unblocks receive.
Ensure that defer arg sizes that map to the same defer size class also map to the same malloc size class.
Ensure that directives with comments include the complete text of any nested directives.
Ensure that each P has a background GC G.
Ensure that file descriptors have not already been leaked into our environment.
Ensure that it provides mutual exclusion for readers.
Ensure that it provides mutual exclusion for writers.
Ensure that new instances are returned for the wrapper too.
Ensure that new instances are returned, again.
Ensure that new instances are returned.
Ensure that non-blocking receive does not block.
Ensure that non-blocking send does not block.
Ensure that programs can't modify the internals of the host cache.
Ensure that receive from empty chan blocks.
Ensure that send to full chan blocks.
Ensure that send/recv on the same chan in select does not crash nor deadlock.
Ensure that sort.Sort does not panic when Less returns inconsistent results.
Ensure that sync and runtime agree on size of notifyList.
Ensure that the heap goal is at least a little larger than the current live heap size.
Ensure that the span is swept.
Ensure that the stores above that initialize x to type-safe memory and set the heap bits occur before the caller can make x observable to the garbage collector.
Ensure that this guarantee from the docs is upheld: "Further calls to Parse in the copy will add templates to the copy but not to the original."
Ensure that we do not do this.
Ensure that we receive 0 from closed chan.
Ensure that we stay on the same M where we disable profiling.
Ensure that we wait for the readLoop to complete before calling Head again
Ensure that zeroing range loops have the requisite side-effects.
Ensure the goroutine runs before we continue the loop.
Ensure the import decl has parentheses, if needed.
Ensure there's always a little margin so that the mutator assist ratio isn't infinity.
Ensure we are not testing the overwrite case here.
Ensure we don't regress the number of packages we can parse.
Ensure we have enough stack to call morestack.
Enter command processing loop.
Enter concurrent mark phase and enable write barriers.
Entersyscall must not call any function that might split/grow the stack.
Entire input is non string, comment, regexp tokens.
Entire ptrmask fits in uintptr with room for a byte fragment.
Entity can be used to map non-standard entity names to string replacements.
Entries are created by reflect.addReflectOff.
Entry has been evacuated to first half of larger table.
Entry is a directory.
Entry point virtual address
Entry pointer for liveness analysis.
Entry points for net, time to call nanotime.
Entry reads a single entry from buf, decoding according to the given abbreviation table.
Entry returns the entry address of the function.
Entry size if section holds table
Env specifies the environment of the process.
Environment variable control of SSA CG 1.
Environment variables The go command, and the tools it invokes, examine a few different environment variables.
Environment variables for use with cgo: CC The command to use to compile C code.
EpilogueBegin indicates that Address is one (of possibly many) PCs where execution should be suspended for a breakpoint on exit from this function.
Eq reports whether p and q are equal.
Eq reports whether r and s contain the same set of points.
Eq specifies a BlockAMD64EQ.
Eqtype only checks that incoming and result parameters match, so explicitly check that the receiver parameters match too.
Eqtype reports whether t1 and t2 are identical, following the spec rules.
Equal compares two MACs for equality without leaking timing information.
Equal reports whether ip and x are the same IP address.
Equal reports whether oi and other represent the same identifier.
Equal reports whether t and u represent the same time instant.
EqualFold reports whether s and t, interpreted as UTF-8 strings, are equal under Unicode case-folding.
Equality is just pointer equality on Values (so cse is important to do before lowering).
Equally, the result is also wrong if the point from the table is zero, which happens when the index is zero.
Equals (and other chars) do not assignments make (yet).
Equivalence classes of size 1 are ignored.
Equivalent to test3 but using defer to make the call.
Equivalent to the old way.
Erase any spills we never used
Erf returns the error function of x.
Erfc returns the complementary error function of x.
Err is any error encountered while writing the Request.
Err is any error that occurred during the DNS lookup.
Err is the error that occurred during the operation.
Err logs a message with severity LOG_ERR, ignoring the severity passed to New.
Err may be called after an explicit or implicit Close.
Err returns Canceled if the context was canceled or DeadlineExceeded if the context's deadline passed.
Err returns a non-nil error value after Done is closed.
Err returns an error equivalent to this error list.
Err returns the error (if any) first set by BreakWithError or CloseWithError.
Err returns the error, if any, that was encountered during iteration.
Err returns the first non-EOF error that was encountered by the Scanner.
Err should be consulted to distinguish between the two cases.
ErrAmbigContext: "...
ErrBadHTML: "expected space, attr name, or end of tag, but got ...", "...
ErrBadPattern indicates a globbing pattern was malformed.
ErrBodyNotAllowed is returned by ResponseWriter.Write calls when the HTTP method or response code does not permit a body.
ErrBodyReadAfterClose is returned when reading a Request or Response Body after the body has been closed.
ErrChecksum is returned when reading GZIP data that has an invalid checksum.
ErrChecksum is returned when reading ZLIB data that has an invalid checksum.
ErrClosedPipe is the error used for read or write operations on a closed pipe.
ErrConnClosed is returned by Read when a handler attempts to read the body of a request after the connection to the web server has been closed.
ErrContentLength is returned by ResponseWriter.Write calls when a Handler set a Content-Length response header with a declared size and then attempted to write more bytes than declared.
ErrDecryption represents a failure to decrypt a message.
ErrDictionary is returned when reading ZLIB data that has an invalid dictionary.
ErrFinalToken is a special sentinel error value.
ErrFormat indicates that decoding encountered an unknown format.
ErrFrameTooLarge is returned from Framer.ReadFrame when the peer sends a frame that is larger than declared with SetMaxReadFrameSize.
ErrHandlerTimeout is returned on ResponseWriter Write calls in handlers which have timed out.
ErrHeader is returned when reading GZIP data that has an invalid header.
ErrHeader is returned when reading ZLIB data that has an invalid header.
ErrHelp is the error returned if the -help or -h flag is invoked but no such flag is defined.
ErrHijacked is returned by ResponseWriter.Write calls when the underlying connection has been hijacked using the Hijacker interfaced.
ErrInvalidHuffman is returned for errors found decoding Huffman-encoded strings.
ErrInvalidPublicKey results when a public key is not usable by this code.
ErrLength results from decoding an odd length slice.
ErrLineTooLong is returned when reading malformed chunked data with lines that are too long.
ErrLineTooLong is returned when reading request or response bodies with malformed chunked encoding.
ErrMessageTooLong is returned when attempting to encrypt a message which is too large for the size of the public key.
ErrMissingFile is returned by FormFile when the provided file field name is either not present in the request or not a file field.
ErrNoCookie is returned by Request's Cookie method when a cookie is not found.
ErrNoLocation is returned by Response's Location method when no Location header is present.
ErrNoLocation is returned if no Location header is present.
ErrNoProgress is returned by some clients of an io.Reader when many calls to Read have failed to return any data or error, usually the sign of a broken io.Reader implementation.
ErrNoRows is returned by Scan when QueryRow doesn't return a row.
ErrNoSymbols is returned by File.Symbols and File.DynamicSymbols if there is no such section in the File.
ErrNotExist is returned when a registry key or value does not exist.
ErrNotFat is returned from NewFatFile or OpenFat when the file is not a universal binary but may be a thin binary, based on its magic number.
ErrNotFound is the error resulting if a path search failed to find an executable file.
ErrOrEOF is like Err, but returns EOF.
ErrPersistEOF (above) reports that the remote side is closed.
ErrRange indicates that a value is out of range for the target type.
ErrRequestAborted is returned by Read when a handler attempts to read the body of a request that has been aborted by the web server.
ErrShortBuffer is returned when the buffer was too short for the operation.
ErrShortBuffer means that a read required a longer buffer than was provided.
ErrShortWrite means that a write accepted fewer bytes than requested but failed to return an explicit error.
ErrSkip is only supported where explicitly documented.
ErrSkip is returned so the caller acts as if we didn't implement this at all.
ErrSkipAltProtocol is a sentinel error value defined by Transport.RegisterProtocol.
ErrSlashAmbig: '/' could start a division or regexp.
ErrStringLength is returned by Decoder.Write when the max string length (as configured by Decoder.SetMaxStringLength) would be violated.
ErrSyntax indicates that a value does not have the right syntax for the target type.
ErrTimeOrder is returned by Parse when the trace contains time stamps that do not respect actual event ordering.
ErrTooLarge is passed to panic if memory cannot be allocated to store data in a buffer.
ErrUnexpectedEOF means that EOF was encountered in the middle of reading a fixed-size block or data structure.
ErrUnexpectedType is returned by Get*Value when the value's type was unexpected.
ErrUnknownPC is the error returned by LineReader.ScanPC when the seek PC is not covered by any entry in the line table.
ErrUnsupportedAlgorithm results from attempting to perform an operation that involves algorithms that are not currently implemented.
ErrVerification represents a failure to verify a signature.
Errchk delights by not returning non-zero status if it finds errors, so we look at the output.
Errno is the Windows error number.
Erroneous and short encodings are treated as single runes of width 1 byte.
Erroneous function calls (check args).
Erroneous index does not affect sequence.
Error describes a problem encountered during template Escaping.
Error for arguments outside the test range will be larger owing to error amplification by the exponential function.
Error handling is simplified by the buf getters returning an endless stream of 0s after an error.
Error has a nil package in its qualified name since it is in no package
Error if the offset does not fit into 16 bits.
Error implements the error interface.
Error is equivalent to Log followed by Fail.
Error is equivalent to Log() followed by Fail().
Error is equivalent to yyerror in the original yacc.
Error is non-nil if there are no lines left, and nil otherwise.
Error is set to nil, ErrorCount is set to 0, Mode is set to GoTokens, and Whitespace is set to GoWhitespace.
Error is variadic user-define Println-like function.
Error messages reported by the typechecker are compared against the error messages expected in the test files.
Error methods that do not satisfy the Error interface and should be checked.
Error records the name of a binary that failed to be executed and the reason it failed.
Error recovery is not ideal and we use a new declaration each time for the parser to recover.
Error reports an error and the operation and URL that caused it.
Error reports any error that has occurred during a previous Write or Flush.
Error returns an error string formatted as follows: filename:line:column: message
Error returns the string representation of a ParseError.
Error scales with stddev
Error scales with the inverse of the rate
Error string limited to two entries for compatibility.
Error strings for invented errors
Error that happened, if any.
Error, which represents a numeric error response from a server.
Error: test2 calls g instead of f
ErrorCode describes the kind of error.
ErrorCode is a code for a kind of error.
ErrorContext returns a textual representation of the location of the node in the input text.
ErrorCount is incremented by one for each error encountered.
ErrorDetail is not guaranteed to return a non-nil value and like the rest of the http2 package, its return value is not protected by an API compatibility promise.
ErrorDetail is reset after the next call to ReadFrame.
ErrorDetail returns a more detailed error of the last error returned by Framer.ReadFrame.
ErrorHandling defines how FlagSet.Parse behaves if the parse fails.
ErrorList implements the sort Interface.
ErrorList is a list of *Errors.
ErrorList is a named slice, so no warnings should be emitted.
ErrorLog specifies an optional logger for errors accepting connections and unexpected behavior from handlers.
ErrorLog specifies an optional logger for errors that occur when attempting to proxy the request.
ErrorString implements Error's String method by returning itself.
ErrorVarName returns error variable name for r.
Errorf formats according to a format specifier and returns the string as a value that satisfies error.
Errorf is equivalent to Logf followed by Fail.
Errorf is equivalent to Logf() followed by Fail().
Errorf is used by the test for a case in which the first parameter is not a format string.
Errors are deferred until Row's Scan method is called.
Errors in decoding and encoding are handled using panic and recover.
Errors of this type are only returned by the frame parser functions and converted into ConnectionError(ErrCodeProtocol).
Errors returned by Scanner.
Errors should be reported (true arg to readImports).
Errors used by the HTTP server.
Escape analysis should prevent the first, garbage collection should prevent the second, and the third is completely OK.
Escape comment text for HTML.
Escape constants are numbered in order of increasing "escapiness" to help make inferences be monotonic.
Escape is like EscapeText but omits the error return value.
Escape it rune by rune to make sure that any fast-path checking does not break escaping.
Escape sequence not over-escaped.
EscapeArg rewrites command line argument s as prescribed in http://msdn.microsoft.com/en-us/library/ms880421.
EscapeString writes to p the properly escaped XML equivalent of the plain text data s.
EscapeText writes to w the properly escaped XML equivalent of the plain text data s.
Escaped non-word characters are always themselves.
EscapedPath returns the escaped form of u.Path.
EscapedPath returns u.RawPath when it is a valid escaping of u.Path.
Escaping result of intstring.
Esclevels are vectors, do not compare as integers, and must use "min" of old and new to guarantee convergence.
Especially important is "Connection" because we want a persistent connection, regardless of what the client sent to us.
Especially useful for amd64/386.
Estimate month on assumption that every month has 31 days.
Estimate the expected time for this platform.
Ethiopic is the set of Unicode characters in script Ethiopic.
Euler") Initialize the scanner.
EvGoSysExit emission is delayed until the thread has a P.
Eval functions evaluate pipelines, commands, and their elements and extract values from the data structure by examining fields, calling methods, and so on.
Eval the pipeline, then the fields.
Eval the var, then the fields.
Eval will re-evaluate its argument each time, and it also does not know about the context in which an expression is used (e.g., an assignment).
EvalSymlinks returns the path name after the evaluation of any symbolic links.
Evaluate the symlink farm.
Even before next_marker sees extraneous data, jpeg_fill_bit_buffer in jdhuff.c reads as many bytes as it can, possibly past the end of a scan's data.
Even for a 32-bit exponent, this reduces the number of operations.
Even if a uintptr holds the address of some object, the garbage collector will not update that uintptr's value if the object moves, nor will that uintptr keep the object from being reclaimed.
Even if all the variables were updated correctly, it is not clear that we want to expose a traceback that begins on one stack and ends on another stack.
Even if dir is not rooted, no harm done.
Even if it informs the correct goroutine, that goroutine might ignore the request if it is simultaneously executing newstack.
Even if the arguments are .go files, this loop suffices.
Even if the child were to close the fd explicitly, it would still be open from the time of the fork until the time of the explicit close, and the race would remain.
Even if the function fails, the contents of dst, up to its capacity, may be overwritten.
Even if the input is truncated, we should still return the partial decoded result.
Even if the section is stored compressed in the ELF file, Data returns uncompressed data.
Even if the section is stored compressed in the ELF file, the ReadSeeker reads uncompressed data.
Even if the server sends back an error, you shouldn't return ErrBadConn.
Even if we are not installing a signal handler, set SA_ONSTACK if necessary.
Even if we hold schedlock, most data can be changed concurrently.
Even if we unrolled the range loop, each iteration would be a function call, so don't bother unrolling.
Even on 64-bit platform, darwin uname -m prints i386.
Even on 64-bit platform, solaris uname -m prints i86pc.
Even so, use the standard numbers.
Even so, we might have to remove one or two on different systems.
Even the days of the week match up.
Even the valid patterns below come with important caveats.
Even these signals can be fetched using the os/signal package.
Even though ByteStruct is a struct, it's treated as a singleton at the top level.
Even though segment registers are 16-bit, push and pop can save/restore them from 32-bit slots, so they do not imply operand size.
Even though the data is not small, it has already been read.
Even though the field is a value, we can still take its address and should be able to call the methods.
Even though the length is redundant (it's part of the type), it's a useful check and is included in the encoding.
Even though we filled in the full array just now, record that we only filled in up to the ptrdata of the last element.
Even when enabled, the server may not change its identity between handshakes (i.e. the leaf certificate must be the same).
Event count from the cover profile.
Event describes one event in the trace.
Event ports are level-triggered, unlike epoll and kqueue which can be configured in both level-triggered and edge-triggered mode.
Event types in the trace, args are given in square brackets.
Event types in the trace.
Events (kqueue, kevent)
Events within an individual batch are in correct order, because they are emitted by a single P.
Eventually DragonFly BSD stops pretending, but the transition period would cause unpredictable behavior and we need to avoid it.
Eventually, can stop deleting these.
Every DIE has at least a DW_AT_name attribute (but it will only be written out if it is listed in the abbrev).
Every MSpan is in one doubly-linked list, either one of the MHeap's free lists or one of the MCentral's span lists.
Every PC has "stdole 2.0 OLE Automation" library installed.
Every _cgo_flags file has -g and -O2 in _CGO_LDFLAGS but they don't mean anything to the linker so filter them out.
Every binary has a __text section.
Every bit in cal.b is a single stack word.
Every block has 6 numbers associated with it: entry-1, entry, entry+1, exit-1, and exit, exit+1.
Every call to Scan, even the first one, must be preceded by a call to Next.
Every import path should be loaded initially with useVendor, and then the expanded version (with the /vendor/ in it) gets recorded as the canonical import path.
Every key maps to obj.
Every line is indented at least one tab.
Every package in a program must have a unique import path.
Every package that imports this one directly defines the symbol.
Every splitting function ensures that there are at least StackLimit bytes available below SP when the splitting prologue finishes.
Every time we expand a function we generate a new set of tmpnames, PAUTO's in the calling functions, and link them off of the PPARAM's, PAUTOS and PPARAMOUTs of the called function.
Every time we write to the pipe we should get an EPIPE.
Everything before that is considered part of the setup and is retried.
Everything but fixed array is a dereference.
Everything depends on runtime, except runtime, its internal subpackages, and unsafe.
Everything else must be escaped.
Everything else should compare equal.
Everything except HeapReleased, HeapIdle, and NumGC, because they indeed can be 0.
Everything in that directory, and any target-specific additions.
Everything is out of date.
Everything is refused.
Everything must match.
Everything will still work, just with more threads.
Everything's fine, record final type and value for x.
Everywhere in the runtime and reflect packages, it is assumed that there is exactly one *_type per Go type, so that pointer equality can be used to test if types are equal.
Evict entry with smallest count.
Evict evicts fd from the pending list, unblocking any I/O running on fd.
Evict the hash table into the log and return it.
Exact conversions (destination pointer type matches source type)
Exact end of data and start of padding
ExactString returns an exact, printable form of the value.
Exactly 1 block of zeros is read and EOF is hit.
Exactly 1 empty block
Exactly 2 empty blocks (normal end-of-stream)
Exactly halfway between 1 and math.Nextafter(1, 2).
Exactly halfway between 1 and the next float32.
Exactly one of the two following values must be set
Examine the entire slice.
Example 1: A single string flag called "species" with default value "gopher".
Example 2: Two flags sharing a variable, so we can have a shorthand.
Example 3: A user-defined flag type, a slice of durations.
Example As a simple example, consider a package that uses cgo to call C.sin.
Example from RFC 2045:
Example from issue 3139
Example functions may include a concluding line comment that begins with "Output:" and is compared with the standard output of the function when the tests are run.
Example functions without output comments are compiled but not executed.
Example import "text/template" ...
ExampleMethodSet prints the method sets of various types.
ExampleMultiKeys demonstrates a technique for sorting a struct type using different sets of multiple fields in the comparison.
ExampleScope prints the tree of Scopes of a package created from a set of parsed files.
ExampleSortKeys demonstrates a technique for sorting a struct type using programmable sort criteria.
Examples Here are some example one-line templates demonstrating pipelines and variables.
Examples are always run once.
Examples are linux, darwin, windows, netbsd.
Examples collected by scanning all the assembly in the standard repo.
Examples from RFC 6724 section 10.2: Prefer matching scope.
Examples from the Go Language Spec, section "Arithmetic operators"
Examples returns the examples found in the files, sorted by Name field.
Examples: "field (T) f int" "method (T) f(X) Y" "method expr (T) f(X) Y"
Examples: go doc Show documentation for current package.
Except QEMU, which is buggy, as usual: it won't adjust the pointer upward.
Except for raw strings, actions may not span newlines, although comments can.
Except for reading the body, handlers should not modify the provided Request.
Except for reading uints, it is an implementation of a reader that is independent of the one implemented by Decoder.
Except for special, low-level applications, synchronization is better done with channels or the facilities of the sync package.
Except on NaCl where it must not be loaded.
Except where indicated otherwise, unexported methods on fsys expect fs.mu to have been locked by the caller.
Exception: To be compatible with zlib, we also need to accept degenerate single-code codings.
Exception: on OS X, programs such as Shark only work with dynamic binaries, so leave it enabled on OS X (Mach-O) binaries.
Exceptions: a few standard packages have forward declarations for pieces supplied behind-the-scenes by package runtime.
Excess generality on a machine with 64-bit integer registers.
Excessively large images are also rejected.
Exchanging two struct fields was compiled incorrectly.
Exclude GODEBUG from the environment to prevent its output from breaking tests that are trying to parse other command output.
Exclude GOTRACEBACK for the same reason.
Exclude certain packages to avoid circular dependencies.
Exclude registers with fixed functions
Exclude results where the import path would include /testdata/.
Exclude selectors and qualified identifiers---lexical refs only.
Excluded for now: Standard gccgo doesn't support this import format currently.
Exclusive is whether the dependency is exclusive.
Exec executes a prepared statement with the given arguments and returns a Result summarizing the effect of the statement.
Exec executes a query that doesn't return rows, such as an INSERT or UPDATE.
Exec executes a query that doesn't return rows.
Exec executes a query without returning any rows.
Exec may return ErrSkip.
ExecError is the custom error type returned when Execute has an error evaluating its template.
ExecIO executes a single IO operation o.
Execer is an optional interface that may be implemented by a Conn.
Execute applies a parsed template to the specified data object, and writes the output to wr.
Execute applies a parsed template to the specified data object, writing the output to wr.
Execute f on each test case.
Execute gdb commands.
Execute opcodes until we reach an opcode that emits a line table entry.
Execute single opcode.
Execute the template for each recipient.
Execute the templates in the reverse order to verify the first is unaffected by the second.
ExecuteTemplate applies the template associated with t that has the given name to the specified data object and writes the output to wr.
Executed only by the owner P.
Executing write barriers on p is complicated in the general case because we either need to unwind the stack to get the stack map, or we need the type's bitmap, which may be a GC program.
Execution engine The encoder engine is an array of instructions indexed by field number of the incoming decoder.
Execution engine encEngine an array of instructions indexed by field number of the encoding data, typically a struct.
Execution of the template walks the structure and sets the cursor, represented by a period '.' and called "dot", to the value at the current location in the structure as execution proceeds.
Execution recipe stops at first blank line.
Execution will continue at the next Test.
Execution will continue at the next test or benchmark.
Exercises generation of PtrTypes not present in the binary.
Existence-only map lookups should not generate a nil check
Existing data is first discarded.
Exit causes the current program to exit with the given status code.
Exit specifies a BlockExit.
Exit with 0 because parent expects us to crash.
Exit without unwinding stack barriers.
Exited reports whether the program has exited.
Exitsyscall can run even during stopTheWorld.
Exitsyscall could check trace.enabled long before and then suddenly wake up and decide to write to trace at a random point in time.
Exp returns e**x, the base-e exponential of x.
Exp2 returns 2**x, the base-2 exponential of x.
ExpFloat64 values have an average of 1 but decay exponentially.
Expand C escapes (a.k.a.
Expand CHECKNIL pseudo-op into actual nil pointer check.
Expand last range or next to last range if it overlaps or abuts.
ExpandString expands environment-variable strings and replaces them with the values defined for the current user.
ExpandString is like Expand but the template and source are strings.
Expansion of a 128-bit Cipher Key
Expansion of a 192-bit Cipher Key
Expansion of a 256-bit Cipher Key
Expect (SB), (FP), (PC), or (SP)
Expect 100 Continue support
Expect N sequential-valued bytes.
Expect contents of file.
Expect non-verbose listing.
Expect only helloFile.
Expect sym and name to be set, nothing else.
Expect the increment to be a positive constant.
Expect verbose listing.
Expect verbose output plus file contents.
Expect-100 continue with no body, but a chunked body.
Expect-100 requested but handler doesn't read the body
Expect-100 requested but no body (is apparently okay: Issue 7625)
ExpectContinueTimeout is unsupported in http2, so if they explicitly asked for it (as opposed to just using the DefaultTransport, which sets it), then disable http2 for now.
Expected argument values for the instruction formats.
Expected error outcome
Expected error to occur
Expected errors are indicated in the test files by putting a comment of the form /* ERROR "rx" */ immediately following an offending token.
Expected errors that may be raised
Expected input/output.
Expected number of bytes read
Expected number of headers read
Expected output headers
Expected output prefix
Expected output suffix
Expected output symbol
Expected output value (0 for error)
Expected sparse entries to be outputted
Expected, but not yet seen (they may be unreachable):
Expecting to be used only during initialization, it panics if the mapping between types and names is not a bijection.
Expects to see error messages on 'p' exponents.
Experiments show that inc/dec is both a little faster and make a binary a little smaller.
Expire no longer in use.
Expired connections may be closed lazily before reuse.
Expired results when a certificate has expired, based on the time given in the VerifyOptions.
Explained in src/runtime/cgo/gcc_android_*.c
Explained in src/runtime/cgo/gcc_darwin_*.c.
Explicit argument indexes: In Printf, Sprintf, and Fprintf, the default behavior is for each formatting verb to format successive arguments passed in the call.
Explicit frees are accounted in recent stats.
Explicit list of files to be processed.
Explicit precision in format specifier overrules default precision.
Explicit version of next line.
Explicitly inhibit sniffing.
Explicitly initialize all fields since a scanner may be reused.
Explicitly test the empty block.
Expm1 returns e**x - 1, the base-e exponential of x minus 1.
Exponent and precision limits.
Exponent underflow and overflow lead to a 0 or an Infinity for different values than IEEE-754 because Float exponents have a much larger range.
Exponential distribution tests
Export data encoding: The export data is a serialized description of the graph of exported "objects": constants, types, variables, and functions.
Export func for testing
Export guts for testing.
Export internal functions for testing.
Export metadata error made main.go not compile.
Export the types of PtraceRegs fields.
Export those objects in a second phase.
Exported data for inlining could forget types of local variables declared in inlinable bodies.
Exported for testing only.
Exported functions may not return Go pointers.
Exported functions may not return strings.
Exported functions only.
Exported methods may satisfy interfaces we don't know about yet when dynamically linking.
Exported must always be visible.
Exported objects may be from different packages because they may be re-exported as depencies when exporting inlined function bodies.
ExprString returns the (possibly simplified) string representation for x.
Expression checker functions are generally of the form: func f(x *operand, e *ast.Expr, ...) where e is the expression to be checked, and x is the result of the check.
Expression evaluation uses none of these fields of the parser.
Expression statements
Expressions that are constant at run time but not considered const by the language spec are not turned into constants until walk.
Exprs must contain only side effect free expressions.
Ext returns the file name extension used by path.
ExtKeyUsage represents an extended set of actions that are valid for a given key.
Extend maxLen, if needed.
Extend overrides using typedefs: If we know that C.xxx should format as T and xxx is a typedef for yyy, make C.yyy format as T.
Extend the 4-byte match as long as possible.
Extend the temp buffer if necessary.
Extend value to the required size
Extended precision modular arithmetic
Extender is the set of Unicode characters with property Extender.
Extension Introducer.
Extension reports whether an extension is support by the server.
Extension represents the ASN.1 structure of the same name.
Extensions are looked up first case-sensitively, then case-insensitively.
Extensions contains raw X.509 extensions.
Extensions in Attributes should override those in ExtraExtensions.
ExtensionsByType returns the extensions known to be associated with the MIME type typ.
ExternSymbol is an aux value that encodes a variable's constant offset from the static base pointer.
External functions are assumed unsafe, unless //go:noescape is given before the declaration.
External linking avoids the dynamic library requirement but introduces a requirement that the host linker be present to create such a binary.
External linking not implemented on mips64.
External test package.
Externally, Next iterates through the tar archive as if it is a series of files.
Externally, session ticket keys are 32 random bytes and this function expands that into sufficient name and key material.
Extra 1 is for carry bit.
Extra argument errors should format without flags set.
Extra contains extra etype-specific fields.
Extra line breaks between statements in the source are respected but at most one empty line is printed between statements.
Extra names for constants so we can validate them during testing.
Extra paranoia, making sure saveBuf won't get too large.
Extra special cases: has lower/upper but no case fold.
ExtraExtensions contains extensions to be copied, raw, into any marshaled CSR.
ExtraExtensions contains extensions to be copied, raw, into any marshaled certificates.
ExtraFiles specifies additional open files to be inherited by the new process.
ExtraUsage returns any additional text that should be printed after the standard usage message.
Extract 1+flt.mantbits bits from the 64-bit mantissa.
Extract 1+flt.mantbits bits.
Extract and compare element types.
Extract and sort the keys.
Extract argument bitmaps for reflect stubs from the calls they made to reflect.
Extract assembly for matched symbol
Extract bounds when comparing against constants
Extract everything between the space and the final newline.
Extract example functions from file ASTs.
Extract first rune from each string.
Extract first rune from each.
Extract integer part, rounded appropriately.
Extract interesting symbols from binary files in the profile and classify samples per symbol.
Extract min and nxt knowing that nxt is an addition (e.g. Add64).
Extract named BEGIN...END blocks from output
Extract our IO results and return.
Extract relevant fields
Extract the exponent from the IEEE float64, and index a constant table with the first 10 bits from the mantissa.
Extract the types from the DWARF section of an object from a well-formed C program.
Extract the version number from the URL
Extracts the expected output and whether there was a valid output comment
Extraneous data is silently ignored.
F is an exported function, small enough to be inlined.
F2 line comment f3 lead comment
F3 11 22 and many others: xed allows and drops misused rep/repn prefix.
F3 90 decodes as REP XCHG EAX, EAX but is PAUSE.
F3 F2 0F D6 /r is F3 + MOVQ2DQ in Intel xed, but F2 + MOVQ2DQ in GNU libopcodes.
FF E8 11 22 33 44: Invalid instructions for which libopcodes prints "internal disassembler error".
FIPS is quite strict about the format of DSA keys, but other code may be less so.
FIXME(sbinet) handle padding, fields smaller than a word
FLAG A Flag accepts any data and is set to true if present.
FNV-1 hash function constants.
FORMAT_E          PERFORM FLOATING-POINT OPERATION
FORMAT_E          PERFORM TIMING FACILITY FUNCTION
FORMAT_E          PROGRAM RETURN
FORMAT_E          SET ADDRESSING MODE (24)
FORMAT_E          SET ADDRESSING MODE (31)
FORMAT_E          SET ADDRESSING MODE (64)
FORMAT_E          SET CLOCK PROGRAMMABLE FIELD
FORMAT_E          TEST ADDRESSING MODE
FORMAT_I          SUPERVISOR CALL
FORMAT_IE         NEXT INSTRUCTION ACCESS INTENT
FORMAT_MII        BRANCH PREDICTION RELATIVE PRELOAD
FORMAT_RI1        ADD HALFWORD IMMEDIATE (32)
FORMAT_RI1        ADD HALFWORD IMMEDIATE (64)
FORMAT_RI1        AND IMMEDIATE (high high)
FORMAT_RI1        AND IMMEDIATE (high low)
FORMAT_RI1        AND IMMEDIATE (low high)
FORMAT_RI1        AND IMMEDIATE (low low)
FORMAT_RI1        INSERT IMMEDIATE (high high)
FORMAT_RI1        INSERT IMMEDIATE (high low)
FORMAT_RI1        INSERT IMMEDIATE (low high)
FORMAT_RI1        INSERT IMMEDIATE (low low)
FORMAT_RI1        LOAD HALFWORD IMMEDIATE (32)
FORMAT_RI1        LOAD HALFWORD IMMEDIATE (64)
FORMAT_RI1        LOAD LOGICAL IMMEDIATE (high high)
FORMAT_RI1        LOAD LOGICAL IMMEDIATE (high low)
FORMAT_RI1        LOAD LOGICAL IMMEDIATE (low high)
FORMAT_RI1        LOAD LOGICAL IMMEDIATE (low low)
FORMAT_RI1        MULTIPLY HALFWORD IMMEDIATE (32)
FORMAT_RI1        MULTIPLY HALFWORD IMMEDIATE (64)
FORMAT_RI1        OR IMMEDIATE (high high)
FORMAT_RI1        OR IMMEDIATE (high low)
FORMAT_RI1        OR IMMEDIATE (low high)
FORMAT_RI1        OR IMMEDIATE (low low)
FORMAT_RI1        TEST UNDER MASK (high high)
FORMAT_RI1        TEST UNDER MASK (high low)
FORMAT_RI1        TEST UNDER MASK (low high)
FORMAT_RI1        TEST UNDER MASK (low low)
FORMAT_RI1        TEST UNDER MASK HIGH
FORMAT_RI1        TEST UNDER MASK LOW
FORMAT_RI2        BRANCH RELATIVE AND SAVE
FORMAT_RI2        BRANCH RELATIVE ON COUNT (32)
FORMAT_RI2        BRANCH RELATIVE ON COUNT (64)
FORMAT_RI3        BRANCH RELATIVE ON CONDITION
FORMAT_RIE2       COMPARE AND BRANCH RELATIVE (32)
FORMAT_RIE2       COMPARE AND BRANCH RELATIVE (64)
FORMAT_RIE2       COMPARE LOGICAL AND BRANCH RELATIVE (32)
FORMAT_RIE2       COMPARE LOGICAL AND BRANCH RELATIVE (64)
FORMAT_RIE5       BRANCH RELATIVE ON INDEX HIGH (64)
FORMAT_RIE5       BRANCH RELATIVE ON INDEX LOW OR EQ.
FORMAT_RIE6       ROTATE THEN AND SELECTED BITS
FORMAT_RIE6       ROTATE THEN EXCLUSIVE OR SELECTED BITS
FORMAT_RIE6       ROTATE THEN INSERT SELECTED BITS
FORMAT_RIE6       ROTATE THEN INSERT SELECTED BITS HIGH
FORMAT_RIE6       ROTATE THEN INSERT SELECTED BITS LOW
FORMAT_RIE6       ROTATE THEN OR SELECTED BITS
FORMAT_RIL1       ADD IMMEDIATE (32)
FORMAT_RIL1       ADD IMMEDIATE HIGH (32)
FORMAT_RIL1       ADD LOGICAL IMMEDIATE (32)
FORMAT_RIL1       ADD LOGICAL WITH SIGNED IMMEDIATE HIGH (32)
FORMAT_RIL1       AND IMMEDIATE (high)
FORMAT_RIL1       AND IMMEDIATE (low)
FORMAT_RIL1       COMPARE IMMEDIATE (32)
FORMAT_RIL1       COMPARE IMMEDIATE HIGH (32)
FORMAT_RIL1       COMPARE LOGICAL IMMEDIATE (32)
FORMAT_RIL1       COMPARE LOGICAL IMMEDIATE HIGH (32)
FORMAT_RIL1       EXCLUSIVE OR IMMEDIATE (high)
FORMAT_RIL1       EXCLUSIVE OR IMMEDIATE (low)
FORMAT_RIL1       INSERT IMMEDIATE (high)
FORMAT_RIL1       INSERT IMMEDIATE (low)
FORMAT_RIL1       LOAD LOGICAL IMMEDIATE (high)
FORMAT_RIL1       LOAD LOGICAL IMMEDIATE (low)
FORMAT_RIL1       MULTIPLY SINGLE IMMEDIATE (32)
FORMAT_RIL1       OR IMMEDIATE (high)
FORMAT_RIL1       OR IMMEDIATE (low)
FORMAT_RIL1       SUBTRACT LOGICAL IMMEDIATE (32)
FORMAT_RIL2       BRANCH RELATIVE AND SAVE LONG
FORMAT_RIL2       BRANCH RELATIVE ON COUNT HIGH (32)
FORMAT_RIL2       COMPARE LOGICAL RELATIVE LONG (32)
FORMAT_RIL2       COMPARE LOGICAL RELATIVE LONG (64)
FORMAT_RIL2       COMPARE RELATIVE LONG (32)
FORMAT_RIL2       COMPARE RELATIVE LONG (64)
FORMAT_RIL2       EXECUTE RELATIVE LONG
FORMAT_RIL2       LOAD ADDRESS RELATIVE LONG
FORMAT_RIL2       LOAD RELATIVE LONG (32)
FORMAT_RIL2       LOAD RELATIVE LONG (64)
FORMAT_RIL2       STORE HALFWORD RELATIVE LONG
FORMAT_RIL2       STORE RELATIVE LONG (32)
FORMAT_RIL2       STORE RELATIVE LONG (64)
FORMAT_RIL3       BRANCH RELATIVE ON CONDITION LONG
FORMAT_RIL3       PREFETCH DATA RELATIVE LONG
FORMAT_RR         ADD NORMALIZED (extended HFP)
FORMAT_RR         ADD NORMALIZED (long HFP)
FORMAT_RR         ADD NORMALIZED (short HFP)
FORMAT_RR         ADD UNNORMALIZED (long HFP)
FORMAT_RR         ADD UNNORMALIZED (short HFP)
FORMAT_RR         BRANCH AND LINK
FORMAT_RR         BRANCH AND SAVE
FORMAT_RR         BRANCH AND SAVE AND SET MODE
FORMAT_RR         BRANCH AND SET MODE
FORMAT_RR         BRANCH ON CONDITION
FORMAT_RR         BRANCH ON COUNT (32)
FORMAT_RR         COMPARE (long HFP)
FORMAT_RR         COMPARE (short HFP)
FORMAT_RR         COMPARE LOGICAL (32)
FORMAT_RR         COMPARE LOGICAL LONG
FORMAT_RR         DIVIDE (long HFP)
FORMAT_RR         DIVIDE (short HFP)
FORMAT_RR         HALVE (long HFP)
FORMAT_RR         HALVE (short HFP)
FORMAT_RR         LOAD (long)
FORMAT_RR         LOAD (short)
FORMAT_RR         LOAD AND TEST (long HFP)
FORMAT_RR         LOAD AND TEST (short HFP)
FORMAT_RR         LOAD COMPLEMENT (32)
FORMAT_RR         LOAD COMPLEMENT (long HFP)
FORMAT_RR         LOAD COMPLEMENT (short HFP)
FORMAT_RR         LOAD NEGATIVE (32)
FORMAT_RR         LOAD NEGATIVE (long HFP)
FORMAT_RR         LOAD NEGATIVE (short HFP)
FORMAT_RR         LOAD POSITIVE (32)
FORMAT_RR         LOAD POSITIVE (long HFP)
FORMAT_RR         LOAD POSITIVE (short HFP)
FORMAT_RR         LOAD ROUNDED (extended to long HFP)
FORMAT_RR         LOAD ROUNDED (long to short HFP)
FORMAT_RR         MULTIPLY (extended HFP)
FORMAT_RR         MULTIPLY (long HFP)
FORMAT_RR         MULTIPLY (long to extended HFP)
FORMAT_RR         MULTIPLY (short to long HFP)
FORMAT_RR         SET PROGRAM MASK
FORMAT_RR         SUBTRACT LOGICAL (32)
FORMAT_RR         SUBTRACT NORMALIZED (extended HFP)
FORMAT_RR         SUBTRACT NORMALIZED (long HFP)
FORMAT_RR         SUBTRACT NORMALIZED (short HFP)
FORMAT_RR         SUBTRACT UNNORMALIZED (long HFP)
FORMAT_RR         SUBTRACT UNNORMALIZED (short HFP)
FORMAT_RRD        MULTIPLY AND ADD (long BFP)
FORMAT_RRD        MULTIPLY AND ADD (long HFP)
FORMAT_RRD        MULTIPLY AND ADD (short BFP)
FORMAT_RRD        MULTIPLY AND ADD (short HFP)
FORMAT_RRD        MULTIPLY AND ADD UNNRM.
FORMAT_RRD        MULTIPLY AND SUBTRACT (long BFP)
FORMAT_RRD        MULTIPLY AND SUBTRACT (long HFP)
FORMAT_RRD        MULTIPLY AND SUBTRACT (short BFP)
FORMAT_RRD        MULTIPLY AND SUBTRACT (short HFP)
FORMAT_RRD        MULTIPLY UNNORM.
FORMAT_RRD        MULTIPLY UNNORMALIZED (long to ext.
FORMAT_RRE        ADD (extended BFP)
FORMAT_RRE        ADD (long BFP)
FORMAT_RRE        ADD (short BFP)
FORMAT_RRE        ADD LOGICAL (64)
FORMAT_RRE        ADD LOGICAL WITH CARRY (32)
FORMAT_RRE        ADD LOGICAL WITH CARRY (64)
FORMAT_RRE        BRANCH AND SET AUTHORITY
FORMAT_RRE        BRANCH AND STACK
FORMAT_RRE        BRANCH IN SUBSPACE GROUP
FORMAT_RRE        BRANCH ON COUNT (64)
FORMAT_RRE        CHECKSUM
FORMAT_RRE        CIPHER MESSAGE
FORMAT_RRE        CIPHER MESSAGE WITH CFB
FORMAT_RRE        CIPHER MESSAGE WITH CHAINING
FORMAT_RRE        CIPHER MESSAGE WITH OFB
FORMAT_RRE        COMPARE (extended BFP)
FORMAT_RRE        COMPARE (extended DFP)
FORMAT_RRE        COMPARE (extended HFP)
FORMAT_RRE        COMPARE (long BFP)
FORMAT_RRE        COMPARE (long DFP)
FORMAT_RRE        COMPARE (short BFP)
FORMAT_RRE        COMPARE AND SIGNAL (extended BFP)
FORMAT_RRE        COMPARE AND SIGNAL (extended DFP)
FORMAT_RRE        COMPARE AND SIGNAL (long BFP)
FORMAT_RRE        COMPARE AND SIGNAL (long DFP)
FORMAT_RRE        COMPARE AND SIGNAL (short BFP)
FORMAT_RRE        COMPARE AND SWAP AND PURGE
FORMAT_RRE        COMPARE BIASED EXPONENT (extended DFP)
FORMAT_RRE        COMPARE BIASED EXPONENT (long DFP)
FORMAT_RRE        COMPARE HIGH (32)
FORMAT_RRE        COMPARE LOGICAL (64)
FORMAT_RRE        COMPARE LOGICAL HIGH (32)
FORMAT_RRE        COMPARE LOGICAL STRING
FORMAT_RRE        COMPARE UNTIL SUBSTRING EQUAL
FORMAT_RRE        COMPRESSION CALL
FORMAT_RRE        COMPUTE INTERMEDIATE MESSAGE DIGEST
FORMAT_RRE        COMPUTE LAST MESSAGE DIGEST
FORMAT_RRE        COMPUTE MESSAGE AUTHENTICATION CODE
FORMAT_RRE        CONVERT BFP TO HFP (long)
FORMAT_RRE        CONVERT BFP TO HFP (short to long)
FORMAT_RRE        CONVERT FROM FIXED (32 to extended BFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to extended DFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to extended HFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to long BFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to long DFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to long HFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to short BFP)
FORMAT_RRE        CONVERT FROM FIXED (32 to short HFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to extended BFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to extended DFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to extended HFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to long BFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to long DFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to long HFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to short BFP)
FORMAT_RRE        CONVERT FROM FIXED (64 to short HFP)
FORMAT_RRE        CONVERT FROM SIGNED PACKED (128 to extended DFP)
FORMAT_RRE        CONVERT FROM SIGNED PACKED (64 to long DFP)
FORMAT_RRE        CONVERT FROM UNSIGNED PACKED (128 to ext.
FORMAT_RRE        CONVERT FROM UNSIGNED PACKED (64 to long DFP)
FORMAT_RRE        CONVERT TO UNSIGNED PACKED (extended DFP to 128)
FORMAT_RRE        CONVERT TO UNSIGNED PACKED (long DFP to 64)
FORMAT_RRE        COPY ACCESS
FORMAT_RRE        DIVIDE (extended BFP)
FORMAT_RRE        DIVIDE (extended HFP)
FORMAT_RRE        DIVIDE (long BFP)
FORMAT_RRE        DIVIDE (short BFP)
FORMAT_RRE        DIVIDE SINGLE (64)
FORMAT_RRE        EXCLUSIVE OR (64)
FORMAT_RRE        EXTRACT ACCESS
FORMAT_RRE        EXTRACT AND SET EXTENDED AUTHORITY
FORMAT_RRE        EXTRACT BIASED EXPONENT (extended DFP to 64)
FORMAT_RRE        EXTRACT BIASED EXPONENT (long DFP to 64)
FORMAT_RRE        EXTRACT FPC
FORMAT_RRE        EXTRACT PRIMARY ASN
FORMAT_RRE        EXTRACT PRIMARY ASN AND INSTANCE
FORMAT_RRE        EXTRACT PSW
FORMAT_RRE        EXTRACT SECONDARY ASN
FORMAT_RRE        EXTRACT SECONDARY ASN AND INSTANCE
FORMAT_RRE        EXTRACT SIGNIFICANCE (extended DFP)
FORMAT_RRE        EXTRACT SIGNIFICANCE (long DFP)
FORMAT_RRE        EXTRACT STACKED REGISTERS (32)
FORMAT_RRE        EXTRACT STACKED REGISTERS (64)
FORMAT_RRE        EXTRACT STACKED STATE
FORMAT_RRE        EXTRACT TRANSACTION NESTING DEPTH
FORMAT_RRE        FIND LEFTMOST ONE
FORMAT_RRE        INSERT ADDRESS SPACE CONTROL
FORMAT_RRE        INSERT PROGRAM MASK
FORMAT_RRE        INSERT STORAGE KEY EXTENDED
FORMAT_RRE        INSERT VIRTUAL STORAGE KEY
FORMAT_RRE        LOAD (extended)
FORMAT_RRE        LOAD AND TEST (64)
FORMAT_RRE        LOAD AND TEST (extended BFP)
FORMAT_RRE        LOAD AND TEST (extended DFP)
FORMAT_RRE        LOAD AND TEST (extended HFP)
FORMAT_RRE        LOAD AND TEST (long BFP)
FORMAT_RRE        LOAD AND TEST (long DFP)
FORMAT_RRE        LOAD AND TEST (short BFP)
FORMAT_RRE        LOAD COMPLEMENT (64)
FORMAT_RRE        LOAD COMPLEMENT (extended BFP)
FORMAT_RRE        LOAD COMPLEMENT (extended HFP)
FORMAT_RRE        LOAD COMPLEMENT (long BFP)
FORMAT_RRE        LOAD COMPLEMENT (long)
FORMAT_RRE        LOAD COMPLEMENT (short BFP)
FORMAT_RRE        LOAD FP INTEGER (extended HFP)
FORMAT_RRE        LOAD FP INTEGER (long HFP)
FORMAT_RRE        LOAD FP INTEGER (short HFP)
FORMAT_RRE        LOAD FPR FROM GR (64 to long)
FORMAT_RRE        LOAD GR FROM FPR (long to 64)
FORMAT_RRE        LOAD HALFWORD (32)
FORMAT_RRE        LOAD HALFWORD (64)
FORMAT_RRE        LOAD LENGTHENED (long to extended BFP)
FORMAT_RRE        LOAD LENGTHENED (long to extended HFP)
FORMAT_RRE        LOAD LENGTHENED (short to extended BFP)
FORMAT_RRE        LOAD LENGTHENED (short to extended HFP)
FORMAT_RRE        LOAD LENGTHENED (short to long BFP)
FORMAT_RRE        LOAD LENGTHENED (short to long HFP)
FORMAT_RRE        LOAD LOGICAL CHARACTER (32)
FORMAT_RRE        LOAD LOGICAL CHARACTER (64)
FORMAT_RRE        LOAD LOGICAL HALFWORD (32)
FORMAT_RRE        LOAD LOGICAL HALFWORD (64)
FORMAT_RRE        LOAD LOGICAL THIRTY ONE BITS
FORMAT_RRE        LOAD NEGATIVE (64)
FORMAT_RRE        LOAD NEGATIVE (extended BFP)
FORMAT_RRE        LOAD NEGATIVE (extended HFP)
FORMAT_RRE        LOAD NEGATIVE (long BFP)
FORMAT_RRE        LOAD NEGATIVE (long)
FORMAT_RRE        LOAD NEGATIVE (short BFP)
FORMAT_RRE        LOAD POSITIVE (64)
FORMAT_RRE        LOAD POSITIVE (extended BFP)
FORMAT_RRE        LOAD POSITIVE (extended HFP)
FORMAT_RRE        LOAD POSITIVE (long BFP)
FORMAT_RRE        LOAD POSITIVE (long)
FORMAT_RRE        LOAD POSITIVE (short BFP)
FORMAT_RRE        LOAD REVERSED (32)
FORMAT_RRE        LOAD REVERSED (64)
FORMAT_RRE        LOAD ROUNDED (extended to long BFP)
FORMAT_RRE        LOAD ROUNDED (extended to short BFP)
FORMAT_RRE        LOAD ROUNDED (extended to short HFP)
FORMAT_RRE        LOAD ROUNDED (long to short BFP)
FORMAT_RRE        LOAD USING REAL ADDRESS (32)
FORMAT_RRE        LOAD USING REAL ADDRESS (64)
FORMAT_RRE        LOAD ZERO (extended)
FORMAT_RRE        LOAD ZERO (long)
FORMAT_RRE        LOAD ZERO (short)
FORMAT_RRE        MODIFY STACKED STATE
FORMAT_RRE        MOVE PAGE
FORMAT_RRE        MOVE STRING
FORMAT_RRE        MULTIPLY (extended BFP)
FORMAT_RRE        MULTIPLY (long BFP)
FORMAT_RRE        MULTIPLY (long to extended BFP)
FORMAT_RRE        MULTIPLY (short BFP)
FORMAT_RRE        MULTIPLY (short HFP)
FORMAT_RRE        MULTIPLY (short to long BFP)
FORMAT_RRE        MULTIPLY SINGLE (32)
FORMAT_RRE        MULTIPLY SINGLE (64)
FORMAT_RRE        PAGE OUT
FORMAT_RRE        PERFORM CRYPTOGRAPHIC COMPUTATION
FORMAT_RRE        PERFORM CRYPTOGRAPHIC KEY MGMT.
FORMAT_RRE        PERFORM FRAME MANAGEMENT FUNCTION
FORMAT_RRE        PERFORM TOPOLOGY FUNCTION
FORMAT_RRE        POPULATION COUNT
FORMAT_RRE        PROGRAM TRANSFER
FORMAT_RRE        PROGRAM TRANSFER WITH INSTANCE
FORMAT_RRE        PURGE ALB
FORMAT_RRE        RESET REFERENCE BIT EXTENDED
FORMAT_RRE        RESET REFERENCE BITS MULTIPLE
FORMAT_RRE        SEARCH STRING
FORMAT_RRE        SEARCH STRING UNICODE
FORMAT_RRE        SET ACCESS
FORMAT_RRE        SET FPC AND SIGNAL
FORMAT_RRE        SET SECONDARY ASN
FORMAT_RRE        SET SECONDARY ASN WITH INSTANCE
FORMAT_RRE        SQUARE ROOT (extended BFP)
FORMAT_RRE        SQUARE ROOT (extended HFP)
FORMAT_RRE        SQUARE ROOT (long BFP)
FORMAT_RRE        SQUARE ROOT (long HFP)
FORMAT_RRE        SQUARE ROOT (short BFP)
FORMAT_RRE        SQUARE ROOT (short HFP)
FORMAT_RRE        STORE USING REAL ADDRESS (32)
FORMAT_RRE        STORE USING REAL ADDRESS (64)
FORMAT_RRE        SUBTRACT (64)
FORMAT_RRE        SUBTRACT (extended BFP)
FORMAT_RRE        SUBTRACT (long BFP)
FORMAT_RRE        SUBTRACT (short BFP)
FORMAT_RRE        SUBTRACT LOGICAL (64)
FORMAT_RRE        SUBTRACT LOGICAL WITH BORROW (32)
FORMAT_RRE        SUBTRACT LOGICAL WITH BORROW (64)
FORMAT_RRE        TEST ACCESS
FORMAT_RRE        TEST BLOCK
FORMAT_RRE        TRANSLATE EXTENDED
FORMAT_RRF1       ADD (extended DFP)
FORMAT_RRF1       ADD (long DFP)
FORMAT_RRF1       ADD LOGICAL (32)
FORMAT_RRF1       ADD LOGICAL (64)
FORMAT_RRF1       ADD LOGICAL HIGH (32)
FORMAT_RRF1       DIVIDE (extended DFP)
FORMAT_RRF1       DIVIDE (long DFP)
FORMAT_RRF1       EXCLUSIVE OR (32)
FORMAT_RRF1       EXCLUSIVE OR (64)
FORMAT_RRF1       INVALIDATE PAGE TABLE ENTRY
FORMAT_RRF1       MULTIPLY (extended DFP)
FORMAT_RRF1       MULTIPLY (long DFP)
FORMAT_RRF1       SUBTRACT (32)
FORMAT_RRF1       SUBTRACT (64)
FORMAT_RRF1       SUBTRACT (extended DFP)
FORMAT_RRF1       SUBTRACT (long DFP)
FORMAT_RRF1       SUBTRACT HIGH (32)
FORMAT_RRF1       SUBTRACT LOGICAL (32)
FORMAT_RRF1       SUBTRACT LOGICAL (64)
FORMAT_RRF1       SUBTRACT LOGICAL HIGH (32)
FORMAT_RRF2       CIPHER MESSAGE WITH COUNTER
FORMAT_RRF2       COMPARE AND REPLACE DAT TABLE ENTRY
FORMAT_RRF2       COPY SIGN (long)
FORMAT_RRF2       DIVIDE TO INTEGER (long BFP)
FORMAT_RRF2       DIVIDE TO INTEGER (short BFP)
FORMAT_RRF2       INSERT BIASED EXPONENT (64 to extended DFP)
FORMAT_RRF2       INSERT BIASED EXPONENT (64 to long DFP)
FORMAT_RRF2       INVALIDATE DAT TABLE ENTRY
FORMAT_RRF2       LOAD PAGE TABLE ENTRY ADDRESS
FORMAT_RRF2       QUANTIZE (extended DFP)
FORMAT_RRF2       QUANTIZE (long DFP)
FORMAT_RRF2       REROUND (extended DFP)
FORMAT_RRF2       REROUND (long DFP)
FORMAT_RRF3       COMPARE AND TRAP (32)
FORMAT_RRF3       COMPARE AND TRAP (64)
FORMAT_RRF3       COMPARE LOGICAL AND TRAP (32)
FORMAT_RRF3       COMPARE LOGICAL AND TRAP (64)
FORMAT_RRF3       CONVERT UNICODE TO UTF-8
FORMAT_RRF3       CONVERT UTF-8 TO UNICODE
FORMAT_RRF3       LOAD ON CONDITION (32)
FORMAT_RRF3       LOAD ON CONDITION (64)
FORMAT_RRF3       PERFORM PROCESSOR ASSIST
FORMAT_RRF3       SET STORAGE KEY EXTENDED
FORMAT_RRF3       TRANSLATE AND TEST EXTENDED
FORMAT_RRF3       TRANSLATE AND TEST REVERSE EXTENDED
FORMAT_RRF3       TRANSLATE ONE TO ONE
FORMAT_RRF3       TRANSLATE ONE TO TWO
FORMAT_RRF3       TRANSLATE TWO TO ONE
FORMAT_RRF3       TRANSLATE TWO TO TWO
FORMAT_RRF4       CONVERT TO SIGNED PACKED (extended DFP to 128)
FORMAT_RRF4       CONVERT TO SIGNED PACKED (long DFP to 64)
FORMAT_RRF4       LOAD LENGTHENED (long to extended DFP)
FORMAT_RRF4       LOAD LENGTHENED (short to long DFP)
FORMAT_RRF5       CONVERT FROM FIXED (32 to extended BFP)
FORMAT_RRF5       CONVERT FROM FIXED (32 to long BFP)
FORMAT_RRF5       CONVERT FROM FIXED (32 to short BFP)
FORMAT_RRF5       CONVERT FROM FIXED (64 to extended BFP)
FORMAT_RRF5       CONVERT FROM FIXED (64 to extended DFP)
FORMAT_RRF5       CONVERT FROM FIXED (64 to long BFP)
FORMAT_RRF5       CONVERT FROM FIXED (64 to long DFP)
FORMAT_RRF5       CONVERT FROM FIXED (64 to short BFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (32 to extended BFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (32 to extended DFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (32 to long BFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (32 to long DFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (32 to short BFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (64 to extended BFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (64 to extended DFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (64 to long BFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (64 to long DFP)
FORMAT_RRF5       CONVERT FROM LOGICAL (64 to short BFP)
FORMAT_RRF5       CONVERT HFP TO BFP (long to short)
FORMAT_RRF5       CONVERT HFP TO BFP (long)
FORMAT_RRF5       CONVERT TO FIXED (extended BFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (extended BFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (extended DFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (extended DFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (extended HFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (extended HFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (long BFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (long BFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (long DFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (long DFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (long HFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (long HFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (short BFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (short BFP to 64)
FORMAT_RRF5       CONVERT TO FIXED (short HFP to 32)
FORMAT_RRF5       CONVERT TO FIXED (short HFP to 64)
FORMAT_RRF5       CONVERT TO LOGICAL (extended BFP to 32)
FORMAT_RRF5       CONVERT TO LOGICAL (extended BFP to 64)
FORMAT_RRF5       CONVERT TO LOGICAL (extended DFP to 32)
FORMAT_RRF5       CONVERT TO LOGICAL (extended DFP to 64)
FORMAT_RRF5       CONVERT TO LOGICAL (long BFP to 32)
FORMAT_RRF5       CONVERT TO LOGICAL (long BFP to 64)
FORMAT_RRF5       CONVERT TO LOGICAL (long DFP to 32)
FORMAT_RRF5       CONVERT TO LOGICAL (long DFP to 64)
FORMAT_RRF5       CONVERT TO LOGICAL (short BFP to 32)
FORMAT_RRF5       CONVERT TO LOGICAL (short BFP to 64)
FORMAT_RRF5       LOAD FP INTEGER (extended BFP)
FORMAT_RRF5       LOAD FP INTEGER (extended DFP)
FORMAT_RRF5       LOAD FP INTEGER (long BFP)
FORMAT_RRF5       LOAD FP INTEGER (long DFP)
FORMAT_RRF5       LOAD FP INTEGER (short BFP)
FORMAT_RRF5       LOAD ROUNDED (extended to long BFP)
FORMAT_RRF5       LOAD ROUNDED (extended to long DFP)
FORMAT_RRF5       LOAD ROUNDED (extended to short BFP)
FORMAT_RRF5       LOAD ROUNDED (long to short BFP)
FORMAT_RRF5       LOAD ROUNDED (long to short DFP)
FORMAT_RRS        COMPARE AND BRANCH (32)
FORMAT_RRS        COMPARE AND BRANCH (64)
FORMAT_RRS        COMPARE LOGICAL AND BRANCH (32)
FORMAT_RRS        COMPARE LOGICAL AND BRANCH (64)
FORMAT_RS1        BRANCH ON INDEX HIGH (32)
FORMAT_RS1        BRANCH ON INDEX LOW OR EQUAL (32)
FORMAT_RS1        COMPARE AND SWAP (32)
FORMAT_RS1        COMPARE DOUBLE AND SWAP (32)
FORMAT_RS1        COMPARE LOGICAL LONG EXTENDED
FORMAT_RS1        LOAD ACCESS MULTIPLE
FORMAT_RS1        LOAD MULTIPLE (32)
FORMAT_RS1        MOVE LONG EXTENDED
FORMAT_RS1        SHIFT LEFT DOUBLE
FORMAT_RS1        SHIFT LEFT DOUBLE LOGICAL
FORMAT_RS1        SHIFT LEFT SINGLE (32)
FORMAT_RS1        SHIFT LEFT SINGLE LOGICAL (32)
FORMAT_RS1        SHIFT RIGHT DOUBLE
FORMAT_RS1        SHIFT RIGHT DOUBLE LOGICAL
FORMAT_RS1        SHIFT RIGHT SINGLE (32)
FORMAT_RS1        SHIFT RIGHT SINGLE LOGICAL (32)
FORMAT_RS1        SIGNAL PROCESSOR
FORMAT_RS1        STORE ACCESS MULTIPLE
FORMAT_RS1        STORE CONTROL (32)
FORMAT_RS1        STORE MULTIPLE (32)
FORMAT_RS2        COMPARE LOGICAL CHAR.
FORMAT_RS2        INSERT CHARACTERS UNDER MASK (low)
FORMAT_RS2        STORE CHARACTERS UNDER MASK (low)
FORMAT_RSI        BRANCH RELATIVE ON INDEX HIGH (32)
FORMAT_RSI        BRANCH RELATIVE ON INDEX LOW OR EQ.
FORMAT_RSL        CONVERT FROM ZONED (to extended DFP)
FORMAT_RSL        CONVERT FROM ZONED (to long DFP)
FORMAT_RSL        CONVERT TO ZONED (from extended DFP)
FORMAT_RSL        CONVERT TO ZONED (from long DFP)
FORMAT_RSL        TEST DECIMAL
FORMAT_RSY1       BRANCH ON INDEX HIGH (64)
FORMAT_RSY1       BRANCH ON INDEX LOW OR EQUAL (64)
FORMAT_RSY1       COMPARE AND SWAP (32)
FORMAT_RSY1       COMPARE AND SWAP (64)
FORMAT_RSY1       COMPARE DOUBLE AND SWAP (32)
FORMAT_RSY1       COMPARE DOUBLE AND SWAP (64)
FORMAT_RSY1       COMPARE LOGICAL LONG UNICODE
FORMAT_RSY1       EXTRACT CACHE ATTRIBUTE
FORMAT_RSY1       LOAD ACCESS MULTIPLE
FORMAT_RSY1       LOAD AND ADD LOGICAL (32)
FORMAT_RSY1       LOAD AND ADD LOGICAL (64)
FORMAT_RSY1       LOAD AND EXCLUSIVE OR (32)
FORMAT_RSY1       LOAD AND EXCLUSIVE OR (64)
FORMAT_RSY1       LOAD CONTROL (64)
FORMAT_RSY1       LOAD MULTIPLE (32)
FORMAT_RSY1       LOAD MULTIPLE (64)
FORMAT_RSY1       LOAD MULTIPLE HIGH
FORMAT_RSY1       MOVE LONG UNICODE
FORMAT_RSY1       ROTATE LEFT SINGLE LOGICAL (32)
FORMAT_RSY1       ROTATE LEFT SINGLE LOGICAL (64)
FORMAT_RSY1       SHIFT LEFT SINGLE (32)
FORMAT_RSY1       SHIFT LEFT SINGLE (64)
FORMAT_RSY1       SHIFT LEFT SINGLE LOGICAL (32)
FORMAT_RSY1       SHIFT LEFT SINGLE LOGICAL (64)
FORMAT_RSY1       SHIFT RIGHT SINGLE (32)
FORMAT_RSY1       SHIFT RIGHT SINGLE (64)
FORMAT_RSY1       SHIFT RIGHT SINGLE LOGICAL (32)
FORMAT_RSY1       SHIFT RIGHT SINGLE LOGICAL (64)
FORMAT_RSY1       STORE ACCESS MULTIPLE
FORMAT_RSY1       STORE CONTROL (64)
FORMAT_RSY1       STORE MULTIPLE (32)
FORMAT_RSY1       STORE MULTIPLE (64)
FORMAT_RSY1       STORE MULTIPLE HIGH
FORMAT_RSY2       COMPARE LOGICAL AND TRAP (32)
FORMAT_RSY2       COMPARE LOGICAL AND TRAP (64)
FORMAT_RSY2       COMPARE LOGICAL CHAR.
FORMAT_RSY2       INSERT CHARACTERS UNDER MASK (high)
FORMAT_RSY2       INSERT CHARACTERS UNDER MASK (low)
FORMAT_RSY2       LOAD ON CONDITION (32)
FORMAT_RSY2       LOAD ON CONDITION (64)
FORMAT_RSY2       STORE CHARACTERS UNDER MASK (high)
FORMAT_RSY2       STORE CHARACTERS UNDER MASK (low)
FORMAT_RSY2       STORE ON CONDITION (32)
FORMAT_RSY2       STORE ON CONDITION (64)
FORMAT_RX1        ADD HALFWORD
FORMAT_RX1        ADD NORMALIZED (long HFP)
FORMAT_RX1        ADD NORMALIZED (short HFP)
FORMAT_RX1        ADD UNNORMALIZED (long HFP)
FORMAT_RX1        ADD UNNORMALIZED (short HFP)
FORMAT_RX1        BRANCH AND LINK
FORMAT_RX1        BRANCH AND SAVE
FORMAT_RX1        BRANCH ON COUNT (32)
FORMAT_RX1        COMPARE (long HFP)
FORMAT_RX1        COMPARE (short HFP)
FORMAT_RX1        COMPARE LOGICAL (32)
FORMAT_RX1        CONVERT TO BINARY (32)
FORMAT_RX1        CONVERT TO DECIMAL (32)
FORMAT_RX1        DIVIDE (long HFP)
FORMAT_RX1        DIVIDE (short HFP)
FORMAT_RX1        INSERT CHARACTER
FORMAT_RX1        LOAD (long)
FORMAT_RX1        LOAD (short)
FORMAT_RX1        LOAD ADDRESS
FORMAT_RX1        LOAD ADDRESS EXTENDED
FORMAT_RX1        LOAD HALFWORD (32)
FORMAT_RX1        LOAD REAL ADDRESS (32)
FORMAT_RX1        MULTIPLY (long HFP)
FORMAT_RX1        MULTIPLY (long to extended HFP)
FORMAT_RX1        MULTIPLY (short to long HFP)
FORMAT_RX1        MULTIPLY HALFWORD (32)
FORMAT_RX1        MULTIPLY SINGLE (32)
FORMAT_RX1        STORE (long)
FORMAT_RX1        STORE (short)
FORMAT_RX1        STORE CHARACTER
FORMAT_RX1        STORE HALFWORD
FORMAT_RX1        SUBTRACT HALFWORD
FORMAT_RX1        SUBTRACT LOGICAL (32)
FORMAT_RX1        SUBTRACT NORMALIZED (long HFP)
FORMAT_RX1        SUBTRACT NORMALIZED (short HFP)
FORMAT_RX1        SUBTRACT UNNORMALIZED (long HFP)
FORMAT_RX1        SUBTRACT UNNORMALIZED (short HFP)
FORMAT_RX2        BRANCH ON CONDITION
FORMAT_RXE        ADD (long BFP)
FORMAT_RXE        ADD (short BFP)
FORMAT_RXE        COMPARE (long BFP)
FORMAT_RXE        COMPARE (short BFP)
FORMAT_RXE        COMPARE AND SIGNAL (long BFP)
FORMAT_RXE        COMPARE AND SIGNAL (short BFP)
FORMAT_RXE        DIVIDE (long BFP)
FORMAT_RXE        DIVIDE (short BFP)
FORMAT_RXE        LOAD LENGTHENED (long to extended BFP)
FORMAT_RXE        LOAD LENGTHENED (long to extended HFP)
FORMAT_RXE        LOAD LENGTHENED (short to extended BFP)
FORMAT_RXE        LOAD LENGTHENED (short to extended HFP)
FORMAT_RXE        LOAD LENGTHENED (short to long BFP)
FORMAT_RXE        LOAD LENGTHENED (short to long HFP)
FORMAT_RXE        MULTIPLY (long BFP)
FORMAT_RXE        MULTIPLY (long to extended BFP)
FORMAT_RXE        MULTIPLY (short BFP)
FORMAT_RXE        MULTIPLY (short HFP)
FORMAT_RXE        MULTIPLY (short to long BFP)
FORMAT_RXE        SQUARE ROOT (long BFP)
FORMAT_RXE        SQUARE ROOT (long HFP)
FORMAT_RXE        SQUARE ROOT (short BFP)
FORMAT_RXE        SQUARE ROOT (short HFP)
FORMAT_RXE        SUBTRACT (long BFP)
FORMAT_RXE        SUBTRACT (short BFP)
FORMAT_RXE        TEST DATA CLASS (extended BFP)
FORMAT_RXE        TEST DATA CLASS (extended DFP)
FORMAT_RXE        TEST DATA CLASS (long BFP)
FORMAT_RXE        TEST DATA CLASS (long DFP)
FORMAT_RXE        TEST DATA CLASS (short BFP)
FORMAT_RXE        TEST DATA CLASS (short DFP)
FORMAT_RXE        TEST DATA GROUP (extended DFP)
FORMAT_RXE        TEST DATA GROUP (long DFP)
FORMAT_RXE        TEST DATA GROUP (short DFP)
FORMAT_RXF        MULTIPLY AND ADD (long BFP)
FORMAT_RXF        MULTIPLY AND ADD (long HFP)
FORMAT_RXF        MULTIPLY AND ADD (short BFP)
FORMAT_RXF        MULTIPLY AND ADD (short HFP)
FORMAT_RXF        MULTIPLY AND ADD UNNRM.
FORMAT_RXF        MULTIPLY AND SUBTRACT (long BFP)
FORMAT_RXF        MULTIPLY AND SUBTRACT (long HFP)
FORMAT_RXF        MULTIPLY AND SUBTRACT (short BFP)
FORMAT_RXF        MULTIPLY AND SUBTRACT (short HFP)
FORMAT_RXF        MULTIPLY UNNORM.
FORMAT_RXF        MULTIPLY UNNORMALIZED (long to ext.
FORMAT_RXF        SHIFT SIGNIFICAND LEFT (extended DFP)
FORMAT_RXF        SHIFT SIGNIFICAND LEFT (long DFP)
FORMAT_RXF        SHIFT SIGNIFICAND RIGHT (extended DFP)
FORMAT_RXF        SHIFT SIGNIFICAND RIGHT (long DFP)
FORMAT_RXY1       ADD HALFWORD
FORMAT_RXY1       ADD LOGICAL (32)
FORMAT_RXY1       ADD LOGICAL (64)
FORMAT_RXY1       ADD LOGICAL WITH CARRY (32)
FORMAT_RXY1       ADD LOGICAL WITH CARRY (64)
FORMAT_RXY1       BRANCH ON COUNT (64)
FORMAT_RXY1       COMPARE HIGH (32)
FORMAT_RXY1       COMPARE LOGICAL (32)
FORMAT_RXY1       COMPARE LOGICAL (64)
FORMAT_RXY1       COMPARE LOGICAL HIGH (32)
FORMAT_RXY1       CONVERT TO BINARY (32)
FORMAT_RXY1       CONVERT TO BINARY (64)
FORMAT_RXY1       CONVERT TO DECIMAL (32)
FORMAT_RXY1       CONVERT TO DECIMAL (64)
FORMAT_RXY1       DIVIDE SINGLE (64)
FORMAT_RXY1       EXCLUSIVE OR (32)
FORMAT_RXY1       EXCLUSIVE OR (64)
FORMAT_RXY1       INSERT CHARACTER
FORMAT_RXY1       LOAD (long)
FORMAT_RXY1       LOAD (short)
FORMAT_RXY1       LOAD ADDRESS
FORMAT_RXY1       LOAD ADDRESS EXTENDED
FORMAT_RXY1       LOAD AND TEST (32)
FORMAT_RXY1       LOAD AND TEST (64)
FORMAT_RXY1       LOAD AND TRAP (64)
FORMAT_RXY1       LOAD HALFWORD (32)
FORMAT_RXY1       LOAD HALFWORD (64)
FORMAT_RXY1       LOAD LOGICAL CHARACTER (32)
FORMAT_RXY1       LOAD LOGICAL CHARACTER (64)
FORMAT_RXY1       LOAD LOGICAL HALFWORD (32)
FORMAT_RXY1       LOAD LOGICAL HALFWORD (64)
FORMAT_RXY1       LOAD LOGICAL THIRTY ONE BITS
FORMAT_RXY1       LOAD PAIR FROM QUADWORD
FORMAT_RXY1       LOAD REAL ADDRESS (32)
FORMAT_RXY1       LOAD REAL ADDRESS (64)
FORMAT_RXY1       LOAD REVERSED (16)
FORMAT_RXY1       LOAD REVERSED (32)
FORMAT_RXY1       LOAD REVERSED (64)
FORMAT_RXY1       MULTIPLY HALFWORD (32)
FORMAT_RXY1       MULTIPLY SINGLE (32)
FORMAT_RXY1       MULTIPLY SINGLE (64)
FORMAT_RXY1       NONTRANSACTIONAL STORE
FORMAT_RXY1       STORE (long)
FORMAT_RXY1       STORE (short)
FORMAT_RXY1       STORE CHARACTER
FORMAT_RXY1       STORE CHARACTER HIGH (8)
FORMAT_RXY1       STORE HALFWORD
FORMAT_RXY1       STORE HALFWORD HIGH (16)
FORMAT_RXY1       STORE HIGH (32)
FORMAT_RXY1       STORE PAIR TO QUADWORD
FORMAT_RXY1       STORE REVERSED (16)
FORMAT_RXY1       STORE REVERSED (32)
FORMAT_RXY1       STORE REVERSED (64)
FORMAT_RXY1       SUBTRACT (32)
FORMAT_RXY1       SUBTRACT (64)
FORMAT_RXY1       SUBTRACT HALFWORD
FORMAT_RXY1       SUBTRACT LOGICAL (32)
FORMAT_RXY1       SUBTRACT LOGICAL (64)
FORMAT_RXY1       SUBTRACT LOGICAL WITH BORROW (32)
FORMAT_RXY1       SUBTRACT LOGICAL WITH BORROW (64)
FORMAT_RXY2       PREFETCH DATA
FORMAT_S          CANCEL SUBCHANNEL
FORMAT_S          CLEAR SUBCHANNEL
FORMAT_S          COMPARE AND FORM CODEWORD
FORMAT_S          HALT SUBCHANNEL
FORMAT_S          LOAD FPC AND SIGNAL
FORMAT_S          LOAD PSW EXTENDED
FORMAT_S          MODIFY SUBCHANNEL
FORMAT_S          RESET CHANNEL PATH
FORMAT_S          RESUME PROGRAM
FORMAT_S          RESUME SUBCHANNEL
FORMAT_S          SET ADDRESS LIMIT
FORMAT_S          SET ADDRESS SPACE CONTROL
FORMAT_S          SET ADDRESS SPACE CONTROL FAST
FORMAT_S          SET BFP ROUNDING MODE (2 bit)
FORMAT_S          SET BFP ROUNDING MODE (3 bit)
FORMAT_S          SET CHANNEL MONITOR
FORMAT_S          SET CLOCK COMPARATOR
FORMAT_S          SET DFP ROUNDING MODE
FORMAT_S          SET PSW KEY FROM ADDRESS
FORMAT_S          SET SYSTEM MASK
FORMAT_S          START SUBCHANNEL
FORMAT_S          STORE CHANNEL PATH STATUS
FORMAT_S          STORE CHANNEL REPORT WORD
FORMAT_S          STORE CLOCK COMPARATOR
FORMAT_S          STORE CLOCK EXTENDED
FORMAT_S          STORE CLOCK FAST
FORMAT_S          STORE CPU ADDRESS
FORMAT_S          STORE CPU TIMER
FORMAT_S          STORE FACILITY LIST
FORMAT_S          STORE FACILITY LIST EXTENDED
FORMAT_S          STORE SUBCHANNEL
FORMAT_S          STORE SYSTEM INFORMATION
FORMAT_S          TEST PENDING INTERRUPTION
FORMAT_S          TEST SUBCHANNEL
FORMAT_S          TRANSACTION ABORT
FORMAT_S          TRANSACTION END
FORMAT_SI         AND (immediate)
FORMAT_SI         COMPARE LOGICAL (immediate)
FORMAT_SI         EXCLUSIVE OR (immediate)
FORMAT_SI         MONITOR CALL
FORMAT_SI         MOVE (immediate)
FORMAT_SI         OR (immediate)
FORMAT_SI         STORE THEN AND SYSTEM MASK
FORMAT_SI         STORE THEN OR SYSTEM MASK
FORMAT_SI         TEST UNDER MASK
FORMAT_SIL        COMPARE HALFWORD IMMEDIATE (16)
FORMAT_SIL        COMPARE LOGICAL IMMEDIATE (16)
FORMAT_SIL        TRANSACTION BEGIN
FORMAT_SIY        AND (immediate)
FORMAT_SIY        COMPARE LOGICAL (immediate)
FORMAT_SIY        EXCLUSIVE OR (immediate)
FORMAT_SIY        MOVE (immediate)
FORMAT_SIY        OR (immediate)
FORMAT_SIY        TEST UNDER MASK
FORMAT_SMI        BRANCH PREDICTION PRELOAD
FORMAT_SS1        AND (character)
FORMAT_SS1        COMPARE LOGICAL (character)
FORMAT_SS1        EDIT AND MARK
FORMAT_SS1        EXCLUSIVE OR (character)
FORMAT_SS1        MOVE (character)
FORMAT_SS1        MOVE INVERSE
FORMAT_SS1        MOVE NUMERICS
FORMAT_SS1        MOVE ZONES
FORMAT_SS1        OR (character)
FORMAT_SS1        TRANSLATE
FORMAT_SS1        TRANSLATE AND TEST
FORMAT_SS1        TRANSLATE AND TEST REVERSE
FORMAT_SS1        UNPACK ASCII
FORMAT_SS1        UNPACK UNICODE
FORMAT_SS2        ADD DECIMAL
FORMAT_SS2        COMPARE DECIMAL
FORMAT_SS2        DIVIDE DECIMAL
FORMAT_SS2        MOVE WITH OFFSET
FORMAT_SS2        MULTIPLY DECIMAL
FORMAT_SS2        SUBTRACT DECIMAL
FORMAT_SS2        ZERO AND ADD added in z13
FORMAT_SS3        SHIFT AND ROUND DECIMAL
FORMAT_SS4        MOVE TO PRIMARY
FORMAT_SS4        MOVE TO SECONDARY
FORMAT_SS4        MOVE WITH KEY
FORMAT_SS5        LOAD MULTIPLE DISJOINT
FORMAT_SS5        PERFORM LOCKED OPERATION
FORMAT_SS6        PACK ASCII
FORMAT_SS6        PACK UNICODE
FORMAT_SSE        LOAD ADDRESS SPACE PARAMETERS
FORMAT_SSE        MOVE WITH DESTINATION KEY
FORMAT_SSE        MOVE WITH SOURCE KEY
FORMAT_SSE        STORE REAL ADDRESS
FORMAT_SSE        TEST PROTECTION
FORMAT_SSF        COMPARE AND SWAP AND STORE
FORMAT_SSF        EXTRACT CPU TIME
FORMAT_SSF        LOAD PAIR DISJOINT (32)
FORMAT_SSF        LOAD PAIR DISJOINT (64)
FORMAT_SSF        MOVE WITH OPTIONAL SPECIFICATIONS
FP, ordered comparison (parity zero)
FP, unordered comparison (parity one)
FPU control registers
Factor out common regexp and append factored expression to out.
Factor out common string and append factored expression to out.
Factored out for readability - do not use outside karatsuba.
Fail after 'fail' writes
Fail here, rather than validate at multiple call sites.
Fail if a build is attempted.
Fail if cgo isn't available.
Fail if path has been rebuilt (i.e. is newer than the time stamp used by isNew)
Fail marks the function as having failed but continues execution.
Fail unless path has been rebuilt (i.e. is newer than the time stamp used by isNew)
FailNow marks the function as having failed and stops its execution.
FailNow must be called from the goroutine running the test or benchmark function, not from other goroutines created during the test.
Failed - save for next iteration.
Failed reports whether the function has failed.
Failed to acquire P, enqueue gp as runnable.
Failed to compile: skip results.
Failing to do so is likely to cause the program to crash if the signal is received.
Failing to do so may cause some library calls to return "interrupted system call" errors.
Failing to do this would mean each notification will prevent concurrent code using the same file descriptor in parallel.
Fails on ppc64x because of incomplete optimization.
Failure to do this causes writes to readonly symbols.
Fake character set for example.
Fake entry to satisfy the pseudo-import "C" that shows up in programs that use cgo.
Fake implementation of files.
Fake network poller for NaCl.
Fake node that all - return values and output variables - parameters on imported functions not marked 'safe' - assignments to global variables flow to.
Fake packages - nothing to build.
FakeFile implements FileLike and also os.FileInfo.
Fall back to the portable way from now on.
Fall through to init underlying array.
Fallback implementation of io.ReaderFrom's ReadFrom, when sendfile isn't applicable.
Fallback logic if we don't have a Host header or the URL failed to parse
Fallback to SCRIPT_NAME, PATH_INFO and QUERY_STRING.
Fallback to Std and Dlt
Fallback to reflect-based decoding.
Fallback to reflect-based encoding.
Fallback to scanning for the first string argument in the call
FallbackDelay specifies the length of time to wait before spawning a fallback connection, when DualStack is enabled.
Falling through to exponent parsing here permits invalid floating-point numbers with fractional mantissa and base-2 (p or P) exponent.
Family returns an address family.
Fast check for ASCII.
Fast check for Latin-1
Fast path 2: Correct UTF-8 decode without error.
Fast path for basic types and slices.
Fast path for common case of ascii lower case simple verbs without precision or width or argument indices.
Fast path for simple common case.
Fast path, if p is entirely the same byte repeated.
Fast path: all ASCII, no upper case.
Fast path: check for failed non-blocking operation without acquiring the lock.
Fast path: drop lock bit.
Fast path: grab unlocked mutex.
Fast path: if we can tell whether path is a directory or file, stop with success or error.
Fast path: keep reading from ptrmask.
Fast paths for special cases.
Fast sort, not pretty sort
Fast versions cannot handle big values - the cutoff size for fast versions in ../../cmd/internal/gc/walk.go must be at most this value.
Fast-path: if there are no new waiters since the last notification we don't need to acquire the lock at all.
Fast-path: if there are no new waiters since the last notification we don't need to acquire the lock.
Fatal because q worked, so this should always work.
Fatal because we'll get out of sync.
Fatal is equivalent to Log followed by FailNow.
Fatal is equivalent to Log() followed by FailNow().
Fatal is equivalent to Print() followed by a call to os.Exit(1).
Fatal is equivalent to l.Print() followed by a call to os.Exit(1).
Fatal reports a compiler error and exits.
Fatalf is equivalent to Logf followed by FailNow.
Fatalf is equivalent to Logf() followed by FailNow().
Fatalf is equivalent to Printf() followed by a call to os.Exit(1).
Fatalf is equivalent to l.Printf() followed by a call to os.Exit(1).
Fatalln is equivalent to Println() followed by a call to os.Exit(1).
Fatalln is equivalent to l.Println() followed by a call to os.Exit(1).
Faults if ptr is nil.
Faulty patterns Errors in original should produce at least one faulty regexp in results.
Favor in-order line stepping
Fchown is not supported under windows or Plan 9.
FcntlFlock performs a fcntl syscall for the F_GETLK, F_SETLK or F_SETLKW command.
Fd returns the Windows handle referencing the open file.
Fd returns the integer Plan 9 file descriptor referencing the open file.
Fd returns the integer Unix file descriptor referencing the open file.
Features not generally available appear in the system-specific package syscall.
February, leap year, 29 days
February, non-leap year, 28 days
Federal Information Processing Standards Publication 197.
Federal Information Processing Standards Publication 198.
Federal Information Processing Standards Publication 46-3.
Feed in an empty string - the shortest, simplest value - so that it knows we got to the end of the value.
Fetch base profile and subtract from current profile.
Fetch hw.ncpu via sysctl.
Fetch profile from source.
FetchProfile reads from a data source (network, file) and generates a profile.
FetchURL fetches a profile from a URL using HTTP.
Fetcher is the plugin.Fetcher version of FetchProfile.
Few 100 responses, making sure we're not off-by-one.
Few HTTP clients, servers, or proxies support HTTP trailers.
Few enough architectures that a linear scan is fastest.
Fewer than 5 strings use direct runtime helpers.
Field 1 control lines:
Field 1: the regex(3) flags to apply, one character per REG_feature flag.
Field 3: the string to match.
Field 4: the test outcome.
Field 4: the test outcome...
Field 5: optional comment appended to the report.
Field chain starting with function did not work.
Field delimiter (set to ',' by NewWriter)
Field element functions.
Field elements are represented as nine, unsigned 32-bit words.
Field elements are represented by a FieldElement, which is a typedef to an array of 8 uint32's.
Field int `json:",omitempty"`
Field int `json:"myName"`
Field int `json:"myName,omitempty"`
Field is one instance of the type per name.
Field list is concatenation of sub-lists.
Field number 1 is slice of FieldType
Field number 1 is type Id of elem
Field number 1 is type Id of key
Field number 2 is type Id of elem
Field number 3 is length
Field numbers are delta encoded and always increase.
Field or method matches by name, but it is not exported.
Field represents a two-dimensional field of cells.
Field returns a struct type's i'th field.
Field returns the i'th field of the struct v.
Field returns the i'th field/method of struct/interface type t.
Field returns the i'th struct field.
FieldAlign returns the alignment in bytes of a value of this type when used as a field in a struct.
FieldByIndex returns the nested field corresponding to index.
FieldByIndex returns the nested field corresponding to the index sequence.
FieldByName may return one of the fields named x or may report that there are none.
FieldByName returns the struct field with the given name and a boolean indicating if the field was found.
FieldByName returns the struct field with the given name and a boolean to indicate if the field was found.
FieldByName returns the struct field with the given name.
FieldByNameFunc returns the first struct field with a name that satisfies the match function and a boolean indicating if the field was found.
FieldByNameFunc returns the struct field with a name that satisfies the match function and a boolean to indicate if the field was found.
FieldByNameFunc returns the struct field with a name that satisfies the match function.
FieldNode holds a field (identifier starting with '.').
FieldSlice returns a slice of containing all fields/methods of struct/interface type t.
Fields are guaranteed to be in the correct http2 order and not have unknown pseudo header fields or invalid header field names or values.
Fields are the fields contained in the HEADERS and CONTINUATION frames.
Fields collide with methods of the same name at this depth.
Fields is a pointer to a slice of *Field.
Fields may also be padded with spaces or NULs.
Fields never have an import path in their name.
Fields splits the slice s around each instance of one or more consecutive white space characters, returning a slice of subslices of s or an empty list if s contains only white space.
Fields that appear next to each other that name the same parent will be enclosed in one XML element.
Fields that are in the receiving variable but missing from the transmitted type or value will be ignored in the destination.
Fields which start and stop with the quote character " are called quoted-fields.
Fields with a Comma, fields with a quote or newline, and fields which start with a space must be enclosed in quotes.
FieldsFunc interprets s as a sequence of UTF-8-encoded Unicode code points.
FieldsFunc makes no guarantees about the order in which it calls f(c).
FieldsFunc splits the string s at each run of Unicode code points c satisfying f(c) and returns an array of slices of s.
Figure out all the destinations we need.
Figure out field corresponding to key.
Figure out how many CPUs to use during GC.
Figure out how to avoid zeroing.
Figure out if it's better to rewrite the tree and make the heapaddr construct explicit or to keep this detail hidden behind the scenes.
Figure out smallest code.
Figure out what we can about our stack map
Figure out when that will be an improvement.
Figure out where the library will go.
Figure out which registers we're allowed to use.
Figures B.2 and B.16 of the specification suggest that restart markers should only occur between Entropy Coded Segments and not after the final ECS.
File absent in directory.
File descriptor support for Native Client.
File disappeared between readdir + stat.
File is a wrapper for the state of a file used in the parser.
File is an interface to access the file part of a multipart message.
File is crafted with 16 entries.
File is the source file corresponding to these instructions.
File length, or 0 if unknown
File locking deadlock error
File name constants from the tar spec.
File name of data with the expected output with input available.
File name of input data matching the tokens.
File name of the expected output when no input is available.
File names in stack traces are rewritten from GOROOT to GOROOT_FINAL.
File numbering starts with 1, so leave the first entry nil.
File offset of contents.
File reports the source file name of the token.
File represents an open file descriptor.
File returns a copy of the underlying os.File, set to blocking mode.
File returns the file that contains the position p.
File sets the underlying os.File to blocking mode and returns a copy.
File types The go command examines the contents of a restricted set of files in each directory.
FileAlignment should be a power of 2 between 512 and 64 K, inclusive.
FileConn returns a copy of the network connection corresponding to the open file f.
FileExports reports whether there are exported declarations.
FileHeader describes a file within a zip file.
FileInfo returns an os.FileInfo for the FileHeader.
FileInfo returns an os.FileInfo for the Header.
FileInfoHeader creates a partially-populated FileHeader from an os.FileInfo.
FileInfoHeader creates a partially-populated Header from fi.
FileInfoHeader should error when passing nil FileInfo
FileLike abstracts the few methods we need, so we can test without needing real files.
FileLine returns the file name and line number at the top of the stack for the given lineno.
FileLine returns the file name and line number of the source code corresponding to the program counter pc.
FileListener returns a copy of the network listener corresponding to the open file f.
FileName may be "" (typically for tests) in which case we get "." as the srcDir which is what we would want.
FileName returns the filename parameter of the Part's Content-Disposition header.
FilePacketConn returns a copy of the packet network connection corresponding to the open file f.
FileServer returns a handler that serves HTTP requests with the contents of the file system rooted at root.
FileSet.File should return nil if Pos is past the end of the FileSet.
FileSize is the size of this section in the file in bytes.
Filename exists with different case
Filename for file-based output formats, stdout by default.
Filenames are case sensitive, but that doesn't matter because the case registered with Add is also the same case used with LoadDLL later.
Filenames containing a certificate and matching private key for the server must be provided if neither the Server's TLSConfig.Certificates nor TLSConfig.GetCertificate are populated.
Filenames frequently share path prefixes, so this can save a lot of space and make export data size less dependent on file path length.
Files checks the provided files as part of the checker's package.
Files in package documentation are ignored by the go command.
Files specifies the open files inherited by the new process.
Files whose names begin with "_" (including "_test.go") or "." are ignored.
Fill buf through n writes of byte slice fub.
Fill buf through n writes of string fus.
Fill in actual length.
Fill in backward jump now.
Fill in fn to avoid repetition in definitions.
Fill in nextPairFreq of that level with the sum of the two nodes we've just calculated on this level.
Fill in pred/succ information.
Fill in the cache with information about right now, since that will be the most common lookup.
Fill in the function symbol
Fill in the rest of the buffer.
Fill out both oh64 and oh.
Fill padding with padByte.
Fill the buffer with enough to decode
Fill up the buffer with an incrementing count.
Filled 64 MB - stop there.
Filling in bits for an array of typ.
Filter eliminates documentation for names that don't pass through the filter f.
Filter out section symbols, overwriting syms in place.
Filter out such bytes to make room for more input.
Filter out the following special case.
Filter returns a new comment map consisting of only those entries of cmap for which a corresponding node exists in the AST specified by node.
Filter type, as per the PNG spec.
FilterDecl reports whether there are any declared names left after filtering.
FilterDecl trims the AST for a Go declaration in place by removing all names (including struct field and interface method names, but not from parameter lists) that don't pass through the filter f.
FilterFile reports whether there are any top-level declarations left after filtering.
FilterPackage reports whether there are any top-level declarations left after filtering.
FilterSamplesByName filters the samples in a profile and only keeps samples where at least one frame matches focus but none match ignore.
FilterSamplesByTag removes all samples from the profile, except those that match focus and do not match the ignore regular expression.
Final adjustment if adding size field increased the record size.
Final argument is (basep *uintptr) and the syscall doesn't take nil.
Final column is double-quoted.
Final entry of table is just end pc.
Final field must be zero width.
Final operand is an immediate constant.
Final part empty with lwsp-chars after final separator.
Final part empty with newlines after final separator.
Final rounding After generating the 53 bits result, we compute one more bit.
Final typecheck for any unused variables.
Finalize as much as possible.
Finally it invokes T3.
Finally it pops but does not execute the deferred function, calls runtime.entersyscall, and returns to runtime.cgocallback.
Finally the args describe how to decode the instruction arguments.
Finally we can read some input.
Finally, *Int, *Rat, and *Float satisfy the fmt package's Scanner interface for scanning and (except for *Rat) the Formatter interface for formatted printing.
Finally, after all the fields have been sent a terminating mark denotes the end of the struct.
Finally, it's convenient if the delta between the Unix epoch and long-ago epoch is representable by an int64 constant.
Finally, look in the installed package directories for each action.
Finally, mantissa normalization (shift left) requires a correcting multiplication by 2**(-shiftcount).
Finally, opcode followed by all possible 3-byte values.
Finally, the Syms in this list are not "real" Syms as they don't actually represent object names.
Finally, the actual commands.
Finally, the export data contains a list of representations for inlined function bodies.
Finally, the values stored in a field element are in Montgomery form.
Finally, we adjust the trigger for next time by this error, damped by the proportional gain.
Finally, what if there is a variant in which 66 is a mandatory prefix rather than an operand size override, but we know of no corresponding F2/F3 form, and we see both F2/F3 and 66.
Find a depth-first order and assign a depth-first number to all basic blocks.
Find a handler on a handler map given a path string Most-specific (longest) pattern wins
Find a register to spill.
Find all R_PPC64_REL24 relocations that reference dynamic imports.
Find all newly freed objects.
Find all the stores in this block.
Find an equivalence class where some members of the class have non-equivalent arguments.
Find an import decl to add to.
Find an unused stack slot.
Find and parse string.
Find answer for name in dns message.
Find bits for the next word.
Find bits for this word.
Find bits of the beginning of the object.
Find child by AT_name using hashtable if available or linear scan if not.
Find closing bracket.
Find concatenation test.
Find container symbols, mark them with SCONTAINER
Find directory to begin the scan.
Find each byte used, then assign them each an index.
Find end of previous arenas.
Find first arg that looks like a go file and assume everything before that are options to pass to gcc.
Find first statement that affects flow of control (break, continue, if, etc.).
Find functions that can be inlined and clone them before walk expands them.
Find highest priority schedulable value.
Find longest run of zeros.
Find matches in slice b if b is non-nil, otherwise find matches in string s.
Find maximal length run of memory-only fields.
Find name and type for field f.
Find old temp to reuse if possible.
Find or construct *T given T.
Find out how many records there are (MemProfile(nil, true)), allocate that many records, and get the data.
Find out how many records there are (fetch(nil)), allocate that many records, and get the data.
Find out which categories to dump
Find out which scripts to dump
Find reachable blocks.
Find returns a slice holding the text of the leftmost match in b of the regular expression.
Find searches DLL for procedure named p.Name.
Find splice point, check for existing record.
Find start element if we need it.
Find store chain for block.
Find symbols in this binary matching the user regexp.
Find the appropriate units for the smallest non-zero sample
Find the attribute delimiter.
Find the attribute name.
Find the base of the mapping.
Find the base type: methtype will fail if t is not of the form T or *T.
Find the closest palette color in Euclidean R,G,B,A space: the one that minimizes sum-squared-difference.
Find the elf.Section of a given shared library that contains a given address.
Find the exact byte for which the special was setup (as opposed to object beginning).
Find the field of the local type with the same name.
Find the first relevant spec.
Find the highest such pointer so we can handle everything there and below carefully.
Find the identifiers at the end of the command chain.
Find the import node that imports path, if any.
Find the index of node and visited in the initlist.
Find the last element
Find the last field that has pointers.
Find the matched meta import.
Find the maximal chain of instructions starting with r which could be executed conditionally
Find the sequence of fields with the name of this first field.
Find the target host.
Find the type of the variable.
Find the unit after off
Find the value to pass for the -intgosize option to swig.
Find this line at this stack level
Find top-level declarations in the file.
Find unresolved identifiers and uses of top-level declarations.
Find variable value on each predecessor.
Find will not search procedure, if it is already found and loaded into memory.
FindAllIndex returns a sorted list of non-overlapping matches of the regular expression r, where a match is a pair of indices specifying the matched slice of x.Bytes().
FindExportData positions the reader r at the beginning of the export data section of an underlying GC-created object/archive file by reading from it.
FindFirstFile returns ERROR_FILE_NOT_FOUND when no matching files can be found.
FindIndex returns a two-element slice of integers defining the location of the leftmost match in b of the regular expression.
FindPkg returns the filename and unique package id for an import path based on package information provided by build.Import (using the build.Default build.Context).
FindProc searches DLL d for procedure named name and returns *Proc if found.
FindProcess looks for a running process by its pid.
FindReaderIndex returns a two-element slice of integers defining the location of the leftmost match of the regular expression in text read from the RuneReader.
FindString returns a string holding the text of the leftmost match in s of the regular expression.
FindStringIndex returns a two-element slice of integers defining the location of the leftmost match in s of the regular expression.
Finding these sets is finding strongly connected components in the static call graph.
Finding this byte out of place implies that it is not in the last position.
Finds a runnable goroutine to execute.
Finish argument list with path to C file.
Finish sweep before we start concurrent scan.
Finish the current object
Finish the first response.
FinishType completes any outstanding type mapping work.
Finishes execution of the current goroutine.
First (R) was missing, all we have is (R*scale).
First 2 should be evicted.
First Go program ever run (although not in this exact form).
First ReadGCStats will allocate, second should not, especially if we follow up with an explicit garbage collection.
First a field that's a structure.
First add the package dirs corresponding to GOPATH entries in the original GOPATH order.
First arg need not be a pointer.
First before we can load a DLL from the current directory, loading it only as "nojack.dll", without an absolute path.
First build the section contents into a byte buffer.
First by looking up the template.
First byte differs, start a new lookup table here.
First condition: loop entry has a single predecessor, which is the header block.
First connection data is received, let's get second connection data.
First connection is lost forever, but that is ok.
First count how many, this cuts allocations in half.
First count the fields.
First element is drive letter without terminating slash.
First ensure that we get an error when contacting a non-existent host.
First entry in constant block.
First entry in variable block.
First entry is what 0x80 should be replaced with.
First entry should be __.PKGDEF.
First fetch something large, but only read some of it.
First field is opcode, then tab, then arguments separated by spaces.
First find the PID column index by parsing the first line, and select lines containing pid in the column.
First find the import spec.
First import all packages into the same map and then each individually.
First item must be an identifier.
First line is "mode: foo", where foo is "set", "count", or "atomic".
First line: GET /index.html HTTP/1.0
First message, be extra suspicious: this might not be a TLS client.
First non-processed byte in buf.
First of OS specific semantics
First of reserved range.
First operating system specific.
First operating system-specific.
First package name we've seen.
First pass: set each value to the next index which starts a prefix of pattern.
First pass: write instructions to input file for external disassembler.
First processor-specific type.
First processor-specific.
First returns the first element of Nodes (same as n.Index(0)).
First returns the symbol at the front of the list.
First round just XORs input with key.
First slide down data already consumed.
First store completed.
First store in progress.
First store not yet completed.
First template becomes return value if not already defined, and we use that one for subsequent New calls to associate all the templates together.
First test that it *does* work when the server's key is ECDSA.
First test that it *does* work when the server's key is RSA.
First the simple cases.
First the zone information.
First token of macro definition.
First token to be encoded which is also a ProcInst with target of xml is the xml declaration.
First transfer t1 into t0
First try for a zone with the right name that was actually in effect at the given time.
First try our current group.
First two must be registers
First we clone the drivers, then add a definition of T2 to the template name space.
First we create a FuncMap with which to register the function.
First we iterate over the input and count the number of elements, checking that the types are correct in each case.
First we sort the code length assignments by ascending code length, using the symbol value to break ties.
First word could be a keyword such as range.
First word of data block is actual code.
First, a non-execution error shouldn't be an ExecError.
First, a relative path can be used as a shorthand on the command line.
First, check that the basic goos, goarch, and version match.
First, checks if the condition itself is redundant.
First, collect and dedup all pcs.
First, copy the dwarf load command into the header
First, create the set of root certificates.
First, figure all conflicts.
First, fill in the data portion of the interface.
First, flood fill any symbols directly reachable in the call graph from INITENTRY.
First, grab a batch from local queue.
First, identify the constructors.
First, put back the token.
First, reading the entire content should produce the error ContentErr.
First, resolve competition with other writers.
First, search the hashtable w/o the mutex.
First, see if the value itself knows how to convert itself to a driver type.
First, shift data to beginning of buffer if there's lots of empty space or space is needed.
First, try to grab a batch from central cache.
First, undo the readByte that the ensureNBits call made.
First, until g is updated the g and SP do not match, so the stack bounds check detects the partial transition.
First, we make everything "old": but only a few seconds old, or it might be older than gc (or the runtime source) and everything will get rebuilt.
First, without keep-alives.
First, you can actually run 'go test' in directories that have names that Windows thinks are installer-like, without getting a dialog box asking for more permissions.
First, zero-or-one prefixes followed by opcode followed by all possible 1-byte values.
First-match mode: cut off all lower-priority threads.
Fish out the useful bits of the dynamic table.
Fix debt if necessary.
Fix does not make backup copies of the files that it edits.
Fix finds Go programs that use old APIs and rewrites them to use newer ones.
Fix for issue 7149: Missing return type on String method caused fault.
Fix re-establishes the heap ordering after the element at index i has changed its value.
Fix the element type id here.
Fix the http2 side of golang.org/issue/15366 once the http1 part is submitted.
Fix them through heuristics.
Fix up all merge edges.
Fix up b to have one less predecessor.
Fix up comment positions
Fix up output referring to cgo-generated code to be more readable.
Fix up returns to the stack barrier by fetching the original return PC from gp.stkbar.
Fix up t to have one more predecessor.
Fix's rewrites are idempotent, so that it is safe to apply fix to updated or partially updated code even without using the -r flag.
FixAlloc is a simple free-list allocator for fixed size objects.
FixAlloc: a free-list allocator for fixed-size objects, used to manage storage used by the allocator.
Fixed Huffman baseline.
Fixed bugs Many elements in an action blew the lookahead until we made lexInsideAction not loop.
Fixed number of digits.
Fixed-size object allocator.
FixedDecimal stores in d the first n significant digits of the decimal representation of f.
FixedZone returns a Location that always uses the given zone name and offset (seconds east of UTC).
Fixing issue 8180 where there were two.
Fixup instructions after allocauto (formerly compactframe) has moved all autos around.
Flag changes and non-capturing groups.
Flag is a set of flags specific to this command.
Flag parsing stops just before the first non-flag argument ("-" is a non-flag argument) or after the terminator "--".
Flag passed to traceGoPark to denote that the previous wakeup of this goroutine was futile.
Flag reports whether the flag c, a character, has been set.
Flag values are recomputed if they need to be spilled/restored.
Flag: -structtags Struct tags that do not follow the format understood by reflect.StructTag.Get.
Flags are the 1 byte of 8 potential bit flags per frame.
Flags control the behavior of the parser and record information about regexp context.
Flags for clone calls (Linux only)
Flags is a bitmask of HTTP/2 flags.
Flags may then be used directly.
Flags returns the output flags for the logger.
Flags returns the output flags for the standard logger.
Flags set by multiple commands.
Flags to OpenFile wrapping those of the underlying system.
Flags to control which individual checks to perform.
Flags used during command processing
Flags: 'l' print definition, not name 'h' omit 'func' and receiver from function types, short type names 'u' package name, not prefix (FTypeId mode, sticky)
Flags: -D path Set relative path for local imports.
Flatten array-of-array-of-array to just a big array by multiplying counts.
Flip the bits of the rune so it's available to UnreadRune.
Float is a 64-bit float variable that satisfies the Var interface.
Float keys can be updated from +0 to -0.
Float returns v's underlying value, as a float64.
Float values not representable as a fraction
Float values representable as a fraction
Float variables cannot be used as indices.
Float32 returns the float32 value nearest to x.
Float32 returns the nearest float32 value for x and a bool indicating whether f represents x exactly.
Float32Val is like Float64Val but for float32 instead of float64.
Float32bits returns the IEEE 754 binary representation of f.
Float32frombits returns the floating point number corresponding to the IEEE 754 binary representation b.
Float64 defines a float64 flag with specified name, default value, and usage string.
Float64 returns the float64 value nearest to x.
Float64 returns the nearest float64 value for x and a bool indicating whether f represents x exactly.
Float64 returns the number as a float64.
Float64Var defines a float64 flag with specified name, default value, and usage string.
Float64bits returns the IEEE 754 binary representation of f.
Float64frombits returns the floating point number corresponding the IEEE 754 binary representation b.
Float64s sorts a slice of float64s in increasing order.
Float64sAreSorted tests whether a slice of float64s is sorted in increasing order.
FloatString returns a string representation of x in decimal form with prec digits of precision after the decimal point.
FloatType is here for the purposes of documentation only.
Floating point registers (FPRs).
Floating point registers.
Floating point, integer, and Number values encode as JSON numbers.
Floating-point arcsine and arccosine.
Floating-point arctangent.
Floating-point error function and complementary error function.
Floating-point hyperbolic sine and cosine.
Floating-point limit values.
Floating-point logarithm of the Gamma function.
Floating-point logarithm.
Floating-point mod function.
Floating-point numbers are always sent as a representation of a float64 value.
Floating-point numbers are always sent using IEEE-754 64-bit precision (see below).
Floating-point numbers are transmitted as uint64s holding the bits of the underlying representation.
Floating-point sine and cosine.
Floating-point tangent.
Floats are tricky because you want to scan in the precision of the result, not scan in high precision and convert, in order to preserve the correct error condition.
Floor returns the greatest integer value less than or equal to x.
Flow+level is encoded in two bits.
Flowend(graph) // free graph
Flowing multiple returns to a single dst happens when analyzing "go f(g())": here g() flows to sink (issue 4529).
FloydSteinberg is a Drawer that is the Src Op with Floyd-Steinberg error diffusion.
Flush MCache's to MCentral.
Flush accumulated full bytes.
Flush all currently cached workbufs and ensure all Ps see gcBlackenPromptly.
Flush and wait for 100-continue if expected.
Flush background scan work credit to the global account if we've accumulated enough locally so mutator assists can draw on it.
Flush background scan work credit.
Flush current output block if any.
Flush does not return until the data has been written.
Flush finishes writing the current file (optional).
Flush flushes any buffered XML to the underlying writer.
Flush flushes any buffered data to the underlying writer.
Flush flushes any pending compressed data to the underlying writer.
Flush flushes the Writer to its underlying io.Writer.
Flush pending output.
Flush remaining scan work credit.
Flush sends any buffered data to the client.
Flush sets rw.Flushed to true.
Flush should be called after the last call to Write to ensure that any data buffered in the Writer is written to output.
Flush the gcWork caches.
Flush writes any buffered data to the underlying io.Writer.
FlushAfterChunkWriter signals from the caller of NewChunkedWriter that each chunk should be followed by a flush.
FlushInterval specifies the flush interval to flush to the client while copying the response body.
Fmt uses runes for its width calculation, but we need bytes in the entry header.
FmtByte (hh) implies FmtShort (h) skip leading "type." in method name
Fn describes syscall function.
Fold orbit bytes: 63 pairs, 252 bytes
FoldCategory maps a category name to a table of code points outside the category that are equivalent under simple case folding to code points inside the category.
FoldScript maps a script name to a table of code points outside the script that are equivalent under simple case folding to code points inside the script.
Followed by NetBSD string and version.
Followed by OpenBSD string and version.
Followed by an overflow pointer.
Followed by bucketCnt keys and then bucketCnt values.
Following are not implemented.
Following established convention, the address is omitted for undefined symbols (type U).
Following syscalls are available on every Windows PC.
Following syscalls are only available on some Windows PCs.
Following the fat_header comes narch fat_arch structs that index Mach-O images further in the file.
Following this are the entries, consisting of two fields (offset, numBytes).
Following this function, h is guaranteed to be initialized into a complete tree (i.e., neither over-subscribed nor under-subscribed).
Fool gccgo into thinking that these variables can change.
For 'e', 'E', and 'f' it is the number of digits after the decimal point.
For 'g' and 'G' it is the total number of digits.
For 386 this is not defined in any public header file.
For 422 and 420 subsampling, some of the Cb and Cr elements will be set multiple times.
For 4:2:0 chroma subsampling, there are four Y 8x8 blocks in every 16x16 MCU.
For DOT output, count the tags as nodes since we will draw boxes for them.
For GCCGO it is extracted from the .go_export section.
For GNU PAX sparse format 0.0 support.
For Go 1.4 and beyond, we require this auto-tagging to apply only to files with a non-empty prefix, so "foo_linux.go" is tagged but "linux.go" is not.
For HTTP requests, as part of hardening against request smuggling (RFC 7230), don't allow a Content-Length header for methods which don't permit bodies.
For HTTP/2, StateActive fires on the transition from zero to one active request, and only transitions away once all active requests are complete.
For IP networks, the network must be "ip", "ip4" or "ip6" followed by a colon and a protocol number or name and the addr must be a literal IP address.
For Mach-O and PE/386 files we strip a leading underscore from the symbol name.
For OCALLMETH, the receiver is set in these statements.
For Offsetof(s.f), s may itself be a pointer, but accessing f must not otherwise involve indirection via embedded pointer types.
For POSIX leftmost-longest matching, see CompilePOSIX.
For POST or PUT requests, it also parses the request body as a form and put the results into both r.PostForm and r.Form.
For SB, SP, and FP, there must be a name here.
For Scan, newlines are treated as spaces.
For Scanln, it stops at newlines.
For TCP and UDP networks, addresses have the form host:port.
For Unix networks, the address must be a file system path.
For a 96-bit nonce, the nonce, along with a four-byte big-endian counter starting at one, is used directly as the starting counter.
For a channel receive src might be on the stack of some other goroutine, so we can't unwind the stack even if we wanted to.
For a channel used for notification of just one signal value, a buffer of size 1 is sufficient.
For a client (performing client authentication), this must be a crypto.Signer with an RSA or ECDSA PublicKey.
For a conversion to an interface type, target is a suggested scratch space to use.
For a description of the methodology, see https://en.wikipedia.org/wiki/Authenticated_encryption
For a gif.GIF, the overall bounds' top-left point is always implicitly (0, 0), and any frame whose bounds have a negative X or Y will be outside those overall bounds, so encoding should fail.
For a given pass of the sorter, all suffixes are ordered up to their first h characters, and sa is h-ordered.
For a local import the identifier is the pseudo-import path we create from the full directory to the package.
For a mask of this form, CIDRMask is the inverse of IPMask.Size.
For a more complex example and explanation, see ../gmp/gmp.go.
For a negative result (z.neg) it is exactly the opposite.
For a non-interface type T or *T, the returned Method's Type and Func fields describe a function whose first argument is the receiver.
For a one pass prog, the fundamental condition that must be true is: at any InstAlt, there must be no ambiguity about what branch to  take.
For a server, this must implement crypto.Signer and/or crypto.Decrypter, with an RSA or ECDSA PublicKey.
For a specification, see https://developers.google.com/protocol-buffers/docs/encoding.
For a study of the facility in action, visit
For a tutorial, see https://golang.org/s/types-tutorial.
For a vendor check we must exclude directories that contain no .go files.
For acceptable performance, we're relying on loop nests to not be terribly deep.
For accessing the fields of r_info.
For accessing the fields of st_info.
For accessing the fields of st_other.
For address calculations.
For all but the first request, create the next request hop and replace req.
For all functions accepting callerpc and pc, callerpc is a return PC of the function that calls this function, pc is start PC of the function that calls this function.
For all other tokens the string corresponds to the token constant name (e.g. for the token IDENT, the string is "IDENT").
For allocated spans, their pages map to the span itself.
For amd64p32 this means 64-bit alignment even though pointers are 32 bit.
For an (EC)DSA key, it should be a DER-serialised, ASN.1 signature structure.
For an abstract method, Recv returns the enclosing interface either as a *Named or an *Interface.
For an anonymous field, Defs returns the field *Var it defines.
For an anonymous field, Uses returns the *TypeName it denotes.
For an interface type, the returned Method's Type field gives the method signature, without a receiver, and the Func field is nil.
For an overview of GC a good place to start is Richard Jones' gchandbook.org.
For an overview of the syntax, run go doc regexp/syntax
For an unnamed type, we only need the link if the type can be created at run time by reflect.PtrTo and similar functions.
For android, we use a disgusting hack that assumes the thread-local storage slot for g is allocated using pthread_key_create with a fixed offset (see src/runtime/cgo/gcc_android_amd64.c).
For arguments and results, the bitmap covers all variables, so we must include all the variables, even the ones without pointers.
For arrays and structs, alignment is defined in terms of alignment of the elements and fields, respectively.
For assignable but different non-empty interface types, we want to recompute the itab.
For asynchronous channels, the receiver gets its data from the channel buffer and the sender's data is put in the channel buffer.
For background, see https://golang.org/issue/1108.
For backwards compatibility for Go 1.4 and earlier code, the Config field is optional, and if zero, the width and height is implied by the first (and in this case only) frame's width and height.
For backwards compatibility, a nil Disposal is valid to pass to EncodeAll, and implies that each frame's disposal method is 0 (no disposal specified).
For backwards compatibility, a zero-valued Config is valid to pass to EncodeAll, and implies that the overall GIF's width and height equals the first frame's bounds' Rectangle.Max point.
For baseline JPEGs, these parameters are hard-coded to 0/63/0/0.
For benchmarks, the text is always printed to avoid having performance depend on the value of the -test.v flag.
For big objects, just print the beginning (because that usually hints at the object's type) and the fields around off.
For binary-only package, use build ID from supplied package binary.
For blocks which have a flags control value, that's the only value we can leave in the flags register at the end of the block.
For bool flags, the type is omitted and if the flag name is one byte the usage message appears on the same line.
For both read and write operations.
For both these reasons, let a thread acquire the printlock 'recursively'.
For both, the argp must be a pointer to the caller's first function argument.
For calls, the Ellipsis fields (token.Position) must match since that is how f(x) and f(x...) are different.
For cgo, cb.arg points into a C stack frame and therefore doesn't hold any pointers that the GC can find anyway - the write barrier would be a no-op.
For client requests Host optionally overrides the Host header to send.
For client requests Trailer must be initialized to a map containing the trailer keys to later send.
For client requests a nil body means the request has no body, such as a GET request.
For client requests an empty string means GET.
For client requests these fields are ignored.
For client requests, a value of 0 means unknown if Body is not nil.
For client requests, certain headers such as Content-Length and Connection are automatically written when needed and values in Header may be ignored.
For client requests, setting this field prevents re-use of TCP connections between requests to the same hosts, as if Transport.DisableKeepAlives were set.
For client requests, the URL's Host specifies the server to connect to, while the Request's Host field optionally specifies the Host header value to send in the HTTP request.
For codes larger than the table width, the table contains a link to an overflow table.
For commands, read build ID directly from binary.
For commands, unless the -cmd flag is present "go doc command" shows only the package-level docs for the package.
For compatibility with Go 1.0, Symbols omits the null symbol at index 0.
For compatibility with Symbols, DynamicSymbols omits the null symbol at index 0.
For compatibility with existing tools, the NUL character is not allowed.
For compatibility, the Client will also use the deprecated CancelRequest method on Transport if found.
For complete documentation, run "go help doc".
For compound operands such as slices and structs, the format applies to the elements of each operand, recursively, not to the operand as a whole.
For compound structures, it sums the sizes of the elements.
For concreteness, if t represents func(x int, y ...
For connection setup and write operations.
For connection setup operations.
For consistency of output, write other headers sorted by key.
For constructing r_info from field values.
For constructing st_info from field values.
For content length of zero.
For convenience, File.Pos may be used to create file-specific position values from a file offset.
For correct rounding, the sign of z must be set correctly before calling round.
For debugging - keep around.
For debugging Proportional response gain for the trigger controller.
For debugging, the runtime also supports installing stack barriers at every frame.
For debugging, this can be set to 0, which will install a stack barrier at every frame.
For deep composite literal nests, this can lead to an exponential algorithm.
For descriptor 3, a normal exit is expected.
For details about the race detector see https://golang.org/doc/articles/race_detector.html
For details and a test case in C see https://golang.org/issue/6828.
For details of the functions and data types in this package consult the manuals for the appropriate operating system.
For determinism, we redact addresses.
For diagnostic messages.
For each Value, map from its value ID back to the preregalloc Value it was derived from.
For each block, we need to xor the decrypted data with the previous block's ciphertext (the iv).
For each code range, compute nextcode (first code of that length), limit (last code of that length), and base (offset from first code to sequence number).
For each content sensitive escaper, see how it does on each of the typed strings above.
For each entry and exit number, the values one larger and smaller are reserved to indicate "strictly above" and "strictly below".
For each function, we write a "hammer" function that repeatedly uses the atomic operation to add 1 to a value.
For each input address, addr2line prints two output lines, first the name of the function containing the address and second the file:line of the source code corresponding to that address.
For each input parameter to a function, the escapeReturnEncoding describes how the parameter may leak to the function's outputs.
For each name, we generate these lines, where xxx is the index in toSniff plus one.
For each named object, print the line and column of its definition and each of its uses.
For each output, the number of bits for a tag
For each package that depends on preal, make a "test copy" that depends on ptest.
For each point in the sub-image's bounds, check that m.At(x, y) equals sub.At(x, y).
For each predecessor of b, expand its list of live-at-end values.
For each query in tests: Check that Cookies with toURL yields the cookies in want.
For each recursive call of karatsuba, an unused slice of z is passed in that has (at least) half the length of the caller's z.
For each such word, find all the other tracked stack words in the same Go variable (struct/slice/string/interface) and mark them live too.
For each type, we keep track of all the stack slots we have allocated for that type.
For each value, one block in which that value is used.
For each value, the number of blocks in which it is used.
For each value, the number of times it is used in the block by values that have not been scheduled yet.
For each value, whether that value is ever an arg to a phi value.
For ease of creation, the types are all referred to by string name (e.g., "reflect.Value").
For ease of creation, we write the byte slices as strings.
For ease of reading, the test cases use strings that are converted to byte slices before invoking the functions.
For embedded structs, embed its fields.
For error cases, see TestReadResponseErrors below.
For every level, the first two items are the first two characters.
For every value, we generate a spill immediately after the value itself.
For example February 31 and even February 99 are valid dates, specifying dates in March and May.
For example for the code:
For example when the sweeper is placing an unmarked object on the free list it does not want the write barrier to be called since that could result in the object being reachable.
For example, "/debug/pprof/heap" serves the "heap" profile.
For example, "foo-bar" changes case to "Foo-Bar"
For example, "go build -tags netgo myprog.go" would use the installed copy of package net, even if that copy had been built without netgo.
For example, 'go install' and 'go install -tags neverusedtag' produce the same binaries (assuming neverusedtag is never used).
For example, 'go list all' lists all the packages on the local system.
For example, (add x x).
For example, Command("echo", "hello")
For example, Git does not set the mtime of files during a checkout operation, even when checking out an old version of the code.
For example, ONAME nodes that refer to local variables use it to identify their stack frame position.
For example, October 32 converts to November 1.
For example, SetTraceback("all") ensure that the program prints all goroutines when it crashes.
For example, Zero(TypeOf(42)) returns a Value with Kind Int and value 0.
For example, a 24x16 pixel 4:2:0 progressive image consists of two 16x16 MCUs.
For example, a Git download tries https://, then git+ssh://.
For example, a NullString struct changing into a string or nil.
For example, a client might run a HELP command that returns a dot-body by using:
For example, a compressed section may have a nil ReaderAt.
For example, a float64 with value 300 or a string with value "300" can scan into a uint16, but not into a uint8, though float64(255) or "255" can scan into a uint8.
For example, a goroutine was unblocked but was not scheduled before trace stop.
For example, a goroutine was unblocked on a mutex, but another goroutine got ahead and acquired the mutex before the first goroutine is scheduled, so the first goroutine has to block again.
For example, a malformed declaration may be missing a property, colon (:) or value.
For example, a type might implement a Scan method that has nothing to do with fmt.Scanner, but we still want to check the methods that are intended to implement fmt.Scanner.
For example, all the packages in the code.google.com/p/codesearch repo share the same root (the directory for that path), and we only need to run the hg commands to consider each repository once.
For example, amd64 and amd64p32 are both members of the AMD64 family, and ppc64 and ppc64le are both members of the PPC64 family.
For example, an RSA key kept in a hardware module.
For example, consider this input:
For example, deferproc might call malloc, which does one of the above checks (without allocating a full frame), which might trigger a call to morestack.
For example, defs_linux_amd64.h becomes defs_GOOS_GOARCH.h.
For example, given this execution stack:
For example, given var x int type T int x's type is "int" but T's type is "type int".
For example, go:generate -command yacc go tool yacc specifies that the command "yacc" represents the generator "go tool yacc".
For example, having a non-negative time t means that we can write
For example, if Import("y", "x/subdir", 0) finds "x/vendor/y", the returned package's ImportPath is "x/vendor/y", not plain "y".
For example, if compiling:
For example, if fmt doesn't compile and we are in src/html, the output is
For example, if t represents type Foo, PtrTo(t) represents *Foo.
For example, if the argument is rand.Float64, we must scan both crypto/rand and math/rand to find the symbol, and the first call will return crypto/rand, true.
For example, if the command being run will not exit until standard input is closed, the caller must close the pipe.
For example, if the input is
For example, in the United States, March 13, 2011 2:15am never occurred, while November 6, 2011 1:15am occurred twice.
For example, in the pattern "abcxxxabc", when the first mismatch from the back is found to be in position 3, the matching suffix "xxabc" is not found elsewhere in the pattern.
For example, instead of a binary distribution, copying a home directory from one directory or machine to another might copy files but not preserve mtimes.
For example, let's look at AADDL.
For example, on 386 Windows, gcc wants to 8-align int64s, but gc does not.
For example, on Unix systems, the crash raises SIGABRT to trigger a core dump.
For example, os.ExpandEnv(s) is equivalent to os.Expand(s, os.Getenv).
For example, os.Stdin implements io.Seeker, but calling Seek always returns an error and performs no action.
For example, package net uses cgo for access to name resolution functions provided by libc.
For example, paths used internally at Google all begin with 'google', and paths denoting remote repositories begin with the path to the code, such as 'github.com/user/repo'.
For example, registering "/images/" causes ServeMux to redirect a request for "/images" to "/images/", unless "/images" has been registered separately.
For example, relations learned for unsigned pairs cannot be transferred to signed pairs because the same bit representation can mean something else.
For example, solaris/amd64 seems to have wildly different ticks on different CPUs.
For example, the "continued" status is 0xFFFF, distinguishing itself from stopped via the core dump bit.
For example, the canonical key for "accept-encoding" is "Accept-Encoding".
For example, the declaration:
For example, the entries for VPXOR are:
For example, the field list x, y, z int has type "int, int, int".
For example, the first function, cvtInt, takes any value v of signed int type and returns the value converted to type t, where t is any signed or unsigned int type.
For example, the following string:
For example, the map runtime routines take the map key by reference, so make sure all map keys are addressable by copying them to temporaries as needed.
For example, the musl libc returns -1.
For example, the socket data structures refer to in_addr and in_addr6 structs but we want to be able to treat them as byte arrays, so the godefs inputs in package syscall say
For example, the string " items are made of " in the example above appears on standard output when the program is run.
For example, the trie containing keys "ax", "ay", "bcbc", "x" and "xy" could have eight nodes:
For example, this can occur with a 4:2:0 chroma subsampling and a 1x1 image.
For example, three passes could transmit coefficient 0 (the DC component), coefficients 1-5, and coefficients 6-63, in zig-zag order.
For example, three passes could transmit the 6 most significant bits, followed by the second-least significant bit, followed by the least significant bit.
For example, when buffering writes to a network socket, excessive network writes should be avoided.
For example, when building with a non-standard configuration, use -pkgdir to keep generated packages in a separate location.
For example: - the public suffix of "example.com" is "com", - the public suffix of "foo1.foo2.foo3.co.uk" is "co.uk", and - the public suffix of "bar.pvt.k12.ma.us" is "pvt.k12.ma.us".
For example: ADD R1, R2 MOVD R2, R3 might become ADD R1, R2, R3
For example: an INSERT and UPDATE.
For example: checking a signature when the public key isn't a certificate signing key.
For external link, record that we need to tell the external linker -s, and turn off -s internally: the external linker needs the symbol information for its final link.
For externally defined implementations of Type.
For f to be correct, r must be closer to f than to f0 or f1.
For fields that are not used in most nodes, this is used instead of a slice to save space.
For files requiring the ZIP64 format the 32 bit fields will be 0xffffffff and the 64 bit fields must be used instead.
For fixed array we really want the pointer in n3.
For fixed-width printing of values, such as the date, that may be one or two characters (7 vs.
For flag_race it modifies the function as follows:
For free spans, only the lowest and highest pages map to the span itself.
For gccgo we use a wrapper function in Go, in order to call CgocallBack and CgocallBackDone.
For general filtering (not just exports), filter type even if name is not filtered out.
For generated C, we leave the names as is (tv_sec, tv_usec), since that's what people are used to seeing in C.
For generated Go code, such as package syscall's data structures, we drop a common prefix (so sec, usec, which will get turned into Sec, Usec for exporting).
For generating an error message here and in html/template.
For grayscale images, H_1 is the maximum H_j for all components j, so that ratio is always 1.
For h1, sendfile is used, though, forcing a header flush at the io.Copy.
For hexadecimal mantissae, the exponent must be binary, if present (an "e" or "E" exponent indicator cannot be distinguished from a mantissa digit).
For high-level functionality, such as cookies and redirects, see Client.
For higher-level HTTP client support (such as handling of cookies and redirects), see Get, Post, and the Client type.
For historical reasons we set the id here rather than init.
For historical reasons, the GOTRACEBACK settings 0, 1, and 2 are synonyms for none, all, and system, respectively.
For i386 Mach-O PC-relative, the addend is written such that it *is* the PC being subtracted.
For identifiers, only the names need to match (and none of the other *ast.Object information).
For implementers and the curious, here is an encoded example.
For incoming requests, the Host header is promoted to the Request.Host field and removed from the Header map.
For incoming server requests, the context is canceled when either the client's connection closes, or when the ServeHTTP method returns.
For information about UTF-8 strings in Go, see https://blog.golang.org/strings.
For information about how to program the templates themselves, see the documentation for text/template.
For information on SWIG see http://swig.org/.
For information on how to use it see the cgo documentation (go doc cmd/cgo).
For instance, 17.0 is encoded in only three bytes (FE 31 40).
For instance, OpAdd can be 32 or 64 bit, signed or unsigned, float or complex, depending on Value.Type.
For instance, ParseFiles("a/foo", "b/foo") stores "b/foo" as the template named "foo", while "a/foo" is unavailable.
For instance, TCP timeouts are often around 3 minutes.
For instance, a BlockIf has a boolean control value and BlockExit has a memory control value.
For instance, a lock for cgo can occur while the main goroutine is holding the lock during the initialization phase.
For instance, an x value of -1 is treated as width-1.
For instance, consider the result type of m:
For instance, given flag.String("I", "", "search `directory` for include files") the output will be -I directory search directory for include files.
For instance, given three *Int values a, b and c, the invocation c.Add(a, b) computes the sum a + b and stores the result in c, overwriting whatever value was held in c before.
For instance, if ReadFrame returns a StreamError with code PROTOCOL_ERROR, ErrorDetail will say exactly what was invalid.
For instance, if the mode is ScanIdents (not ScanStrings), the string "foo" is scanned as the token sequence '"' Ident '"'.
For instance, if x is a slice,  Sizeof returns the size of the slice descriptor, not the size of the memory referenced by the slice.
For instance, in method declarations, the receiver is treated like an ordinary parameter list and thus may contain multiple entries where the spec permits exactly one.
For instance, it might make sense for GobEncode to include a version number in the encoding.
For instance, the following test file indicates that a "not declared" error should be reported for the undeclared variable x:
For instance, the second (05 in the reference time) in our value is 39, so it doesn't need padding, but the minutes (04, 06) does.
For instance, time.Sunday is of type time.Weekday, so it is defined in the type but not in the Consts list for the package.
For instance, to configure a Scanner such that it only recognizes (Go) identifiers, integers, and skips comments, set the Scanner's Mode field to:
For instance, to recognize Ints, set the ScanInts bit in Mode.
For int32 and int64, use explicit test.
For integers, that type is int64.
For invalid inputs (if a contains spaces or non-token bytes), a is unchanged and a string copy is returned.
For isZero and isP, the LSB is 0 iff all the bits are zero.
For journal quality proofs that these steps are complete, correct, and terminate see Hudson, R., and Moss, J.E.B.
For key value expressions, only inspect the value as the key should be resolved by the type of the composite literal.
For large types containing arrays, the type information has a natural repetition that can be encoded to save space in the binary and in the memory representation of the type information.
For len(x) and cap(x) we need to know if x contains any function calls or receive operations.
For levels 2-3 we don't bother trying with lazy matches.
For line-based UI, Print writes to standard error.
For line-based UI, PrintErr writes to standard error.
For lldb, must say LC_VERSION_MIN_MACOSX or else it won't know that this Mach-O binary is from OS X (could be iOS or WatchOS instead).
For local operations, like Listen or SetDeadline, Addr is the address of the local endpoint being manipulated.
For local variables, the bitmap only covers the stkptrsize bytes in the frame where variables containing pointers live.
For many of these, you can see the default value of on your system by running 'go env NAME', where NAME is the name of the variable.
For maps tmp is just one word so it hardly matters.
For matches this long, we don't bother inserting each individual item into the table.
For more about build flags, see 'go help build'.
For more about calling between Go and C/C++, run 'go help c'.
For more about each tool command, see 'go tool command -h'.
For more about fix, see 'go doc cmd/fix'.
For more about gofmt, see 'go doc cmd/gofmt'.
For more about how 'go get' finds source code to download, see 'go help importpath'.
For more about specifying packages, see 'go help packages'.
For more about the build flags, see 'go help build'.
For more about vet, see 'go doc cmd/vet'.
For more about where packages and binaries are installed, run 'go help gopath'.
For more complex queries, access the map directly.
For more detail, run ``go help test'' and ``go help testflag''.
For more details see Hacker's Delight, Chapter 10, and http://ridiculousfish.com/blog/posts/labor-of-division-episode-i.html http://ridiculousfish.com/blog/posts/labor-of-division-episode-iii.html
For more information about build tags, see the description of build constraints in the documentation for the go/build package.
For more information about pprof, see http://code.google.com/p/google-perftools/.
For more information about the formats and the definition of the reference time, see the documentation for ANSIC and the other constants defined by this package.
For more information, see https://blog.golang.org/profiling-go-programs.
For more information, see https://golang.org/doc/asm.
For more information, see the discussion of the -printf flag.
For more on the actual algorithm, see Z.
For more than 8 characters section names, name contains a slash (/) that is followed by an ASCII representation of a decimal number that is an offset into the string table.
For more tolerant parsing, Scan will return a valid token if possible even if a syntax error was encountered.
For more usage examples, see the wiki page at https://golang.org/s/sqlwiki.
For most algorithms, the running time of every input will be between these two.
For most requests, fields other than Path and RawQuery will be empty.
For most uses, this is an opaque unit of work, but for estimation the definition is important.
For most values, width is the minimum number of runes to output, padding the formatted form with spaces if necessary.
For names not previously seen returns "(N) name", where N is a unique index.
For names previously seen returns "(N)" where N is the index returned the first time.
For names, find out whether they are integer constants.
For non-Go files, can stop here.
For non-Phi ops, memory args must be last, if present
For non-VLIW architectures, it will always be 0.
For non-empty inputs, primaries is guaranteed to be non-empty.
For non-interface types V, or if static is set, V implements T if all methods of T are present in V.
For non-trivial arrays, the program describes the full t.Width size.
For nonzero-sized structs which end in a zero-sized thing, we add an extra byte of padding to the type.
For normal code generation, stop there and leave the rest to cgen_append.
For normal packages the compiler doesn't even record the lower case functions in its symbol table, but some functions in runtime are hard-coded into the compiler.
For now approximate by saying that *Header is okay but Header is not.
For now assume all grouped imports are unsorted.
For now it generates a reasonable valid schedule using a priority queue.
For now just bound it a little and
For now just handle the common case of a single item.
For now just never return an error.
For now the key is converted to lower case for convenience.
For now this needs the RROTC instruction.
For now we just let it finish and write to the buffered channel.
For now we make the contents always escape to the heap.
For now we need to infer link-layer service capabilities from media types.
For now we use instPrefix but perhaps later we will return a specific error here.
For now we're lazy and just pick the minimum MAX_FRAME_SIZE that all peers must support (16KB).
For now, assume that the only instance of capital C is when used as the imported package identifier.
For now, different to keep bit-for-bit compatibility.
For now, exclude multiple declarations of functions - keep the one with documentation.
For now, having go run and having go build are the same.
For now, it handles only the trivial case in which a Value with one or fewer args is only used in a single Block, and not in a phi value.
For now, just discard all comments.
For now, only works on amd64 platforms.
For now, the format is chosen to be as simple as possible to read and write.
For now, the spec disallows these.
For now, there is only "go1".
For now, use existing limit so we pass all the tests unchanged.
For now, we assume that empty interface is OK but non-empty interfaces, with Stringer and Error handled above, are errors.
For now, we ignore this problem as remaining in strict SSA form isn't needed after regalloc.
For now, we just drop it and don't propagate desired registers back though phi nodes.
For one, by checking it, we would leak information about the validity of the encrypted pre-master secret.
For operations involving a remote network connection, like Dial, Read, or Write, Addr is the remote address of that connection.
For operations involving a remote network connection, like Dial, Read, or Write, Source is the corresponding local network address.
For operators, delimiters, and keywords the string is the actual token character sequence (e.g., for the token ADD, the string is "+").
For os.Rename to work reliably, must be in same directory as outfile.
For other nonce sizes, the counter is computed by passing it through the GHASH function.
For other threads we specify stack size in runtime explicitly (runtime knows whether cgo is enabled or not).
For other uses, create a new array with typArray instead.
For outgoing client requests, the context controls cancelation.
For package names containing those words, use test.test.exe instead of pkgname.test.exe.
For package runtime, copy some files into the work space.
For package runtime, this writes go_asm.h, which the assembly files will need.
For package-level objects, qualify the name.
For packages, the order of scanning is determined lexically in breadth-first order.
For pages that have never been allocated, h_spans entries are nil.
For parsing this time format, see ParseTime.
For performance reasons, this implementation performs little to no sanity checks about the arguments.
For performance we allocate these IDs densely starting at 1.
For plain files, remember if this directory contains any .go source files, but ignore them otherwise.
For playground programs, incrementing is fine.
For ppc64, we want to interleave the .got and .toc sections from input files.
For precise stacks, the garbage collector assumes results are always live, so zero them always.
For progressive JPEGs, these are the two more-or-less independent aspects of progression.
For purposes of counting, ignore the phi itself.
For qualified names, the returned package is nil (and not created if it doesn't exist yet) unless materializePkg is set (which creates an unnamed package with valid package path).
For random numbers suitable for security-sensitive work, see the crypto/rand package.
For reference only (do not delete).
For regular files, none will be set.
For release, make sure excluded things are excluded.
For returns an Importer for the given compiler and lookup interface, or nil.
For rmtemp run at atexit time on Windows.
For rounding modes ToNegativeInf and ToPositiveInf, rounding is affected by the sign of the value to be rounded.
For running built compiler
For running tests and subtests.
For scanning into *bool, the source may be true, false, 1, 0, or string inputs parseable by strconv.ParseBool.
For selector expressions, only inspect the left hand side.
For server requests Host specifies the host on which the URL is sought.
For server requests the Request Body is always non-nil but will return EOF immediately when no body is present.
For server requests the Trailer map initially contains only the trailer keys, with nil values.
For server requests the URL is parsed from the URI supplied on the Request-Line as stored in RequestURI.
For server requests, the HTTP server handles this automatically and this field is not needed by Handlers.
For server requests, this field is not applicable.
For shifts, AxB means the shifted value has A bits and the shift amount has B bits.
For short repetitions.
For simple uses, a Scanner may be more convenient.
For simplicity in setup, the connection is defined to understand these types a priori, as well as the basic gob types int, uint, etc.
For simplicity, only ASCII space does the job.
For small heaps, this overrides the usual GOGC*live set rule.
For some historical reason, it is used to specify "any available address" on some operations of IP node.
For some reason, WriteString returns an error: "write /net/tcp/39/listen: inappropriate use of fd" But without it, Reads on dead conns hang forever.
For some signals, we respect an inherited SIG_IGN handler rather than insist on installing our own default handler.
For spans not being initialized the the mark bits are repurposed as allocation bits when the span is swept.
For stdout/stderr, we should have crashed with a broken pipe error.
For storeconst ops, the AuxInt field encodes both the value to store and an address offset of the store.
For stream and datagram listeners, they will only require named sockets, so we can assume that it's just a request from stream or datagram listeners when laddr is not nil but raddr is nil.
For strings, byte slices and byte arrays, however, precision limits the length of the input to be formatted (not the size of the output), truncating if necessary.
For structs, fields (identified by name) that are in the source but absent from the receiving variable will be ignored.
For synchronous channels, both values are the same.
For testing behavior of go command when tools crash silently.
For testing purposes it pretends that all CPU hits in C code are in cpuHog.
For testing: clients can set this flag to force creation of IPv6 sockets to return EAFNOSUPPORT.
For tests the regular expression is split into smaller ones by top-level '/', where each must match the corresponding part of a test's identifier.
For tests, the text will be printed only if the test fails or the -test.v flag is set.
For the binary exponent formats, the mantissa is printed in normalized form:
For the compiler to recognize this pattern, the conversion must appear in the argument list:
For the concurrent garbage collector, the Go compiler implements updates to pointer-valued fields that may be in heap objects by emitting calls to write barriers.
For the declarations:
For the header file, remove the "lib" added by go/build, so we generate pkg.h rather than libpkg.h.
For the main bootstrap, building for host os/arch.
For the meaning of def and path, see check.typ, below.
For the most part, accessing and modifying stack barriers is synchronized around GC safe points.
For the most part, this package follows the syntax as specified by RFC 5322 and extended by RFC 6532.
For the p command, each file is prefixed by the name on a line by itself.
For the p, t, and x commands, listing no names on the command line causes the operation to apply to all files in the archive.
For the purpose of formatting, the width of the escaped text is always computed excluding the Escape characters.
For the purposes of this reader, semicolons are never necessary to understand the input and are treated as spaces.
For the recursive case, the path is the result of filepath.Join, which calls filepath.Clean.
For the sake of backtrace quality, we read in arguments as well.
For the sake of correctness, out arguments must be read.
For the same reason compiler does not race instrument it.
For the same reason, it is incorrect to call Run when using StdoutPipe.
For the same reason, it is incorrect to use Run when using StderrPipe.
For the synchronous signals, the Go runtime will install a signal handler.
For the t command, the listing includes additional file metadata.
For the type structures linked into the binary, the compiler provides a good hash of the string.
For the use of this package on Windows and Plan 9, see below.
For the x command, names are printed as files are extracted.
For the zero decimal, the mantissa length and exponent are 0.
For these, it must be greater than the stack size assumed by externalthreadhandler.
For this example we only have one.
For this reason, it is recommended that you do not uses these methods if it is important to receive a full packet.
For this to be worthwhile, the loop must have no calls in it.
For this, each G has a "stack barrier lock" (see gcLockStackBarriers, gcUnlockStackBarriers).
For this, gentraceback performs a special fix up if the traceback starts in the stack barrier function.
For those stack phis, make sure the spill of the second argument uses the phi's width (4 bytes), not its width (8 bytes).
For those tests, see transport_test.go (for HTTP/1) or x/net/http2/transport_test.go (for HTTP/2).
For those, the linker stores the build ID as non-instruction bytes at the very beginning of the text segment, which should appear near the beginning of the file.
For tools being invoked but also for os.ExpandEnv.
For unknown arguments the result is the zero value for the respective accessor type, except for Sign, where the result is 1.
For unknown reasons, if the addr16 prefix is repeated, libopcodes displays all but the last as addr32, even though the addressing form used in a memory reference is clearly still 16-bit.
For unrecognized or vendor-defined attributes, Class may be ClassUnknown.
For unsigned types, the result will be negative and thus "too large": We must limit the result precision to the type's precision.
For untyped values the conversion provides the type, per the spec: "A constant may be given a type explicitly by a constant declaration or conversion,...".
For usage information, please see: go help testflag go tool cover -help
For use by assembly and C files.
For use in earlier Go versions see ConfigureServer.
For use with pass.c::genasmsym
For values too small (too close to 0) to represent as float64, Float64Val silently underflows to 0.
For variables assigned to a variable in an outer scope or used as a return value, they store a flow(theSink, src) edge to a fake node 'the Sink'.
For various reasons, libopcodes emits no suffix for these instructions.
For vendored imports, it is the expanded form.
For very large files, just check that the size is correct.
For x.M with receiver (x) type T, the generated code looks like:
Force Ps currently in _Psyscall into _Pidle and hand them off to induce safe point function execution.
Force TLS root certs to be loaded (which might involve cgo), to make sure none of that potential C code leaks fds.
Force a PAX long linkname to be written
Force a PAX long name to be written
Force a PAX long name to be written.
Force a stack walk, which will check the consistency of stack barriers.
Force another conversion, so that the previous conversion doesn't get optimized away into constructing the returned array.
Force benchmarks to run in serial.
Force child to exit cleanly.
Force chunking if we saw a response trailer.
Force concurrent GC a few times.
Force cum sorting for graph output, to preserve connectivity.
Force external linking for PIE executables, as internal linking does not support TLS_IE.
Force external linking for android.
Force external linking for msan.
Force future requests to start the DNS lookup again rather than waiting for the current lookup to complete.
Force global symbols to be exported for dlopen, etc.
Force network usage, to verify the epoll (or whatever) fd doesn't leak to the child,
Force package os to default to the old algorithm using ..
Force right-alignment of cell content.
Force sane arguments.
Force the buffer to flush here so that external tools will see a complete file.
Force the control value to be scheduled at the end, unless it is a phi value (which must be first).
Force the linkedit section to end on a 16-byte boundary.
Force the number of open connections to 0 so we can get an accurate count for the test
Force the printing of results to happen in order, one at a time.
Force the runtime to update the object and byte counts.
Force the runtime's poller to immediately give up waiting for writability.
Force type conversion from *struct to the func type.
Force-close any idle connections (those between requests) and new connections (those which connected but never sent a request).
ForeachSetting runs fn for each setting.
Forget tells the singleflight to forget about a key.
Fork can hang if preempted with signals frequently enough (see issue 5517).
Fork succeeded, now in child.
Fork, dup fd onto 0..len(fd), and exec(argv0, argvv, envv) in child.
Fork, exec, wait, etc.
ForkLock should be write locked before calling, so that no new fds would be created while the fd list is being read.
Form contains the parsed form data, including both the URL field's query parameters and the POST or PUT form data.
Form is a parsed multipart form.
FormDataContentType returns the Content-Type for an HTTP multipart/form-data with this Writer's Boundary.
FormFile calls ParseMultipartForm and ParseForm if necessary.
FormFile returns the first file for the provided form key.
FormName returns the name parameter if p has a Content-Disposition of type "form-data".
FormValue calls ParseMultipartForm and ParseForm if necessary and ignores any errors returned by these functions.
FormValue returns the first value for the named component of the query.
Format arguments are assembled within this method so that any changes in mutable values are taken into account.
Format as whole milliseconds.
Format implements fmt.Formatter.
Format in tab-separated columns with a tab stop of 8.
Format is more complex than simple flags and a verb or is malformed.
Format number, reserving space for leading + sign if needed.
Format registration is typically done by an init function in the codec- specific package.
Format registration is typically done by an init function in the codec-specific package.
Format right-aligned in space-separated columns of minimal width 5 and at least one blank of padding (so wider column entries do not touch each other).
Format the Unicode code point u as a hexadecimal number.
Format the binary expression: decide the cutoff and then format.
Format two digits of precision, with at most three decimal places.
Format was used during interim development between Go 1.0 and Go 1.1.
FormatBool returns "true" or "false" according to the value of b
FormatBool, FormatFloat, FormatInt, and FormatUint convert values to strings:
FormatError is returned by some operations if the data does not have the correct format for an object file.
FormatError is unused.
FormatFloat converts the floating-point number f to a string, according to the format fmt and precision prec.
FormatMediaType serializes mediatype t and the parameters param as a media type conforming to RFC 2045 and RFC 2616.
FormatMessage is deprecated (msgsrc should be uintptr, not uint32, but can not be changed due to the Go 1 compatibility guarantee).
Formats is the list of registered formats.
Formatted I/O: few dependencies (L1) but we must add reflect.
Formatter is the interface implemented by values with a custom formatter.
Formatter provides fine control of formatting.
Formatting numbers is easier right-to-left.
Formatting of reflection types and values for debugging.
Former index out of range panic.
Fortunately we have the type information.
Fortunately, this situation can only happen for dead code loops.
Fortunately, we have the freedom to send these keys either way.
ForwardType contains Type fields specific to forward types.
ForwardType returns t's extra forward-type-specific fields.
Forwarding functions so that clients need only import this package to reach the general escaping functions of text/template.
Found a match and not paying attention to where it is, so any match will do.
Found a nested CDATA directive end.
Found a waiting receiver.
Found a waiting sender.
Found all of a in a backwards walk.
Found an actual function.
Found an embedded field at target depth.
Found an interesting instruction, record the corresponding liveness information.
Found first entry beyond lineno.
Found focused location.
Found ignored location.
Found initialization of value we're checking for nil.
Found matching entry to prune.
Found the object header, just doesn't have a build id line.
Four or fewer elements of a basic type.
Four spaces before the tab triggers good alignment for both 4- and 8-space tab stops.
Four values describe any of the types we are looking for: type kind, one or two subtypes, and an extra integer.
Fowards the Debug_checknil flag from gc
Fprint "pretty-prints" an AST node to output for a given configuration cfg.
Fprint "pretty-prints" an AST node to output.
Fprint prints the (sub-)tree starting at AST node x to w.
Fprintf formats according to a format specifier and writes to w.
Fprintln formats using the default formats for its operands and writes to w.
Fractional second omitted.
Fractional seconds are handled implicitly by Parse.
Fractional seconds can be printed by adding a run of 0s or 9s after a decimal point in the seconds value in the layout string.
Frame is a frame in stack traces.
Frame is the information returned by Frames for each call frame.
Frame-specific FrameHeader flag bits.
Frames are only valid until the next call to Framer.ReadFrame.
Frames may be used to get function/file/line information for a slice of PC values returned by Callers.
Frames to return for subsequent calls to the Next method.
Free large stack spans.
Free old main bucket array.
Free spans may have other garbage in their middles, so we have to check for that.
Free the given defer.
Free the old cached mark array if necessary.
Free the span back into the heap.
Free the stack immediately if we're sweeping.
Free whole stack - it will get reallocated if G is used again.
FreeBSD 10 and beyond have a restructured mbuf packet header view.
FreeBSD 8 and below don't support unixpacket
FreeBSD has broken VFP support.
FreeBSD stores the backlog in a uint16, as does Linux.
FreeBSD system calls.
FreeBSD uses 0 as the "until EOF" value.
FreeBSD's umtx_op syscall is effectively the same as Linux's futex, and thus the code is largely similar.
FreeOSMemory forces a garbage collection followed by an attempt to return as much memory to the operating system as possible.
Freeing a small object proceeds up the same hierarchy:
Frees a control flow graph (a slice of *BasicBlocks) and all of its leaf data structures.
Freezetheworld sets stopwait but does not retake P's.
Frexp breaks f into a normalized fraction and an integral power of two.
Frexp10 is an analogue of math.Frexp for decimal powers.
From /usr/include/sys/syslog.h.
From Android release M (Marshmallow), hard linking files is blocked and an attempt to call link() on a file will return EACCES.
From Engineering Security, Peter Gutmann: A European government CA marked its signing certificates as being valid for encryption only, but no-one noticed.
From NetBSD's _lwp_unpark(2) manual: "If the target LWP is not currently waiting, it will return immediately upon the next call to _lwp_park()."
From OpenBSD's sys/time.h
From block starting with unexported constant.
From block starting with unexported variable.
From gofrontend/go/export.h Note that these values are negative in the gofrontend and have been made positive in the gccgoimporter.
From golang.org/issue/3865
From graphics control.
From here on: If the cookie is valid, it is a domain cookie (with the one exception of a public suffix below).
From http://code.google.com/p/doctype/wiki/ArticleUtf7
From http://fr.wikipedia.org/wiki/Quoted-Printable
From https://golang.org/issue/4411
From https://golang.org/issue/4454 , "client fails to handle requests with no body and chunked encoding"
From image descriptor.
From issue 14306, make sure we have write barriers in a type switch where the assigned variable escapes.
From reflect test: The X in S11.S6 and S12.S6 annihilate, but they also block the X in S13.S8.S9.
From reflect test: The X in S6 and S7 annihilate, but they also block the X in S8.S9.
From the time the second goroutine is created, at least one of c1 and c2 is always ready for receiving, so the select in the second goroutine must always receive from one or the other.
From this difference, bit 11 indicates extended register, bits 8-10 select the conversion mode.
From3Offset returns From3.Offset, or 0 when From3 is nil.
From3Type returns From3.Type, or TYPE_NONE when From3 is nil.
From: http://stackoverflow.com/a/13340826
FromSlash returns the result of replacing each slash ('/') character in path with a separator character.
Front end handled 32-bit division.
Front end must reverse comparison or use OLT and OEQ together.
Front returns the first element of list l or nil.
Fscan scans text read from r, storing successive space-separated values into successive arguments.
Fscanf scans text read from r, storing successive space-separated values into successive arguments as determined by the format.
Fscanln is similar to Fscan, but stops scanning at a newline and after the final item there must be a newline or EOF.
Full character classes
FullName returns the package- or receiver-type-qualified name of function or method obj.
FullPath retrieves the full path of the specified file.
FullRune reports whether the bytes in p begin with a full UTF-8 encoding of a rune.
FullRuneInString is like FullRune but its input is a string.
Fully consume the body, which will also lead to us reading the trailer headers after the body, if present.
Fully consume the request before checking the Write log vs.
Fun takes the name of an entry bloc and a series of Bloc calls, and returns a fun containing the composed Func.
Func contains additional per-symbol information specific to functions.
Func holds Node fields used only with function-like nodes.
Func implements Var by calling the function and formatting the returned value using JSON.
Func is the documentation for a func declaration.
Func, Map, Slice, Invalid
FuncArg returns a Go type with the same memory layout as dtype when used as the type of a C function argument.
FuncArgs returns the channel type for TFUNCARGS type t.
FuncExtent describes a function's extent in the source by file and position.
FuncForPC returns a *Func describing the function that contains the given program counter address, or else nil.
FuncMap has the same base type as FuncMap in "text/template", copied here so clients need not import "text/template".
FuncMap is the type of the map defining the mapping from names to functions.
FuncOf does not share the common lookupCache since cacheKey is not sufficient to represent functions unambiguously.
FuncOf returns the function type with the given argument and result types.
FuncType contains Type fields specific to func types.
FuncType returns t's extra func-specific fields.
FuncType returns the Go type analogous to dtype.
FuncType.Params must be non-nil
FuncVisitor implements the visitor that builds the function position list for a file.
Funcs adds the elements of the argument map to the template's function map.
Funcs is a list of functions in the Obj.
Function (not method)
Function call builtin.
Function calls are evaluated left-to-right.
Function calls turned into compiler intrinsics.
Function can call reflect.Type.Method or reflect.Type.MethodByName.
Function codes for the cipher message family of instructions.
Function corresponds to Profile.Function
Function invocation call returns the result of evaluating the first argument as a function.
Function is being used in an expression, to e.g. pass around a C function pointer.
Function name, file name, and line number for this call frame.
Function not implemented
Function outputs are numbered starting at one.
Function to be called by windows CreateThread to start new os thread.
FunctionName Signature
Functions During execution functions are found in two function maps: first in the template, then in the global function map.
Functions and channels will not be sent in a gob.
Functions and function names are described below.
Functions and methods to parse templates.
Functions implemented in p256_asm_amd64.s Montgomery multiplication modulo P256
Functions in this package accept either 4-byte (IPv4) or 16-byte (IPv6) slices as input.
Functions in this package replace any occurrences of the slash ('/') character with os.PathSeparator when returning paths unless otherwise specified.
Functions larger than this limit will not have flow graphs and consequently will not be optimized.
Functions like chansend and mapassign don't escape the referent, but may escape anything the referent points to (they do shallow copies of the referent).
Functions may be called concurrently from different goroutines, starting after the call to Transport.RoundTrip and ending either when RoundTrip returns an error, or when the Response.Body is closed.
Functions of the form func BenchmarkXxx(*testing.B) are considered benchmarks, and are executed by go test when the -test.bench flag is provided.
Functions of the form func BenchmarkXxx(*testing.B) are considered benchmarks, and are executed by the "go test" command when its -bench flag is provided.
Functions should return EOF only to signal a graceful end of input.
Functions starting with "Is" can be used to inspect which table of range a rune belongs to.
Functions that can be inlined use numbered parameters so we can distingish them from other names in their context after inlining (i.e., the parameter numbering is a form of parameter rewriting).
Functions that need frames bigger than this use an extra instruction to do the stack split check, to avoid overflow in case SP - framesize wraps below zero.
Functions that the inliner exported incorrectly.
Functions that wish to store values in Context typically allocate a key in a global variable then use that key as the argument to context.WithValue and Context.Value.
Functions with large frames don't bother with the check and always call morestack.
Functions with multiple return values are mapped to functions returning a struct.
Functions with write barriers have depth 0.
Further, the two programs are the same binary, just checking their environment to figure out what mode to run in.
Further, we don't send an automatic Content-Length if they set a Transfer-Encoding, because they're generally incompatible.
Furthermore if either white object dies before it is reached by the GC then the object can be collected during this GC cycle instead of waiting for the next cycle.
Furthermore, it takes at most one input, so moving it will not increase the number of live values anywhere.
Furthermore, the PNG spec section 11.2.2 says that zero is invalid.
Futex is only available on DragonFly BSD, FreeBSD and Linux.
Futex-based impl treats it as uint32 key, while sema-based impl as M* waitm.
Futexsleep is allowed to wake up spuriously.
Futexwakeup wakes up threads sleeping on addr.
Future calls to Do for this key will call the function rather than waiting for an earlier call to complete.
Future explorations of that path will choose successive values for the result.
Fuzz crash, originally reported at https://github.com/bradfitz/http2/issues/56
G is the graph of nodes n
G on which the event happened
GC background workers may be non-preemptible, so we may deadlock if we try to scan them during a concurrent phase.
GC does background sweeping, see description below.
GC frees are accounted in prev stats.
GC is done, so ignore any remaining debt.
GC is set up for mark 2.
GC mark termination: allocate black, P's help GC, write barrier ENABLED
GC marking roots and workbufs: allocate black, write barrier ENABLED
GC preempts P's one-by-one taking partial wbufs and marks all unmarked yet reachable objects.
GC programs are never much larger and often more compact.
GC programs are only used for large allocations.
GC runs a garbage collection and blocks the caller until the garbage collection is complete.
GC scans all goroutine stacks, mark and enqueues all encountered pointers (marking avoids most duplicate enqueuing but races may produce benign duplication).
GC start/done sequencer
GC uses this as a "ragged barrier."
GCC won't raise an error when using pointers to such unknown types.
GCCGO_ERROR "block starts here"
GCCGO_ERROR "defined here"
GCCGO_ERROR "duplicate field name .x."
GCCGO_ERROR "duplicate"
GCCGO_ERROR "expected declaration"
GCCGO_ERROR "incompatible"
GCCGO_ERROR "interface"
GCCGO_ERROR "invalid recursive type"
GCCGO_ERROR "no fields or methods"
GCCGO_ERROR "not enough arguments"
GCCGO_ERROR "previous"
GCCGO_ERROR "undefined identifier"
GCCGO_ERROR "undefined"
GCM has two modes of operation with respect to the initial counter state: a "fast path" for 96-bit (12-byte) nonces, and a "slow path" for nonces of other lengths.
GCStats collect information about recent garbage collections.
GC_ERROR "ambiguous selector t.x"
GC_ERROR "constant multiplication overflow"
GC_ERROR "constant shift overflow"
GC_ERROR "duplicate field x"
GC_ERROR "type .* too large"
GCscan to GCmark In GCmark, work buffers are drained until there are no more pointers to scan.
GDB doesn't like DW_FORM_addr for DW_AT_location, so emit a location expression that evals to a const.
GDesc contains statistics about execution of a single goroutine.
GENERATED BY go run makeisprint.go -output isprint.go
GENERATED BY mkalldocs.sh.
GET request with no body (the normal case)
GET with full https URL:
GIF images are restricted to a 256-color palette and the conversion to GIF loses significant image quality.
GIF represents the possibly multiple images stored in a GIF file.
GMT is special because it can have an hour offset.
GNU ld always add VirtualAddress of the .text section to the relocated address, compensate that.
GNU libopcodes allows the 66 to match.
GNU object attributes
GNU prelink library list
GNU sparse format 0.0 special key.
GNU version definition section
GNU version needs section
GNU version symbol table
GNUSyntax returns the GNU assembler syntax for the instruction, as defined by GNU binutils.
GOARCH The architecture, or processor, for which to compile code.
GOARCH is the running program's architecture target: 386, amd64, arm, or s390x.
GOARCH, GOOS, and GOROOT are recorded at compile time and made available by constants or functions in this package, but they do not influence the execution of the run-time system.
GOBIN The directory where 'go install' will install a command.
GOBIN must be an absolute path.
GODEBUG spoils program output, GOMAXPROCS makes it flaky.
GOIOS_TEAM_ID: The team id that owns the app id prefix.
GOMAXPROCS sets the maximum number of CPUs that can be executing simultaneously and returns the previous setting.
GOOS The operating system for which to compile code.
GOOS is the running program's operating system target: one of darwin, freebsd, linux, and so on.
GOPATH See 'go help gopath'.
GOPATH environment variable The Go path is used to resolve import statements.
GOPATH must be set to get, build and install packages outside the standard Go tree.
GORACE Options for the race detector.
GOROOT The root of the go tree.
GOROOT returns the root of the Go tree.
GOT entry containing TLS index
GOT entry containing TLS offset
GOT entry for negative static TLS block
GOT entry of -ve static TLS offset
GOT slot for a symbol in -dynlink mode
GOTRACEBACK is only about crash dumps.
GO_ARGS indicates that the Go prototype for this assembly function defines the pointer map for the function's arguments.
GO_ARGS is inserted implicitly by the linker for any function that also has a Go prototype and therefore is usually not necessary to write explicitly.
GO_ARGS should be the first instruction in a function that uses it.
GO_RESULTS_INITIALIZED indicates that the assembly function has initialized the stack space for its results and that those results should be considered live for the remainder of the function.
GP relative 16 bit w/optimization
GP-relative reference
GRND_NONBLOCK means return EAGAIN rather than blocking.
GRND_RANDOM means use the /dev/random pool instead of /dev/urandom.
GS segment override Branch prediction.
GZIP (RFC 1952) specifies that strings are NUL-terminated ISO 8859-1 (Latin-1).
GZIP strings are NUL-terminated.
Gamma function computed by Stirling's formula.
Gamma returns the Gamma function of x.
Garbage collection benchmark: parse Go packages repeatedly.
Garbage collection is the big problem.
Garbage collector (GC).
Garbage collector isn't running (since we are), so okay to clear syscallsp.
Garbage collector liveness bitmap generation.
Garbage collector phase.
Garbage collector work pool abstraction.
Garbage collector: finalizers and block profiling.
Garbage collector: marking and scanning
Garbage collector: stack barriers
Garbage collector: sweeping
Garbage collector: type and heap bitmaps.
Garbage collector: write barriers.
Gather CgoLDFLAGS, but not from standard packages.
Gather all cached GC work.
Gather files that are sources for this target.
Gather samples for this symbol.
Gathers output when testing.
Gcc only generates DWARF info for symbols in the object file, so it is not enough to print the preamble and hope the symbols we care about will be there.
Gcc output starts with the preamble.
Gcc wrapper unpacks the C argument struct and calls the actual C function.
Gccgo chose the wrong embedded method when the same type appeared at different levels and the correct choice was not the first appearance of the type in a depth-first search.
Gccgo had a bug comparing a struct or array value with an interface values, when the struct or array was not addressable.
Gccgo incorrectly executed functions multiple times when they appeared in a composite literal that required a conversion between different interface types.
Gccgo mishandled an import of a forward declared type.
Gccgo used to crash compiling this.
Gccgo used to give an incorrect error bug495.go:16:2: error: missing statement after label
Gccgo used to incorrectly give an error when compiling this.
Gccgo used to miscompile passing a global variable with a zero-sized type to a function.
Gccgo was not consistent in deciding how to compare a struct type for equality, leading to an undefined symbol at link time.
GcdInt sets d to the greatest common divisor of a and b, which must be positive numbers.
General algorithm: find name in parent and then find name of parent.
General case, with no function calls left as arguments.
General environment variables.
General form (R)(R*scale).
General purpose registers (GPRs).
General purpose registers, kept in the low bits of Prog.Reg.
General syntax for any server.
GeneralString is specified in ISO-2022/ECMA-35, A brief review suggests that it includes structures that allow the encoding to change midstring and such.
Generally Get, Post, or PostForm will be used instead of Do.
Generally one should combine the -update flag with -test.run to updated a specific test.
Generate 1,000 MB of garbage, only retaining 1 MB total.
Generate a FwdRef for the variable and return that.
Generate a closure that calls out to the engine for the nested type.
Generate a distribution of (sign, mantissa, exp) values broader than the float32 range, and check Rat.Float32() always picks the closest float32 approximation.
Generate a distribution of (sign, mantissa, exp) values broader than the float64 range, and check Rat.Float64() always picks the closest float64 approximation.
Generate a helper function to compute the hash of a value of type t.
Generate a loop clearing 256 bytes per iteration using XCs.
Generate a loop of large clears.
Generate a random JSON object.
Generate a routine per op.
Generate a sorted slice.
Generate a tree for graphical output if requested.
Generate a wrapper function to convert from a receiver of type T to a receiver of type U.
Generate addresses of local declarations
Generate an octet string PS consisting of emLen - sLen - hLen - 2 zero octets.
Generate block rewrite function.
Generate block which zeros the delta variable.
Generate codegen and codegenFrequencies, which indicates how to encode the literalEncoding and the offsetEncoding.
Generate coverage-annotated source.
Generate each test as a separate function to avoid hitting the gc optimizer with one enormous function.
Generate generates a report as directed by the Report.
Generate instructions to clear the remaining memory.
Generate layouts based on RFC 5322, section 3.3.
Generate many test cases, compute correct answer using shift and subtract, and then compare against results from division and modulus operators.
Generate nil pointer.
Generate output source file from a source set src.
Generate primes up to 100 using channels, checking the results.
Generate processes packages in the order given on the command line, one at a time.
Generate random inputs for tests and benchmarks
Generate remaining clear instructions without a loop.
Generate report in DOT format and postprocess with dot
Generate returns a random instance of the type on which it is a method using the size as a size hint.
Generate returns a string of at most n words generated from Chain.
Generate short opcodes when possible, long ones when necessary.
Generate some garbage.
Generate test of 64-bit arithmetic.
Generate test of bit rotations.
Generate test of channel operations and simple selects.
Generate test of index and slice bounds checks.
Generate test of shift and rotate by constants.
Generate test of strength reduction for multiplications with contstants.
Generate tests for left/right and right/left.
Generate the following code assuming that indexes are in bounds.
Generate the glink resolver stub if necessary and return the .glink section
Generate the method body, so that compiled code can refer to it.
Generate the non-addressable child first.
Generate with: go run gen.go -full -output md5block.go
GenerateKey generates a public and private key pair.
GenerateKey generates an RSA keypair of the given bit size using the random source random (for example, crypto/rand.Reader).
GenerateKey returns a public/private key pair.
GenerateParameters puts a random, valid set of DSA parameters into params.
Generated using: openssl ecparam -genkey -name secp384r1 -outform PEM
Generates a HuffmanCode corresponding to the fixed literal table
Generates live pointer value maps for arguments and local variables.
Generates stub functions as needed.
Generating definitions pulled from header files, to be checked into Go repositories.
Generating random text: a Markov chain algorithm Based on the program presented in the "Design and Implementation" chapter of The Practice of Programming (Kernighan and Pike, Addison-Wesley 1999).
Generic arch information
Generic linking code.
Generic opcodes typically specify a width.
Generic recursive walks should follow these fields.
Generic split: splits after each instance of sep, including sepSave bytes of sep in the subarrays.
Generic split: splits after each instance of sep, including sepSave bytes of sep in the subslices.
Generic struct printer.
Georgian is the set of Unicode characters in script Georgian.
Get Type referred to by Entry's AttrType field.
Get a full work buffer off the work.full list.
Get a list of all sysctl nodes below the given MIB by performing a sysctl for the given MIB with CTL_QUERY appended.
Get a new cached span from the central lists.
Get a record from the buffer.
Get a slice pointing to the last byte of the good page.
Get also accepts build flags to control the installation.
Get client key exchange
Get efficient byte at a time reader.
Get element of array, growing if necessary.
Get function pointer, type.
Get g from local runnable queue.
Get gets the first value associated with the given key.
Get interface descriptor word.
Get is a convenience method.
Get is a wrapper around DefaultClient.Get.
Get issues a GET to the specified URL.
Get line table from d.
Get line table information from cu.
Get local and peer addr out of AcceptEx buffer.
Get loop nest so that spills in inner loops can be tracked.
Get map to full point with nan keys.
Get max(log2(q) / 2, 256) bits of entropy from rand.
Get may choose to ignore the pool and treat it as empty.
Get name space name: name with a : stuck in the middle.
Get never checks out or updates code stored in vendor directories.
Get next bit - fast path.
Get next bit - slow path.
Get number of entries.
Get one item from each of 2 demand channels
Get one item from each of n demand channels
Get one rat from each of 2 demand channels
Get one rat from each of n demand channels
Get previous value with the same hash.
Get retrieves a named exported variable.
Get returns the ClientSessionState value associated with a given key.
Get returns the value associated with key in the tag string.
Get rid of "Local" events, they are intended merely for ordering.
Get rid of dead edges from live code.
Get rid of edges from dead to live code.
Get rid of the pointer in the rhs
Get searches for a ClientSessionState associated with the given key.
Get second connection data.
Get selects an arbitrary item from the Pool, removes it from the Pool, and returns it to the caller.
Get the cached or newly-created connection to either the host (for http or https), the http proxy, or the http proxy pre-CONNECTed to https server.
Get the function assembly.
Get the function's package.
Get the line table for the first CU.
Get the number of literals for each bit count
Get the real size of the file.
Get the return type of the wrapper function compiled by gcc.
GetBinaryValue retrieves the binary value for the specified value name associated with an open key k.
GetCertificate returns a Certificate based on the given ClientHelloInfo.
GetConn is called before a connection is created or retrieved from an idle pool.
GetConn is called even if there's already an idle cached connection available.
GetEntropy calls the OpenBSD getentropy system call.
GetIntegerValue retrieves the integer value for the specified value name associated with an open key k.
GetLoweredClosurePtr should only appear in the entry block where there are no phi functions, so there is no conflict or ambiguity here.
GetMUIStringValue retrieves the localized string value for the specified value name associated with an open key k.
GetProtoByName return value is stored in thread local storage.
GetRandom calls the Linux getrandom system call.
GetStringValue retrieves the string value for the specified value name associated with an open key k.
GetTokenPrimaryGroup retrieves access token t primary group information.
GetTokenUser retrieves access token t user account information.
GetUserProfileDirectory retrieves path to the root directory of the access token t user's profile.
GetValue is a low level function.
GetValue retrieves the type and data for the specified value associated with an open key k.
Getcwd returns the number of bytes written to buf, including the NUL.
Getcwd will return an error if it failed for any reason.
Getegid returns the numeric effective group id of the caller.
Getenv retrieves the value of the environment variable named by the key.
Geteuid returns the numeric effective user id of the caller.
Getgid returns the numeric group id of the caller.
Getgroups returns a list of the numeric ids of groups that the caller belongs to.
Getpagesize returns the underlying system's memory page size.
Getpid returns the process id of the caller.
Getppid returns the process id of the caller's parent.
Gets a span that has a free object in it and assigns it to be the cached span for the given sizeclass.
GetsockoptInt wraps syscall.GetsockoptInt.
Getter is an interface that allows the contents of a Value to be retrieved.
Getwd returns a rooted path name corresponding to the current directory.
GidMappingsEnableSetgroups enabling setgroups syscall.
Ginsboolval inserts instructions to convert the result of a just-completed comparison to a boolean value.
Ginscmp generates code comparing n1 to n2 and jumping away if op is satisfied.
Give GC some time to install stack barriers in the G.
Give a negative width to avoid zero-padding.
Give a nice message if there is no tool with that name.
Give goroutines about to exit a chance to exit.
Give it a name so we can assign to it during return.
Give it awhile to settle.
Give it five seconds before resorting to Kill.
Give it the real sequence number and time stamp.
Give race detector a chance to fail the program.
Give that program a little time to open the file before we remove it.
Give the GC time to install stack barriers.
Give the channel a 1-element time buffer.
Give the program a chance to enter the sleep function.
Give the sender time to actually block.
Give them a chance to exit by sleeping.
Give them first chance to be removed.
Give up and use a truncated trace if 64 MB is not enough.
Give up if the line exceeds maxLineLength.
Give up on static analysis, mark all exported methods of all reachable types as reachable.
Given "a `name` to show" it returns ("name", "a name to show").
Given "hello", the first match should win.
Given a Pos value p for a specific file set fset, the corresponding Position value is obtained by calling fset.Position(p).
Given a byte slice and an offset into the array, it will try to parse a suitable ASN.1 value out and store it in the given Value.
Given a function gen that generates an output using choose and maybe, code can generate all possible outputs using
Given a reflected Go type, getUniversalType returns the default tag number and expected compound flag.
Given a tag string with the format specified in the package comment, parseFieldParameters will parse it into a fieldParameters structure, ignoring unknown parts of the string.
Given funarg struct list, return list of ODCLFIELD Node fn args.
Given no arguments, that is, when run as go doc it prints the package documentation for the package in the current directory.
Given that input, ReadMIMEHeader returns the map:
Given the name for a compound type, returns the name we should use for the parts of that compound type.
Given the resulting key, a symmetric scheme can be used to decrypt a larger ciphertext.
Given x, find r and integer k such that
Glagolitic is the set of Unicode characters in script Glagolitic.
Glibc instead only uses CommonPrefixLen for IPv4 when the source and destination addresses are on the same subnet, but that requires extra work to find the netmask for our source addresses.
Glob ignores file system errors such as I/O errors reading directories.
Glob returns the names of all files matching pattern or nil if there is no matching file.
Global build parameters (used during package load)
Global cache of dead G's.
Global initializers might be linker-allocated.
Global lock to ensure only one benchmark runs at a time.
Global pool of large stack spans.
Global pool of spans that have free stacks.
Global runnable queue.
Gloss over this by reading headers until we encounter a bad one, and then only report a ErrFormat or UnexpectedEOF if the file count modulo 65536 is incorrect.
Glyph masks are typically mostly zero, so we only set a quarter of mask1's pixels.
Go 1.1 accepts all six.
Go 1.2 and later use a simpler format, documented at golang.org/s/go12symtab.
Go 1.2 binaries have the file information elsewhere.
Go 1.2 line number table
Go 1.2 symbol table format.
Go 1.5 adds Connection: close header if the client expect continue but not entire request body is consumed.
Go 1.5 and earlier got this wrong, writing an invalid zip file.
Go 1.5 and earlier skipped, but that behavior means people miss serious mistakes.
Go 1.5 introduced the RawPath field to hold the encoded form of Path.
Go 1.7 traces embed symbol info and does not require the binary.
Go assembler has swapped operands for UCOMISx relative to CMP, must account for that right here.
Go code cannot refer to zero-sized fields that occur at the end of non-empty C structs.
Go code may not store a Go pointer in C memory.
Go code may pass a Go pointer to C provided the Go memory to which it points does not contain any Go pointers.
Go code would be OK with 64k stacks, but we need larger stacks for cgo.
Go file interface forces us to know whether name is a file or directory.
Go generate is never run automatically by go build, go get, go test, and so on.
Go generate scans the file for directives, which are lines of the form, go:generate command argument...
Go interface to profile data.
Go invokes the function asynchronously.
Go is a tool for managing Go source code.
Go liberally interprets RFC 1952 section 2.2 to mean that a gzip file consist of zero or more members.
Go library (package).
Go names for Windows errors.
Go processes use equivalent threads that all do a mix of GUI, IO, computations, etc.
Go programs routinely run with a limited stack, and therefore set up an alternate signal stack.
Go programs that use cgo or SWIG In a Go program that includes non-Go code, typically C/C++ code accessed using cgo or SWIG, Go's startup code normally runs first.
Go root or Go path dir containing this package
Go runtime uses different Windows timers for time.Now and sleeping.
Go solves this by simply enabling write barriers globally during the concurrent scan phase.
Go source files by filename
Go spec: A short variable declaration may redeclare variables provided they were originally declared in the same block with the same type, and at least one of the non-blank variables is new.
Go spec: The scope of a constant or variable identifier declared inside a function begins at the end of the ConstSpec or VarSpec and ends at the end of the innermost containing block.
Go spec: The scope of a label is the body of the function in which it is declared and excludes the body of any nested function.
Go spec: The scope of a type identifier declared inside a function begins at the identifier in the TypeSpec and ends at the end of the innermost containing block.
Go spec: The scope of an identifier denoting a constant, type, variable, or function (but not method) declared at top level (outside any function) is the package block.
Go spec: The scope of an identifier denoting a function parameter or result variable is the function body.
Go structs cannot embed fields with C types.
Go symbols have dot in the name.
Go through the local list and ready all waiters.
Go to sleep until woken by gcContoller.findRunnable.
Go type for variable.
Go up to 60 to be large enough for 32bit and 64bit platforms.
Go uses SetEnvironmentVariable on windows.
Go variable initialization happens late during runtime startup.
Go will only handle some exceptions.
Go's Plan 9 net package isn't great at unblocking reads when their underlying TCP connections are closed.
Go-specific type attributes.
GoF calls crosscall2(_cgoexp_GoF, frame, framesize).
GoFiles+CgoFiles+TestGoFiles+XTestGoFiles files, absolute paths
GoStringer is implemented by any value that has a GoString method, which defines the Go syntax for that value.
GoSyntax returns the Go assembler syntax for the instruction.
GoSysExit has to happen when we have a P, but before GoStart.
GoToolPath reports the path to the Go tool.
GoWhitespace is the default value for the Scanner's Whitespace field.
Gob can decode a value of any type implementing the GobDecoder or encoding.BinaryUnmarshaler interfaces by calling the corresponding method, again in that order of preference.
Gob can encode a value of any type implementing the GobEncoder or encoding.BinaryMarshaler interfaces by calling the corresponding method, in that order of preference.
Gob couldn't encode the header.
Gob depends on being able to take the address of zeroed Values it creates, so use this wrapper instead of the standard reflect.Zero.
GobDecode implements the gob.GobDecoder interface.
GobDecode overwrites the receiver, which must be a pointer, with the value represented by the byte slice, which was written by GobEncode, usually for the same concrete type.
GobDecoder is the interface describing data that provides its own routine for decoding transmitted values sent by a GobEncoder.
GobEncode implements the gob.GobEncoder interface.
GobEncode returns a byte slice representing the encoding of the receiver for transmission to a GobDecoder, usually of the same concrete type.
GobEncode/Decode should work even if the value is more indirect than the receiver.
GobEncoder is the interface describing data that provides its own representation for encoding values for transmission to a GobDecoder.
GobEncoder or GobDecoder
GobEncoder to non-decoder: error
GobEncoder type (something that implements the GobEncoder interface)
GobEncoderValue: uint(n) byte*n
GobStream: DelimitedMessage* (until EOF)
Gobs can encode nil interface values but not typed interface values holding nil pointers, since nil pointers point to no value.
Godoc displays the body of ExampleXXX to demonstrate the use of the function, constant, or variable XXX.
Godoc uses the comments in package time, not these.
Goexit runs all deferred calls before terminating the goroutine.
Goexit terminates the goroutine that calls it.
Gofmt formats Go programs.
Gofmt has also indented the function body one level.
Going to save the file.
Good argument reorderings.
Good enough for a test.
Good enough for test code.
Good enough in practice.
Good for testing readahead.
Goroutine pointers are also kept in non-GC-visible places like TLS, so I can't see them ever moving.
Goroutine preemption request.
Goroutine scheduler The scheduler's job is to distribute ready-to-run goroutines over worker threads.
Goroutine structs are published in the allg list and never freed.
Goroutine-related profiles.
GoroutineProfile returns n, the number of records in the active goroutine stack profile.
GoroutineProfile used to use the wrong starting sp for goroutines coming out of system calls, causing possible crashes.
GoroutineStats generates statistics for all goroutines in the trace.
Gosched continuation on g0.
Got 100 followed by 200, entire body is sent.
Got100Continue is called if the server replies with a "100 Continue" response.
GotConn is called after a successful connection is obtained.
GotConnInfo is the argument to the ClientTrace.GotConn function and contains information about the obtained connection.
GotFirstResponseByte is called when the first byte of the response headers is available.
Gothic is the set of Unicode characters in script Gothic.
Goto specifies that this is a BlockPlain and names the single successor.
Grab half of the allowed capacity (to prevent thrashing).
Grab it to avoid getting out of sync.
Grab old value of structure.
Grab some stacks from the global cache.
Grab the request header.
Grab the right to wake someone.
Grabs a batch of goroutines from _p_'s runnable queue into batch.
Gradient from gray to green.
Grantha is the set of Unicode characters in script Grantha.
Granularity of output resolution.
Graph handling options.
Graphic Control Label.
Graphic control extension fields.
Graphic control flags.
GraphicRanges defines the set of graphic characters according to Unicode.
Gray is an in-memory image whose At method returns color.Gray values.
Gray represents an 8-bit grayscale color.
Gray16 is an in-memory image whose At method returns color.Gray16 values.
Gray16 represents a 16-bit grayscale color.
Greek is the set of Unicode characters in script Greek.
Group 1 - lock and repeat prefixes According to Intel, there should only be one from this set, but according to AMD both can be present.
Group 2 - segment override / branch hints
Group 3 - operand size override
Group 4 - address size override
Group ID mappings for user namespaces.
Group addresses are not parsed.
Group can have leading negation too.
Group element functions.
Group nodes for each matching function.
Group nodes for each source file.
Group represents a class of work and forms a namespace in which units of work can be executed with duplicate suppression.
Group represents a grouping of users.
GroupIds returns the list of group IDs that the user is a member of.
Grouped types are sorted nevertheless.
Grow GC rescan list if necessary.
Grow buffer if needed
Grow buffer if not large enough.
Grow grows the buffer's capacity, if necessary, to guarantee space for another n bytes.
Grow increases the length of s.P to lsiz.
Grow slice if necessary
Grow stack so that partial call x becomes invalid if allocated on stack.
Grow the heap in small increments.
Grow the stack and put down a test pattern
GrowCap increases the capacity of s.P to c.
Growing the table invalidates everything, so try again
Gs, Ms, and Ps are always reachable via true pointers in the allgs, allm, and allp lists or (during allocation before they reach those lists) from stack variables.
Guarantee blank line before the components.
Guarantee encoding format by comparing some encodings to hand-written values
Guarantee no overflow in the multiplication below.
Guarantee there is data to be read.
Guaranteed OK by parseGMT.
Guard against side effects of shuffling fds below.
Guess it's a symbol in the current directory.
Gujarati is the set of Unicode characters in script Gujarati.
Gurmukhi is the set of Unicode characters in script Gurmukhi.
Gzip files store a length and checksum of the uncompressed data.
HACK: If the first argument of IsInBounds or IsSliceInBounds is a constant and we already know that constant is smaller (or equal) to the upper bound than this is proven.
HEAD request should also have the ability to follow redirects.
HEAD with Content-Length 0.
HEADER frame for trailers was seen
HLIT + 257 code lengths, HDIST + 1 code lengths, using the code length Huffman code.
HP-UX operating system
HPACK encoder writes into this
HTML encapsulates a known safe HTML document fragment.
HTML entities that are two unicode codepoints.
HTML escaping is done.
HTML escaping is not done.
HTML templates treat data values as plain text which should be encoded so they can be safely embedded in an HTML document.
HTMLAutoClose is the set of HTML elements that should be considered to close automatically.
HTMLEntity is an entity map containing translations for the standard HTML entity characters.
HTMLEscape writes to w the escaped HTML equivalent of the plain text data b.
HTMLEscapeString returns the escaped HTML equivalent of the plain text data s.
HTMLEscaper returns the escaped HTML equivalent of the textual representation of its arguments.
HTTP Request reading and parsing.
HTTP Response reading and parsing.
HTTP Trailers are a set of key/value pairs like headers that come after the HTTP response, instead of before.
HTTP client implementation.
HTTP client requests made with the returned context will use the provided trace hooks, in addition to any previous hooks registered with ctx.
HTTP defines that header names are case-insensitive.
HTTP file system request handler
HTTP request has Connection "close"
HTTP request parsing errors.
HTTP reverse proxy handler
HTTP status codes, defined in RFC 2616.
HTTP, kingpin of dependencies.
HTTP/1-only (Connection: close doesn't exist in h2)
HTTP/1.0 w/ Connection "keep-alive"
HTTP/1.0 was used above to avoid needing a Host field.
HTTP/1.1 POST with Content-Length in headers
HTTP/1.1 POST with Content-Length, no chunking
HTTP/1.1 or greater: Transfer-Encoding has been set to identity,  and no content-length has been provided.
HTTP/1.1 or greater: use chunked transfer encoding to avoid closing the connection at EOF.
HTTP/1.1 response 0 content-length, and nil body
HTTP/1.1 response 0 content-length, and non-nil empty body
HTTP/1.1 response 0 content-length, and non-nil non-empty body
HTTP/1.1 response with unknown length and Connection: close
HTTP/1.1 response with unknown length and not setting connection: close
HTTP/1.1 response with unknown length and not setting connection: close, but setting chunked.
HTTP/1.x from here on.
HTTP/2 requests are dumped in HTTP/1.x form, not in their original binary representations.
HTTP/2 support was added in Go 1.6.
HTTPS_PROXY takes precedence over HTTP_PROXY for https requests.
Hack: printer will treat this as a field with a named type.
Hackish but effective.
Had a separator with nothing after.
HalfReader returns a Reader that implements Read by reading half as many requested bytes from r.
Halfway through iteration, finish grow.
Han is the set of Unicode characters in script Han.
Hand check a couple for correct types.
Hand test for correct types and values.
Hand the Go files to the compiler en masse.
Handle ampersand followed by non-entity.
Handle arguments like "foo/." by double-checking that directory doesn't exist.
Handle as impossible match.
Handle byte and uint8 slices and arrays special for the above verbs.
Handle clears that would require multiple move instructions with XC.
Handle clears that would require multiple moves with a XC.
Handle decimal numeric entities.
Handle divide-by-zero panic.
Handle empty columns as if they were not present in the input in the first place.
Handle entities with two codepoints.
Handle first byte of bitmap specially.
Handle floating point special cases.
Handle gracefully (but possibly with bad comment placement) if it does happen.
Handle hexadecimal numeric entities.
Handle hitting the end of the string.
Handle last byte, if any.
Handle last line: If it only contains a closing */, align it with the opening /*, otherwise align the text with the other lines.
Handle mouse button release event.
Handle mouse move event.
Handle mouse wheel event.
Handle numeric ISO-8859-1 entity replacements.
Handle numeric early termination.
Handle out of range ModTime carefully.
Handle padding to the left.
Handle padding to the right.
Handle quoted attribute values
Handle references to ELF symbols from our own object files.
Handle registers the handler for the given pattern in the DefaultServeMux.
Handle registers the handler for the given pattern.
Handle relocations found in ELF object files.
Handle relocations found in Mach-O object files.
Handle request r using config c.
Handle returns d's module handle.
Handle runs a single action and takes care of triggering any actions that are runnable as a result.
Handle simple named entities.
Handle single ampersand.
Handle the connection in a new goroutine.
Handle the small cases here, because they are awkward for the general case code.
Handle token integers, etc.
Handle trace.EvGoStart separately, because we need the goroutine name even if ignore the event otherwise.
Handle unquoted attribute values for strict parsers
Handle unquoted attribute values for unstrict parsers
Handle very small clears using moves.
Handle very small clears with move instructions.
HandleFunc registers the handler function for the given pattern in the DefaultServeMux.
HandleFunc registers the handler function for the given pattern.
HandleHTTP registers an HTTP handler for RPC messages on rpcPath, and a debugging handler on debugPath.
HandleHTTP registers an HTTP handler for RPC messages to DefaultServer on DefaultRPCPath and a debugging handler on DefaultDebugPath.
Handled below in delim check.
Handler also returns the registered pattern that matches the request or, in the case of internally-generated redirects, the pattern that will match after following the redirect.
Handler is typically nil, in which case the DefaultServeMux is used.
Handler returns an HTTP handler that serves the named profile.
Handler returns the handler to use for the given request, consulting r.Method, r.Host, and r.URL.Path.
Handler runs an executable in a subprocess with a CGI environment.
Handler specifies which handler to use for processing requests.
Handlers should always test for this ability at runtime.
Handles dddddp+ddd (binary exponent) itself, passes the rest on to strconv.ParseFloat.
Handles overflow in a time-specific manner.
Handling fewer than 8 bits here makes the general loop simpler.
Handling of anonymous struct fields is new in Go 1.1.
Handling of sign bit as defined by IEEE 754-2008, section 6.3:
Hands off P from syscall or locked M.
Hands off own p to the locked m, then blocks waiting for a new p.
Handshake here, in case DialTLS didn't.
Handshake runs the client or server handshake protocol if it has not yet been run.
Hangul is the set of Unicode characters in script Hangul.
Hanunoo is the set of Unicode characters in script Hanunoo.
Happens mainly in 386 compiler.
Happens only if flags are declared with identical names
Hard part: check formats against args.
Hard-coded Huffman tables for DEFLATE algorithm.
Harder case: increment waiter count try cansemacquire one more time, return if succeeded enqueue itself as a waiter sleep (waiter descriptor is dequeued by signaler)
Harder case: search for a waiter and wake it.
Has been bad, then fixed, then bad again.
Has better error detection characteristics than IEEE.
Has not been cleaned up as much as powser1.go, to keep it distinct and therefore a different test.
Has reports whether f contains all (0 or more) flags in v.
Has to be linked into package net for Dial.
HasExec reports whether the current system can start new processes using os.StartProcess or (more commonly) exec.Command.
HasExpired reports whether now is past the expiry time of certList.
HasExternalNetwork reports whether the current system can use external (non-localhost) networks.
HasFileLines determines if all locations in this profile have symbolized file and line number information.
HasFunctions determines if all locations in this profile have symbolized function information.
HasGoBuild reports whether the current system can build programs with ``go build'' and then run them with os.StartProcess or exec.Command.
HasGoRun reports whether the current system can run programs with ``go run.''
HasOk reports whether the corresponding expression may be used on the lhs of a comma-ok assignment.
HasPrefix exists for historical compatibility and should not be used.
HasPrefix from the strings package.
HasPrefix tests whether the byte slice s begins with prefix.
HasPrefix tests whether the string s begins with prefix.
HasStringParam is true, if f has at least one string parameter.
HasSubdir reports whether dir is a subdirectory of (perhaps multiple levels below) root.
HasSuffix tests whether the byte slice s ends with suffix.
HasSuffix tests whether the string s ends with suffix.
Hash functions for TLS 1.2 (See RFC 5246, section A.4.1)
Hash identifies a cryptographic hash function that is implemented in another package.
Hash implements the SignerOpts interface and, in most cases, one can simply pass in the hash function used as opts.
Hash is the common interface implemented by all hash functions.
Hash is the hash function that will be used when generating the mask.
Hash non-memory fields with appropriate hash function.
Hash, if not zero, overrides the hash function passed to SignPSS.
Hash32 is the common interface implemented by all 32-bit hash functions.
Hash64 is the common interface implemented by all 64-bit hash functions.
HashFunc returns an identifier for the hash function used to produce the message passed to Signer.Sign, or else zero to indicate that no hashing was done.
HashFunc returns pssOpts.Hash so that PSSOptions implements crypto.SignerOpts.
HashFunc simply returns the value of h so that Hash implements SignerOpts.
Hashing algorithm inspired by xxhash: https://code.google.com/p/xxhash/ cityhash: https://code.google.com/p/cityhash/ +build 386 arm
Hashing algorithm inspired by xxhash: https://code.google.com/p/xxhash/ cityhash: https://code.google.com/p/cityhash/ +build amd64 amd64p32 arm64 mips64 mips64le ppc64 ppc64le s390x
Hashtable to keep accumulate tags as key,value,count.
Hatran is the set of Unicode characters in script Hatran.
Have digits, compute value.
Have to be careful about handling most negative int divided by -1 correctly.
Have to give it a name to simulate C "struct foo" references.
Have to handle f(int, bool) and f(x, y, z int) so not a simple 1-to-1 conversion.
Have to pass arguments out of band since augmenting the stack frame would break the unwinding code.
Have to process first N-1 entries in full, but can stop once we reach the non-pointer data in the final entry.
Have to wrap interface value in a struct to get at it.
Having a 10/8 source address does not mean we should prefer 23/8 destination addresses.
Having a big address space means that indexing at a 256 MB offset from a nil pointer might not cause a memory access fault.
Having found the first, linear scan forward to find the last.
Having multiple names causes too much confusion in later passes.
Having the caller check this condition eliminates many leaf recursion calls, which improves performance.
Having the extra nested but empty scope won't affect it.
Hchan does not contain pointers interesting for GC in this case: buf points into the same allocation, elemtype is persistent.
Head is a wrapper around DefaultClient.Head
Head issues a HEAD to the specified URL.
Header files are now present.
Header returns the header map that will be sent by WriteHeader.
Header returns the response headers.
Header value with a newline character (Issue 914).
HeaderEncoder returns an HPACK encoder that writes to the returned buffer.
Headers are 2-byte aligned, so if size is odd, an extra padding byte sits between the file data and the next header.
Headers that Request.Write handles itself and should be skipped.
HeadersFrameParam are the parameters for writing a HEADERS frame.
Heap maintenance algorithms.
Heap of PeekCh, sorting by head values, satisfies Heap interface.
Hebrew is the set of Unicode characters in script Hebrew.
Hello sends a HELO or EHLO to the server as the given host name.
Help flag should work as expected.
Help the compiler eliminate bounds checks on the next line.
Helper functions for cgo code.
Helper functions for common node lists.
Helper functions to make constructing templates easier.
Helper handlers Error replies to the request with the specified error message and HTTP code.
Helper methods to make it easy to scan a type descriptor.
HelperCallParamList returns source code of call into function f helper.
HelperName returns name of function f helper.
HelperParamList returns source code for helper function f parameters.
HelperType returns type of parameter p used in helper function.
Helpers for building cmd/go and cmd/cgo.
Helpers for building runtime.
Helpers for creation.
Helpers for writing disassembler output parsers.
Helpful behavior: If pattern is /tree/, insert an implicit permanent redirect for /tree.
Helps keep line numbers for otherwise empty blocks.
Hence, in the worst case, this takes time linear in the size of the line table.
Hence, it can access the bitmap with racing.
Hence, it must never be preempted, as this would put it into _Grunnable and put it on a run queue.
Hence, it slightly overestimates the "true" live heap size.
Hence, there must be a store/store barrier here to ensure the writes to h_spans above happen before the caller can publish a pointer p to an object allocated from s.
Hence, we need to go to the local entry point.
Hence, we only adjust the huge page flag on the huge pages containing v and v+n-1, and only if those aren't aligned.
Hence, we opt for forcing the re-scan to scan the frame containing p, which we can do by simply unwinding the stack barriers between the current SP and p's frame.
Here a Go pointer is defined as a pointer to memory allocated by the Go runtime.
Here a correction term c will be computed to compensate the error in r when rounded to a floating-point number.
Here arg is *(*unsafe.Pointer)(f(v))
Here arg is *(*unsafe.Pointer)(unsafe.Pointer(v))
Here arg is *(*unsafe.Pointer)(v)
Here for reference, but hard to test automatically because the BOM muddles the processing done by ../run.
Here is a more complex version that scans backward across branches.
Here is a simple example, opening a file and reading some of it.
Here is a simple example, opening a registry key and reading a string value from it.
Here is a simple example.
Here is a trivial example that prints "17 items are made of wool".
Here is the list of architectures and the base of their register spaces.
Here starts the encoding of that value.
Here starts the example proper.
Here we add a fractional second to our time value used above.
Here we add the instruction so parse will find it, but give it an opcode number known only to us.
Here we additionally check that we filled the tables completely.
Here we demonstrate loading a set of templates from a directory.
Here we demonstrate loading a set of templates from files in different directories
Here we depend on the fact that time.Duration's native unit is nanoseconds, so the pauses and the total pause time do not need any conversion.
Here we do only a part of the transformation.
Here we print just the day, which is 2 in our layout string and 7 in our value.
Here we process each update individually, which simplifies the code, but makes the corner cases more confusing.
Here we read the random key that will be used if the RSA decryption isn't well-formed.
Here we return we return 5 valid bytes at the same time as an error, but test that we don't see the error from Discard.
Here we'll assume that the plaintext is already of the correct length.
Here's an example directory layout:
Here's one possibility: Calculate the dominator tree and locate all strongly connected components.
Here, we'll be dealing with DER, the Distinguished Encoding Rules.
Heuristic match skipping: If 32 bytes are scanned with no matches found, start looking only at every other byte.
Heuristic: indentList returns true if there are more than one multi- line element in the list, or if there is any element that is not starting on the same line as the previous one ends.
Heuristics to prevent "javascript:..." injection in custom data attributes and custom attributes like g:tweetUrl.
HexEncoding is the ``Extended Hex Alphabet'' defined in RFC 4648.
Hex_Digit is the set of Unicode characters with property Hex_Digit.
Hexstring of the input DEFLATE stream
Hide bytes.Buffer's WriteString method:
Hide runtime.goexit and any runtime functions at the beginning.
Hide the args from setlno -- the parameters to the inlined call already have good line numbers that should be preserved.
High level access to low level data structures.
Higher precision value
Higher values react to phase changes quickly, but are more affected by transient changes.
Higher values reduce memory contention.
Higher-level packages exist outside of the standard library.
Higher-level synchronization is better done via channels and communication.
Highest bit indicates binary format
Hijack detaches the ClientConn and returns the underlying connection as well as the read-side bufio which may have some left over data.
Hijack detaches the ServerConn and returns the underlying connection as well as the read-side bufio which may have some left over data.
Hijack implements the Hijacker.Hijack method.
Hijack lets the caller take over the connection.
Hijack may be called before Read has signaled the end of the keep-alive logic.
Hijack may be called before the user or Read have signaled the end of the keep-alive logic.
Hijacked connections do not transition to StateClosed.
Hiragana is the set of Unicode characters in script Hiragana.
HistLine reports the cumulative source line number of the token, for use in the Prog structure for the linker.
Historical aside: For arrays, maps, and slices, we set the type id after the elements are constructed.
Hit the HTTP server successfully again, verifying that the previous slow connection didn't run our handler.
Hit the HTTP server successfully.
Hoist all the argument evaluation up before the lock.
Holding itab, want concrete type in second word.
Holding worldsema causes any other goroutines invoking stopTheWorld to block.
Holding worldsema grants an M the right to try to stop the world and prevents gomaxprocs from changing concurrently.
Holds variables parsed from GODEBUG env var, except for "memprofilerate" since there is an existing int var for that value, which may already have an initial value.
Hooks for other packages
Horizontal sampling factor.
Host-specific pattern takes precedence over generic ones
Host: example.com accept-encoding: gzip, deflate Accept-Language: en-us fOO: Bar foo: two
Hostname is provided, so we can reasonably construct a URL.
Hostname returns the host name reported by the kernel.
HostnameError results when the set of authorized names doesn't match the requested name.
Hours returns the duration as a floating point number of hours.
How far we can go down from upper until the result is wrong.
How far we should go to get a very precise result.
How handlers set Trailers: declare it ahead of time with the Trailer header, and then mutate the Header() of those values later, after the response has been written (we wrote to w above).
How to extract and insert information held in the st_info field.
Howerver, C runtime takes a *copy* at process startup of thei OS environment, and stores it in environ/envp.
However, GNU tar stops returning data even if sfr.total is unmet.
However, a call to the File method will put it back into blocking mode.
However, a future processor may assign a different meaning.
However, a modified or generated AST may possibly contain non-canonical paths.
However, a stream with an empty HCLEN tree is guaranteed to fail since it will attempt to use the tree to decode the codes for the HLIT and HDIST trees.
However, a valid preamble line is not a valid header line, therefore we cannot have consumed the preamble line for the any subsequent block.
However, after performing the horizontal 1-D IDCT, there are typically non-zero AC components, so we do not bother to check for the all-zero case.
However, at the very beginning of the byte array, we'll accept the start string without it.
However, because the mantissa is only 63 bits, we don't need the LSB, so instead we do an unsigned right shift (divide by two), convert, and double.
However, before we do that, we need to be sure that we do not lose a "1" if that made the difference in the resulting rounding.
However, bmap.overflow is a pointer.
However, both agree that rmdir(file) returns ENOTDIR, so we can use that to decide which error is real.
However, both libopcodes and xed seem to generalize this example and choose F2/F3 in preference to 66, and we do the same.
However, both libopcodes and xed show both prefixes explicitly for all instructions, so we do the same.
However, cmd.Start (really syscall.forkExec) only guarantees that when it returns, the exec is committed to happen and succeed.
However, for the initial call it's possible that len(codes) is zero or one.
However, gc only gives us likeliness hints in a single place, for plain OIF statements, and passing around context is finnicky, so don't bother for now.
However, header field names MUST be converted to lowercase prior to their encoding in HTTP/2.
However, if after discovering new work we also observe no idle Ps, it is OK to just park the current thread: the system is fully loaded so no spinning threads are required.
However, if the REP is followed by a REPN, that REPN blocks the conversion.
However, if the argument begins with a capital letter it is always assumed to be a symbol in the current directory.
However, if the user explicitly requested gzip it is not automatically uncompressed.
However, in the case where the called function was one of these wrappers, the rewritten receiver is almost certainly a different type than the original receiver.
However, it breaks the invariant that the msb is always the "continuation bit" and thus makes the format incompatible with a varint encoding for larger numbers (say 128-bit).
However, it does suggest a representation, namely using 1-1-1 00:00:00 UTC as the epoch, and that's what we do.
However, it is legal to overwrite elements of the map.
However, it is not suitable for all free lists.
However, it's critical to note that ciphertexts must be authenticated (i.e. by using crypto/hmac) before being decrypted in order to avoid creating a padding oracle.
However, it's working, so I'm not changing it.
However, libjpeg is liberal in what it accepts.
However, n might refer to computed addresses that are being written.
However, of course, there are exceptions to the rule.
However, our behavior matches OpenSSL, so we leak only as much as they do.
However, our version of the type omits the magic words const and volatile, which can provoke C compiler warnings.
However, programs that break these rules are likely to fail in unexpected and unpredictable ways.
However, since all allocated one-word objects are pointers (non-pointers are aggregated into tinySize allocations), initSpan sets the pointer bits for us.
However, since they are comments, tools unaware of the directive convention or of a particular directive can skip over a directive like any other comment.
However, since we're returning to an earlier stack frame and need to pair with the entersyscall() call made by cgocall, we must save syscall* and let reentersyscall restore them.
However, some encoders may generate incorrect JPEGs with a final restart marker.
However, some runtime code can be inlined into other packages and instrumented there.
However, such syscall will use the global trace.buf buffer, because we've acquired all p's by doing stop-the-world.
However, that is the end of any semblance of agreement.
However, that specification has flaws and new designs should use version two, usually called by just OAEP and PSS, where possible.
However, the GNU tar utility itself outputs these values in decimal.
However, the RLE preprocessing would require allocating huge buffers to store the maximum expansion.
However, the binaries would be about 1 MB each, and we don't want to add that much junk to the hg repository.
However, the destination variable must be able to represent the value or the decode operation will fail.
However, the entire Go runtime is initialized from just one function, so it is unlikely that this will need to grow in the future.
However, the front of the MTF list is never referenced as 0, it's always referenced with a run-length of 1.
However, the language spec does not preclude other implementations from handling these.
However, the majority of opcodes are arch-specific and are declared in their respective architecture's subpackage.
However, the mutator is guaranteed to execute a write barrier when it publishes the pointer, so it will take care of marking the object.
However, the nonce is only 8 bytes which is too small for a secure, random nonce.
However, the routines would then be invalid when displaying the epoch in time zones west of UTC, since it is year 0.
However, the stack scanning code will think that the instruction before the CALL is executing.
However, the stack trace code will show the line of the instruction byte before the return PC.
However, the time package normalises times and they were accepted in some versions.
However, the values listed by unzip appear to be off by some hours.
However, the very first time we send the value, we first send the pair (-id, wireType).
However, there can be multiple leftmost-longest matches, with different submatch choices, and here this package diverges from POSIX.
However, they are in bit reversed order.
However, this bug has been observed in the wild so we handle it.
However, this idea is impossible to implement without some inconsistency.
However, this is still a useful hook that we've found many uses for when experimenting.
However, this means that SliceHeader and StringHeader are only valid when interpreting the content of an actual slice or string value.
However, this means that the result is fragile and must be converted to Pointer immediately after making the call, in the same expression:
However, this requires significantly more book-keeping space.
However, this results in differing outputs for identical inputs.
However, this would mess up any formatting done by the tabwriter.
However, traditionally, write barriers are not enabled during this phase.
However, we can do it only if there is at least one non-empty string literal.
However, we cannot be sure that all of them have been closed, so the program might still encounter ETXTBSY even with such an RWLock.
However, we need to make the function complex enough that it won't be inlined.
However, we only pass the slice or array if we can refer to it without side effects.
However, we use rcap to test if we've generated a zero-length slice.
However, we will be able to delete them once we enable the new export format by default, so it's not worth the effort (issue 13241).
However, when we do lookups into this table we'll be using bits from a field element and therefore the bits will be in the reverse order.
However, without this special case b will escape, because we assign to OIND/ODOTPTR.
However, x509 certificates with wildcard strings don't always use the correct string type so we permit it.
Huffman decoder is based on J.
Huffman decoders for literal/length, distance.
HuffmanDecode decodes the string in v and writes the expanded result to w, returning the number of bytes written to w and the Write call's return value.
HuffmanDecodeToString decodes the string in v.
HuffmanEncodeLength returns the number of bytes required to encode s in Huffman codes.
Huge negative (-inf).
Huge strings are hashed to avoid long names in object files.
Hyphen is the set of Unicode characters with property Hyphen.
Hypot -- sqrt(p*p + q*q), but overflows only if the result does.
Hypot returns Sqrt(p*p + q*q), taking care to avoid unnecessary overflow and underflow.
I am scared that if we don't include the +2 here, the kernel will silently write 2 words farther than we specify and we'll get memory corruption.
I can't explain any of this, but it's what libopcodes does.
I do not know why this is.
I don't know any better way to do that for directory
I don't know that futex wakeup can return EAGAIN or EINTR, but if it does, it would be safe to loop and call futex again.
I don't know why the +2 is here, but the kernel uses +2 for its own implementation of this function.
I don't quite see how you know it's one of these and not the full response format, so just look if the message is right.
I guess we'll need oldLookupIP, newLookupIP, and newerLookUP.
I have not taken the time to write assembly programs to check to see if the hardware agrees.
I have not written assembly code to divine what various CPUs do, but it wouldn't surprise me if they are not consistent either.
I'm not really sure this is required by the spec, but it makes sense.
I'm not sure the language spec actually requires this behavior, but it's what the current map implementation does.
IA5String parseIA5String parses a ASN.1 IA5String (ASCII string) from the given byte slice and returns it.
IANA defines more special-purpose blocks, but these are the only ones likely to be relevant to typical Go systems.
IBM DevOps Services (JazzHub)
IBM DevOps Services tests
ICC always uses inc Clang/GCC choose depending on flags, but prefer add.
ID is which setting is being set.
ID of module containing symbol
IDS_Binary_Operator is the set of Unicode characters with property IDS_Binary_Operator.
IDS_Trinary_Operator is the set of Unicode characters with property IDS_Trinary_Operator.
IE does not allow these ranges in unquoted attrs.
IE treats '`' as a quotation character.
IEEE is by far and away the most common CRC-32 polynomial.
IEEETable is the table for the IEEE polynomial.
IF GOSSAHASH is a suffix of the binary-rendered SHA1 hash of the function name THEN compile this function with SSA ELSE compile this function with the old back end.
IF LR exists, sigpanictramp must save it to the stack before entry to sigpanic so that panics in leaf functions are correctly handled.
IMPORT, CONST, TYPE, VAR
IMULB puts the high portion in AH instead of DL, so move it to DL for consistency
IN PARTICULAR, NEITHER THE AUTHORS NOR LUCENT TECHNOLOGIES MAKE ANY REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.
INDREG a(1) l(15) x(24) tc(2) runtime.ret G0 string bug343.go:15: internal compiler error: typecheck INDREG
INT 3 is usually 1 byte, but there is a 2-byte form.
INTEGER checkInteger returns nil if the given bytes are a valid DER-encoded INTEGER and an error otherwise.
INVARIANT: We have seen "count" copies of size that have not yet had output generated for them.
IN_QEMU environmental variable is set by some of the Go builders.
IO completed immediately
IO is interrupted by "close" or "timeout"
IO started, and we have to wait for its completion.
IP address lengths (bytes).
IP address manipulations
IP wildcard equivalent address in Dial/Listen API
IPAddr represents the address of an IP end point.
IPConn is the implementation of the Conn and PacketConn interfaces for IP network connections.
IPv4 global multicast as 16 bytes
IPv4 global multicast as 4 bytes
IPv4 link-local multicast as 16 bytes
IPv4 link-local multicast as 4 bytes
IPv4 over IPv4 tunneling
IPv4 returns the IP address (in 16-byte form) of the IPv4 address a.b.c.d.
IPv4-compatible, etc.
IPv4-mapped IPv6 address
IPv4-mapped IPv6 address communication capability
IPv4Mask returns the IP mask (in 4-byte form) of the IPv4 mask a.b.c.d.
IPv6 communication capability
IPv6 over IPv4 tunneling
IPv6 over IPv6 tunneling
IPv6 scoped addressing zone
IPv6address + Host expression's optional port
ISA is the instruction set architecture for these instructions.
ISOWeek returns the ISO 8601 year and week number in which t occurs.
Id returns name if it is exported, otherwise it returns the name qualified with the package path.
Ideal vs non-ideal bool.
Ideally we wouldn't see any integer types here, but we do.
Ideas stolen from Swift: http://www.hpl.hp.com/techreports/Compaq-DEC/WRL-2000-2.html
Identical reports whether x and y are identical.
Identical should allow nil arguments and be symmetric.
Identifier can take its type from underlying object.
Identifier is a name.
Identifier of a fake P that is used when we trace without a real P.
IdentifierNode holds an identifier.
Identifiers and basic type literals
Identifiers and basic type literals (these tokens stand for classes of literals)
Identifiers can be divided and cannot validly be preceded by a regular expressions.
Identifiers denoting packages are collected in the Uses maps.
Identifiers on the lhs of declarations (i.e., the identifiers which are being declared) are collected in the Defs map.
Identify all the functions that match the regexp provided.
Identify all the source files associated to this function.
Identify and sort runs of specs on successive lines.
Identify comments in this range.
Identify leading run of // comments and blank lines, which must be followed by a blank line.
Identify mismatches between assembly files and Go func declarations.
Identify sources associated to a symbol by examining symbol samples.
Identify symbol to use for this collection of samples.
Identify the type of this top-level value.
Identify used mappings
Identify which, if any, sparse format applies from which PAX headers are set
Ideographic is the set of Unicode characters with property Ideographic.
IdleConnTimeout is the maximum amount of time an idle (keep-alive) connection will remain idle before closing itself.
IdleTime reports how long the connection was previously idle, if WasIdle is true.
If 'All' is present, the routine matches successive non-overlapping matches of the entire expression.
If 'Index' is not present, the match is identified by the text of the match/submatch.
If 'Submatch' is present, the return value is a slice identifying the successive submatches of the expression.
If (reg) and *scale are both omitted, the resulting expression (index) is parsed as (reg).
If *usedPrefixes is false and x is a Mem, then the formatting includes any segment prefixes and sets *usedPrefixes to true.
If -cpu is set, run n times for each GOMAXPROCS value.
If /etc/nsswitch.conf doesn't exist or doesn't specify any sources for "hosts", assume Go's DNS will work fine.
If 32 more bytes are scanned (or skipped), look at every third byte, etc..
If AST traversal does not follow source order, the sorting call below will be required.
If AllErrors is not set, discard errors reported on the same line as the last recorded error and stop parsing if there are more than 10 errors.
If AllowBinary is set, Import can be satisfied by a compiled package object without corresponding sources.
If Authorization header is provided, username in URL should not override it
If BaseConfig or BaseConfig.Handler is nil, http.DefaultServeMux is used.
If CanAddr returns false, calling Addr will panic.
If CanSet returns false, calling Set or any type-specific setter (e.g., SetBool, SetInt) will panic.
If Chan is a zero Value, then the case is ignored, but Send must still be a zero Value.
If CharsetReader is nil or returns an error, parsing stops with an error.
If CheckRedirect is nil, the Client uses its default policy, which is to stop after 10 consecutive requests.
If CheckRedirect is not nil, the client calls it before following an HTTP redirect.
If CipherSuites is nil, TLS uses a list of suites supported by the implementation.
If Content-Type isn't set, use the file's extension to find it, but if the Content-Type is unset explicitly, do not sniff the type.
If DA is reached via an encapsulating transition mechanism (e.g., IPv6 in IPv4) and DB is not, then prefer DB.
If DA preceded DB in the original list, prefer DA.
If DB is known to be unreachable or if Source(DB) is undefined, then prefer DA.
If DIR is a directory listed in the GOPATH, a package with source in DIR/src/foo/bar can be imported as "foo/bar" and has its compiled form installed to "DIR/pkg/GOOS_GOARCH/foo/bar.a".
If Deadline is also set, it may fail earlier.
If Decode encounters invalid input, it returns an error describing the failure.
If Decode reads beyond what w.Write writes above, it will block, and the test will deadlock.
If Dial and Dialer are both nil, net.Dial is used.
If DialTLS is nil, Dial and TLSClientConfig are used.
If DialTLS is nil, tls.Dial is used.
If DialTLS is set, the Dial hook is not used for HTTPS requests and the TLSClientConfig and TLSHandshakeTimeout are ignored.
If Dir is SelectDefault, the case represents a default case.
If Dir is SelectRecv, the case represents a receive operation.
If Dir is SelectSend, the case represents a send operation.
If Dir is empty, the base directory of Path is used.
If Dir is non-empty, the child changes into the directory before creating the process.
If Dir is the empty string, Run runs the command in the calling process's current directory.
If DisableUnusedImportCheck is set, packages are not checked for unused imports.
If Discard skips fewer than n bytes, it also returns an error.
If DiscardEmptyColumns is set, empty columns that are terminated entirely by vertical (or "soft") tabs are discarded.
If DumpRequest returns an error, the state of req is undefined.
If Env is nil, Run uses the current process's environment.
If Env is non-nil, it gives the environment variables for the new process in the form returned by Environ.
If FakeImportC is set, `import "C"` (for packages requiring Cgo) declares an empty "C" package and errors are omitted for qualified identifiers referring to package C (which won't find an object).
If FieldsPerRecord is 0, Read sets it to the number of fields in the first record, so that future records must have the same field count.
If FieldsPerRecord is greater then 0 we can assume the final length of fields to be equal to FieldsPerRecord.
If FieldsPerRecord is negative, no check is made and records may have a variable number of fields.
If FieldsPerRecord is positive, Read requires each record to have the given number of fields.
If FindOnly is set, Import stops after locating the directory that should contain the sources for a package.
If GC could have used another helper proc, start one now, in the hope that it will be available next time.
If GC happens while a goroutine works with l.shared in Put/Get, it will retain whole Pool.
If GC is active, we delay the free until the end of GC to avoid the following type of situation:
If GC kept a bit for whether there were any marks in a span, we could release these free spans at the end of GC and eliminate this entirely.
If GC kicks in, it may lock up and prevent main from saying it's ready.
If GC was forced before the concurrent sweep finished, there may be spans to sweep.
If GOMAXPROCS changes between GCs, we re-allocate the array and lose the old one.
If GOSSAFUNC is set, compile only that function.
If GOSSAPKG is set, compile only that package.
If Get would otherwise return nil and p.New is non-nil, Get returns the result of calling p.New.
If GetCertificate is nil or returns nil, then the certificate is retrieved from NameToCertificate.
If GetProcAddress succeeds, the LOAD_LIBRARY_SEARCH_* flags can be used with LoadLibraryEx."
If Go 1.4 has built mypkg into mypkg.a, a build using Go 1.5 must rebuild mypkg.a, but from mtimes alone mypkg.a looks up-to-date.
If HasSubdir is nil, Import uses an implementation built on filepath.EvalSymlinks.
If Hello is called, it must be called before any of the other methods.
If I pass the address of the array to some function, it may store it globally.
If I/O becomes ready when nobody is listening, when we finally care about it, nobody will tell us anymore.
If IPv4, use dotted notation.
If IPv6, only up to the prefix (first 64 bits)
If IgnoreFuncBodies is set, function bodies are not type-checked.
If ImportComment is set, parse import comments on package statements.
If InsecureSkipVerify is true, TLS accepts any certificate presented by the server and any host name in that certificate.
If IsAbsPath is nil, Import uses filepath.IsAbs.
If IsDir is nil, Import calls os.Stat and uses the result's IsDir method.
If IsValid returns false, all other methods except String panic.
If Jan 1 is a Tuesday, Wednesday, or Thursday, the first Monday is actually in week 2.
If Jar is nil, cookies are not sent in requests and ignored in responses.
If JoinPath is nil, Import uses filepath.Join.
If LHS and RHS have different cardinality, they can't be the same.
If LazyQuotes is true, a quote may appear in an unquoted field and a non-doubled quote may appear in a quoted field.
If MaxIdleConns is greater than 0 and the new MaxOpenConns is less than MaxIdleConns, then MaxIdleConns will be reduced to match the new MaxOpenConns limit
If MaxOpenConns is greater than 0 but less than the new MaxIdleConns then the new MaxIdleConns will be reduced to match the MaxOpenConns limit
If More is set non-zero, the function will be called again with the same PC, and may return different information (this is intended for use with inlined functions).
If More is zero, the function will be called with the next PC value in the traceback.
If NameToCertificate is nil, the first element of Certificates will be used.
If Next returns a non-nil error, the SMTP client aborts the authentication attempt and closes the connection.
If Next returns false, the Rows are closed automatically and it will suffice to check the result of Err.
If Notify is called for a blocked signal, it will be unblocked.
If Notify is called for an asynchronous signal, a Go signal handler will be installed for that signal.
If OTOH the module does not contain the runtime package, create a local symbol for the moduledata.
If OpenFile is nil, Import uses os.Open.
If Path has no base directory, the current working directory is used.
If Path is relative, it is evaluated relative to Dir.
If Peek returns fewer than n bytes, it also returns an error explaining why the read is short.
If Proxy is nil or returns a nil *URL, no proxy is used.
If REP is used on a non-REP-able instruction, mark the prefix as ignored.
If REX was present, mark implicit if all the 1 bits were consumed.
If Rand is nil, TLS uses the cryptographic random reader in package crypto/rand.
If ReadAt is reading from an input source with a seek offset, ReadAt should not affect nor be affected by the underlying seek offset.
If ReadBytes encounters an error before finding a delimiter, it returns the data read before the error and the error itself (often io.EOF).
If ReadDir is nil, Import uses ioutil.ReadDir.
If ReadSlice encounters an error before finding a delimiter, it returns all the data in the buffer and the error itself (often io.EOF).
If ReadString encounters an error before finding a delimiter, it returns the data read before the error and the error itself (often io.EOF).
If Readdirnames returned an error, use it.
If Register is called twice with the same name or if driver is nil, it panics.
If Reset is called, or Stop is called on all channels passed to Notify, then the default behavior will be restored.
If RootCAs is nil, TLS uses the host's root CA set.
If SP or g alone is updated, we can detect the partial transition by checking whether the SP is within g's stack bounds.
If Seed is not called, the generator behaves as if seeded by Seed(1).
If ServeHTTP panics, the server (the caller of ServeHTTP) assumes that the effect of the panic was isolated to the active request.
If SetString fails, the value of z is undefined but the returned value is nil.
If SetTraceback is called with a level lower than that of the environment variable, the call is ignored.
If Source(DA) is deprecated and Source(DB) is not, then prefer DB.
If Source(DA) is simultaneously a home address and care-of address and Source(DB) is not, then prefer DA.
If SplitPathList is nil, Import uses filepath.SplitList.
If SpuriousErrors is not set, the (only) error re- ported for the line is the illegal label error instead of the token before the ':' that caused the problem.
If Stdin is an *os.File, the process's standard input is connected directly to that file.
If Stdin is nil, the process reads from the null device (os.DevNull).
If Stdout and Stderr are the same writer, at most one goroutine at a time will call Write.
If Strict is set, the type-checker enforces additional rules not specified by the Go 1 spec, but which will catch guaranteed run-time errors if the respective code is executed.
If Subject Alt Name is given, we ignore the common name.
If SysReserve returns non-nil, it sets *reserved to true if the address space is reserved, false if it has merely been checked.
If TLSNextProto is nil, HTTP/2 support is enabled automatically.
If TestMain depends on command-line flags, including those of the testing package, it should call flag.Parse explicitly.
If Time is nil, TLS uses time.Now.
If Timeout is set, it may fail earlier.
If ToString didn't return the original regexp, it must have found one with fewer parens.
If Token encounters an unrecognized name space prefix, it uses the prefix as the Space rather than report an error.
If TrimLeadingSpace is true, leading white space in a field is ignored.
If Verify returns nil, the address is valid.
If WriteAt is writing to a destination with a seek offset, WriteAt should not affect nor be affected by the underlying seek offset.
If WriteHeader has not yet been called, Write calls WriteHeader(http.StatusOK) before writing the data.
If WriteHeader is not called explicitly, the first call to Write will trigger an implicit WriteHeader(http.StatusOK).
If a "range" action initializes a variable, the variable is set to the successive elements of the iteration.
If a Conn does not implement Execer, the sql package's DB.Exec will first prepare a query, execute the statement, and then close the statement.
If a Conn does not implement Queryer, the sql package's DB.Query will first prepare a query, execute the statement, and then close the statement.
If a Flush occurs after all the actual data, the flushing semantics dictate that we will observe a (0, io.EOF) since Read must return data before it knows that the stream ended.
If a JSON value is not appropriate for a given target type, or if a JSON number overflows the target type, Unmarshal skips that field and completes the unmarshaling as best it can.
If a NUL byte is not found then the whole slice is returned as a string.
If a P is currently executing code, this will bring the P to a GC safe point and execute fn on that P.
If a Request's Cancel field and context are both set, it is undefined whether Cancel is respected.
If a WaitGroup is reused to wait for several independent sets of events, new Add calls must happen after all previous Wait calls have returned.
If a Writer is configured to filter HTML, HTML tags and entities are passed through.
If a and b are different IP versions, 0 is returned.
If a and b are not the same length then the number of bytes processed will be equal to the length of shorter of the two.
If a benchmark needs some expensive setup before running, the timer may be reset:
If a client wants Read and Seek it must use Open() to avoid fighting over the seek offset with other clients.
If a close-notify alert is waiting, read it so that we can return (n, EOF) instead of (n, nil), to signal to the HTTP response reading goroutine that the connection is now closed.
If a comment is between the line break and the label, the unindent is not part of the comment whitespace prefix and the comment will be positioned correctly indented.
If a compressor for a given method is not found, Writer will default to looking up the compressor at the package level.
If a connRequest was fulfilled or the *driverConn was placed in the freeConn list, then true is returned, otherwise false is returned.
If a decompressor for a given method is not found, Reader will default to looking up the decompressor at the package level.
If a dup or exec fails, it writes the error string to pipe.
If a dup or exec fails, write the errno error to pipe.
If a duplicate comes in, the duplicate caller waits for the original to complete and receives the same results.
If a field is not known or not applicable for a given type, the zero value is used.
If a field with the same name is present in both, their types must be compatible.
If a file contains both definitions and declarations, then the two output files will produce duplicate symbols and the linker will fail.
If a file match is found, then the code goes to the expense of looking for a simultaneous line number match.
If a file's formatting is different from gofmt's, overwrite it with gofmt's version.
If a file's formatting is different from gofmt's, print its name to standard output.
If a file's formatting is different than gofmt's, print diffs to standard output.
If a finalizer must run for a long time, it should do so by starting a new goroutine.
If a floating-point extraction succeeded, extract the int if needed.
If a fork happens between those two events, the child's exec will inherit an unwanted file descriptor.
If a frame is already being written, nothing happens.
If a frame isn't being written and there's nothing else to send, we flush the write buffer.
If a func literal appears, it usually marks the termination of a basic block because the function body is itself a block.
If a function should be exported add it to ExpFunc.
If a handler already exists for pattern, Handle panics.
If a heap span goes unused for 5 minutes after a garbage collection, we hand it back to the operating system.
If a is empty, it returns BX to account for MULB-like instructions that might use DX and AX.
If a is the from operand, this means this operation reads the register in v.
If a is the to operand, this means this operation writes the register in v.
If a kernel happens to pick local port 50001 as the source for a Dial("tcp", "", "localhost:50001"), then the Dial will succeed, having simultaneously connected to itself.
If a line break is needed, the kind of break (newline vs formfeed) depends on the pending whitespace.
If a match is found, the external command (the executable file) executes.
If a method is found with a name listed here but not the input/output types listed here, vet complains.
If a name server gives a lame referral, continue to the next.
If a name starts with "*", then the exported bit represents whether the pointed to type is exported.
If a named package cannot be loaded at all (for example, if the directory does not exist), then packages prints an error and does not include that package in the results.
If a needed expression may be affected by an earlier assignment, make an early copy of that expression and use the copy instead.
If a node under test supports both IPv6 capability and IPv6 IPv4-mapping capability, we can assume that the node listens on a wildcard address with an AF_INET6 socket.
If a non-malicious child accidentally inherits an open ordinary file, that's not a big deal.
If a non-nil *Int argument z is provided, Int stores the result in z instead of allocating a new Int.
If a non-nil *Rat argument z is provided, Rat stores the result in z instead of allocating a new Rat.
If a non-nil importer and universe scope are provided, they are used to resolve identifiers not declared in any of the package files.
If a non-nil mant argument is provided its value is set to the mantissa of x, with the same precision and rounding mode as x.
If a or b is an IPv4 address as an IPv6 address, the IPv4 addresses are compared (with max common prefix length of 32).
If a package 'explicit' imports a package 'implicit', building 'explicit' into a shared library implicitly includes implicit in the shared library.
If a parse error occurred, a non-nil but incomplete map and the first error encountered are returned.
If a particular column name isn't known, an empty string should be returned for that entry.
If a pointer argument must be converted to uintptr for use as an argument, that conversion must appear in the call expression itself:
If a preset dict is provided, it will initialize the dictionary with the contents of dict.
If a profile with that name already exists, NewProfile panics.
If a profiling interrupt arrives during jmpdefer, the stack unwind may see a mismatched register set and get confused.
If a quote in s is not closed the part after the opening quote will not be returned as a field.
If a quote in s isn't closed err will be set and r will have the unclosed argument as the last element.
If a random source is given, RSA blinding is used.
If a rebuild is needed but produces the previous __.PKGDEF, then no more recompilation due to the rebuilt package is needed, only relinking.
If a request has Expect:100-continue header, the request blocks sending body until the first response.
If a section is compressed, FileSize is the size of the compressed data, while Size (above) is the size of the uncompressed data.
If a server received a request with header lines,
If a signal is delivered to a non-Go thread, it will act as described above, except that if there is an existing non-Go signal handler, that handler will be installed before raising the signal.
If a slice is passed in, this will take ownership of it.
If a solution is found, solve prints the board after each move in a backward fashion (i.e., the last board position is printed first, all the way back to the starting board position).
If a source file is removed, there is no newer mtime available recording that fact.
If a special flag, we should read nothing.
If a spinning thread finds work it takes itself out of the spinning state and proceeds to execution.
If a string exceeds this length (even after any decompression), Write will return ErrStringLength.
If a string is acceptable according to the format, see if the value satisfies one of the string-valued interfaces.
If a struct type T can be reached more than once at a given depth level, then it annihilates itself and need not be considered at all when we process that next depth level.
If a subtree has been registered and a request is received naming the subtree root without its trailing slash, ServeMux redirects that request to the subtree root (adding the trailing slash).
If a symbol was marked both cgo_import_static and cgo_import_dynamic, then we want to make it cgo_import_dynamic now.
If a synchronous signal arrives while executing non-Go code, the Go runtime will invoke the existing signal handler instead of the Go signal handler.
If a syntax error is encountered and a handler was installed, the handler is called with a position and an error message.
If a template by that name exists, don't replace it with an empty template.
If a test deferred an important cleanup function (like removing temporary files), there was no guarantee it would run on a test failure.
If a test fails in a way that could mean it just didn't run long enough, try with a longer duration.
If a test timeout was given and is parseable, set our kill timeout to that timeout plus one minute.
If a user has the two versions installed in different locations and flips back and forth, mtimes alone cannot tell what to do.
If a valid position pos is provided, only objects that were declared at or before pos are considered.
If a value is live at the end of the block and isn't in a register, remember that its spill location is live.
If a value is live in one block of an SCC, it is live in all.
If a value is used by a phi, it does not induce a scheduling edge because that use is from the previous iteration.
If a value's address is taken but the address does not escape, then the value can stay on the stack.
If a variable's address is taken, that disables registerization for the individual words of the variable (for example, the base,len,cap of a slice).
If a write to w returns an error, WriteTo returns that error.
If above and below vertical bar are literal or char class, can merge into a single char class.
If absent, the width is whatever is necessary to represent the value.
If accept is true, it puts the character into the input token.
If addFileLine is true, it also prefixes the string with the file and line of the call site.
If addr is not zero, Symbols restricts the list to symbols containing that address.
If addressable is set, T is the type of an addressable variable (only matters for method lookups).
If addtimer inserts a new earlier event, addtimer1 wakes timerproc early.
If align is 0, uses default align (currently 8).
If all Phi ops in ss have identical variables for slots corresponding to s0, s1 and b then the branch can be dropped.
If all code points in s satisfy f(c) or the string is empty, an empty slice is returned.
If all flag is set true or if no flags are set true, set all the non-experimental ones not explicitly set (in effect, set the "-all" flag).
If all is set, print all goroutine stacks.
If all is true, Stack formats stack traces of all other goroutines into buf after the trace for the current goroutine.
If all of the above has failed, account it against abstract "System" or "GC".
If all other goroutines exit, the program crashes.
If all samples have the same second-to-the-bottom frame, it strongly suggests that it is an uninteresting artifact of measurement -- a stack frame pushed by the signal handler.
If all tests pump to the same channel, a bug can occur where a test kicks off a goroutine that Fails, yet the test still delivers a completion signal, which skews the counting.
If all the AC components are zero, then the IDCT is trivial.
If all the objects in a given span have returned to the MCentral list, return that span to the page heap.
If allowPax is false, we are being called by writePAXHeader, and hdrBuff is already being used by the non-recursive call, so we must use paxHdrBuff.
If allowPax is true, this is the non-recursive call, and we will use hdrBuff.
If already seen, record earlier index in remap and free bitmaps.
If an EOF happens after reading fewer than min bytes, ReadAtLeast returns ErrUnexpectedEOF.
If an EOF happens after reading some but not all the bytes, Read returns ErrUnexpectedEOF.
If an EOF happens after reading some but not all the bytes, ReadFull returns ErrUnexpectedEOF.
If an Import finds and returns a package using a vendor directory, the resulting ImportPath is the complete path to the package, including the path elements leading up to and including "vendor".
If an attacker can cause this function to run repeatedly and learn whether each instance returned an error then they can decrypt and forge signatures as if they had the private key.
If an encountered value implements the Marshaler interface and is not a nil pointer, Marshal calls its MarshalJSON method to produce JSON.
If an entry has children, its Children field will be true, and the children follow, terminated by an Entry with Tag 0.
If an error is encountered, parsing stops and an empty map is returned with the error.
If an error is reported (via Error) and Position is invalid, the scanner is not inside a token.
If an error is returned, processing stops.
If an error is returned, the reply parameter will not be sent back to the client.
If an error occurred, x.mode is set to invalid.
If an error occurs during the execution of the statement, that error will be returned by a call to Scan on the returned *Row, which is always non-nil.
If an error occurs executing the template or writing its output, execution stops, but partial results may already have been written to the output writer.
If an error occurs writing to a Writer, no more data will be accepted and all subsequent writes will return the error.
If an error occurs, Import returns a non-nil error and a non-nil Package containing partial information.
If an error occurs, parsing stops and the returned *Template is nil.
If an error occurs, read returns the error but also records it, so it is safe for callers to ignore the result as long as delaying the report is not a problem.
If an error occurs, readByte records the error in r.err and returns 0.
If an error occurs, run prints the command line and the command's combined stdout+stderr to standard error.
If an evaluation yields a function value, such as a function-valued field of a struct, the function is not invoked automatically, but it can be used as a truth value for an if action and the like.
If an extended header (type 'x') is invalid, ErrHeader is returned
If an identifier is not present, readIdent records a syntax error.
If an identifier is not present, readString records a syntax error.
If an incorrect password is detected an IncorrectPasswordError is returned.
If an index is negative, it means that subexpression did not match any string in the input.
If an input and an output have the same mtime, the conservative behavior is to treat the output as out-of-date and rebuild.
If an input file changes after being read but before the object is written, the next build will see an object newer than the input and will incorrectly decide that the object is up to date.
If an instruction has fewer than 4 arguments, the final elements in the array are nil.
If an integer extraction succeeded, promote the float.
If an interface is sent, its type in the test is always NewType0, so this checks that the encoder and decoder don't skew with respect to type definitions.
If an operand implements method String() string, that method will be invoked to convert the object to a string, which will then be formatted as required by the verb (if any).
If an operand implements the Formatter interface, it will be invoked.
If an operand implements the error interface, the Error method will be invoked to convert the object to a string, which will then be formatted as required by the verb (if any).
If an unknown flag is encountered or there are no arguments, Parse should call usage and return nil.
If another command was kicked off while we were writing the cgo binary, the child process for that command may be holding a reference to the fd, keeping us from running exec.
If another emitCopy is not our next move, also calculate nextHash at s+1.
If answer errored for rcodes dnsRcodeSuccess or dnsRcodeNameError, it means the response in msg was not useful and trying another server probably won't help.
If any Write call returns short then the StreamWriter is out of sync and must be discarded.
If any candidates were rejected then errCert will be set to one of them, arbitrarily, and err will contain the reason that it was rejected.
If any conflict is shallower, ignore the new field.
If any copy input becomes unused, mark it as invalid and discard its argument.
If any environment-specified resolver options are specified, force cgo.
If any flag is set, we run only those checks requested.
If any flags are explicitly set to true, only those tests are run.
If any generator returns an error exit status, "go generate" skips all further processing for that package.
If any goroutine exceeds this limit while growing its stack, the program crashes.
If any key usage is acceptable then we're done.
If any of the readers return a non-nil, non-EOF error, Read will return that error.
If any of these happen, all bets are off and all exported methods of reachable types are marked reachable.
If any of this module's typelinks match a type from a prior module, prefer that prior type by adding the offset to this module's typemap.
If any package in a build includes a .cc or other file compiled by the C++ compiler, the go tool will use the -extld option to set the host linker to the C++ compiler.
If any pointer so reached is nil, allocation must be done.
If any pointer so reached is nil, no bytes are written.
If any procs are sleeping on addr, wake up at most cnt.
If any string contains a NUL byte this function panics instead of returning an error.
If any string contains a NUL byte, it returns (nil, EINVAL).
If anybody needs it we'll need to decide how to expose it in the API.
If asked to move to or from a Gscanstatus this will throw.
If atEOF is true, however, data may be non-empty and, as always, holds unprocessed text.
If available, the result implements types.ImporterFrom.
If b is not 0 or 1, SetBit will panic.
If b is too small to hold a valid stat message, ErrShortStat is returned.
If body is true, DumpRequest also returns the body.
If both are EndSequence, then the only other valid field is Address.
If both are specified the f.zero flag is ignored and padding with spaces is used instead.
If both are specified, Dialer takes precedence.
If both name and value match, i is the matched index and nameValueMatch becomes true.
If both name and value match, nameValueMatch becomes true.
If bounded is true then this address does not require a nil check for its operand even if that would otherwise be implied.
If buf is too small to fit the stored value it returns ErrShortBuffer error along with the required buffer size n.
If buffer is empty, reset to recover space.
If buffer is size 0, receive value directly from sender.
If bugs need to be fixed in the underlying code, find ways to fix them that do not affect the outputs.
If c has a ConnectionState method like a *tls.Conn, the ConnectionState is used to verify the TLS ciphersuite and to set the Request.TLS field in Handlers.
If c is nil or c.Name is invalid, the empty string is returned.
If c.Stderr was nil, Output populates ExitError.Stderr.
If c.Stdin is not an *os.File, Wait also waits for the I/O loop copying from c.Stdin into the process's standard input to complete.
If cfg is nil, a new zero tls.Config is returned.
If cgo is not enabled, ignore cgo supporting sources just as we ignore go files containing import "C".
If clear is true, any incoming error is cleared before return.
If clear is true, ordertemp emits code to zero the temporary.
If cmp (a bool) is true, panic using the given function.
If commaok is false, resok will be nil.
If content inside parameter (reached via indirection) escapes to heap, mark as such.
If content is large, an alternative to setting Content is to set File, which names a file in the testdata/ directory containing the uncompressed expected content.
If content is very large, an alternative to setting Content or File is to set Size, which will then be checked against the header-reported size but will bypass the decompressing of the actual data.
If copying .args, that's all the results, so record definition sites for them for the liveness analysis.
If copying result bytes back, the caller must pass the argument frame type as argtype, so that call can execute appropriate write barriers during the copy.
If copying result bytes back, the caller should pass the argument frame type as argtype, so that call can execute appropriate write barriers during the copy.
If coverage is not enabled, Coverage returns 0.
If crash is set, crash (core dump, etc) after tracebacking.
If cue is too big for the buffer, leave the end for the next Read.
If d is negative, it is ignored.
If d.reachable is false on entry, stmt itself is dead.
If d4 recovers and frame 5 continues running, d3, d3 can recover and we'll resume execution in (returning from) frame 3.)
If data is not a multiple of gcmBlockSize bytes long then the remainder is zero padded.
If data is obviously malformed, an error is returned but in general it is not recommended to call BImportData on untrusted data.
If debug.go is compiled into the program , debugFunc prints a human-readable representation of the gob data read from r by calling that file's Debug function.
If debugFormat is set, each integer and string value is preceded by a marker and position information in the encoding.
If defer was started by earlier panic or Goexit (and, since we're back here, that triggered a new panic), take defer off list.
If didn't parse enough, expand ellipsis.
If dir is the empty string, TempDir uses the default directory for temporary files (see os.TempDir).
If dir is the empty string, TempFile uses the default directory for temporary files (see os.TempDir).
If doIndent is set, multi-line identifier lists in the spec are indented when the first linebreak is encountered.
If doLabel is set, it also defines the labels collect for this Prog.
If done is nil, Go will allocate a new channel.
If dot is true, consumeAtom parses an RFC 5322 dot-atom instead.
If dot is true, period is included.
If dp already contains an entry for name, that entry is overwritten.
If dst implements the ReaderFrom interface, the copy is implemented using it.
If e is nil, the value will be discarded.
If e is not an element of l, the list is not modified.
If e represents a value as opposed to a pointer, the answer won't get back to the caller.
If e was marked as unimplemented, anything could happen.
If e.typ appeared multiple times at this depth, f.typ appears multiple times at the next depth.
If earlyCloseFn is non-nil and Close is called before io.EOF is seen, earlyCloseFn is called instead of fn, and its return value is the return value from Close.
If either is nil, Run connects the corresponding file descriptor to the null device (os.DevNull).
If either isZero or isP is 0, then we should return 1.
If either of r's dimensions is less than 2*n then an empty rectangle near the center of r will be returned.
If either of these is not true, SetFinalizer aborts the program.
If either the map or the key is unexported, though, the result will be considered unexported.
If ellipsis is valid, the argument is followed by ...
If empty now, it had only slashes.
If empty, the Request.Write method uses the value of URL.Host.
If empty, the default will be used.
If enabled (the default), the Reader expects the input to be a sequence of individually gzipped data streams, each with its own header and trailer, ending at EOF.
If encoding/bit allocation changes you can regenerate these files by using the -update flag.
If err is a scanner.ErrorList, its String will print just the first error and then (+n more errors).
If err is nil, the connection was successfully returned to the idle pool.
If err is non-nil, it describes why not.
If escapeNewline is true, newline characters will be escaped.
If every character is printable ASCII, quoting is simple.
If exactly one exists, it will be returned in *save (if save is not nil), and dotlist will contain the path of embedded fields traversed to find it, in reverse order.
If exactly one exists, it will be returned in *save (if save is not nil).
If except is one of the top-level children, it will not be copied.
If executed this template will produce the text ONE TWO By construction, a template may reside in only one association.
If explicit test files are specified, only check those.
If external IPv4 connectivity exists, we can try dialing non-node/interface local scope IPv4 addresses.
If external IPv6 connectivity exists, we can try dialing non-node/interface local scope IPv6 addresses.
If f and g return different answers, CheckEqual returns a *CheckEqualError describing the input and the outputs.
If f calls Run, the result will be an estimate of running all its subbenchmarks that don't call Run in sequence in a single benchmark.
If f does not return consistent results for a given c, FieldsFunc may crash.
If f ever returns false, visitComponents returns false without any more calls to f.
If f is a function with the appropriate signature, HandlerFunc(f) is a Handler that calls f.
If f is not finite, SetFloat returns nil.
If f returns false on a given input, Check returns that input as a *CheckError.
If f returns true, Inspect invokes f recursively for each of the non-nil children of node, followed by a call of f(nil).
If f.Sensitive is false and indexing is true, "Incremental Indexing" representation is used.
If f.Sensitive is false and indexing is true, "Inremental Indexing" representation is used.
If f.Sensitive is true, "Never Indexed" representation is used.
If f.sharp is set a raw (backquoted) string may be returned instead if the string does not contain any control characters other than tab.
If false, the Write methods will prefer to return an error rather than comply.
If false, then setgroups syscall will be disabled for the child process.
If fargs are provided, repr is used as a format for fmt.Sprintf.
If fi describes a directory, a slash is appended to the name.
If fi describes a symlink, FileInfoHeader records link as the link target.
If fields (or methods) have been removed, the corresponding struct or interface type has the Incomplete field set to true.
If file contains a slash, it is tried directly and the PATH is not consulted.
If filter is non-nil, the disassembly only includes functions with names matching filter.
If finishsweep_m is done with the world stopped this is not required because the STW must have waited for sweeps.
If five in a row all fail, give up.
If flush is true, Decode assumes that src represents the end of the input stream and processes it completely rather than wait for the completion of another 32-bit block.
If fmt.Sscan thinks it's complex, it's complex.
If fn has no body (is defined outside of Go), cannot inline it.
If followed by dot, might be in trailing IPv4.
If forceTrigger is true, it ignores the current heap size, but checks all other conditions.
If fork fails there is nothing to wait for.
If found, consume everything up to the boundary.
If fracOk is set, an octal prefix is ignored (a leading ``0'' simply stands for a zero digit), and a period followed by a fractional part is permitted.
If fracOk is set, the base argument must be one of 0, 2, 10, or 16.
If framepointer_enabled and there's a frame, then there's a saved bp here.
If further waits are made on the channel without draining it first then those waiters will never wake up.
If g and n are not relatively prime, the result is undefined.
If gcBlackenPromptly is true, per-P gcWork caches should be flushed immediately and new objects should be allocated black.
If gcCompatibilityMode is set, printing of types is modified to match the representation of some types in the gc compiler:
If gccgo is not available or not new enough call t.Skip.
If getRune reaches EOF, the return value is EOF (-1).
If given no arguments, it sorts standard input to standard output.
If going for first match, we're done.
If handler is nil, http.DefaultServeMux is used.
If hash is zero then hashed is used directly.
If hash is zero, hashed is signed directly.
If here, the register assignment was lost down at least one exit and it can't be sunk
If host has colons or a percent sign, have to bracket it.
If host is omitted, as in ":8080", Listen listens on all available interfaces instead of just the interface with the given host address.
If host is omitted, as in ":8080", ListenPacket listens on all available interfaces instead of just the interface with the given host address.
If https://codereview.appspot.com/169040043 is submitted, and this test is changed to pass -complete to the compiler, then we can uncomment the copy lines again.
If i and j are same register, len is constant 0.
If i and k are same register, cap is constant 0.
If i is a nil interface value, TypeOf returns nil.
If id is an anonymous struct field, ObjectOf returns the field (*Var) it uses, not the type (*TypeName) it defines.
If ifaceIndir(typ), code can assume that flagIndir is set.
If ignoring, Send this process a SIGHUP.
If in -long mode, it then runs a test of all the prefix possibilities followed by all possible 2-byte sequences.
If in -short mode, that's all.
If in a transaction, else both nil:
If in reverse we can only do 8, 4, 2 or 1 bytes at a time.
If indent is set, a multi-line identifier list is indented after the first linebreak encountered.
If inheritTime is true, gp inherits the remaining time in the current time slice.
If inheritTime is true, gp should inherit the remaining time in the current time slice.
If initsig does not install a signal handler for a signal, then to go back to the state before Notify we should remove the one we installed.
If inplace is false, it converts the OAPPEND expression n to an ssa.Value, adds it to s, and returns the Value.
If inplace is false, process as expression "append(s, e1, e2, e3)":
If inplace is true, it writes the result of the OAPPEND expression n back to the slice being appended to, and returns nil.
If input is supplied and the compression savings are below 1/16th of the input size the block is stored.
If instead the generated code looked like:
If int is 64 bits, these huge numbers do fit in an int, so they are not rejected at compile time.
If interfaces are involved, stop now with the good message from assignop.
If invoked with -pack, the compiler writes an archive directly, bypassing the intermediate object file.
If ip is not an IP address (it is the wrong length), To16 returns nil.
If ip is not an IPv4 address, To4 returns nil.
If isDecl is true, n is being declared.
If isLit is set, s is escaped w/ tabwriter.Escape characters to protect s from being interpreted by the tabwriter.
If it appears multiple times in the pattern, it must match the same expression each time.
If it attempts to use more than this many, the program crashes.
If it can't remove barriers from a G immediately, it will simply skip it.
If it cannot find any format string parameter, it returns  ("", -1).
If it contains slashes, it begins with a package path.
If it did, it would see inconsistent state and would either record an incorrect stack or crash because the stack was malformed.
If it does not find work it takes itself out of the spinning state and then parks.
If it does not, a new underlying array will be allocated.
If it does not, depending on t's contents before calling ParseFiles, t.Execute may fail.
If it does, it also drops the file from the to-be-processed list.
If it does, that's tricky because we want to exclude the body of the function from this block.
If it does, we panic.
If it doesn't exist, or if we're doing the c command, indicated by O_TRUNC, truncate the archive.
If it doesn't fit the syntax, emit an enclosing block starting with the init statements.
If it encounters an error before the end of the directory, Readdir returns the FileInfo read until that point and a non-nil error.
If it encounters an error before the end of the directory, Readdirnames returns the names read until that point and a non-nil error.
If it exists and is an executable file, remove it.
If it exists but is not an archive, existingArchive will exit.
If it finds one, it returns that type.
If it gets confused, it returns 0.
If it happens twice more, we relent and use the result.
If it happens, try again.
If it has a slash, it must be a package path but there is a symbol.
If it has a slash, we've failed.
If it has sufficient capacity, the destination is resliced to accommodate the new elements.
If it has two and the returned error is non-nil, execution terminates and an error is returned to the caller as the value of Execute.
If it hasn't made it to the list yet we won't find it, but it won't park itself once it sees the new notify number.
If it is a Go object, it returns nil.
If it is a heavy weight allocation the caller must determine whether a new GC cycle needs to be started or if the GC is active whether this goroutine needs to assist the GC.
If it is a host object (an object compiled by a non-Go compiler) it returns the Hostobj pointer.
If it is a local import path but names a standard package, we treat it as if the user specified the standard package.
If it is a small variable captured by value, downgrade it to PAUTO.
If it is an error we are done.
If it is and one is found, the return value is negative.
If it is less than 128, it is sent as a byte with that value.
If it is negative, the input did not match the string.
If it is nil, the result of Environ will be used.
If it is possible to remove an input without changing any other inputs, a later build will think the object is up-to-date when it is not.
If it is set, only this and the Address field are meaningful.
If it is too long for octal, and PAX is preferred, use a PAX header.
If it isn't already marked, mark it and enqueue into gcw.
If it isn't possible for this to be a onepass Prog, the Prog notOnePass is returned.
If it parses, it'll be OK.
If it proves to be a performance hit we should be able to make these simple atomic stores but for now we are going to throw if we see an inconsistent state.
If it resolves, it a) has correctly resolved, or b) incorrectly resolved because the key is a struct field with a name matching another identifier.
If it returns ANOEQ, it also returns the component type of t that makes it incomparable.
If it returns a non-nil error, the SMTP client aborts the authentication attempt and closes the connection.
If it returns an empty string, only the object name O is printed.
If it returns an error, the outer call to Unmarshal stops and returns that error.
If it returns false, no dst pixels were changed.
If it returns false, z is not prime.
If it sits above an opVerticalBar, swap it below (things below an opVerticalBar become an alternation).
If it was a ODIV/OMOD walk might rewrite it.
If it was a read error (because the child died itself), then the extra kill of an already-dead process is harmless (the PID won't be reused until the Wait above).
If it was replaced and this is a negation, replace with fnot(p).
If it was used recursively, just restore the old state.
If it's SIGHUP, maybe we'll die.
If it's SIGWINCH, we should not see it.
If it's a byte (sic) in the string, it puts it in the buffer and returns true.
If it's a function, we must call it.
If it's a map, attempt to use the field name as a key.
If it's a method, fun already has the receiver bound, so it looks just like a function call.
If it's a multiple of any of these primes we add two until it isn't.
If it's actually 0 bytes and the handler never looked at the Request.Method, we just don't send a Content-Length header.
If it's alarm, we should not see it.
If it's hangup, maybe we'll die.
If it's just that there are no go source files, that's fine.
If it's larger than four entries, then one or more extension headers are used to store the rest of the sparse map.
If it's longer than 10, we won't scale.
If it's non-nil, the rest of the fields are unused.
If it's not changing, keep going.
If it's okay to do either, then round to the nearest one.
If it's okay to do only one, do it.
If it's pointer to struct, that's equivalent in our analysis to whether we can print the struct.
If it's stale, ignore the timer event.
If it's windows, don't show the .exe suffix.
If j and k are same register, len and cap are same.
If key is not present, FormValue returns the empty string.
If key is not present, PostFormValue returns the empty string.
If key is too big, hash it.
If keys and values have no pointers, the map implementation can keep a list of overflow pointers on the side so that buckets can be marked as having no pointers.
If l is nil, Serve accepts connections from os.Stdin.
If laddr has a port of 0, ListenTCP will choose an available port.
If laddr has a port of 0, ListenUDP will choose an available port.
If laddr is not nil, it is used as the local address for the connection.
If left or right is invalidNodeValue then the child is a left node and its value is in leftValue/rightValue.
If level is 0, suppress all tracebacks.
If level is 1, show tracebacks, but exclude runtime frames.
If level is 2, show tracebacks including runtime frames.
If lhs exists, declare a corresponding variable in the case-local scope.
If lhs exists, we must have at least one lhs variable that was used.
If lhs is set and the result is an identifier, it is not resolved.
If loading from memory, do conversion during load, so as to avoid use of 8-bit register in, say, int(*byteptr).
If local list is empty, grab a batch from global list.
If local list is too long, transfer a batch to the global list.
If looking for specific register kind, must check type and reg value range.
If lookup is nil, the default package lookup mechanism for the given compiler is used.
If m is nil or there is no such element, delete is a no-op.
If m's color model is not a color.Palette, then ColorIndexAt's behavior is undefined.
If main section has no bits, nothing to relocate.
If main section is SHT_NOBITS, nothing to relocate.
If maintaining the list of bad words is too onerous, we could just do this always on Windows.
If mapping returns a negative value, the character is dropped from the string with no replacement.
If mark is not an element of l, the list is not modified.
If marked "go:noinline", don't inline
If marked we have nothing to do.
If mask is a sequence of 1 bits followed by 0 bits, return the number of 1 bits.
If math is in another shared library, then that's also the shared library that contains runtime, so something will depend on it and so math's staleness will be checked when processing that library.
If max is non-nil, n must be a full slice expression.
If maxLen is greater than 0, attempts to write more to buf than maxLen bytes will return ErrStringLength.
If maxOpen is significantly larger than connectionRequestQueueSize then it is possible for ALL calls into the *DB to block until the connectionOpener can satisfy the backlog of requests.
If min is greater than the length of buf, ReadAtLeast returns ErrShortBuffer.
If mode has Background set, this command is being run as a Background job.
If mode has CheckExit set and the command fails, run calls fatal.
If mode has ShowOutput set and Background unset, run passes cmd's output to stdout/stderr directly.
If modtime is not the zero time or Unix epoch, ServeContent includes it in a Last-Modified header in the response.
If more is false, there are no more callers (the Frame value is valid).
If more than 8 keys hash to a bucket, we chain on extra buckets.
If more than one row matches the query, Scan uses the first row and discards the rest.
If multiple rules match, the first one in file order is selected.
If multiple servers are terminating connections for the same host they should all have the same SessionTicketKey.
If multiple values for the same key exists, only the most recent value is used.
If multiples is set, every function in list appears multiple times and is treated as a collision.
If multiples is set, f appears multiple times and is treated as a collision.
If n does not refer to computed addresses (that is, if n only refers to variables whose addresses have not been taken), no aliasing.
If n is larger then len(s), it is padded with NUL bytes.
If n is negative, Grow will panic.
If n is not being flushed to memory after each modification, the result will be a stale value of n.
If n is not on the stack, stkof returns -1000.
If n is on the stack but in an unknown location (due to array index arithmetic), stkof returns +1000.
If n ops run in under a second and the ratio doesn't work out, make n bigger, trying to reduce the effect that a constant amount of overhead has on the computed ratio.
If name contains no path separators, Command uses LookPath to resolve the path to a complete name if possible.
If name has enough dots, try unsuffixed first.
If name is not an absolute path and is not a known system DLL used by Go, Windows will search for the named DLL in many locations, causing potential DLL preloading attacks.
If name is rooted (trailing dot), try only that name.
If necessary, it performs sweeping to prevent going in to debt.
If necessary, this will seek backwards to find pc.
If needUSize is true still, it means we didn't see a zip64 extension.
If needm finds that it has taken the last m off the list, its job is - once it has installed its own m so that it can do things like allocate memory - to create a spare m and put it on the list.
If neg is set, u is treated as negative int64 value.
If net.Dialer.DualStack ("Happy Eyeballs") support is enabled, this may be called multiple times.
If net.Dialer.DualStack (IPv6 "Happy Eyeballs") support is enabled, this may be called multiple times.
If network is empty, Dial will connect to the local syslog server.
If new is marked as not escaping, the compiler will make incorrect escape analysis decisions about the pointer value being stored.
If new, assign next number using uniq, record in remap, record in lv.livepointers and lv.argslivepointers under the new index, and add entry to hash table.
If newData is nil, f.Data will be nil.
If newSection is set, the first line break is printed as formfeed.
If newline removed, then break will consume label leaving code invalid.
If newname already exists and is not a directory, rename replaces it.
If newname still contains slashes after removing the oldname prefix, the rename is cross-directory and must be rejected.
If newpath already exists, Rename replaces it.
If next if false, runqput adds g to the tail of the runnable queue.
If next is true, runqput puts g in the _p_.runnext slot.
If nil, BaseConfig.Handler is used.
If nil, DefaultTransport is used.
If nil, a CGI response with a local URI path is instead sent back to the client and not redirected internally.
If nil, a GET request is assumed.
If nil, a local address is automatically chosen.
If nil, default values are used.
If nil, defaults are used.
If nil, http.DefaultTransport is used.
If nil, logging goes to os.Stderr via the log package's standard logger.
If nil, the check is disabled.
If nil, the default configuration is used.
If nil, the default is used.
If nil, the leaf certificate will be parsed as needed.
If nil, we've already verified it
If nilokay is false, lockextra will keep waiting until the list head is no longer nil.
If nilokay is true, then lockextra will return a nil list head if that's what it finds.
If no DEK-Info header is present, an error is returned.
If no Error function is set, the error is reported to os.Stderr.
If no IsIdentRune function is set, regular Go identifiers are accepted instead.
If no MarshalJSON method is present but the value implements encoding.TextMarshaler instead, Marshal calls its MarshalText method.
If no PEM data is found, p is nil and the whole of the input is returned in rest.
If no ServerName is set, infer the ServerName from the hostname we're connecting to.
If no additional symbol offset, we're done.
If no addresses fault, we'll fail the test.
If no buffer is provided, GetValue returns the value's type only.
If no buffer is provided, it returns true and actual buffer size n.
If no byte is available, it returns error io.EOF.
If no byte is available, returns an error.
If no bytes are available, the error returned is io.EOF.
If no character is available, err will be set.
If no closure vars, don't bother wrapping.
If no computed addresses are affected by the writes, no aliasing.
If no content type, apply sniffing algorithm to body.
If no default value is given then the zero value for the type is assumed to be the default value.
If no end is specified, range extends to end of the file.
If no entry is found, a nil object is returned.
If no error is returned, then the named templates have been modified.
If no file was found, an empty filename is returned.
If no flag was specified, don't run benchmarks.
If no import decl found, add one after the last import.
If no import paths are given, the action applies to the package in the current directory.
If no match is found, the shell reports an error and command processing completes.
If no more serious errors are encountered, Unmarshal returns an UnmarshalTypeError describing the earliest such error.
If no object is found and collectUnresolved is set, x is marked as unresolved and collected in the list of unresolved identifiers.
If no period is present, a default precision is used.
If no row matches the query, Scan returns ErrNoRows.
If no signals are provided, all incoming signals will be ignored.
If no signals are provided, all incoming signals will be relayed to c.
If no signals are provided, all signal handlers will be reset.
If no start is specified, end specifies the range start relative to the end of the file.
If no such Node currently exists, an ONONAME Node is returned instead.
If no such path exists, dotpath returns nil.
If no such scope and object exists, the result is (nil, nil).
If no such type has been declared yet, a forward declaration is returned.
If no such variant exists, this returns 0.
If no such version exists it retrieves the most recent version of the package.
If non-nil, attach to this p on park.
If non-nil, done must be buffered or Go will deliberately crash.
If non-nil, entry i becomes file descriptor 3+i.
If non-nil, file descriptor to close.
If non-nil, rand is a source of random numbers.
If non-nil, the Values function generates a slice of arbitrary reflect.Values that are congruent with the arguments to the function being tested.
If none exist, more will indicate whether t contains any embedded fields at depth d, so callers can decide whether to retry at a greater depth.
If none of them apply, then we fall back to a general but slow implementation.
If none, it returns nil.
If nospill is set the allocated register is marked nospill so the assignment cannot be undone until the caller allows it by clearing nospill.
If not a control flow statement, it is a declaration, expression, call, etc.
If not enough space, grab another page of initial space at the beginning of the output file.
If not every byte value is used in the block (i.e., it's text) then the symbol set is reduced.
If not in -long mode, that's all.
If not mentioned, all args take signed inputs, or don't care whether their inputs are signed or unsigned.
If not nil, it overrides Name and Line.
If not nil, writeLoop blocks sending request body until it receives from this chan.
If not present, Ginsboolval will be emulated with jumps.
If not required it can be empty.
If not set, default value comes from running the compiler, which may be set by the -extld option.
If not specify Dir on windows, working directory should be base directory of perl.
If not zero, then a padding error during decryption will cause a random plaintext of this length to be returned rather than an error.
If not, MatchRunePos returns -1.
If not, MustHaveExec calls t.Skip with an explanation.
If not, MustHaveExternalNetwork calls t.Skip with an explanation.
If not, MustHaveGoBuild calls t.Skip with an explanation.
If not, consume only as much of the peek buffer as cannot hold the boundary string.
If not, it returns a new package containing just an appropriate error.
If not, it returns nil with the cache locked.
If not, it will update the destination variables with values read from the stream.
If not, its contents should not be modified until the Writer is closed.
If not, or if our src isn't a regular file, just fall back to the normal copy method.
If not, recompute it.
If not, return it unchanged.
If not, something is wrong.
If not, the caller typically crashes the program.
If not, then there is a bug somewhere and the garbage collection or stack growth may not have seen the correct picture of the stack.
If not, vet complains about arguments that look like format descriptor strings.
If not, we fall through and complain about the original one.
If nothing else, this keeps archive/zip working with 42.zip.
If nothing is available wait until all the other gc helpers have finished and then return nil.
If nothing matches, return the first certificate.
If old is empty, it matches at the beginning of the slice and after each UTF-8 sequence, yielding up to k+1 replacements for a k-rune slice.
If old is empty, it matches at the beginning of the string and after each UTF-8 sequence, yielding up to k+1 replacements for a k-rune string.
If one argument to the comparison is an empty string, comparing the lengths instead will yield the same result without the function call.
If one does, its documentation states the conditions explicitly.
If one exists, it might list other TLDs (besides .local) or even '*', so just let libc deal with it.
If one has been sent since notifyListAdd was called, it returns immediately.
If one is not immediately available return nil go:nowritebarrier
If one is present, it appends the characters to r and returns the new slice r and the remainder of the string.
If one needs to abstract over the public-key primitive, the PrivateKey struct implements the Decrypter and Signer interfaces from the crypto package.
If one of the operands is Unknown, the result is Unknown.
If one of the operands is Unknown, the result is false.
If one of them is Unknown, both results are Unknown.
If one of them is numeric, both of them must be numeric.
If one or more variable names is given as arguments,  env prints the value of each named variable on its own line.
If only name matches, i points to that index and nameValueMatch becomes false.
If op is not a binary operator, the result is LowestPrecedence.
If op is not satisfied, code falls through to the next emitted instruction.
If optimizations are disabled (-N), this code is not used.
If opts.Roots is nil and system roots are unavailable the returned error will be of type SystemRootsError.
If other packages are compiled in "external only" mode, then the final link will be an external one.
If out is true, then code is also produced to zero-initialize their stack memory addresses.
If outfile is empty, it writes the report to a temporary file and opens it in a web browser.
If output is nil, os.Stderr is used.
If p does not point into the heap or no span contains p, spanOf returns nil.
If p is a global, use the data or BSS bitmaps to execute write barriers.
If p is a tool, delay the installation until the end of the build.
If p is empty it returns (RuneError, 0).
If p is less than 1, this call will have no effect.
If p is transmitted a second time, the type is already known so the output will be just: 07 ff 82 01 2c 01 42 00 A single non-struct value at top level is transmitted like a field with delta tag 0.
If p points into an allocated object, it can be advanced through the object by conversion to uintptr, addition of an offset, and conversion back to Pointer.
If p was not zero, then n is now non-zero.
If p1 is in a shared library, put the action for that into a.deps, otherwise put the action for p1 into a.deps.
If parameter content escapes to heap, set EscContentEscapes Note minor confusion around escape from pointer-to-struct vs escape from struct
If parent is equal to template then the certificate is self-signed.
If parent is false, the returned ip corresponds to the given name, and elem is the empty string.
If parent is true, the walk stops at the next-to-last element in the name, so that ip is the parent directory and elem is the final element in the path.
If parent is x/y/z, then path might expand to x/y/z/vendor/path, x/y/vendor/path, x/vendor/path, vendor/path, or else stay path if none of those exist.
If parent.ImportPath is 'command-line-arguments'.
If parsing fails or an integer overflow occurs, err will be set.
If parsing is successful, it will slice off the currently read record and return the remainder as r.
If path is already a directory, MkdirAll does nothing and returns nil.
If path is empty, the result is ".".
If path is relative the result will be relative to the current directory, unless one of the components is an absolute symbolic link.
If path starts with a drive letter we're stuck with it regardless.
If pattern contains a host name, strip it and use remaining path for redirect.
If pc is not covered by any entry in this line table, SeekPC returns ErrUnknownPC.
If pc is not covered by any unit, SeekPC returns ErrUnknownPC and the position of the reader is undefined.
If pconn is no longer needed or not in a good state, tryPutIdleConn returns an error explaining why it wasn't registered.
If people misuse the ,string modifier, the error message should be helpful, telling the user that they're doing it wrong.
If performance is important, the compiler should be changed to recognize the pattern so that all code doing three-way comparisons, not just code using strings.Compare, can benefit.
If permissive is true, consumeAtom will not fail on leading/trailing/double dots in the atom (see golang.org/issue/4938).
If pkg was loaded from export data, Imports includes packages that provide package-level objects referenced by pkg.
If pkg/obj/libgc.a exists, it is a dreg from before we used subdirectories of obj.
If pkg/os/getwd.go gets ENOTSUP, it will fall back to the slow algorithm.
If pos is not within any scope, the result is nil.
If pos is out-of-range, safePos returns the EOF position.
If possible to convert decimal representation to 64-bit float f exactly, entirely in floating-point math, do so, avoiding the expense of decimalToFloatBits.
If possible, Seek to the last byte before the end of the data section.
If possible, external implementations should implement ImporterFrom.
If possible, populate additional fields from OS-specific FileInfo fields.
If possible, we always want to encode IPv4 addresses in 4 bytes.
If prefix is too long, LookupN panics.
If present, each must be a valid Go identifier.
If printTests is set, we record the coverage value before and after, and we write out the inputs for which coverage went up, in the format expected in testdata/decode.text.
If produced, it is done before encoding f.
If profiling is turned off and all the profile data accumulated while it was on has been returned, CPUProfile returns nil.
If putelfsym created a local version of this symbol, use that in all relocations.
If q is large, it is recursively "split in half" by nat/nat division using tabulated divisors.
If r and s point to different rings, linking them creates a single ring with the elements of s inserted after r.
If r and s point to the same ring, linking them removes the elements between r and s from the ring.
If r does not also implement io.ByteReader, it will be wrapped in a bufio.Reader.
If r does not also implement io.ByteReader, the decompressor may read more data than necessary from r.
If r does not implement io.ByteReader, NewDecoder will do its own buffering.
If r is not already an io.ByteReader, it will be converted via a bufio.Reader.
If r is not nil, Symbols restricts the list to symbols with names matching the regular expression.
If r1 and r2 are Rectangles, r1.Intersect(r2) is not guaranteed to be inside either r1 or r2 if the intersection is empty.
If rand is not nil then RSA blinding will be used to avoid timing side-channel attacks.
If reading from file, create a reader with
If recover is called outside the deferred function it will not stop a panicking sequence.
If recurse is set, it also writes nested (children) scopes.
If recursive is false, the list consists of only a single function and its closures.
If recursive is true, the list may still contain only a single function, if that function is itself recursive.
If ref is an absolute URL, then ResolveReference ignores base and returns a copy of ref.
If renegotiation is disabled then this is either zero or one.
If repo is not a URL, it's not secure.
If reportOnly is true, it does not emit static data and does not modify the AST.
If req.Close equals true, the keepalive connection is logically closed after this request and the opposing server is informed.
If requestedSigAlgo is not zero then it overrides the default signature algorithm.
If res and src are the same, we can avoid writing to base and cap unless we grow the underlying array.
If res is nil, it generates a branch.
If res is nil, it inserts a branch to to.
If res is non-nil, it inserts appropriate value generation instructions.
If returnImports is true and name denotes a Go program, matchFile reads until the end of the imports (and returns that data) even though it only considers text until the first non-comment.
If returnPos is valid, initVars is called to type-check the assignment of return expressions, and returnPos is the position of the return statement.
If returns is false, the block is marked as an exit block.
If returns is true, the block is marked as a call block.
If reuse is true, it passes the removed regexp (if no longer needed) to p.reuse.
If rt.RoundTrip returns ErrSkipAltProtocol, the Transport will handle the RoundTrip itself for that one request, as if the protocol were not registered.
If run, expected output is 42 M0
If runtime triggers a forced GC during this test then it will deadlock, since the goroutines can't be stopped/preempted during spin wait.
If runtime triggers a forced GC during this test then it will deadlock, since the goroutines can't be stopped/preempted.
If s If s contains a NUL byte this function panics instead of returning an error.
If s already contains an alternative object alt with the same name, Insert leaves s unchanged and returns alt.
If s already contains an alternative object alt with the same name, insert leaves s unchanged and returns alt.
If s contains a NUL byte at any location, it returns (nil, EINVAL).
If s contains a NUL byte this function panics instead of returning an error.
If s contains a space or invalid header field bytes, it is returned without modifications.
If s doesn't end with suffix, s is returned unchanged.
If s doesn't start with prefix, s is returned unchanged.
If s is ASCII without special characters, it is returned unchanged.
If s is empty it returns (RuneError, 0).
If s is longer than 2 bytes then the third byte must be e.
If s is nil, the virtual address has never been part of the heap.
If s is not a valid textual representation of an IP address, ParseIP returns nil.
If s is well-formed and near a valid floating point number, ParseFloat returns the nearest floating point number rounded using IEEE754 unbiased rounding.
If s must be rewritten, it is rewritten in place.
If s starts with any of the IllegalPrefixes, the result is the empty string.
If s.curBlock is nil, then we're about to generate dead code.
If scheme is non-empty, that scheme is forced.
If sensitive is false and indexing is true, type byte for "Incremental Indexing" representation is returned.
If sensitive is true, type byte for "Never Indexed" representation is returned.
If sep is an empty slice, Count returns 1 + the number of Unicode code points in s.
If sep is an empty string, Count returns 1 + the number of Unicode code points in s.
If sep is empty, Split splits after each UTF-8 sequence.
If sep is empty, SplitAfter splits after each UTF-8 sequence.
If sep is empty, SplitAfterN splits after each UTF-8 sequence.
If sep is empty, SplitN splits after each UTF-8 sequence.
If set on an unstarted server before StartTLS is called, existing fields are copied into the new config.
If set to zero, it does not permit either escape and allows both quote characters to appear unescaped.
If set true and no cached connection is available, RoundTripOpt will return ErrNoCachedConn.
If set, comments that are not associated with a specific AST node (as Doc or Comment) are excluded.
If set, duplicate function declarations are excluded.
If set, duplicate import declarations are excluded.
If set, print log statements for internal and I/O errors.
If several sigsends and signal_recv execute concurrently, it can lead to unnecessary rechecks of sig.mask, but it cannot lead to missed signals nor deadlocks.
If shouldBuild finds a //go:binary-only-package comment in a file that should be built, it sets *binaryOnly to true.
If sig is true: all writes should fail with EPIPE and then exit 0.
If skipSpace is set, peekByte skips leading spaces and comments.
If so, HasSubdir sets rel to a slash-separated path that can be joined to root to produce a path equivalent to dir.
If so, attempt to determine which VCS it uses.
If so, gcworkdone will be set and gcphasework will simply return.
If so, ignore n and defer data generation until codegen.
If so, it returns the remainder of s (after the match).
If so, it rewrites *vpp to point into the new stack.
If so, it sets rel to the path fragment that must be appended to root to reach dir.
If so, m.matchcap holds the submatch information.
If so, the Importer can return the map entry.
If so, we shouldn't even read a per-row filter type byte, so return early.
If some data is available but not len(p) bytes, Read conventionally returns what is available instead of waiting for more.
If some data is available but not len(p) bytes, ReadAt blocks until either all the data is available or an error occurs.
If some non-Go code called sigaltstack, adjust.
If something else could use them, we could arrange to preserve them.
If specifies a BlockIf.
If spinning is set, the caller has incremented nmspinning and startm will either decrement nmspinning or set m.spinning in the newly started M.
If src contains invalid ascii85 data, Decode will return the number of bytes successfully written and a CorruptInputError.
If src contains invalid base32 data, it will return the number of bytes successfully written and CorruptInputError.
If src contains invalid base64 data, it will return the number of bytes successfully written and CorruptInputError.
If src implements the WriterTo interface, the copy is implemented by calling src.WriteTo(dst).
If src was short, discard the low destination bytes.
If srv.Addr is blank, ":http" is used.
If srv.Addr is blank, ":https" is used.
If stats.PauseQuantiles is non-empty, ReadGCStats fills it with quantiles summarizing the distribution of pause time.
If stored on disk, the File's underlying concrete type will be an *os.File.
If sub contains op nodes, they all get hoisted up so that there is never a concat of a concat or an alternate of an alternate.
If sub.Go.Name is "_Ctype_struct_foo" or "_Ctype_union_foo" or "_Ctype_class_foo", use that as the Go form for this typedef too, so that the typedef will be interchangeable with the base type.
If successful it returns true, otherwise it returns false.
If successful, it returns one or more chains where the first element of the chain is c and the last element is from opts.Roots.
If successful, methods on the returned File can be used for I/O.
If successor is an unvisited backedge, it's in loop and we don't care.
If such object is not marked, we need to queue all finalizers at once.
If symbol is empty, it finds all exported types.
If symbol is empty, it prints all methods that match the name.
If symbol matches a type, output includes its methods factories and associated constants.
If sync is false, copystack protects against concurrent channel operations.
If sync is true, this is a self-triggered stack growth and, in particular, no other G may be writing to gp's stack (e.g., via a channel operation).
If systemstack is called from the per-OS-thread (g0) stack, or if systemstack is called from the signal handling (gsignal) stack, systemstack calls fn directly and returns.
If t has any fields/methods named s, then we're done.
If t is not recursively called, then c1 is an accurate output context.
If t's size is equal to or exceeds this limit, ChanOf panics.
If tag data follows then bytes 3+l and 3+l+1 are the tag length, with the data following.
If target is an absolute URL, the host name from the URL is used.
If that Entry did not have children or Next has not been called, SkipChildren is a no-op.
If that changes, compilation will fail (the constants in the composite literal will not fit in uint16) and the types here can change to uint32.
If that changes, this test will start failing and the number here will need to be updated.
If that fails, we try other 0xXXc0 addresses.
If that happens, we continue down the rabbit hole during the execution of f.
If that happens, we'll just get it on the next flush.
If that int is non-zero then __thrsleep() will immediately return EINTR without blocking."
If that is less than the number of arguments, err will report why.
If that means we print nothing at all, repeat forcing all frames printed.
If that method already gets the right answer without RawPath, leave it empty.
If that operand is invalid, unpack returns (nil, 0, false).
If that second value is present and evaluates to non-nil, execution terminates and the error is returned to the caller of Execute.
If that self-signed certificate is not a root or otherwise trusted certificate, an attempt is made to build a new chain.
If that were the end of the story then we would not need to manipulate handoff using atomic operations.
If that zone was in effect at the given time, use it.
If that's the only thing on the stack, we started with a name given on the command line, not an import.
If the "else" is followed immediately by an "if", the elseControl will have left the "if" token pending.
If the *itab is nil, return 0.
If the -a flag is given, rebuild everything.
If the -c or other flags are given, the code below will still use pkgname.test.exe.
If the -diff flag is set, no files are rewritten.
If the -exec flag is given, 'go run' invokes the binary using xprog: 'xprog a.out arguments...'.
If the -s option is present, objdump only disassembles symbols with names matching the regular expression.
If the .a file is newer than the .so, the .so is rebuilt (but not the .a)
If the AST is incorrect for the receiver, it assumes a function instead.
If the Body is not closed, the Client's underlying RoundTripper (typically Transport) may not be able to re-use a persistent TCP connection to the server for a subsequent "keep-alive" request.
If the Context field is 0, the context function is being called to record the current traceback context.
If the Context field is not 0, then it is a value returned by a previous call to the context function.
If the DWARF version is less then 4, it will disambiguate some forms depending on the attribute.
If the EOF occurs unexpectedly in a structured data stream, the appropriate error is either ErrUnexpectedEOF or some other error giving more detail.
If the File was created using NewFile directly instead of Open, Close has no effect.
If the GC asks for some work these are the only routines that make wbufs available to the GC.
If the GC cycle is over, just return.
If the GC is in some way dependent on this goroutine (for example, it needs a lock held by the goroutine), that small preemption turns into a real deadlock.
If the GC is running, we can't return a stack span to the heap because it could be reused as a heap span, and this state change would race with GC.
If the GC is trying to stop this g then it will set preemptscan to true.
If the GC skips the object and completes before the queuing can occur, it will incorrectly free the object.
If the GOBIN environment variable is set, commands are installed to the directory it names instead of DIR/bin.
If the GOPATH contains multiple entries, get uses the first one.
If the Go array is smaller than the JSON array, the additional JSON array elements are discarded.
If the Go compiler wrote an archive and the package is entirely Go sources, there is no pack to execute at all.
If the Go compiler wrote an archive, we only need to add the object files for non-Go sources to the archive.
If the Go program is started with a non-empty signal mask, that will generally be honored.
If the Go program is started with either SIGHUP or SIGINT ignored (signal handler set to SIG_IGN), they will remain ignored.
If the Go runtime sees an existing signal handler for the SIGCANCEL or SIGSETXID signals (which are used only on GNU/Linux), it will turn on the SA_ONSTACK flag and otherwise keep the signal handler.
If the Go signal handler is invoked on a non-Go thread not running Go code, the handler generally forwards the signal to the non-Go code, as follows.
If the Go version of this C type uses unsafe.Pointer, we can't use a type assertion, because the Go file might not import unsafe.
If the Header does not contain a Content-Type line, Write adds a Content-Type set to the result of passing the initial 512 bytes of written data to DetectContentType.
If the JSON array is smaller than the Go array, the additional Go array elements are set to zero values.
If the KindGCProg bit is set in kind, gcdata is a GC program.
If the MCache free list is empty, replenish it by taking a bunch of objects from the MCentral free list.
If the MCache free list is too long or the MCache has too much memory, return some to the MCentral free lists.
If the MCentral free list is empty, replenish it by allocating a run of pages from the MHeap and then chopping that memory into objects of the given size.
If the MHeap is empty or has no page runs large enough, allocate a new group of pages (at least 1MB) from the operating system.
If the MOVD is not needed, insert a hardware NOP so that the same number of instructions are used on ppc64 in both shared and non-shared modes.
If the P is not executing code (it is idle or in a syscall), this will call fn(p) directly while preventing the P from exiting its state.
If the PC is within any of the functions that does this, we don't ask for a traceback.
If the PC is zero, it's likely a nil function call.
If the PNG data looked like: ...
If the Pool holds the only reference when this happens, the item might be deallocated.
If the SectionAlignment is less than the architecture's page size, then FileAlignment must match SectionAlignment.
If the SessionTicketKey leaks, previously recorded and future TLS connections using that key are compromised.
If the Stream ID is zero, the window update applies to the connection as a whole.
If the Transport requests gzip on its own and gets a gzipped response, it's transparently decoded in the Response.Body.
If the Transport set it, only then do we transparently decode the gzip.
If the absolute address is the start of a symbol, use the name.
If the address's name contains non-ASCII characters the name will be rendered according to RFC 2047.
If the adjusted output is empty, the source was empty but (possibly) for white space.
If the allocation fails, it panics with ErrTooLarge.
If the argument has a wildcard in it, re-evaluate the wildcard.
If the argument io.Reader is already a Reader with large enough size, it returns the underlying Reader.
If the argument io.Writer is already a Writer with large enough size, it returns the underlying Writer.
If the argument is a nil pointer, ConvertValue returns a nil Value.
If the argument is a non-nil pointer, it is dereferenced and ConvertValue is called recursively.
If the argument template is nil, it is created from the first file.
If the arguments don't match the function or the returned error value is non-nil, execution stops.
If the arguments to build are a list of .go files, build treats them as a list of source files specifying a single package.
If the arguments were direct indexed, we assume the programmer knows what's up.
If the base is 0, the string prefix determines the actual conversion base.
If the base is non-trivial and the exponent is large, we use 4-bit, windowed exponentiation.
If the base type has not been encountered yet, a new type with the given name but no associated declaration is added to the type map.
If the binary is missing, we mark the package stale so that if a rebuild is needed, that rebuild attempt will produce a useful error.
If the bit is 0, the pattern is already all 0s, but we can claim that the number of bits in the word is equal to the number we need (c), because right shift of bits will zero fill.
If the bit is 1, make the pattern all 1s.
If the bit is a one, we also multiply by x, thus adding one to the power.
If the body is of type *bytes.Reader, strings.Reader, or *bytes.Buffer, the Request.ContentLength is set.
If the bottom five bits are set, then the tag number is actually base 128 encoded afterwards
If the boundary hasn't been reached there's more to read, so don't pass through an EOF from the buffer
If the buffer becomes too large, ReadFrom will panic with ErrTooLarge.
If the buffer becomes too large, Write will panic with ErrTooLarge.
If the buffer becomes too large, WriteByte will panic with ErrTooLarge.
If the buffer becomes too large, WriteString will panic with ErrTooLarge.
If the buffer can't grow it will panic with ErrTooLarge.
If the buffer is too small, PutUvarint will panic.
If the buffer is too small, PutVarint will panic.
If the buffer overflows, we will get bytes.ErrTooLarge.
If the bytes are an erroneous UTF-8 encoding, it consumes one byte and returns U+FFFD, 1.
If the call blocks before tmp has been written, the garbage collector will still treat the temporary as live, so we must zero it before entering that call.
If the call is invalid, the result is false, and *x is undefined.
If the callback returns a non-zero value, the iteration is stopped and the value of the callback is returned.
If the caller asked for a line, there should be a line.
If the caller doesn't care where the match is, no point going further.
If the caller has set w's ETag header, ServeContent uses it to handle requests using If-Range and If-None-Match.
If the caller has specified a name, use that instead of a.out.
If the caller is asking for CTINT, allow CTRUNE too.
If the caller will also sweep pages (e.g., for a large allocation), it can pass a non-zero callerSweepPages to leave that many pages unswept.
If the caller wishes to do repeated fast PC lookups, it should build an appropriate index of the line table.
If the caller wishes to do repeated fast PC lookups, it should build an appropriate index using the Ranges method.
If the calling goroutine has not called LockOSThread, UnlockOSThread is a no-op.
If the case was a receive, val is filled in with the received value.
If the cased value in the Char is 0, it means use the rune itself.
If the central cache is empty, allocate a new one.
If the certificate is signed by a certificate authority, the certFile should be the concatenation of the server's certificate, any intermediates, and the CA's certificate.
If the certificate_authorities list is empty then the client MAY send any certificate of the appropriate ClientCertificateType, unless there is some external arrangement to the contrary.
If the channel is closed, x is the zero value for the channel's element type and ok is false.
If the channel is totally unbuffered, it's best not to run at all.
If the charset is not UTF-8 or if the content is short, do not bother splitting the encoded-word.
If the client didn't specify any signature_algorithms extension then we can assume that it supports SHA1.
If the client falls behind while reading, we drop ticks on the floor until the client catches up.
If the closure does not escape, it needs to be on the stack or else the stack copier will not update it.
If the closure is directly called, we transform it to a plain function call with variables passed as args.
If the code length decreases we shift in order to zero any bits beyond the end of the code.
If the command exits with a non-zero exit status, runGcc prints details about what was run and exits.
If the command fails to run or doesn't complete successfully, the error is of type *ExitError.
If the command fails, run prints information about the failure and returns a non-nil error.
If the command line lists .go files, they are treated as a single package.
If the command name does not include a file extension, the shell adds the extensions listed in the PATHEXT environment variable, one by one, and searches the directory for that file name.
If the command name does not specify a path, the shell searches the current directory for an executable file matching the command name.
If the command name includes a file extension, the shell searches each directory for the exact file name specified by the command name.
If the command name specifies a path, the shell searches the specified path for an executable file matching the command name.
If the compilation unit specifies the AttrUseUTF8 flag (strongly recommended), the string value will be encoded in UTF-8.
If the compressed data refers to a different dictionary, NewReaderDict returns ErrDictionary.
If the connect failed, we clearly didn't connect to ourselves.
If the context expires before the connection is complete, an error is returned.
If the context function is nil, then calls from Go to C to Go will not show a traceback for the C portion of the call stack.
If the conversion is illegal, convertOp returns nil.
If the count is less than len(s), it also returns an error explaining why the write is short.
If the counter becomes zero, all goroutines blocked on Wait are released.
If the counter goes negative, Add panics.
If the covered package is the same as the tested package, it returns the empty string.
If the current directory can be reached via multiple paths (due to symbolic links), Getwd may return any one of them.
If the current types are untyped, the materialized type is the respective default type.
If the data item is zero, no bytes are written.
If the data we want has already been read, don't worry about Mach-O parsing.
If the database has a concept of per-connection state, such state can only be reliably observed within a transaction.
If the deadline falls in the middle of our sleep window, deduct part of the sleep, then return a timeout.
If the deadline is reached, Read will fail with a timeout (see type Error) instead of blocking.
If the deadline is reached, Write will fail with a timeout (see type Error) instead of blocking.
If the decimal form (excluding sign) is shorter than width, the result is padded with leading 0's.
If the declaration is empty afterwards, the declaration is removed from the AST.
If the declaration token changed (e.g., from CONST to TYPE) or the next declaration has documentation associated with it, print an empty line between top-level declarations.
If the default action is to accept or reduce, give up.
If the directory cannot be opened, it returns the existing matches.
If the directory couldn't be read, a nil map and the respective error are returned.
If the distribution includes both inputs and cached build outputs, the conservative solution to the previous problem will cause unnecessary rebuilds.
If the encoded rune is invalid, it consumes one byte and returns unicode.ReplacementChar (U+FFFD) with a size of 1.
If the encoded value does not fit in the Go type, Unmarshal returns a parse error.
If the encoding cannot describe the modified input level and output number, then EscHeap is returned.
If the end of basic block is reached a value of zero is returned.
If the error is that the source file didn't begin with a declaration, fall through to try as a statement list.
If the error is that the source file didn't begin with a package line and source fragments are ok, fall through to try as a source fragment.
If the error output is long, Stderr may contain only a prefix and suffix of the output, with the middle replaced with text about the number of omitted bytes.
If the exponent is smaller, move it up and adjust d accordingly.
If the exponent is too small, we have a denormal number before rounding and fewer than p mantissa bits of precision available (the exponent remains fixed but the mantissa gets shifted right).
If the expression contains function literals, their bodies are ignored (i.e., the bodies are not type-checked).
If the extension is supported, Extension also returns a string that contains any parameters the server specifies for the extension.
If the fallthrough instruction is xFail, advance the position so that the decoded instruction size includes the byte we just compared against.
If the field delimiter is white space, TrimLeadingSpace will trim the delimiter.
If the field is a chan or func or pointer thereto, don't send it.
If the field is a pointer to another object, that object is serialized, recursively.
If the field is imported (qualified name) or the parent is nil, the field is ignored.
If the field is itself is an interface, return a value for the thing inside the interface, not the interface itself.
If the field or method cannot be found there, it is next looked for in the Embed list.
If the field type has an XMLName field, the names must match so that the behavior of both marshalling and unmarshalling is straightforward and unambiguous.
If the file already exists and has the expected content, it is not rewritten, to avoid changing the time stamp.
If the file does not exist, there are no exported functions, and we do not install anything.
If the file exists, it must be an archive.
If the file has no extension, ext will be empty.
If the file is a symbolic link, it changes the mode of the link's target.
If the file is a symbolic link, it changes the size of the link's target.
If the file is a symbolic link, it changes the uid and gid of the link itself.
If the file is a symbolic link, it changes the uid and gid of the link's target.
If the file is a symbolic link, the returned FileInfo describes the symbolic link.
If the file or directory exists already, it will be removed.
If the files belong to different packages, one package name is selected and files with different package names are reported and then ignored.
If the filter returns a non-nil error, the execution of system call will be canceled and the system call function returns the non-nil error.
If the filter returns a non-nil error, the system call function returns the non-nil error.
If the filter role is implemented, read the data stream here.
If the final argument is ellipsissed, there's little it can do for that.
If the first argument is a supported object file, treat as executable.
If the first bit is set, then all following bits constitute a two's complement encoded number in big-endian byte order.
If the first boolean value is true, kernel supports basic IPv6 functionality.
If the first byte is hex and the second is not, processing stops.
If the first character in the source is a UTF-8 encoded byte order mark (BOM), it is discarded.
If the first comment line is empty but for the opening /*, assume up to 3 blanks or a tab.
If the first element of the structure is a non-empty RawContents, then we don't bother serializing the rest.
If the first two bytes of s are not hex digits or the third byte does not match e, false is returned.
If the fraction in the layout is 9s, trailing zeros are dropped.
If the frame is larger than previously set with SetMaxReadFrameSize, the returned error is ErrFrameTooLarge.
If the frame size is 8, it's only an LR, so there's no potential for breaking references to local variables by growing the frame size, because there are no local variables.
If the function name ends with an 'f', the function is assumed to take a format descriptor string in the manner of fmt.Printf.
If the function returns SkipDir when invoked on a directory, Walk skips the directory's contents entirely.
If the function returns SkipDir when invoked on a non-directory file, Walk skips the remaining files in the containing directory.
If the function returns a non-nil error, the request is aborted with the provided error.
If the goroutine is in cgo, and we have a cgo traceback, print that.
If the group cannot be found, the returned error is of type UnknownGroupError.
If the group cannot be found, the returned error is of type UnknownGroupIdError.
If the handler is done but never sent a Content-Length response header and this is our first (and last) write, set it, even to zero.
If the handler is the default, we know it is non-recoverable, so we don't have to worry about re-installing sighandler.
If the handler takes a long time, it might be a problem.
If the hash is good we don't normally allocate any overflow buckets, and the probability of even one or two overflows goes down rapidly.
If the header's and block's size are "small enough" and the block is "simple enough", the block is printed on the current line, without line breaks, spaced from the header by sep.
If the heap has too much memory, return some to the operating system.
If the host is empty, as in ":80", the local system is assumed.
If the ifi is nil, interfaceAddrTable returns addresses for all network interfaces.
If the ifindex is zero, interfaceTable returns mappings of all network interfaces.
If the import has a doc comment, that comment is taken as literal C code to be used as a preamble to any C code generated by cgo.
If the import is allowed, disallowInternal returns the original package p.
If the import is allowed, disallowVendor returns the original package p.
If the import of "C" is immediately preceded by a comment, that comment, called the preamble, is used as a header when compiling the C parts of the package.
If the import path follows, then 4 bytes at the end of the data form a nameOff.
If the index is out of range it returns false.
If the initarray section grows to contain more than one constructor entry, the size will need to be 8 * constructor_count.
If the input is at EOF, Decode returns io.EOF and does not modify e.
If the input is nil, the tokens will always be Huffman encoded.
If the input is the point at infinity then it returns (0, 0) in constant time.
If the input sets intersect, an empty runeset and a NextIp array with the single element mergeFailed is returned.
If the inputs are new than the outputs on the first machine but copied first, they end up older than the outputs on the second machine.
If the installed importer implements ImporterFrom, the type checker calls ImportFrom instead of Import.
If the instruction is InstAltMatch the path to the InstMatch is in i.Out, the normal node in i.Next.
If the instruction pointer is nil, it does nothing
If the interface value doesn't need to allocate, amortized allocation overhead should be zero.
If the io.Reader does not also have ReadByte, then decode will introduce its own buffering.
If the item in the oldbucket is not destined for the current new bucket in the iteration, skip it.
If the keepNL flag is set, newline characters are passed through instead of being change to spaces.
If the kernel doesn't support it, this is set to 0.
If the key is present in the tag the value (which may be empty) is returned.
If the key is unique for each ciphertext, then it's ok to use a zero IV.
If the key of the range statement is not an identifier the code should not panic (it used to).
If the keyword is not present, readKeyword records a syntax error.
If the label is undefined, we have already have printed an error.
If the last comment begins with "Unordered output:" then the output is compared to the comment, however the order of the lines is ignored.
If the last comment in the function starts with "Output:" then the output is compared exactly against the comment (see examples below).
If the last entry had a sibling attribute, that attribute gives the offset of the next sibling, so we can avoid decoding the child subtrees.
If the last field in a non-zero-sized struct is zero-sized the compiler is going to pad it by one (see issue 9401).
If the layout digits are 0s, the fractional second is of the specified width.
If the leftmost 8 * emLen - emBits bits of the leftmost octet in maskedDB are not all equal to zero, output "inconsistent" and stop.
If the length is greater than the number of bytes in b, the boolean will be false.
If the length is zero, SessionTicketsDisabled must be true.
If the lhs doesn't have a type yet, use the type of x.
If the lhs is an identifier denoting a variable v, this assignment is not a 'use' of v.
If the line ends with "(forced)", this GC was forced by a runtime.GC() call and all phases are STW.
If the line was too long for the buffer then isPrefix is set and the beginning of the line is returned.
If the linker were better at tossing unused tables, we could get rid of this implementation.
If the list is empty, Err returns nil.
If the list is not empty, allocate an object from it.
If the list spans multiple source lines, the original line breaks are respected between expressions.
If the literal string syntax is invalid, the result is an Unknown.
If the lock is already in use, the calling goroutine blocks until the mutex is available.
If the lock is already locked for reading or writing, Lock blocks until the lock is available.
If the low bit is set in x or y, adding or subtracting 1 produces a number that checkdiv1 is going to be called with anyway, so don't duplicate effort.
If the machine is very long, it's not worth the time to check if we can use one pass.
If the macro has arguments but is invoked without them, all we push is the macro name.
If the macro has no arguments, just substitute the text.
If the magnitude of x is too large to be represented by a float32, f is an infinity and exact is false.
If the magnitude of x is too large to be represented by a float64, f is an infinity and exact is false.
If the make fails, give a known error.
If the mask is not in the canonical form--ones followed by zeros--then Size returns 0, 0.
If the matched suffix does not occur elsewhere in pattern, then the matching frame may share part of its prefix with the end of the matching suffix.
If the most recent read operation on the buffer was not a ReadRune, UnreadRune returns an error.
If the most recent read or write operation on the buffer was not a ReadRune, UnreadRune returns an error.
If the most-significant-bit isn't set then we'll need to pad the beginning with 0xff in order to keep the number negative.
If the move fails, which is likely, we'll try again the next time we do an install of this binary.
If the move is valid, it is executed and move returns true.
If the name is "" or "UTC", LoadLocation returns UTC.
If the name is "Local", LoadLocation returns Local.
If the name is already registered then this will log.Panic.
If the name is cmd, it's the root of the command tree.
If the name is empty, the value is nil and no value is sent.
If the name is the name of this template, overwrite this template.
If the name part of the tag is completely empty, get default from XMLName of underlying struct if feasible, or field name otherwise.
If the name was used by multiple packages, display the full path,
If the named path is a directory, fix rewrites all .go files in that directory tree.
If the named path is a file, fix rewrites the named files in place.
If the new timer is earlier than any of the others.
If the new type is not final and still untyped, just update the recorded type.
If the next token is token.CHAN we still don't know if it is a channel type or a receive operation - we only know once we have found the end of the unary expression.
If the non-Go code called by the Go program does not change any signal handlers or masks, then the behavior is the same as for a pure Go program.
If the non-Go code installs a signal handler for any of the asynchronous signals, it may invoke the Go signal handler or not as it chooses.
If the non-Go code installs a signal handler for any of the synchronous signals (SIGBUS, SIGFPE, SIGSEGV), then it should record the existing Go signal handler.
If the non-Go code installs any signal handlers, it must use the SA_ONSTACK flag with sigaction.
If the non-Go code starts new threads of its own, it may set the signal mask as it pleases.
If the non-Go startup code wishes to install its own signal handlers, it must take certain steps to keep Go working well.
If the number is less than 128 (0 through 0x7F), its value is written directly.
If the number is negative, we use an inversion mask to invert the data bytes and treat the value as an unsigned number.
If the object does not exist, return nil, nil, 0.
If the object is a shared library, start is the address where it is mapped into memory in the address space being inspected.
If the offset cannot fit in a 12-bit unsigned displacement then we need to create a copy of the stack pointer that we can adjust.
If the opcode emits a row in the line table, this updates *entry and returns true.
If the open fails, the error string will be self-explanatory, like
If the operand is a reflect.Value, the operand is replaced by the concrete value that it holds, and printing continues with the next rule.
If the operating system provides a Getwd call, use it.
If the operation failed, the value of z is undefined but the returned value is nil.
If the option string is unrecognized or otherwise invalid, Option panics.
If the order is different, race does not happen at all.
If the original plaintext lengths are not a multiple of the block size, padding would have to be added when encrypting, which would be removed at this point.
If the original slice has sufficient capacity then no allocation is performed.
If the output clobbers the input register, make sure we have at least two copies of the input register so we don't have to reload the value from the spill location.
If the output is too small, we need to left-pad with zeros.
If the outputs are unpacked before the inputs, they'll be older and a build will try to rebuild them.
If the package has type errors, the collected information may be incomplete.
If the package is a command (package main), the exported symbols of the package are elided from the presentation unless the -cmd flag is provided.
If the package is not found but we have a package name, create the package and add it to the p.imports map.
If the package is not found, create the package and add it to the p.localPkgs and p.sharedPkgs maps.
If the package is stale, the compiler is going to read the files anyway.
If the package name is not explicitly specified, make an educated guess.
If the package was imported with a name other than the final import path element, show it explicitly in the error message.
If the padding is valid, the resulting plaintext message is copied into key.
If the pair is not a valid UTF-16 surrogate pair, DecodeRune returns the Unicode replacement code point U+FFFD.
If the parameter has its own Scan method, use that.
If the parent's deadline is already earlier than d, WithDeadline(parent, d) is semantically equivalent to parent.
If the parse fails, take the type out of the cache so that the next call with this offset doesn't hit the cache and return success.
If the parser is inside a nested value the parseState describes the nested state, outermost at entry 0.
If the passed in io.Reader does not also have ReadByte, the NewReader will introduce its own buffering.
If the path consists entirely of separators, Base returns a single separator.
If the path consists entirely of separators, Dir returns a single separator.
If the path consists entirely of slashes followed by non-slash bytes, Dir returns a single slash.
If the path consists entirely of slashes, Base returns "/".
If the path does not exist, RemoveAll returns nil (no error).
If the path down from rcheck dereferences the address (possibly with a small offset) before writing to memory and before any subsequent checks, it's okay to wait for that implicit check.
If the path is a local import path naming a package that can be imported using a standard import path, the returned package will set p.ImportPath to that path.
If the path is empty, Base returns ".".
If the path is empty, Dir returns ".".
If the path is not absolute it will be joined with the current working directory to turn it into an absolute path.
If the path is not in its canonical form, the handler will be an internally-generated handler that redirects to the canonical path.
If the path is not splittable, then it will return ("", "", false).
If the path is the GOROOT, ignore it.
If the pattern is not found, it returns -1.
If the pc of the next instruction is the same as the pc of this instruction, this instruction is not a real instruction.
If the pcln table contains runtime/runtime.go, use that to set gdbscript path.
If the pipeline already has some of the sanitizers, do not interfere.
If the pipeline has a variable declaration, the variable will be pushed on the stack.
If the plaintext was valid then index contains the index of the original message in em.
If the pointer is nil, Unmarshal allocates a new value for it to point to.
If the pointer passed to it is non-nil, the caller wants the reservation there, but SysReserve can still choose another location if that one is unavailable.
If the previous sizeclass chose the same allocation size and fit the same number of objects into the page, we might as well use just this size instead of having two different sizes.
If the profiler is on, the rate cannot be changed without first turning it off.
If the program didn't crash, we passed.
If the program does not exit, the Go handler then reinstalls itself and continues execution of the program.
If the program has called Notify to receive SIGPIPE signals, the file descriptor number does not matter.
If the program has not called Notify to receive SIGPIPE signals, then the behavior depends on the file descriptor number.
If the program is started with a non-empty signal mask, some signals will be explicitly unblocked as described above.
If the program was started with SIGHUP or SIGINT ignored, and Notify is called for either signal, a signal handler will be installed for that signal and it will no longer be ignored.
If the provided body is also an io.Closer, the returned Request.Body is set to body and will be closed by the Client methods Do, Post, and PostForm, and Transport.RoundTrip.
If the provided body is an io.Closer, it is closed after the request.
If the provided file or directory name is a relative path, it is interpreted relative to the current directory and may ascend to parent directories.
If the provided name is constructed from user input, it should be sanitized before calling ServeFile.
If the query selects no rows, the *Row's Scan will return ErrNoRows.
If the reader also implements UnreadRune, that method will be used to save the character and successive calls will not lose data.
If the reader has a WriteTo method, use it to do the copy.
If the reader provided to Fscan implements ReadRune, that method will be used to read characters.
If the receive cannot finish without blocking, x is the zero Value and ok is false.
If the receive delivers a value, x is the transferred value and ok is true.
If the receiver or arguments are unnamed, they will be omitted from the list above.
If the regexp source can be parsed as an address, also match functions that land on that address.
If the regexp to be returned turns out to be equivalent to re, simplify1 returns re instead.
If the request Body's size has not already been limited by MaxBytesReader, the size is capped at 10MB.
If the request has an "Expect: 100-continue" header and the server responds 100 Continue, readLoop send a value to writeLoop via this chan.
If the request includes an If-Modified-Since header, ServeContent uses modtime to decide whether the content needs to be sent at all.
If the response had multiple headers with the same key, they may be concatenated, with comma delimiters.
If the response is multi-line, ReadCodeLine returns an error.
If the response is one of the following redirect codes, Get follows the redirect after calling the Client's CheckRedirect function:
If the response is one of the following redirect codes, Get follows the redirect, up to a maximum of 10 redirects:
If the response is one of the following redirect codes, Head follows the redirect after calling the Client's CheckRedirect function:
If the response is one of the following redirect codes, Head follows the redirect, up to a maximum of 10 redirects:
If the result exceeds the maximum (or minimum) value that can be stored in a Duration, the maximum (or minimum) duration will be returned.
If the result had its address taken, it is being tracked by the avarinit code, which does not use uevar.
If the result is an identifier, it is not resolved.
If the result is not exact, its value is undefined.
If the result of this process is an empty string, Clean returns the string ".".
If the result visitor w is not nil, Walk visits each of the children of node with the visitor w, followed by a call of w.Visit(nil).
If the resulting type would be larger than the available address space, ArrayOf panics.
If the return parameter is an error number, it must be named err.
If the returned error is nil, the Response will contain a non-nil Body which the user is expected to close.
If the returned error is non-nil, scanning stops and the error is returned to the client.
If the returned net.Conn has a ConnectionState method like tls.Conn, it will be used to set http.Response.TLS.
If the returned token is a keyword, the literal string is the keyword.
If the returned token is a literal (token.IDENT, token.INT, token.FLOAT, token.IMAG, token.CHAR, token.STRING) or token.COMMENT, the literal string has the corresponding value.
If the returned token is token.ILLEGAL, the literal string is the offending character.
If the returned value would be less than zero because of an overflow, MaxInt64 is returned.
If the rightmost octet of EM does not have hexadecimal value 0xbc, output "inconsistent" and stop.
If the roll value is 1, then thisTurn score is abandoned, and the players' roles swap.
If the root node of a Sample matches, the sample will have an empty stack.
If the run queue is full, runnext puts g on the global queue.
If the rune is not a valid Unicode code point or does not need encoding, EncodeRune returns U+FFFD, U+FFFD.
If the rune is out of range or a surrogate half, convert it to the error rune.
If the scalar is equal or greater than the order of the group, it's reduced modulo that order.
If the scalar is out of range, sample another random number.
If the scheduler wants to preempt us, we'll stop draining, dispose the gcw, and then preempt.
If the scope already contains an object alt with the same name, Insert leaves the scope unchanged and returns alt.
If the search tells us that the component number (min) is n+1, we know that this is a trivial component: one function plus its closures.
If the search tells us that the component number is n, then there was a path from node n+1 back to node n, meaning that the function set is mutually recursive.
If the second boolean value is true, kernel supports IPv6 IPv4-mapping.
If the second pass finds a reachable object that was not found by concurrent mark, the garbage collector will panic.
If the server declared the Content-Length, our body is a LimitedReader and we need to check whether this EOF arrived early.
If the server requested a certificate then we have to send a Certificate message, even if it's empty because we don't have a certificate to send.
If the server responded with the same sessionId then it means the sessionTicket is being used to resume a TLS session.
If the set of possible relations m is included in the set of relations need to take the positive branch (or negative) then that branch will always be taken.
If the signal didn't cause the program to exit, restore the Go signal handler and carry on.
If the signal is SIGPROF, the Go handler does nothing.
If the size is a power of two, heapBitsForObject can divide even faster by masking.
If the size was wrong, we'll either waste some space off the end or reallocate as needed, but in the overwhelmingly common case we'll get it just right.
If the slice can be SSA'd, it'll be on the stack, so there will be no write barriers, so there's no need to attempt to prevent them.
If the slice is empty but non-nil the return value is non-zero.
If the slice is nil the returned value is 0.
If the slot hasn't been received into yet, it may contain stack pointers and a concurrent send could race with adjusting those pointers.
If the source couldn't be read, the returned AST is nil and the error indicates the specific failure.
If the source is a URL, it fetches symbol information using symbolz.
If the source is a local binary, it tries using symbolizer and obj.
If the source is newer than both the .a file and the .so, both are rebuilt.
If the source is not a recognizable URL, do nothing.
If the source start point is higher than the destination start point, or equal height but to the left, then we compose the rows in right-to-left, bottom-up order instead of left-to-right, top-down.
If the source start point is higher than the destination start point, then we compose the rows in bottom-up order instead of top-down.
If the source was read but syntax errors were found, the result is a partial AST (with ast.Bad* nodes representing the fragments of erroneous source code).
If the spill (x2) is never used, it will be removed at the end of regalloc.
If the splitting function calls F, then F begins execution with at least StackLimit - callsize() bytes available.
If the stat message is larger than our buffer we will go around the loop and allocate one that is big enough.
If the stat message itself is invalid, ErrBadStat is returned.
If the static type of the argument is empty interface, there's little we can do.
If the string appears to be well-formed but incomplete (i.e., to get the whole Rune we'd need to read past str+length) then we'll set the Rune to Bad and return 0.
If the string doesn't have quotes, it can't be unquoted.
If the string is already lower-case then there's nothing to do.
If the struct has 3 fields tv_sec, tv_usec, _pad1, then we still want to remove the tv_ prefix.
If the syscall does not block, that is it, we do not emit any other events.
If the syscall wrote some data but not all (short write) or it returned EINTR, then assume it stopped early for reasons that are uninteresting to the caller, and try again.
If the system is in panic or being exited, this may not reliably stop all goroutines.
If the tag does not have the conventional format, the value returned by Get is unspecified.
If the tag does not have the conventional format, the value returned by Lookup is unspecified.
If the target's path is "/base" and the incoming request was for "/dir", the target request will be for /base/dir.
If the template does exist, it will be replaced.
If the template does not already exist, it will create a new one.
If the template should not be called in the named start context, look for calls to that template in unexpected contexts.
If the temporary directory was already created, this does nothing.
If the test fails, we will hang here until the timeout in the testing package fires, which is 10 minutes.
If the test is not running on the build infrastructure, Builder returns the empty string.
If the test panicked, print any test output before dying.
If the time per address is too short, steal from the end of the list.
If the token positions are invalid due to parse errors, the resulting end position may be past the file's EOF position, which would lead to panics if used later on.
If the tool is unavailable GoToolPath calls t.Skip.
If the tool should be available and isn't, GoToolPath calls t.Fatal.
If the top element on the stack is autoclosing and t is not the end tag, invent the end tag.
If the top of the stack is an element followed by an opVerticalBar swapVerticalBar swaps the two and returns true.
If the traceback function is nil, the symbolizer function will never be called.
If the two have different memory layouts, the collection will interpret the memory incorrectly.
If the two rectangles do not overlap then the zero rectangle will be returned.
If the type contains filtered elements, keep the declaration.
If the type exists in the program, those functions must return the existing type structure rather than creating a new one.
If the type has no pointers there is nothing to do.
If the type implements GobEncoder, we handle it without further processing.
If the type implements fmt.Formatter, we have nothing to check.
If the type implements the Generator interface, that will be used.
If the type is not simple, it might have methods.
If the type name of a slice element ends with "SET" then it's treated as if the "set" tag was set on it.
If the type of a specific column isn't known or shouldn't be handled specially, DefaultValueConverter can be returned.
If the type of the first field of a structure is RawContent then the raw ASN1 contents of the struct will be stored in it.
If the type of v is not acceptable, dataSize returns -1.
If the type uses unsafe.Pointer, we arrange to build a version of _cgoCheckPointer that returns that type.
If the underlying reader implements io.ByteReader, it will be left positioned just after the gzip stream.
If the underlying writer returns an error, Flush returns that error.
If the unexported flag (-u) is true, isExported returns true because it means that we treat the name as if it is exported.
If the use of -a wasn't a red flag, the use of -installsuffix to point to a non-existent directory in a command that installs nothing should have been.
If the user cannot be found, the returned error is of type UnknownUserError.
If the user cannot be found, the returned error is of type UnknownUserIdError.
If the user has a deadline in the future, but the delay calculation overflows, then set the deadline to the maximum possible value.
If the user has not specified the -extld option, then specify the appropriate linker.
If the user type is not valid, err will be non-nil.
If the user type is not valid, it calls error.
If the usual Go conversion rules do not allow conversion of the value v to type t, Convert panics.
If the utimensat syscall isn't available (utimensat was added to Linux in 2.6.22, Released, 8 July 2007) then fall back to utimes
If the value does not exist, the error returned is ErrNotExist.
If the value is a map and the keys are of basic type with a defined order ("comparable"), the elements will be visited in sorted key order.
If the value is a pointer, decAlloc guarantees it points to storage.
If the value is already the right width, padding is not used.
If the value is nil, it means we should just ignore this item.
If the value is nil, keep it untyped (this is important for tools such as go vet which need the dynamic type for argument checking of say, print functions)
If the value is not a struct, it calls out to compileSingle.
If the value name doesn't exist or the localized string value can't be resolved, GetMUIStringValue returns ErrNotExist.
If the value new(T) does not escape, then new(T) can be rewritten into a stack allocation.
If the variable is present in the environment the value (which may be empty) is returned and the boolean is true.
If the visitor w returned by v.Visit(node) is not nil, Walk is invoked recursively with visitor w for each of the non-nil children of node, followed by a call of w.Visit(nil).
If the week number is still 0, we're in early January but in the last week of last year.
If the worker isn't attached to its P, attach now.
If the writer is not done with its half, we lose the stack trace for this clock tick (and record that loss).
If the x or y coordinates are outside the field boundaries they are wrapped toroidally.
If the zone abbreviation is unknown, Parse records the time as being in a fabricated location with the given zone abbreviation and a zero offset.
If there are 3, it's a time zone.
If there are 4 or 5 and the last is a T, it's a time zone.
If there are any forward jumps left, no label was found for the corresponding goto statements.
If there are any local SWIG dependencies, we want to load the shared library from the build directory.
If there are any pointers, GC has to scan to the last element.
If there are any small corner cases, this test exercises them.
If there are connRequests and the connection limit hasn't been reached, then tell the connectionOpener to open new connections.
If there are fewer than n bytes in the buffer, Next returns the entire buffer.
If there are instructions following this ARET, they come from a branch with the same stackframe, so no spadj.
If there are instructions following this ARET, they come from a branch with the same stackframe, so undo the cleanup.
If there are many regions, they are almost certainly small and easy to trace.
If there are more bytes than this then the server to be paranoid instead sends a "Connection: close" response.
If there are more than 1, they're comma-separated.
If there are more than 5, it's an error.
If there are multiple F2 prefixes *and* an (ignored) F3, then libopcodes prints the extra F2s as REPNs.
If there are multiple F2s and no F3s, the extra F2s do not print.
If there are multiple fields at the same level, and that level is the least nested (and would therefore be the nesting level selected by the usual Go rules), the following extra rules apply:
If there are multiple instances of a match at the same depth, they annihilate each other and inhibit any possible match at a lower level.
If there are multiple prefixes, allow libopcodes to use an alternate name.
If there are multiple shortest paths to the same depth, ambig is true.
If there are multiple smallest spans, take the one with the earliest starting address.
If there are multiple top-level fields, the boolean will be false: This condition is an error in Go and we skip all the fields.
If there are multiple types defined, reduce to just this one.
If there are no back quotes, the name is an educated guess of the type of the flag's value, or the empty string if the flag is boolean.
If there are no dynamic libraries needed, gcc disables dynamic linking.
If there are no files to compile, we're done.
If there are no more entries and the line table is properly terminated, it returns io.EOF.
If there are no more fragments, then it is possible that there is one last sparse hole.
If there are no pointers remaining in this gcWork or in the global queue, tryGet returns 0.
If there are no values associated with the key, Get returns "".
If there are no values associated with the key, Get returns the empty string.
If there are no waiters or a goroutine has already been woken or grabbed the lock, no need to wake anyone.
If there are none, it returns the empty string.
If there are none, then no unquoting is needed, so return a slice of the original bytes.
If there are other errors anyway, don't bother adding to the noise.
If there are other unresolved identifiers, give up because this synthesized file is not going to build.
If there are too many outputs to fit in the tag, that is handled at the encoding end as EscHeap, so there is no need to check here.
If there are two distinct args of v which are not v itself, then the phi must remain.
If there are wildcards, look up the thing before the wildcard, hoping it applies to the wildcarded parts too.
If there has been no garbage collection at all, the heap profile reports all known allocations.
If there have already been errors printed, those errors probably confused us and there might not be a loop.
If there have been no changes, then we assume a new build would produce the same result and reuse the installed package or binary.
If there is a branch into the instruction stream then we can't fuse into previous instructions.
If there is a hash table hit for this key then we continue the loop and do not emit a code yet.
If there is a local file with this name, just use it.
If there is a new panic during the deferred call, that panic will find d in the list and will mark d._panic (this panic) aborted.
If there is a receiver, it also leaks to heap.
If there is a simple literal prefix, skip over it.
If there is a stack frame at all, it includes space to save the LR.
If there is a symbol but no package, the package in the current directory is chosen.
If there is already an attribute with X.509 extensions then the extra extensions should be added to it rather than creating a CSR with two extension attributes.
If there is an error, it will be of type *LinkError.
If there is an error, it will be of type *PathError.
If there is an existing signal handler, the Go runtime will turn on the SA_ONSTACK flag and otherwise keep the signal handler.
If there is any error in the pattern, one of the returned subpatterns needs to have an error as well.
If there is any kind of logical race with that blocked thread (e.g. it has already returned from netpoll, but does not set lastpoll yet), this thread will do blocking netpoll below anyway.
If there is any pending whitespace, it consumes as much of it as is likely to help position the comment nicely.
If there is exactly one type name that is sufficiently frequent, associate the decl with the respective type.
If there is name match or name/value match, i is the index of that entry (1-based).
If there is no /dev/null, we just don't execute the test.
If there is no Content-Length or chunked Transfer-Encoding on a *Response and the status is not 1xx, 204 or 304, then the body is unbounded.
If there is no Separator in path, Split returns an empty dir and file set to path.
If there is no SysProcAttr (ie.
If there is no cancel function for the request, we don't set the function and return false.
If there is no change, it returns the input, otherwise it returns a slice backed by a new array.
If there is no contained lock, it returns nil.
If there is no current lookahead token (because the parser has not called Lex or has consumed the token returned by the most recent call to Lex), Lookahead returns -1.
If there is no encoded-word, returns before creating a buffer.
If there is no entry for a category name, there are no such points.
If there is no entry for a script name, there are no such points.
If there is no handler to forward to, no need to forward.
If there is no match for a particular pattern, downloadPaths leaves it in the result list, in the hope that we can figure out the repository from the initial ...-free prefix.
If there is no match, i is 0.
If there is no match, the return value is an empty string, but it will also be empty if the regular expression successfully matches an empty string.
If there is no next stream, z.Reset(r) will return io.EOF.
If there is no package specified or matched, the package in the current directory is selected, so "go doc Foo" shows the documentation for symbol Foo in the current package.
If there is no registered handler that applies to the request, Handler returns a ``page not found'' handler and an empty pattern.
If there is no slash in path, Split returns an empty dir and file set to path.
If there is no such field, the character data is discarded.
If there is no such field, the comments are discarded.
If there is no such i, bsearch16 returns len(a).
If there is no such i, bsearch32 returns len(a).
If there is no such index, Search returns n.
If there is no such index, bvnext returns -1.
If there is no such key in the tag, Get returns the empty string.
If there is no such path, the result is nil.
If there is no top-level symbol, symbolDoc looks for methods that match.
If there is no unused register, a Value will be kicked out of a register to make room.
If there is no unused stack slot, allocate a new one.
If there is not enough lookahead, the last two strings are not inserted into the hash table.
If there isn't enough space in b for a stat message, ErrShortStat is returned.
If there isn't such an edge in the map one is created.
If there was a table, it should have covered all program counters.
If there were multiple instances, add a second, so that the annihilation code will see a duplicate.
If there were no headers, the END line might occur immediately, without a leading newline.
If there's a DNSName set in opts, assume we're verifying a certificate from a TLS server.
If there's a bug here, fix the logic in ./path_plan9.go too.
If there's a bug here, fix the logic in ./path_unix.go too.
If there's a difference and SourcePos is set in ConfigMode, //line comments are used in the output to restore original source positions for a reader.
If there's a non-zero remainder, the corresponding fractional part (if it were computed), would have a non-zero sticky bit (if it were zero, it couldn't have a non-zero remainder).
If there's a period, there may be a precision.
If there's a runnext, it's the next G to run.
If there's a sign, it will be left in the token buffer.
If there's already "test.", drop it for now.
If there's an error copying the child's output to the parent, test that we kill the child.
If there's anything left in the buffer, flush it out
If there's exactly one rhs initializer, use the same declInfo d1 for all lhs variables so that each lhs variable depends on the same rhs initializer (n:1 var declaration).
If there's more than one, we have a conflict (two fields named "X" at the same level) and we return no field.
If there's no current CGI environment an error is returned.
If there's no error, return.
If there's no install target, we have to rebuild.
If there's no position information, pos is the empty string, and msg is the entire error message.
If there's not a data descriptor, we still compare the CRC32 of what we've read against the file header or TOC's CRC32, if it seems like it was set.
If these are too high, OS X exhausts its ephemeral ports and hangs waiting for them to transition TCP states.
If they already provided a CipherSuite list, return an error if it has a bad order or is missing ECDHE_RSA_WITH_AES_128_GCM_SHA256.
If they are found, then this function reads the sparse map and returns it.
If they are received by the program, nothing will happen.
If they are still referenced by an iterator, then the iterator holds a pointers to the slice.
If they are the same length, settle ties using string ordering.
If they are the same string or the prefix is not present the original is returned.
If they are valid for this trace, then great, use them for greater accuracy.
If they both fail to do that, we can end up with semi-persistent CPU underutilization.
If they can be dropped, then this function becomes much simpler and also more trustworthy.
If they can do that then they can learn whether a random value was used (because it'll be different for the same ciphertext) and thus whether the padding was correct.
If they differ, the list of inputs has changed, so the object is out of date and must be rebuilt.
If they match, the caller is the one who can recover.
If they meet up, there's a cycle.
If they really have no meaning, they are ignored.
If they want that, they need to do it on their own.
If this atomic becomes a problem, we should first try to dispose less and if necessary aggregate in a per-P counter.
If this command is 'go install' with no arguments and the current directory (the implicit argument) is a command, remove any leftover command binary from a previous 'go build'.
If this compilation unit has no line table, it returns nil, nil.
If this compiles with -race, the test passes.
If this cycle contains a variable, then this variable refers to itself.
If this doesn't return an error, the persistConn is ready to write requests to.
If this fails we fall back to the 32 bit memory mechanism
If this file has no dirinfo, create one.
If this file is not compiled in the package, the tests in codec_test.go are no-ops.
If this file only has one example function, some other top-level declarations, and no tests or benchmarks, use the whole file as the example.
If this frame might contain channel receive slots, use CAS to adjust pointers.
If this happens, sleep a little and try again.
If this is -1, this G is not on the rescan list.
If this is a concurrent GC, there shouldn't be any spans left to sweep, so this should finish instantly.
If this is a console output, various non-unicode code pages can be in use.
If this is a cross-build, then the cgo we are writing is not the cgo we need to use.
If this is a declaration list, make it a source file by inserting a package clause.
If this is a forced GC, don't acquire the transition lock or re-check the transition condition because we specifically *don't* want to share the transition with another thread.
If this is a named value, try to use the name as the spill location.
If this is a noscan object, fast-track it to black instead of greying it.
If this is a package with no source code, it cannot be rebuilt.
If this is a problem, use HTTP/2 or only use CloseNotify on methods such as POST.
If this is a released compiler version, ask for a bug report.
If this is a self-scan, put the user G in _Gwaiting to prevent self-deadlock.
If this is a span of pointer-sized objects, it initializes all words to pointer/scan.
If this is a statement list, make it a source file by inserting a package clause and turning the list into a function body.
If this is a struct, union, or enum type name, no need to guess the kind.
If this is an ELF file, searches for and opens the .go_export section.
If this is an archive, reads the export data from the first member, which is assumed to be an ELF file.
If this is an interface value, it can be ignored by resetting that buffer.
If this is because we were preempted, reschedule and try some more.
If this is called, the benchmark will report ns/op and MB/s.
If this is negative, then the G must correct this by performing scan work.
If this is not set then the cipher suite is RSA based.
If this is positive, then the G has credit to allocate gcAssistBytes bytes without assisting.
If this is the first handshake on a connection, process and (optionally) verify the server's certificates.
If this is the first name, the path includes the build id.
If this is the first server handshake, we generate a random key to encrypt the tickets with.
If this is the last running P and nobody is polling network, need to wakeup another M to poll network.
If this is the last worker and we ran out of work, signal a completion point.
If this is the root of the recursion, prepare to resolve typedef sizes once the recursion is done.
If this isn't big enough later, we allocate small ones.
If this occurs, documentation for all matches is printed.
If this section has already been set up as a note, we assume type_ and flags are already correct, but the other fields still need filling in.
If this server doesn't shut down in 5 seconds, tell the user why.
If this span holds object of a power of 2 size, just mask off the bits to the interior of the object.
If this struct changes, adjust ../syscall/net_nacl.go:/runtimeTimer.
If this struct changes, adjust ../time/sleep.go:/runtimeTimer.
If this symbol is a function symbol, the corresponding Func
If this text function exited too early (and its defer log.SetOutput(os.Stderr) ran), then the crash output could spill into the next test.
If this truly isn't enough, retryWithBuffer will error on the first run.
If this use causes an import loop, reusePackage updates p's error information to record the loop.
If this was an HTTP/1.0 request with keep-alive and we sent a Content-Length back, we can make this a keep-alive response ...
If this was the last import spec in this decl, delete the decl, too.
If this worker reached a background mark completion point, signal the main GC goroutine.
If top is false it returns whether t is or contains a pointer.
If top is true it returns whether t is or contains a pointer that might point to a pointer.
If top4AllOnes ends up with any zero bits in the bottom 28 bits, then this wasn't true.
If tracing is turned off and all the data accumulated while it was on has been returned, ReadTrace returns nil.
If true then the server's preference, as expressed in the order of elements in CipherSuites, is used.
If true, print the remaining bytes in the input buffer at each item.
If trying to convert to non-complex type, leave as complex128 and let typechecker complain.
If two cases both end up running in the same iteration, the same value will be sent to two different channels.
If two such (differently named) interfaces are compared, endless recursion occurs if the cycle is not detected.
If typ appeared multiple times at this depth, f.Type appears multiple times at the next depth.
If typ describes a variadic function, the final Value is itself a slice representing the variadic arguments, as in the body of a variadic function.
If typ is not a named type, insert a nil type instead.
If typ is not an (unnamed) pointer or an interface, use *typ instead, because the method set of *typ includes the methods of typ.
If typ is still an untyped and not the final type, updateExprType only updates the recorded untyped type for x and possibly its operands.
If unlockf returns false, the goroutine is resumed.
If url was relative, make absolute by combining with request path.
If useCheckmark is true, marking of an object uses the checkmark bits (encoding above) instead of the standard mark bits.
If using 64-bit, our reservation is all we have.
If using non-blocking mode, use the ForkLock.
If using the -race flag, the install suffix is automatically set to race or, if set explicitly, has _race appended to it.
If using write barrier, can only emit one pointer.
If v is a named type and is addressable, start with its address, so that if the type has pointer methods, we find them.
If v is a nil pointer, Indirect returns a zero Value.
If v is a variadic function, Call creates the variadic slice parameter itself, copying in the corresponding values.
If v is captured by value, we merely downgrade it to PPARAM.
If v is neither of these, Size returns -1.
If v is not a pointer, Indirect returns v.
If v is the zero Value (IsValid returns false), Kind returns Invalid.
If v's Kind is Func, the returned pointer is an underlying code pointer, but not necessarily enough to identify a single function uniquely.
If v's Kind is Slice, the returned pointer is to the first element of the slice.
If v1 branch is taken than we learn that the rangeMaks can be at most lt.
If val is the zero Value, SetMapIndex deletes the key from the map.
If val was obtained from a struct field, finfo must have its details.
If value does not exist, GetBinaryValue returns ErrNotExist.
If value does not exist, GetIntegerValue returns ErrNotExist.
If value does not exist, GetStringValue returns ErrNotExist.
If value does not exist, GetStringsValue returns ErrNotExist.
If value is not BINARY, it will return the correct value type and ErrUnexpectedType.
If value is not DWORD or QWORD, it will return the correct value type and ErrUnexpectedType.
If value is not MULTI_SZ, it will return the correct value type and ErrUnexpectedType.
If value is not SZ or EXPAND_SZ, it will return the correct value type and ErrUnexpectedType.
If value's type is known, use the appropriate Get*Value function instead.
If variadic is set, the function is variadic, it must have at least one parameter, and the last parameter must be of unnamed slice type.
If vendoring is enabled (see 'go help gopath'), then import path checking is disabled for code found within vendor trees.
If viaRequest is false, all forms of relative URLs are allowed.
If viaRequest is true, the URL is assumed to have arrived via an HTTP request, in which case only absolute URLs or path-absolute relative URLs are allowed.
If w implements a WriteString method, it is invoked directly.
If want is non-empty, test also runs the test and checks that the output matches the regexp want.
If wb is true, need write barrier updating res's base pointer.
If we added it to uevar too, we'd not see any kill and decide that the variable was live entry, which it is not.
If we align it, we waste a lot of space to padding.
If we are approaching a merge point and we are the primary predecessor of it, find live values that we use soon after the merge point and promote them to registers now.
If we are building any out-of-date packages other than those under test, warn.
If we are compiling Objective-C code, then we need to link against libobjc
If we are compiling the runtime package, there are two runtime packages around -- localpkg and Runtimepkg.
If we are dying because of a signal caught on an already idle thread, freezetheworld will cause all running threads to block.
If we are given too much, cut it.
If we are near the end of the mark phase dispose of the gcw.
If we are nearing the end of mark, dispose of the cache promptly.
If we are running a release copy of Go and didn't find a content-based reason to rebuild the standard packages, do not rebuild them.
If we are running on the system stack then dst might be an address on the stack, which is OK.
If we are running on the system stack, the C program may have marked part of that stack as uninitialized.
If we are using cgo we need to let the C pthread library install its own thread-creation callback.
If we are using the -n flag (just printing commands) drop the parallelism to 1, both to make the output deterministic and because there is no real work anyway.
If we aren't handling the signal, forward it.
If we aren't the first proxy retain prior X-Forwarded-For information as a comma+space separated list and fold multiple headers into one.
If we ask for the end of the data segment but the operating system requires a little more space before we can start allocating, it will give out a slightly higher pointer.
If we called casgstatus, it would loop waiting for the status to go back to Gwaiting, which it never will.
If we can find another declaration starting from there, we have a shadowed identifier.
If we can get an integer by rounding up or down, assume x is not an integer because of rounding errors in prior computations.
If we can print it correctly, we built it correctly.
If we can return an EOF here along with the read data, do so.
If we can update the mode and rename to the dst, do it.
If we can't read more than one character we must stop
If we can't read more than two characters we must stop
If we can't read the resolv.conf file, assume it had something important in it and defer to cgo.
If we can't see insecure schemes then we can't report the actual repo URL.
If we cannot generate a token after 100 macro invocations, we're in trouble.
If we come past one that's uninitialized, this must be a (harmless) forward jump but if it's set to nonlooping the label must have preceded this goto.
If we created a synthetic pointer type above, we will throw away the method set computed here after use.
If we cross out all the usages, then the chain is unacceptable.
If we define a help flag, that should override.
If we did want to start moving data in the GC, we'd need to allocate the goroutine structs from an alternate arena.
If we didn't get a name error and we didn't get success, the server is behaving incorrectly or having temporary trouble.
If we didn't parse anything then we do the critical check, below.
If we discover new work below, we need to restore m.spinning as a signal for resetspinning to unpark a new worker thread (because there can be more than one starving goroutine).
If we do an early close, Transport just throws the connection away and doesn't reuse it.
If we do it the other way around, it is possible that exitsyscall will query sysexitticks after ticksStart but before traceEvGoInSyscall timestamp.
If we do not mark it as FlagNoScan, the last finalized object is not collected.
If we do, provide good diagnostic.
If we do, this will need to change.
If we do, we'll lose the path that describes the cycle.
If we don't disarm this bomb in 7 seconds (after the two httptest.Server.Close calls above), then we explode with stacks.
If we don't have a prefix yet, consider the last line.
If we don't have a type switch, s2 must be an expression.
If we don't have to have a quoted field then just write out the field and continue to the next field.
If we don't know how to handle the type, we just leave Value as nil.
If we don't own it, the exclude map is created lazily for WriteSubset to remove headers.
If we don't wait, we might not reuse them on the next batch.
If we don't, the proc will park itself.
If we encounter an error, we abort the package.
If we exit this loop normally then we need to call emitLiteral next, though we don't yet know how big the literal will be.
If we fail to allocate, try again with a smaller arena.
If we filled the buffer exactly, flush preemptively.
If we find x in a range, make sure x is not in exception list.
If we find x in a range, make sure x is not in isNotPrint list.
If we get a UTF-8 error then there might be upper-case ASCII bytes in the invalid sequence.
If we get a bad TLS record header, check to see if the response looks like HTTP and give a more helpful error.
If we get an EINVAL error on Linux or EPROTONOSUPPORT error on FreeBSD, fall back to using socket without them.
If we get an ENOSYS error on both Linux and FreeBSD, or EINVAL error on Linux, fall back to using accept.
If we get here then we have rejected a likely looking, but ultimately invalid PEM block.
If we get here, the name did not cause a panic, which is how Funcs reports an error.
If we go this long without a garbage collection, one is forced to run.
If we got data we won't complain about not being able to peek enough.
If we got this far in the xCondPrefix table and an F2/F3 is present, it means the table didn't have any entry for that prefix.
If we had zero bytes to read remaining (but hadn't seen EOF) and we get a byte here, that means we went over our limit.
If we have a labelname, it was parsed by operand (calling p.name()) and given an ONAME, ONONAME, OTYPE, OPACK, or OLITERAL node.
If we have a range clause, we are done.
If we have a single lhs variable we are done either way.
If we have a single rhs expression, it must be a multi- valued expression, in which case handling the first lhs variable will cause all lhs variables to have a type assigned, and we are done as well.
If we have an error that is not nil, stop execution and return that error to the caller.
If we have any undefined symbols in external objects, try to read them from the libgcc file.
If we have changed the working directory, make sure we have an absolute path, because we are going to change directory back before we remove the temporary.
If we have compile errors, ignore any assembler/linker errors.
If we have lots of excessive work, resetspinning will unpark additional procs as necessary.
If we have run out of data, it may be that there are optional elements at the end.
If we hold a lock, then we won't be able to stop another M that is blocked trying to acquire the lock.
If we ignore such OSLICEARR, we will conclude that b does not escape when b contents do.
If we know the pointers are over, we don't have to scan the buffer's heap bitmap at all.
If we later choose the set of candidate variables from a larger list, these cases could be deprioritized instead of removed entirely.
If we make a change which does not break ABI (such as adding an unexported function) and rebuild libdepBase.so, exe still works.
If we make an ABI-breaking change to depBase and rebuild libp.so but not exe, exe will abort with a complaint on startup.
If we name all the functions init we don't have to maintain a list of which ones to run.
If we need Fpop, it means we're working on two different floating-point registers, not memory.
If we need a stack of a bigger size, we fall back on allocating a dedicated span.
If we need more bits, fetch them from memory.
If we need to read more, return 'truncated instruction.
If we notice that, defer to libc.
If we obtained typ from the declaration of x propagate the type to all the uses.
If we panic parsing, assume it's not a Go 1.2 symbol table.
If we parsed it as a float but it looks like an integer, it's a huge number too large to fit in an int.
If we passed p directly it would see the concrete type instead.
If we promote the first load to a 2-byte load, it will segfault, which we don't want.
If we read any bytes off the wire, we're active.
If we read, this affects buf.off, which is good to test.
If we receive the FIN between the connectedness check and writing/reading from the socket, we may first learn the socket is disconnected when we get a ERR_SOCKET_NOT_CONNECTED.
If we received a ERROR_MORE_DATA, but n doesn't get larger, something has gone wrong and we may be in an infinite loop
If we received a client cert in response to our certificate request message, the client will send us a certificateVerifyMsg immediately after the clientKeyExchangeMsg.
If we remove the final RET, this assumption will not hold in the case of an infinite loop at the end of a function.
If we removed less than 1/16th, Huffman compress the block.
If we requested a client certificate, then the client must send a certificate message, even if it's empty.
If we run out of codes, reset the encoder state (including clearing the hash table) and continue.
If we saved the m for that thread, there would be an m leak each time such a thread exited.
If we scanned to bytes, the slice would point at the buffer.
If we see Gwaiting from the readgstatus, it might have become Grunnable by the time we get to the cas.
If we see R_PPC64_TOCSAVE or R_PPC64_REL24_NOTOC relocations, we'll need to implement cases 2 and 3.
If we see a call to sigpanic, we do not back up the PC to find the line number of the call instruction, because there is no call.
If we see a decoding error, the input width will not be utf8.Runelen(r) and we will overrun the buffer.
If we see a semicolon, we need to let it be consumed by p.next().
If we see an error at not-const:xxx, the corresponding name is not an integer constant.
If we see an error at not-declared:xxx, the corresponding name is not declared.
If we see an error at not-type:xxx, the corresponding name is a type.
If we see an error now, we can still recover and move on to the next request.
If we see no errors, we assume the name is an expression but not a constant (so a variable or a function).
If we see these nodes something must have gone wrong in an upstream compilation phase.
If we see this happen, rather than expose the buggy effect to users, we close the fd and try again.
If we set the new deadline in the past, unblock currently pending IO if any.
If we spill all 8 bytes of this datum, the 1 in the high-order 4 bytes will overwrite some other variable in the stack frame.
If we stole from below, move down temporarily to replenish it.
If we stopped for a syntax error, consume the whole file so that we are sure we don't change the errors that go/parser returns.
If we stopped successfully before EOF, we read a byte that told us we were done.
If we support comments and it is the comment character then skip to the end of line.
If we timed out immediately, we could close the testserver before we entered the handler.
If we used a dummy body above, remove it now.
If we used the address size annotation to construct the argument list, mark that prefix as implicit: it doesn't need to be shown when printing the instruction.
If we used the entire text, no longer match is possible.
If we wait they memory will not be reclaimed until the next GC cycle.
If we want to go with the dynamic encoding, we should count at least one offset to be sure that the offset huffman tree could be encoded.
If we wanted to allow the flag to be set multiple times, accumulating values, we would delete this if statement.
If we were able to stop the timer, that means it was running (hadn't yet started the fallback), but we just got an error on the primary path, so start the fallback immediately (in 0 nanoseconds).
If we won't be able to retry this request later (from the roundTrip goroutine), mark it as done now.
If we're at EOF, we have a final, non-empty, non-terminated word.
If we're at EOF, we have a final, non-terminated line.
If we're doing Go syntax and the argument knows how to supply it, take care of it now.
If we're doing coverage, preprocess the .go files and put them in the work directory
If we're giving the compiler the entire package (no C etc files), tell it that, so that it can give good error messages about forward declarations.
If we're going to die, start that process on the system stack to avoid a Go stack split.
If we're holding locks, mallocing, or preemption is disabled, don't preempt.
If we're in the GC mark phase, can safely scan and blacken objects, and have work to do, run idle-time marking rather than give up the P.
If we're linked into a non-Go program we want to try to avoid modifying the original context in which the signal was raised.
If we're not allowed to open any more connections, make a request and wait.
If we're not importing runtime/cgo, we *are* runtime/cgo, which provides these functions.
If we're not tracking a word in a variable, mark the rest as having its address taken, so that we keep the whole thing live at all calls.
If we're on a release branch, use the closest matching tag that is on the release branch (and not on the master branch).
If we're out of pointer words, mark no scan in next bitmap byte and finish.
If we're reading complex64, atof will parse float32s and convert them to float64's to avoid reproducing this code for each complex type.
If we're recycling a G, it may already be on the rescan list.
If we're running a long test, start with a long duration because some of the tests (e.g., TestStackBarrierProfiling) are trying to make sure something *doesn't* happen.
If we're running on the g0, this systemstack is at the top of the stack.
If we're sending a non-chunked HTTP/1.1 response without a content-length, the only way to do that is the old HTTP/1.0 way, by noting the EOF with a connection close, so we need to set Close.
If we're too big, evict old stuff (front of the slice)
If we're using -x, assume we're debugging and want the full dump, so disable the rewrite.
If we're using the big-len data, positive int8 and int16 cannot overflow.
If we're writing out type T, we are very likely to write out type *T as well.
If we're writing the result of an append back to the same slice, handle it specially to avoid write barriers on the fast (non-growth) path.
If we're zero padding to the left we want the sign before the leading zeros.
If we've already done an import with the same set of relevant tags, reuse the result.
If we've already hit EOF or an I/O error, we are done.
If we've already printed other errors, they might have caused the fatal condition.
If we've considered this repository already, don't do it again.
If we've definitely serialized the type before, no need to do it again.
If we've got a match that's good enough, only look in 1/4 the chain.
If we've run out of data but have an error, give the split function a chance to recover any remaining, possibly empty token.
If we've run out of peek buffer and the boundary wasn't found (and can't possibly fit), we must have hit the end of the file unexpectedly.
If we've seen this typedef before, and it was an anonymous struct/union/class before too, use the old definition.
If white and the objects die before being marked they can be collected during this GC cycle.
If width is provided, it applies after leading spaces are trimmed and specifies the maximum number of runes to read to satisfy the verb.
If wire was encoded with an encoding method, fr must have that method.
If with2suffix is true, the form ending in "2" is returned".
If write has happened since the last read, UnreadByte returns an error.
If x and y are not equal, the type will be invalid (have a negative array count) and an inscrutable error will come out of the compiler and hopefully mention "name".
If x and y are zero, it assumes that they represent the point at infinity because (0, 0) is not on the any of the curves handled here.
If x cannot be represented in a uint64, the result is undefined.
If x cannot be represented in an int64, the result is undefined.
If x is Unknown, or if it is too large or small to represent as a fraction, the result is Unknown.
If x is Unknown, the result is "".
If x is Unknown, the result is (0, false).
If x is Unknown, the result is 0.
If x is Unknown, the result is 1.
If x is Unknown, the result is Unknown.
If x is Unknown, the result is false.
If x is Unknown, the result is x.
If x is a constant, the operands were constants.
If x is an identifier, tryResolve attempts to resolve x by looking up the object it denotes.
If x is invalid the position is token.NoPos.
If x is not a square mod p, ModSqrt leaves z unchanged and returns nil.
If x is not an acceptable anonymous field, the result is nil.
If x is not finite, the result is an Unknown.
If x is of the form (T), unparen returns unparen(T), otherwise it returns x.
If x is of the form *T, deref returns T, otherwise it returns x.
If x is prime, it returns true.
If x is the lhs of a shift, its final type must be integer.
If x matches the format, then the rest of the fields describe how to interpret x.
If x no longer has any dependencies, its finalClose method will be called and its error value will be returned.
If x starts with a number then that is the return value of re_execf(), otherwise 0 is returned.
If x still has dependencies, nil is returned.
If xxx is a C function, then cgo rewrites C.xxx into a new function _C_xxx that calls the C xxx in a standard pthread.
If xxx is a type, cgo replaces C.xxx with a Go translation.
If xxx is data, cgo arranges for C.xxx to refer to the C variable, with the type translated as described above.
If y is Unknown, the result is Unknown.
If you add a dependency on CGO, you must add the package to cgoPackages in cmd/dist/test.go.
If you add entries to this table, you must respect the prefix ordering and also update the constant values is os2_plan9.go.
If you add to this list, add to the list of "okay during garbage collection" status in mgcmark.go too.
If you are working in the directory containing the code imported as "unicode" and want to run the tests for "unicode/utf8", you can type "go test ./utf8" instead of needing to specify the full path.
If you call String on a reflect.Value of other type, it's better to print something than to panic.
If you change it, you must change the compiler too.
If you comment out the following line, the last partial block "r" won't be encoded.
If you do this, you may also have to raise _StackMin, since the stack barrier bookkeeping will use a large amount of each stack.
If you edit this structure, also edit type MemStats below.
If you edit this, edit ../../debug/goobj/read.go:/importPathToPrefix too.
If you find any, document them.
If you know for sure that your string is null-terminated, chartorune will be a bit faster.
If you make changes here, make changes there too.
If you modify hiter, also change cmd/internal/gc/reflect.go to indicate the layout of this structure.
If you pass in more bytes than the file contains, it will loop back to the beginning ad nauseam until it's sent exactly the number of bytes told to.
If you use it in a program, you must acknowledge somewhere in your documentation that you've used the IJG code.
If you use our work, you ought to acknowledge us.
If you were actually to use StreamReader in this manner, an attacker could flip arbitrary bits in the decrypted result.
If you were actually to use StreamReader in this manner, an attacker could flip arbitrary bits in the output.
If you're not on the serve goroutine, use writeFrameFromHandler instead.
If you're on the serve goroutine, call writeFrame instead.
If your application is not already running an http server, you need to start one.
If z's precision is 0, it is changed to 53 (and rounding will have no effect).
If z's precision is 0, it is changed to 64 (and rounding will have no effect).
If z's precision is 0, it is changed to 64 before rounding takes effect.
If z's precision is 0, it is changed to the larger of x's or y's precision before the operation.
If z's precision is 0, it is changed to the larger of x.BitLen() or 64 (and rounding will have no effect).
If z's precision is 0, it is changed to the precision of x before setting z (and rounding will have no effect).
If zero or otherwise invalid, a default value is used.
If zero, DefaultMaxHeaderBytes is used.
If zero, DefaultMaxIdleConnsPerHost is used.
If zero, MaxConcurrentStreams defaults to at least 100, per the HTTP/2 spec's recommendations.
If zero, MaxCountScale is used.
If zero, a default delay of 300ms is used.
If zero, it means the character is in the corresponding case.
If zero, it will be filled with random data before the first server handshake.
If zero, keep-alives are not enabled.
If zero, no periodic flushing is done.
If zero, or the size is omitted, the channel is unbuffered.
If zero, the default is unchanged.
If zero, then TLS 1.0 is taken as the minimum.
If zero, then the maximum version supported by this package is used, which is currently TLS 1.2.
If, later, Reset is called for that signal, or Stop is called on all channels passed to Notify for that signal, the signal will once again be blocked.
If, later, Reset is called for that signal, the original handling for that signal will be reinstalled, restoring the non-Go signal handler if any.
If, later, Reset or Ignore is called for that signal, or Stop is called on all channels passed to Notify for that signal, the signal will once again be ignored.
Ignore EPIPE errors copying to stdin if the program completed successfully otherwise.
Ignore all methods not directly called.
Ignore all the control operators.
Ignore any changes to args and just copy return values.
Ignore any error if we got at least one word.
Ignore any error--we don't care exactly why there is no DWARF info.
Ignore any unrecognized entries
Ignore any unrecognized sections.
Ignore assignments to the variable in straightline code preceding the first capturing by a closure.
Ignore attributes that don't parse into pkix.AttributeTypeAndValueSET (i.e.: challengePassword or unstructuredName).
Ignore attributes that don't parse.
Ignore causes the provided signals to be ignored.
Ignore embedded basic types - only user-defined named types can have methods or struct fields.
Ignore events that are from uninteresting goroutines or outside of the interesting timeframe.
Ignore exit code, and look at fsutil output instead.
Ignore field names that don't have the prefix we're looking for.
Ignore invalid RFC 2047 encoded-word errors.
Ignore invalid responses as they may be malicious forgery attempts.
Ignore methods that have an invalid receiver, or a blank _ receiver name.
Ignore no-op conversions when making decision.
Ignore non-functions or functions with receivers.
Ignore phis - they will always be first and can't be eliminated
Ignore profiling signals that arrive on non-Go threads.
Ignore pseudo-packages.
Ignore signal bit in first byte
Ignore since forbidden by RFC 2616 14.40.
Ignore that failure as long as we get output.
Ignore the "more" bit on the first iteration.
Ignore the Headers (the User-Agent breaks the deep equal, but we don't care about it)
Ignore the empty match iff the previous loop found the empty match.
Ignore the failure if the tests are running in a QEMU-based emulator, QEMU is not perfect at emulating everything.
Ignore the files themselves.
Ignore the range request.
Ignore the return value and never read from it, testing that we don't leak goroutines on the sending side:
Ignore the time zone in the test.
Ignore these options, -force is recognized by symbolizer.Symbolize
Ignore this chunk (of a known length).
Ignore trailing semicolons.
Ignore trailing zero-length or garbage IDAT chunks.
Ignore undoes the effect of any prior calls to Notify for the provided signals.
Ignore weekday except for error checking.
Ignore write on closed pipe.
Ignore, or reset the signal handlers for, SIGWINCH and SIGHUP.
Ignoring c_ISGID for golang.org/issue/4867
Ignoring the flagMethod bit, v describes the receiver, not the method type.
Illegal starter byte.
Illegal starting in stateTag but not in stateText.
Ilogb returns the binary exponent of x as an integer.
Imag returns the imaginary part of x, which must be a numeric or unknown value.
Image descriptor: 2x1, no local palette, and 2-bit LZW literals.
Image is a finite rectangular grid of color.Color values taken from a color model.
Image is an image.Image with a Set method to change a single pixel.
Imaginary constants can only be complex unless they are zero.
Imaginary part always has a sign, so force + and ignore space.
Imaginary part always has a sign.
Immediately after dialing, request cancelation and sleep.
Immediately following the note header is n_namesz bytes of name, padded to the next word boundary.
Imperial_Aramaic is the set of Unicode characters in script Imperial_Aramaic.
Implement Write so we can call Fprintf on a pp (through State), for recursive use in custom verbs.
Implement heap.Interface
Implement move-to-front with a simple copy.
Implement the dataFormat interface.
Implement using jumps.
Implementation defined modification time, or 0 if unknown
Implementation details.
Implementation for platforms that do not support integrated network poller.
Implementation notes: (A).
Implementation of Server
Implementation of runtime/debug.WriteHeapDump.
Implementation of the Conn interface.
Implementations for Type methods.
Implementations must not retain p.
Implementations of CookieJar must be safe for concurrent use by multiple goroutines.
Implementations of PublicSuffixList must be safe for concurrent use by multiple goroutines.
Implemented by using Windows CryptoAPI 2.0.
Implemented in ../runtime/syscall_windows.go.
Implemented in asm_solaris_amd64.s.
Implemented in assembly to avoid allocation.
Implemented in assembly to import from runtime.
Implemented in package runtime.
Implemented in runtime package.
Implemented in runtime.
Implemented in runtime/syscall_windows.go.
Implemented in the runtime package.
Implementing Float "shift" by modifying the (binary) exponents directly.
Implements methods to filter samples from profiles.
Implements methods to remove frames from profiles.
Implements reports whether the type implements the interface type u.
Implements reports whether type V implements interface T.
Implements(x.typ, Ti)
Implicits maps nodes to their implicitly declared objects, if any.
Import "unsafe" because we use go:linkname.
Import cycles deserve special treatment.
Import declarations are always removed.
Import imports a gc-generated package given its import path and srcDir, adds the corresponding package object to the packages map, and returns the object.
Import is shorthand for Default.Import.
Import path syntax An import path (see 'go help packages') denotes a package stored in the local file system.
Import populates importpkg from the serialized package data.
Import returns an error if it finds a comment it cannot understand or finds conflicting comments in multiple source files.
Import returns details about the Go package named by the import path, interpreting local import paths relative to the srcDir directory.
Import returns the imported package for the given import path, or an error if the package couldn't be imported.
ImportData imports a package by reading the gc-generated export data, adds the corresponding package object to the packages map indexed by id, and returns the object.
ImportDir is like Import but processes the Go package found in the named directory.
ImportDir is shorthand for Default.ImportDir.
ImportFrom returns the imported package for the given import path when imported by the package in srcDir, or an error if the package couldn't be imported.
ImportMode is reserved for future use.
Important that we don't traceback when these are at the bottom of the stack since we can't be sure that we will find the caller.
Imported by private.go, which should not be able to see the private method.
Imported interfaces are already fully resolved, so we can ignore qualified identifiers.
Imported or completely analyzed function.
Imported returns the package that was imported.
Imported via local path.
ImportedLibraries returns the names of all libraries referred to by the binary f that are expected to be linked with the binary at dynamic link time.
ImportedLibraries returns the paths of all libraries referred to by the binary f that are expected to be linked with the binary at dynamic link time.
ImportedSymbols returns the names of all symbols referred to by the binary f that are expected to be satisfied by other libraries at dynamic load time.
Importer is present for backward-compatibility.
Importing go/constant doesn't work in the build dashboard environment.
Importing is a sentinel taking the place in Walker.imported for a package that is in the process of being imported.
Imports are always first.
Imports are not sorted for nodes representing partial source files (i.e., if the node is not an ast.File or a *printer.CommentedNode not wrapping an *ast.File).
Imports are not sorted for partial source files.
Imports is already vendor-expanded.
Impossible but handle.
In (1), our conservative assumption is justified.
In (4), we should URL escape for URL attributes, and for others we have the attribute name available if our conservative assumption proves problematic for real code.
In *godefs mode, rewriteRef replaces the names with full definitions instead of mangled names.
In -godefs mode, do this for all typedefs.
In -n mode, print a banner between packages.
In 64-bit mode REX.W is another valid prefix to test for, but there is less ambiguity about that.
In Android-L, those /dev/log files are no longer accessible and logging is done through a centralized user-mode logger, logd.
In C syntax, this struct will be
In C.xxx the xxx might refer to a type, a function, a constant, or a global variable.
In DWARF 2 (which is what we claim to generate), the ref_addr is the same size as a normal address.
In DWARF 2 and 3, ClassExprLoc was encoded as a block.
In DWARF 2 and 3, ClassPtr was encoded as a constant.
In ELF files, the build ID is in the leading headers, which are typically less than 4 kB, not to mention 32 kB.
In Go 1 and Go 1.1, each package produced one Obj for all Go sources and one Obj per C source file.
In Go 1.0, rw.WriteHeader immediately flushed the (*response).header to the wire.
In Go 1.1 and earlier, Paths is a list of symbols corresponding to the source file names that produced the Obj.
In Go 1.1 and earlier, each function (represented by a Func) had its own LineTable, and the line number corresponded to a numbering of all source lines in the program, across all files.
In Go 1.1, the actual wire flush is delayed, so we could maybe tack on a Content-Length and better Content-Type after we see more (or all) of the output.
In Go 1.2, there is a single Obj for the entire program.
In Go, we must be explicit.
In Go1.5 the empty string encodes to "0", while this is not a valid number literal we keep compatibility so check validity after this.
In HTTP/1.1, any use of trailers forces HTTP/1.1 chunking and a flush at the first write.
In IEEE arithmetic the peak absolute error is 5.2e-16, rms absolute error 1.0e-16.
In Linux the user address space for each architecture is limited as follows (taken from the processor.h file for the architecture):
In Mach-O files, there's no limit, so we have to parse the file.
In SSA code this appears as
In STW GC, this will happen during mark termination.
In TLS 1.2, a full buffer is sadly required.
In XML name spaces, the translations listed in the attributes apply to the element name and to the other attribute names, so process the translations first.
In a __.PKGDEF, we only care about the package name.
In a chained pipeline, the result of the each command is passed as the last argument of the following command.
In a concurrent garbage collector, one worries about failing to mark a live object due to mutations without write barriers or bugs in the collector implementation.
In a data fragment, so read from it.
In a heavily loaded system, it's possible these will be delayed, so this is designed to succeed quickly if things are working, but to give it some slack if things are slow.
In a legal backslash escape, no matter how long, only the character immediately after the escape can itself be a backslash or quote.
In a normal binary, start at main.main and the init functions and mark what is reachable from there.
In a package using cgo, cgo compiles the C, C++ and assembly files with gcc.
In a separate file so that the import of "unsafe" does not pollute the original file.
In a separate section to test -u.
In a symbol name in an object file, "".
In a transaction, we always use the connection that the transaction was created on.
In a typical binary, this is INITENTRY.
In a valid Go program, those nodes always have zero dependencies (after removing all incoming dependencies), otherwise there are initialization cycles.
In addition to adding the HTTP handler, this package registers the following variables:
In addition to ordinary import paths, loadPackage accepts pseudo-paths beginning with cmd/ to denote commands in the Go command directory, as well as paths to those directories.
In addition to regular Go pointer types, this includes map, channel, and function types and unsafe.Pointer.
In addition to the 16 bits taken from the top, we can take 3 from the bottom, because node must be pointer-aligned, giving a total of 19 bits of count.
In addition to the BuildTags and ReleaseTags, build constraints consider the values of GOARCH and GOOS as satisfied tags.
In addition to the build flags, the flags handled by 'go test' itself are: -args Pass the remainder of the command line (everything after -args) to the test binary, uninterpreted and unchanged.
In addition to the notes on the fields below, see the documentation for Request.Write and RoundTripper.
In addition to the struct tags recognised by Unmarshal, the following can be used:
In addition to these cases trying to trigger rebuilds, there are special cases trying NOT to trigger rebuilds.
In addition, duffcopy reads R1,R2 and writes R0,R1,R2.
In addition, duffzero reads R0,R1 and writes R1.
In addition, on ARM, the runtime depends on the linker recording the value of GOARM.
In all cases way we mark the moduledata as noptrdata to hide it from the GC.
In all following words, we set the scan/dead appropriately to indicate that the object contains to the next 2-bit entry in the bitmap.
In all other cases, Scan returns an empty literal string.
In all other cases, the incoming getter and operand count are returned unchanged, and the third result value is false.
In all other cases, the type of x.f is the type of x.
In all other cases, the width is the unicode width of the text.
In all the scanning functions, if an operand implements method Scan (that is, it implements the Scanner interface) that method will be used to scan the text for that operand.
In all words *except* the second word, the high bit indicates that the object is still being described.
In an ErrorList, an error is represented by an *Error.
In any case, we'll be ready to send it requests.
In any case, whatever remains on the wire must not be parsed as another HTTP request.
In any other case, the returned path does not end in a slash.
In ast1, find the import "C" line and get any extra C preamble.
In ast2, strip the import "C" line.
In blocking mode, write barriers are not allowed after this point because we must preserve the condition that the work buffers are empty.
In both cases the algorithm is a linear scan over the two lists - T's methods and V's methods - simultaneously.
In both cases we stop.
In both cases, switch to gold.
In case a Read results in an error with non-zero bytes read, and the subsequent Write also results in an error, the error from Write is returned, as it is the one that prevented progressing further.
In case data lingers from previous invocation.
In case of C++ code, use the compiler named by the CXX environment variable or defaultCXX if CXX is not set.
In case of a syntax error, it stops at the offending character (without consuming it) and returns false.
In case of a syntax error, there is neither a name nor a type.
In case of an error, importType returns nil.
In case of cgo or Solaris, pthread_create will make us a stack.
In case we are panicking from external C code
In case we're using such a gcc, create a data block initialized with the values.
In certain cases, all of which require a memory destination, the REPN and REP prefixes are interpreted as XACQUIRE and XRELEASE from the Intel Transactional Synchroniation Extensions (TSX).
In checkmark mode, in the heap bitmap, the high bit of the 2-bit entry for the second word of the object holds the checkmark bit.
In command-line mode, wait for the viewer to be closed before proceeding
In concurrent GC, this happens during concurrent mark and we depend on addfinalizer to ensure the above invariants for objects that get finalizers after concurrent mark.
In contrast to Unix ar, the r operation always appends to the archive, even if a file with the given name already exists in the archive.
In contrast to io.LimitReader, MaxBytesReader's result is a ReadCloser, returns a non-EOF error for a Read beyond the limit, and closes the underlying reader when its Close method is called.
In contrast to strconv/decimal.go, only right shift is implemented in decimal format - left shift can be done precisely in binary format.
In contrast, if any mtime of an input is newer than the mtime of the installed object, a change has occurred since the build, and the build should be redone.
In each 2-bit entry, the lower bit holds the same information as in the 1-bit bitmaps: 0 means uninteresting and 1 means live pointer to be visited during GC.
In each pass of the algorithm, unsorted groups are sorted according to the group number of their following suffix.
In earlier versions of Go, the returned string was used to derive the compiler and linker tool names, the default object file suffix, and the default linker output name.
In early versions of Go each source file became a different Obj.
In effect, it reports the coverage of a given source file.
In effect, the method must look schematically like func (t *T) MethodName(argType T1, replyType *T2) error where T, T1 and T2 can be marshaled by encoding/gob.
In either case, WriteProxy also writes a Host header, using either r.Host or r.URL.Host.
In either case, the plaintext is returned in em so that it may be read independently of whether it was valid in order to maintain constant memory access patterns.
In either event, it is copyrighted by the author.
In either form, the information is used by the runtime to initialize the heap bitmap, and for large types (like 128 or more words), they are roughly the same speed.
In entryHeader the first entry, the name, is always printed as 16 bytes right-padded.
In essence, the _cgo_import.o file includes the extra linking directives that cmd/link is not sophisticated enough to derive from _all.o on its own.
In expected operation, the last m has received the SIGQUIT and run crash/exit and the process is gone, all long before any of the 5-second sleeps have finished.
In external linking mode, cmd/link does not process any host object files.
In external linking mode, we have to invoke gcc with -rdynamic to get the exported symbols put into the dynamic symbol table.
In external mode, cmd/link does not process any host object files, in particular foo.cgo2.o.
In fact if there is overflow/underflow, the corresponding code is unreachable because the known range is outside the range of the value's type.
In forced mode, this is necessary since GC can be forced at any point in the sweeping cycle.
In front of a data fragment, so read a hole.
In gc, the only concern is that a nil *rtype must be replaced by a nil Type, but in gccgo this function takes care of ensuring that multiple *rtype for the same type are coalesced into a single Type.
In gcstoptheworld debug mode, upgrade the mode accordingly.
In general RFC1123Z should be used instead of RFC1123 for servers that insist on that format, and RFC3339 should be preferred for new protocols.
In general Seek may not be efficient, but it is optimized for common cases such as seeking to the end to find the length of the data.
In general headers with the same name as those found in the header struct overwrite those found in the header struct with higher precision or longer values.
In general the list passed to -d can be comma-separated.
In general there are multiple possible escaped forms of any path.
In general there may be ambiguities but this should almost always work.
In general this should be false.
In general we'd need an atomic update here if the concurrent GC were marking objects in this span, because each bitmap byte describes 3 other objects in addition to the one being allocated.
In general, a given attribute's value may take on one of several possible classes defined by DWARF, each of which leads to a slightly different interpretation of the attribute.
In general, a gzip file can be a concatenation of gzip files, each with its own header.
In general, all the named templates might have changed underfoot.
In general, an IP wildcard address, which is either "0.0.0.0" or "::", means the entire IP addressing space.
In general, an import path denotes either a standard package (such as "unicode/utf8") or a package found in one of the work spaces (see 'go help gopath').
In general, code should call EscapedPath instead of reading u.RawPath directly.
In general, except as discussed below, Go programs will convert a synchronous signal into a run-time panic.
In general, higher-level synchronization should be used, such as locking or an atomic pointer write.
In general, if allocation is required, the decoder will allocate memory.
In general, one load can supply two bitmap byte writes.
In general, reflect.SliceHeader and reflect.StringHeader should be used only as *reflect.SliceHeader and *reflect.StringHeader pointing at actual slices or strings, never as plain structs.
In general, scan floating point columns into *float64.
In general, the instruction that stores the return address to the stack frame is not the same one that allocates the frame.
In general, types - but also objects referred to from inlined function bodies - can be reexported and so we need to know which package they are coming from.
In go, we don't have to be so paranoid: since the only mutating method Sort can call is TestingData.swap, it suffices here just to check that the final slice is sorted.
In godefs mode, if this field is a C11 anonymous union then treat the first field in the union as the field in the struct.
In internal link mode, read the host object files.
In internal mode, cmd/link itself processes all the host object files, in particular foo.cgo2.o.
In its own file so that a faster assembly or C version can be substituted easily.
In legacy mode, logs are written to /dev/log/main
In legalese: The authors make NO WARRANTY or representation, either express or implied, with respect to this software, its quality, accuracy, merchantability, or fitness for a particular purpose.
In logd mode, logs are sent to the logd via a unix domain socket.
In long mode, we're likely to get one or two samples in stackBarrier.
In many cases the approximation will be good enough.
In many cases, the runtime can perform an explicit write barrier operation like in case 2.
In many ways it is the opposite of the method Value.call above.
In mark 2, per-P caches are disabled.
In memory, 1-element array looks just like the element.
In most cases, new(Buffer) (or just declaring a Buffer variable) is sufficient to initialize a Buffer.
In multiple calls to Parse with the same receiver template, only one call can contain text other than space, comments, and template definitions
In next file, but not in API.
In no event shall the copyright-holder be liable for any incidental, punitive, or consequential damages of any kind whatsoever arising from the use of these programs.
In one of the few places it is updated by Go code - func save - it must be treated as a uintptr to avoid a write barrier being emitted at a bad time.
In order for the type assertion to succeed, we need it to match the actual type of the argument.
In order of application: 1.
In order to add the numerator we need to be able to avoid overflow.
In order to allow linking arbitrary object files without requiring dynamic libraries, cgo supports an "external" linking mode too.
In order to allow profiling when garbage collection is disabled from the beginning of execution, accumulate stats as if a GC just happened, and recount buckets.
In order to avoid false positives, restrict to cases in which one of the operands is constant.
In order to avoid needing heavy lifting here, we adopt the following strategy: there is a stack of available m's that can be stolen.
In order to be consistent across platforms, all implementations should do this and this test checks that.
In order to encrypt reasonable amounts of data a hybrid scheme is commonly used: RSA is used to encrypt a key for a symmetric primitive like AES-GCM.
In order to keep overflow buckets alive, we store pointers to all overflow buckets in hmap.overflow.
In order to make sure that there is always an m structure available to be stolen, we maintain the invariant that there is always one more than needed.
In order to minimize the amount of information needed to build a tree bzip2 uses a canonical tree so that it can be reconstructed given only the code length assignments.
In order to minimize this cost, the Go runtime places stack barriers in exponentially-spaced frames, starting 1K past the current frame.
In order to perform a handshake, we need to lock c.in also and c.handshakeMutex must be locked after c.in.
In order to rebuild packages information completely, we need to clear commands cache.
In order to reflect the GCM standard and make getUint64 suitable for marshaling these values, the bits are stored backwards.
In order to save everyone who wishes to run the tests from needing the reference implementation installed, the reference connections are saved in files in the testdata directory.
In order to support COMODO certificate chains, we have to accept Netscape or Microsoft SGC usages as equal to ServerAuth.
In order to trigger the bug, it has to reuse the connection so read the body
In other words, "parsing" the import data (which happens to be encoded in binary rather textual form) is the best way at the moment to re-establish the syntax tree's invariants.
In other words, at most n digits in base b fit into a Word.
In other words, given var once Once if once.Do(f) is called multiple times, only the first call will invoke f, even if f has a different value in each invocation.
In other words, if a variable is shadowed but not used after the shadowed variable is declared, it is inconsequential and not worth complaining about.
In other words, if there's exactly one operand that - after type-checking by calling get - stands for multiple operands, the resulting getter provides access to those operands instead.
In other words, it returns the number of bytes between the start of the struct and the start of the field.
In other words, programs passing in Strict mode are Go 1 compliant, but not all Go 1 programs will pass in Strict mode.
In our case it is two instructions, indicated by the value 3.
In package runtime, there is only one call that copies results back, in cgocallbackg1, and it does NOT pass a frame type, meaning there are no write barriers invoked.
In panics if loc is nil.
In parallel with the scan through the ytable for the appropriate line, there is a z pointer that starts out pointing at the strange magic byte list in the Optab struct.
In particular it can only call nosplit functions (textflag 7) and cannot do any scheduling that requires an m.
In particular it does not reject name space tags using undefined prefixes.
In particular it needs to coordinate with C in the use of threads and thread-local storage.
In particular that we strip bottom uninteresting frames like goexit, top uninteresting frames (runtime guts).
In particular, WriteProxy writes the initial Request-URI line of the request with an absolute URI, per section 5.1.2 of RFC 2616, including the scheme and host.
In particular, it does not interpret any tabs or line breaks within the segment.
In particular, it ends the reading of a varint.
In particular, it implements LZW as used by the GIF and PDF file formats, which means variable-width codes up to 12 bits and the first two non-literal codes are a clear code and an EOF code.
In particular, it must be done before mallocinit below calls racemapshadow.
In particular, it must not access the *hselect.
In particular, it resolves incomplete pointer types.
In particular, it should appear before any raw JavaScript or CSS, to avoid confusing the go command's restricted parser.
In particular, it's advanced (or rewound) as newlines are read (or unread).
In particular, it's unclear why a REPN applied to LOOP or JCXZ instructions does not turn into a BND.
In particular, package net uses cgo on most systems, and we want to preserve the ability to compile pure Go code that imports net without requiring gcc to be present at link time.
In particular, the list of methods for each embedded interface must be complete (it cannot depend on this interface), and so those methods can be added to the list of all methods of this interface.
In particular, the order and case of header field names are lost.
In particular, they can be the entire file name (like windows.c).
In particular: v needs a register.
In pattern, at least the last character is a '/', so strings.Index can't be -1.
In pinSlow we store to localSize and then to local, here we load in opposite order.
In practice HTTP/1.1 pipelining is not enabled in browsers and not seen often in the wild.
In practice most runes are ASCII so this is a conservative estimate of an effective cutoff value.
In practice that's fine.
In practice we could probably set it higher than what this function recommends.
In practice, it doesn't really matter.
In practice, only (possibly qualified) identifiers are possible.
In practice, parsing these is significantly less work and more robust than parsing C source.
In practice, the size is typeptrdata(t) except for non-trivial arrays.
In practice, this means that we make the fast path run through entersyscall doing no-split things, and the slow path has to use systemstack to run bigger things on the system stack.
In practice, this means the fn field must be scanned.
In preformatted sections (such as program text), it prefixes each non-blank line with preIndent.
In priority order: 1) an unused register 2) a non-unique register not holding a final value 3) a non-unique register
In pseudo-Go definitions: Go string to C string The C string is allocated in the C heap using malloc.
In rare cases, asmoutnacl might split p into two instructions.
In rare cases, the non-Go code may run before the Go code, in which case the next section also applies.
In reality it's *overlapped, but we cast it to *net_op anyway.
In reflect.Value.Call, trigger a garbage collection after reflect.call returns but before the args frame has been discarded.
In reports whether every point in r is in s.
In reports whether p is in r.
In reports whether the rune is a member of one of the ranges.
In returns t with the location information set to loc.
In returns the type of a function type's i'th input parameter.
In runtime package so can use runtime guts.
In runtime, we want to be able to build the package with the go tool, and it assumes these generated files already exist (it does not know how to build them).
In slices and arrays, as well as maps, all elements, even zero-valued elements, are transmitted, even if all the elements are zero.
In some cases the first entry may include the address range but not the name of the file.
In some circumstances "return F(...)" where F has multiple returns is miscompiled by 6g due to bold assumptions in componentgen.
In some environments, the slow IPs may be explicitly unreachable, and fail more quickly than expected.
In struct types, an embedded error must only be visible if AllDecls is set.
In such a case, QueryRow returns a placeholder *Row value that defers this error until a Scan.
In such case we need to queue finalizer for execution, mark the object as live and preserve the profile special.
In such cases, the choice of time zone, and therefore the time, is not well-defined.
In such context dynamic priority boosting does nothing but harm, so we turn it off.
In tests, the PRNG may return all zeros so we do this to break the loop.
In that case a decimal point followed by a maximal series of digits is parsed as a fractional second.
In that case gcc only gets the gcc_* files.
In that case it is interpreted to mean UTC.
In that case the package qualifier is not needed.
In that case use t.ExecuteTemplate to execute a valid template.
In that case we will see a pointer to a single element, but we need to check the entire data structure.
In that case, Unmarshal sets the pointer to nil.
In that case, a correction term is need.
In that case, an error was reported when declaring those methods.
In that case, if the second (error) argument evaluates to non-nil during execution, execution terminates and Execute returns that error.
In that case, if the second (error) return value evaluates to non-nil during execution, execution terminates and Execute returns that error.
In that case, operand is called with keep_parens set.
In that case, the sql package will not sanity check Exec or Query argument counts.
In that case, the syntax of the number tells us its type, and we use Go rules to resolve.
In that case, truncate it after 1.0e38.
In that case, v must represent a non-nil pointer to data or be an assignable reflect.Value (v.CanSet()) If the input is at EOF, DecodeValue returns io.EOF and does not modify v.
In that context it is okay to stop early.
In that context, require that we used up the entire defer stack.
In that document, origPtr is called `I' and c is the `C' array after the first pass over the data.
In the absence of a time zone indicator, Parse returns a time in UTC.
In the absence of bugs, that should not happen.
In the absence of errors lower in the dependency tree, check for case-insensitive collisions of import paths.
In the block that follows a regexp, each line gives the semicolon-separated match results of running the regexp on the corresponding string.
In the case of DualStack (Happy Eyeballs) dialing, this may be called multiple times, from multiple goroutines.
In the case that the key agreement protocol doesn't use a ServerKeyExchange message, generateServerKeyExchange can return nil, nil.
In the child, this function must not acquire any locks, because they might have been locked at the time of the fork.
In the code below c1 is such a channel.
In the common case, share data with other packages.
In the current runtime, this means all malloc size classes larger than the cutoff must be multiples of four words.
In the directory containing the package, .go, .c, .h, and .s files are considered part of the package except for:
In the encoding, some lists start with the list length.
In the error case, the value of z is undefined but the returned value is nil.
In the event of a cache miss, an entry must be evicted from the hash table, copied to a log that will eventually be written as profile data.
In the event of an error, it returns 0 and the error can be obtained by calling Err().
In the example above, node n4 has prefix "cbc" and n4's next node is n5.
In the example above, positive/zero priorities are marked with a trailing "+" or "-".
In the example, 1 is foo and 2 is bar.
In the example, x.Block dominates y.Block, y.Block dominates z.Block, and z.Block dominates x.Block (treating "dominates" as reflexive).
In the first and second passes, instructions that are labels temporarily use the opt field to point to their basic block.
In the first case, the arrow must be re-associated with the channel type parsed already:
In the former case we are done, and in the latter case we don't care because the type checker will do a separate field lookup.
In the former case, the type checker can do a top-level lookup, and in the latter case it will do a separate field lookup.
In the former case, we want v.ptr + offset.
In the interests of simplicity and determinism, this code does not attempt to reset the record size once the connection is idle, however.
In the last case, the name may still be a type name.
In the latter case, a subsequent import clause is expected to provide a name for the package.
In the latter case, incHi sends a clear code, resets the encoder state and returns errOutOfCodes.
In the latter case, the conflicting entries are dropped.
In the long run, all outcomes are at least this bad.
In the most simple case, if the type of the value from the source column is an integer, bool or string type T and dest is of type *T, Scan simply assigns the value through the pointer.
In the near future we may choose to unmarshal the start element on it, if not nil.
In the next line "os" should refer to the result variable, not to the package.
In the normal case we return here.
In the past we failed to handle this.
In the past we used to generate a separate build ID for each package using cgo, and the linker concatenated them all.
In the ppc64 ABI, .plt is a data section written by the dynamic linker.
In the process, collect any comment groups encountered, and remember the last lead and and line comments.
In the rare case in which both operands are constant (e.g. runtime.GOOS and "windows"), we'll only catch mistakes if the LHS is repeated, which is how most code is written.
In the recursive case, we have to update this at most len(list) times and can stop when we an iteration that doesn't change anything.
In the returned data, continuation lines are separated from the previous line only by a single space: the newline and leading white space are removed.
In the rules, the tag of a field refers to the value associated with the key 'xml' in the struct field's tag (see the example above).
In the second case, any Host line is ignored.
In the second example, the argument math is passed through to the test binary, instead of being interpreted as the package list.
In the second form, the following rules apply: - if u.Scheme is empty, scheme: is omitted.
In the second word, the high bit is the GC ``checkmarked'' bit (see below).
In the symbol layout described below "symref index" stands for this index.
In the t0 template, it will be in a text context.
In the t1 template, it will be in a URL context.
In the t2 template, it will be in a JavaScript context.
In the t3 template, it will be in a CSS context.
In the terminology of the zlib library, Flush is equivalent to Z_SYNC_FLUSH.
In the text or noptr sections, we know that the pointer does not point to a Go pointer.
In the third pass, the opt field reset to point to the predecessor of an instruction in its basic block.
In the uncontended case, as fast as spin locks (just a few user-level instructions), but on the contention path they sleep in the kernel.
In the worst case, the slice can grow when mapped, making things unpleasant.
In the worst case, the string can grow when mapped, making things unpleasant.
In the worst case, we get two elements from the first byte (which is encoded differently) and then every varint is a single byte long.
In the worst case, we'll do O(log(_WorkbufSize)) unnecessary balances.
In theory all the commands we invoke should have the same default computation of these as we do, but in practice there might be skew This makes sure we all agree.
In theory we should use a sorted tree so that insertions are guaranteed O(log n) and then the loop is guaranteed O(n log n).
In theory, all GOT should point to the first PLT entry, Linux/ARM's dynamic linker will do that for us, but FreeBSD/ARM's dynamic linker won't, so we'd better do it ourselves.
In theory, the pointers are only allowed to jump backward.
In theory, we should set b.Likely here based on context.
In these cases no error will be returned but the decrypted DER bytes will be random noise.
In these cases, streaming the output produces the same result as not streaming, just more immediately.
In these tests, actual content (not just template definitions) comes from the parsed files.
In these words, if a bit pair with a high bit 0 is encountered, the low bit can also be assumed to be 0, and the object description is over.
In this case a link went directly to a call, but should really go to the dummy .outN outputs that were created for the call that themselves link to the inputs with levels adjusted.
In this case a type can appear as two different pieces of memory.
In this case it's less.
In this case that is not necessarily true, so stick to what we know before entering this function.
In this case the bytes result is meaningless, so it must be 0.
In this case the context function will be called from C code.
In this case the recursion doesn't always reduce the length of codes so we need to ensure termination via another mechanism.
In this case we can replace x with a copy of b.
In this case we'll just clobber an input and future uses of that input must use a restore.
In this case, "foo" could be a series name registered in Launchpad with its own branch, and it could also be the name of a directory within the main project branch one level up.
In this case, *entry and the final seek position are unspecified.
In this case, Wait does not complete until the goroutine stops copying, either because it has reached the end of Stdin (EOF or a read error) or because writing to the pipe returned an error.
In this case, a and n aren't coprime and we cannot calculate the inverse.
In this case, adjust addend so that linker can keep relocating relative to the end of the relocation.
In this case, e may be incomplete, but it will be valid to call e.id (which depends on e's Name, Domain and Path).
In this case, give the write goroutine a bit of time to finish its send.
In this case, if Readdir returns an empty slice, it will return a non-nil error explaining why.
In this case, if Readdir succeeds (reads all the way to the end of the directory), it returns the slice and a nil error.
In this case, if Readdirnames returns an empty slice, it will return a non-nil error explaining why.
In this case, if Readdirnames succeeds (reads all the way to the end of the directory), it returns the slice and a nil error.
In this case, needm is expected to find an m to use and return with m, g initialized correctly.
In this case, nudging produces the context after (1) happens.
In this case, or when the goroutine is not panicking, or if the argument supplied to panic was nil, recover returns nil.
In this case, since the entire transition is a g+SP update, a partial transition updating just one of those will be detected by the stack bounds check.
In this case, systemstack switches to the per-OS-thread stack, calls fn, and switches back.
In this case, the actual value of the scanned number is res * b**count.
In this case, the argument f, typically a closure, captures the value to be searched for, and how the data structure is indexed and ordered.
In this case, the caller guarantees that only whole bytes in dst need to be written.
In this case, the partial carry chain didn't change any values and top is zero.
In this case, the returned index and indirect values have the following meaning:
In this case, the traceback function will be called from C code.
In this case, there's also saved BP.
In this case, tracing will not mark the object, even though it's reachable.
In this case, we can shift the matching frame to align with the next suffix chunk.
In this case, we don't have a named type and we simply continue with the underlying type.
In this case, we don't want to wait too long, and we want to return false so this connection isn't re-used.
In this case, we know getg() always returns the same result within a given function and we want to avoid the temporaries, so we do the rewrite earlier than is typical.
In this file, the return PC is always called LR, no matter how it was found.
In this form, reg must be a register and shift can be a register or an integer constant.
In this form, x and y are integer literals only, not arbitrary expressions.
In this mode, TLS is susceptible to man-in-the-middle attacks.
In this mode, a goroutine's stack can only grow.
In this mode, objdump disassembles the binary starting at the start address and stopping at the end address.
In this mode, objdump prints a sequence of stanzas of the form:
In this mode, when the Reader reaches the end of the data stream, Read returns io.EOF.
In this package, the CRC polynomial is represented in reversed notation, or LSB-first representation.
In this respect ReadAt is different from Read.
In this respect, ReadAt is stricter than Read.
In this test almost everything is BAD except the simplest cases where input directly flows to output.
In this usage hdr.Data is really an alternate way to refer to the underlying pointer in the slice header, not a uintptr variable itself.
In this variant we add multiple driver templates by hand to an existing bundle of templates.
In this version, the contents of the padding are random and cannot be checked.
In this way pack's r operation is more like Unix ar's rq operation.
In this way, all supported systems use identical instructions to access TLS, and they are rewritten appropriately first here in liblink and then finally using relocations in the linker.
In this way, import comments let package authors make sure the custom import path is used and not a direct path to the underlying code hosting site.
In those latter cases, go to the code after the select.
In tokens returned by Decoder.Token, the Space identifier is given as a canonical URL, not the short prefix used in the document being parsed.
In two's complement representation, the negative number of any number (except the smallest one) can be computed by flipping all the bits and add 1.
In typical use, both Path and Args are set by calling Command.
InFamily reports whether a is a member of any of the specified architecture families.
InOrder checks if a-equal elements were not reordered.
InUseBytes returns the number of bytes in use (AllocBytes - FreeBytes).
InUseObjects returns the number of objects in use (AllocObjects - FreeObjects).
Inappropriate file type or format
Include a write barrier if wb is true.
Include comments that are inside the function body.
Include documentation belonging to blank imports.
Include the build IDs of any dependencies in the hash.
Include the content of runtime/internal/sys/zversion.go in the hash for package runtime.
Include the list of files compiled as part of the package.
Included both by runtime (compiled via 6c) and linkers (compiled via gcc).
Incoming notes are compared against this table using strncmp, so the order matters: longer patterns must appear before their prefixes.
Incoming operands are usually named x, y, a, b, and so on, but never z.
Incoming requests to a server should create a Context, and outgoing calls to servers should accept a Context.
IncomparableField returns an incomparable Field of struct Type t, if any.
IncompatibleUsage results when the certificate's key usage indicates that it may only be used for a different purpose.
Incomplete format specification caused crash.
Incorporate into flow graph.
Incorporate updates from sender into local copy.
Incorrect handling of liveness when walking stack containing faulting frame.
Incorrect sign extension of div arguments.
Incorrect usage: Add is too late.
IncorrectPasswordError is returned when an incorrect password is detected.
Increase the refcount of the register so that igen's caller has to call Regfree.
Increasing n might help in this case, so this test is a bit more generic than most of the others.
Increment context version, versions are used to differentiate static files in different packages
Increment e.hi, the next implied code.
Increment in big endian: c0 is high, c1 is low.
Increment the WaitGroup counter.
Increment waiters count.
Incremental concatenation.
Indeed, the definition for _cgo_gcc_Cfunc_sin will be provided to the host linker by foo2.cgo.o, which in turn will need the symbol 'sin'.
Indent appends to dst an indented form of the JSON-encoded src.
Indent sets the encoder to format each encoded value with Indent.
Indent sets the encoder to generate XML in which each element begins on a new indented line that starts with prefix and is followed by one or more copies of indent according to the nesting depth.
Independent of Decode, basic coverage of the accessors in Number
Independently check that the special "Is" functions work in the Latin-1 range through the property table.
Index 0 corresponds to a nil LSym* pointer.
Index describes the path from x to f in x.f.
Index implements a suffix array for fast substring search.
Index into the abbrevs table below.
Index of a related section.
Index of array preserves input value.
Index of first argument after the format in the Printf call.
Index of first tagged field.
Index of fixed-size array by constant can put the offset in the addressing.
Index of rightmost occurrence of b in s.
Index of the first non-whitespace byte in data.
Index of the next output byte in tt.
Index of this symbol in the symbol reference list.
Index responds to a request for "/debug/pprof/" with an HTML page listing the available profiles.
Index responds with the pprof-formatted profile named by the request.
Index returns the i'th element of Fields.
Index returns the i'th element of Nodes.
Index returns the index of the first instance of sep in s, or -1 if sep is not present in s.
Index returns the index of the palette color closest to c in Euclidean R,G,B,A space.
Index returns v's i'th element.
Index variable whose evaluation has side-effects
IndexAny interprets s as a sequence of UTF-8-encoded Unicode code points.
IndexAny returns the index of the first instance of any Unicode code point from chars in s, or -1 if no Unicode code point from chars is present in s.
IndexByte returns the index of the first instance of c in s, or -1 if c is not present in s.
IndexFunc interprets s as a sequence of UTF-8-encoded Unicode code points.
IndexFunc returns the index into s of the first Unicode code point satisfying f(c), or -1 if none do.
IndexRune interprets s as a sequence of UTF-8-encoded Unicode code points.
IndexRune returns the index of the first instance of the Unicode code point r, or -1 if rune is not present in s.
Indexed by gob types.
Indexed representation.
Indexes into the Header.Ident array.
Indicate that signalling is done
Indicate that we are a fixed Huffman block
Indicates "symbolic" linking.
Indicates flexible array member, which Go doesn't support.
Indicates that the dynamic linker should process all relocations for the object containing this entry before transferring control to the program.
Indicates that the shared object or executable contains code using a static thread-local storage scheme.
Indicates there may be relocations in non-writable segments.
Indicates to write barrier and sychronization task to preform.
Indices into the Delta arrays inside CaseRanges for case mapping.
Indir is for the value, not the type.
Indirect Go func value (dummy) to obtain actual code address.
Indirect call/jmp gets a star to distinguish from direct jump address.
Indirect reports whether any pointer indirection was required to get from x to f in x.f.
Indirect returns the value that v points to.
Individual bitLen tests.
Indulge in some paranoia by writing the length of s, too, as protection against length extension attacks.
Inf returns a complex infinity, complex(+Inf, +Inf).
Inferno utils/5l/l.h http://code.google.com/p/inferno-os/source/browse/utils/5l/l.h
Infinite copy loops may happen in unreachable code.
Info about defer passed in G struct.
Info holds result type information for a type-checked package.
Info logs a message with severity LOG_INFO, ignoring the severity passed to New.
Info returns information about properties of basic type b.
Inform gcBgMarkStartWorkers that this worker is ready.
Information about a specific installation of gccgo.
Information about the layout of the executable image for the runtime to use.
Information about what cpu features are available.
Information associated to this entry.
Information from the compiler about the layout of stack frames.
Information passed up from the callee frame about the layout of the outargs region.
Informational: record package name associated with import path, for use in human-readable messages.
Inherit permission bits from v, but clear flagEmbedRO.
Inherit properties of the listening socket.
Inherited is the set of Unicode characters in script Inherited.
Init alloc bits cache.
Init causes a panic if the file size does not match the src size.
Init initializes a Scanner with a new source and returns s.
Init initializes or clears list l.
Init initializes w to write a new GC program by calling writeByte for each byte in the program.
Init installs the debugging facility.
Init is idempotent with respect to the heap invariants and may be called whenever the heap invariants may have been invalidated.
Init makes a closeWaiter usable.
Init prepares the scanner s to tokenize the text src by setting the scanner at the beginning of src.
Init sets the name and error handling property for a flag set.
Init the markbit structures
Init underlying literal.
InitHist sets the line count to 1, for reproducible testing.
InitOrder is the list of package-level initializers in the order in which they must be executed.
Initial built-in profiles.
Initial magic number for ELF files.
Initial trigger ratio guess.
Initialization expressions depending on other consts, vars, or functions, add dependencies to the current check.decl.
Initialization for any invocation.
Initialization function pointers.
Initialization priority of this package relative to other packages.
Initialize Huffman decoder to recognize "0".
Initialize Huffman decoding tables from array of code lengths.
Initialize a new Chain.
Initialize a new span with the given start and npages.
Initialize a single central free list.
Initialize alloc bits cache.
Initialize an empty doubly-linked list.
Initialize cache of capacity 4.
Initialize decompressor with invalid Huffman coding.
Initialize deflater unless the Writer is being reused after a Reset call.
Initialize f to allocate objects of the given size, using the allocator to obtain chunks of memory.
Initialize head to 0, compare with 0 to test for emptiness.
Initialize indegree of each block
Initialize line reader state.
Initialize liveSet and uses fields for this block.
Initialize m's pixels.
Initialize per-action execution state.
Initialize priority queue with schedulable values.
Initialize signal handling
Initialize signal handling.
Initialize stack and goroutine for note handling.
Initialize stack bounds from system stack.
Initialize stack for handling strings from the errstr system call, as used in package syscall.
Initialize stack guards so that we can start calling both Go and C functions with stack growth prologues.
Initialize start state of block.
Initialize the encoder and decoder.
Initialize the fixedHuffmanDecoder only once upon first use.
Initialize the global variable that describes the ELF header.
Initialize the hash table.
Initialize the position array field.
Initialize the quantization tables.
Initialize the rest of the allocator.
Initialize the rest of the palette to opaque black.
Initialize the size_to_class tables.
Initialize this thread to use the m.
Initialize two big ints with the first two numbers in the sequence.
Initialize value information.
Initialize values we need for the computation.
Initialize with random data so hash collisions will be hard to engineer.
Initialized by assembleChildren().
Initialized by calculateDepths().
Initialized by findExits().
Initialized in exec_windows.go.
Initializers referring to variables related by an initialization dependency appear in topological order, the others appear in source order.
Initializes the sets for solving the live variables.
Initiate TLS and check remote host name against certificate.
Initiating a renegotiation is not supported, but support for accepting renegotiation requests may be enabled.
Injects the list of runnable G's into the scheduler.
Inlcalls/nodelist/node walks fn's statements and expressions and substitutes any calls made to inlineable functions.
Inlcopy and inlcopylist recursively copy the body of a function.
Inline function misses struct tags.
Inlining is disabled.
Innermost returns the innermost (child) scope containing pos.
Inode is remote (not really error)
Input bits, in top of b.
Input for JSON and other benchmarks.
Input for TestIssue13566
Input for cgo -godefs.
Input for parser benchmark.
Input is dead beyond the phi, deallocate anywhere else it might live.
Input is the main input: a stack of readers and some macro definitions.
Input is utf-16 code points.
Input to cgo -godefs.
Input variables: U,V,...
InputOffset returns the input stream byte offset of the current decoder position.
Inscriptional_Pahlavi is the set of Unicode characters in script Inscriptional_Pahlavi.
Inscriptional_Parthian is the set of Unicode characters in script Inscriptional_Parthian.
InsecureSkipVerify controls whether a client verifies the server's certificate chain and host name.
Insert a fake non-zero adjustment so that stkcheck can recognize the end of the stack-splitting prolog.
Insert a new item and then modify its priority.
Insert a varkill op to record that a variable is no longer live.
Insert a varlive op to record that a variable is still live.
Insert attempts to insert a named object obj into the scope s.
Insert attempts to insert an object obj into scope s.
Insert implicit semicolon on previous line, before the newline character.
Insert in the hash table all strings up to the end of the match.
Insert inserts b at offset i.
Insert into existing table.
Insert moved spills (that have not been marked invalid above) at start of appropriate block and remove the originals from their location within loops.
Insert new node after the common section of the prefix.
Insert s into appropriate list.
Insert the conditional jump or value gen.
InsertAfter inserts a new element e with value v immediately after mark and returns e.
InsertBefore inserts a new element e with value v immediately before mark and returns e.
Inserts prev before curr in the instruction stream.
Inserts with a prepared statement:
Inserts with db.Exec:
Inset returns the rectangle r inset by n, which may be negative.
Inside a bucket, we keep a list of types that have been serialized so far, most recently used first.
Inspect each rune for being a disallowed character.
Inspect the AST and print all identifiers and literals.
InstAlt, InstAltMatch, InstCapture, InstEmptyWidth
Install Native Client stdin, stdout, stderr.
Install a fake DNS server.
Install aes hash algorithm if we have the instructions we need
Install cross-compiled binaries to subdirectories of bin.
Install header for cgo in c-archive and c-shared modes.
Install installs the list of packages named on the command line.
Install stack barriers during stack scan.
Install the Mach exception handler used to intercept EXC_BAD_ACCESS and convert it into a Go panic.
Install the cgo export header file, if there is one.
Install the top-level type before the subtypes (e.g. struct before fields) so recursive types can be constructed safely.
Install to GOBIN or bin of GOPATH entry.
Installing stack barriers forces the G to a safe point, while all other operations that modify stack barriers run on the G and prevent it from reaching a safe point.
Instance an SVGPoint object with given event coordinates.
Instances of this type only exist when hasGCMAsm returns true.
Instead be lenient and test this in the type checker.
Instead continue waiting until timeout.
Instead fix prints the differences a rewrite would introduce.
Instead it checks that it can get the first 64 kB and assumes it can grab the rest as needed.
Instead it must check the scanner's ErrorCount or the number of calls of the error handler, if there was one installed.
Instead of extra bookkeeping on all our VirtualAlloc calls, try freeing successively smaller pieces until we manage to free something, and then repeat.
Instead of figuring out how to emit the write barriers missing in the assembly manipulation, we change the type of the field to uintptr, so that it does not require write barriers at all.
Instead of initializing the variables above in the declarations, schedinit calls this function so that the variables are initialized and available earlier in the startup sequence.
Instead of iterating over f.Blocks, iterate over their postordering.
Instead of keeping track of the reverse dependency information, evict everything.
Instead of recording the full set of names (below), record only that there were unexported methods.
Instead of reducing the running count of this test before calling the tRunner and increasing it afterwards, we rely on tRunner keeping the count correct.
Instead of requiring each client to specify the frequency, we hard code it.
Instead of rewriting the test cases above, adjust the first stack frame to use up the extra bytes.
Instead of special casing only amd64, we treat this as an error on all 64-bit architectures so as to be future-proof.
Instead of stealing runnext in this window, back off to give _p_ a chance to schedule runnext.
Instead of that, if we round up to 1, just try again.
Instead of trying to find all such instructions, swap the contents so that the problem becomes inserting next after curr.
Instead the arguments to the underlying system call are the number below and a pointer to an array of uintptr.
Instead they let the file system record mtimes as the distribution is unpacked.
Instead we make a _test directory under the import path and then repeat the import path there.
Instead we map the memory information bitmap immediately after the data segment, large enough to handle another 2GB of mappings (256 MB), along with a reservation for an initial arena.
Instead we recheck it here on the non-preemptable system stack to determine if we should preform an assist.
Instead we use a local variant of _cgoCheckPointer.
Instead we zero the overflow timer duration and start it once more.
Instead we're testing that the conditions are good for how it is used in init (must be on main thread).
Instead you have to allocate the descriptor and then mark it close-on-exec.
Instead, _try_ to resolve such a key if possible.
Instead, a hack: we iteratively Peek up to the bufio.Reader's max size, looking for a double CRLF.
Instead, a separate tool, cgo, processes it to produce three output files.
Instead, any error is kept and can be checked afterwards.
Instead, arrange that we can infer what we need from only the presence or absence of an error on a specific line.
Instead, assume that the reservation is okay and check the assumption in SysMap.
Instead, assume that the reservation is okay if we can reserve at least 64K and check the assumption in SysMap.
Instead, build a binary for the current system (only) and test that objdump can handle that one.
Instead, entire file should be the output and no error.
Instead, first verify the root and see if it matches Bob's claim.
Instead, it collects all the Go code and writes a single go.o object file containing it.
Instead, it overwrites its return PC and returns directly to the triggered select case.
Instead, just go there directly.
Instead, must renegotiate before it does.
Instead, once runtime-integrated network poller tells us that the socket is ready, get the SO_ERROR socket option to see if the connection succeeded or failed.
Instead, reconstructBlock is called on each accumulated block by the reconstructProgressiveImage method after all of the SOS markers are processed.
Instead, report "void" values as regular values but with the empty tuple type.
Instead, the build process generates an object file using dynamic linkage to the desired libraries.
Instead, the caller should Wait in a loop:
Instead, the compiler assumes that any value whose address is taken without being immediately dereferenced needs to be moved to the heap, and new(T) and slice literals are always real allocations.
Instead, the msb of the previous byte could be used to hold bit 63 since we know there can't be more than 64 bits.
Instead, the scanner simply returns the respective individual characters (or possibly sub-tokens).
Instead, these are wrappers around the actual atomics (casp1 and so on) that use noescape to convey which arguments do not escape.
Instead, these functions and methods are shown at the package level.
Instead, they are replaced by the Unicode replacement character U+FFFD.
Instead, this test relies on the fact that the liveness analysis turns any non-live parameter on entry into a compile error.
Instead, track a Go process-wide intent of the current working directory, and switch to it at important points.
Instead, turn it into a new Error that will return details for all the errors.
Instead, use a version control system's ``diff'' functionality to inspect the changes that fix makes before committing them.
Instead, we acquire and release an m on each call.
Instead, we can change to a different epoch so long ago that all the times we care about will be positive, and then round to zero and round down coincide.
Instead, we compute the fraction again and compare the rounded result.
Instead, we extract it from position info of the source files as needed.
Instead, we split the log into two halves and let the signal handler fill one half while a goroutine is writing out the other half.
Instead, we use xrealwd to get a canonical goroot/src before the comparison to avoid this problem.
Instead, when the preempt flag is set, this puts itself into _Gwaiting to be woken up by gcController.findRunnable at the appropriate time.
Instead, when this is set, we stop reading subsequent requests on this connection and stop reading input from it.
Instruct legacy heapz parsers to grab historical allocation data, instead of the default in-use data.
Instruction arguments, in ARM manual order.
Instruction arguments, in Intel order
Instruction being assembled is a jump.
Instruction has no variants
Instruction is a jump.
Instruction takes one operand, a destination.
Instruction variants table, populated by initvariants via Main.
Instructions are threaded together in a doubly-linked list.
Instructions known to libopcodes (or xed) but not to us.
Instructions known to us but not to libopcodes (at least in binutils 2.24).
Instructions known to us but not to plan9.
Instructions known to us but not to xed.
Instructions libopcodes knows but we do not (e.g., 0F 19 11).
Instructions not generated need not be listed.
Instructions not known to us.
Instructions not known to xed.
Instructions we know but libopcodes does not (e.g., 0F D0 11).
Instrument dst argument of runtime.writebarrier* calls as we do not instrument runtime code.
Instrument skips runtime package.
Int defines an int flag with specified name, default value, and usage string.
Int is a 64-bit integer variable that satisfies the Var interface.
Int promises that the zero value is a 0, but in gmp the zero value is a crash.
Int returns a non-negative pseudo-random int from the default Source.
Int returns a non-negative pseudo-random int.
Int returns v's underlying value, as an int64.
Int values not representable as an int64
Int values representable as an int64
Int*, Uint*, Float*, Complex*: Bits Array: Elem, Len Chan: ChanDir, Elem Func: In, NumIn, Out, NumOut, IsVariadic.
Int31 returns a non-negative pseudo-random 31-bit integer as an int32 from the default Source.
Int31 returns a non-negative pseudo-random 31-bit integer as an int32.
Int31, Int63, and Uint32 generate values of the given width.
Int32 is a ValueConverter that converts input values to int64, respecting the limits of an int32 value.
Int63 returns a non-negative pseudo-random 63-bit integer as an int64 from the default Source.
Int63 returns a non-negative pseudo-random 63-bit integer as an int64.
Int64 defines an int64 flag with specified name, default value, and usage string.
Int64 returns n as an int64.
Int64 returns the int64 representation of x.
Int64 returns the integer resulting from truncating x towards zero.
Int64 returns the number as an int64.
Int64String int64 `json:",string"`
Int64Var defines an int64 flag with specified name, default value, and usage string.
IntLiteral returns the Node's literal value as an integer.
IntPairs compare on a only.
IntSize is the size in bits of an int or uint value.
IntString accepts an integer followed immediately by a string.
IntVar defines an int flag with specified name, default value, and usage string.
Integer limit values.
Integer overflow with large length
Integer size conversions get two suffixes.
Integer too large - issue 10634.
Integer value for this label
Integer/Address value.
Integer/address value
IntegerType is here for the purposes of documentation only.
Integers are printed unsigned if they have unsigned type.
Integers use variable-length encoding for compact representation.
Integral float constat is ok.
Integrate, with const of integration
Integrated network poller (kqueue-based implementation).
Integrated network poller (platform-independent part).
Intel IA-64 Processor.
Intel xed works this way, treating the F2/F3 as inhibiting the 66.
IntelSyntax returns the Intel assembler syntax for the instruction, as defined by Intel's XED tool.
Intended for things like function/type/debug-related persistent data.
Intended mainly for debugging purposes.
Intended to create register pressure which forces asymmetric op into different code paths.
Intended to not fire during benchmarking.
Intended use is provide a sleep and wakeup primitive that can be used in the contended case of other synchronization primitives.
Intentionally iterate starting with at least one byte in the stream.
Intentionally parse as native int
InterMethType contains Type fields specific to interface method psuedo-types.
InterType contains Type fields specific to interface types.
Interestingly, selinux encodes the terminating null inside the xattr
Interface -u with unexported methods.
Interface definition.
Interface represents a mapping between network interface name and index.
Interface to system profiles.
Interface to timers implemented in package runtime.
Interface types appear first in the list, sorted topologically by dependencies on embedded interfaces that are also declared in this package, followed by all other objects sorted in source order.
Interface values are deeply equal if they hold deeply equal concrete values.
Interface values encode as the value contained in the interface.
InterfaceAddrMessage represents a routing message containing network interface address entries.
InterfaceAddrs returns a list of the system's network interface addresses.
InterfaceAnnounceMessage represents a routing message containing network interface arrival and departure information.
InterfaceByIndex returns the interface specified by index.
InterfaceByName returns the interface specified by name.
InterfaceData returns the interface v's value as a uintptr pair.
InterfaceMessage represents a routing message containing network interface entries.
InterfaceMulticastAddrMessage represents a routing message containing network interface address entries.
InterfaceType.methods.length
Interfaces are encoded as the name of a concrete type followed by a value.
Interfaces might have floats of strings in them.
Interfaces returns a list of the system's network interfaces.
Interlock with Conn.Write above.
Internal Directories Code in or below a directory named "internal" is importable only by code in the directory tree rooted at the parent of "internal".
Internal ELF representation
Internal and External Linking The text above describes "internal" linking, in which cmd/link parses and links host object files (ELF, Mach-O, PE, and so on) into the final executable itself.
Internal buffer of unconsumed data is large enough for the read request.
Internal compiler crash used to stop errors during second copy.
Internal is present, and srcDir is outside parent's tree.
Internal linking is not currently supported on Dragonfly.
Internal locks can be recursive.
Internal pages map to an arbitrary span.
Internal representation (current state):
Internally a map holds elements in up to 255 bytes of key+value.
Internally we only use rooted paths, so dir is rooted.
Internally, the GC work pool is kept in arrays in work buffers.
Internally, the tar format often uses fake "files" to add meta data that describes the next file.
Internally, typeIds are used as keys to a map to recover the underlying type info.
Internally, we treat functions like methods and collect them in method sets.
Internet protocol family sockets
Internet protocol family sockets for Plan 9
Internet sockets (TCP, UDP, IP)
Interpret Compare's result by comparing it to zero.
Interrupted or timed out.
Interrupted system call
Interrupts can be handled if desired, otherwise they cause an exit.
Intersect returns the largest rectangle contained by both r and s.
Introduce ODDDARG node to represent ...
Introduce a wrapper node to give the correct line.
Introduce an error which should be reported on line 24.
Introduce extra scope to avoid redeclaration errors:
Introduce temporaries as needed by runtime routines.
Introduce temporary for receive and move actual copy into case body.
Introduction This package wraps package text/template so you can share its template API to parse and execute HTML templates safely.
Ints is known to be correct because mode Sort runs after mode _Copy.
IntsAreSorted tests whether a slice of ints is sorted in increasing order.
Inuse is bytes used now.
Inv sets z to 1/x and returns z.
Invalid HTTP response header as sent by an Axis security camera: (this is handled by IE, Firefox, Chrome, curl, etc.)
Invalid UTF-8 sequence
Invalid UTF-8 sequences are chopped into individual bytes.
Invalid UTF-8 sequences become correct encodings of U+FFFD.
Invalid chunked encoding
Invalid cookies may be silently dropped.
Invalid expressions are omitted.
Invalid instructions for which libopcodes prints 8087 only (e.g., DB E0) or prints 287 only (e.g., DB E4).
Invalid request descriptor
Invalid request so no id.
Invalid unicode scalar value.
Invalid uses of cgo Flag: -cgocall Detect some violations of the cgo pointer passing rules.
InvalidByteError values describe errors resulting from an invalid byte in a hex string.
Invalidate the range request if the entity doesn't match the one the client was expecting.
Invariant: Both wbuf1 and wbuf2 are nil or neither are.
Invariant: we have a 4-byte match at s, and no need to emit any literal bytes prior to s.
Invariants: At least one of c.sendq and c.recvq is empty.
Invariants: if explicit is set, tag is non-nil.
Invent new Name for the two-result function.
Invented structures to support what package os expects.
Invented to support what package os and others expect.
Invented values to support what package os and others expects.
Invented values to support what package os expects.
Inverse Hilbert matrix
Inverse S-box substitution values in hexadecimal format.
Inverse of successors.
Inverse returns the inverse of k in GF(P)
InvertFlags is a pseudo-op which can't appear in assembly output.
Inverting the function's output should not affect the outcome.
Inverts c only if inv is 0xff, otherwise does nothing
Invoke it as go run gen.go -output palette.go
Invoke the method, providing a new value for the reply.
Invoke the test program to run the test and write to a closed pipe.
Invoking a macro does not touch the PC/line history.
Invoking the write barrier will use the stack to prepare its call.
Ironically, ThreadSanitizer runtime contains a logical race condition that can lead to false negatives if racy accesses happen literally at the same time.
Is is low-level, old, and unused by Go's current HTTP stack.
Is reports whether the rune is in the specified table of ranges.
Is returned or reachable from returned.
IsARM64CMP reports whether the op (as defined by an arm.A* constant) is one of the comparison instructions that require special handling.
IsARM64STLXR reports whether the op (as defined by an arm64.A* constant) is one of the STLXR-like instructions that require special handling.
IsARMCMP reports whether the op (as defined by an arm.A* constant) is one of the comparison instructions that require special handling.
IsARMFloatCmp reports whether the op is a floating comparison instruction.
IsARMMRC reports whether the op (as defined by an arm.A* constant) is MRC or MCR
IsARMMULA reports whether the op (as defined by an arm.A* constant) is MULA, MULAWT or MULAWB, the 4-operand instructions.
IsARMSTREX reports whether the op (as defined by an arm.A* constant) is one of the STREX-like instructions that require special handling.
IsAbs reports whether the URL is absolute.
IsAbs reports whether the path is absolute.
IsAbsPath reports whether path is an absolute path.
IsBuiltin reports whether the corresponding expression denotes a (possibly parenthesized) built-in function.
IsCommand reports whether the package is considered a command to be installed (not just a library).
IsComparable reports whether t is a comparable type.
IsControl reports whether the rune is a control character.
IsDigit reports whether the rune is a decimal digit.
IsDir reports whether m describes a directory.
IsDir reports whether the path names a directory.
IsEmptyInterface reports whether t is an empty interface type.
IsEmptyTree reports whether this tree (node) is empty of everything but space.
IsEncryptedPEMBlock returns if the PEM block is password encrypted.
IsError determines if p parameter is used to return error.
IsExist returns a boolean indicating whether the error is known to report that a file or directory already exists.
IsExported reports whether id is an exported Go symbol (that is, whether it begins with an uppercase letter).
IsExported reports whether name is an exported Go symbol (that is, whether it begins with an upper-case letter).
IsFuncArgStruct reports whether t is a struct representing function parameters.
IsGlobalUnicast reports whether ip is a global unicast address.
IsGraphic reports whether the rune is defined as a Graphic by Unicode.
IsIdentRune is a predicate controlling the characters accepted as the ith rune in an identifier.
IsInf reports whether f is an infinity, according to sign.
IsInf reports whether x is +Inf or -Inf.
IsInf returns true if either real(x) or imag(x) is an infinity.
IsInt reports whether the denominator of x is 1.
IsInt reports whether x is an integer.
IsInterface reports whether typ is an interface type.
IsInterfaceLocalMulticast reports whether ip is an interface-local multicast address.
IsKind reports whether t is a Type of the specified kind.
IsLetter reports whether the rune is a letter (category L).
IsLinkLocalMulticast reports whether ip is a link-local multicast address.
IsLinkLocalUnicast reports whether ip is a link-local unicast address.
IsLocalImport reports whether the import path is a local import path, like ".", "..", "./foo", or "../foo".
IsLoopback reports whether ip is a loopback address.
IsLower reports whether the rune is a lower case letter.
IsMIPS64CMP reports whether the op (as defined by an mips.A* constant) is one of the CMP instructions that require special handling.
IsMIPS64MUL reports whether the op (as defined by an mips.A* constant) is one of the MUL/DIV/REM instructions that require special handling.
IsMark reports whether the rune is a mark character (category M).
IsMulticast reports whether ip is a multicast address.
IsNaN reports whether f is an IEEE 754 ``not-a-number'' value.
IsNaN returns true if either real(x) or imag(x) is NaN and neither is an infinity.
IsNil reports whether its argument v is nil.
IsNil reports whether the corresponding expression denotes the predeclared value nil.
IsNotExist returns a boolean indicating whether the error is known to report that a file or directory does not exist.
IsNumber reports whether the rune is a number (category N).
IsOnCurve reports whether the given (x,y) lies on the curve.
IsOneOf reports whether the rune is a member of one of the ranges.
IsPPC64CMP reports whether the op (as defined by an ppc64.A* constant) is one of the CMP instructions that require special handling.
IsPPC64NEG reports whether the op (as defined by an ppc64.A* constant) is one of the NEG-like instructions that require special handling.
IsPPC64RLD reports whether the op (as defined by an ppc64.A* constant) is one of the RLD-like instructions that require special handling.
IsPathSeparator reports whether c is a directory separator character.
IsPermission returns a boolean indicating whether the error is known to report that permission is denied.
IsPrint reports whether the rune is defined as printable by Go, with the same definition as unicode.IsPrint: letters, numbers, punctuation, symbols and ASCII space.
IsPrint reports whether the rune is defined as printable by Go.
IsPseudo reports whether the header field is an http2 pseudo header.
IsPtr reports whether t is a regular Go pointer type.
IsPtrShaped reports whether t is represented by a single machine pointer.
IsPunct reports whether the rune is a Unicode punctuation character (category P).
IsREX reports whether p is a REX prefix byte.
IsRO reports whether v's read-only flag is set.
IsRegisterShift reports whether the token is one of the ARM register shift operators.
IsRegular reports whether m describes a regular file.
IsRegularMemory reports whether t can be compared/hashed as regular memory.
IsResponseTo reports whether m is an acceptable response to query.
IsS390xCMP reports whether the op (as defined by an s390x.A* constant) is one of the CMP instructions that require special handling.
IsS390xNEG reports whether the op (as defined by an s390x.A* constant) is one of the NEG-like instructions that require special handling.
IsS390xRLD reports whether the op (as defined by an s390x.A* constant) is one of the RLD-like instructions that require special handling.
IsS390xWithIndex reports whether the op (as defined by an s390x.A* constant) refers to an instruction which takes an index as its first argument.
IsS390xWithLength reports whether the op (as defined by an s390x.A* constant) refers to an instruction which takes a length as its first argument.
IsScanValue is equivalent to IsValue.
IsSlice3 reports whether o is a slice3 op (OSLICE3, OSLICE3ARR).
IsSorted reports whether data is sorted.
IsStmt indicates that Address is a recommended breakpoint location, such as the beginning of a line, statement, or a distinct subpart of a statement.
IsSurrogate reports whether the specified Unicode code point can appear in a surrogate pair.
IsSymbol reports whether the rune is a symbolic character.
IsSystemDLL reports whether the named dll key (a base name, like "foo.dll") is a system DLL which should only be loaded from the Windows SYSTEM32 directory.
IsTerminal returns whether the UI is known to be tied to an interactive terminal (as opposed to being redirected to a file).
IsTitle reports whether the rune is a title case letter.
IsTrue reports whether the value is 'true', in the sense of not the zero of its type, and whether the value has a meaningful truth value.
IsType reports whether the corresponding expression specifies a type.
IsUTF16 is true, if f is W (utf16) function.
IsUnsafePtr reports whether t is an unsafe pointer.
IsUnspecified reports whether ip is an unspecified address.
IsUntyped reports whether t is an untyped type.
IsUpper reports whether the rune is an upper case letter.
IsValid reports whether the position is valid.
IsValid reports whether v represents a value.
IsValue reports whether the corresponding expression is a value.
IsValue reports whether v is a valid Value parameter type.
IsVar reports whether Kind is either "var" or "fpvar"
IsVariadic panics if the type's Kind is not Func.
IsVariadic reports whether a function type's final input parameter is a "..." parameter.
IsVoid reports whether the corresponding expression is a function call without results.
IsZero reports whether t represents the zero time instant, January 1, year 1, 00:00:00 UTC.
Isaddrokay reports whether it is okay to pass n's address to runtime routines.
Ismulticall reports whether the list l is f() for a multi-value function.
Issue 10047: gccgo failed to compile a type switch where the switch variable and the base type of a case share the same identifier.
Issue 10066: constants are printed in the original form in export data.
Issue 10284: gccgo failed to allow converting a user-defined type whose underlying type is uintptr to unsafe.Pointer.
Issue 10320: 7g failed to compile a program because it attempted to use ZR as register.
Issue 10407: gccgo failed to remove carriage returns from raw string literals.
Issue 10415: This caused infinite recursion.
Issue 10654: Failure to use generated temps for function calls etc.
Issue 10886: tests that all connection attempts return when more than DB.maxOpen connections are in flight and the first DB.maxOpen fail.
Issue 10975: Returning an invalid interface would cause `internal compiler error: getinarg: not a func`.
Issue 11053: Compiler does not run escape analysis on an inlined generated method wrapper.
Issue 11214 reports various failures with older versions of gdb.
Issue 11362: prints empty canonical import path
Issue 11750: mkdotargslice: typecheck failed
Issue 11771: Magic comments should ignore carriage returns.
Issue 11790: Incorrect error following named pointer dereference on field
Issue 12466 - backed up before beginning of line.
Issue 12469 - asm hung parsing the o-FP range on non ARM platforms.
Issue 12525: confusing error trying to increment boolean value
Issue 12577: Test that there are no -0 floating-point constants.
Issue 12677: Type loss during export/import of inlined function body.
Issue 12778: verify that NXDOMAIN without RA bit errors as "no such host" and not "server misbehaving"
Issue 12785: HTTP/1.0 response with bogus (to be ignored) Transfer-Encoding.
Issue 13337: The Go compiler limited how deeply embedded types were searched for promoted fields and methods.
Issue 13705: don't try to resolve onion addresses, etc
Issue 13779: provide better error message when directly assigning to struct field in map
Issue 14444: go get -u .../ duplicate loads errors
Issue 14729: structs cannot embed unsafe.Pointer per the spec.
Issue 14965: Runtime panics should be of type runtime.Error
Issue 14988: defining a map with an invalid forward declaration array key doesn't cause a fatal.
Issue 1536: bug when handling imported interfaces with private methods.
Issue 15470: Make sure special-case signatures can be exported and imported w/o problems.
Issue 1708, illegal cases.
Issue 1708, legal cases.
Issue 1743: test embedding of imported types with private methods.
Issue 1909 Would OOM due to exponential recursion on Foo's expanded methodset in nodefmt
Issue 2444 Issue 4666: issue with arrays of exactly 4GB.
Issue 2615: a long chain of else if's causes an overflow in the parser stack.
Issue 2627 -- unsafe.Pointer type isn't handled nicely in some errors
Issue 2700, among other things.
Issue 2700: if the case type is an interface, nothing is impossible
Issue 3552: cross-package inlining misbehaves when referencing embedded builtins.
Issue 3682: Correctly read dotted identifiers from export data.
Issue 3757: unhelpful typechecking loop message for constants that refer to themselves.
Issue 3835: 8g tries to optimize arithmetic involving integer constants, but can run out of registers in the process.
Issue 3843: inlining bug due to wrong receive operator precedence.
Issue 3857 This used to deadlock.
Issue 3890: missing detection of init loop involving method calls in function bodies.
Issue 3899: 8g incorrectly thinks a variable is "set but not used" and elides an assignment, causing variables to end up with wrong data.
Issue 3907: out of fixed registers in nested byte multiply.
Issue 3925: wrong line number for error message "missing key in map literal" also a test for correct line number in other malformed composite literals.
Issue 3937: unhelpful typechecking loop message for identifiers wrongly used as types.
Issue 4064: handle locations without any zone transitions.
Issue 4138: bug in floating-point registers numbering.
Issue 4156: out of fixed registers when chaining method calls.
Issue 4159: exported inlinable functions squash complex literals "a+bi" to "a+b".
Issue 4167: inlining of a (*T).Method expression taking its arguments from a multiple return breaks the compiler.
Issue 4197: growing a slice of zero-width elements panics on a division by zero.
Issue 4200: 6g crashes when a type is larger than 4GB.
Issue 4230: inlining bug for composite literal in if, for, switch statements.
Issue 4251: slice with inverted range is an error.
Issue 4252: tests that fixing the issue still allow builtins to be redeclared and are not corrupted in export data.
Issue 4316: the stack overflow check in the linker is confused when it encounters a split-stack function that needs 0 bytes of stack space.
Issue 4323: inlining of functions with local variables forgets to typecheck the declarations in the inlined copy.
Issue 4359: wrong handling of broken struct fields causes "internal compiler error: lookdot badwidth".
Issue 4399: 8g would print "gins LEAQ nil *A".
Issue 4448: 64-bit indices that are statically known to be bounded make 5g and 8g generate a dangling branch.
Issue 4458: gc accepts invalid method expressions like (**T).Method.
Issue 4463: test builtin functions in statement context and in go/defer functions.
Issue 4468: go/defer calls may not be parenthesized.
Issue 4470: parens are not allowed around .(type) "expressions"
Issue 4529: escape analysis crashes on "go f(g())" when g has multiple returns.
Issue 4585: comparisons and hashes process blank fields and padding in structs.
Issue 4590: linker fails on multiple imports of an anonymous struct with methods.
Issue 4614: slicing of nil slices confuses the compiler with a uintptr(nil) node.
Issue 4620: map indexes are not evaluated before assignment of other elements
Issue 4776: missing package declaration error should be fatal.
Issue 4813: use of constant floats as indices.
Issue 481: closures and var declarations with multiple variables assigned from one function call.
Issue 4847: initialization loop is not detected.
Issue 4909: compiler incorrectly accepts unsafe.Offsetof(t.x) where x is a field of an embedded pointer field.
Issue 4932: regression in export of composite literals.
Issue 4964: exported escape analysis result is not enough for cross package analysis.
Issue 5105: linker segfaults on duplicate definition of a type..hash.* function.
Issue 5125: cyclic dependencies between types confuse the hashability test during import.
Issue 5227: linker incorrectly treats common symbols and leaves them undefined.
Issue 5231: method values lose their variadic property.
Issue 5244: the init order computation uses the wrong order for top-level blank identifier assignments.
Issue 5259: Inlining of method value causes internal compiler error
Issue 5260: Unicode BOM in exported string constant cannot be read back during package import.
Issue 5470: exported data for inlining may miss the type argument of make.
Issue 5607: generation of init() function incorrectly uses initializers of blank variables inside closures.
Issue 5614: exported data for inlining may miss named types when used in implicit conversion to their underlying type.
Issue 5698: can define a key type with slices.
Issue 5704: Conversions of empty strings to byte or rune slices return empty but non-nil slices.
Issue 5755: exported data for inlining may miss named types when used in string conversions.
Issue 5793: calling 2-arg builtin with multiple-result f() call expression gives spurious error.
Issue 5910: parsing of unnamed struct types in inlined bodies was broken.
Issue 5953: shouldn't sniff if the handler set a Content-Type header, even if it's the empty string.
Issue 6036: 6g's backend generates OINDREG with offsets larger than 32-bit.
Issue 6140: compiler incorrectly rejects method values whose receiver has an unnamed interface type.
Issue 6247: 5g used to be confused by the numbering of floating-point registers.
Issue 6295: qualified name of unexported methods is corrupted during import.
Issue 6402: spurious 'use of untyped nil' error
Issue 6403: fix spurious 'const initializer is not a constant' error
Issue 6405: spurious 'not enough arguments to return' error
Issue 6500: missing error when fallthrough appears in a block.
Issue 6513: embedded builtins may get incorrect qualified field name during import.
Issue 6659 cases (more single string replacer)
Issue 6671: Logical operators should produce untyped bool for untyped operands.
Issue 6789: gccgo failed to find the hash function for an unexported struct embedded in an exported struct.
Issue 6847: select clauses involving implicit conversion of channels trigger a spurious typechecking error during walk.
Issue 6889: confusing error message: ovf in mpaddxx
Issue 6902: confusing printing of large floating point constants
Issue 6995 A server Handler can receive a Request, and then turn around and give a copy of that Request.Body out to the Transport (e.g. any proxy).
Issue 7023: corrupted export data when an inlined function contains a goto.
Issue 7044: bad AMOVFD and AMOVDF assembly generation on arm for registers above 7.
Issue 7129: inconsistent "wrong arg type" error for multivalued g in f(g())
Issue 7153: array invalid index error duplicated on successive bad values
Issue 7272: test builtin functions in statement context and in go/defer functions.
Issue 7316 This test exercises all types of numeric conversions, which was one of the sources of etype mismatch during register allocation in 8g.
Issue 7405: the equality function for struct with many embedded fields became more complex after fixing issue 7366, leading to out of registers on 386.
Issue 7419: odd behavior for float constants underflowing to 0
Issue 7525: self-referential array types.
Issue 7538: blank (_) labels handled incorrectly
Issue 7590: gccgo incorrectly traverses nested composite literals.
Issue 7648: spurious "bad negated constant" for complex constants.
Issue 7675: fewer errors for wrong argument count
Issue 7944: Liveness bitmaps said b was live at call to g, but no one told the register optimizer.
Issue 7995: globals not flushed quickly enough.
Issue 8060: internal compiler error.
Issue 8079: gccgo crashes when compiling interface with blank type name.
Issue 8154: cmd/5g: ICE in walkexpr walk.c
Issue 8280: cannot import package exporting a func var returning a result named _
Issue 8325: corrupted byte operations during optimization pass.
Issue 8385: provide a more descriptive error when a method expression is called without a receiver.
Issue 8434: verify that Temporary returns true on an error when rcode is SERVFAIL
Issue 8622 - 0xe parsed as floating point.
Issue 8672: Could miss final empty token.
Issue 8745: comma-ok assignments should produce untyped bool as 2nd result.
Issue 9017: Method selector shouldn't automatically dereference a named pointer type.
Issue 9076: cmd/gc shows computed values in error messages instead of original expression.
Issue 9083: map/chan error messages show non-explicit capacity.
Issue 9173: ignore stdin pipe writes if the program completes successfully.
Issue 9305: ParseMultipartForm should populate PostForm too
Issue 9453: tests that SetMaxOpenConns can be lowered at runtime and affects the subsequent release of connections.
Issue 9537: Compiler does not run escape analysis on an inlined generated method wrapper.
Issue 9608: dead code elimination in switch statements.
Issue 9634: Structs are incorrectly unpacked when passed as an argument to append.
Issue 9987: shouldn't add automatic Content-Length (or Content-Type) if a Transfer-Encoding was set by the handler.
Issue a load which will fault if the input is nil.
Issue a spill for this value.
Issue regular stores for pointer writes.
Issue the Value itself.
Issue was caused by the timeout handler starting the timer when was created, not when the request.
Issue write barriers for pointer writes.
Issue: https://golang.org/issue/2784 This test didn't fail before because we got lucky with the fakedb driver.
Issues 8017 and 8058: walk modifies nodes generated by slicelit and causes an internal error afterwards when gen_as_init parses it back.
Istemp reports whether n is a temporary variable.
Isterminating returns whether the node n, the last one in a statement list, is a terminating statement.
Isterminating whether the Nodes list ends with a terminating statement.
It accepts all the regular formats for floating-point numbers ('b', 'e', 'E', 'f', 'F', 'g', 'G') as well as 'p' and 'v'.
It accepts any open key, including CURRENT_USER and others, and returns the new key and an error.
It accepts the formats 'b' (binary), 'o' (octal), 'd' (decimal), 'x' (lowercase hexadecimal), and 'X' (uppercase hexadecimal).
It adds a buffer to the write side of the connection so the header and payload are sent as a unit.
It adds escaping pipeline stages necessary to correctly and safely embed that plain text string in the appropriate context.
It adds types to the type cache, appends new typedef types to typedefs, and computes the sizes of types.
It adjusts the intervals or drops ticks to make up for slow receivers.
It aims to cover most of the variations, including those produced by GNU and BSD tars.
It allocates a bit vector with (length of input) * (length of prog) bits, to make sure it never explores the same (character position, instruction) state multiple times.
It allows rapid ancestor queries, such as whether one block dominates another.
It allows this package not to depend on unicode, and therefore not pull in all the Unicode tables.
It allows us to benchmark recursive descent style scanners.
It also accepts the standard build flags including -v, -n, and -x.
It also applies to the job control signals SIGTSTP, SIGTTIN, and SIGTTOU, in which case the system default behavior does not occur.
It also assumes that x, y are already reduced mod m, or else the result will not be properly reduced.
It also avoids duplicated effort: if we didn't find the field in an embedded type T at level 2, we won't find it in one at level 4 either.
It also can tell you what the text of the most recently returned token is, and where it was found.
It also catches changes in build tags that affect the set of files being compiled.
It also catches changes in toolchain, like when flipping between two versions of Go compiling a single GOPATH.
It also checks for errors such as using a Writer as the first argument of Printf.
It also closes fd when the state of fd is set to closed and there is no remaining reference.
It also conditionally adds chunk headers, when in chunking mode.
It also doesn't support mDNS.
It also enables debugging checks during the encoding.
It also helps make sure VARDEF ops are scheduled before the corresponding LEA.
It also helps us prepare a more useful list of places we looked, to report when an import is not found.
It also implements the following extensions: 8BITMIME  RFC 1652 AUTH      RFC 2554 STARTTLS  RFC 3207 Additional extensions may be handled by clients.
It also indirectly tests NewRequest and that it doesn't wrap an existing Closer inside a NopCloser, and that it serializes it correctly.
It also logs the error using package log.
It also performs imports and associates methods with receiver base type names.
It also recursively adds an entry for all instructions reachable from pc by following empty-width conditions satisfied by cond.
It also removes duplicate imports when it is possible to do so without data loss.
It also removes types with missing declarations or which are not visible.
It also represents network interface facility information.
It also returns a boolean value what designates IPV6_V6ONLY option.
It also returns a byte which is equal to 255 if the padding was valid and 0 otherwise.
It also returns the new value of i, that is, the index of the next byte of the format to process.
It also returns the number of indirections required to get to the implementation.
It also returns the old and new slice lengths.
It also returns the token that terminated the argument, which will always be either ',' or ')'.
It also returns the value's type.
It also satisfies flag.Value.
It also tests that nacl can compile 64 bit indexes loaded from ODOTPTR properly.
It also tests that the connReader stitches together its background 1-byte read for CloseNotifier when CloseNotifier doesn't fire with the rest of the second HTTP later.
It also tracks the number of calls in writeCount.
It also updates the samples to point to the merged locations.
It also uses /tmp directory in case it is prohibited to create UNIX sockets in TMPDIR.
It always prefixes the message with "gob: ".
It always returns a non-nil handler.
It always returns a non-nil method set, even if it is empty.
It always returns an error and we don't need to probe the capability.
It always returns failure.
It always returns len(p) and a nil error.
It appears here to provide an argument signature for the assembly routine.
It appears that no Type means "void".
It appears that the first assignment changes the size of A from open into a fixed array.
It appears the best we can do is rewrite what the kernel delivers into something more like the truth.
It appears, on some systems "fsutil 8dot3name query ..." command always exits with error.
It appears, on some systems "fsutil 8dot3name set ..." command always exits with error.
It appends any certificates found to s and reports whether any certificates were successfully parsed.
It appends to and returns a byte slice in order to give the calling code control over allocation.
It appends to any existing values associated with key.
It applies only to fields of string, floating point, integer, or boolean types.
It applies the following rules iteratively until no further processing can be done:
It applies the same rules that are used with context tags in package go/build, except that the GOOS and GOARCH can appear anywhere in the file name, not just after _.
It arranges to print the output aligned from call to call, to make it easy to see what has been consumed.
It assume x is clean.
It assumes 64 bit integers and pointers.
It assumes that a is zeroed on entry.
It assumes that all characters have the same width, except for tabs for which a tabwidth must be specified.
It assumes that f is a func value.
It assumes that rawurl was received in an HTTP request, so the rawurl is interpreted only as an absolute URI or an absolute path.
It assumes that there is no pending comment in p.comments and at most one pending comment in the p.comment cache.
It assumes that verb is a valid format specifier for strconv.AppendFloat and therefore fits into a byte.
It assumes the class r is already clean.
It assumes the file is positioned at 0 and leaves it positioned at the end of the header.
It assumes x is clean.
It assumes x is finite and non-zero.
It avoids using vectorCastagnoli entirely if the length of p is less than or equal to vxMinLen.
It avoids using vectorIEEE entirely if the length of p is less than or equal to vxMinLen.
It becomes the caller's responsibility to manage and close the connection.
It begins with _/ and then contains the full path to the directory.
It blocks until any current sigprof is done tracebacking gp's stack and then disallows profiling tracebacks of gp's stack.
It calls Config.Fprint with default settings.
It calls Fatalf if there is no 1 bit.
It calls XORKeyStream to process each slice of data which passes through.
It calls analyze with successive groups of functions, working from the bottom of the call graph upward.
It calls f and g repeatedly with arbitrary values for each argument.
It calls f for each such component, passing the component (aka element) type and memory offset, assuming t starts at startOffset.
It calls f repeatedly, with arbitrary values for each argument.
It calls runtime.Stack with a large enough buffer to capture the entire trace.
It calls t.Errorf if the command fails.
It can also be used to size the internal buffer for writing.
It can also parse a literal scoped IPv6 address with zone identifier which is described in RFC 4007 when zoneAllowed is true.
It can be allocated as part of another data structure but must be initialized via Init before use.
It can be bigger only due to the 4 entries in hb that it counts.
It can be converted into a Position for a more convenient, but much larger, representation.
It can be embedded to complete a partial fileImpl implementation.
It can be in 3 states: sigIdle, sigReceiving and sigSending.
It can be in one of the following states:
It can be invoked three ways: By package, from the go tool: go vet package/path/name vets the package whose path is provided.
It can be omitted if there are no arguments at all.
It can be overridden by an explicit registration.
It can be parameterized with a flag implementation, fetch and symbolize mechanisms.
It can be parsed with the regular URL parser, and the path will end up in req.URL.Path, where it needs to be in order for RPC to work.
It can be read outside the lock, but is only written to with lock held.
It can be reused since we will not be encoding offset values.
It can be used in HTTP handlers with context.WithValue to access the address the local address the connection arrived on.
It can be used in HTTP handlers with context.WithValue to access the server that started the handler.
It can be used to connect code expecting an io.Reader with code expecting an io.Writer.
It can be used to iterate over all of a function's parameter lists.
It can do this by reading object files.
It can either be a number of bytes, or one of the special PSSSaltLength constants.
It can fail to inform a goroutine if a processor just started running it.
It can include multiple names to represent inlined functions.
It can incorrectly fail to inform the goroutine.
It can map expected errors to nil to ignore them.
It can pad from 1 to blocksize bytes inclusive.
It can print messages to ui.
It can return a non-nil AfterFilter for filtering after the execution of the system call.
It can send inform the wrong goroutine.
It can send messages to the syslog daemon using UNIX domain sockets, UDP or TCP.
It can try to swap logs with the writing goroutine, as explained in the comment at the top of this file.
It cannot be used safely or portably and its representation may change in a later release.
It cannot lead to flakiness.
It carries a map remembering what types are in progress so we don't recur when faced with recursive types or mutually recursive types.
It checks whether that Go memory contains any other pointer into Go memory.
It clears all checkmark bits.
It clears the checkmark bits, which are set to 1 in normal operation.
It clears the mark bits in preparation for the next GC round.
It coalesces concurrent calls with the same key.
It collects all such identifiers.
It compiles and tests the package with source in the current directory, including tests, and runs the tests.
It configures the signal handlers as expected by the Go runtime, before the non-Go startup code runs.
It considers at most the first 512 bytes of data.
It consists of a Reader and Writer to manage I/O and a Pipeline to sequence concurrent requests on the connection.
It contains the created func itself as well as indexes from block and value names into the corresponding Blocks and Values.
It could also shrink but that falls out naturally.
It could be enabled when generated code is good enough.
It crawls a URL recursively and notes URLs and URL fragments that it's seen and prints a report of missing links at the end.
It creates a new form-data header with the provided field name and file name.
It creates multiple goroutines and distributes b.N iterations among them.
It decides whether each variable captured by a closure should be captured by value or by reference.
It defaults to no-op if the profile is not specified.
It defines a local interface with an unexported method f, which will appear with a package-qualified method name in the export data.
It defines a type, Logger, with methods for formatting output.
It delays the lookup until the Addr method is called.
It describes a file tree, one directory per line, with leading tab indentation marking the tree structure.
It describes the operation, network type, and address of an error.
It differs from close in that it doesn't close the underlying connection for use when it's still being read.
It does analyze and verify per-event-type arguments.
It does no allocation.
It does no checking of the input - call addValueFuncs first.
It does not (and cannot) close the underlying writer.
It does not affect EmitEnabled.
It does not affect code generation but is used by the system linker when relaxing "initial exec" model code to "local exec" model code.
It does not affect whether the timer is running.
It does not allocate a buffer to hold the output until that output diverges from s.
It does not appear in the final parse tree.
It does not appear in the output if the layout string does not contain a representation of the fractional second.
It does not assume Unicode or UTF-8.
It does not call their String method implicitly but instead prints the concrete values they hold.
It does not care about byte stuffing.
It does not care about specific event types and argument meaning.
It does not change the I/O offset.
It does not change the underlying hash state.
It does not check stack correctness, completeness or anything else: it merely verifies that if a test is expected to be racy then the race is detected.
It does not close or flush e's underlying writer.
It does not close the codec upon completion.
It does not close the underlying io.Reader.
It does not consume it.
It does not convert relative paths to absolute paths like Redirect does.
It does not handle 'p' and 'T' verbs because these should have been already handled by printArg.
It does not handle all the non-Latin letters, joiners, and combining marks, but it does handle every codepoint that can occur in a numeric literal or a keyword.
It does not hold per-package state, because we build packages in parallel, and the builder is shared.
It does not include array or struct types that consist of a single pointer shaped type.
It does not include standard input, standard output, or standard error.
It does not include the leading comma.
It does not include two because we ensure that the candidates are odd by construction.
It does not initialize them first, so if the destination is a compound value such as a map, struct, or slice, the decoded values will be merged elementwise into the existing variables.
It does not interrupt any connections currently in use.
It does not limit the size of the request body.
It does not mutate its arguments.
It does not override the passes list above.
It does not pass signal information in m.
It does not read any files in the directory.
It does not return weak symbols.
It does not see the panic when called from a call within a deferred call (too late) nor does it see the panic when it *is* the deferred call (too early).
It does not seem to be necessary for any other systems.
It does not suspend the current goroutine, so execution resumes automatically.
It does not transition to StateClosed.
It does not use Join because we don't want ".." to be evaluated.
It does nothing if the URL's scheme is not HTTP or HTTPS.
It does so by running the pc-value tables mapping program counter to file number.
It doesn't allow printing the full stack, and it returns the file name and line number separately.
It doesn't handle copying of aggregates as well as I would like, nor variables with their address taken, and it's too subtle to turn on this late in Go 1.2.
It doesn't have to be blazing fast.
It doesn't have to be terribly fast.
It doesn't matter what we use here as long as it is well-formed.
It doesn't require that the hash function in question be linked into the program.
It doesn't seem tenable to say that printing the zero time correctly isn't supported in half the time zones.
It draws from the current Go root and Go path but omits directories that do not exist.
It embeds a cancelCtx to implement Done and Err.
It encodes the value v.
It errors if the variable is not defined.
It escapes CDATA directives nested in s.
It establishes network connections as needed and caches them for reuse by subsequent calls.
It executes binaries on an android device using adb.
It executes binaries on an iOS device using the XCode toolchain and the ios-deploy program: https://github.com/phonegap/ios-deploy
It executes in time proportional to the number of elements.
It exists because so a closeWaiter value can be placed inside a larger struct and have the Mutex and Cond's memory in the same allocation.
It exists for compatibility.
It exists only to guarantee we are producing byte-identical binaries as before this code.
It exists so FrameHeaders can be embedded in other specific frame types and implement the Frame interface.
It exposes these variables via HTTP at /debug/vars in JSON format.
It fails exactly once on its Nth Write call, as controlled by failAfter.
It fails t if any Read is called after a failing Read.
It fills up buffer buf and returns the retrieved byte count n.
It filters out unsafe values, such as those that affect token boundaries, and anything that might execute scripts.
It forms the lowest level, turning text from readers into tokens.
It gathers the C preamble attached to the import "C" comment, a list of references to C.xxx, a list of exported functions, and the actual AST, to be rewritten and printed.
It gets calculated via a temporary TFUNCARGS type.
It gets complicated fast.
It gives up after the given timeout, unless src contains a timeout override (as defined by the implementation).
It gradually increases the number of benchmark iterations until the benchmark runs for a second in order to get a reasonable measurement.
It gradually increases the number of benchmark iterations until the benchmark runs for the requested benchtime.
It has a WriteTo method so io.Copy won't need a buffer.
It has a separate type for easy recognition.
It has a special API, the StartCPUProfile and StopCPUProfile functions, because it streams output to a writer during profiling.
It has already been unlinked from the MSpan specials list.
It has bug fixes not present in the amd64 code base.
It has gotten completely out of control.
It has no associated mutex and should only be mutated serially (currently: during init), and not concurrent with DLL loading.
It has no exit work, so if a wrapper is interrupted by a panic, there's no cleanup that panic itself must do.
It has to be recreated from scratch, since cloning cannot occur after execution.
It holds a linked list of traceAllocBlock.
It holds both a value and a pointer offset.
It holds both the instruction pc and the actual thread.
It holds the instruction pc and the position in the input.
It holds the same data as a compilation unit.
It identifies which files to examine based on the extension of the file name.
It ignores position-altering //line comments.
It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.
It implements Set by updating both buildToolchain and buildContext.Compiler.
It implements Value for that key and delegates all other calls to the embedded Context.
It implements cancel by stopping its timer then delegating to cancelCtx.cancel.
It implements io.ReadWriter.
It implements only the operations needed by Go.
It implements the color.Color, color.Model, and Image interfaces.
It implements the error interface.
It implements the methods to sort by string.
It implements the net.Conn interface.
It implements the os.Signal interface.
It in not safe in general to move a variable between blocks (and particularly not a phi node).
It includes any headers that the standard http.Transport adds, such as User-Agent.
It includes functions to translate between runes and UTF-8 byte sequences.
It includes the SymbolInfo from the disasm package and the base that must be added to correspond to sample addresses
It includes the receiver, parameters, and results.
It increments m.locks to avoid preemption.
It inserts a call to msanread before each memory read.
It inserts a call to msanwrite before each memory write.
It inserts a call to racefuncenterfp at the beginning of each function.
It inserts a call to racefuncexit at the end of each function.
It inserts a call to raceread before each memory read.
It inserts a call to racewrite before each memory write.
It inserts to the offset of GOT slot for the thread-local symbol from the TOC (the GOT slot is filled by the dynamic linker with the offset of the thread-local symbol from the thread pointer (R13)).
It inspects the DEK-Info header to determine the algorithm used for decryption.
It installs the strings.Title function and uses it to Make Title Text Look Good In Our Template's Output.
It is (possibly a subpiece of) a PPARAM, PPARAMOUT, or PAUTO ONAME node.
It is HTTP/0.9 over TLS.
It is a "construction" of an array after all.
It is a Test (say) if there is a character after Test that is not a lower-case letter.
It is a cache for use during usefield in walk.go, only enabled when field tracking.
It is a concurrent mark and sweep that uses a write barrier.
It is a copy of checkgoto in the pre-SSA backend, modified only for line number handling.
It is a copy of golang.org/x/tools/cover/profile.go.
It is a distinct type, however, and not an alias for, say, int32.
It is a distinct type, however, and not an alias for, say, uint32.
It is a helper for testKillProcess, so we don't have to rely on an external "sleep" command being available.
It is a historical artifact, kept for binary compatibility and exported only for the benefit of the package's encoding of type descriptors.
It is a liblink NOP, not a ARM64 NOP: it encodes to 0 instruction bytes.
It is a liblink NOP, not a ppc64 NOP: it encodes to 0 instruction bytes.
It is a liblink NOP, not a s390x NOP: it encodes to 0 instruction bytes.
It is a liblink NOP, not an ARM NOP: it encodes to 0 instruction bytes.
It is a liblink NOP, not an mips NOP: it encodes to 0 instruction bytes.
It is a liblink NOP, not an x86 NOP: it encodes to 0 instruction bytes.
It is a no-op if the value is not in the profile.
It is a no-op unless debugging was enabled when the package was built.
It is a run-time error if m is not locked on entry to Unlock.
It is a run-time error if rw is not locked for reading on entry to RUnlock.
It is a run-time error if rw is not locked for writing on entry to Unlock.
It is a run-time error to call End with an id that is not the number of the active event.
It is a shame you couldn't make it to the wedding.
It is a simple wrapping of rune, as returned by text/scanner.Scanner, plus a couple of extra values.
It is a stand-in for any Go type, but represents the same type for any given function invocation.
It is a stand-in for any integer type: int, uint, int8 etc.
It is a stand-in for either complex type: complex64 or complex128.
It is a stand-in for either float type: float32 or float64.
It is a statement of policy.
It is a straight port of the sample code in RFC 1950 section 9.
It is a straight port of the sample code in the PNG spec, section 9.4.
It is a streamlined version of the usual reflect call: the caller has already laid out the argument frame for us, so we don't have to deal with individual Values for each argument.
It is a struct instead of an interface because the implementation needs no state, and I expect to add some data fields at some point.
It is a trivial implementation of ioutil.ReadFile, reimplemented here to avoid depending on io/ioutil or os.
It is a variant of R_ADDROFF used when linking from the uncommonType of a rtype, and may be set to zero by the linker if it determines the method text is unreachable by the linked program.
It is added with a name to avoid problems with external linking encountered on some versions of Solaris.
It is akin to replacing the newline character at the end of the line with a space (to not change the remaining offsets).
It is allowed but not required for the caller to hold c.L during the call.
It is allowed for one goroutine to lock a Mutex and then arrange for another goroutine to unlock it.
It is allowed to acquire worldsema once and then execute multiple startTheWorldWithSema/stopTheWorldWithSema pairs.
It is allowed to call Notify multiple times with different channels and the same signals: each channel receives copies of incoming signals independently.
It is allowed to call Notify multiple times with the same channel: each call expands the set of signals sent to that channel.
It is allowed to call evict.
It is almost a direct copy of package net's isDomainName.
It is almost always a mistake to print a function value.
It is also included in the client's handshake to support virtual hosting unless it is an IP address.
It is also inefficient if exponents or precisions differ by wide margins.
It is also known as the Netscape Color Cube.
It is also not a performance issue because we only reach here for composite literal types, which are comparatively rare.
It is also sometimes necessary for a test to control which code runs on the main thread.
It is always scanned sequentially from start to end, without backing up.
It is an error if a resulting template is non-empty (contains content other than template definitions) and would replace a non-empty template with the same name.
It is an error if no imports are found.
It is an error if the file exists but is not an archive.
It is an error if the point is not on the curve.
It is an error to call Write after calling Close.
It is an error to call this if q's head isn't a writeData.
It is an error to read when no data is available.
It is an error to set this field in an HTTP client request.
It is an error to write more data than the buffer can hold.
It is an internal package because these details are specific to the Go team's test setup (on build.golang.org) and not fundamental to tests in general.
It is an io.ReadCloser.
It is an unreasonable way to calculate pi.
It is analogous to the facilities of the strings package.
It is assigned an M and a P.
It is assumed s1 and s2 are the same length.
It is atomically incremented outside the lock.
It is based on the code in jfdctint.c from the Independent JPEG Group, found at http://www.ijg.org/files/jpegsrc.v8c.tar.gz.
It is based on the draft JavaScript 2.0 lexical grammar and requires one token of lookbehind: http://www.mozilla.org/js/language/js20-2000-07/rationale/syntax.html
It is basically a simplified representation of nsswitch.conf.
It is best-effort and efficient.
It is better to compute sin(x0),cos(x0) by the method mentioned above.
It is better to compute sin(x1),cos(x1) by method mentioned above.
It is bound to a Conn and not used by multiple goroutines concurrently.
It is called at the very end of deferproc to signal the calling Go function that it should not jump to deferreturn.
It is called by os.Expand.
It is called from gcc to call 6c functions.
It is called from signal handlers and other limited environments and cannot allocate memory or acquire locks that might be held at the time of the signal, nor can it use substantial amounts of stack.
It is called from the writing goroutine.
It is called in cases such as string scanning where an EOF is a syntax error.
It is called when a DATA frame says a request body is over (or after trailers).
It is called when an error occurs while parsing flags.
It is called when computing a presentation property like Month or Hour.
It is called with a working local m, so that it can do things like call schedlock and allocate.
It is can be (R1), (R2*scale), or (R1)(R2*scale) where R1 may be a simple register or register pair R:R or (R, R) or (R+R).
It is case insensitive.
It is checked in WriteHeader, to make sure we don't consume the remaining request body to try to advance to the next HTTP request.
It is closely following the corresponding implementation in strconv/ftoa.go, but modified and simplified for Float.
It is common in C headers to have fields named, say, _pad in an otherwise prefixed header.
It is common to use a func literal as the argument, in order to share inputs and outputs with the code around the call to system stack:
It is constructed by parsePrintfVerb.
It is consulted to resolve imports that cannot be found in the standard Go tree.
It is created during initialization so that all packages are imported by the same importer.
It is currently first, so not needed for now.
It is defined in RFC 1950: Adler-32 is composed of two sums accumulated per byte: s1 is the sum of all bytes, s2 is the sum of all s1 values.
It is defined in crc32_s390x.s.
It is deliberately vague to avoid adaptive attacks.
It is designed such that only a minimal amount of work needs to be done in the common ASCII case (one test to check for both ASCII and end-of-buffer, and one test to check for newlines).
It is disabled by default because iOS apps are not allowed to access the exc_server symbol.
It is disabled by default when cross-compiling.
It is distinct from Pkg(), which is the package containing the import statement.
It is either nil or an instance of one of these types:
It is either the commit hash and date at the time of the build or, when possible, a release tag like "go1.3".
It is embedded in other, public struct types, but always with a unique tag like `reflect:"array"` or `reflect:"ptr"` so that code cannot convert from, say, *arrayType to *ptrType.
It is empty for upper case (exported) field names.
It is empty for upper case (exported) method names.
It is empty if this node is not a complete key.
It is encoded as an MRC with a bit inside the instruction word, passed to arch.ARMMRCOffset.
It is equal to invalidCode if there was no such call.
It is equivalent to NewTimer(d).C.
It is equivalent to Remove(h, 0).
It is equivalent to RightWrite except that having the RightAddr bit set keeps the registerizer from trying to substitute a register for the memory location.
It is equivalent to SplitAfterN with a count of -1.
It is equivalent to SplitN with a count of -1.
It is equivalent to calling Field successively for each index i.
It is equivalent to calling both SetReadDeadline and SetWriteDeadline.
It is equivalent to defaultlit except for constants of numerical kind, which are acceptable whenever they can be represented by a value of type int.
It is equivalent to setting -test.benchmem, but it only affects the benchmark function that calls ReportAllocs.
It is executed top to bottom, walking the struct.
It is executed with random access according to field number.
It is expected that the cache is locked because cacheGet returned nil.
It is exported to allow for clients to add extensions.
It is false for all A (ascii) functions.
It is fine (and often tidier) to do that in a separate file such as NOTICE, LICENCE or COPYING.
It is fine for the Go world to have pointers into the C world and to free those pointers when they are no longer needed.
It is followed in memory by the stack words and then the actual record data, either a memRecord or a blockRecord.
It is for advanced clients that also import the "unsafe" package.
It is fundamental for slice/string/interface: the garbage collector needs the whole value, not just some of the words, in order to interpret the other bits correctly.
It is global to avoid the garbage collector finalizing it, closing the file and releasing the lock prematurely.
It is guaranteed not to attempt to access "length" past the incoming pointer.
It is guarded by conn.mu.
It is hard to check for the allocations, but it is easy to check that if you call the function twice at the same stack level, the pointers returned should be different.
It is hard to do anything here.
It is hard to look for actual instructions in an arch-independent way.
It is how many bytes of response headers are allow.
It is illegal to call this if the scheduler is empty or if there are no connection-level flow control bytes available.
It is implemented by and documented in the go/build package.
It is implemented by calling the "by" closure in the sorter.
It is implemented in a way that generates phi control values.
It is implemented in assembly.
It is important that the parser distinguishes logically inconsistent traces (e.g. missing, excessive or misordered events) from broken timestamps.
It is important that the scan happens exactly once: if called twice, the installation of stack barriers will detect the double scan and die.
It is impossible to ensure that a goroutine has actually blocked on a channel, in a select or otherwise.
It is in this file so that it can be next to the call method above.
It is in this file so that it can be next to the two similar functions above.
It is initialized by calling Size and then copying the data into the slice returned by Bytes().
It is installed over a return PC on the stack.
It is intended as a simple sleep primitive for use by the synchronization library and should not be used directly.
It is intended as a simple wakeup primitive for use by the synchronization library and should not be used directly.
It is intended behavior that Reader.Reset can be called on a zero-value Reader and be the equivalent as if NewReader was used instead.
It is intended for pre- and post-compilation log output.
It is intended that the creation stack is observed manually not to contain off-by-one errors
It is intended that the user of this function generate a random session key beforehand and continue the protocol with the resulting value.
It is intended to be returned by a Split function to indicate that the token being delivered with the error is the last token and scanning should stop after this one.
It is intended to prepare a Buffer to read existing data.
It is intended to prepare a buffer to read an existing string.
It is invalid to automatically dereference a named pointer type when selecting a method.
It is invoked to write cmd/go/zdefaultcc.go but we also write cmd/cgo/zdefaultcc.go
It is invoked to write go/build/zcgo.go.
It is kind bool but not type bool.
It is kind complex128 but not type complex128.
It is kind complex64 but not type complex64.
It is kind float32 but not type float32.
It is kind float64 but not type float64.
It is kind int but not type int.
It is kind int16 but not type int16.
It is kind int32 but not type int32.
It is kind int64 but not type int64.
It is kind int8 but not type int8.
It is kind string but not type string.
It is kind uint but not type uint.
It is kind uint16 but not type uint16.
It is kind uint32 but not type uint32.
It is kind uint64 but not type uint64.
It is kind uintptr but not type uintptr.
It is legal to overwrite elements of the map.
It is lexically defined: it spans from the beginning of its first mention to the end of its last mention.
It is like time.RFC1123 but hard-codes GMT as the time zone.
It is like typecheck but adds to the information in typeof instead of allocating a new map.
It is likely that we are looking at the function prologue, assume so and hope for the best.
It is lock-free for reading.
It is logically a constant, but using a var lets us take the address below to get a *string.
It is made before _cgo_notify_runtime_init_done, so all cgo calls can rely on it existing.
It is manually checked here.
It is meant to be called when initializing the file system image.
It is mentioned in RFC 1950 (search for "5552").
It is more accurate than Exp(x) - 1 when x is near zero.
It is more accurate than Log(1 + x) when x is near zero.
It is more efficient to have such objects implement their own free list.
It is much cheaper to compare lengths than values, and all we need here is consistency.
It is much more difficult for the C world to have pointers into the Go world, because the Go garbage collector is unaware of the memory allocated by C.
It is natural to think about including build tags in the build ID, but the naive approach of just dumping the tags into the hash would cause spurious rebuilds.
It is never canceled, has no values, and has no deadline.
It is never decoded by the client since the Response contains an error when it is used.
It is nil for the flow that's on the conn directly.
It is nil for unencrypted responses.
It is nil until the first test is started.
It is non-generational and non-compacting.
It is non-nil everywhere but Plan 9, which lacks EPIPE.
It is not a replacement for the reports generated by 'go test -cover' and 'go tool cover'.
It is not accurate but in practice works OK.
It is not allowed to allocate memory in the signal handler.
It is not as simple as it ought to be, because we typecheck nested closures starting from the innermost one.
It is not associated with any particular color profile.
It is not clear how often this happens, and it's only worth it if the block encryption itself is hardware accelerated.
It is not compatible with ReadMetaHeaders.
It is not covered (yet) by the Go 1 compatibility guidelines.
It is not currently executing user code.
It is not executing user code and is not on a run queue.
It is not executing user code.
It is not exposed to outsider users.
It is not guaranteed that a finalizer will run for objects allocated in initializers for package-level variables.
It is not guaranteed that a finalizer will run if the size of *obj is zero bytes.
It is not human-readable.
It is not intended for direct use by clients.
It is not meant to be called directly and is not subject to the Go 1 compatibility document.
It is not necessary that the cutoff here be the same as above.
It is not on a run queue, but should be recorded somewhere (e.g., a channel wait queue) so it can be ready()d when necessary.
It is not on a run queue.
It is not otherwise guaranteed to be a valid pseudo header field, though.
It is not populated synchronously inside the Listener's Accept goroutine, as some implementations block.
It is not possible to be preempted between then and now, so it's okay.
It is not returned as an error by any function.
It is not safe to copy Regexp by value since it contains a sync.Mutex.
It is not set for symbols defined by the packages being linked or by symbols read by ldelf (and so is left as elf.STT_NOTYPE).
It is not suitable for judging primes that an adversary may have crafted to fool this test.
It is not thread-safe.
It is not used concurrently by multiple goroutines.
It is not valid to call this method after a subsequent call to Framer.ReadFrame, nor is it valid to retain the returned slice.
It is off by default but set during all.bash so that installing the Go tree can run a sanity check but not spend time running exhaustive tests.
It is ok for the linker to get multiple of these symbols.
It is ok to provide the addressof the first argument for rounded.
It is ok to re-use the same file when re-scanning the same file as line information which is already present is ignored.
It is okay for different code paths to make different method call sequences on x, but there must be no other source of non-determinism in the call sequences.
It is okay for field paths to share a common, shorter prefix.
It is okay if SysFree is a no-op.
It is okay to add fields, but not to change or remove existing ones.
It is okay to ignore the return value of any particular call to scanner.state: if one call returns scanError, every subsequent call will return scanError too.
It is okay to specify a subset of the pages from a single alloc, just not pages from multiple allocs.
It is oldval plus any adjustment made by p itself.
It is on RHS and the second register needs to go into the LHS.
It is only 504 bytes, and shouldn't take long for Decode to return an error.
It is only for runtime functions, so ASCII A-Z is fine.
It is only provided for testing in conjunction with gc-generated data.
It is only used if there is a prefix followed by an unintelligible or invalid instruction byte sequence.
It is otherwise always "/etc/resolv.conf".
It is owned by the http.Transport and should not be read, written or closed by users of ClientTrace.
It is part of the workaround for Formatters and should be deleted when that workaround is no longer necessary.
It is passed the slice element type, the old slice, and the desired new minimum capacity, and it returns a new slice with at least that capacity, with the old data copied into it.
It is populated immediately inside the (*conn).serve goroutine.
It is possible if at any alt, the match engine can always tell which branch to take.
It is possible that a future implementation of memory allocation will ruin this test.
It is possible to defeat this enforcement by using the unsafe package, and of course there is nothing stopping the C code from doing anything it likes.
It is possible to distribute packages in binary form without including the source code used for compiling the package.
It is preserved for backwards compatibility.
It is probably okay to hold the lock across syscall.Accept because we have put fd.sysfd into non-blocking mode.
It is provided for backwards compatibility with Go 1.0.
It is purely for debugging.
It is rare to Close a DB, as the DB handle is meant to be long-lived and shared between many goroutines.
It is rare, but but it can happen.
It is rarely necessary to close a DB.
It is required because the tests contain a lot of data races on the same addresses (the tests are simple and the memory is constantly reused).
It is returned by Stat.
It is rt's responsibility to simulate HTTP request semantics.
It is safe because the storage cannot be mutated.
It is safe for concurrent use by multiple goroutines.
It is safe in this package because the referent may only point to something a Value may point to, and that is always in the heap (due to the escapes() call in ValueOf).
It is safe to call Read and Write in parallel with each other or with Close.
It is safe to call flushlog.
It is safe to call this function while the server is running in order to rotate the session ticket keys.
It is satisfied by ErrExist as well as some syscall errors.
It is satisfied by ErrNotExist as well as some syscall errors.
It is satisfied by ErrPermission as well as some syscall errors.
It is shorthand for time.Now().Sub(t).
It is similar to bytes.NewBufferString but more efficient and read-only.
It is similar to the standard flag.FlagSet.
It is sniffed for a Content-Type if none is set explicitly.
It is sometimes necessary for a test program to do extra setup or teardown before or after testing.
It is stack.lo+StackGuard normally, but can be StackPreempt to trigger a preemption.
It is stack.lo+StackGuard on g0 and gsignal stacks.
It is still necessary to invoke http.Serve(), typically in a go statement.
It is still used in general, except in checkmark the type bit is repurposed as the checkmark bit and then reinitialized (to 1) as the type bit when finished.
It is successful if the field was optional, even if a default value wasn't provided or it failed to install it into the Value.
It is tempting to try to save the m for next time, which would eliminate both these costs, but there might not be a next time: the current thread (which Go does not control) might exit.
It is the caller's responsibility to advertise this limit with a SETTINGS frame.
It is the caller's responsibility to arrange for it to be freed, such as by calling C.free (be sure to include stdlib.h if C.free is needed).
It is the caller's responsibility to call Close on the ReadCloser when done.
It is the caller's responsibility to call Close on the ReadCloser when finished reading.
It is the caller's responsibility to call Close on the Reader when done.
It is the caller's responsibility to call Close on the WriteCloser when done.
It is the caller's responsibility to call Close on the WriteCloser when finished writing.
It is the caller's responsibility to check if the cookie is expired.
It is the caller's responsibility to close Body.
It is the caller's responsibility to close f when finished.
It is the caller's responsibility to close ln when finished.
It is the caller's responsibility to make sure list elements are unique.
It is the caller's responsibility to make sure the channel has enough buffer space.
It is the caller's responsibility to not call other Write methods concurrently.
It is the caller's responsibility to parse service as a non-decimal integer when needsLookup is true.
It is the caller's responsibility to remove the directory when no longer needed.
It is the caller's responsibility to remove the file when no longer needed.
It is the caller's responsibility to set or clear those deadlines as needed.
It is the converse of Encoder.writeMessage.
It is the default, but callers should use the constant for documentation purposes.
It is the inverse operation of gcInstallStackBarrier.
It is the largest value m such that the address of v is always zero mod m.
It is the number of unique key bytes.
It is the only print function that should be called directly from any of the AST printing functions in nodes.go.
It is the opposite of "netgo".
It is the reader given to the LZW decoder, which is thus immune to the blocking.
It is the same as syntax.Inst except for the new 'Next' field.
It is the same as syntax.Prog except for the use of onePassInst.
It is the same as the value returned by reflect.TypeOf(x).Align().
It is the writer given to the LZW encoder, which is thus immune to the blocking.
It is therefore equivalent to fmt.Sprint(args...) except that each argument is indirected (if a pointer), as required, using the same rules as the default string evaluation during template execution.
It is therefore not necessary when compiling client C of package P to read the files of P's dependencies, only the compiled output of P.
It is thus more portable than binary-rewriting coverage tools, but also a little less capable.
It is typically used by the main function, initialization, and tests, and as the top-level Context for incoming requests.
It is typically used for query parameters and form values.
It is typically used in DNS.
It is typically used in URLs and file names.
It is unexported so all implementations of Node are in this package.
It is unexported to prevent people from using Context wrong and mutating the contexts held by callers of the same request.
It is up to fn to arrange for that later execution, typically by recording g in a data structure, causing something to call ready(g) later.
It is up to the caller to convert this local time into a UTC-based time.
It is up to the implementation to honor the standard cookie use restrictions such as in RFC 6265.
It is up to the user to drain them before signaling.
It is used as a channel buffer size to make sure sends don't block.
It is used by putfull when more work is made available.
It is used by the http.Transport code to keep the buffering behavior for headers and trailers, but flush out chunks aggressively in the middle for request bodies which may be generated slowly.
It is used by typecheck in the case of OLITERAL nodes to print constant definition loops.
It is used during testing to distinguish between parses that might print the same using re's String method.
It is used for reducing the cost of IPv6 addressing scope zone resolution.
It is used if the Reader given to the scanner does not already implement io.RuneScanner.
It is used in conjunction with ForkExec/StartProcess to wait for a running process to exit.
It is used in the Gobuf goroutine state and in scheduling lists that are manipulated without a P.
It is used internally but documented here as an aid to debugging, such as when analyzing network traffic.
It is used only when the CancelIoEx API is unavailable.
It is used to build calls to the conv* and assert* runtime routines.
It is used to clean up the syscall API in an architecture specific manner.
It is used to compute an accurate line number for a formatted construct, independent of pending (not yet emitted) whitespace or comments.
It is used to compute an accurate size (in number of lines) for a formatted construct.
It is used to give some meaningful results in case func Benchmark is used in combination with Run.
It is used to merge report entries with the same info.
It is used, by convention, to distinguish byte values from 8-bit unsigned integer values.
It is used, by convention, to distinguish character values from integer values.
It is useful mainly in compressed network protocols, to ensure that a remote reader has enough data to reconstruct a packet.
It is useful when a client reads some raw XML tokens itself but also wants to defer to Unmarshal for some elements.
It is usually easier to search for 0x123 than to do the mental arithmetic to find f+10.
It is usually of type *net.TCPConn or tls.Conn.
It is valid JSON to escape them, so we do so unconditionally.
It is valid both to add and to subtract offsets from a pointer in this way, but the result must continue to point into the original allocated object.
It is valid to have an extra data header which contains no body.
It is worse to inherit some file descriptors than others.
It is worth recording that history to inform (and, as much as possible, deter) future changes.
It is written by the linker.
It is written in Go and generates parsers written in Go.
It isn't actually used for testing timeouts.
It isn't necessary, so just do a sanity check.
It just scans the archive to make sure it's intact.
It kicks off the background sweeper goroutine and enables GC.
It knows how to narrow down to a specific function quickly.
It knows the coverage counter is called "coverTest".
It limits line length to 76 characters.
It links together the gc-generated object files, along with any other Go code, into a go.o file.
It looks like "CONNECT www.google.com:443 HTTP/1.1", and the parameter is just the authority section of a URL.
It looks like EOF for chunked encoding.
It makes labels between cases and statements and deals with fallthrough, break, and unreachable statements.
It makes life easier in a few places (see chanrecv/mapassign comment below).
It makes one call to data.Len to determine n, O(n*log(n)) calls to data.Less and O(n*log(n)*log(n)) calls to data.Swap.
It makes one call to data.Len to determine n, and O(n*log(n)) calls to data.Less and data.Swap.
It makes the following simplifying assumptions:
It maps a network address to the listener on that address.
It maps any additional bitmap memory needed for the new arena memory.
It matches the URL of each incoming request against a list of registered patterns and calls the handler for the pattern that most closely matches the URL.
It may already be in _Gwaiting if this is mark termination.
It may also be called multiple times, like ConnectStart.
It may also block the entire program.
It may also indicate a runtime bug.
It may be 0 if these instructions cannot be attributed to any source line.
It may be 0 to indicate the "left edge" of the line.
It may be an error to call UnreadByte twice without an intervening call to ReadByte.
It may be an error to call UnreadRune twice without an intervening call to ReadRune.
It may be called concurrently with active operations such as blocked read or write calls.
It may be customized to recognize only a subset of those literals and to recognize different identifier and white space characters.
It may be empty (no known types with that string) or may have multiple elements (multiple types with that string).
It may be just exited, on a free list, or just being initialized.
It may be of the form "host:port".
It may be possible to move ("sink") the spill out of the loop into one or more exit blocks.
It may be provided as argument to any of the Fprint functions.
It may change for reasons of efficiency, or we may even switch to a standard file format if there are compelling benefits to doing so.
It may change signature from release to release.
It may happen on Windows XP or 2003 server.
It may happen when the Dial call bumps against TCP simultaneous open.
It may not be changed concurrently with calls to Get.
It may or may not choose to save the cookies, depending on the jar's policy and implementation.
It may or may not have a stack allocated.
It may prevent future accidental blocking in newConn.
It may return nil, if persistent connections are not being used.
It may use variables declared in the matching sexpr.
It means, there are 2 unavoidable thread switches for every IO.
It might be at the beginning but it might be in the middle of the printed instruction.
It might be nice if these weren't global.
It might be scanned by scang or it might be scanned by the goroutine itself.
It might make sense to expand this to allow statement patterns, but there are problems with preserving formatting and also with what a wildcard for a statement looks like.
It might not be the top, because there might be stkNs entries above it.
It might return "LookupHost returned no suitable address" error on some platforms.
It might trigger stack growth, and the stack growth code needs to be able to allocate heap.
It mitigates expensive lookups on some platforms (e.g. Windows).
It must be a minus sign followed by a non-negative integer literal.
It must be a prefix or an exact match of the package being fetched with "go get".
It must be a relative path: it must not start with a drive letter (e.g. C:) or leading slash, and only forward slashes are allowed.
It must be a set, and there must be a unique path from that instruction to r.
It must be at least 256 for the blockWriter.
It must be called after the handler finished running.
It must be called before any data is written.
It must be called before calling s.step.
It must be called by users of NewInterface after the interface's embedded types are fully defined and before using the interface type in any way other than to form other types.
It must be called via t.nextProtoOnce.Do.
It must be called with the expected new value of arena_used, before* h.arena_used has been updated.
It must be called with w.mu held.
It must be closed before Waiting for child.
It must be created with NewChecker.
It must be in a dead code loop.
It must be inferred from the instruction and the register type.
It must be kept in sync with the sync package.
It must be of type ident or *ident.
It must be run explicitly.
It must be told how large the object at h is, because the encoding of the checkmark bit varies by size.
It must be told how large the object at h is, so that it does not read too far into the bitmap.
It must either be in the shell path (gofmt), a fully qualified path (/usr/you/bin/mytool), or a command alias, described below.
It must equal the litWidth used during compression.
It must have a value, which might be the next argument.
It must have additional headroom for a flush which can contain up to 8 bytes.
It must have been started by Start.
It must have enough room in the macho header to add the DWARF sections.
It must never execute the default case.
It must no longer be referenced.
It must not allocate and probably should not call any runtime functions.
It must not be modified.
It must not be used for anything else.
It must not contain any bytes that require escaping during path encoding.
It must not contain the "--" string within it.
It must only be called after the handler is done executing.
It must retrieve the original return PC from g.stkbuf, increment g.stkbufPos to record that the barrier was hit, and jump to the original return PC.
It must stay a 16 bit store even when Trunc32to16 is rewritten to be a nop.
It must work in terms of reflect.Values so that it is possible to write code without knowing beforehand what the types will be.
It needs to be removed in all three places.
It never allocates, but moves old data as new data is written.
It never returns a non-nil error, but Write returns an error value so it matches io.Writer.
It never returns an error.
It never returns true spuriously.
It normally doesn't change.
It notes that a header will need to be written in the trailers at the end of the response.
It now gets added full time.
It now rewrites the latter as (*_Cvar_var).field.
It obeys the import comment if present.
It only appears for parameter types and does not escape the importer.
It only cares about the distinction between 1 or 2, so don't bother generating any more copies.
It only contains one field (and a pointer field at that), so it fits in an interface value without an extra allocation.
It only limits future stack growth.
It only needs to process the .o files generated from C files that cgo writes, and those are much more limited in the ELF or other features that they use.
It only supports the gc toolchain.
It only works on architectures that support unaligned read/writes.
It only writes maxWrite bytes at a time.
It opens the named file with specified flag (O_RDONLY etc.) and perm, (0666 etc.) if applicable.
It operates on one Go source file at a time, computing approximate basic block information by studying the source.
It overwrites the error return of the function that deferred its call.
It panics if CanAddr() returns false.
It panics if CanSet returns false.
It panics if a value in the map is not a function with appropriate return type or if the name cannot be used syntactically as a function in a template.
It panics if a value in the map is not a function with appropriate return type.
It panics if f does not have at least i+1 elements.
It panics if n does not have at least i+1 elements.
It panics if n has fewer than two elements.
It panics if n has no elements.
It panics if n is negative or greater than the length of the buffer.
It panics if the result is or contains a Go pointer.
It panics if the type's Kind is not Array, Chan, Map, Ptr, or Slice.
It panics if the type's Kind is not Array.
It panics if the type's Kind is not Chan.
It panics if the type's Kind is not Func.
It panics if the type's Kind is not Map.
It panics if the type's Kind is not Struct.
It panics if the type's Kind is not one of the sized or unsized Int, Uint, Float, or Complex kinds.
It panics if v is not addressable.
It panics if v is not assignable to typ.
It panics if v's Kind is not Array or Slice, or if v is an unaddressable array, or if the indexes are out of bounds.
It panics if v's Kind is not Array, Chan, Map, Slice, or String.
It panics if v's Kind is not Array, Chan, or Slice.
It panics if v's Kind is not Array, Slice or String, or if v is an unaddressable array, or if the indexes are out of bounds.
It panics if v's Kind is not Array, Slice, or String or i is out of range.
It panics if v's Kind is not Bool or if CanSet() is false.
It panics if v's Kind is not Chan, Func, Map, Ptr, Slice, or UnsafePointer.
It panics if v's Kind is not Chan.
It panics if v's Kind is not Complex64 or Complex128
It panics if v's Kind is not Complex64 or Complex128, or if CanSet() is false.
It panics if v's Kind is not Complex64 or Complex128.
It panics if v's Kind is not Float32 or Float64
It panics if v's Kind is not Float32 or Float64, or if CanSet() is false.
It panics if v's Kind is not Float32 or Float64.
It panics if v's Kind is not Int, Int8, Int16, Int32, or Int64, or if CanSet() is false.
It panics if v's Kind is not Int, Int8, Int16, Int32, or Int64.
It panics if v's Kind is not Int, Int8, int16, Int32, or Int64.
It panics if v's Kind is not Interface or Ptr.
It panics if v's Kind is not Interface.
It panics if v's Kind is not Map.
It panics if v's Kind is not Slice or if n is negative or greater than the capacity of the slice.
It panics if v's Kind is not Slice or if n is smaller than the length or greater than the capacity of the slice.
It panics if v's Kind is not String or if CanSet() is false.
It panics if v's Kind is not Struct or i is out of range.
It panics if v's Kind is not Struct.
It panics if v's Kind is not Uint, Uintptr, Uint8, Uint16, Uint32, or Uint64, or if CanSet() is false.
It panics if v's Kind is not Uint, Uintptr, Uint8, Uint16, Uint32, or Uint64.
It panics if v's Kind is not UnsafePointer.
It panics if v's Kind is not struct.
It panics if v's kind is not Bool.
It panics if v's kind is not Chan or if x's type is not the same type as v's element type.
It panics if v's underlying value is not a slice of bytes.
It panics if v's underlying value is not a slice of runes (int32s).
It pauses for reads when f.hist is full.
It prevents repeat from overflowing.
It prints "BUG" if there is a failure.
It prints a summary of the test results in the format: ok   archive/tar   0.011s FAIL archive/zip   0.022s ok   compress/gzip 0.033s ...
It prints into a buffer that must be set up separately.
It prints the names of the files that are modified.
It produces a random variable with a geometric distribution and mean MemProfileRate.
It provides access to the io.Writer interface plus information about the flags and options for the operand's format specifier.
It provides one-character lookahead.
It provides the capability to encrypt or decrypt individual blocks.
It provides the same interface as package text/template and should be used instead of text/template whenever the output is HTML.
It proxies Read calls to a reader it receives from rch.
It puts the current m back onto the extra list.
It reads better with the space present anyway.
It records the offset and size of the data, so that a client can read the data only if necessary.
It recovers the panic, logs a stack trace to the server error log, and hangs up the connection.
It recurs if it encounters a start element, so it can be used to skip nested structures.
It relies on the addr2liner and demangler packages to do the actual work.
It relocates a D-form, DS-form instruction sequence like R_ADDRPOWER_DS.
It remembers the highest value.
It removes everything it can but returns the first error it encounters.
It removes the prefix from s and updates the parse state.
It renumbers the samples and locations in the profile correspondingly.
It replaces any existing values associated with key.
It replaces any existing values.
It replaces asmout for NaCl.
It reports whether a flag was seen.
It reports whether a match was found.
It reports whether f succeeded.
It reports whether it found any methods.
It reports whether mu is available for reading or writing.
It reports whether s begins with prefix.
It reports whether s ends in suffix.
It reports whether the advance was legal.
It reports whether the draw was successful.
It reports whether the signature is valid.
It reports whether the value represented by f is guaranteed to be the best approximation of d after being rounded to a float64 or float32 depending on flt.
It reports whether the value was sent.
It reports whether there is no remaining reference.
It reports whether there were any failures.
It represents a fixed-size data source that supports random access by multiple concurrent goroutines.
It represents a unique program location.
It represents the type of an arbitrary Go expression.
It requires Go 1.6 or later and returns an error if the net/http package is too old or if t1 has already been HTTP/2-enabled.
It requires a postorder numbering of all the blocks.
It requires that a be a member of the group (i.e. less than n).
It resolves to the offset of the thread-local symbol from the thread pointer (R13) and inserts this value into the low 16 bits of an instruction word.
It resolves unresolved identifiers across files and updates each file's Unresolved list accordingly.
It returns "" if no suitable address is found.
It returns "", "" if there are no such strings.
It returns (nil, false) as affirmative answer.
It returns (nil, false) if no value is found.
It returns -1 at EOF.
It returns -1 if chars is empty or if there is no code point in common.
It returns -1 if no unit contains this offset.
It returns -1 if rune is not present in s.
It returns -1 if the rune is not a valid value to encode in UTF-8.
It returns -1 if unknown.
It returns 0 elsewhere.
It returns 0, io.EOF when it reaches the end of that entry, until Next is called to advance to the next entry.
It returns 32 or 128 when no appropriate on-link address prefix found.
It returns EOF at the end of the source.
It returns EOF if the scanner's position is at the last character of the source.
It returns UnknownPathError or UnknownLineError if there is an error looking up this line.
It returns a *Package describing the package found in that directory.
It returns a BlockRet block that ends the control flow.
It returns a Timer that can be used to cancel the call using its Stop method.
It returns a Writer to which the file contents should be written.
It returns a bool indicating if the suite was set.
It returns a chan State to which resource state should be sent.
It returns a float64 because that's what reflection needs, but its return value is known to be accurately representable in a float32.
It returns a new ID that can be used as a typeOff or textOff, and will be resolved correctly.
It returns a new nameOff that can be used to refer to the pointer.
It returns a new node if necessary.
It returns a new textOff that can be used to refer to the pointer.
It returns a new typeOff that can be used to refer to the pointer.
It returns a nil interface when the address is nil.
It returns a non-nil error if the ConnectionState is unacceptable.
It returns a recordingConn that wraps the resulting connection.
It returns a replacement list that reuses the same storage and frees (passes to p.reuse) any removed *Regexps.
It returns a scan status just as s.step does.
It returns a set of nodes to display.
It returns a slice of the sections in each module, and a slice of *rtype offsets in each module.
It returns a slice which maps block ID to the immediate dominator of that block.
It returns a slice with the contents of the given slice followed by that many bytes and a second slice that aliases into it and contains only the extra bytes.
It returns an array of that host's IPv4 and IPv6 addresses.
It returns an array of that host's addresses.
It returns an empty slice if the URL's scheme is not HTTP or HTTPS.
It returns an empty slice if v represents a nil map.
It returns an empty string for unnamed types.
It returns an error for both LastInsertId and RowsAffected.
It returns an error if StartElement and EndElement tokens are not properly matched.
It returns an error if and only if CharsetReader of d returns an error.
It returns an error if fails.
It returns an error if search fails.
It returns an error if t has already been executed.
It returns an error if the ciphertext is the wrong length or if the ciphertext is greater than the public modulus.
It returns an error if the current offset is invalid or the data at the offset cannot be decoded as a valid Entry.
It returns an error when fd cannot be used for reading.
It returns an error when fd cannot be used for writing.
It returns an error when fd cannot be used.
It returns an error, if any.
It returns an exit code to pass to os.Exit.
It returns either the non-zero number of tokens taken or an error if the stream is dead.
It returns every address when the filter is nil.
It returns false for pointers into stack spans.
It returns false if it cannot be sure of the answer.
It returns false if the ConnectionState is unacceptable.
It returns false if there is a syntax error.
It returns false if there's a bad index expression.
It returns false if v is the zero Value.
It returns false in other cases.
It returns false on EOF or other error reading the message.
It returns false when the scan stops, either by reaching the end of the input or an error.
It returns false whenever the result is unsure.
It returns four values:
It returns immediately if it's too late.
It returns io.ErrUnexpectedEOF if it cannot read a complete header, and ErrFormat if it doesn't find a valid header signature.
It returns its argument back, for ease of use in generated code.
It returns new affinity mask.
It returns nil if GOARCH is not recognized.
It returns nil if no suitable interface is found.
It returns nil if the key is valid, or else an error describing a problem.
It returns nil if the name has not been registered.
It returns nil if there has been no call to Store for this Value.
It returns nil if there is no such template or the template has no definition.
It returns nil if x cannot be decoded according to aop.
It returns nil when nestedErr is valid.
It returns nil, nil when it reaches the end of the section.
It returns number of records written.
It returns one or zero in valid that indicates whether the plaintext was correctly structured.
It returns only the first error, so that an error caused by an earlier error does not discard information about the earlier error.
It returns parameter count for correspondent SyscallX function.
It returns source files and functions collection *Source if successful.
It returns that block and the remainder of the input.
It returns the Call structure representing the invocation.
It returns the IP address and the network implied by the IP and mask.
It returns the amount of scan work performed.
It returns the best guess at an output context, and the result of the filter which is the same as whether e was updated.
It returns the boolean true if the literal string comprises the entire regular expression.
It returns the byte index in s of the first Unicode code point satisfying f(c), or -1 if none do.
It returns the byte index in s of the last Unicode code point satisfying f(c), or -1 if none do.
It returns the byte index of the first occurrence in s of any of the Unicode code points in chars.
It returns the byte index of the first occurrence in s of the given rune.
It returns the byte index of the last occurrence in s of any of the Unicode code points in chars.
It returns the command output and any errors that occurred.
It returns the corresponding natural number res, the actual base b, a digit count, and a read or syntax error err, if any.
It returns the data read from the file.
It returns the directory entry and its index within the directory.
It returns the element value e.Value.
It returns the empty string if the code is unknown.
It returns the exponent, the exponent base (10 or 2), or a read or syntax error, if any.
It returns the files and an error, if any.
It returns the final non-100 one.
It returns the first established connection and closes the others.
It returns the first non-nil error returned by fn.
It returns the index of the chosen case.
It returns the index of the first instance of c in s, or -1 if c is not present in s.
It returns the index of the newly constructed node.
It returns the index where bytes should be written.
It returns the index where the output begins.
It returns the index where the output bytes begin and the value v/10**prec.
It returns the last node popped.
It returns the length of the block.
It returns the length of the encoding.
It returns the length of the literal (maximum index value + 1).
It returns the name of the authentication protocol and optionally data to include in the initial AUTH message sent to the server.
It returns the named template.
It returns the new offset and an error, if any.
It returns the new value of n.
It returns the number bytes consumed from buf, the number of entries added to names, and the new names slice.
It returns the number of bytes (sic) consumed in the format.
It returns the number of bytes copied and an error if fewer bytes were read.
It returns the number of bytes copied and the earliest error encountered while copying.
It returns the number of bytes copied and the first error encountered while copying, if any.
It returns the number of bytes copied into b and the return address that was on the packet.
It returns the number of bytes copied into b and the source address of the packet.
It returns the number of bytes copied into b, the number of bytes copied into oob, the flags that were set on the packet and the source address of the packet.
It returns the number of bytes copied into b, the number of bytes copied into oob, the flags that were set on the packet, and the source address of the packet.
It returns the number of bytes of stack copied.
It returns the number of bytes read and an error, if any.
It returns the number of bytes read and the error, if any.
It returns the number of bytes read into p.
It returns the number of bytes written and an error, if any.
It returns the number of bytes written and any write error encountered.
It returns the number of bytes written.
It returns the number of elements copied.
It returns the number of entries written to pc.
It returns the number of items successfully parsed.
It returns the number of items successfully scanned.
It returns the number of payload and out-of-band bytes written.
It returns the number of the specified register.
It returns the number of utf8 bytes read and an error, if any.
It returns the output results as Values.
It returns the output to standard output and standard error.
It returns the parsed data and the new offset.
It returns the pointer.
It returns the prefix.
It returns the previous setting.
It returns the public key of the leaf certificate.
It returns the replacement for re.
It returns the resulting protocol and flag indicating if the fallback case was reached.
It returns the shift amount.
It returns the signature as a pair of integers.
It returns the simple regexp equivalent to
It returns the string with the remaining slice of b and a boolean.
It returns the substituted type.
It returns the un-appended suffix of p.
It returns the value and the new offset.
It returns the value, which will be empty if the variable is not present.
It returns the values returned by Select but also returns a panic value if the Select panics.
It returns the zero Value if key is not found in the map or if v represents a nil map.
It returns the zero Value if no field was found.
It returns the zero Value if no method was found.
It returns the zero Value if v is nil.
It returns true if it makes any changes.
It returns true if t was removed, false if t wasn't even there.
It returns true if the call stops the timer, false if the timer has already expired or been stopped.
It returns true if the timer had been active, false if the timer had expired or been stopped.
It returns true iff it completes.
It returns true on success, or false if there is no next result row or an error happened while preparing it.
It returns two boolean values.
It returns two maps with type information: typeof maps AST nodes to type information in gofmt string form.
It returns uintptr instead of unsafe.Pointer so that code using reflect cannot obtain unsafe.Pointers without importing the unsafe package explicitly.
It returns what the time will be, in nanoseconds, Duration d in the future.
It returns whether any files were checked.
It returns whether more iterations of this benchmarks should be run.
It returns z, the actual conversion base used, and an error, if any.
It returns zero if the type cannot be implemented by the fast path in Read or Write.
It reuses openFile instead of adding another function to the list in Context.
It rounds the result assuming that the original was obtained from a floating-point value of bitSize bits (32 for float32, 64 for float64).
It runs after the test has completed.
It runs forever and should never fail.
It runs three phases:
It scans a gcc-produced executable and dumps information about the imported symbols and the imported libraries.
It seems Windows searches ContinueHandler's list even if ExceptionHandler returns EXCEPTION_CONTINUE_EXECUTION.
It seems to only be eventually consistent.
It seems to work with OS X 10.8, so we default to clang for 10.8 and later.
It serves as the implementation of Parse.
It serves only to test the tag checker during make test.
It serves to distinguish among multiple blocks that may all have with the same source file, line, and column.
It sets f.RegAlloc to the resulting allocation.
It sets ok to false if the number could not fit return types or is invalid.
It sets only the Path and Args in the returned structure.
It sets s's sweepgen to the latest generation, and, based on the number of free objects in s, moves s to the appropriate list of c or returns it to the heap.
It sets that pointer to a new function created with MakeFunc.
It sets z to the (possibly rounded) value of the corresponding floating- point value, and returns z, the actual base b, and an error err, if any.
It should also not be an error (issue 2540, issue 8587).
It should also not call Run.
It should be a sizeclass not used much by others, so we have a greater chance of finding adjacent ones.
It should be covered via the ReadSlice test since ReadLine simply calls ReadSlice, and it's that function that handles the last byte.
It should be executed only by the sender, never the receiver, and has the effect of shutting down the channel after the last sent value is received.
It should be fd 3, but we work around an fd leak bug here (https://golang.org/issue/2603) to let it be elsewhere.
It should be followed by another entry with the name.
It should be ignored.
It should be in the first few bytes, but read a lot just in case, especially given our past problems on OS X with the build ID moving.
It should be plain text without user info or other embedded errors.
It should be possible to switch back to SysFree if we also implement and then call some kind of MHeap_DeleteSpan.
It should be set together with StreamDep, or neither should be set.
It should be the preferred greeting for servers that support it.
It should be used only when the server does not support ehlo.
It should be used when the zip data is appended to an existing file, such as a binary executable.
It should be used with extreme care.
It should encompass all the languages with special casing rules and be generated automatically, but that requires some API development first.
It should fail to parse because NUL isn't a permitted character in a PrintableString.
It should not be used for HTML from a third-party, or HTML with unclosed tags or comments.
It should not use the StartTimer, StopTimer, or ResetTimer functions, because they have global effect.
It should only be called when there are no unread bytes in d.bytes.
It should only be modified via copying the whole Request using WithContext.
It should only be used by servers to debug client requests.
It should record in the Context field whatever information is needed about the current point of execution to later produce a stack trace, probably the stack pointer and PC.
It should set up any goroutine-local state and then iterate until pb.Next returns false.
It should then call os.Exit with the result of m.Run.
It should work without it, since the flate.Reader's internal buffering will hit EOF and that should be sufficient.
It simplifies safe initialization of global variables holding compiled regular expressions.
It simplifies the computations to choose the cycle boundaries so that the exceptional years are always delayed as long as possible.
It skips white space.
It sleeps until the next event in the timers heap.
It speaks a query language that's semantically similar to but syntactically different and simpler than SQL.
It splits the encoded-words when necessary.
It splits the slice s at each run of code points c satisfying f(c) and returns a slice of subslices of s.
It starts with a coarse partition and iteratively refines it until it reaches a fixed point.
It stops and returns the first error.
It stops once it finds 0 or reaches end of b.
It stores all of the symbols decoded from the program and provides methods to translate between symbols, names, and addresses.
It stores up to maxMemory bytes of the file parts in memory and the remainder on disk in temporary files.
It strips leading common prefixes (like tv_ in tv_sec, tv_usec) converts names to upper case, and rewrites _ into Pad_godefs_n, so that all fields are exported.
It submits and cancels IO in the current thread for systems where Windows CancelIoEx API is available.
It supports append, reading previously appended bytes, and retrieving the final string.
It symbolizes all locations based on their addresses, regardless of mapping.
It synthesizes some multiple-instruction sequences so the front end can stay simpler.
It takes a memory arg so it gets correctly ordered with respect to GC safepoints.
It takes an io.Reader providing the source, which then can be tokenized through repeated calls to the Scan function.
It takes care to only read one frame at a time, blocking until the consumer is done with the frame.
It tests the embedding of a scan within a scan.
It then exits the program (with exit status 1) because generation stops at the first error.
It then places these 8 bytes into the cached 64 bit s.allocCache.
It then writes a single object file named for the basename of the first source file with a .o suffix.
It throws if the program is copying a block that contains a Go pointer into non-Go memory.
It throws if the program is copying slice elements that contain Go pointers into non-Go memory.
It throws if the program is storing a Go pointer into non-Go memory.
It transform closure bodies to properly reference captured variables.
It treats the bytes read as being encoded as ISO 8859-1 (Latin-1) and will output a string encoded using UTF-8.
It tries to parse a number of ASN.1 values from the given byte slice and returns them as a slice of Go values of the given type.
It tries to stress the garbage collector, maps, channels, the network, and everything else provided by the runtime.
It uncovers the data by scanning the output from the test run.
It undoes the effect of all prior calls to Notify using c.
It unescapes a larger range of entities than EscapeString escapes.
It updates d.off and returns the new scan code.
It used to cause a cgo error when building with GCC 6.
It uses LookPath to try appropriate extensions.
It uses a close-on-exec file descriptor itself to determine this, so we know that when cmd.Start returns, at least one close-on-exec file descriptor has been closed.
It uses a feedback control algorithm to adjust the memstats.next_gc trigger based on the heap growth and GC CPU utilization each cycle.
It uses a greedy approach to merge starting with the entries with the lowest weight.
It uses buf to buffer the read.
It uses buf to buffer the write.
It uses dir as prefix for all destination files.
It uses more than the usual amount of stack but that's okay.
It uses statistics gathered by the garbage collector to perform enough sweeping so that all pages are swept during the concurrent sweep phase between GC cycles.
It uses the GOARCH, GOOS, GOROOT, and GOPATH environment variables if set, or else the compiled code's GOARCH, GOOS, and GOROOT.
It uses the GOROOT environment variable, if set, or else the root used during the Go build.
It uses the SVGPan library, which is included directly.
It uses the free pool if possible.
It uses the print functionality implemented in printer.go.
It uses the re's machine cache if possible, to avoid unnecessary allocation.
It uses the worst possible input: A linear string of nil checks, none of which can be eliminated.
It uses true little-endian doubles, while the 7500 used mixed-endian.
It uses typesEqual to map types from later modules back into earlier ones.
It verifies that broken connections do not affect future connections.
It visits all flags, even those not set.
It visits only those flags that have been set.
It was a pleasure to see you at the wedding.
It was changed at the time of Go 1.1 release because the former User-Agent had ended up on a blacklist for some intrusion detection systems.
It was deleted between the Lstat and Open.
It was failing, and now not, in github.com/bradfitz/go-sql-test
It was wrong because the next thing in the input might be a type definition, which would lead to an incorrect length check.
It will accept any text file and generate a Profile out of it with any hex addresses it can identify, including a process map if it can recognize one.
It will also show all the errors instead of just the first, as err.Error does.
It will be removed once SSA work is complete.
It will be the last statement of this basic block.
It will be transmitted only if it is exported and not a chan or func field or pointer to chan or func.
It will be updated as we write section and prog headers.
It will crash the current process if VFPv1 is missing.
It will crash the current process if VFPv3 is missing.
It will delay the load of the DLL until the first call to its Handle method or to one of its LazyProc's Addr method.
It will enable them in minit.
It will exit when it's done.
It will first take data that has been read ahead.
It will get issued just before each use (see allocValueToReg).
It will have exponent in the desired range.
It will have to do for now.
It will inherit the time left in the current time slice.
It will lead to a false conclusion that cputicks is broken.
It will never be called when used as intended, so there is no need to make it actually work.
It will never return an empty string.
It will not read more blocks than needed.
It will only be called if the client supplies SNI information or if Certificates is empty.
It will only be executed after a system call for a socket that has an entry in internal table.
It will only be executed before a system call for a socket that has an entry in internal table.
It will only be true if the package path is a partial match for some directory and there may be more matches.
It will panic, if more than 15 arguments are supplied.
It will perform exactly one Write to the underlying Writer.
It will pick one of the duplicates to use.
It will save any existing signal handler.
It will send a descriptor if this is the first time the type has been sent.
It will start off with a call to fn, or else the scheduler.
It will think y is live, but y is uninitialized, and the runtime will crash detecting a bad slice.
It works by starting with an initial list of symbols and references symbols by their index into that list.
It works for all actual cases, though.
It works on a best-effort basis: it will silently preserve the original names in case of any errors.
It works on both Windows and Unix paths, regardless of host operating system.
It works, but only when running one binary at a time.
It would also exacerbate the problems mentioned earlier, since even programs that are careful to maintain mtimes on files rarely maintain mtimes on directories.
It would be nice if the error messages began with the standard file:line: prefix, but that's not where we are today.
It would be nice to avoid, at least in the common cases, but we need to make sure that misbehaving clients of reflect cannot affect other uses of reflect.
It would be nice to catch the problem sooner, but there is no reliable way to guarantee that timerproc schedules without doing something involving timerproc itself.
It would be part of DNS labels, a FQDN or an absolute FQDN.
It would be possible to delay the update of either g or SP until immediately before the PC update instruction.
It would be simpler to just have sender's four cases all be the same channel, but this doesn't actually trigger the bug.
It would exist only so that we could register at thread-exit-time destructor.
It would have been even better to start it before the collection, but doing so requires allocating memory, so it's tricky to coordinate.
It wraps a ReadCloser but runs fn (if non-nil) at most once, right before its final (error-producing) Read or Close call returns.
It wraps an io.Reader or io.Writer object, creating another object (Reader or Writer) that also implements the interface but provides buffering and some help for textual I/O.
It wraps os.StartProcess to make it easier to remap stdin and stdout, connect I/O with pipes, and do other adjustments.
It wraps paragraphs of text to width or fewer Unicode code points and then prefixes each line with the indent.
It wraps the Value interface, rather than being part of it, because it appeared after Go 1 and its compatibility rules.
It writes a slice that contains all the record sizes to recordSizesChan.
It writes at most DecodedLen(len(src)) bytes to dst and returns the number of bytes written.
It writes its initial settings frame and expects to be able to read the preface and settings frame from the client.
It's OK if we don't have a libgcc file at all.
It's OK if we find the name without the dot, as some systems say 127.0.0.1 localhost localhost.
It's OK with a space.
It's a bit baroque to remove a signal stack here only to add one in minit, but it's a simple change that keeps NetBSD working like other OS's.
It's a bit of a fluke that this is possible without rewriting the instructions more comprehensively, and it only does because we only support a single TLS variable (g).
It's a bit tricky, because we can't capture another variable with the expected value (it would be combined as well).
It's a bitmap of the KeyUsage* constants.
It's a comma-separated list, so we split it.
It's a concrete value, so drill down to the base type.
It's a data race, but nothing we can do about it.
It's a good but not certain bet that FileInfo will tell us exactly how much to read, so let's try it but be prepared for the answer to be wrong.
It's a helper function for float32 and complex64.
It's a perfect match, unmarshal the field.
It's a prefix for the field.
It's a signed number and a zero value is a non-error by convention.
It's a structure because other PKIX verification APIs have ended up needing many options.
It's a valid encoding.
It's a wrapper around rwc that provides io.LimitedReader-style limiting (while reading request headers) and functionality to support CloseNotifier.
It's actually two, equal length, tables concatenated.
It's all too special to handle in the decoding tables, at least for now.
It's also possible to omit this in order to use the default root set of the current operating system.
It's also used to set the Content-Length, if the total body size was small and the handler has already finished running.
It's always at the same stack depth.
It's an argument here because we merge the first pass with the Huffman decoding.
It's an error for any of the other fields to have this type.
It's an io.Writer (like a bytes.Buffer) and also an io.ReaderAt, allowing random-access reads.
It's an open file, so pop the line history.
It's buffered so that the connectionOpener doesn't block while waiting for the req to be read.
It's clean now, so remove it.
It's computed once and stored in a map keyed by reflection type.
It's conforming, simple and does not introduce excessive happens-before edges between unrelated goroutines.
It's critical that we enter this function with preemption disabled, GC must not start while we are in the middle of this function.
It's critical to ensure that no operations proceed on unswept spans (that would corrupt mark bits in GC bitmap).
It's difficult to live within the no-split stack limits here.
It's difficult to test directly because the reflect package is only at arm's length.
It's discarded once the handshake has completed.
It's equivalent to v.FieldByIndex(finfo.idx), but initializes and dereferences pointers as necessary.
It's exposed as plaintext in every session ticket.
It's hard to argue this is anything other than a kernel bug.
It's hard to build a self-contained test for this because we can't build compatible types in one package with different items so something is ignored.
It's hard to exclude those but for the case where we are in a type switch.
It's hard to see the second problem once the first is fixed, but its fix is trivial so we let that go.
It's hard to tease out exactly how big a Sigset is, but rt_sigprocmask crashes if we get it wrong, so if binaries are running, this is right.
It's hard to tell so we settle on the heuristic that names without dots (like "localhost" or "myhost") do not get trailing dots, but any other names do.
It's here in hex for the same reason as rZipBytes above: to avoid problems with on-disk virus scanners or other zip processors.
It's here only so that there is at least one package in the standard library with a TestMain, so that code is executed.
It's illegal to call this before the header has been flushed.
It's important not to try to handle a signal between those two steps.
It's important that any use of gcWork during the mark phase prevent the garbage collector from transitioning to mark termination since gcWork may locally hold GC work buffers.
It's important to remember that ciphertexts must be authenticated (i.e. by using crypto/hmac) as well as being encrypted in order to be secure.
It's important to return the same values for parent as the original algorithm.
It's intended to be used during development to supplement the currently ad-hoc unit tests.
It's intentionally small (1 pointer wide) to minimize garbage.
It's kind of sleazy, but works well in practice.
It's like io.Pipe except there are no PipeReader/PipeWriter halves, and the underlying buffer is an interface.
It's likely that this is an uninitialized variable in the entry block.
It's likely that this is not strictly correct and that the math should look something like the non-scattered case below.
It's mainly useful to prepare an argument for concat or concat3.
It's necessary to enable write barriers during the scan phase for several reasons:
It's never OK to pass them to C.
It's not a test in itself.
It's not clear that we can do anything about this.)
It's not curried for performance reasons.
It's not documented if this is necessary, but we're paranoid.
It's not easy to slip in a LimitReader here, as textproto.NewReader requires a concrete *bufio.Reader.
It's not part of the template so that multiple executions of the same template can execute in parallel.
It's not perfect: during the backward transition we might pick either one.)
It's not rigorous about syntax because it doesn't check that we have at least some digits, but Atof will do that.
It's not safe to skip completion notifications for UDP: http://blogs.technet.com/b/winserverperformance/archive/2008/06/26/designing-applications-for-high-performance-part-iii.aspx
It's not safe to use FILE_SKIP_COMPLETION_PORT_ON_SUCCESS if non IFS providers are installed: http://support.microsoft.com/kb/2568167
It's not supposed to be reached, ever, but if it is, we'd like to be able to tell how we got there.
It's not valid input (bad path), but it shouldn't crash.
It's now OK for signal handlers to run.
It's often the case that PEM encoded CRLs will appear where they should be DER encoded, so this function will transparently handle PEM encoding as long as there isn't any leading garbage.
It's okay in those situations not to use up the entire defer stack: incomplete information then is still better than nothing.
It's okay that we didn't find a root containing dir.
It's okay to leave this empty for now: if crash returns the ordinary exit-after-panic happens.
It's okay to see files multiple times (e.g., sys.a)
It's one word and it has pointers, it must be a pointer.
It's only non-Go programs that can mess us up.
It's only written to saveBuf if it was truncated in the middle of a header block.
It's passed in for better error messages only.
It's possible for a mutator to modify the stack above the lowest un-hit stack barrier if a higher frame has passed down a pointer to a stack variable in its frame.
It's possible for the negation to have one more range - this one - than the original class, so use append.
It's possible to assign a negative unlikeliness (though not currently the case).
It's possible to override environment like following.
It's possible we crossed a second boundary between getting now and logging, so add a second and try again.
It's preferable to choose WriterTo over ReaderFrom, since a WriterTo can issue one large write, while the ReaderFrom must read until EOF, potentially allocating when running out of buffer.
It's probably very close, and it's usually correct, but we never quite found all the corner cases.
It's run on its own goroutine.
It's safe for concurrent use by multiple goroutines.
It's safe to access rescan since the world is stopped.
It's safe to traceback the user stack.
It's somewhat harmless but enough tests assume it's not true in order to test other things that it's worth fixing.
It's strange that this handles R0 and F0 differently from the other registers.
It's swapped in when we don't actually want to consume the body, but need a non-nil one, and want to distinguish the error from reading the dummy body.
It's the http.Handlers that block, waiting for their previous frames to make it onto the wire
It's the last package path we care about.
It's too confusing to read the errors.
It's unlikely to be a recursive stringer if it has a Format method.
It's updated copy-on-write.
It's used as a fallback when nothing faster can be used.
It's used as a helper process for TestLinuxSendfile.
It's used as a helper process for TestParameterRun.
It's used as a pointer, so it can fit in a sort.Interface interface value without allocation.
It's used as a unique signature to identify such errors when recovering.
It's used by ListenAndServe and ListenAndServeTLS so dead TCP connections (e.g. closing laptop mid-download) eventually go away.
It's used by sha1block_generic.go and tests.
It's used by the optional Server.ConnState hook.
It's used to guard test-only fields when not under test, to avoid runtime atomic overhead.
It's used to skip complex values.
It's used when calling Decode with a nil value.
It's useless, and the VARDEF will incorrectly mark the old value as dead.
It's where you are now, and you just read this token.
Iter provides an abstraction for iterating across struct fields and interface methods.
Iter returns the first field in fs and an Iter value to continue iterating across its successor fields.
IterFields returns the first field or method in struct or interface type t and an Iter value to continue iterating across the rest.
Iterate calls f for the files in the file set in the order they were added until f returns false.
Iterate down the trie to the end, and grab the value and keylen with the highest priority.
Iterate over insecure schemes too, because this function simply reports the state of the repo.
Iterate through list and print its contents.
Iterate through the blocks in reverse round-robin fashion.
Iterate through the files in the archive, printing some of their contents.
Iterate through the files in the archive.
Iterate until it wraps, and we've found the minimum value.
Iterates over a basic block applying a callback to each instruction.
Iteratively try additional hashes to allow tests for multi-point failure.
Iterator was started in the middle of a grow, and the grow isn't done yet.
Itoa is shorthand for FormatInt(int64(i), 10).
Its File parts are stored either in memory or on disk, and are accessible via the *FileHeader's Open method.
Its Next method returns the next Go source directory it finds.
Its Read* methods don't return the usual error because the error handling was verbose.
Its Sum method will lay the value out in big-endian byte order.
Its Type() is always a *Signature.
Its Value parts are stored as strings.
Its associated value should be a *Trace struct.
Its behavior is undefined if v takes any other value.
Its buffered writer is lazily allocated as needed, to minimize idle memory usage with many connections.
Its contents are not defined.
Its contents may be either stored in memory or on disk.
Its control value will be set to the final memory state.
Its cursor starts before the first row of the result set.
Its decimal representation does not repeat, but there are only 10 possible digits, so it should be reasonably compressible.
Its default unlikely is also zero which is consistent with favoring loop edges.
Its error, if any, is sent in the HTTP response.
Its presence in Request.MultipartForm indicates that parsing of the request body has been handed off to a MultipartReader instead of ParseMultipartFrom.
Its primary job is to wrap existing implementations of such primitives, such as those in package os, into shared public interfaces that abstract the functionality, plus some other related primitives.
Its purpose is to prevent matching strings like "Month" when looking for "Mon".
Its response is then copied back to the original client unmodified.
Its return value records whether the signature is valid.
Its settings are used (but not its RoundTrip method, etc).
Its successor should have exactly two successors.
Its value depends on the Kind.
Its value depends on the kind of the block.
Its value selects Go's white space characters.
Its zero value (DefaultClient) is a usable client that uses DefaultTransport.
J0 returns the order-zero Bessel function of the first kind.
J1 returns the order-one Bessel function of the first kind.
JMP chasing and removal.
JPEG is a lossy format and hence needs a non-zero tolerance.
JPEG is defined in ITU-T T.81: http://www.w3.org/Graphics/JPEG/itu-t81.pdf.
JPEG, VP8, the MPEG family and other codecs use this color model.
JS encapsulates a known safe EcmaScript5 Expression, for example, `(x + y * z())`.
JSEscape writes to w the escaped JavaScript equivalent of the plain text data b.
JSEscapeString returns the escaped JavaScript equivalent of the plain text data s.
JSEscaper returns the escaped JavaScript equivalent of the textual representation of its arguments.
JSON cannot represent cyclic data structures and Marshal does not handle them.
JSON null values should be ignored for primitives and string values instead of resulting in an error.
JSON params is array value.
JSON value parser state machine.
JSON works fine with the TextMarshaler only.
JSON-RPC clients can use arbitrary json values as request IDs.
JSON-RPC responses include the request id but not the request method.
JSStr encapsulates a sequence of characters meant to be embedded between quotes in a JavaScript expression.
Jacobi returns the Jacobi symbol (x/y), either +1, -1, or 0.
Jacobi should panic when the second argument is even.
Jan 01 to Jan 03 of year n might belong to week 52 or 53 of year n-1, and Dec 29 to Dec 31 might belong to week 1 of year n+1.
January 1 of the absolute year, like January 1 of 2001, was a Monday.
January, first month, 31 days
Jar implements the http.CookieJar interface from the net/http package.
Jar specifies the cookie jar.
Javanese is the set of Unicode characters in script Javanese.
Jn returns the order-n Bessel function of the first kind.
Join concatenates the elements of a to create a single string.
Join concatenates the elements of s to create a new byte slice.
Join joins any number of path elements into a single path, adding a Separator if necessary.
Join joins any number of path elements into a single path, adding a separating slash if necessary.
JoinPath joins the sequence of path fragments into a single path.
Join_Control is the set of Unicode characters with property Join_Control.
Jump i ahead to next word with bits.
Jump to default case.
Jumps refer to PC, a pseudo.
Just a sanity check that we at least get the response.
Just about at the limit of what is reasonable to write by hand.
Just benchmarking how fast the Zip64 test above is.
Just do it explicitly.
Just enough correctness for our redirect tests.
Just get a stack from the global pool.
Just ignore anything in comment
Just ignore anything within quotes
Just ignore msanread when running on the system stack.
Just in case initCh was not correctly made.
Just in case the relaying gets botched, each m involved in the relay sleeps for 5 seconds and then does the crash/exit itself.
Just leave it as 0 and hope for the best.
Just make one easy table.
Just make sure conversions are being applied at all.
Just mark the stack dirty.
Just one: don't bother factoring.
Just print a stack trace and exit.
Just return back something that's a directory.
Just run test over and over again.
Just run the test with amd64.
Just skip it and carry on.
Just some unlikely value that means "we got here, don't care how often"
Just testing a full HTTP requests can happen with a trace pointing to a zero ClientTrace, full of nil func pointers.
Just testing the rleBuffer used in the Zip64 test above.
Just to keep hold alive.
Just to reduce stutter, if user set r.Status to "200 OK" and StatusCode to 200.
Just treat it as if it didn't exist.
Just upper and lower.
Just use a type big enough to hold any register.
Just use the invalid value.
Kaithi is the set of Unicode characters in script Kaithi.
Kannada is the set of Unicode characters in script Kannada.
Katakana is the set of Unicode characters in script Katakana.
Kayah_Li is the set of Unicode characters in script Kayah_Li.
Keep a cached value to make gotraceback fast, since we call it on every call to gentraceback.
Keep a list of all the functions, to remove the ones only used as expressions and avoid generating bridge code for them.
Keep a typelink or itablink if the symbol it points at is being kept.
Keep doing that until we fix yduff etc.
Keep everything page-aligned.
Keep for performance debugging.
Keep go.importpath symbols in the same section as types and names, as they can be referred to by a section offset.
Keep going with the information we have.
Keep going, counting the other a's that we find.
Keep going, so that we only emit a delta for a true instruction boundary in the program.
Keep in mind this data is for maximally loaded tables, i.e. just before the table grows.
Keep in sync with ../base32/example_test.go.
Keep in sync with ../base64/example_test.go.
Keep in sync with ispubname() and ispubtype() below.
Keep in sync with linker and with package debug/gosym and with symtab.go in package runtime.
Keep in sync with list.go
Keep in sync with src/runtime/select.go.
Keep looping until they're all done.
Keep one connection in StateIdle (idle after a request)
Keep one connection in StateNew (connected, but not sending anything)
Keep path relative to current directory on that drive.
Keep resetting this reader.
Keep taking from our reservation.
Keep the RET but mark it dead for the liveness analysis.
Keep the channels visible from Go.
Keep the fibbers in dedicated operating system threads, so that this program tests coordination between pthreads and not just goroutines.
Keep the largest of the two periods.
Keep the links in dedicated operating system threads, so that this program tests coordination between pthreads and not just goroutines.
Keep the maximum package clause position as position for the package clause of the merged files.
Keep the spaces as they are.
Keep these four bytes.
Keep this function for debugging.
Keep track of shadowed addresses.
Keep track of values that are spilled in the loop, but whose spill is not used in the loop.
Keep track of which value we want in each register.
KeepAlive specifies the keep-alive period for an active network connection.
Keeps the rewritten files around if set.
Keeps track of file position
Kept separate for better error messages.
Key expansion algorithm.
Key for the list of host names must be a literal IP address including IPv6 address with zone identifier.
Key for the list of literal IP addresses must be a host name.
Key is a handle to an open Windows registry key.
Key returns a map type's key type.
Key returns the key type of map m.
Key returns the key type of map type t.
Key usage is considered a constraint down the chain which mirrors Windows CryptoAPI behaviour, but not the spec.
Key usage not implemented for Windows yet.
Key, Value may be nil
KeyUsage represents the set of actions that are valid for a given key.
KeyUsage status flags are ignored.
KeyValue represents a single entry in a Map.
Keys and values make it to memory, lose track.
Keys and values may be empty.
Keys are sorted before writing to body to allow deterministic output.
Keys can be used directly in the Windows API.
Keys in the map are canonicalized (see CanonicalHeaderKey).
Keys in valid JSON must be double quoted as must all strings.
Keys of ptrs in insertion order (deterministic worklist)
Keys returns the sorted keys of h.
Keys with colons cannot be encoded.
Keywords for GNU sparse files in a PAX extended header
Keywords for old GNU sparse headers
Keywords for the PAX Extended Header
Kharoshthi is the set of Unicode characters in script Kharoshthi.
Khmer is the set of Unicode characters in script Khmer.
Khojki is the set of Unicode characters in script Khojki.
Khudawadi is the set of Unicode characters in script Khudawadi.
Kick off goroutines according to parallelism.
Kick off the GC and make it do something nontrivial to keep stack barriers installed for a while.
Kick the old runnext out to the regular run queue.
Kilian, editor, Advances in Cryptology.
Kill causes the Process to exit immediately.
Kill is sent by external programs to cause an exit.
Kill means we never look at the carry bit after this kind of instruction.
Kills the problem caused by case-insensitive file systems matching an upper case name as a package name.
Kind is the kind of switch statement.
Kind returns the kind of basic type b.
Kind returns the selection kind.
Kind returns the specific kind of this type.
Kind returns the value kind.
Kind returns v's Kind.
Kind specifies the kind of value represented by a Value.
Known added feature to the upcoming release.
Known filters are nil, ipv4only, and ipv6only.
Known networks are "tcp", "tcp4" (IPv4-only), "tcp6" (IPv6-only), "udp", "udp4" (IPv4-only), "udp6" (IPv6-only), "ip", "ip4" (IPv4-only), "ip6" (IPv6-only), "unix", "unixgram" and "unixpacket".
Known to cause data races in the past.
Known to low-level assembly in package runtime and runtime/cgo.
Known toolchains are:
Knows slice layout used by compilers: pointer, length, cap.
Knows string layout used by compilers: pointer plus length, which rounds up to 2 pointers after alignment.
Koopman's polynomial.
L is held while observing or changing the condition
L0 is the lowest level, core, nearly unavoidable packages.
L1 adds simple functions and strings processing, but not Unicode tables.
L2 adds Unicode and strings processing.
L3 adds reflection and some basic utility packages and interface definitions, but nothing that makes system calls.
L4 is defined as L3+fmt+log+time, because in general once you're using L3 packages, use of fmt, log, or time is not a big deal.
LCASE expr_or_type_list ':' will be converted to OCASE right will point to next case done in casebody()
LCASE expr_or_type_list LCOLAS expr ':'
LCHAN '(' hidden_type_recv_chan ')'
LCHAN hidden_type_non_recv_chan
LCHAN non_recvchantype LCHAN LCOMM ntype
LEA* opcodes don't really read the second arg.
LIGNORE is never escaping lexer.next
LINEAR B SYLLABLE B008 A (first non-BMP code point)
LLITERAL value for use in syntax error messages
LNAME belongs to first *Sym of new_name_list
LNAME was already consumed and is coming in as name
LRU should evict 3 next.
LSB means Least Significant Bits first, as used in the GIF file format.
LZ77 decompresses data through sequences of two forms of commands:
LZW Minimum Code Size.
Label corresponds to Profile.Label
Label is an arbitrary byte string that must be equal to the value used when encrypting.
Labels are function scoped.
Labels to attach to next instruction.
Lacking loop structure, fall back on heuristics.
Lane, Guido Vollbeding.
Langs, Boston, Massachusetts, Oct.
Lao is the set of Unicode characters in script Lao.
Large arguments are handled by Stirling's formula.
Large data benchmark.
Large interior chunks.
Large negative arguments are made positive using a reflection formula.
Large read, empty buffer.
Large timeouts that will overflow an int64 unix nanos.
Large write, empty buffer.
LargeFieldElement also represents an element of the field.
Larger multipliers are used for non-optimized builds that have larger stack frames.
Larger numbers are scheduled closer to the end of the block.
Larger relative error can be observed for z near 1 +i0.
Larger stacks will be allocated directly.
Largest possible non-zip64 file, with no zip64 header.
Last assignment to n wins
Last bytes are two UCS-2 NULs, or four NUL bytes.
Last chunk, empty trailer
Last field might end at EOF.
Last field might end at the end of the string.
Last field was zero width.
Last of OS specific semantics
Last of reserved range.
Last operating system-specific.
Last processor-specific type.
Last processor-specific.
Last resort, just write zero
Last returns the byte at the end of the buffer.
Last round uses s-box directly and XORs to produce output.
Last token returned by split.
LastIndex returns the index of the last instance of sep in s, or -1 if sep is not present in s.
LastIndexAny interprets s as a sequence of UTF-8-encoded Unicode code points.
LastIndexAny returns the index of the last instance of any Unicode code point from chars in s, or -1 if no Unicode code point from chars is present in s.
LastIndexByte from the strings package.
LastIndexByte returns the index of the last instance of c in s, or -1 if c is not present in s.
LastIndexFunc interprets s as a sequence of UTF-8-encoded Unicode code points.
LastIndexFunc returns the index into s of the last Unicode code point satisfying f(c), or -1 if none do.
LastInsertId returns the database's auto-generated ID after, for example, an INSERT into a table with primary key.
LastInsertId returns the integer generated by the database in response to a command.
Later checks restrict the syntax to valid forms.
Later removed from DWARF.
Later runs must wait for the previous run's print.
Later we could care more and send larger frames if the peer advertised it, but there's little point.
Later we'll need a remove operation on dynamicTable.
Later, when a selected frame returns, it "returns" to this trampoline instead of returning to its actual caller.
Latin is the set of Unicode characters in script Latin.
Launch Generate goroutine.
Launch a goroutine to fetch the URL.
Launch findPackage as a goroutine so it can return multiple paths if required.
Launch some Poller goroutines.
Launch the StateMonitor.
Layout matches runtime.BitVector (well enough).
Layout of in-memory per-function information prepared by linker See https://golang.org/s/go12symtab.
Layouts suitable for passing to time.Parse.
Lazy typechecking of imported bodies.
LazyDLL is subject to the same DLL preloading attacks as documented on LoadDLL.
Lchown changes the numeric uid and gid of the named file.
Lchown is not supported under windows or Plan 9.
Ldexp is the inverse of Frexp.
Lead and line comments may be considered documentation that is stored in the AST.
Leading src fragment.
Leading zero units are omitted.
Leading zeros are not printed.
Leading zeros in other places should not be taken as fractional seconds.
Leaf is the parsed form of the leaf certificate, which may be initialized using x509.ParseCertificate to reduce per-handshake processing for TLS clients doing client authentication.
Leap-second time pairs
Leave SP around for GC and traceback.
Leave absolute paths alone.
Leave alone for now since there are different optimization opportunities, but factor eventually.
Leave an obviously incorrect value.
Leave for gen, except that instrumentation requires old form.
Leave per-P caches alone, they have strictly bounded size.
Leave per-P pools alone, they have strictly bounded size.
Leave result in DX:AX.
Leave result in ah:al.
Leave the hash as zero.
Leave the type unchanged.
Leave them on the stack so that they can be killed in the outer context in case the short circuit is taken.
Leaving MaxPathLen as zero indicates that no maximum path length is desired, unless MaxPathLenZero is set.
Left in place for back end.
Left is not ssa-able.
Left padding with zeros has already been handled like precision earlier or the f.zero flag is ignored due to an explicitly set precision.
Left side (Prog.from): address taken, read, write.
Left(List) (direct method call x.Method(args))
Left(List) (function call f(args))
Left(List) (function call, method call or type conversion)
Left(List) (interface method call x.Method(args))
Left-shift of smaller word must be sign/zero-extended.
Left.Right (method expression x.Method, not called)
Left.Right or Left.Type (.Right during parsing, .Type once resolved)
Left.Sym (Left is interface, Right is method name)
Left.Sym (Left is non-interface, Right is method name)
Left.Sym (Left is of pointer to struct type)
Left.Sym (Left is of struct type)
Left.Sym (before rewrite to one of the preceding)
Left:Right (key:value in struct/array/map literal, or slice index pair)
LegacyHeapAllocated instructs the heapz parsers to use the allocated memory stats instead of the default in-use memory.
Legal Go: We never use the repeated embedded field (S).
Legal parse but illegal execution: non-function should have no arguments.
Legitimate field or method lookup failed, try to explain the error
Len computes the number of elements in ring r.
Len is part of sort.Interface.
Len is the number of elements in the collection.
Len returns an array type's length.
Len returns the length of array a.
Len returns the length of the buffer.
Len returns the length of z in bits.
Len returns the length, in bytes, of a valid security identifier sid.
Len returns the number of bytes of the unread portion of the buffer.
Len returns the number of bytes of the unread portion of the slice.
Len returns the number of bytes of the unread portion of the string.
Len returns the number of elements of list l.
Len returns the number of entries in Nodes.
Len returns the number of entries in f.
Len returns the number of methods in s.
Len returns the number variables of tuple t.
Len returns v's length.
Len() returns the number of scope elements.
Length arrays used to define Huffman codes.
Length cannot be bigger than the decoder can handle.
Length is one more than upper bound.
Length is the length of the frame, not including the 9 byte header.
Length length returns the length of the item, with an error if it has no defined length.
Length must match arg.Max in x_cgo_callers in runtime/cgo/gcc_traceback.c.
Length of a master secret in TLS 1.1.
Length of a random nonce in TLS 1.1.
Length of copy or insertion
Length of encoding in bytes.
Length of the fragment
Length of time for dynamic profiles
Length of verify_data in a Finished message.
Length then ones-complement of length.
Lengths that would overflow an int should be rejected.
Lengths up to the maximum size of an int should work.
Lepcha is the set of Unicode characters in script Lepcha.
Less is part of sort.Interface.
Less rare case: We also get here in the legitimate case of Issue 7569, where the writer is still writing (or stalled), but the server has already replied.
Less reports whether i is a better destination address for this host than j.
Less reports whether the element with index i should sort before the element with index j.
Less returns the opposite of the embedded implementation's Less method.
Let Gs blocked on the transition lock go while we flush caches.
Let append do the heavy lifting, but keep the length the same.
Let be a bit more conservative, and set border to 5.
Let it print what it needs to print.
Let k be the index of that bit.
Let libc deal with it.
Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and let H be the next hLen octets.
Let nodes be collected now.
Let salt be the last sLen octets of DB.
Let some periodic GCs happen.
Let the GC controller know so it can encourage more workers to run.
Let the Stmt convert its own arguments.
Let the flag tell us what to do.
Let the garbage collector run concurrently.
Let the goroutine get into the select.
Let the goroutine keep running for now.
Let the user fix those first.
Let them opt-in themselves via http2.ConfigureTransport so we don't surprise them by modifying their tls.Config.
Let user (gs) shoot himself in the foot.
Let's just parse only dir1/T0 and dir2/T2
Lets start two special goroutines locked to an OS thread, that both starts and cancels IO.
Lets test some points for equality to pivot
Letter/L is the set of Unicode letters, category L.
Letters and digits are not separators
Letting them call simplify1 makes sure the expressions they generate are simple.
Level -1 (DefaultCompression) uses the default compression level.
Level -2 (HuffmanOnly) will use Huffman compression only, giving a very fast compression for all types of input, but sacrificing considerable compression efficiency.
Level 2 not synchronized
Level triggering means we have to keep track of a few things ourselves.
Levels 4-9 use increasingly more lazy matching and increasingly stringent conditions for "good enough".
Levels greater than maxEncodedLevel are replaced with maxEncodedLevel.
Lgamma returns the natural logarithm and sign (-1 or +1) of Gamma(x).
Libcall, i.e. runtime syscall on windows.
Libopcodes always prefers MOVNTSS regardless of prefix order.
Libopcodes omits the suffix if the width of the operation can be inferred from a register arguments.
Libopcodes rejects F2 90 as NOP.
Libpthread ignores the return value here, and so can we: as it says a few lines up, spurious wakeups are allowed.
Life stores the state of a round of Conway's Game of Life.
Like BenchmarkFormat, but easier, because the time zone lookup cache is optimized for the present.
Like Copy, but the arg has not been specified yet.
Like ET1 but with a different name for a field
Like ET1 but with a different type for a field
Like F but with the unexported interface method f defined via an embedded interface t.
Like G but now the embedded interface is declared at package level.
Like Unix, it uses the lowest available descriptor.
Like above, but implement in terms of sync/atomic's uintptr operations.
Like an RT0 but with fields we'll ignore on the decode side.
Like ast.CommentGroup's Text method but preserves leading blank lines, so that line numbers line up.
Like in tests, benchmark logs are accumulated during execution and dumped to standard error when done.
Like in the GNU MPFR library (http://www.mpfr.org/), operands can be of mixed precision.
Like karatsubaAdd, but does subtract.
Like new, the first argument is a type, not a value.
Like ordinary capture, but named.
Like powser1.go but uses channels of interfaces.
Like syntax_error, but reports error at given line rather than current lexer line.
Like test1 but avoid array index, which does not move to end of function on ARM.
Like test6, but swapped defer order.
Like the Go select statement, it blocks until at least one of the cases can proceed, makes a uniform pseudo-random choice, and then executes that case.
Like the other syscall_*.go files it is compiled as Go code but also used as input to mksyscall which parses the //sys lines and generates system call stubs.
Like walkclosure above.
Like writebarrierptr, but the store has already been applied.
Likely direction for branches.
Likely is the branch prediction hint: +1 for likely, -1 for unlikely, 0 for no opinion.
Likely not a Go source file at all.
Likely to be racing with the GC as it sees a _Gwaiting and does the stack scan.
Likewise for Fortran, except there are many Fortran compilers.
Likewise for the -msan flag.
Likewise without 100-continue:
Likewise, all other request methods are assumed to have no body if neither Transfer-Encoding chunked nor a Content-Length are set.
Likewise, any transition must invalidate the transition condition before releasing the lock.
Likewise, both time types are treated the same.
Likewise, if the handler didn't set a Content-Type, we sniff that from the initial chunk of output.
Likewise, release the transition lock.
Limbu is the set of Unicode characters in script Limbu.
Limit the number of concurrent cgo-using goroutines, because each will block an entire operating system thread.
LimitReader returns a Reader that reads from r but stops with EOF after n bytes.
Limited by gomaxprocs, number of actual CPUs, and MaxGcproc.
Line comments are not part of any published CSS standard but are supported by the 4 major browsers.
Line corresponds to Profile.Line
Line is the line number of the error in the template source or 0.
Line is the source code line number corresponding to these instructions.
Line number for block's control operation
Line number in source file.
Line numbers are just noise.
Line of stars present.
Line reports the source line number of the token.
Line returns a string describing the given line number.
Line too long - consume and ignore.
Line where the error occurred
LineCount returns the number of lines in file f.
LineEntries occur in order of increasing PC and each LineEntry gives metadata for the instructions from that LineEntry's PC to just before the next LineEntry's PC.
LineReader returns a new reader for the line table of compilation unit cu, which must be an Entry with tag TagCompileUnit.
LineString returns a string giving the file and line number corresponding to lineno, for use in error messages.
LineToPC looks up the first program counter on the given line in the named file.
LineToPC returns the program counter for the given line number, considering only program counters before maxpc.
Linear probing hash table of bitmaps seen so far.
Linear scan is fast enough for a small list.
Linear search is fine.
Linear_A is the set of Unicode characters in script Linear_A.
Linear_B is the set of Unicode characters in script Linear_B.
Lines after the first are considered continuations if they begin with a space or tab character.
Lines are numbered beginning at 1.
Lines before first/after last sample.
Lines beginning with a capital letter are test names printed during RE2's test suite and are echoed into t but otherwise ignored.
Lines beginning with a dot are escaped with an additional dot to avoid looking like the end of the sequence.
Lines beginning with the Comment character are ignored.
Link addresses of captured variables to closure.
Link connects ring r with ring s such that r.Next() becomes s and returns the original value for r.Next().
Link creates newname as a hard link to the oldname file.
Link holds the context for writing object code from a compiler to be linker input or for reading that input into the linker.
Link number out of range
Link the Go files into a single .o, and also link in -lgolibbegin.
Link to another section
Link to name of original method function.
Link up variable uses to variable definitions
Link values to array/slice
Link values to struct.
Link, typically invoked as ``go tool link,'' reads the Go archive or object for a package main, along with its dependencies, and combines them into an executable binary.
LinkArch is the definition of a single architecture.
LinkError records an error during a link or symlink or rename system call and the paths that caused it.
Linked list structure is based on BSD's "tail queue" data structure.
Linker will discard on other systems
Linker would incorrectly parse export data and think definitions are inconsistent.
Linking Directives In either linking mode, package-specific directives must be passed through to cmd/link.
Linux getrandom system call number.
Linux glibc and Linux kernel define different and conflicting definitions for struct sigaction, struct timespec, etc.
Linux introduced getdents64 syscall for N64 ABI only in 3.10 (May 21 2013, rev dec33abaafc89bcbd78f85fad0513170415a26d5), to support older kernels, we have to use getdents for mips64.
Linux kernel always set Whence to 0
Linux on s390x uses the old mmap interface, which requires arguments to be passed in a struct.
Linux stores the backlog in a uint16.
Linux's MADV_DONTNEED is like BSD's MADV_FREE.
List of in-use variables, sorted by end, so that the ones that will last the longest are the earliest ones in the array.
List of parked waiters.
List of symbol references for the file being read.
List represents a doubly linked list.
List returns source code of syscall return parameters.
ListNode holds a sequence of nodes.
Listen announces on the local network address laddr.
Listen creates a TLS listener accepting connections on the given network address using net.Listen.
Listen on TCP port 2000 on all interfaces.
Listen wraps syscall.Listen.
ListenAndServe always returns a non-nil error.
ListenAndServe listens on the TCP network address addr and then calls Serve with handler to handle requests on incoming connections.
ListenAndServe listens on the TCP network address srv.Addr and then calls Serve to handle requests on incoming connections.
ListenAndServe starts an HTTP server with a given address and handler.
ListenAndServeTLS acts identically to ListenAndServe, except that it expects HTTPS connections.
ListenAndServeTLS always returns a non-nil error.
ListenAndServeTLS listens on the TCP network address srv.Addr and then calls Serve to handle requests on incoming TLS connections.
ListenIP listens for incoming IP packets addressed to the local address laddr.
ListenMulticastUDP is just for convenience of simple, small applications.
ListenMulticastUDP listens for incoming multicast UDP packets addressed to the group address gaddr on the interface ifi.
ListenPacket announces on the local network address laddr.
ListenTCP announces on the TCP address laddr and returns a TCP listener.
ListenUDP listens for incoming UDP packets addressed to the local address laddr.
ListenUnix announces on the Unix domain socket laddr and returns a Unix listener.
ListenUnixgram listens for incoming Unix datagram packets addressed to the local address laddr.
Lisu is the set of Unicode characters in script Lisu.
Literal IP addresses and absolute FQDNs are not permitted as SNI values.
Literal codes are accumulated from the start of the buffer.
Literal does not escape, but element does.
Literal method needs to scan the pattern.
LiteralPrefix returns a literal string that must begin any match of the regular expression re.
Literals that happen to resolve to named constants may be used as label names (see issue 13684).
LittleEndian is the little-endian implementation of ByteOrder.
Live registers can be sources.
Live variable at start of function.
Liveness analysis used to have the VARDEFs in the wrong place, causing a temporary to appear live on entry.
Liveness information flows backward, so starting at the end increases the probability that we will stabilize quickly.
Ll is the set of Unicode characters in category Ll.
Lm is the set of Unicode characters in category Lm.
Lo is inclusive, hi exclusive (valid registers are lo through hi-1).
Lo is the set of Unicode characters in category Lo.
Load base pointer in n3.
Load code is added at the current pc.
Load control value into reg.
Load into pbits and never read from ptrmask again.
Load loads DLL file d.Name into memory.
Load packages that were asked about for coverage.
Load returns the value set by the most recent Store.
Load section header string table.
Load static desired register info at the end of the block.
Load the previous partially decoded coefficients, if applicable.
Load v from its spill location.
Load value from interface, but only if the result will be usefully addressable.
Load will not try to load DLL, if it is already loaded into memory.
Load word, test byte, avoiding partial register write from load byte.
LoadDLL loads the named DLL file into memory.
LoadInt32 atomically loads *addr.
LoadInt64 atomically loads *addr.
LoadLibraryEx is not available on old Windows, though, and the LOAD_LIBRARY_SEARCH_* flags are not available on some versions of Windows without a security patch.
LoadLocation returns the Location with the given name.
LoadPointer atomically loads *addr.
LoadUint32 atomically loads *addr.
LoadUint64 atomically loads *addr.
LoadUintptr atomically loads *addr.
LoadX509KeyPair reads and parses a public/private key pair from a pair of files.
Loadable program segment
Local allocator stats, flushed during GC.
Local import turned into absolute path.
Local means make the symbol local even when compiling Go code to reference Go symbols in other shared libraries, as in this mode symbols are global by default.
Local per-P Pool appendix.
Local represents the system's local time zone.
Local returns t with the location set to local time.
Local variables in the bodies need their type.
LocalAddr is the local address to use when dialing an address.
LocalAddr returns the local network address.
LocalAddrContextKey is a context key.
LocalhostKey is the private key for localhostCert.
Locals bitmap information, scan just the pointers in locals.
Locals size information, dump just the locals.
Locate the file from which to read export data.
Location as a byte offset in the source file.
Location corresponds to Profile.Location
Location expression operators.
Location of callback arguments depends on stack frame layout and size of stack frame of cgocallback_gofunc.
Location of program header itself.
Location returns the URL of the response's "Location" header, if present.
Location returns the time zone information associated with t.
Location to be relocated.
Lock cgoCallers so that a signal handler won't change it, copy the array, reset it, unlock it.
Lock channels to prevent concurrent send/receive.
Lock extra list, take head, unlock popped list.
Lock g to m to ensure we stay on the same stack if we do a cgo callback.
Lock half the goroutines in their own operating system thread to exercise more scheduler possibilities.
Lock in the legacy behavior that an empty string means port 0.
Lock is free, acquire it.
Lock locks rw for writing.
Lock synchronizing creation of new file descriptors with fork.
Lock the main goroutine onto this, the main OS thread, during initialization.
Lock the specials to prevent a special from being removed from the list while we're traversing it.
Lock-free stack node.
Log formats its arguments using default formatting, analogous to Println(), and records the text in the error log.
Log formats its arguments using default formatting, analogous to Println, and records the text in the error log.
Log is non-variadic user-define Println-like function.
Log logs a message from the compiler.
Log of traces evicted from hash.
Log returns the natural logarithm of x.
Log returns true if logging is not a no-op some logging calls account for more than a few heap allocations.
Log10 returns the decimal logarithm of x.
Log1p returns the natural logarithm of 1 plus its argument x.
Log2 returns the binary logarithm of x.
Logb returns the binary exponent of x.
Logf formats its arguments according to the format, analogous to Printf(), and records the text in the error log.
Logf formats its arguments according to the format, analogous to Printf, and records the text in the error log.
Logf is used by the test so we must declare it.
Logf logs a message from the compiler.
Logging in the style of the former compiler -- and omit line 1, which is usually in generated code.
Logic based on Content-Length
Logic based on Transfer-Encoding
Logic based on response type or status
Logical operation on named boolean type returns the same type, supporting an implicit conversion to an interface type.
Logical screen width and height.
Logical_Order_Exception is the set of Unicode characters with property Logical_Order_Exception.
Logs are accumulated during execution and dumped to standard error when done.
Long length form may not be used for lengths that fit in short form.
Long symbol names are rare but exist.
Long tag number form may not be used for tags that fit in short form.
Long, but not too long: a common limit is 255.
Longer codes should have been associated with a link table above.
Longest makes future searches prefer the leftmost-longest match.
Look at instruction to see if it is a divide.
Look at the leaves and assign them a bit count and an encoding as specified in RFC 1951 3.2.2
Look for +build comments to accept or reject the file.
Look for DWARF4 .debug_types sections.
Look for Perl character class symbols (extension).
Look for a back-quoted name, but avoid the strings package.
Look for a fixed point by assuming c1 as the output context.
Look for a response giving the return value.
Look for an IdentifierName and see if it is a keyword that can precede a regular expression.
Look for anything we need for the inline body
Look for anything we want to punt on.
Look for checkout along path to src.
Look for instances of
Look for local zone with the given offset.
Look for match at current position.
Look for match skipping i+1 bytes.
Look for missing semicolons inside branches, and maybe add parentheses to make it clear which interpretation you intend.
Look for obvious aliasing: a variable being assigned during the all list and appearing in n.
Look for octal, hex prefix.
Look for parser errors.
Look for shiftable tokens.
Look for symlinks before reporting error.
Look for the attribute that indicates the object uses the hard-float ABI (a file-level attribute with tag Tag_VFP_arch and value 1).
Look for the start of the value.
Look for tokens that we accept or reduce.
Look for typos in the named template.
Look for url to the left.
Look for variables and blocks that satisfy the following
Look for zone offset for t, so we can adjust to UTC.
Look in known types for the same string representation.
Look in symbol table for telltale rt0 symbol.
Look in the buffer for a new value.
Look in the temporary space for results of test-specific actions.
Look up pointer v in heap.
Look up symbols in the Linux vDSO.
Look up the name in the innermost enclosing scope.
Look up the size class for the object and add it to the MCache free list.
Look up the span at the given address.
Look up the type in the top level declarations.
LookPath also uses PATHEXT environment variable to match a suitable candidate.
LookPath error, if any.
LookPath searches for an executable binary named file in the directories named by the PATH environment variable.
LookPath searches for an executable binary named file in the directories named by the path environment variable.
Lookahead can be called during grammar actions to read (but not consume) the value of the current lookahead token, as returned by yylex.Lex.
Looking for 66 mandatory prefix.
Looking for either of: Method(int) reflect.Method MethodByName(string) (reflect.Method, bool)
Looks like FreeBSD 10 kernel has changed the semantics of timedwait on userspace mutex to make broken stuff look broken.
Looks like a comment +line.
Looks like a junk value in a pointer slot.
Looks like leap-year (but isn't) tests
Lookup by hashing call stack into a linked-list hash table.
Lookup looks up a user by username.
Lookup maps an identifier to its keyword token or IDENT (if not a keyword).
Lookup predefined types
Lookup returns an unsorted list of at most n indices where the byte string s occurs in the indexed data.
Lookup returns indices that may belong to overlapping matches.
Lookup returns the Flag structure of the named command-line flag, returning nil if none exists.
Lookup returns the Flag structure of the named flag, returning nil if none exists.
Lookup returns the method with matching package and name, or nil if not found.
Lookup returns the object with the given name if it is found in scope s, otherwise it returns nil.
Lookup returns the profile with the given name, or nil if no such profile exists.
Lookup returns the template with the given name that is associated with t, or nil if there is no such template.
Lookup returns the template with the given name that is associated with t.
Lookup returns the value associated with key in the tag string.
Lookup tables for decryption.
Lookup tables for encryption.
Lookup time is O(log(N)*len(s) + len(result)) where N is the size of the indexed data.
LookupAccount retrieves the name of the account for this sid and the name of the first domain on which this sid is found.
LookupAddr performs a reverse lookup for the given address, returning a list of names mapping to that address.
LookupCNAME returns the canonical DNS host for the given name.
LookupEnv retrieves the value of the environment variable named by the key.
LookupFunc returns the text, data, or bss symbol with the given name, or nil if no such symbol is found.
LookupGroup looks up a group by name.
LookupGroupId looks up a group by groupid.
LookupHost looks up the given host using the local resolver.
LookupIP looks up host using the local resolver.
LookupIPAltResolverKey is a context.Context Value key used by tests to specify an alternate resolver func.
LookupId looks up a user by userid.
LookupMX returns the DNS MX records for the given domain name sorted by preference.
LookupN looks up the symbol starting with prefix and ending with the decimal n.
LookupNS returns the DNS NS records for the given domain name.
LookupParent follows the parent chain of scopes starting with s until it finds a scope where Lookup(name) returns a non-nil object, and then returns that scope and object.
LookupPort looks up the port for the given network and service.
LookupSID retrieves a security identifier sid for the account and the name of the domain on which the account was found.
LookupSRV constructs the DNS name to look up following RFC 2782.
LookupSRV tries to resolve an SRV query of the given service, protocol, and domain name.
LookupSym returns the text, data, or bss symbol with the given name, or nil if no such symbol is found.
LookupTXT returns the DNS TXT records for the given domain name.
Loop A is a child of loop B if A is directly nested within B (based on the reducible-loops detection above)
Loop alignment constants: want to align loop entry to LoopAlign-byte boundary, and willing to insert at most MaxLoopPad bytes of NOP to do so.
Loop because we are racing against SetCPUProfileRate(0).
Loop over all but the first block.
Loop over each source pixel.
Loop over fields in structs, ignoring argument names.
Loop over the code stream, converting codes into decompressed bytes.
Loop over the fields of the wire type.
Loop over values received from 'in'.
Loop through all basic blocks maximally growing the list of contained instructions until a label is reached.
Loop through all instructions identifying branch targets and fall-throughs and allocate basic blocks.
Loop through the entries in the sparse map.
Loop until something is printed.
Loop until the P dies and disassociates this worker (the P may later be reused, in which case it will get a new worker) or we failed to associate.
Loop until we have a token.
Loop while a is smaller than 1e100.
Loop, parsing hex numbers followed by colon.
Looping over Y first and X second is more likely to result in better memory access patterns than X first and Y second.
Looping over indices is fine.
Looping over values is not.
Loops aren't that common, so rather than force regalloc to keep a map or slice for its data, just put it here.
Lots of phis of the form phi(int32,int64) of type int32 happen here.
Low index 0 is a special case in ggen.c so test both 0 and 1.
Low, middle, and high values can take different paths through the generated code.
Lower copy(a, b) to a memmove call or a runtime call.
Lower is the set of Unicode lower case letters.
Lower leafCounts are the same of the previous node.
Lower precision value
Lower values give a more accurate assist ratio and make it more likely that assists will successfully steal background credit.
Lower values smooth out transient effects but take longer to respond to phase changes.
Lower-case field names from different packages are always different.
Lower-case for rationals.
Lower-case method names from different packages are always different.
Lower-cased characters are more common in entities, so we check for them first.
Lowercase lower than uppercase.
Lstat makes no attempt to follow the link.
Lstat returns a FileInfo describing the named file.
Lstat returns the FileInfo structure describing the named file.
Lt is the set of Unicode characters in category Lt.
Lu is the set of Unicode characters in category Lu.
Luckily the point of this test is to ensure that the results are not underreported, so we can simply verify the lower bound.
Lycian is the set of Unicode characters in script Lycian.
Lydian is the set of Unicode characters in script Lydian.
M - worker thread, or machine.
M Corner cases: association with (presumed) predeclared types Always under the package functions list.
M is a type passed to a TestMain function to run the actual tests.
M maps each object to its corresponding node
M must have an associated P to execute Go code, however it can be blocked or in a syscall w/o an associated P.
M wakeup policy is deliberately somewhat conservative, so check if we need to wakeup another P here.
M' is an octet string of length 8 + hLen + sLen with eight initial zero octets.
MARKER(uid) at comment start
MARKER(uid) at text start
MARKER(uid), MARKER at least 2 chars, uid at least 1 char
MCR differs from MRC by the way fields of the word are encoded.
MCache: a per-thread (in Go, per-P) cache for small objects.
MCentral: a shared free list for a given size class.
MCentral_FreeSpan updates sweepgen
MD5 checksum of files, leave as nil if not checked
MD5 was designed so that x86 processors can just iterate over the block data directly as uint32s, and we generate less code and run 1.3x faster if we take advantage of that.
MHeap: the malloc heap, managed at page (4096-byte) granularity.
MIME header keys are assumed to be ASCII only.
MIME headers are ASCII only, so no Unicode issues.
MIPS R3000 Big-Endian only.
MIPS R3000 Little-Endian.
MIPS R4000 Big-Endian
MIPS does not have CMP instruction
MOV a,m_divmod(REGTMP)
MOV into memory is a candidate for turning REP into XRELEASE.
MOV n1 into register first
MOVB  R, R' (compiled to mov)  MOVBS above can be a MOVBS, MOVBU, MOVHS or MOVHU.
MOVQ 0(TLS), BX becomes MOVQ TLS, BX MOVQ 0(BX)(TLS*1), BX
MOVQ 0(TLS), CX // load g into CX
MOVQ BP, -16(SP) LEAQ -16(SP), BP
MOVQ TLS, AX MOVQ 0(AX)(TLS*1), CX // load g into CX
MOVQ TLS, r MOVQ (r)(TLS*1), r
MOVQ g_panic(CX), BX TESTQ BX, BX JEQ end LEAQ (autoffset+8)(SP), DI CMPQ panic_argp(BX), DI JNE end MOVQ SP, panic_argp(BX) end: NOP
MOVQconvert converts between pointers and integers.
MOVUPS X0, off(base) is a few bytes shorter than MOV 0, off(base)
MOVW foo(SB), R is actually MOV addr, REGTEMP MOVW REGTEMP, R where addr is the address of the DWORD containing the address of foo.
MOVs that become MOVK/MOVN/MOVZ/ADD/SUB/OR
MSB means Most Significant Bits first, as used in the TIFF and PDF file formats.
MSDN docs on CERT_CHAIN_CONTEXT:
MSan uses runtime/msan.
MSpan: a run of pages managed by the MHeap.
MStats: allocation statistics.
MUSICAL SYMBOL G CLEF
Mac OS X's gcc will generate scattered relocation 2/1 for this function on Darwin/386, and 8l couldn't handle it.
Mach IPC, to get at semaphores Definitions are in /usr/include/mach on a Mac.
Mach-O __nl_symbol_ptr
Mach-O big-endian 32-bit
Mach-O big-endian 64-bit
Mach-O file writing http://developer.apple.com/mac/library/DOCUMENTATION/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html
Mach-O header data structures http://developer.apple.com/mac/library/documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html
Mach-O little-endian 32-bit
Mach-O little-endian 64-bit
Mach-O relocations are a royal pain to lay out.
Machine architecture.
Machine dependent mcontext initialisation for LWP.
Machine is found in Header.Machine.
Machine is not on the network
Made it through the table without finding anything to log.
Magic is the magic prefix that identifies the format's encoding.
Magic number and other info
Magic number for the elf trampoline, chosen wisely to be an immediate value.
Magic symbol on ppc64.
Magic sysctl: "setting" 0.3 to a string name lets you read back the array of integers form.
Magic table name and column, known by fakedb_test.go.
Magic32 and Magic64 differ only in the bottom bit.
Mahajani is the set of Unicode characters in script Mahajani.
Mail issues a MAIL command to the server using the provided email address.
Main call to ssa package to compile function
Main loop: load one byte, write another.
MainStart is meant for use by tests generated by 'go test'.
Maintain BP around call, since duffcopy/duffzero can't do it (the call jumps into the middle of the function).
Maintain information about code generation mode.
Maintain line number.
Make .rela and .rela.plt contiguous, the ELF ABI requires this and Solaris actually cares.
Make DB.Close idempotent
Make a copy of d0 so that caller can keep writing and summing.
Make a copy of tf for tf to call.
Make a copy of the AST because ast.SortImports is destructive.
Make a copy of the block schedule so we can generate a new one in place.
Make a copy of the buffer.
Make a copy of the method and adjust its receiver type.
Make a copy or inline to reclaim storage.
Make a copy to avoid invalidating typeCache.
Make a copy to avoid polluting argument or default.
Make a directory to work in.
Make a file f to send to our parent process on uc.
Make a function of the right type.
Make a local copy of testGIF.
Make a lot of goroutines, threaded together, and tear them down cleanly.
Make a map to hold the test map that the CGI returns.
Make a new frame that is one word bigger so we can store the receiver.
Make a pair of power series identical to a given power series
Make a rational from two ints and from one int
Make a shallow copy of retvars.
Make a string by stopping at the first NUL
Make a string of all the runes.
Make and call a swap function for float64s.
Make and call a swap function for ints.
Make any future calls to Write return errClosed.
Make array mapping sequence numbers to codes.
Make build directory.
Make cgo call and callback with different amount of stack stack available.
Make clear that this is a problem on loop re-entry since developers tend to overlook that branch when debugging templates.
Make copy because we overwrite p below.
Make dictionary, if given.
Make direct reference to the static data.
Make directory with 1 file and remove.
Make directory with file and subdirectory and remove.
Make directory with file and subdirectory and trigger error.
Make enough room for padding.
Make gc understand the annotations.
Make initial coarse partitions by using a subset of the conditions above.
Make it look like a call to the signal func.
Make it something slightly more comprehensible.
Make map from block id to order index (for intersect call)
Make map from reg names to reg integers.
Make most negative integer: 0x8000...
Make new buffer with half of b's pointers.
Make periodic GC run continuously.
Make racy client program work: if panicking on another goroutine at the same time as main returns, let the other goroutine finish printing the panic trace.
Make re3 the more complex of the two.
Make ret a uintptr so that writing to it in the function literal does not trigger a write barrier.
Make returns a Token with the given rune (ScanToken) and text representation.
Make room for to save a base pointer.
Make room to read more into the buffer.
Make rounding decision: The result mantissa is truncated ("rounded down") by default.
Make sure "hello world" does not link in all the fmt.scanf routines.
Make sure 'not used' message is placed correctly.
Make sure -S prints assembly code.
Make sure 1 prints as 1.0
Make sure GC works and the stack trace is correct.
Make sure MarshalXML closed all its tags.
Make sure PT_LOAD is aligned properly and that there is no gap, correct ELF loaders will do this implicitly, but buggy ELF loaders like the one in some versions of QEMU and UPX won't.
Make sure SWIG is new enough.
Make sure WriteHeapDump doesn't fail with multiple queued finalizers.
Make sure a narrow store can't shadow a wider one.
Make sure all the request come back, one way or another.
Make sure an empty slice on the stack doesn't pin the next object in memory.
Make sure an empty string on the stack doesn't pin the next object in memory.
Make sure any flag arg of v is in the flags register.
Make sure any unsupported verbs are found before the calls to fmtFloat to not generate an incorrect error string.
Make sure body is fully consumed, even if user does not call body.Close
Make sure crypto/rand does not have the symbol.
Make sure different seed values generate different hashes.
Make sure directoryOffset points to somewhere in our file.
Make sure duplicated fds don't leak to the child.
Make sure empty body is not interpreted as no inlineable body (see also parser.fnbody) (not doing so can cause significant performance degradation due to unnecessary calls to empty functions).
Make sure exact powers of two give an exact answer.
Make sure function pointer is in R12 as well when compiling Go into PIC.
Make sure goroutines exit
Make sure it decoded correctly.
Make sure it gets added to the tail of the destination queue so we make progress on other moves first.
Make sure it is full runes.
Make sure it passes with the expensive checks.
Make sure it uses a valid base pointer for the offset.
Make sure it's a pointer.
Make sure it's not all zeros.
Make sure jar content matches our expectations.
Make sure matches outside the slice never trigger.
Make sure math/rand does have the symbol.
Make sure maxIdle doesn't exceed maxOpen
Make sure nodes have a unique consistent id.
Make sure panic during callback unwinds properly.
Make sure reflect doesn't mark the field as exported.
Make sure that "" in arrays hash correctly.
Make sure that all images are for the same MH_ type.
Make sure that doesn't confuse recover.
Make sure that each 7th of the set matches the expected distribution.
Make sure that each half of the set matches the expected distribution.
Make sure that escaping corner cases are not broken by nesting.
Make sure that go test runs Example_Y before Example_B, preserving source order.
Make sure that go test runs Example_Z before Example_A, preserving source order.
Make sure that nextfd is beyond any currently open files so that we can't run the risk of overwriting any of them.
Make sure that other literals don't crash the compiler.
Make sure that primes is pairwise unequal.
Make sure that skipping the value still defines the types by using the encoder/decoder pair to send a value afterwards.
Make sure that the compiler rejects access attempts.
Make sure that the entire set matches the expected distribution.
Make sure that we choose WriterTo when both are implemented.
Make sure that works.
Make sure the Mach-O type matches that of the first image.
Make sure the architecture for this image is not duplicate.
Make sure the compiler knows that DUFFCOPY clobbers X0
Make sure the overflow pointer is the last memory in the struct, because the runtime assumes it can use size-ptrSize as the offset of the overflow pointer.
Make sure the per-P gcWork caches are empty.
Make sure the query can be processed to completion with no errors.
Make sure the type is known to the other side.
Make sure there's a header terminator coming up, to prevent a DoS with an unbounded size Trailer.
Make sure they are all in one package.
Make sure they are canonical.
Make sure this is permitted, since I think we used to send it.
Make sure time stamps respect the ordering.
Make sure to check the error on Close.
Make sure to zero them on entry to the function.
Make sure top class is clean.
Make sure unsigned shift results get sign-extended correctly.
Make sure we are at the end.
Make sure we can execute the secondary.
Make sure we can properly read back the Set-Cookie headers we create for values containing spaces or commas:
Make sure we can read a huge token if a big enough buffer is provided.
Make sure we don't count the build time as part of the run time.
Make sure we don't get stuck with a misbehaving Reader.
Make sure we don't return slices that expose an unzeroed section of stack-allocated temp buf between len and cap.
Make sure we produce safe JSON output.
Make sure we re-use underlying TCP connection for gzipped responses too.
Make sure we report no lookahead when not parsing.
Make sure we spill with the size of the slot, not the size of x (which might be wider due to our dropping of narrowing conversions).
Make sure we truncate to smaller-width types after evaluating expressions.
Make sure we're not in the middle of a GC.
Make sure we're single-threaded through here, so multiple goroutines can share an encoder.
Make sure we're single-threaded through here.
Make temp names to use instead of the originals
Make the bounds really big, expect an error.
Make the bounds too big, just by one.
Make the connRequest channel.
Make the deferproc for this d return again, this time returning 1.
Make the entry block a self-loop
Make the environment more predictable.
Make the key type at most 128 bytes.
Make the new import the first Decl in the file.
Make the sender enqueue its item at the tail of the queue.
Make the struct type.
Make the timeout longer, once.
Make the types prettyprint.
Make the value odd since an even number this large certainly isn't prime.
Make this G preemptible and disassociate it as the worker for this P so findRunnableGCWorker doesn't try to schedule it.
Make type inferences available to f.
Make various sub-images of m.
Make wake-up period small enough for the sampling to be correct.
Make x a uintptr pointing to where a points.
MakeBool returns the Bool value for b.
MakeChan creates a new channel with the specified type and buffer size.
MakeFloat64 returns the Float value for x.
MakeFromBytes returns the Int value given the bytes of its little-endian binary representation.
MakeFromLiteral returns the corresponding integer, floating-point, imaginary, character, or string value for a Go literal string.
MakeFunc implementation.
MakeFunc returns a new function of the given Type that wraps the function fn.
MakeInt64 returns the Int value for x.
MakeMap creates a new map of the specified type.
MakeRO returns a copy of v with the read-only flag set.
MakeSlice creates a new zero-initialized slice value for the specified slice type, length, and capacity.
MakeString returns the String value for s.
MakeTable returns a Table constructed from the specified polynomial.
MakeTable will always return this value when asked to make a Castagnoli table so we can compare against it to find when the caller is using this polynomial.
MakeUint64 returns the Int value for x.
Makes 6g unable to use more than 11 registers.
Makes life easier for back ends.
Makes walk easier, because it can (after this runs) reorder at will within an expression.
Making it unsigned addresses the problem.
Making the build sensitive to changes in other state is straightforward: include the state in the build ID hash, and if it changes, so does the build ID, triggering a rebuild.
Making this change will affect the final state of r.
Malayalam is the set of Unicode characters in script Malayalam.
Malformed IPv6 but still accepted.
Malformed strings compare less than well-formed strings.
Malloc block sizes d are always even, so the first shift implements the factors of 2 in d and then the mul and second shift implement the odd factor that remains.
Malloc now allocates black objects, so number of unmarked reachable objects monotonically decreases.
Malloc small size classes.
Malloc still allocates white (non-marked) objects.
Malloc uses a FixAlloc wrapped around sysAlloc to manages its MCache and MSpan objects.
Mallocs are accounted in recent stats.
Manage a single run of the testgo binary.
Manage the -test.timeout here, outside of the test.
Mandaic is the set of Unicode characters in script Mandaic.
Mangle the template name with the input context to produce a reliable identifier.
Manichaean is the set of Unicode characters in script Manichaean.
MantExp breaks x into its mantissa and exponent components and returns the exponent.
Manufacture a GIF with a 2 color palette.
Manufacture a GIF with no palette, so any pixel at all will be invalid.
Many Power ISA arithmetic and logical instructions come in four standard variants.
Many functions in package syscall return a count of -1 instead of 0.
Many of these patents are general enough such that they are unavoidable regardless of implementation design.
Many servers expect a Content-Length for these methods
Many servers will not verify addresses for security reasons.
Many systems use /usr/share/zoneinfo, Solaris 2 has /usr/share/lib/zoneinfo, IRIX 6 has /usr/lib/locale/TZ.
Map 16 pages of data with a 4-page hole in the middle.
Map an ast type to a Type.
Map entries for the middle of a span are only valid for allocated spans.
Map from dwarf text names to aliases we use in package "C".
Map from name to defined templates.
Map from types to incomplete pointers to those types.
Map import path back to directory corresponding to parent of internal.
Map import path back to directory corresponding to parent of vendor.
Map is a string-to-Var map variable that satisfies the Var interface.
Map key must either have string kind or be an encoding.TextUnmarshaler.
Map keys can be encoding.TextUnmarshalers
Map links such structs back to their map type.
Map of constructors for each RR wire type.
Map of instruction names to enumeration.
Map of register names to enumeration.
Map predeclared Go types to Type.
Map returns a copy of the byte slice s with all its characters modified according to the mapping function.
Map returns a copy of the string s with all its characters modified according to the mapping function.
Map spans array, PageSize at a time.
Map the requested memory.
Map values are deeply equal if they are the same map object or if they have the same length and their corresponding keys (matched using Go equality) map to deeply equal values.
Map values encode as JSON objects.
Map: An initial allocation is made according to the size but the resulting map has length 0.
Map: Key, Elem Ptr: Elem Slice: Elem Struct: Field, FieldByIndex, FieldByName, FieldByNameFunc, NumField Bits returns the size of the type in bits.
MapIndex returns the value associated with key in the map v.
MapKeys returns a slice containing all the keys present in the map, in unspecified order.
MapType     23 Finally, each message created by a call to Encode is preceded by an encoded unsigned integer count of the number of bytes remaining in the message.
MapType contains Type fields specific to maps.
MapType returns t's extra map-specific fields.
Mapping corresponds to Profile.Mapping
Maps are encoded as a length followed by key:value pairs.
Maps are sent as an unsigned count followed by that many key, element pairs.
Maps are treated specially to avoid endless recursion -- maps contain an internal data type not expressible in Go source code.
Maps aren't actually copied on assignment.
Maps have three associated internal structs (see struct MapType).
Mark all input variables (ivar) as used, because that's what the liveness bitmaps say.
Mark all methods that could satisfy a discovered interface as reachable.
Mark all positions in locs used by interfering values.
Mark all symbols defined in this library as reachable when building a shared library.
Mark all the coverage packages for rebuilding with coverage.
Mark as closed and acquire a reference.
Mark as explored and queue any children we haven't seen yet.
Mark control value as live
Mark defer as started, but keep on list, so that traceback can find and update the defer's argument frame if stack growth or a garbage collection happens before reflectcall starts executing d.fn.
Mark everything reachable from the object so it's retained for the finalizer.
Mark everything that can be reached from the object (but *not* the object itself or we'll never collect it).
Mark gp ready to run.
Mark invalid lock prefixes.
Mark n's symbol as exported
Mark string(byteSlice) arguments to reuse byteSlice backing buffer during conversion.
Mark successors as reachable
Mark termination only needs to re-scan the changed part, so for deep stacks this can significantly reduce GC pause time compared to the alternative of re-scanning whole stacks.
Mark termination re-scans only as far as the first frame that hasn't hit a stack barrier and then removes and un-hit stack barriers.
Mark that the process is running.
Mark the PAUTO's unused.
Mark the finalizer itself, since the special isn't part of the GC'd heap.
Mark the second page as faulting.
Mark them uintptr so that the GC does not misinterpret memory when the arguments are not present.
Mark walkgen so that future visits return a large number so as not to affect the caller's min.
Mark/M is the set of Unicode mark characters, category M.
MarkComplete marks a package as complete.
Marker indicating the end of the codegen.
Marker type so esc, fmt, and sinit can recognize the LHS of an OKEY node in a struct literal.
Marks end of dynamic section
Marktemp returns the top of the temporary variable stack.
Marshal converts a point into the form specified in section 4.3.6 of ANSI X9.62.
Marshal direct, unmarshal to indirect.
Marshal encodes a 9P stat message corresponding to d into b
Marshal handles a pointer by marshalling the value it points at or, if the pointer is nil, by writing nothing.
Marshal handles all other data by writing one or more XML elements containing the data.
Marshal handles an array or slice by marshalling each of the elements.
Marshal handles an interface value by marshalling the value it contains or, if the interface value is nil, by writing nothing.
Marshal indirect, unmarshal to direct.
Marshal returns the ASN.1 encoding of val.
Marshal returns the JSON encoding of v.
Marshal returns the XML encoding of v.
Marshal traverses the value v recursively.
Marshal will return an error if asked to marshal a channel, function, or map.
MarshalBinary encodes the receiver into a binary form and returns the result.
MarshalBinary implements the encoding.BinaryMarshaler interface.
MarshalECPrivateKey marshals an EC private key into ASN.1, DER format.
MarshalIndent is like Marshal but applies Indent to format the output.
MarshalIndent works like Marshal, but each XML element begins on a new indented line that starts with prefix and is followed by one or more copies of indent according to the nesting depth.
MarshalJSON implements the json.Marshaler interface.
MarshalJSON returns *m as the JSON encoding of m.
MarshalPKCS1PrivateKey converts a private key to ASN.1 DER encoded form.
MarshalPKIXPublicKey serialises a public key to DER-encoded PKIX format.
MarshalText encodes the receiver into UTF-8-encoded text and returns the result.
MarshalText implements the encoding.TextMarshaler interface.
MarshalXML encodes the receiver as zero or more XML elements.
MarshalXMLAttr is used only for struct fields with the "attr" option in the field tag.
MarshalXMLAttr returns an XML attribute with the encoded value of the receiver.
Marshaler is the interface implemented by objects that can marshal themselves into valid XML elements.
Marshaler is the interface implemented by types that can marshal themselves into valid JSON.
MarshalerAttr is the interface implemented by objects that can marshal themselves into valid XML attributes.
Marshaling zero xml.Name uses the tag or field name.
Marshalling z calls DUFFCOPY.
Mask all SSE floating-point exceptions when running on the 64-bit kernel.
Mask for table indices.
Mask returns the result of masking the IP address ip with mask.
Mask to ignore case in ASCII.
Massage enhances the SVG output from DOT to provide better panning inside a web browser.
MasterSecret generated by client on a full handshake
Match SCP-like syntax and convert it to a URL.
Match as much as we can.
Match checks whether a textual regular expression matches a byte slice.
Match implementation restriction of other compilers.
Match on empty goes in inst.Out
Match reports whether magic matches b.
Match reports whether name matches the shell file name pattern.
Match reports whether the Regexp matches the byte slice b.
Match requires pattern to match all of name, not just a substring.
Match the hardware to pass the test.
Match with no position information.
MatchEmptyWidth reports whether the instruction matches an empty string between the runes before and after.
MatchFile considers the name of the file and may use ctxt.OpenFile to read some or all of the file's content.
MatchFile reports whether the file with the given name in the given directory matches the context and would be included in a Package created by ImportDir of that directory.
MatchReader checks whether a textual regular expression matches the text read by the RuneReader.
MatchReader reports whether the Regexp matches the text read by the RuneReader.
MatchReader, FindReaderIndex, FindReaderSubmatchIndex
MatchRune reports whether the instruction matches (and consumes) r.
MatchRunePos checks whether the instruction matches (and consumes) r.
MatchString checks whether a textual regular expression matches a string.
MatchString reports whether the Regexp matches the string s.
Matched the top entry: prune the whole location.
Matches all the punctuators from section 7.7 of the language spec that are open brackets not handled above.
Matches all the punctuators from section 7.7 of the language spec that precede expression starts.
Matches at least one rune in current range.
Matches runtime/typekind.go and reflect.Kind.
Matches the behavior of GNU and BSD tar utilities.
Matches the behavior of GNU, BSD, and STAR tar utilities.
Matching is imprecise (as reflect.Type can be used through a custom interface), so ReflectMethod may be set in some cases when the reflect package is not called.
Math arg out of domain of func
Math result not representable
Mathematical constants.
Mathematical crypto: dependencies on fmt (L4) and math/big.
Max is the largest finite value representable by the type.
Max is the maximum number of entries to store.
Max number of nodes to show
Max number of threads to run garbage collection.
Max returns the larger of x or y.
MaxAge takes precedence
MaxAge takes precedence over Expires.
MaxBase is the largest number base accepted for string conversions.
MaxBytesReader is similar to io.LimitReader but is intended for limiting the size of incoming request bodies.
MaxBytesReader prevents clients from accidentally or maliciously sending a large request and wasting server resources.
MaxCap walks the regexp to find the maximum capture index.
MaxConcurrentStreams optionally specifies the number of concurrent streams that each client may have open at a time.
MaxCount sets the maximum number of iterations.
MaxCountScale is a non-negative scale factor applied to the default maximum.
MaxEncodedLen returns the maximum length of an encoding of n source bytes.
MaxFlowProg is the maximum size program (counted in instructions) for which the flow code will build a graph.
MaxHandlers limits the number of http.Handler ServeHTTP goroutines which may run at a time over all connections.
MaxHeaderListSize is the http2 MAX_HEADER_LIST_SIZE.
MaxHeaderListSize is the http2 SETTINGS_MAX_HEADER_LIST_SIZE to send in the initial settings frame.
MaxIdleConns controls the maximum number of idle (keep-alive) connections across all hosts.
MaxIdleConnsPerHost, if non-zero, controls the maximum idle (keep-alive) connections to keep per-host.
MaxReadFrameSize optionally specifies the largest frame this server is willing to read.
MaxResponseHeaderBytes specifies a limit on how many response bytes are allowed in the server's response header.
MaxScanTokenSize is the maximum size used to buffer a token unless the user provides an explicit buffer with Scan.Buffer.
MaxStruct is the maximum number of fields a struct can have and still be SSAable.
MaxVarintLenN is the maximum length of a varint-encoded N-bit integer.
MaxVersion contains the maximum SSL/TLS version that is acceptable.
Maximum PC-relative displacement.
Maximum average load of a bucket that triggers growth.
Maximum extension length.
Maximum instruction size is 15 bytes.
Maximum key or value size to keep inline (instead of mallocing per element).
Maximum key/value size is 128 bytes, larger objects are stored with an indirection.
Maximum length token.
Maximum number of PCs in a single stack trace.
Maximum number of bytes in a standard tar name.
Maximum number of bytes to encode uint64 in base-128.
Maximum number of key/value pairs a bucket can hold.
Maximum number of ustar extension bytes.
Maximum page length for fixed-size list in MHeap.
Maximum shift amount that can be done in one pass without overflow.
Maximum shift that we can do in one pass without overflow.
Maximum size in bits for Mpints before signalling overflow and also mantissa precision for Mpflts.
Maximum size of an encoded length.
Maximum valid Unicode code point.
May be the empty string or zero if not known.
May cause issues when printing a panic.
May contain newlines.
May crash if the instrumentation is reckless.
May not belong in this package, but convenient for now.
May run during STW, so write barriers are not allowed.
Maybe a top-level declaration will come along later to define s.
Maybe include value to send.
Maybe jump time forward for playground.
Maybe make this lookupIPMerge and ditch the other one, making its callers call this instead with a context.Background().
Maybe rawurl is of the form scheme:path.
Maybe refactor recursive templates to not be recursive.
Maybe s is of the form t c u.
Maybe shrink the stack being used by gp.
Maybe the parser can be used instead of Fun.
Maybe they know something we don't.
Maybe we want to allow this at some point, but for now we disallow it to prevent errors like using NewValue1A instead of NewValue1I.
Mc is the set of Unicode characters in category Mc.
Me is the set of Unicode characters in category Me.
Meaning depends on CreatorVersion
Meanwhile GC transitively walks the heap marking reachable objects.
Measure the starting statistics
Measurement unit to use on reports
Media types are the values in Content-Type and Content-Disposition headers (RFC 2183).
Meetei_Mayek is the set of Unicode characters in script Meetei_Mayek.
MemProfile returns a profile of memory allocated and freed per allocation site.
MemProfile returns n, the number of records in the current memory profile.
MemProfileRate controls the fraction of memory allocations that are recorded and reported in the memory profile.
Member of section group.
Memory accesses in the packages are either uninteresting or will cause false positives.
Memory allocator, based on tcmalloc.
Memory returned by FixAlloc_Alloc is not zeroed.
Memory, stack pointer, and globals pointer
Memory-allocation routines on OS X.
Mende_Kikakui is the set of Unicode characters in script Mende_Kikakui.
Mention of field with large offset in struct literal causes crash
Merge abutting, overlapping.
Merge adds profile p adjusted by ratio r into profile p.
Merge and clean tab and fold in a temporary buffer.
Merge channels of multiples of 'primes' into 'composites'.
Merge existing identifier commands with the sanitizers needed.
Merge temps with non-overlapping lifetimes and equal types using the greedy algorithm in Poletto and Sarkar, "Linear Scan Register Allocation", ACM TOPLAS 1999.
MergeLine merges a line with the following line.
MergeLine will panic if given an invalid line number.
MergePackageFiles creates a file AST by merging the ASTs of the files belonging to a package.
Merged from all files in the package
Meroitic_Cursive is the set of Unicode characters in script Meroitic_Cursive.
Meroitic_Hieroglyphs is the set of Unicode characters in script Meroitic_Hieroglyphs.
Mess with y so that the subsequent cast to unsafe.Pointer can't be combined with the uintptr cast above.
Metadata about the role of a prefix in an instruction.
Metadata directory does not exist.
Method calls are ignored when deciding initialization order.
Method expressions have the form T.M, and the compiler has rewritten those to ONAME nodes but left T in Left.
Method for printing - sorts the elements before printing.
Method must be exported.
Method needs one out.
Method needs three ins: receiver, *args, *reply.
Method on concrete type.
Method on non-interface type
Method panics if i is out of range or if v is a nil interface value.
Method represents a single method.
Method returns a function value corresponding to v's i'th method.
Method returns the i'th method in the type's method set.
Method set of *temperature.Celsius: method (*temperature.Celsius) SetF(f float64) method (*temperature.Celsius) String() string
Method specifies the HTTP method (GET, POST, PUT, etc.).
Method value implicitly taking receiver address.
Method value with concrete value receiver.
Method value with implicit dereference.
Method value with interface receiver.
MethodByName method with the given name in the type's method set.
MethodByName returns a function value corresponding to the method of v with the given name.
MethodByName returns the method with that name in the type's method set and a boolean indicating if the method was found.
Methods applicable only to some types, depending on Kind.
Methods applicable to all types.
Methods called as Type.Method(receiver, ...).
Methods exported from unexported embedded structs
Methods might be called via reflection.
Methods of SpecialCase customize (by overriding) the standard mappings.
Methods required by sort.Interface.
Methods which don't require a result value to be passed in (for instance, Int.Sign), simply return the result.
Miao is the set of Unicode characters in script Miao.
Middle rounds shuffle using tables.
Might also twiddle Perl flags.
Might as well stop now.
Might be more efficient.
Might be only ellipsis
Might be pointer arithmetic, in which case the operands flow into the result.
Might be racing with other updates, so use atomic update always.
Might be v or a copy of it.
Might cause problems.
Might duplicate effort but won't hold other computations back.
Might have leading ellipsis
Might have the same methods but still need a run time conversion.
Might not have been dumped yet.
Might return nil even if one does exist.
Mimic what cmd/cgo would do.
Min returns the smaller of x or y.
MinLC is the minimum length of an instruction code.
MinPrec returns the minimum precision required to represent x exactly (i.e., the smallest prec before x.SetPrec(prec) would start rounding x).
MinRead is the minimum slice size passed to a Read call by Buffer.ReadFrom.
MinVersion contains the minimum SSL/TLS version that is acceptable.
Mincore returns ENOMEM if any of the pages are unmapped, but we want to know that all of the pages are unmapped.
Minimum alignment for a struct is 1 byte.
Minimum and maximum values have different units.
Minimum representable exponent is flt.bias+1.
Minor for-the-time-being optimization: nothing happens unless a loop is both inner and call-free, therefore don't bother with other loops.
Minutes returns the duration as a floating point number of minutes.
Misc constants expected by package net but not supported.
Misc operations include functions like setsockopt and setDeadline.
Misc operations must do incref/decref.
Mismatched build IDs, ignore
Missing " after recursive call.
Missing funcdata will be 0 (nil pointer).
Missing pipeline in block
Missing quote in the else branch.
Missing space before title, but it is not a part of the src attribute.
MissingMethod returns (nil, false) if V implements T, otherwise it returns a missing method required by T and whether it is missing or just has the wrong type.
Misuse of unsafe Pointers Flag: -unsafeptr Likely incorrect uses of unsafe.Pointer to convert integers to pointers.
Mixing signed and unsigned integers.
Mkdir creates a new directory with the specified name and permission bits.
MkdirAll creates a directory named path, along with any necessary parents, and returns nil, or else returns an error.
Mkzip creates a zip file from a 'proto' file describing the contents.
Mmap manager, for use by operating system-specific implementations.
Mn is the set of Unicode characters in category Mn.
Mod returns the floating-point remainder of x/y.
Mod returns the point q in r such that p.X-q.X is a multiple of r's width and p.Y-q.Y is a multiple of r's height.
Mod truncates the maximum value to one less than the argument, but signed mod can be negative, so only unsigned mod counts.
ModSqrt sets z to a square root of x mod p if such a square root exists, and returns z.
ModTime returns the modification time in UTC.
Mode constants from the tar spec.
Mode flags for loadImport and download (in get.go).
Mode returns the permission and mode bits for the FileHeader.
Mode returns the permission and mode bits for the headerFileInfo.
Mode returns the rounding mode of x.
Mode values control the operation of New.
Model can convert any Color to one from its own color model.
Model some local work.
Model synchronization on trace.shutdownSema, which race detector does not see.
ModelFunc returns a Model that invokes f to implement the conversion.
Modeled after fixedbugs/issue1304.
Models for the standard color types.
Modf returns integer and fractional floating-point numbers that sum to f.
Modi is the set of Unicode characters in script Modi.
Modification times are attractive because the logic is easy to understand and the file system maintains the mtimes automatically (less work for us).
Modifications below this line are okay.
Modified by Wei-Hwa Huang, Google Inc., on 2004-09-24 This is a slower but "safe" version of the old chartorune that works on strings that are not necessarily null-terminated.
Modified to not use any floating point arithmetic so that we don't clobber any floating-point registers while emulating the sqrt instruction.
Modify all values so no arg (including args of OpCopy) is a copy.
Modify predecessor lists for no-longer-reachable blocks
Modify store into a copy
Modify the addresses return by lookupStaticHost.
Modify the hosts return by lookupStaticAddr.
Module-relative offset 32 bit
Module-relative offset 64 bit
Module-relative offset, high 16 bits
Module-relative offset, low 16 bits
Mongolian is the set of Unicode characters in script Mongolian.
Montgomery elimination of terms:
Montgomery multiplication by 1
Montgomery multiplication modulo Ord(G)
Montgomery square modulo Ord(G), repeated n times
Montgomery square modulo P256
Month and day names only match when not followed by a lower-case letter.
Month returns the month of the year specified by t.
More complex error cases will have to be handled at execution time.
More complicated queries need to use Compile and the full Regexp interface.
More details are provided below.
More generally, people and programs change mtimes on files.
More generally, we could short-circuit from (1) to (3) even in chunking mode if the write size from (1) is over some threshold and nothing is in (2).
More interesting regular expressions.
More invented values for signals
More reports whether there is another element in the current array or object being parsed.
More than initial buffer, but now n contains the correct size.
More than inlineArgs args, the first value is length of the event in bytes.
More than likely this will be a single-element key.
More than one goroutine reads trace.
More than two fields: use memequal.
More typically it will create a network listener and call Accept or, for an HTTP listener, HandleHTTP and http.Serve.
Moreover the GC may one day start moving heap memory, in which case there is no stable offset that can be defined.
Moreover, it isn't reproducible.
Moreover, the Data field is not sufficient to guarantee the data it references will not be garbage collected, so programs must keep a separate, correctly typed pointer to the underlying data.
Morestack detects this case and throws.
Most DWARF generators wouldn't generate such a thing, but clang does.
Most architectures require that the address to be checked is in a register (it could be in memory).
Most builds both compile source code and invoke the linker to create a binary.
Most callers should instead use Open, which transparently decompresses data and verifies checksums.
Most callers should just use Close.
Most checks that operate during the AST walk are added by register.
Most clients of regular expressions will use the facilities of package regexp (such as Compile and Match) instead of this package.
Most clients should use the runtime/pprof package instead of calling GoroutineProfile directly.
Most clients should use the runtime/pprof package instead of calling ThreadCreateProfile directly.
Most clients should use the runtime/pprof package or the testing package's -test.blockprofile flag instead of calling BlockProfile directly.
Most clients should use the runtime/pprof package or the testing package's -test.cpuprofile flag instead of calling CPUProfile directly.
Most clients should use the runtime/pprof package or the testing package's -test.cpuprofile flag instead of calling SetCPUProfileRate directly.
Most clients should use the runtime/pprof package or the testing package's -test.memprofile flag instead of calling MemProfile directly.
Most clients should use the runtime/trace package or the testing package's -test.trace flag instead of calling StartTrace directly.
Most clock ticks hit in the cache.
Most code should use package sql.
Most commonly, this is a Go identifier naming an object declared within a package, but Syms are also used to name internal synthesized objects.
Most functions and methods never return an invalid value.
Most functions have a fixed-size argument block, so we can use metadata about the function f.
Most headers are small anyway (so we generally won't have CONTINUATION frames), and extra frames only waste 9 bytes anyway.
Most headers aren't multi-valued.
Most lookups will be for the current time.
Most of it is bottom-up, but in a few places we need to know the type of the function we are checking.
Most of the actual stream state is owned by the http.Handler's goroutine in the responseWriter.
Most of the time the panic value will print itself nicely.
Most of these are floating point coprocessor instructions.
Most of these come from supplementary manuals of one form or another.
Most of these have no checks because a real memory reference follows, and the offset is small enough that if x is nil, the address will still be in the first unmapped page of memory.
Most paths look like this already.
Most programs won't care, but a few do require certain calls to be made by the main thread.
Most recent address for DATA for this symbol.
Most synthesized routines have different cases for constants vs variables and even the generated code has different cases for large and small constants, so try a good range of inputs.
Most system calls would return ENFILE (too many open files), so at the least EMFILE should be easy to recognize if this comes up again.
Most the callers of send (Get, Post, et al) don't need Headers, leaving it uninitialized.
Most things need checks.
Most users should use Framer.ReadFrame instead.
Most users will not need to understand these details.
Most users will open a database via a driver-specific connection helper function that returns a *DB.
Most users will use it indirectly through the automatic use by the net/http package (from Go 1.6 and later).
Most uses of Format and Parse use constant layout strings such as the ones defined in this package, but the interface is flexible, as these examples show.
Most uses of this package need not call Handshake explicitly: the first Read or Write will call it automatically.
Most working code will have none.
Mostly it checks whether HEADERS and CONTINUATION frames are contiguous.
Motorola Star*Core processor.
Move access and modification time back a second
Move addressing mode into opcode suffix.
Move arguments to registers.
Move comment one byte down in the source.
Move current frame to BP
Move data down to beginning of slice, to avoid endless growth
Move from lower priority to top priority
Move index to start of next cached bits.
Move into a new field.
Move on to next block.
Move on to other mappings
Move the address to be checked into a register if necessary.
Move the current working directory into the faux gopath.
Move the id space upwards to allow for growth in the predefined world without breaking existing files.
Move the last 2 bytes to the start of the buffer, in case we need to call unreadByteStuffedByte.
Move timers and syscalls to separate fake Ps.
Move to nonempty if necessary.
Move to the next block with this block as the next iv.
Move v to that block.
Move v to the entry block so it will dominate every block where we might use it.
MoveAfter moves element e to its new position after mark.
MoveBefore moves element e to its new position before mark.
MoveNodes sets n to the contents of n2, then clears n2.
MoveToBack moves element e to the back of list l.
MoveToFront moves element e to the front of list l.
Moves may imply sign/zero extension.
Moving a bunch amortizes the cost of acquiring the MCentral lock.
Moving arguments around.
Moving the whole sse2 register is faster than moving just the correct low portion of it.
Moving this test case around within the overall tests may affect the FDs obtained and hence the checks to catch these cases.
Mpcplx represents a complex constant.
Mpflt represents a floating-point constant.
Mro is the set of Unicode characters in script Mro.
Msg contains a human readable string that describes the error.
Much of the time these structs are in system headers that cannot be corrected.
Much smaller for more efficient testing.
Mul panics with ErrNaN if one operand is zero and the other operand an infinity.
Mul returns the vector p*k.
Mul sets z to the product x*y and returns z.
Mul sets z to the rounded product x*y and returns z.
Multani is the set of Unicode characters in script Multani.
Multi-byte characters must not be split across encoded-words.
Multi-dimensional array.
Multi-line string literal now allowed.
MultiReader returns a Reader that's the logical concatenation of the provided input readers.
MultiWriter creates a writer that duplicates its writes to all the provided writers, similar to the Unix tee(1) command.
Multibyte characters -- verify that we don't try to match in the middle of a character.
MulticastAddrs returns multicast, joined group addresses for a specific interface.
MultipartForm is the parsed multipart form, including file uploads.
MultipartReader returns a MIME multipart reader if this is a multipart/form-data POST request, else returns nil and an error.
Multiple empty lines are reduced to one, and trailing space on lines is trimmed.
Multiple errors are returned via a scanner.ErrorList which is sorted by file position.
Multiple example functions for a package/type/function/method may be provided by appending a distinct suffix to the name.
Multiple files may be read concurrently.
Multiple files may have the same name.
Multiple goroutines may invoke methods on a Conn simultaneously.
Multiple goroutines may invoke methods on a Listener simultaneously.
Multiple goroutines may invoke methods on a PacketConn simultaneously.
Multiple grammars compiled into a single program should be placed in distinct packages.
Multiple gzip files concatenated form a valid gzip file.
Multiple inlined calls to a function that causes redundant address loads.
Multiple programs calling TempDir simultaneously will not choose the same directory.
Multiple programs calling TempFile simultaneously will not choose the same file.
Multiple queries or executions may be run concurrently from the returned statement.
Multiple separators are replaced by multiple slashes.
Multiple slashes are replaced by multiple separators.
Multiple tagged fields at the same level: conflict.
Multiple tokens -- complete using command completer
Multiple valued expressions in return lists.
MultiplePackageError describes a directory containing multiple buildable Go source files for multiple packages.
Multiplication works by multiplying z by 16 and adding in one of the precomputed multiples of H.
Multiplications are commutative, so we can apply them in any order as long as there is no loss of precision.
Multiply a power series by a constant
Multiply b and c as GF(2) polynomials modulo poly
Multiply by an appropriate power of ten to have a reasonable number to process.
Multiply by powers of ten.
Multiply i, j bit by bit.
Multiply sets f to the product f*g: the result is correctly rounded, but not normalized.
Multiplying by a power of two is equivalent to left shifting, in this case by k bits.
Multiplying by one in the Montgomery domain converts a Montgomery value out of the domain.
Multiprecision decimal numbers.
Multistream controls whether the reader supports multistream files.
Must be 1 mod 400, and times before it will not compute correctly, but otherwise can be changed at will.
Must be ELF32PHDRSIZE
Must be ELF32SHDRSIZE
Must be ELF64PHDRSIZE
Must be ELF64SHDRSIZE
Must be NOSPLIT, must only call NOSPLIT functions, and must not block.
Must be a pointer to a named type, since it has the Marshaler methods.
Must be after argument formatting, which can turn off segment prefixes.
Must be be ELF32HDRSIZE: first PHdr must follow ELF header
Must be be ELF64HDRSIZE: first PHdr must follow ELF header
Must be called after all flags are defined and before flags are accessed by the program.
Must be called after all flags in the FlagSet are defined and before flags are accessed by the program.
Must be called from the topmost function of the call (the function used in the defer statement).
Must be called with stackpoolmu held.
Must be comparison of array or struct.
Must be first (used by len() builtin)
Must be greater than any real sp.
Must be in a function running as part of a deferred call during the panic.
Must be in first position.
Must be in non-GC memory because can be referenced only from epoll/kqueue internals.
Must be in second position (see cmd/internal/gc/range.go).
Must be less than 16.
Must be locked (got wakeup).
Must be non-nil so that dotpath returns a non-nil slice even if d is zero.
Must be non-zero and between 16K-16M.
Must be short or invalid.
Must be something, though.
Must be the waiting m.
Must call emitVardef after evaluating rhs but before writing to lhs.
Must clear these out before any potential recycling, though that's not currently implemented.
Must clear type bit (checkmark bit) of every word.
Must close the encoder when finished to flush any partial blocks.
Must do now instead of below because the any/all calculation requires walking forward over the block (as this loop does), while the liveout requires walking backward (as the next loop does).
Must either display a profile or rewrite Go source.
Must end in T to match.
Must go up before going down.
Must happen before assist enable.
Must have the form *identifier.
Must have used entire string.
Must include associated constant.
Must include constructor.
Must is a helper that wraps a call to a function returning (*Template, error) and panics if the error is non-nil.
Must keep searching in case there is an ignored one as well.
Must make a copy, because f might keep a reference to it, and we cannot let f keep a reference to the stack frame after this function returns, not even a read-only reference.
Must match Go definitions.
Must match runtime and reflect.
Must name fields for that.
Must not be preempted because it typically runs right after memmove, and the GC must not complete between those two.
Must not call other functions nor access heap/globals in the loop, otherwise under race detector the samples will be in the race runtime.
Must now have a sign.
Must only be called by rawExpr.
Must only be called by typExpr.
Must only be called from a single goroutine at a time.
Must read a single byte.
Must return immediately.
Must run on system stack because stack growth can (re)invoke it.
Must support wildcard app ids.
Must treat yyy as leaking because *yyy leaks, and the escape analysis summaries in exported metadata do not distinguish these two cases.
Must unblock the readers.
Must use 3-byte encoding.
Must wait until now because until gosched returns we don't know for sure that the garbage collector is not running.
Must write at least 2 words, because the "no scan" encoding doesn't take effect until the third word.
MustClose closes Closer c and calls log.Fatal if it returns a non-nil error.
MustCompile is like Compile but panics if the expression cannot be parsed.
MustCompilePOSIX is like CompilePOSIX but panics if the expression cannot be parsed.
MustFindProc is like FindProc but panics if search fails.
MustHaveExec checks that the current system can start new processes using os.StartProcess or (more commonly) exec.Command.
MustHaveExternalNetwork checks that the current system can use external (non-localhost) networks.
MustHaveGoBuild checks that the current system can build programs with ``go build'' and then run them with os.StartProcess or exec.Command.
MustHaveGoRun checks that the current system can run programs with ``go run.'' If not, MustHaveGoRun calls t.Skip with an explanation.
MustLoadDLL is like LoadDLL but panics if load operation fails.
MustWriter returns a Writer that wraps the provided Writer, except that it calls log.Fatal instead of returning a non-nil error.
Mutator assists must not yet be enabled.
Mutual exclusion locks.
Mutually recursive slices of structs caused problems.
Mutually recursive type definitions imported and used by recursive1.go.
My-Key: Value 1 Long-Key: Even Longer Value My-Key: Value 2
MyError is an error implementation that includes a time and message.
MyError returns a value and an error according to its argument.
Myanmar is the set of Unicode characters in script Myanmar.
N should be larger than zero.
NArg is the number of arguments remaining after flags have been processed.
NB more of a pain to do these for 32-bit because of lost bits in Float32 mantissa
NB: due to the extra shift, the low-order bit of q is logically the high-order bit of r.
NB: exception made for this input
NB: secp256r1 is equivalent to prime256v1
NB: simply checking the exit code of `git rev-parse --git-dir` would suffice here, but that requires deviating from the infrastructure provided by `run`.
NET enables use of basic network-related packages.
NFlag returns the number of command-line flags that have been set.
NFlag returns the number of flags that have been set.
NIST Special Publication 800-20, Appendix A Key for use with Table A.1 tests
NOP is an internal no-op that also stands for USED and SET annotations, not the Intel opcode.
NOP is an internal no-op that also stands for USED and SET annotations, not the MIPS opcode.
NOP is an internal no-op that also stands for USED and SET annotations, not the Power opcode.
NOP is an internal no-op that also stands for USED and SET annotations.
NOSPLIT functions that make no calls do not need to use these macros.
NOTE()  NO uid - should not show up.
NOTE(): NO uid - should not show up.
NOTE(ality): acid can't produce a stack trace without .frame symbols
NOTE(bam): This note which contains a (parenthesized) subphrase must appear in its entirety.
NOTE(brainman): It seems that sometimes process is not dead when WaitForSingleObject returns.
NOTE(brainman): work around ERROR_BROKEN_PIPE is returned on reading EOF from stdin
NOTE(dvyukov): the following code uses uintptr to store *g (rg/wg), that will blow up when GC starts moving objects.
NOTE(eds): Technically a key-value pair can straddle the boundary between two packets.
NOTE(foo): 1 of 4 - this is the first line of note 1 - note 1 continues on this 2nd line - note 1 continues on this 3rd line NOTE(foo): 2 of 4 NOTE(bar): 3 of 4
NOTE(khr): don't use FUCOMI* instructions, not available on Pentium MMX.
NOTE(rsc): Could use getrlimit here, like on FreeBSD or Linux, but Darwin doesn't enforce ulimit -v, so it's unclear why we'd try to stay within the limit.
NOTE(rsc): Eventually we will need to accept the POSIX TZ environment syntax too, but I don't feel like implementing it today.
NOTE(rsc): Eventually we will need to decide on some logic here.
NOTE(rsc): Everything here could use cas if contention became an issue.
NOTE(rsc): I haven't worked out why (really when) we should ignore the addend on a scattered relocation, but it seems that the common case is we ignore it.
NOTE(rsc): I wish we could use the Plan 9 behavior here (only bypass the path if file begins with / or ./ or ../) but that would not match all the Unix shells.
NOTE(rsc): It is possible that the ODOT and OINDEX cases are not relevant here, since it shouldn't be possible for them to be involved in an overlapping copy.
NOTE(rsc): It seems strange to set the buffer to have size CTL_MAXNAME+2 but use only CTL_MAXNAME as the size.
NOTE(rsc): Maybe the group isn't defined.
NOTE(rsc): On Windows, it is critically important that the gcc-compiled objects (cgoObjects) be listed after the ordinary objects in the archive.
NOTE(rsc): Perhaps an oversight that IfaceType.Method is not in the reflect data.
NOTE(rsc): RFC 2616 says that the Location line must be an absolute URI, like "http://www.google.com/redirect/", not a path like "/redirect/".
NOTE(rsc): The Win32finddata struct is wrong for the system call: the two paths are each one uint16 short.
NOTE(rsc): The atomic here may not be necessary.
NOTE(rsc): The importObj is a 5c/6c/8c object and on Windows must be processed before the gcc-generated objects.
NOTE(rsc): This code is confused.
NOTE(rsc): This doesn't actually trigger, because order.go has pulled all the len and cap calls into separate assignments to temporaries.
NOTE(rsc): This function does NOT call the runtime cmpstring function, because we do not want to provide any performance justification for using strings.Compare.
NOTE(rsc): This is probably safe to do always, but when enabled it chooses different encodings than the old cmd/internal/obj/i386 code did, which breaks our "same bits out" checks.
NOTE(rsc): This is the only allocation in the interface presented by a reflect.Type.
NOTE(rsc): Would like to allow MarshalText here, but results in incompatibility with older encodings for net.IP.
NOTE(rsc): arm does goto copy
NOTE(rsc): passing nil for argtype means that the copying of the results back into cb.arg happens without any corresponding write barriers.
NOTE(rsc,rlh): If gcworkbuffree comes back, we need to coordinate with the stealing of gcworkbufs during garbage collection to avoid a race where the workbuf is double-freed.
NOTE(uid): SECBUG(uid): sec hole 0 need to fix asap Multiple notes may be in the same comment group and should be recognized individually.
NOTE(xxx) The ':' after the marker and uid is optional.
NOTE: Assuming little endian (signed top half at offset 4).
NOTE: DO NOT USE native_client/src/shared/imc/nacl_imc_c.h.
NOTE: Do not add atomicxor8 (XOR is not idempotent).
NOTE: Do not trust that caller is not modifying cases data underfoot.
NOTE: If we wanted to be clever, we could arrange for just one temporary per distinct type, sharing the temp among all receives with that temp.
NOTE: If you change this file you must run "go generate" to update builtin.go.
NOTE: It seems like 64-bit Darwin and DragonFly BSD kernels still require 32-bit aligned access to network subsystem.
NOTE: It's possible we could make ppc64 closer to other architectures: ppc64's .plt is like .plt.got on other platforms and ppc64's .glink is like .plt on other platforms.
NOTE: KAME based IPv6 protocol stack usually embeds the interface index in the interface-local or link-local address as the kernel-internal form.
NOTE: Must use agen, not igen, so that optimizer sees address being taken.
NOTE: Must use hex, or else a shortcut for decimals in cgo avoids trying to pass this to clang.
NOTE: NetBSD has no somaxconn-like kernel state so far
NOTE: Note that the corresponding chunk-writing procedure in Conn.Write has a bug since it does not check for success of io.WriteString
NOTE: OLABEL is treated as a separate statement, not a separate prefix, so skipping to the last statement in the block handles the labeled statement case by skipping over the label.
NOTE: Only works with 'external' relocation.
NOTE: SockaddrDatalink.Data is minimum work area, can be larger.
NOTE: SysReserve returns OS-aligned memory, but the heap allocator may use larger alignment, so the caller must be careful to realign the memory obtained by sysAlloc.
NOTE: Systems listed here should be only systems that support direct TLS references like 8(TLS) implemented as direct references from FS or GS.
NOTE: The (int32) cast on the next line works around a bug in Plan 9's 8c compiler.
NOTE: The actual Op values are defined in tables.go.
NOTE: The bitmap for a specific type t should be cached in t after the first run and then simply copied into bv at the correct offset on future calls with the same type t.
NOTE: The returned pointer may keep the whole map live, so don't hold onto it for very long.
NOTE: These values must match ../runtime/select.go:/selectDir.
NOTE: This flag is the first flag to enable if importing dies because of (suspected) format errors, and whenever a change is made to the format.
NOTE: This function is internal to the testing infrastructure and may change.
NOTE: This function must be marked as a "wrapper" in the generated code, so that the linker can make it work correctly for panic and recover.
NOTE: This is not intended to reflect the actual Go version being used.
NOTE: This is pretty naive implementation that contains many allocations and non-effective linear search, and should not be used freely.
NOTE: This package is a copy of golang.org/x/sys/windows/registry with KeyInfo.ModTime removed to prevent dependency cycles.
NOTE: This package is locked down.
NOTE: This struct is internal to the testing infrastructure and may change.
NOTE: This test is not run by 'run.go' and so not run by all.bash.
NOTE: Unlike switch and type switch below, we don't care whether a select has a default, because a select without a default blocks until one of the cases can run.
NOTE: Usage is not just defaultUsage(CommandLine) because it serves (via godoc flag Usage) as the example for how to write your own usage function.
NOTE: Using uintptr to hide from escape analysis.
NOTE: We accept "continue" statements as terminating.
NOTE: Windows accept / as path separator.
NOTE: acquiring the child's lock while holding parent's lock.
NOTE: don't read e.word until we know whether it is really a pointer or not.
NOTE: env.go's mkEnv knows that the first three strings returned are "gcc", "-I", objdir (and cuts them off).
NOTE: keep in sync with string above.
NOTE: keep in sync with stringBytes below.
NOTE: might clobber a preempt request
NOTE: must not be closure
NOTE: on 386, the trapno field is split into trapno and cpu
NOTE: packing all the keys together and then all the values together makes the code a bit more complicated than alternating key/value/key/value/...
NOTE: stackguard0 may change underfoot, if another thread is about to try to preempt gp.
NOTE: sysAlloc returns OS-aligned memory, but the heap allocator may use larger alignment, so the caller must be careful to realign the memory obtained by sysAlloc.
NOTE: the component values we are making are dead at this point.
NOTE: this case is why we need two evacuate tophash values, evacuatedX and evacuatedY, that differ in their low bit.
NOTE: values can only have 1 output for now.
NOTE: vec must be just 1 byte long here.
NOTE: we need to regrab the key as it has potentially been updated to an equal() but not identical key (e.g. +0.0 vs -0.0).
NOTE: we resend a request only if the request is idempotent, we reused a keep-alive connection, and we haven't yet received any header data.
NO_LOCAL_POINTERS indicates that the assembly function stores no pointers to heap objects in its local stack variables.
NRGBA is an in-memory image whose At method returns color.NRGBA values.
NRGBA represents a non-alpha-premultiplied 32-bit color.
NRGBA64 is an in-memory image whose At method returns color.NRGBA64 values.
NRGBA64 represents a non-alpha-premultiplied 64-bit color, having 16 bits for each of red, green, blue and alpha.
NUL character is not allowed
NULL denotes the empty string and NIL denotes the 0 pointer.
NYCbCrA is an in-memory image of non-alpha-premultiplied Y'CbCr-with-alpha colors.
NYCbCrA represents a non-alpha-premultiplied Y'CbCr-with-alpha color, having 8 bits each for one luma, two chroma and one alpha component.
NYCbCrAModel is the Model for non-alpha-premultiplied Y'CbCr-with-alpha colors.
NaCl guarantees VFPv3 and is always cross-compiled.
NaCl needs to allocate pseudo file descriptor stuff.
NaCl/ARM only supports ARMv7
NaN returns a complex ``not-a-number'' value.
NaN returns an IEEE 754 ``not-a-number'' value.
NaNs represent invalid inputs
Nabataean is the set of Unicode characters in script Nabataean.
Naddr rewrites a to refer to n.
Name appeared multiple times at this level: annihilate.
Name holds Node fields used only by named nodes (ONAME, OPACK, some OLITERAL).
Name is alphanumeric by definition.
Name is the field name.
Name is the method name.
Name is the name of a symbol.
Name is the name of the file.
Name is the name of the format, like "jpeg" or "png".
Name is the name of the template in which the error was encountered.
Name of .debug_type section.
Name of test or benchmark.
Name represents an X.509 distinguished name.
Name resolution APIs and libraries should not recognize the followings as special.
Name resolution APIs and libraries should recognize the followings as special and should not send any queries.
Name resolution maps each identifier (ast.Ident) in the program to the language object (Object) it denotes.
Name returns the base name of the file.
Name returns the command's name: the first word in the usage line.
Name returns the file name of file f as registered with AddFile.
Name returns the name of basic type b.
Name returns the name of the architecture for use in Op* and Block* enumerations.
Name returns the name of the file as presented to Open.
Name returns the name of the function.
Name returns the name of the template.
Name returns the name of the type associated with the typeId.
Name returns the package name.
Name returns the type's name within its package.
Name returns the underlyinf file name, if available
Name returns this profile's name, which can be passed to Lookup to reobtain the profile.
Name so that escape analysis can track it.
Name taken from type.
Name was already used.
NameToCertificate maps from a certificate name to an element of Certificates.
Names are lower-cased so the lookup is case insensitive.
Names is a copy of NamedValues.Keys.
Names returns the scope's element names in sorted order.
Names sometimes have disambiguation junk appended after a center dot.
Names that are not demangled may be missing from the resulting map.
Nanoseconds in assistAlloc
Nanoseconds must be checked against the precision of the input.
Nanoseconds returns Filetime ft in nanoseconds since Epoch (00:00:00 UTC, January 1, 1970).
Nanoseconds returns the duration as an integer nanosecond count.
National Institute of Standards and Technology (NIST) Special Publication 800-38A, ``Recommendation for Block Cipher Modes of Operation,'' 2001 Edition, pp.
Native Client does not relay the divide-by-zero trap to the executing program, so we must insert a check for ourselves.
Native Client only invokes the exception handler for memory faults.
Native Client rejects the repeated 0x66 prefix.
Naturally, if it does not invoke the Go signal handler, the Go behavior described above will not occur.
Navigating the ast is slightly different for methods vs plain functions and for imported vs this-package
Nd is the set of Unicode characters in category Nd.
Near these points it is evaluated by a Taylor series.
Necessary when one value is zero and one value is close to zero.
Need a free register to accomplish this.
Need a new register for the input.
Need a unique prefix for the global C symbols that we use to coordinate between gcc and ourselves.
Need non-zero Lparen and Rparen so that printer
Need outer to resolve .TOC.
Need room for two bytes.
Need something less crude than "Log the whole intermediate result".
Need to add numerator (cannot overflow).
Need to add numerator accounting for overflow.
Need to climb up one level to turn value into pointer.
Need to compile package gob with debug.go to build this program.
Need to copy pcs to an array, because map iteration order is non-deterministic.
Need to decrement number of idle locked M's (pretending that one more is running) before injectglist.
Need to decrement number of idle locked M's (pretending that one more is running) before the CAS.
Need to define a new name space.
Need to get our completion message anyway.
Need to keep additional references to nodes, the lock-free stack is not type-safe.
Need to model this as a read, because there can be several concurrent wg.counter transitions from 0.
Need to model this is as a write to race with the read in Add.
Need to reissue flag generator for use by subsequent blocks.
Need to reorder symbols so SDWARFINFO is after all SDWARFSECT (but we need to generate dies before writepub)
Need to simplify and clean up.
Need to split the prefix among multiple nodes.
Need to touch the slice, otherwise it won't be paged in.
Need to use reflection, since the type had no interface methods that could be used for formatting.
Need to wait until all backends go through SSA.
Need valid field offsets for Xoffset below.
Needed by the prettyprinter code for interface inspection.
Needed for platforms without assembly implementations of these routines.
Needs to be a separate phase because it must run after both lowering and a subsequent dead code elimination (because lowering rules may leave dead generic ops behind).
Needs to be as big as the largest number of objects per span.
Neg sets z to -x and returns z.
Neg sets z to the (possibly rounded) value of x with its sign negated, and returns z.
NegOne returns a Node of type t with value -1.
Negative branch taken, complement the relations.
Negative elements may be used to form fractions.
Negative offset in static TLS block
Negative offset relative to static TLS
Negative or zero no limit.
Negative precision arguments don't make sense
Negative precision means "only as much as needed to be exact."
Negative values are erroneous.
Negative values are never okay
Neither a Content-Type or Content-Length, so sniffed and counted.
Neither are desired, pick r0.
Neither has much practical consequence because the expressions we see in assembly code are simple, but for the record:
Neither of that submits to local run queues, so no point in stealing.
Nested closure, recurse.
Nested template definitions When parsing a template, another template may be defined and associated with the template being parsed.
Nested template definitions will be associated with the top-level template t.
Nested template definitions will inherit the settings.
Nesting depth of test or benchmark.
Net effect is that loop entry is favored.
Net is the network type on which this error occurred, such as "tcp" or "udp6".
NetBSD 6 and beyond kernels require 64-bit aligned access to routing facilities.
NetBSD Signature (as per sys/exec_elf.h)
Netlink routing and interface messages
Netlink sockets and messages
NetlinkMessage represents a netlink message.
NetlinkRIB returns routing information base, as known as RIB, which consists of network facility information, states and parameters.
NetlinkRouteAttr represents a netlink route attribute.
NetlinkRouteRequest represents a request message to receive routing and link states from the kernel.
Network constants and data structures.
Network file descriptor.
Network interface is not configured
Network is unreachable
Network poller descriptor.
Network protocols that do not support keep-alives ignore this field.
Network returns the address's network name, "ip".
Network returns the address's network name, "ip+net".
Network returns the address's network name, "tcp".
Network returns the address's network name, "udp".
Network returns the address's network name, "unix", "unixgram" or "unixpacket".
Never printed, just needs to be non-nil for return by atoi.
Never proxy localhost:
Never returns nil, instead it will return a reference to the zero object for the value type if the key is not in the map.
Never true, but prevents inlining.
Nevertheless, it is probably a bad idea to pass it by value.
New RoundTripper implementations should use Request.Cancel instead of implementing CancelRequest.
New allocates a new HTML template associated with the given one and with the same delimiters.
New allocates a new HTML template with the given name.
New allocates a new parse tree with the given name.
New allocates a new, undefined template associated with the given one and with the same delimiters.
New allocates a new, undefined template with the given name.
New builds a new report indexing the sample values interpreting the samples with the provided function.
New computes the package documentation for the given package AST.
New creates a new Index for data.
New creates a new Logger.
New creates a new hash.Hash32 computing the CRC-32 checksum using the polynomial represented by the Table.
New creates a new hash.Hash64 computing the CRC-64 checksum using the polynomial represented by the Table.
New creates a ring of n elements.
New downloaded packages are written to the first directory listed in the GOPATH environment variable (see 'go help gopath').
New establishes a new connection to the system log daemon.
New matches are added in lexicographical order.
New panics if the hash function is not linked into the binary.
New returns a Value representing a pointer to a new zero value for the specified type.
New returns a new Data object initialized from the given parameters.
New returns a new HMAC hash using the given hash.Hash type and key.
New returns a new Rand that uses random values from src to generate other random values.
New returns a new cookie jar.
New returns a new hash.Hash calculating the given hash function.
New returns a new hash.Hash computing the MD5 checksum.
New returns a new hash.Hash computing the SHA-512 checksum.
New returns a new hash.Hash computing the SHA1 checksum.
New returns a new hash.Hash computing the SHA256 checksum.
New returns a new hash.Hash32 computing the Adler-32 checksum.
New returns a new, random binary tree holding the values 1k, 2k, ..., nk.
New returns an error that formats as the given text.
New returns an initialized list.
New returns an unused filename for output files.
New spans can be created while GC progresses, but they are not garbage for this round: - new stack spans can be created even while the world is stopped.
New takes ownership of the AST pkg and may edit or overwrite it.
New work can appear from returning syscall/cgocall, network or timers.
New224 returns a new hash.Hash computing the SHA224 checksum.
New32 returns a new 32-bit FNV-1 hash.Hash.
New32a returns a new 32-bit FNV-1a hash.Hash.
New384 returns a new hash.Hash computing the SHA-384 checksum.
New512_224 returns a new hash.Hash computing the SHA-512/224 checksum.
New512_256 returns a new hash.Hash computing the SHA-512/256 checksum.
New64 returns a new 64-bit FNV-1 hash.Hash.
New64a returns a new 64-bit FNV-1a hash.Hash.
NewAlpha returns a new Alpha image with the given bounds.
NewAlpha16 returns a new Alpha16 image with the given bounds.
NewArray returns a new array type for the given element type and length.
NewAt returns a Value representing a pointer to a value of the specified type, using p as that pointer.
NewBuffer creates and initializes a new Buffer using buf as its initial contents.
NewBufferString creates and initializes a new Buffer using string s as its initial contents.
NewCBCDecrypter returns a BlockMode which decrypts in cipher block chaining mode, using the given Block.
NewCBCDecrypter will check for this interface and return the specific BlockMode if found.
NewCBCEncrypter returns a BlockMode which encrypts in cipher block chaining mode, using the given Block.
NewCBCEncrypter will check for this interface and return the specific BlockMode if found.
NewCFBDecrypter returns a Stream which decrypts with cipher feedback mode, using the given Block.
NewCFBEncrypter returns a Stream which encrypts with cipher feedback mode, using the given Block.
NewCMYK returns a new CMYK image with the given bounds.
NewCTR returns a Stream which encrypts/decrypts using the AES block cipher in counter mode.
NewCTR returns a Stream which encrypts/decrypts using the given Block in counter mode.
NewCTR will check for this interface and return the specific Stream if found.
NewCertPool returns a new, empty CertPool.
NewChain returns a new Chain with prefixes of prefixLen words.
NewChan returns a new channel type for the given direction and element type.
NewChecker returns a new Checker instance for a given package.
NewChunkedReader is not needed by normal applications.
NewChunkedReader returns a new chunkedReader that translates the data read from r out of HTTP "chunked" format before returning it.
NewChunkedWriter is not needed by normal applications.
NewChunkedWriter returns a new chunkedWriter that translates writes into HTTP "chunked" format before writing them to w.
NewCipher creates and returns a new Cipher.
NewCipher creates and returns a new cipher.Block.
NewClient returns a new Client to handle requests to the set of services at the other end of the connection.
NewClient returns a new Client using an existing connection and host as a server name to be used when authenticating.
NewClient returns a new rpc.Client to handle requests to the set of services at the other end of the connection.
NewClientCodec returns a new rpc.ClientCodec using JSON-RPC on conn.
NewClientConn is an artifact of Go's early HTTP implementation.
NewClientWithCodec is like NewClient but uses the specified codec to encode requests and decode responses.
NewCommentMap creates a new comment map by associating comment groups of the comments list with the nodes of the AST specified by node.
NewCompleter creates an autocompletion function for a set of commands.
NewCond returns a new Cond with Locker l.
NewConfig returns a new configuration object for the given architecture.
NewConn returns a new Conn using conn for I/O.
NewDecoder constructs a new ascii85 stream decoder.
NewDecoder constructs a new base32 stream decoder.
NewDecoder constructs a new base64 stream decoder.
NewDecoder creates a new XML parser reading from r.
NewDecoder returns a new decoder that reads from r.
NewDecoder returns a new decoder that reads from the io.Reader.
NewDecoder returns a new decoder with the provided maximum dynamic table size.
NewDecoder wraps an io.Reader interface around Decode.
NewDefault builds a new report indexing the sample values with the last value available.
NewEncoder returns a new Encoder which performs HPACK encoding.
NewEncoder returns a new ascii85 stream encoder.
NewEncoder returns a new base32 stream encoder.
NewEncoder returns a new base64 stream encoder.
NewEncoder returns a new encoder that will transmit on the io.Writer.
NewEncoder returns a new encoder that writes to w.
NewEncoding returns a new Encoding defined by the given alphabet, which must be a 32-byte string.
NewEncoding returns a new padded Encoding defined by the given alphabet, which must be a 64-byte string.
NewError converts s to an ErrorString, which satisfies the Error interface.
NewFatFile creates a new FatFile for accessing all the Mach-O images in a universal binary.
NewField returns an empty field of the specified width and height.
NewFile creates a new File for accessing a Mach-O binary in an underlying reader.
NewFile creates a new File for accessing a Plan 9 binary in an underlying reader.
NewFile creates a new File for accessing an ELF binary in an underlying reader.
NewFile returns a new File with the given file descriptor and name.
NewFileSet creates a new file set.
NewFileTransport returns a new RoundTripper, serving the provided FileSystem.
NewFlagSet returns a new, empty flag set with the specified name and error handling property.
NewFloat allocates and returns a new Float set to x, with precision 53 and rounding mode ToNearestEven.
NewFloat panics with ErrNaN if x is a NaN.
NewFramer returns a Framer that writes frames to w and reads them from r.
NewFunc returns a new, empty function object.
NewGCM returns the AES cipher wrapped in Galois Counter Mode.
NewGCM returns the given 128-bit, block cipher wrapped in Galois Counter Mode with the standard nonce length.
NewGCM will check for this interface and return the specific AEAD if found.
NewGCMWithNonceSize returns the given 128-bit, block cipher wrapped in Galois Counter Mode, which accepts nonces of the given length.
NewGray returns a new Gray image with the given bounds.
NewGray16 returns a new Gray16 image with the given bounds.
NewIEEE creates a new hash.Hash32 computing the CRC-32 checksum using the IEEE polynomial.
NewIdentifier is a public method so we can't modify its signature.
NewIdentifier returns a new IdentifierNode with the given identifier name.
NewInput returns an Input from the given path.
NewInt allocates and returns a new Int set to x.
NewInt returns a new Int initialized to x.
NewInterface returns a new interface for the given methods and embedded types.
NewLRUClientSessionCache returns a ClientSessionCache with the given capacity that uses an LRU strategy.
NewLazyDLL creates new LazyDLL associated with DLL file.
NewLexer returns a lexer for the named file and the given link context.
NewLife returns a new Life game state with a random initial state.
NewLineTable returns a new PC/line table corresponding to the encoded data.
NewListener creates a Listener which accepts connections from an inner Listener and wraps each connection with Server.
NewLogger creates a log.Logger whose output is written to the system log service with the specified priority.
NewMap returns a new map for the given key and element types.
NewMethodSet returns the method set for the given type T.
NewNRGBA returns a new NRGBA image with the given bounds.
NewNRGBA64 returns a new NRGBA64 image with the given bounds.
NewNYCbCrA returns a new NYCbCrA image with the given bounds and subsample ratio.
NewNamed returns a new named type for the given type name, underlying type, and associated methods.
NewOFB returns a Stream that encrypts or decrypts using the block cipher b in output feedback mode.
NewObj creates a new object of a given kind and name.
NewPackage creates a new Package node from a set of File nodes.
NewPaletted returns a new Paletted image with the given width, height and palette.
NewPointer returns a new pointer type for the given element (base) type.
NewProc returns a LazyProc for accessing the named procedure in the DLL d.
NewProfile creates a new profile with the given name.
NewProxyClientConn is an artifact of Go's early HTTP implementation.
NewRGBA returns a new RGBA image with the given bounds.
NewRGBA64 returns a new RGBA64 image with the given bounds.
NewRat creates a new Rat with numerator a and denominator b.
NewReadLogger returns a reader that behaves like r except that it logs (using log.Print) each read to standard error, printing the prefix and the hexadecimal data read.
NewReadWriter allocates a new ReadWriter that dispatches to r and w.
NewReader creates a new ReadCloser.
NewReader creates a new Reader reading from r.
NewReader creates a new Reader reading the given reader.
NewReader creates a new io.ReadCloser.
NewReader creates a new multipart Reader reading from r using the given MIME boundary.
NewReader returns a new ReadCloser that can be used to read the uncompressed version of r.
NewReader returns a new Reader reading from b.
NewReader returns a new Reader reading from r, which is assumed to have the given size in bytes.
NewReader returns a new Reader reading from r.
NewReader returns a new Reader reading from s.
NewReader returns a new Reader that reads from r.
NewReader returns a new Reader whose buffer has the default size.
NewReader returns a quoted-printable reader, decoding from r.
NewReader returns an io.Reader which decompresses bzip2 data from r.
NewReaderDict ignores the dictionary if the compressed data does not refer to it.
NewReaderDict is like NewReader but initializes the reader with a preset dictionary.
NewReaderDict is like NewReader but uses a preset dictionary.
NewReaderDict is typically used to read data compressed by NewWriterDict.
NewReaderSize returns a new Reader whose buffer has at least the specified size.
NewRecorder returns an initialized ResponseRecorder.
NewReplacer returns a new Replacer from a list of old, new string pairs.
NewRequest panics on error for ease of use in testing, where a panic is acceptable.
NewRequest returns a Request suitable for use with Client.Do or Transport.RoundTrip.
NewRequest returns a new Request given a method, URL, and optional body.
NewRequest returns a new incoming server Request, suitable for passing to an http.Handler for testing.
NewScanner returns a new Scanner to read from r.
NewScope creates a new scope nested in the outer scope.
NewScope returns a new, empty scope contained in the given parent scope, if any.
NewSectionReader returns a SectionReader that reads from r starting at offset off and stops with EOF after n bytes.
NewServeMux allocates and returns a new ServeMux.
NewServer returns a new Server.
NewServer starts and returns a new Server.
NewServerCodec returns a new rpc.ServerCodec using JSON-RPC on conn.
NewServerConn is an artifact of Go's early HTTP implementation.
NewSignature returns a new function type for the given receiver, parameters, and results, either of which may be nil.
NewSingleHostReverseProxy does not rewrite the Host header.
NewSingleHostReverseProxy returns a new ReverseProxy that routes URLs to the scheme, host, and base path provided in target.
NewSlice returns a new slice type for the given element type.
NewSource returns a new pseudo-random Source seeded with the given value.
NewStruct returns a new struct with the given fields and corresponding field tags.
NewSyscallError returns, as an error, a new SyscallError with the given system call name and error details.
NewTLSServer starts and returns a new Server using TLS.
NewTable decodes the Go symbol table in data, returning an in-memory representation.
NewTicker returns a new Ticker containing a channel that will send the time with a period specified by the duration argument.
NewTimer creates a new Timer that will send the current time on its channel after at least duration d.
NewTripleDESCipher can also be used when EDE2 is required by duplicating the first 8 bytes of the 16-byte key.
NewTripleDESCipher creates and returns a new cipher.Block.
NewTuple returns a new tuple for the given variables.
NewUnstartedServer returns a new Server but doesn't start it.
NewValue returns a new value in the block with no arguments and an aux value.
NewValue returns a new value in the block with no arguments and an auxint value.
NewValue returns a new value in the block with no arguments and both an auxint and aux values.
NewValue0 returns a new value in the block with no arguments and zero aux values.
NewValue1 returns a new value in the block with one argument and zero aux values.
NewValue1A returns a new value in the block with one argument and an aux value.
NewValue1I returns a new value in the block with one argument and an auxint value.
NewValue1IA returns a new value in the block with one argument and both an auxint and aux values.
NewValue2 returns a new value in the block with two arguments and zero aux values.
NewValue2I returns a new value in the block with two arguments and an auxint value.
NewValue3 returns a new value in the block with three arguments and zero aux values.
NewValue3I returns a new value in the block with three arguments and an auxint value.
NewWriteLogger returns a writer that behaves like w except that it logs (using log.Printf) each write to standard error, printing the prefix and the hexadecimal data written.
NewWriter allocates and initializes a new tabwriter.Writer.
NewWriter creates a new Writer writing to w.
NewWriter creates a new Writer.
NewWriter creates a new io.WriteCloser.
NewWriter returns a new Writer compressing data at the given level.
NewWriter returns a new Writer that writes to w.
NewWriter returns a new Writer whose buffer has the default size.
NewWriter returns a new Writer writing a zip file to w.
NewWriter returns a new Writer writing to w.
NewWriter returns a new Writer.
NewWriter returns a new multipart Writer with a random boundary, writing to w.
NewWriterDict is like NewWriter but initializes the new Writer with a preset dictionary.
NewWriterLevel is like NewWriter but specifies the compression level instead of assuming DefaultCompression.
NewWriterLevelDict is like NewWriterLevel but specifies a dictionary to compress with.
NewWriterSize returns a new Writer whose buffer has at least the specified size.
NewYCbCr returns a new YCbCr image with the given bounds and subsample ratio.
NewZipf returns a Zipf variate generator.
New_Tai_Lue is the set of Unicode characters in script New_Tai_Lue.
Newline must be next.
Newline separates break from call.
Newlines and commas may be included in a quoted-field
Newlines are special, though: newlines in the format must match those in the input and vice versa.
Newlines count as space.
Newlines in the input must match newlines in the format.
Next GC is after we've allocated an extra amount of memory proportional to the amount already in use.
Next advances to the next entry in the tar archive.
Next and previous pointers in the doubly-linked list of elements.
Next byte must be space or right angle bracket.
Next continues the authentication.
Next file has a long name
Next file symlinks to a file w/ a long name
Next is called to populate the next row of data into the provided slice.
Next iteration of for loop must scan all the directories again.
Next let the kernel choose the address.
Next look check equalities.
Next operand is the frame and arg size.
Next operand is the optional flag, a literal integer.
Next operand is the optional text flag, a literal integer.
Next prepares the next result row for reading with the Scan method.
Next reads and returns the next Unicode character.
Next reads the next Entry from the type unit.
Next reads the next entry from the encoded entry stream.
Next reports whether there are more iterations to execute.
Next returns a slice containing the next n bytes from the buffer, advancing the buffer as if the bytes had been returned by Read.
Next returns frame information for the next caller.
Next returns the next directory in the scan.
Next returns the next field or method, if any.
Next returns the next id for a request/response pair.
Next returns the next list element or nil.
Next returns the next ring element.
Next returns the next token.
Next returns the state of the specified cell at the next time step.
Next sets *entry to the next row in this line table and moves to the next row.
Next should return io.EOF when there are no more rows.
Next step in the decompression, and decompression state.
Next thing mustn't be alphanumeric.
Next three fields used by regalloc and/or aid in computation of inner-ness and list of blocks.
Next we ask for a zero value
Next will advance to zero.
Next, cgo must learn the details of each type, variable, function, or constant.
Next, cgo needs to identify the kinds for each identifier.
NextPart returns the next part in the multipart or an error.
NextProtoTLS is the NPN/ALPN protocol negotiated during HTTP/2's TLS setup.
NextProtos is a list of supported, application level protocols.
Nextafter returns the next representable float64 value after x towards y.
Nextafter32 returns the next representable float32 value after x towards y.
Nil channel send, receive to keep compiler from optimizing select.
Nil checks take care of this.
Nil interface values in if.
Nil represents the predeclared value nil.
Nil vs empty: not the same.
NilNode holds the special identifier 'nil' representing an untyped nil constant.
NilNode is handled in evalArg, the only place that calls here.
Nko is the set of Unicode characters in script Nko.
Nl is the set of Unicode characters in category Nl.
Nm lists the symbols defined or used by an object file, archive, or executable.
Nname returns the associated function's nname.
Nname sets the associated function's nname.
No '_' allowed here (in contrast to package net).
No .git or other dot nonsense please.
No C++, nothing to demangle.
No CSI structure available
No Content-Length or Chunked in response to a HEAD request
No OGE for floats, because it mishandles NaN.
No OLE for floats, because it mishandles NaN.
No Perl on Windows, needed by test.cgi TODO: make the child process be Go, not Perl.
No UTF-8 or non-ASCII allowed in tokens.
No actual concurrency, just threads and synchronization and foreign code on multiple pthreads.
No actual copy will be generated, so emit an explicit nil check.
No additional subtraction is required or appropriate.
No addresses to symbolize.
No aggregation for raw profiles.
No answers from addr2line
No architecture rounds function entries to more than 16 bytes, but if one came along we'd need to subtract more here.
No argument left over to print for the current verb.
No attempt at translation: would enable calls directly between worlds, but we need to moderate those.
No attempt is made to check for existing files.
No base prefix (such as "0x") is added to the string.
No body for convenience.
No buffer space available
No byte slice present.
No characters matched.
No code can go here - the C return register has been set and must not be clobbered.
No comment about exported method.
No comment for constant block.
No comment for first entry in constant block.
No comment for first entry in variable block.
No comment for internal function.
No comment for simple constant.
No comment for single constant.
No comment for single variable.
No comment for variable block.
No completion message will follow, so return immediately.
No complex numbers though.
No critical edge is introduced because b will have one successor.
No current file, so no bytes
No data (for no delay io)
No data descriptor signature.
No database drivers are included in the Go standard library.
No definition for macro
No domain attribute in the SetCookie header indicates a host cookie.
No dynamic scoping: template invocations inherit no variables.
No easy way of making sure it's a *testing.T or *testing.B: ensure the name of the type matches.
No error expected, unless the pixels are beyond the 2 color palette.
No exec facility on Android or iOS.
No explicit name, so use type if we can find one.
No extra-escaping needed for raw text content.
No false positives wanted.
No final separator please.
No folding specified.
No fractional second in the layout but we have one in the input.
No grounds to disqualify.
No guarantees about overflow.
No guarantees are given for the left-hand side.
No header has been sent.
No indication or error is given if the input ends without a final line end.
No induction variable is possible because i will overflow a first iteration.
No internal constants.
No internal functions.
No internal variables.
No is the set of Unicode characters in category No.
No line of stars present.
No line tables available.
No locals information, dump everything.
No locals used at all
No lock needs to be held.
No locking needed because it is per-thread (per-P).
No locks need to be held.
No longer a phi, stop optimizing here.
No luck yet, but if this is a base type (non-pointer), the pointer might satisfy.
No mapping for Go's ModeTemporary (plan9 only).
No medium (in tape drive)
No message of desired type
No more PPARAM processing, but keep going for PPARAMOUT.
No more allocation or calls of non-assembly functions.
No more dependencies.
No more desired registers for this value.
No more frames for this PC.
No more possible pointers.
No more workers are need right now.
No need to add -dynlink even if linkshared if we're just checking for errors...
No need to allocate an extra buffer.
No need to avoid re-genning ninit.
No need to check for errors: if it fails, Transport won't reuse it anyway.
No need to do more here.
No need to keep a full record of the handshake if client certificates won't be used.
No need to parse more at the moment.
No need to print them out here.
No new work was discovered.
No newline at the end of this comment.
No newline at the end of this file.
No one will care about these cases.
No operands to take care of.
No other code should treat an encoder as an io.Writer.
No other goroutine is affected.
No other validation is performed.
No other values for Err are defined.
No padding bytes needed.
No parts (empty form as submitted by Chrome)
No permanent install target.
No point in checking the error return from Wait--we expect it to fail.
No point in doing anything here.
No public interface is provided.
No pushtype allowed here.
No range contains U+FFFF as an instance, so split the range into two entries.
No ranges were identified
No real special cases here, because no values come back
No record locks available
No register allocation required (or none specified yet)
No register is available.
No runtime test, just make sure that typedef and struct/union/class are interchangeable at compile time.
No scanning of objects (making them black) can happen until all Ps have enabled the write barrier, but that already happened in the transition to GCscan.
No second entry in constant block.
No second entry in variable block.
No semicolon is present for the labeled statements and because the last token is a colon ":", no semicolon is inserted automatically.
No signatures of the handshake are needed in a resumption.
No sniffing, but will count the Content-Length.
No space left on device
No spaces, must end in 'i'.
No special cases for these, they are handled by the general code after the switch.
No special code is required in the mutator to record stack unwinding and the trampoline is only a few assembly instructions.
No stack guards are present and the GC has not been initialized, so write barriers will fail.
No stack splits between assigning elem and enqueuing mysg on gp.waiting where copystack can find it.
No stack splits between assigning elem and enqueuing sg on gp.waiting where copystack can find it.
No subsampling for grayscale image.
No such device or address
No such file or directory
No such host or network path
No support for build ID.
No support for shared libraries.
No temporary for blank assignment.
No time zone known for this time, but we must print one.
No timers left - put goroutine to sleep.
No two architectures agree.
No unescaping inside.
No unexported constant.
No unexported embedded field.
No unexported method.
No unexported typed constant.
No unexported variable.
No unicode normalization is performed.
No useful information from symbolizer.
No work if no assembly files.
No work to be done right now.
No write barrier for implicit zeroing.
No write barrier for storing address of global, which is live no matter what.
No write barrier for storing address of stack values, which are guaranteed only to be written to the stack.
No write barrier for storing global function, which is live no matter what.
No write barrier for storing static (read-only) data.
No write barrier for write of non-pointers.
No write barrier for write to stack.
No write barrier for zeroing or initialization to constant.
NoGoError is the error used by Import to describe a directory containing no buildable Go source files.
NoObjTool returns a trivial implementation of the ObjTool interface.
NoPos is always smaller than any other Pos value.
Nobody cares about the credit.
NodSym makes a Node with Op op and with the Left field set to left and the Sym field set to sym.
Node does not modify node.
Node formats node in canonical gofmt style and writes the result to dst.
Node is the node that caused the problem, if known.
Node n5 has no children and so has zero prefix, next and table fields.
NodeType identifies the type of a parse tree node.
Nodes is a pointer to a slice of *Node.
Nodes may be marked for cycle detection.
Nodes may contain additional position info for language constructs where comments may be found between parts of the construct (typically any larger, parenthesized subpart).
Nodes n0, n1 and n4 (marked with a trailing "-") are partial keys, and nodes n2, n3, n5, n6 and n7 (marked with a trailing "+") are complete keys.
Non-ASCII cases below.
Non-ASCII or anything with spaces or non-token chars is unchanged:
Non-ASCII special cases.
Non-ELF binary formats are not always flexible enough to give us a place to put the Go build ID.
Non-Linux systems take a long time to figure out that there is nothing listening on localhost.
Non-addressable value receiver.
Non-autos sort on offset.
Non-blocking send of time on c.
Non-booleans must have a value.
Non-composite types of equal kind have same underlying type (the predefined instance of the type).
Non-constant shifts should succeed.
Non-constant untyped string values are not permitted by the spec and should not occur.
Non-constant untyped values may appear as the result of comparisons (untyped bool), intermediate (delayed-checked) rhs operands of shifts, and as the value nil.
Non-constants (see also const5.go).
Non-curried method of type.
Non-empty interfaces.
Non-encoder to GobDecoder: error
Non-escaping result of intstring.
Non-exported fields and methods of exported types are stripped.
Non-fatal: we are doing a recursive walk and there may be other directories.
Non-forward gotos have already been checked.
Non-letters with case.
Non-literal codes decode to a sequence of suffixes that are first written right-to-left from the end of the buffer before being copied to the start of the buffer.
Non-main packages are ignored.
Non-nil func value points at data block.
Non-operators have lowest precedence, followed by operators starting with precedence 1 up to unary operators.
Non-pointer fields are all encoded as integer or string values.
Non-preemptible because it is used by write barriers.
Non-premultiplied alpha.
Non-standard expectations are failures
Non-standard or deprecated.
Non-zero-length trailing IDAT chunks should be ignored (recoverable error).
NonceSize returns the size of the nonce that must be passed to Seal and Open.
Noncharacter_Code_Point is the set of Unicode characters with property Noncharacter_Code_Point.
None are allocated on heap, so we can use obj.NOPTR.
None of the Go runtime is initialized.
None of the error codes make sense for the query we sent.
None of the functions may call back into Go.
None of the tests are intensive, so don't bother trying to manually adjust for slow builders.
None of those are valid UTF-8 sequences, and they are otherwise as far away from ff (likely a common byte) as possible.
Noon is 12PM, midnight is 12AM.
Noop ensures that the Go runtime is initialized.
Noopt builds have a larger stackguard.
NopCloser returns a ReadCloser with a no-op Close method wrapping the provided Reader r.
Nope, we'd overshoot the utilization goal
NormFloat64 values have an average of 0 and a standard deviation of 1.
Normal 100-continues, case-insensitive.
Normal STEXT symbols are emitted by walking textp.
Normal case is base-8 (octal) format.
Normal distribution tests
Normal equality suffices
Normal path, for a driver.Stmt that is not a ColumnConverter.
Normal request, without NPN.
Normal traceback is impossible or has failed.
Normalize month, overflowing into year.
Normalize normalizes f so that the highest bit of the mantissa is set, and returns the number by which the mantissa was left-shifted.
Normalize nsec, sec, min, hour, overflowing into day.
Normally Chan's underlying value must be a channel and Send must be a zero Value.
Normally Chan's underlying value must be a channel, and Send's underlying value must be assignable to the channel's element type.
Normally cgo translates void* to unsafe.Pointer, but for historical reasons -godefs uses *byte instead.
Normally enc and dec would be bound to network connections and the encoder and decoder would run in different processes.
Normally name is stored in sh.Name, but if it is longer then 8 characters, it is stored in COFF string table st instead.
Normally name is stored in sym.Name, but if it is longer then 8 characters, it is stored in COFF string table st instead.
Normally the enforced limit on pointer maps is 16 bytes, but larger ones are acceptable, 33 bytes isn't too too big, and it's easier to generate a pointer bitmap than a GC program.
Normally the signal goes to the C thread, the Go signal handler picks it up, sees that it is running in a C thread, and the program dies.
Normally these keys are used in OpenKey to open new keys, but they can also be used anywhere a Key is required.
Normally this will be a Go type, but there are a few other pseudo-types, see type.go.
Normally we let cgo use the C library resolver instead of depending on our lookup code, so that Go and C get the same answers.
Normally we shy away from making implicit arguments explicit, following the Intel manuals, but adding the arguments seems the best way to express the effect of the segment override prefixes.
Normally we'd do syscall.SetsockoptInt(fd.sysfd, syscall.IPPROTO_TCP, syscall.TCP_KEEPINTVL, secs) here, but we can't because Solaris does not have TCP_KEEPINTVL.
Normally, a Reader returns an error (typically EOF) from the first Read call after the last piece of data is read.
Not JS escaped but HTML escaped.
Not a PAX format GNU sparse file.
Not a beginning of a block, consult span table to find the block beginning.
Not a binary operator, but parsed as one so we can give a good error message when used in an expression context.
Not a block: sorted by default.
Not a recognized induction variable.
Not a valid top level HTML template.
Not all Go types can be mapped to C types in a useful way.
Not all bits apply to all systems.
Not all cgocallback_gofunc frames are actually cgocallback_gofunc, so not all have these arguments.
Not all databases support this feature, and the syntax of such statements varies.
Not all flags may be implemented on a given system.
Not all implementations of RoundTripper may support Cancel.
Not all io.Seeker can actually Seek.
Not all methods apply to all kinds of types.
Not all methods apply to all kinds of values.
Not all names are possible (e.g., we'll never generate convE2E or convE2I).
Not all projects can follow these conventions, however.
Not all sec values have a corresponding time value.
Not all systems make the data section non-executable.
Not all systems support a separate read-only non-executable data section.
Not all types of dials support cancelation.
Not all, though: there are some variadic functions in package runtime and reflect, and for those we use call-specific metadata recorded by f's caller.
Not allowed to let sequence number wrap.
Not an exact science: use size of binary plus some room for thread stacks.
Not an import declaration, so we're done.
Not as efficient as it could be because Timespec and Timeval have different types in the different OSes
Not available with tcmalloc.
Not buffering lets the output appear as it is printed instead of once the command exits.
Not covering this file.
Not even worth sorting
Not even worth sorting.
Not every database or database driver may support this.
Not exported, so R does not work with gob.
Not faking that as the return address will make the trace look like a call to sigpanic instead.
Not from the spec, but logically belongs here
Not having a type is an error.
Not in PECOFF v8 spec
Not in cache, lock and retry.
Not intended to fire.
Not likely enough to bother.
Not necessarily sent to user yet.
Not necessary during mark term, but harmless.
Not needed, but it's a flush.
Not part of httptest.Server's correctness, but assume most users of httptest.Server will be using the standard transport, so help them out and close any idle connections for them.
Not pushing that onto sp will make the trace look like a call to runtime.sigpanic instead.
Not quoting the empty string also makes this package match the behavior of Microsoft Excel and Google Drive.
Not really a problem, but be consistent.
Not really a test of this package, but the assumption is used here and it's good to verify
Not really directories, but since we use this trick in ServeFile, test it:
Not referring to a variable
Not registers, but flags that can be combined with regular register constants to indicate extended register conversion.
Not related to our zip performance, since the test above disabled CRC32 and flate.
Not strictly a go1 compat issue, but in practice it probably is.
Not sure how to get the info we want from PE header.
Not sure if this import is used - err on the side of caution.
Not sure it's useful and may even be bad but it works and it's hard to prevent without exposing the contents of the object, which would defeat the purpose.
Not sure what is correct.
Not sure yet whether this is the real iota, but make a copy of the Node* just in case, so that all the copies of this const definition don't have the same iota value.
Not used by the zip code.
Not used if proxy + http targetScheme (4th example in table)
Not using sort.Search to avoid dependencies.
Not vendoring, or we already found the vendored path.
Not worth doing until there's a clear need.
Not worth it: this is almost always an error.
Not worth the risk right now.
NotAuthorizedToSign results when a certificate is signed by another which isn't marked as a CA certificate.
NotFound replies to the request with an HTTP 404 not found error.
NotFoundHandler returns a simple request handler that replies to each request with a ``404 page not found'' reply.
NotNull is a type that implements ValueConverter by disallowing nil values but otherwise delegating to another ValueConverter.
Notable divergences: Obsolete address formats are not parsed, including addresses with embedded route information.
Notably: the handler does not call rw.Header().
Note T2 is not defined
Note companion strict_param1 checks *struct function parameters with similar tests.
Note companion strict_param2 checks struct function parameters with similar tests.
Note if dst is marked as escaping, then "returned" is too weak.
Note stats for non-innermost loops are slightly flawed because they don't account for inner loop exits that span multiple levels.
Note that *os.File implements the io.ReadSeeker interface.
Note that -parallel only applies within a single test binary.
Note that -w is also a square root of z.
Note that 8g has Bgen_float and is handled above.
Note that DWARF line tables only permit sequential, forward scans.
Note that FIPS 186-3 section 4.6 specifies that the hash should be truncated to the byte-length of the subgroup.
Note that Init may call err if there is an error in the first character of the file.
Note that IsNil is not always equivalent to a regular comparison with nil in Go.
Note that LOCALDOMAIN can change behavior merely by being specified with the empty string.
Note that Linux doesn't support IPv4 over IPv6 tunneling.
Note that Push and Pop in this interface are for package heap's implementation to call.
Note that SFiles are okay (they go to the Go assembler) and HFiles are okay (they might be used by the SFiles).
Note that TFUNC's Width is Widthptr.
Note that a certificate name can be of the form '*.example.com' and so doesn't have to be a domain name as such.
Note that a double inversion is a no-op, so inversions might be implicit in the code below.
Note that all this complexity does not apply to global run queue as we are not sloppy about thread unparking when submitting to global queue.
Note that because walkswitch will rewrite some of the switch into a binary search, this is not as easy as it looks.
Note that before Go 1.5 this option took two separate arguments.
Note that both conversions must appear in the same expression, with only the intervening arithmetic between them:
Note that calls with a positive delta that occur when the counter is zero must happen before a Wait.
Note that ch is different on each iteration.
Note that even for ResponseWriters that support Flush, if the client is connected through an HTTP proxy, the buffered data may not reach the client until the response completes.
Note that even though package-level functions are declared in the package scope, the function scopes are embedded in the file scope of the file containing the function declaration.
Note that even though the second argument is b, the effective rectangle is smaller due to clipping.
Note that for some of the uses we expect useful data back on standard error, but for those uses gcc must still exit 0.
Note that forward does not modify h.
Note that go generate does not parse the file, so lines that look like directives in comments or multiline strings will be treated as directives.
Note that gp's stack scan is now "valid" because it has no stack.
Note that gp.gcAssistBytes is negative because gp is in debt.
Note that hashed must be the result of hashing the input message using the given hash function.
Note that heap sampling uses randomization, so the results vary for run to run.
Note that if buf.Bytes() is non-empty, the caller usually shows buf.Bytes() and does not print err at all, so the prefix here does not make most output any more verbose.
Note that if the session key is too small then it may be possible for an attacker to brute-force it.
Note that if we have decoding problems for other reasons, we return 1 instead of 0.
Note that inst has been passed by value and contains no pointers, so any changes we make here are local and will not propagate back out to the caller.
Note that it can call the less functions twice per call.
Note that it is explicitly okay to have write barriers in this function because completion of concurrent mark is best-effort anyway.
Note that it is not sufficient to simply compare file offsets because the offsets do not reflect modified line information (through //line comments).
Note that it is valid for the length to be greater than the distance.
Note that madvise will return EINVAL if the flag is already set, which is quite likely.
Note that main() swaps level 0 and 1, making 1 the default and -l disable.
Note that name might not contain "..", for example if code (still incorrectly) used filepath.Join(myDir, r.URL.Path).
Note that next does not modify h.
Note that not all of these signals are available on all systems.
Note that obj.Parent() may be different from the returned scope if the object was inserted into the scope and already had a parent at that time (see Insert, below).
Note that ptrmask describes only a prefix of
Note that r.Max is an exclusive bound for r, so that r.In(s) does not require that r.Max.In(s).
Note that runes may fit into more than one range.
Note that schedule is assembled backwards.
Note that setting this field means that your program may not execute properly or even compile on some operating systems.
Note that some operating systems never admit this option.
Note that sometimes we use a lowercase //sys name and wrap it in our own nicer implementation, either here or in syscall_bsd.go or syscall_unix.go.
Note that sometimes we use a lowercase //sys name and wrap it in our own nicer implementation, either here or in syscall_solaris.go or syscall_unix.go.
Note that sometimes we use a lowercase //sys name and wrap it in our own nicer implementation.
Note that strings are not unique identifiers for types: there can be more than one with a given string.
Note that strings.ToUpper and strings.ToLower have the desired property in some corner cases.
Note that tcmalloc doesn't provide all allocated memory, only in-use stats.
Note that terminating "vendor" elements don't count: "x/vendor" is its own package, not the vendored copy of an import "" (the empty import path).
Note that text/scanner reports the position at the end of the token.
Note that the GNU manual says that numeric values should be encoded in octal format.
Note that the HTML5 list is larger than the HTML4 list at http://www.w3.org/TR/html4/sgml/entities.html
Note that the RFC822, RFC850, and RFC1123 formats should be applied only to local times.
Note that the arguments are for "gcc", not "ld".
Note that the examples in this package assume a Unix system.
Note that the first and last line are never empty (they contain the opening /* and closing */ respectively) and thus they can be ignored by the blank line check.
Note that the implements of Arg that follow are all sized so that on a 64-bit machine the data can be inlined in the interface value instead of requiring an allocation.
Note that the increment is done even if tracing is not enabled, because tracing can be enabled in the middle of syscall.
Note that the net/http package does StateNew and StateClosed for us.
Note that the output has a trailing zero.
Note that the pre-SSA implementation does the entire calculation in wide format, so wide is compatible.
Note that the shell tries all possible file extensions in a specific directory before moving on to search the next directory (if there is one).
Note that the tool does not check every possible problem and depends on unreliable heuristics so it should be used as guidance only, not as a firm indicator of program correctness.
Note that the value of scalar must be less than the order of the group.
Note that there can be spinning threads during all states - they do not affect mutex's state.
Note that there is no list of names as there is for 386 and amd64.
Note that there is no list of names as there is for x86.
Note that there may still be pointers in other gcWork instances or other caches.
Note that these are byte sequences, so they must be reversed from the usual word presentation.
Note that these are truncated on 32-bit systems, so the bottom 32 bits of the larger addresses must themselves be invalid addresses.
Note that this code has to be aware of the representation underlying Recvs/Results/Params.
Note that this does *not* get woken up when more work is added to the work list.
Note that this example is simplistic in that it omits any authentication of the encrypted data.
Note that this file name is only used in the Go command's temporary directory.
Note that this flag is defined in export_test.go and is not available to ordinary imports of runtime.
Note that this function does not handle P+P, infinity+P nor P+infinity correctly.
Note that this function still works properly even when sparse files are being used since numBytes returns the bytes remaining in the underlying io.Reader.
Note that this handles both renamed imports and imports of packages containing unconventional package declarations.
Note that this is a static map computed before allocation occurs.
Note that this is not an implementation of error, so it cannot escape from the package as an error value.
Note that this is not generating the same insn as the other cases.
Note that this is not generating the same insns as the other cases.
Note that this isn't string safe, so it will truncate lines with // inside strings.
Note that this means the result of calling UnixNano on the zero Time is undefined.
Note that this needs OpenSSL 1.0.2 because that is the first version that supports the -alpn flag.
Note that this needs OpenSSL 1.0.2 because that is the first version that supports the -serverinfo flag.
Note that this uses / always, even on Windows, because Go import paths always use forward slashes.
Note that using CGI means starting a new process to handle each request, which is typically less efficient than using a long-running server.
Note that using this means that the test must not be run in parallel with any other tests.
Note that valid Go programs cannot contain tabwriter.Escape bytes since they do not appear in legal UTF-8 sequences.
Note that we allow any one- or two-digit day here.
Note that we always check the second word because that's where 0xdeaddeaddeaddead is written.
Note that we are not calling cleanClass.
Note that we are using codegen both as a temporary variable for holding a copy of the frequencies, and as the place where we put the result.
Note that we can (and do) add arbitrary attributes to a DIE, but only the ones actually listed in the Abbrev will be written out.
Note that we currently count allocations during GC as both scannable heap (heap_scan) and scan work completed (scanWork), so this difference won't be changed by allocations during GC.
Note that we do this phase after startRegs is set above, so that we get the right behavior for a block which branches to itself.
Note that we don't make one giant routine because it is too big for some compilers.
Note that we don't print any argument information here, not even parentheses.
Note that we don't request this for HEAD requests, due to a bug in nginx: http://trac.nginx.org/nginx/ticket/358 https://golang.org/issue/5522
Note that we need to increment the head/tail locations only when raceenabled.
Note that we use a channel send here and not a close.
Note that we're using toggle now, not wtoggle, because we're working on the log directly.
Note that when a signature of a hash of a larger message is needed, the caller is responsible for hashing the larger message and passing the hash (as digest) and the hash function (as opts) to Sign.
Note that whether this function returns an error or not discloses secret information.
Note that work.spans may not include spans that were allocated between entering the scan phase and now.
Note that you can do a lookup in the table even without all bits filled.
Note that, in order to reduce potential errors, ASCII is treated as UTF-8 (i.e. characters greater than 0x7f are not rejected).
Note the last column is double-quoted.
Note the leading comma.
Note there is no such thing as a uint ideal constant in this situation - the value must be of int type.
Note these errors should be independent of the architecture.
Note to implementers: In this package, re is always a *Regexp and r is always a rune.
Note using r.FormValue("readbody") because for POST requests that would read from r.Body, which we only conditionally want to do.
Note width of xxx depends on value of constant bitsPerOutputInTag -- expect 2 or 3, so in practice the tag cache array is 64 or 128 long.
Note, this optimization does not apply to OSLICEARR, because it does introduce a new pointer into b that was not already there (pointer to b itself).
Note: 5c and 5g reg.c know that DIV/MOD smashes R12 so that this return instruction expansion is valid.
Note: An unmodified AST generated by go/parser will already contain a backward- or double-quoted path string that does not contain any invalid characters, and most of the work here is not needed.
Note: Assuming log() return accurate answer, the following algorithm can be used to compute log1p(x) to within a few ULP:
Note: BSD variants allow assigning any IPv4/IPv6 address prefix to IP interface.
Note: Build adheres to certain conventions such as those described by 'go help gopath'.
Note: Called by runtime/pprof in addition to runtime code.
Note: Calling v.CanSet() below is an optimization.
Note: Cannot call syscall.Munmap, because Munmap checks that you are unmapping a whole region returned by Mmap.
Note: Cannot use multiple assignment because evaluation order of LHS is not specified.
Note: CommentGroup.Text() does too much work for what we need and would only replace this innermost loop.
Note: Could use filepath.Walk instead of walkDirs but that wouldn't necessarily be shorter or clearer after adding the code to terminate early for -short tests.
Note: Currently these are only used within the binary export data format.
Note: Eval should not be used instead of running Check to compute types and values, but in addition to Check.
Note: In the original code, funchdr and funcbody are called for all functions (that were not yet imported).
Note: Not calling peek before switch, to avoid putting peek into the standard Decode path.
Note: SBBW and SBBB are subsumed by SBBL
Note: Since gobs can be stored permanently, it is good design to guarantee the encoding used by a GobEncoder is stable as the software evolves.
Note: Sqrt is implemented in assembly on some systems.
Note: The CFDataRef returned in pemRoots must be released (using CFRelease) after we've consumed its content.
Note: The current implementation assumes that Inspect traverses the AST in depth-first and thus _source_ order.
Note: The exclusion of stk.Directive may be wrong but matches what we've done before.
Note: There are two changes in the expression handling here compared to the old yacc/C implementations.
Note: These fields are part of the go command's public API.
Note: These routines perform the read with an unspecified endianness.
Note: This case handles NAME_EXTERN and NAME_STATIC.
Note: This code detects (some) cycles created via pointers but not cycles that are created via slices or maps containing the same slice or map.
Note: This implementation requires 2 shifts most of the time.
Note: This is doing too much work if the precision of z is less than the sum of the precisions of x and y which is often the case (e.g., if all floats have the same precision).
Note: This may not be correct because len may have been redeclared in another file belonging to the same package.
Note: This method takes a value receiver, both for convenience and to make it safe to modify the bits as we process them.
Note: To create arbitrary values for structs, all the fields must be exported.
Note: Until Go 1.5, we had an additional shortcut here.
Note: Windows returns -1, but this file isn't used on Windows anyway, so this empty return path shouldn't be used.
Note: aMCR is defined in this package.
Note: accepting a non-200 OK here, so people can serve a meta import in their http 404 page.
Note: adderrorname looks for this string and adds context about the outer expression
Note: adds new auto to Curfn.Func.Dcl list
Note: all the +1/-1 below could overflow/underflow.
Note: although address of runtime.edata (type SDATA) is at the start of .bss section it still belongs to the .data section, not the .bss section.
Note: assert is only available in self-test mode.
Note: c must be reachable through some other edge.
Note: can take several minutes to run.
Note: can't use rawmem (which avoids zeroing of memory), because then GC can scan uninitialized memory.
Note: checking for the vendor directory before checking for the vendor/path directory helps us hit the isDir cache more often.
Note: copied from x/tools/cmd/cover/html.go
Note: delta must be at least 1 to distinguish the control value use from the first user in a successor block.
Note: doesn't hit network
Note: error message is in byte positions, not token positions.
Note: explicitly using Stderr, as Stdout is our HTTP output.
Note: for a chan int, the return Value must be allocated, so we use a chan *int instead.
Note: if the defer fails to run, we will get a deadlock here
Note: if this reader size is every changed, update TestHandlerBodyClose's assumptions.
Note: if you add a case here, please also update heapdump.go:dumproots.
Note: in order to get the compiler to issue rotl instructions, we need to constant fold the shift amount by hand.
Note: its args might need a stack slot even though the phi itself doesn't.
Note: leave v.Block intact.
Note: load calls loadPackage or loadImport, which push arg onto stk already.
Note: no bitMarker for second word because that's the checkmark.
Note: no res.Body.Close call.
Note: no res.Body.Close is needed here, since the response Content-Length is zero.
Note: no support to https to the proxy yet.
Note: not "range f.NamedValues" above, because that would be nondeterministic.
Note: not actually a test.
Note: not the same as Unicode Z class.
Note: on mips64, we're using the getdents syscall, so the Dirent struct is different.
Note: ownership of ci passes to the *Rows, to be freed with releaseConn.
Note: ownership of dc passes to the *Rows, to be freed with releaseConn.
Note: pointers to int8s
Note: rawExpr (caller of exprInternal) will call check.recordTypeAndValue even though check.typ has already called it.
Note: receiver is already assigned in n.List, so we don't want to set it here.
Note: regalloc generates a not-quite-SSA output.
Note: regalloc introduces non-dominating args.
Note: return the length of the input, not the number of bytes printed by Fprintf, because this must behave like an io.Writer.
Note: runs on g0 stack
Note: see comment in handshake_test.go for details of how the reference tests work.
Note: selectdone is adjusted for stack copies in stack1.go:adjustsudogs
Note: some of the noescape annotations below are technically a lie, but safe in the context of this package.
Note: take the address of x.
Note: the _ field may appear several times.
Note: the argument/return area is adjusted by the callee.
Note: the following condition depends on the lack of critical edges.
Note: the format of the Hmap is encoded in ../../cmd/internal/gc/reflect.go and ../reflect/type.go.
Note: the sleep only increases probility of bug detection, it cannot lead to false failure.
Note: there is one allocation in reflect.recv which seems to be a limitation of escape analysis.
Note: there's a sixth "unordered" outcome for floating-point comparisons, but we don't use such a beast yet.
Note: this flag generator is not properly linked up with the flag users.
Note: this function call is expensive.
Note: this is trickier than it looks.
Note: this one is tricky, as the receiver is not a pointer.
Note: this relies on the assumption (which is true) that Get sends HTTP/1.1 or greater requests.
Note: this should only happen in broken implementations, and the closenotify case should be instantaneous.
Note: ticksStart needs to be set after we emit traceEvGoInSyscall events.
Note: tokens are not ordered well to make this much easier
Note: trace is only available in self-test mode.
Note: using composite literal with Prefix key confuses 'bundle' tool.
Note: we ignore recovers here because Goexit isn't a panic
Note: when a bucket overflows we may end up serializing a type more than once.
Note: without explicit zone, returns time in UTC.
Note: without explicit zone, returns time in given location.
Note: write barrier here, assigning to finc, but should be okay.
Note: writeString is only used to write Go tokens, literals, and comments, all of which must be written literally.
Note: wrote out full expression instead of calling add(p, -n) to reduce the number of temporaries generated by the compiler for this trivial expression during inlining.
Note: wrote out full expression instead of calling add(p, n) to reduce the number of temporaries generated by the compiler for this trivial expression during inlining.
Note: wrote out full expression instead of calling addb(p, 1) to reduce the number of temporaries generated by the compiler for this trivial expression during inlining.
Note: wrote out full expression instead of calling subtractb(p, 1) to reduce the number of temporaries generated by the compiler for this trivial expression during inlining.
Notes are collected in the Package.Notes map indexed by the notes marker.
Notes may start in the middle of a comment group as long as they start at the beginning of an individual comment.
Notes on stable sorting: The used algorithms are simple and provable correct on all input and use only logarithmic additional stack space.
Notes that do not match any pattern can be handled at a higher level by the program but will otherwise be ignored.
Notes that the handler for the given stream ID read n bytes of its body and schedules flow control tokens to be sent.
Notes:  Rounding mode detection omitted.
Notes: - Integer types live in the low portion of registers.
Nothing above could have encountered GC programs: the cases were all too small.
Nothing currently depends on this.
Nothing else is allowed.
Nothing entersyscall calls can split the stack either.
Nothing in the standard library caught the problem, so adding a test.
Nothing is racing with us now, but gcscandone might be set to true left over from an earlier round of stack scanning (we scan twice per GC).
Nothing should use it.
Nothing to do - run of length 0.
Nothing to do for float divisions.
Nothing to do for now, but that may change, depending on what happens with issue 7363.
Nothing to do when probing.
Nothing to negotiate before TLS 1.2.
Nothing useful we can say.
Notice also that this takes place after stack allocation, so the stack allocator does not need to process these malformed flow graphs.
Notice logs a message with severity LOG_NOTICE, ignoring the severity passed to New.
Notifies that the runtime has been initialized.
Notify causes package signal to relay incoming signals to c.
Notify disables the default behavior for a given set of asynchronous signals and instead delivers them over one or more registered channels.
Notify receiver that queue has new bit.
Notify runtime netpoll about starting IO.
Now a field that's not a structure.
Now a verb, possibly prefixed by an index (which we may already have).
Now add  an action containing a string.
Now add is not running anymore, and getprofile owns the entire log.
Now at __.PKGDEF in archive or still at beginning of file.
Now check machine code layout.
Now check that the duplicate field, S, does not appear.
Now check that the stacks are correct.
Now check that we get an address when the name appears in the hosts file.
Now check that we received a slice of Squarers correctly, including a nil element
Now check the volume setting.
Now close the busy connections.
Now come the Submatch cases.
Now come the monster AllSubmatch cases.
Now come the simple All cases.
Now copy the dwarf data into the output.
Now copy to the buffer.
Now do t2 again but without pre-allocated pointers.
Now documented and tested.
Now extract one file.
Now f is a good approximation of the decimal.
Now find data section.
Now follow various tests that decode into things that can't represent the encoded value, all of which should be legal.
Now hitting the 5th host should kick out the first host:
Now if it's a method, it gets the arguments.
Now if the first M touches sel, it will access freed memory.
Now ignore the provided context (which will be canceled) and use a different one to make sure this completes with a valid connection, which we hope to be closed below:
Now insert a copy of the replacement string, but not for a match of the empty string immediately after another match.
Now insert next after curr.
Now instead we do the work whenever we're under or at the utilization work and pay for it by letting the mutator run later.
Now it actually closes the TCP connection.
Now make the previously-timed out handler speak again, which verifies the panic is handled:
Now malloc allocates white (but sweeps spans before use).
Now match up functions and profile blocks.
Now print the constructors.
Now put the batch on global queue.
Now refer to the package, just in case it ends up unused.
Now repeat the whole thing, using a different version of T2.
Now returns the current local time.
Now runtime.a is updated (newer mtime), so everything would look stale if not for being a release.
Now safe to modify j and k even if they alias xlen, xcap.
Now see if the encoder and decoder are in a consistent state.
Now send the inner types
Now set the value under the write lock.
Now sweep everything that is not yet swept.
Now test that switching to an ECDSA key causes the expected error (and not an internal error about a signing failure).
Now test that switching to an RSA key causes the expected error (and not an internal error about a signing failure).
Now test that the ticker stopped
Now test they're visited in sort order.
Now test with a running encoder/decoder pair that we recognize a type mismatch.
Now that all args are in regs, we're ready to issue the value itself.
Now that copyprop is done, remov MOVLQZX R1, R2 if it is dominated by an earlier ADDL/MOVL/etc into R1 that will have already cleared the high bits.
Now that they've read from the unbuffered channel, they're safely out of the select that also waits on this goroutine to die, so we're allowed to exit now if needed (if alive is false)
Now that we have accumulated all the temporaries, clean them.
Now that we have all the name types filled in, scan through the Refs to identify the ones that are trying to do a ,err call.
Now that we have the data symbols, but before we start to assign addresses, record all the necessary dynamic relocations.
Now that we know the actual base, compute heapBits to return to caller.
Now that we know the link mode, trim the dynexp list.
Now that we know the size, get the actual nodes.
Now the transition time info.
Now they are more like standard object files, in that each symbol is defined by an associated memory image (bytes) and a list of relocations to apply during linking.
Now transfer t0 into t1
Now transfer t0 into t2
Now transfer t2 into t0
Now treat same as assignment.
Now try a missing symbol.
Now try again and see if we successfully pick a new connection.
Now try it again after using signal.Notify.
Now try smaller objects.
Now try the other way
Now verify that there are no other open fds.
Now we ask for an error.
Now we assign codes to the symbols, starting with the longest code.
Now we can build up a useful data structure.
Now we can check whether we need to rebuild it.
Now we can figure out the minimum number of digits required.
Now we can perform the inverse BWT and setup the RLE buffer.
Now we can sort by the code so that the left half of each branch are grouped together, recursively.
Now we can start up mark 2 workers.
Now we check the characters.
Now we decode the arrays of code-lengths for each tree.
Now we don't call the user's method during an error.
Now we have defaultMaxIdleConns busy connections.
Now we need to rename all the uses of the import.
Now we need to update the headers.
Now we replicate any zero bits to all the bits in top4AllOnes.
Now we send a type descriptor, which is itself a struct (wireType).
Now we test whether the bottom three limbs are non-zero.
Now we want to know the import path for that directory.
Now write barrier marks and enqueues black, grey, or white to white pointers.
Now, double check under the mutex.
Now, fill in the type portion.
Now, we are calling them only for functions with inlineable bodies.
Null assigns special "don't touch" values to members of d to avoid modifying them during syscall.Wstat.
Null is a type that implements ValueConverter by allowing nil values but otherwise delegating to another ValueConverter.
NullBool implements the Scanner interface so it can be used as a scan destination, similar to NullString.
NullBool represents a bool that may be null.
NullFloat64 implements the Scanner interface so it can be used as a scan destination, similar to NullString.
NullFloat64 represents a float64 that may be null.
NullInt64 implements the Scanner interface so it can be used as a scan destination, similar to NullString.
NullInt64 represents an int64 that may be null.
NullString implements the Scanner interface so it can be used as a scan destination:
NullString represents a string that may be null.
NumBlocks returns an integer larger than the id of any Block in the Func.
NumCPU returns the number of logical CPUs usable by the current process.
NumCgoCall returns the number of cgo calls made by the current process.
NumCgoCall() iterates over allm w/o schedlock, so we need to publish it safely.
NumChildren() returns the number of scopes nested in s.
NumColors is the maximum number of colors used in the image.
NumEmbeddeds returns the number of embedded types in interface t.
NumExplicitMethods returns the number of explicitly declared methods of interface t.
NumField returns a struct type's field count.
NumField returns the number of fields in the struct v.
NumFields returns the number of (named and anonymous fields) in a FieldList.
NumFields returns the number of fields in the struct (including blank and anonymous fields).
NumGoroutine returns the number of goroutines that currently exist.
NumIn returns a function type's input parameter count.
NumInput may also return -1, if the driver doesn't know its number of placeholders.
NumInput returns the number of placeholder parameters.
NumMethod returns the number of interface methods in the type's method set.
NumMethod returns the number of methods in the type's method set.
NumMethod returns the number of methods in the value's method set.
NumMethods returns the number of explicit methods whose receiver is named type t.
NumMethods returns the total number of methods of interface t.
NumOut returns a function type's output parameter count.
NumSizeClasses is that number.
NumSizeClasses was changed, but we cannot change Go struct because of backward compatibility.
NumSubexp returns the number of parenthesized subexpressions in this Regexp.
NumValues returns an integer larger than the id of any Value in the Func.
Number has a floating-point value.
Number has an integral value.
Number has an unsigned integral value.
Number is a pointer to a Number
Number of Values not needing a stack slot
Number of Values sourced to arg slot
Number of Values using a named stack slot
Number of active readers + 10000 * number of active writers.
Number of associated aux entries
Number of autos allocated for stack slots.
Number of bits in page to span calculations (4k pages).
Number of bits to read
Number of blocks in this loop but not within inner loops
Number of bytes skipped via CopyN
Number of bytes skipped via Seek
Number of data bytes to skip
Number of entries in the 16-bit range tables.
Number of entries in the 32-bit range tables.
Number of fold pairs in the exception tables.
Number of goroutine ids to grab from sched.goidgen to local per-P cache at once.
Number of nodelets for alphanumeric labels
Number of nodelets for numeric labels
Number of non-zero literals
Number of objects written of each type.
Number of occurrences of b in s.
Number of orders that get caching.
Number of program header entries.
Number of roots of various root types.
Number of rounds is set by length of expanded key.
Number of section header entries.
Number of self-interferences
Number of values reusing a stack slot
Number the vertices from 1 to n as they are reached during the search.
Number/N is the set of Unicode number characters, category N.
NumberNode holds a number: signed or unsigned integer, float, or complex.
Numbers are translated by reading and writing fixed-size values.
Numbers chosen to examine both sides of powers-of-two boundaries.
Numbers fundamental to the encoding.
Numbers precede div ops.
O'Brien Portions Copyright 2009 The Go Authors.
OAEP is parameterised by a hash function that is used as a random oracle.
OAEPOptions is an interface for passing options to OAEP decryption using the crypto.Decrypter interface.
OBJECT IDENTIFIER An ObjectIdentifier represents an ASN.1 OBJECT IDENTIFIER.
OBLOCK is handled above in a special way.
OBLOCK nodes may be created when importing ODCL nodes - unpack them
OCLOSURE is lowered to OPTRLIT, insert OADDR to account for the additional indirection.
OCSP type Two zero valued uint16s for the two lengths.
OCSPResponse returns the stapled OCSP response from the TLS server, if any.
OCSPStaple contains an optional OCSP response which will be served to clients that request it.
ODCLFIELD embedded type
ODOT, ODOTPTR, and OINDREG use it to indicate offset relative to their base address.
ODOTPTR has already been introduced, so these are the non-pointer ODOT and OINDEX.
OFB (Output Feedback) Mode.
OFB AES test vectors.
OFB mode is the same for both encryption and decryption, so we can also decrypt that ciphertext with NewOFB.
OIDs for signature algorithms
OK "Test" on its own is considered a test.
OK because f is not mentioned later in the function.
OK because first char after "Test" is Uppercase.
OK because is package-level.
OK because it doesn't start with "Test".
OK because it doesn't take a *testing.T
OK because it has a receiver.
OK because it takes no parameters.
OK because it takes too many names.
OK because it takes too many parameters.
OK because non-test package was excluded.
OK because refers to known method with valid suffix.
OK because refers to known method.
OK because refers to known top-level type.
OK because refers to suffix annotation.
OK because refers to top-level identifier.
OK because the first char after "Test" is Uppercase.
OK f may alter i as a side effect
OK f might have side effects
OK for now, see issue 7363
OK indicates the lack of an error.
OK subsequent receives may yield different values
OK to have multiple instances
OK to just drop nmspinning here, startTheWorld will unpark threads as necessary.
OK we could catch this case, but it's not worth the code
OK: obviously intentional idiomatic redeclaration
ONAME func param with PHEAP
ONAME nodes on the left side of an OKEY within an OSTRUCTLIT use it to store the named field's offset.
ONAME substitute while inlining
ONAMEs and named OLITERALs have the line number of the decl, not the use.
OP stack pop and store
OPACK nodes are never valid in const value declarations, but allow them like any other declared symbol to avoid crashing (golang.org/issue/11361).
OPARAM node referring to stack copy of param ONAME PPARAM
OP_SRR will use only the low 5 bits of the shift value
OR: write barrier needed and source is on stack.
ORL avoids partial register write and is smaller than ORQ, used by old compiler
OS X 10.6 does not work with clang either, but OS X 10.9 requires it.
OS X 10.7 and earlier don't support this option
OS X 10.9.2 mishandles the malformed address case, making it look like a user-generated signal (like someone ran kill -SEGV ourpid).
OS X and Linux differ on whether unlink(dir) returns EISDIR, so can't use that.
OS X and Plan 9 do not.
OS X core dumps are linear dumps of the mapped memory, from the first virtual byte to the last, with zeros in the gaps.
OS X linker requires compilation dir or absolute path in comp unit name to output debug info.
OS X sets TMPDIR to a symbolic link.
OS X system constants - offset from 0(GS) to our TLS.
OS X will leave the pc just after the INT 3 instruction.
OS X will leave the pc just after the instruction.
OS enables basic operating system functionality, but not direct use of package syscall, nor os/signal.
OS-specific path list separator
OS-specific path separator
OS-specific processing required.
OS-specific restrictions may apply when oldpath and newpath are in different directories.
OS-specific semantics.
OSELECT does not fall through if we're calling selectgo.
OXCASE and OXFALL use it to validate the use of fallthrough.
OXXX nodes don't count.
O_APPEND is emulated on Plan 9
ObjKind describes what an object represents.
Objdump disassembles executable files.
Objdump prints a disassembly of all text symbols (code) in the binary.
Object specific flag values.
ObjectOf returns the object denoted by the specified id, or nil if not found.
ObjectString returns the string form of obj.
Objects exported in phase 1 (compiler-indendepent objects) are by definition only the objects from the current package and not pulled in via inlined function bodies.
Objects may be inserted and looked up by name.
Objects obtained from tiny allocator must not be freed explicitly.
Objects with finalizers have two GC-related invariants:
Objects with names containing blanks are internal and not entered into a scope.
Observe how the b's and the d's, despite appearing in the second cell of each line, belong to different columns.
Observe that the third line has no trailing tab, so its final cell is not part of an aligned column.
Obtain the function value itself (likely nil) as a reflect.Value so that we can query its type and then set the value.
Obvious overflow/underflow.
Obvious parsing errors involving literal values are detected here.
Obviously, negative widths and heights are invalid.
Of all possible inputs, the random bytes have the least amount of substring repetition, and the repeated bytes have the most.
Of the asynchronous signals, the SIGHUP signal is sent when a program loses its controlling terminal.
Officially we don't need to do this, but let's be extra careful: Scanner is for safe, simple jobs.
Offset 0 can be used to denote the first entry.
Offset fits in sign-extended 32 bits.
Offset fits in zero-extended 32 bits in a 32-bit instruction.
Offset in bytes to next verdaux entry
Offset in bytes to next verdef entry
Offset in bytes to verdaux array
Offset in static TLS block
Offset to signature type within data.
Offsetof returns the offset within the struct of the field represented by x, which must be of the form structValue.field.
Offsets and sizes of the debug_* sections in the cout file.
Offsets to convert between internal and absolute or Unix times.
Offsetsof must implement the offset guarantees required by the spec.
Offsetsof returns the offsets of the given struct fields, in bytes.
Often, more information is available within the error.
Ogham is the set of Unicode characters in script Ogham.
Oh, guess there is data in this Body Reader after all.
Ok once we've seen a letter.
Ok: Rat(0) is equivalent to both +/- float64(0).
Okay - might be new(T)
Okay to round down (truncate) if lower has a different digit or if lower is inclusive and is exactly the result of rounding down (i.e., and we have reached the final digit of lower).
Okay to round up if upper has a different digit and either upper is inclusive or upper is bigger than the result of rounding up.
Okay to use and discard buffered reader here, because TLS server will not speak until spoken to.
Ol_Chiki is the set of Unicode characters in script Ol_Chiki.
Old binaries may have an upper bound instead.
Old tags should not be removed.
Old_Hungarian is the set of Unicode characters in script Old_Hungarian.
Old_Italic is the set of Unicode characters in script Old_Italic.
Old_North_Arabian is the set of Unicode characters in script Old_North_Arabian.
Old_Permic is the set of Unicode characters in script Old_Permic.
Old_Persian is the set of Unicode characters in script Old_Persian.
Old_South_Arabian is the set of Unicode characters in script Old_South_Arabian.
Old_Turkic is the set of Unicode characters in script Old_Turkic.
Omit trailing zeros up to and including decimal point.
Omitting N bytes ...' message, then the ring buffer suffix, and just rearrange the ring buffer suffix when Bytes() is called, but it doesn't seem worth it for now just for error messages.
On 32-bit Linux systems, the fcntl syscall that matches Go's Flock_t type is SYS_FCNTL64, not SYS_FCNTL.
On 32-bit arches we don't want to test types that are over 4GB large.
On 32-bit machines clear the bit for the unused second word.
On 32-bit systems it is possible for C's allocated memory to have addresses between arena_start and arena_used.
On 32-bit systems, the max alignment is 32-bit, and the overflow pointer will add another 32-bit field, and the struct will end with no padding.
On 32-bit systems, the stored uint64 has a 32-bit pointer and 32-bit count.
On 32-bit, however, this is the 8-byte block, the smallest one.
On 32-bit, once the reservation is gone we can try to get memory at a location chosen by the OS and hope that it is in the range we allocated bitmap for.
On 32-bit, we don't bother limiting anything, so we use the full 32-bit address.
On 386 PC-relative addressing (for non-call/jmp instructions) assumes that the previous instruction loaded the PC of the end of that instruction into CX, so the adjustment is relative to that.
On 386, R_GOTPCREL makes the same assumptions as R_PCREL.
On 386, stack frame is three words, plus caller PC.
On 64-bit systems, the max alignment is 64-bit, and the overflow pointer will add another 64-bit field, and the struct will end with no padding.
On 64-bit, people with ulimit -v set complain if we reserve too much address space.
On 64-bit, that means the actual object must be two pointers, or else we'd have used the one-pointer-sized block.
On 64-bit, we don't actually have v reserved, so tread carefully.
On AMD64, virtual addresses are 48-bit numbers sign extended to 64.
On ARM and 386, a 64-bit divide invokes a general software routine that needs more stack than we can afford.
On ARM, the GNU linker will generate COPY relocations even with -znocopyreloc set.
On ARM, the update of g must be made in two places (in R10 and also in a TLS slot), so the delayed update would need to be the SP update.
On ARM64, the GNU linker will fail instead of generating COPY relocations.
On Close it sends RST_STREAM if EOF wasn't already seen.
On Darwin, multiple connect system calls on a non-blocking socket never harm SO_ERROR.
On DragonFly BSD, we adjust the ephemeral port range because unlike other BSD systems its default port range doesn't conform to IANA recommendation as described in RFC 6056 and is pretty narrow.
On DragonFly BSD, we expect the kernel version of node under test to be greater than or equal to 4.4.
On DragonFly a thread created by pthread_create inherits the signal stack of the creating thread.
On FreeBSD 64-bit architectures, the 32-bit linker looks for different environment variables.
On FreeBSD, cannot be larger than a page.
On GNU systems, we can arrange for the dynamic linker to mprotect sections after relocations are applied by giving them write permissions in the object file and calling them ".data.rel.ro.FOO".
On I/O error or EOF, it records the error but returns byte 0.
On LR machines, SP will be above savedLRPtr by some frame size.
On LR machines, if there is a stack barrier on the return from the frame containing sp, this will mark it as hit even though it isn't, but it's okay to be conservative.
On Linux and the BSDs (and probably Solaris), profiling signals are only generated when a process completes a whole scheduling quantum, so this test often gets zero profiling signals and fails.
On Linux the SOCK_NONBLOCK and SOCK_CLOEXEC flags were introduced in 2.6.27 kernel and on FreeBSD both flags were introduced in 10 kernel.
On Linux the accept4 system call was introduced in 2.6.28 kernel and on FreeBSD it was introduced in 10 kernel.
On Linux this function would allocate a stack, but that's not necessary for Windows.
On Linux, Reader uses getrandom(2) if available, /dev/urandom otherwise.
On Linux, could use fcntl F_DUPFD_CLOEXEC instead of the ForkLock, but only for dup(fd, -1).
On Mac OS X Mountain Lion, we must sort exported symbols So we sort them here and pre-allocate dynid for them See https://golang.org/issue/4029
On NFS, the Getgroups groups are basically useless.
On NFS, timings can be off due to caching of meta-data on NFS servers (Issue 848).
On NaCl, pad if needed to make overflow end at the proper struct alignment.
On NetBSD a thread created by pthread_create inherits the signal stack of the creating thread.
On NetBSD, a new thread inherits the signal stack of the creating thread.
On OS X when using external linking to build a shared library, the argument passed here to -o ends up recorded in the final shared library in the LC_ID_DYLIB load command.
On OS X, sigaction(2) doesn't guarantee that SA_RESTART will cause open(2) to be restarted for regular files.
On OS X, some of the compilers behave as if -fno-common is always set, and the Mach-O linker in 6l/8l assumes this.
On OS X, the linker output name gets recorded in the shared library's LC_ID_DYLIB load command.
On OpenBSD, Reader uses getentropy(2).
On OpenBSD, interference from TestSelfConnect is mysteriously causing the first attempt to hang for a few seconds, so we throw away the first result and keep the second.
On OpenBSD, no resolv.conf means no DNS.
On POSIX systems Gid contains a decimal number representing the group ID.
On POSIX systems Uid and Gid contain a decimal number representing uid and gid.
On Plan 9, Uid, Gid, Username, and Name will be the contents of /dev/user.
On Plan 9, after calling LockOSThread, the goroutines run on different processes which don't share the working directory.
On Plan 9, it seems that a hangup of a TCP connection with queued data doesn't send the queued data first.
On Plan 9, the resolver always accesses /net/cs and /net/dns.
On Plan 9, the value is a list.
On Read, it reads from cs.body.
On Solaris we can see EINVAL if the socket has already been accepted and closed by the server.
On Solaris you cannot simply open a TCP connection to the syslog daemon.
On Unix and Plan 9, this also tests the parsing of MIME text files (in testdata/*).
On Unix systems, FindProcess always succeeds and returns a Process for the given pid, regardless of whether the process exists.
On Unix systems, the resolver has two options for resolving names.
On Unix systems, this results in ETXTBSY, which formats as "text file busy".
On Unix the routine would remove the custom signal handler and then raise a signal (like SIGABRT).
On Unix, the value is a colon-separated string.
On Windows 64-bit we limit the arena to 32GB or 35 bits.
On Windows 7, remove() can force a subsequent create() to fail.
On Windows systems, Reader uses the CryptGenRandom API.
On Windows, -H windowsgui writes a "GUI binary" instead of a "console binary." -I interpreter Set the ELF dynamic linker to use.
On Windows, Lookup APIs may not return IPv4-related resource records when a node has no external IPv4 connectivity.
On Windows, Lookup APIs may not return IPv6-related resource records when a node has no external IPv6 connectivity.
On Windows, MIME types are extracted from the registry.
On Windows, dialing a closed port takes roughly 1 second, but other platforms should be instantaneous.
On Windows, escaping is disabled.
On Windows, given -o foo, GCC will append ".exe" to produce "foo.exe".
On Windows, it's clumsy, but we can be almost always correct by just looking for a drive letter and a colon.
On Windows, the resolver always uses C library functions, such as GetAddrInfo and DnsQuery.
On Windows, the result is a UNC path if and only if the first path element is a UNC path.
On Windows, the value is a semicolon-separated string.
On Windows, we test the real registry on the machine and assume that ".png" exists there, which empirically it always has, for all versions of Windows.
On a 32-bit machine, that means every allocated object has two words, so there is room for the checkmark bit.
On a 32-bit machine, we can't typically get away with a giant virtual address space reservation.
On a 64-bit machine, allocate from a single contiguous reservation.
On a 64-bit machine, however, the 8-byte allocation is just one word, so the second bit pair is not available for encoding the checkmark.
On a 64-bit system, 256 bytes allocated is 32 pointers, the bits for which fit in 4 bytes.
On a system where the toolchain creates position independent executables by default, tsan initialization can fail.
On a system with registers (anything but 386) we can evaluate x first and then know we have enough registers for i, j, k as well.
On amd64, morestack's frame is 40 bytes, and deferproc's frame is 56 bytes.
On amd64, stack frame is two words, plus caller PC.
On amd64, that means khugepaged can turn a single 4KB page to 2MB, bloating the process's RSS by as much as 512X.
On amd64p32, the beginning of return values is 64-bit aligned, so the caller's frame layout (which doesn't have a receiver) is different from the layout of the fn call, which has a receiver.
On an operating system with aggressive buffering, cleaning incrementally like this keeps the intermediate objects from hitting the disk.
On arm, record goarm.
On arm, stack frame is two words and there's a saved LR between SP and the stack frame and between the stack frame and the arguments.
On arm64, stack frame is four words and there's a saved LR between SP and the stack frame and between the stack frame and the arguments.
On both ARM and x86-32, it is the caller's responsibility to arrange for 64-bit alignment of 64-bit words accessed atomically.
On darwin, we need the symbol table numbers for dynreloc.
On each end, this tells the engine which concrete type is being sent that implements the interface.
On entry: mask is either 0 or 0xffffffff.
On error, any Response can be ignored.
On exit, prefix aliases payload and extends to the end of the last full block of payload.
On exiting an attribute, we discard all state information except the state and element.
On failure return nil and leave the error in d.err.
On failure, make it run longer, hoping that the timing granularity is eventually sufficient.
On failure, returns ("", v).
On failure, the function returns -1.
On iOS we only have the zip file.
On link register architectures, sighandler saves the LR on stack before faking a call to sigpanic.
On linux Setuid and Setgid only affects the current thread, not the process.
On many Linux systems, /etc/ssl/cert.pem will contain the system wide set of root CAs in a format suitable for this function.
On mips64x, stack frame is two words and there's a saved LR between SP and the stack frame and between the stack frame and the arguments.
On most operating systems, the Process must be a child of the current process or an error will be returned.
On most systems, that error has type syscall.Errno.
On most systems, we use registers.
On multiprocessors, spin for ACTIVE_SPIN attempts.
On my OS X laptop, rsc logs in with group 5000 even though there's no name for group 5000.
On non-Linux ARM, the 64-bit functions use instructions unavailable before the ARMv6k core.
On other 64-bit platforms, we limit the arena to 512GB, or 39 bits.
On other Unix-like systems, Reader reads from /dev/urandom.
On other platforms it returns "".
On other systems, we're trying to read enough that we get the beginning of the text segment in the read.
On packet-oriented connections, write timeouts are rare.
On ppc64 and s390x, the callback arguments are in the arguments area of cgocallback's stack frame.
On ppc64 the top three bits of the st_other field indicate how many instructions separate the global and local entry points.
On ppc64 there is an additional instruction (another no-op or reload of toc pointer) before the call.
On ppc64, .got comes from the input files, so don't create it here, and .got.plt is not used.
On ppc64, this is just a table of addresses filled by the dynamic linker
On ppc64, when compiling Go into position independent code on ppc64le we insert an instruction to reload the TOC pointer from the stack as well.
On return ninit has the parameter assignments, the nbody is the inlined function body and list, rlist contain the input, output parameters.
On return, isInt reports whether the argument has integer type.
On return, ok is true if one was found.
On return, only the current goroutine's P is running.
On return, root is the import path corresponding to the root of the repository.
On s390x Linux, all the socket calls go through an extra indirection.
On some Android devices, there are no records for localhost, see https://golang.org/issues/14486.
On some Linux systems, glibc uses another set of values for the commands and translates them to the correct value that the kernel expects just before the actual fcntl syscall.
On some of those system a plain -r (not -Wl,-r) will turn off --build-id, but clang 3.0 doesn't support a plain -r.
On some operating systems after sec seconds have elapsed any remaining unsent data may be discarded.
On some processors cputicks (used to generate trace timestamps) produce non-monotonic timestamps.
On some systems and in some cases SysReserve will simply check that the address space is available and not actually reserve it.
On some systems, mmap ignores v without MAP_FIXED, so retry if the address space is free.
On some systems, there is a sysctl setting.
On some windows machines we end up with not enough samples due to coarse timer resolution.
On success it returns 0 and fills pemRoots with a CFDataRef that contains the extracted root certificates of the system.
On success, ParseMediaType returns the media type converted to lowercase and trimmed of white space and a non-nil map.
On success, consumeValue returns the value consumed (and de-quoted/escaped, if a quoted-string) and the rest of the string.
On success, pub will be of type *rsa.PublicKey, *dsa.PublicKey, or *ecdsa.PublicKey.
On success, the returned path will always be relative to basepath, even if basepath and targpath share no elements.
On successful return, Certificate.Leaf will be nil because the parsed form of the certificate is not retained.
On successive runs through the logic, choose(n) will return 0, 1, ..., n-1.
On systems that support direct access to the TLS memory, this pair of instructions can be reduced to a direct TLS memory reference:
On systems where Sqrt is a single instruction, the compiler may turn a direct call into a direct use of that instruction instead.
On systems with 32-bit ints, i, j, k are guaranteed to be 32-bit values.
On systems with PIE (position independent executables) enabled by default, -no-pie must be passed when doing a partial link with -Wl,-r.
On systems with link registers, the prologue for a non-leaf function stores the incoming value of LR at the bottom of the newly allocated stack frame.
On systems without link registers, the architecture pushes a return PC during the call instruction, so the return PC ends up above the stack frame.
On the ARM simulator we see closer to 1.5x.
On the client side, the next two methods are called in order.
On the first markroot, we need to scan all Gs.
On the first markroot, we need to scan span roots.
On the following line, color.Model is an interface type, and color.Palette is a concrete (slice) type.
On the one hand we don't want to retake Ps if there is no other work to do, but on the other hand we want to retake them eventually because they can prevent the sysmon thread from deep sleep.
On the other hand allocating them black will reduce _GCmarktermination latency since more work is done in the mark phase.
On the other hand, a free list maintained as part of a short-lived object is not a suitable use for a Pool, since the overhead does not amortize well in that scenario.
On the other hand, for a correct parse there must be a time zone at the beginning of the string, so it's almost always true that there's one there.
On the other hand, when using internal linking, cmd/link can generate Go binaries by itself.
On the ppc64, 9a encodes BR (CTR) as BR CTR.
On the read side, the data dependency between p and the index in h_spans orders the reads.
On the real axis the denominator is zero at odd multiples of PI/2.
On the real axis, the denominator has zeros at even multiples of PI/2.
On the second pass of markroot, we're just scanning dirty stacks.
On the server side, the first two methods are called in order.
On the x86, it's not: it pushes a second copy of F0 on the floating point stack.
On this test, toNorm should be same as string.ToUpper(filepath.Clean(path)) except empty string.
On those systems, we put it at the very beginning of the text segment.
On uniprocessor's, no point spinning.
On uniprocessors, no point spinning.
On windows Uid and Gid contain security identifier (SID) in a string format.
On windows system timer granularity is 1-15ms, which is way too much for this optimization.
On write failures, the syslog client will attempt to reconnect to the server and write again.
On x86, SP will be exactly one word above savedLRPtr.
On x86, call instruction pushes return PC before entering new function.
On-the-fly garbage collection: an exercise in cooperation.
Once Commit or Rollback is called on the transaction, that transaction's connection is returned to DB's idle connection pool.
Once DB.Begin is called, the returned Tx is bound to a single connection.
Once Store has been called, a Value must not be copied.
Once all inputs have returned EOF, Read will return EOF.
Once all the P's are aware of the new phase they will scan gs on preemption.
Once an object has been moved to the heap, all of its upstream should be considered escaping to the global scope.
Once exitsyscall has returned, it is safe to do things like call the memory allocator or invoke the Go callback function p.GoF.
Once g is installed, any incoming signals will try to execute, but we won't have the sigaltstack settings and other data set up appropriately until the end of minit, which will unblock the signals.
Once is an object that will perform exactly one action.
Once it all unblocks and returns, so that it cannot be referring to fd.sysfd anymore, the final decref will close fd.sysfd.
Once it does, it will exit.
Once it has found a verified chain, it stops.
Once parsed, a template may be executed safely in parallel.
Once successfully connected, any expiration of the context will not affect the connection.
Once the body returns EOF, the caller must not mutate Trailer.
Once the heap is grown to full size, reset counters.
Once the test runs long enough for n ops, try to get the right ratio at least once.
Once we call schedule we're never coming back, so other calls can reuse this stack space.
Once we have decided on a set of inputs, we must next decide how to tell whether the content of that set has changed since the last build of p.
Once we read sg.elem out of sg, it will no longer be updated if the destination's stack gets copied (shrunk).
Once we support weak imports via cgo we should prefer that, and fall back to this for older systems.
Once writes begin or finish() is called, the response is sent on ch.
One (possibly quoted) word per iteration.
One big chunk followed by a little chunk, but the small bufio.Reader size should prevent the second chunk header from being read.
One bit being repeated.
One can use generate_cert.go in crypto/tls to generate cert.pem and key.pem.
One chunk must be exactly one sizeclass in size.
One common implementation strategy is to construct a separate value with a layout corresponding to the desired XML and then to encode it using e.EncodeElement.
One common implementation strategy is to unmarshal into a separate value with a layout matching the expected XML using d.DecodeElement,  and then to copy the data from that value into the receiver.
One could achieve the same behavior with a custom error value but providing one here is tidier.
One day we will be able to do better.
One error per format is enough.
One exception is that scans of some float64 numbers to strings may lose information when stringifying.
One goroutine may RLock (Lock) an RWMutex and then arrange for another goroutine to RUnlock (Unlock) it.
One invariant that must be maintained is that, if present, chunked encoding must always come first.
One is mutator assists, which happen in response to allocations and are not scheduled.
One iteration per name.
One last reduction, just in case.
One macro argument per iteration.
One map for versioned symbols and one for unversioned symbols.
One may easily use induction to prove (4) and (5).
One might be tempted to ignore the write barrier if slot points into to the stack.
One more like issue 2678
One needs to manually confirm that the handshake in the golden data file for ResumeDisabled does not include a resumption handshake.
One of each JSON kind.
One of file or content must be set:
One of the alternates may ultimately lead without input to end of line.
One of the copies, say from b to r2, could be avoided by using a more elaborate trick where the other copy is made during Request/Response.Write.
One of the the CharsetReader's result values must be non-nil.
One of these is created for each Transport.RoundTrip call.
One of these two will be non-nil:
One package per directory.
One pass for each binding: STB_LOCAL, STB_GLOBAL, maybe one day STB_WEAK.
One possibility is CL 5371098, but we postponed that ugliness until there is a demonstrated need for the performance.
One reader at a time.
One round of scheduler: find a runnable goroutine and execute it.
One should check that goroutine creation stack is comprehensible.
One source is type symbols for types with long string forms.
One space has already been seen.
One such object is not enough, so we need to reclaim several of them.
One such possible incorrect interpretation is to treat two arbitrary memory words (Inner.P1 and Inner.P2 below) as an interface (Outer.R below).
One way to view this behavior is that it is as if 'go install' first runs 'go build' and the moves the generated file to the install dir.
One will be returned to the caller and the other will be used as transfer buffer for end times history and as a temporary buffer for computing quantiles.
One will process read requests, while other will do writes.
One wrinkle: A "naked return" is a silent use of a variable that the Span will not capture, but the compilers catch naked returns of shadowed variables so we don't need to.
One writer at a time.
One-field struct is same as that one field alone.
One-time notifications.
OneByteReader returns a Reader that implements each non-empty Read by reading one byte from r.
OnePassNext selects the next actionable state of the prog, based on the input character.
OnePassPrefix returns a literal string that all matches for the regexp must start with.
Only CALL instructions need a PCDATA annotation.
Only CancelIo API is available.
Only R0 through R15 may appear.
Only R10 is reserved now (just g, not m).
Only a leading 0x or 0X will be added for the whole string.
Only add _ to C symbols.
Only allocate hash if there are some key/value pairs.
Only allow zero padding to the left.
Only available for testing.
Only bgrun should use the Background mode, not other callers.
Only called for expressions known to evaluated to compile-time constants.
Only care about 'common' and 'simple' foldings.
Only constant calls are unsafe.Alignof, Offsetof, and Sizeof.
Only copy the data if we have to.
Only emit typedefs for real names.
Only examine mappings that have samples that match the regexp.
Only exported fields are encoded and decoded.
Only forward synchronous signals.
Only function results from one call and the arguments to the next can overlap in any non-trivial way.
Only handle exception if executing instructions in Go binary (not Windows library code).
Only has an effect for 2.3.0 or later, but avoiding the prompt in earlier versions is just too hard.
Only insert racefuncenterfp/racefuncexit into the following packages.
Only interested in Close failures for the small tests.
Only keep the last w.N bytes of suffix data.
Only looking for ASCII so this is OK.
Only need to check end point, because this entire call is only considering one start position.
Only one call to Dial is necessary.
Only one error per line.
Only one field with this name
Only operations are assign and (binary) left/right shift.
Only possible if we're not root and only on some file systems (AFS, FAT).
Only possible on 64-bit system, since minimum size is 8.
Only print about the exit status if the command didn't even run (not an ExitError) or it didn't exit cleanly or we're printing command lines too (-x mode).
Only print each once.
Only print the output if we know we are not going to proceed.
Only print the test case if it is appropriate for this pass.
Only process each package once.
Only re-scan up to the lowest un-hit barrier.
Only referred to (and thus linked in) by arm port and by tests in this directory.
Only release the count for this test if it was run as a parallel test.
Only return direct children.
Only run the test if we have output to check.
Only run where builders (build.golang.org) have access to compiled packages for import.
Only send the body immediately if we're acting like an HTTP client that doesn't send 100-continue expectations.
Only servers that advertise the AUTH extension support this function.
Only servers that advertise the STARTTLS extension support this function.
Only set READY for ioready.
Only slices and structs have mutual recursion.
Only space characters should be seen now.
Only string concatenation allocates.
Only strings, floats, integers, and booleans can be quoted.
Only testing HTTP/1, and our http2 server doesn't support hijacking.
Only the Float value is marshaled (in full precision), other attributes such as precision or accuracy are ignored.
Only the first command of a pipeline can start with a non executable operand
Only the first header is recorded in the Reader fields.
Only the information for which a map is provided is collected.
Only the linkedit segment moved, any thing before that is fine.
Only the linkedit segment should move, and it should have 0 sections.
Only the most recently read byte can be unread.
Only the return value from ReadResponse itself.
Only the zero Time has a nil Location.
Only this P is allowed to change from _Prunning.
Only typelinksinit needs this function.
Only types that will be transferred as implementations of interface values need to be registered.
Only types we might want to look up are included: pointers, channels, maps, slices, and arrays.
Only uintptrs may be converted to unsafe.Pointer, which cannot overflow.
Only unusual checks are written here.
Only updated by init functions, so no need for atomicity.
Only use the VERSION file if it is non-empty.
Only use this function if you require compatibility with an existing cryptosystem that uses non-standard nonce lengths.
Only use this if a flag is given.
Only used on x86 for CALL/JMP *sym(SB), which calls/jumps to a function pointer stored in the data word sym(SB), not a function named sym(SB).
Only useful with cgo or SWIG, and always compiled with the OS-native compiler.
Only useful with cgo, and always compiled with the OS-native compiler.
Only user-mode Linux (UML) rejects these requests.
Only valid if the "needed" value of the next lower level is 0.
Only valid on functions that declare a frame size of 0.
Only very resource-constrained environments or servers in the process of shutting down should disable them.
Only want comparisons with a nil identifier on one side.
Only want identifiers or selector expressions.
Only when there is no exact match for both name and value, the dynamic header table is then searched.
Only works on systems with syscall.Close.
OnlyCachedConn controls whether RoundTripOpt may create a new TCP connection.
Op is a Porter-Duff compositing operator.
Op is the operation which caused the error, such as "read" or "write".
OpAddr's 0th arg is either OpSP or OpSB, which means that it is uniquely identified by its Op.
OpArg is an input argument which is pre-spilled.
OpConvert must not float over call sites.
OpError is the error type usually returned by functions in the net package.
OpIndex is the index of an operation within a VLIW instruction.
Opaque is a fully opaque uniform image.
Opaque scans the entire image and reports whether it is fully opaque.
Opaque type of n bytes.
Opcodes that take an addend operand.
Opcodes' semantics can be modified by the type and aux fields of the Value.
Open a new one, but wait until the busy connections are released before returning control to DB.
Open a zip archive for reading.
Open authenticates and decrypts ciphertext.
Open decrypts and authenticates ciphertext, authenticates the additional data and, if successful, appends the resulting plaintext to dst, returning the updated slice.
Open file descriptor.
Open may just validate its arguments without creating a connection to the database.
Open one new connection
Open opens a database specified by its database driver name and a driver-specific data source name, usually consisting of at least a database name and connection information.
Open opens and returns the FileHeader's associated File.
Open opens the named file for reading.
Open opens the named file using os.Open and prepares it for use as a Mach-O binary.
Open opens the named file using os.Open and prepares it for use as a PE binary.
Open opens the named file using os.Open and prepares it for use as a Plan 9 a.out binary.
Open opens the named file using os.Open and prepares it for use as an ELF binary.
Open opens the named file.
Open opens the named object file.
Open returns a ReadCloser that provides access to the File's contents.
Open returns a Reader for the file named name.
Open returns a new ReadSeeker reading the ELF program body.
Open returns a new ReadSeeker reading the ELF section.
Open returns a new ReadSeeker reading the Mach-O section.
Open returns a new ReadSeeker reading the PE section s.
Open returns a new ReadSeeker reading the Plan 9 a.out section.
Open returns a new ReadSeeker reading the segment.
Open returns a new connection to the database.
Open returns an error indicating that the requested file does not exist.
Open the tar archive for reading.
Open this file itself and verify that the first few characters are as expected.
OpenBSD apparently lets you override the location of resolv.conf with ASR_CONFIG.
OpenBSD currently only supports softfloat.
OpenBSD has no user-settable per-socket TCP keepalive options.
OpenBSD is unique and doesn't use nsswitch.conf.
OpenBSD option: http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man5/resolv.conf.5 "the legal space-separated values are: bind, file, yp"
OpenBSD system calls.
OpenBSD top-level database "lookup" order
OpenBSD's resolv.conf manpage says that a non-existent resolv.conf means "lookup" defaults to only "files", without DNS lookups.
OpenConnections is the number of open connections to the database.
OpenCurrentProcessToken opens the access token associated with current process.
OpenFat opens the named file using os.Open and prepares it for use as a Mach-O universal binary.
OpenFile opens a file (not a directory) for reading.
OpenKey opens a new key with path name relative to key k.
OpenReader will open the Zip file specified by name and return a ReadCloser.
OpenSSL 1.0.1j is needed for the -fallback_scsv option.
OpenSSL can't take "0" as an argument here so we have to pick a number and hope that it's not in use on the machine.
OpenSSL does print an "ACCEPT" banner, but it does so *before* opening the listening socket, so we can't use that to wait until it has started listening.
OpenSSL ecparam generates SEC1 EC private keys for ECDSA.
OpenSSL sets the salt length to be maximal.
OpenSSL will try to interleave application data and a renegotiation if we send both concurrently.
Opens the export data file at the given path.
Operand 0 is the symbol name in the form foo(SB).
Operand 0 must be an immediate constant.
Operand 1 is a symbol name in the form foo(SB).
Operand 1 is an immediate constant or address.
Operand 1 must be an immediate constant.
Operand string formats (not all "untyped" cases can appear due to the type system, but they fall out naturally here)
Operands have an (addressing) mode, the expression evaluating to the operand, the operand's type, a value for constants, and an id for built-in functions.
Operands may be parenthesized."
Operate on absolute value.
Operating on numbers of different precision.
Operating system / ABI identification
Operating system access.
Operating system-specific process creation attributes.
Operating system-specific.
Operating systems that are expected to fail the tests.
Operation not permitted
Operation not supported on transport endpoint
Operation would block
Operationally, this is similar to a dot import of builtinpkg, except that we silently skip symbols that are already declared in the package block rather than emitting a redeclared symbol error.
Operations on rationals
Operations on unknown values produce unknown values unless specified otherwise.
Operations that manipulate stack barriers acquire this lock, while sigprof tries to acquire it and simply skips the traceback if it can't acquire it.
Operations to set or modify these public variables are atomic.
Operators and delimiters
Operators are listed in precedence order, tightest binding to weakest.
Ops and Types are compared for equality.
Opt or Val, see methods below Various.
Opt returns the optimizer data for the node.
Optimal case is where the underlying reader implements io.WriterTo
Optimal case is where the underlying writer implements io.ReaderFrom
Optimised ANSI C code for the Rijndael cipher (now AES)
Optimistically assume a short ASCII extension and be allocation-free in that case.
Optimistically assume that p will contain a complete header block.
Optimization - if the subsequent block has a load or store at the same address, we don't need to issue this instruction.
Optimization hint for LITERAL
Optimization is disabled, so redundant checks are not removed.
Optimization is enabled.
Optimization should be good for at least 2x, but be forgiving.
Optimization: If we need to shift right, first remove any trailing zero bits from m to reduce shift amount that needs to be done in decimal format (since that is likely slower).
Optimization: Record presence of ()'s only where needed for error reporting.
Optimization: if there is already a pending preemption request (from the previous loop iteration), don't bother with the atomics.
Optimization: rather than push and pop, code that is going to Push and continue the loop simply updates ip, p, and arg and jumps to CheckAndLoop.
Optimize convT2E or convT2I as a two-word copy when T is pointer-shaped.
Option sets options for the template.
Optional blocking chan for Expect: 100-continue (for receive).
Optional blocking chan for Expect: 100-continue (for send).
Optional fractional seconds.
Optional http.ResponseWriter interfaces implemented.
Optional leading sign.
Optionally adjust by -1 to land somewhere on the actual call (except for the leaf, which is not a call).
Options are the encoding parameters.
Options are the formatting and filtering options used to generate a profile.
Options are the options for creating a new Jar.
Or at least, it wasn't evacuated when we started the bucket.
Or it might be a pseudo-indirection like (FP).
Or maybe the MOV to TR registers doesn't use RMF.
Or send some sort of abort request to the host, so the host can properly cut off the client sending all the data.
Or somebody else's dial that they didn't use.
Or to collect a 5-second execution trace:
Or to look at a 30-second CPU profile:
Or to look at the goroutine blocking profile, after calling runtime.SetBlockProfileRate in your program:
Or, better: keep a map in DB of query string to Stmts, and have Stmt.Execute do the right thing and re-prepare if the Conn in use doesn't have that prepared statement.
Oracle's spelling of cancelation.
Order 0 is FixedStack and each successive order is twice as large.
Order holds state during the ordering process.
Order looks backwards because these are negative.
Order matters: By comparing v against x, error positions are at the case values.
Order of Values has been decided - print in that order.
Order of evaluation of receive channels in select.
Order of operations in select.
Order specifies the bit ordering in an LZW data stream.
Order the arguments of binary commutative operations.
Order what's left by id or symbol name, just so that sort is forced into a specific ordering, so that the result of the sort does not depend on the sort implementation.
Orderaddrtemp ensures that *np is okay to pass by address to runtime routines.
Orderblock orders the block of statements l onto a new list, and returns the ordered list.
OrderblockNodes orders the block of statements in n into a new slice, and then replaces the old slice in n with the new slice.
Ordercall orders the call expression n.
Ordercallargs orders the list of call arguments *l.
Ordercheapexpr returns a cheap version of n.
Ordercopyexpr behaves like ordertemp but also emits code to initialize the temporary to the value n.
OrderedBy returns a Sorter that sorts using the less functions, in order.
Orderexprinplace orders the side effects in *np and leaves them as the init list of the final *np.
Orderexprlist orders the expression list l but saves the side effects on the individual expression ninit lists.
Orderexprlist orders the expression list l into order.
Ordersafeexpr returns a safe version of n.
Orderstmtinplace orders the side effects of the single statement *np and replaces it with the resulting statement list.
Orderstmtlist orders each of the statements in the list.
Ordertemp allocates a new temporary with the given type, pushes it onto the temp stack, and returns it.
Ordinary single-character escape.
Original (preregalloc) Value stored in this register.
Original .debug_line section data.
Original code in Newsqueak by Doug McIlroy.
Originally for understanding ADC, RCR, and so on, but now also tracks set, use, and kill of the zero and overflow bits as well.
Originally reflect.call did not distinguish inputs from outputs: both memmoves were for the full stack frame.
Originally, Go object files were Plan 9 object files, but no longer.
Oriya is the set of Unicode characters in script Oriya.
Osmanya is the set of Unicode characters in script Osmanya.
Other M's are waiting for the lock.
Other P's are able to execute between successive calls to startTheWorldWithSema and stopTheWorldWithSema.
Other binary formats are not so flexible.
Other definitions of spacing characters are set by category Z and property Pattern_White_Space.
Other error types may be returned for I/O problems.
Other errors may be of type ConnectionError, StreamError, or anything else from from the underlying reader.
Other flags These flags configure the behavior of vet: -all (default true) Enable all non-experimental checks.
Other programs compiled but failed to execute correctly because they clobbered the g register.
Other record types are ignored.
Other sections may then use formRefSig8 to refer to the type.
Other side sent a nil or default value.
Other signals will be caught but no action will be taken.
Other system notes are more serious and cannot be recovered.
Other than the Once and WaitGroup types, most are intended for use by low-level library routines.
Other than this, the specification does not clarify whether a "series" is defined as "one or more" or "zero or more".
Other than variable substitution and quoted-string evaluation, no special processing such as "globbing" is performed on the command line.
Other things will be relative to this.
Other toolchain maintainers should adjust this function.
Other types are an error.
Other uses of LOCK are invalid and cause a processor exception, in contrast to the "just ignore it" spirit applied to all other prefixes.
Other valid tchar bytes in tokens:
Other variables need to be checked on each load.
Other zip authors might not even follow the basic format, and we'll just ignore the Extra content in that case.
Other/C is the set of Unicode control and special characters, category C.
Other_Alphabetic is the set of Unicode characters with property Other_Alphabetic.
Other_Default_Ignorable_Code_Point is the set of Unicode characters with property Other_Default_Ignorable_Code_Point.
Other_Grapheme_Extend is the set of Unicode characters with property Other_Grapheme_Extend.
Other_ID_Continue is the set of Unicode characters with property Other_ID_Continue.
Other_ID_Start is the set of Unicode characters with property Other_ID_Start.
Other_Lowercase is the set of Unicode characters with property Other_Lowercase.
Other_Math is the set of Unicode characters with property Other_Math.
Other_Uppercase is the set of Unicode characters with property Other_Uppercase.
Others have assembly stubs that jump to func sqrt below.
Others have trouble with -xc.
Others trigger external mode.
Otherwise (i.e., typ is not an untyped type anymore, or it is the final type for x), the type and value are recorded.
Otherwise Context will be a value previously returned by a call to the context function.
Otherwise EscapedPath ignores u.RawPath and computes an escaped form on its own.
Otherwise OINLCALL.Rlist will be the same list, and later walk and typecheck may clobber it.
Otherwise Unmarshal reuses the existing map, keeping existing entries.
Otherwise a default pseudo-random source will be used.
Otherwise at least one of T and V must be unnamed and they must have the same kind.
Otherwise back end handles it.
Otherwise base ONAME value could change between the moments when we evaluate it for dst and for src.
Otherwise binary search.
Otherwise checkVolume8dot3Setting returns error.
Otherwise clear the error.
Otherwise continue test for identical underlying type.
Otherwise create fake zone to record offset.
Otherwise fall back to an ordinary name match.
Otherwise fall back to standard copy.
Otherwise for unprivileged users this should be set to false for mappings work.
Otherwise guess: if the addresses are IPv4 then returns AF_INET, or else returns AF_INET6.
Otherwise if all other arguments are empty strings, concatstrings will return the reference to the temp string to the caller.
Otherwise if v holds a nil map, SetMapIndex will panic.
Otherwise is a punctuator not listed above, or a string which precedes a div op, or an identifier which precedes a div op.
Otherwise it does not change *binaryOnly.
Otherwise it happens in the wrapper and is confusing.
Otherwise it inserts obj and returns nil.
Otherwise it inserts obj, sets the object's parent scope if not already set, and returns nil.
Otherwise it is a comma-separated human-readable list of packages beginning with " in", ready for use in the coverage message.
Otherwise it is a ptrmask bitmap.
Otherwise it is false.
Otherwise it is not possible to vendor just a/b/c and still import the non-vendored a/b.
Otherwise it is printed in processBench.
Otherwise it is sent as a minimal-length big-endian (high byte first) byte stream holding the value, preceded by one byte holding the byte count, negated.
Otherwise it is the usual import path.
Otherwise it prints the err string.
Otherwise it records the time as being in a fabricated location with time fixed at the given zone offset.
Otherwise it refills the cache with a span with an available object and returns that object along with a flag indicating that this was a heavy weight allocation.
Otherwise it return false.
Otherwise it returns (typ, false).
Otherwise it returns 0 and the caller is expected to call tryGet().
Otherwise it returns 0.
Otherwise it returns a mapping of a specific interface.
Otherwise it returns a missing method required by V and whether it is missing or just has the wrong type.
Otherwise it returns addresses for a specific interface.
Otherwise it returns an Unknown.
Otherwise it returns an error describing the mismatch.
Otherwise it returns an error from the first primary address.
Otherwise it returns false.
Otherwise it returns nil.
Otherwise it returns the empty string.
Otherwise it returns true.
Otherwise it returns typ.
Otherwise it uses name directly.
Otherwise it's invalid.
Otherwise it's just a lone function that does not recurse.
Otherwise must be followed by colon and more.
Otherwise one bad and unneeded field in an otherwise okay struct makes the whole program not compile.
Otherwise opts must have type *OAEPOptions and OAEP decryption is done.
Otherwise package main's exported symbols are hidden when showing the package's top-level documentation.
Otherwise positions are printed as integer values (file set specific offsets).
Otherwise print a concise panic message.
Otherwise run discards the command's output.
Otherwise runGcc returns the data written to standard output and standard error.
Otherwise some Go run-time panics will not occur as expected.
Otherwise stripping the newlines would merge two adjacent JSON values.
Otherwise the M from which we retake can exit the syscall, increment nmidle and report deadlock.
Otherwise the behavior is undefined.
Otherwise the compiler driver thinks that we are doing final link and links sanitizer runtime into the object file.
Otherwise the error returned will be non-nil.
Otherwise the field is unknown to us and instr.op is an ignore op.
Otherwise the field is written.
Otherwise the link will be an internal one.
Otherwise the named templates have been rendered unusable.
Otherwise the result is an Int with the same sign as x.
Otherwise the returned value will be empty and the boolean will be false.
Otherwise the returned value will be the empty string.
Otherwise the selected base is 10 and no prefix is accepted.
Otherwise the selected base is 10.
Otherwise the server wouldn't have the choice to send back chunked responses.
Otherwise the value is written in big-endian byte order preceded by the byte length, negated.
Otherwise the variable will be optimized away, and the whole point of AVARLIVE is to keep it on the stack.
Otherwise this compresses too well.
Otherwise two goroutines can completely occupy the local runqueue by constantly respawning each other.
Otherwise use the raw address, so that things like relative jumps show up as JMP 0x123 instead of JMP f+10(SB).
Otherwise use the size to get the base.
Otherwise visitComponents returns true.
Otherwise walk orbit.
Otherwise we assume it's just for dialers or the other connection holders.
Otherwise we can't be sure when the allocation will be freed.
Otherwise we complain after we've absorbed the terminating newline and the line numbers are off by one in errors.
Otherwise we create a new template associated with t.
Otherwise we do send.
Otherwise we have the final (typed or untyped type).
Otherwise we need DNS to look it up.
Otherwise we prefer an IPv4 wildcard address listen over an AF_INET socket.
Otherwise when this function returns the span can become unswept again (if GC is triggered on another goroutine).
Otherwise, "example.com" is used.
Otherwise, MRC/MCR instructions need no further treatment.
Otherwise, Marshal uses the following type-dependent default encodings:
Otherwise, Unmarshal unmarshals the JSON into the value pointed at by the pointer.
Otherwise, WriteTo returns nil.
Otherwise, a random stack slot gets clobbered.
Otherwise, a second goroutine can lock the scan state by setting _Gscan in the status bit and then modify gcscanvalid, and then unlock the scan state.
Otherwise, a space-separated list of pairs.
Otherwise, add a new attribute for the extensions.
Otherwise, all we can do for now is treat spaces as separators.
Otherwise, append output to leading space.
Otherwise, at most n matches are returned and they may not be successive.
Otherwise, be conservative and use write barrier.
Otherwise, both the writes and n refer to computed memory addresses.
Otherwise, continue on in hope of a longer match.
Otherwise, create fake zone with unknown offset.
Otherwise, during the execution of the command a separate goroutine reads from Stdin and delivers that data to the command over a pipe.
Otherwise, each path must be the filename of Go file belonging to the same package.
Otherwise, err is an error defined in the docs for ErrorCode.
Otherwise, fall back to default.
Otherwise, fills in *ep with an element and returns (true, true).
Otherwise, hash a maximal length run of raw memory.
Otherwise, if any of them is at the same depth level, it's an error.
Otherwise, if c is closed, zeros *ep and returns (true, false).
Otherwise, if dst implements the ReaderFrom interface, the copy is implemented by calling dst.ReadFrom(src).
Otherwise, if one runs parallel subtests in sequential tests that are itself subtests of parallel tests, the counts can get askew.
Otherwise, if the argument implements Valuer, its Value method is used to return a Value.
Otherwise, if the encoding is invalid, it returns (RuneError, 1).
Otherwise, if the next character is not a space, scanEndTop allocates a needless error.
Otherwise, if the source file says type T C.whatever, use "T" as the mangling of C.whatever, except in the definition (handled at end of function).
Otherwise, in a full handshake, if we don't have any certificates configured then we will never send a CertificateVerify message and thus no signatures are needed in that case either.
Otherwise, it blocks.
Otherwise, it generates a boolean value.
Otherwise, it initializes all words to scalar/dead.
Otherwise, it is converted iteratively using repeated nat/Word division.
Otherwise, it is not safe to access the stack after a goroutine enters _Gwaiting (e.g., it may get moved).
Otherwise, it returns a meaningful error which is printed by go get, so the user can find why the package wasn't downloaded if the encoding is not supported.
Otherwise, it returns unchanged substring.
Otherwise, it should start a new time slice.
Otherwise, it starts a new time slice.
Otherwise, it stores the value into v.
Otherwise, it will block until all blocking calls are blocked in gcDrain.
Otherwise, it will perform at least n units of work, but may perform more because scanning is always done in whole object increments.
Otherwise, just the provided signals will.
Otherwise, keep the Chain node.
Otherwise, key is unchanged.
Otherwise, live with the race.
Otherwise, lowered for race detector.
Otherwise, move returns false.
Otherwise, must do real work.
Otherwise, no error is returned.
Otherwise, off is addressing the saved program counter.
Otherwise, on weakly ordered machines, the garbage collector could follow a pointer to x, but see uninitialized memory or stale heap bits.
Otherwise, other than special cases, it's not a time zone.
Otherwise, pattern and val must match recursively.
Otherwise, pos must belong to the package.
Otherwise, prefer DB.
Otherwise, print just the current goroutine.
Otherwise, push a new vertical bar.
Otherwise, receive from head of queue and add sender's value to the tail of the queue (both map to the same buffer slot because the queue is full).
Otherwise, repr is used unprocessed as the type representation.
Otherwise, return a build.Context that is set up for gccgo.
Otherwise, returns "Op" plus arch name plus op name.
Otherwise, run all the tests.
Otherwise, run returns cmd's output as a string.
Otherwise, should not see runtime.gogo.
Otherwise, systemstack is being called from the limited stack of an ordinary goroutine.
Otherwise, test equality of all fields.
Otherwise, that combination is interpreted as MaxPathLen not being set.
Otherwise, the *Row's Scan scans the first selected row and discards the rest.
Otherwise, the Go handler removes itself, unblocks the signal, and raises it again, to invoke any non-Go handler or default system handler.
Otherwise, the Importer should load the package data for the given path into a new *Object (pkg), record pkg in the imports map, and then return pkg.
Otherwise, the encoding is unspecified.
Otherwise, the export data starts with the negative string length (negative, so we can distinguish from string index), followed by the string bytes.
Otherwise, the import path P denotes the package found in the directory DIR/src/P for some DIR listed in the GOPATH environment variable (see 'go help gopath').
Otherwise, the importer must load the package data for the given path into a new *Package, record it in imports map, and return the package.
Otherwise, the name is taken to be a location name corresponding to a file in the IANA Time Zone database, such as "America/New_York".
Otherwise, the new field is shallower, and thus takes precedence, so drop the conflicting fields from tinfo and append the new one.
Otherwise, the output (for a scalar) is the field number, as an encoded integer, followed by the field data in its appropriate format.
Otherwise, the parameter name is ignored and the package doesn't matter.
Otherwise, the pointer could be anything, and we check the entire heap object, which is conservative but safe.
Otherwise, the recorded type is invalid.
Otherwise, the result is tok0 if there was no other matching character, or tok2 if the matching character was ch2.
Otherwise, the roll value is added to thisTurn.
Otherwise, the second word in the *itab is the type.
Otherwise, the top-level Value function is used to generate them.
Otherwise, the value underlying e must be a pointer to the correct type for the next data item received.
Otherwise, there are non-standard cgo packages involved, and cmd/link will use external linking mode.
Otherwise, there should be no leftover arguments.
Otherwise, there's no difference between load and store opcodes.
Otherwise, they are the same."
Otherwise, this stub will conflict with the lookup_stubs.go fallback.
Otherwise, type byte for "Without Indexing" is returned.
Otherwise, use Tonelli-Shanks.
Otherwise, use bufio.
Otherwise, use type of function to determine arguments.
Otherwise, w.Write is called exactly once.
Otherwise, we can replace it with a copy.
Otherwise, we expect to have an archive (.a) file, and we can read the build ID from the Go export data.
Otherwise, we get an allocation per key.
Otherwise, we still need to check below for embedded fields.
Otherwise, we'll need to find out from gcc.
Otherwise, we're trying to find our way back to ".".
Otherwise, write the current code, and literal becomes the start of the next emitted code.
Our caller, cgocallback, will do that.
Our chain should point to the previous value.
Our decoder chooses to separate them.
Our fallback hash functions don't, so we only enable the difficult tests when we know the AES implementation is available.
Our goal here is to find the shortest path to a field or method named s in the subtree rooted at t.
Our heap-allocated object that will be GC'd incorrectly.
Our main task is to correctly hook up any break statements.
Our only option in such a case is to remove the field, which means that it cannot be referenced from Go.
Our pages are bigger than hardware pages.
Our response is both a ResponseWriter and a Hijacker.
Our scanner has seen the opening brace/bracket and thinks we're still in the middle of the object.
Our test input does not include back-to-back numbers.
Our underlying w.conn.rwc is usually a *TCPConn (with its own ReadFrom method).
Out of float64 range.
Out of free connections or we were asked not to use one.
Out of input, out of decoded output.
Out of paranoia for making a late change in Go 1.6, we bound how long this can wait, since golang.org/issue/14291 isn't fully understood yet.
Out of streams resources
Out returns the type of a function type's i'th output parameter.
Outer scopes are ignored.
Output HTML or function coverage information.
Output arguments had not changed, but their offsets could.
Output for serial tests.
Output generated by test or benchmark.
Output history, buffer.
Output is hardwired to DX only, and DX contains the closure pointer on closure entry, and this "instruction" is scheduled to the very beginning of the entry block.
Output must use the same register as input 0 or 1.
Output must use the same register as input 0.
Output runs the command and returns its standard output.
Output the previous match.
Output writes the output for a logging event.
Output: 'Gjnf oevyyvt naq gur fyvgul tbcure...
Output: 05:orange 04:pear 03:banana 02:apple
Output: 500 - something failed
Output: Contents of README: This is the source code repository for the Go programming language.
Output: Contents of readme.txt: This archive contains some text files.
Output: Dear Aunt Mildred,
Output: Driver 1 calls T1: (T1 invokes T2: (This is T2)) Driver 2 calls T2: (This is T2)
Output: Ed: Knock knock.
Output: Func: ParseFloat Num: Not a number Err: invalid syntax strconv.ParseFloat: parsing "Not a number": invalid syntax
Output: Go is a general-purpose language designed with systems programming in mind.
Output: Hello, client
Output: Her Royal Highness
Output: Input: "the go programming language" Output 0: The Go Programming Language Output 1: "The Go Programming Language" Output 2: "The Go Programming Language"
Output: Magic 8-Ball says: As I see it yes
Output: Method set of temperature.Celsius: method (temperature.Celsius) String() string
Output: Names: - Gamora - Groot - Nebula - Rocket - Star-Lord Names: Gamora, Groot, Nebula, Rocket, Star-Lord
Output: Part "one": "A section" Part "two": "And another"
Output: T0 (second version) invokes T1: (T1 invokes T2: (T2, version B)) T0 (first version) invokes T1: (T1 invokes T2: (T2, version A))
Output: T0 invokes T1: (T1 invokes T2: (This is T2))
Output: T1 invokes T2: (This is T2)
Output: The output of this example.
Output: a lone gopher
Output: context deadline exceeded
Output: emit macho dwarf: elf header corrupted
Output: exampleplaintext
Output: false true false false
Output: field_0 (blank) (not specified)
Output: first reader second reader
Output: first reader second reader third reader
Output: first_name,last_name,username Rob,Pike,rob Ken,Thompson,ken Robert,Griesemer,gri
Output: foo, bar, baz
Output: io.Reader stream
Output: oinky oinky oink moo moo moo
Output: some error: unexpected EOF
Output: some io.Reader stream to be read
Output: some io.Reader stream to be read some io.Reader stream to be read
Output: some plaintext
Output: static/ myfile.css
Output: string, -42 string, -2a
Output: string, 42 string, 2a
Output: this call was relayed by the reverse proxy
Output: true false false true
Output: true false true
Output: true false true true
Output: true true false
Output: true true false false
Output: uint (base 10):42 uint (base 16):2a
Output: user "bimmler" (id 17) not found
Outputs to 'cert.pem' and 'key.pem' and will overwrite existing files.
Outside of select, left-to-right rule applies.
Over specifies ``(src in mask) over dst''.
Overall, it's faster to use the more general computation above.
Overflow is used only if key and value do not contain pointers.
OverflowComplex reports whether the complex128 x cannot be represented by v's type.
OverflowFloat reports whether the float64 x cannot be represented by v's type.
OverflowInt reports whether the int64 x cannot be represented by v's type.
OverflowUint reports whether the uint64 x cannot be represented by v's type.
Overhead returns the maximum difference between the lengths of a plaintext and its ciphertext.
Overlap with src before dst.
Overlaps reports whether r and s have a non-empty intersection.
Override all the usual logic and force it into the tool directory.
Override build if for first mapping
Override it to tell the runtime we're here.
Override method on embedded NodeType for API compatibility.
Override registers if blocked in system call.
Override the default Deflate compressor with a higher compression level.
Overwrite curr's data with prev, but keep the list links.
Overwrite it in a circle.
Overwrite prev (now next) with curr's old data.
Overwrite type so that they match.
Overwrites p with the first instruction (no first appendp).
Overwriting p is unusual but it lets use this in both the prologue (caller must call appendp first) and in the epilogue.
Owned by crawlLoop goroutine:
Ownership of gcscanvalid:
P - processor, a resource that is required to execute Go code.
P on which the event happened (can be one of TimerP, NetpollP, SyscallP)
P224 returns a Curve which implements P-224 (see FIPS 186-3, section D.2.2)
P256 returns a Curve which implements P-256 (see FIPS 186-3, section D.2.3)
P384 returns a Curve which implements P-384 (see FIPS 186-3, section D.2.4)
P521 returns a Curve which implements P-521 (see FIPS 186-3, section D.2.5)
PAX header without data is a "valid" tar file
PC relative offset to GD GOT entry
PC relative offset to IE GOT entry
PC relative offset to LD GOT entry
PC+4 relative 16 bit shifted
PC+4 relative 23 bit shifted
PC-relative 32 bit GOT offset.
PC-relative 32 bit PLT offset.
PC-relative 32 bit signed sym value.
PC-relative addressing is relative to the end of the instruction, but the relocations applied by the linker are relative to the end of the relocation.
PCRE and languages based on it (specifically, PHP and Ruby) support all three as well.
PCRE limits names to 32 bytes.
PCToFunc returns the function containing the program counter pc, or nil if there is no such function.
PCToLine looks up line number information for a program counter.
PCToLine returns the line number for the given program counter.
PE (Portable Executable) file writing http://www.microsoft.com/whdc/system/platform/firmware/PECOFF.mspx DOS stub that prints out "This program cannot be run in DOS mode."
PE (Windows) as generated by 6l/8l and gcc
PHDR must be in a loaded segment.
PHEAP or PPARAMREF var
PIC code on ppc64le requires 32 bytes of stack, and it's easier to just use that much stack always on ppc64x.
POPL BP 0x8b, 0x7d, 0x00, // MOVL (BP), DI - catch return to invalid address, for debugging
POPL SI 0x8b, 0x7d, 0x00, // MOVL (BP), DI - catch return to invalid address, for debugging
POSIX specifies a sum of the unsigned byte values, but the Sun tar uses signed byte values.
POSIX: - is only okay unescaped as first or last in class.
POST and PUT body parameters take precedence over URL query string values in r.Form.
POST and PUT body parameters take precedence over URL query string values.
POSTing to it will set the value.
PPARAM is loop depth 1 always.
PPARAM, PAUTO, PEXTERN, etc
PPARAMOUT is loop depth 0 for writes but considered loop depth 1 for address-of, so that writing the address of one result to another (or the same) result makes the first result move to the heap.
PPC64 uses sigcontext in place of mcontext in ucontext.
PProf acquires a profile, and symbolizes it using a profile manager.
PProf returns the basic pprof report-generation commands
PR61204: Making temporaries for zero-sized types caused an ICE in gccgo.
PR61244: Type descriptors expressions were not traversed, causing an ICE in gccgo when producing the backend representation.
PR61246: Switch conditions could be untyped, causing an ICE when the conditions were lowered into temporaries.
PR61248: Transformations to recover calls made them fail typechecking in gccgo.
PR61254: gccgo failed to compile a slice expression with missing indices.
PR61255: gccgo failed to compile IncDec statements on variadic functions.
PR61258: gccgo crashed when deleting a zero-sized key from a map.
PR61264: IncDec statements involving composite literals caused in ICE in gccgo.
PR61265: The gccgo middle-end failed to represent array composite literals where the elements are zero-sized values.
PR61273: gccgo failed to compile a SendStmt in the PostStmt of a ForClause that involved predefined constants.
PR65755: Incorrect type descriptor for type defined within method.
PRIVATE USE CHARACTER-10FFFD (last Unicode code point)
PSSOptions contains options for creating and verifying PSS signatures.
PSSSaltLengthAuto causes the salt in a PSS signature to be as large as possible when signing, and to be auto-detected when verifying.
PSSSaltLengthEqualsHash causes the salt length to equal the length of the hash used in the signature.
PST is 8 hours west, PDT is 7 hours west.
Pack 8x 5-bit source blocks into 5 byte destination quantum
Pack into archive in obj directory.
Pack is a simple version of the traditional Unix ar tool.
Pack it in: header and then the pieces.
Package adler32 implements the Adler-32 checksum.
Package aes implements AES encryption (formerly Rijndael), as defined in U.S.
Package ascii85 implements the ascii85 data encoding as used in the btoa tool and Adobe's PostScript and PDF document formats.
Package asm implements the parser and instruction generator for the assembler.
Package asn1 implements parsing of DER-encoded ASN.1 data structures, as defined in ITU-T Rec X.690.
Package ast declares the types used to represent syntax trees for Go packages.
Package atomic provides low-level atomic memory primitives useful for implementing synchronization algorithms.
Package base32 implements base32 encoding as specified by RFC 4648.
Package base64 implements base64 encoding as specified by RFC 4648.
Package big implements arbitrary-precision arithmetic (big numbers).
Package binary implements simple translation between numbers and byte sequences and encoding and decoding of varints.
Package bio implements common I/O abstractions used within the Go toolchain.
Package blank is a go/doc test for the handling of _.
Package bufio implements buffered I/O.
Package build gathers information about Go packages.
Package builtin provides documentation for Go's predeclared identifiers.
Package bytes implements functions for the manipulation of byte slices.
Package bzip2 implements bzip2 decompression.
Package cgi implements CGI (Common Gateway Interface) as specified in RFC 3875.
Package cgo contains runtime support for code generated by the cgo tool.
Package cipher implements standard block cipher modes that can be wrapped around low-level block cipher implementations.
Package cmplx provides basic constants and mathematical functions for complex numbers.
Package color implements a basic color library.
Package commands defines and manages the basic pprof commands
Package constant implements Values representing untyped Go constants and their corresponding operations.
Package context defines the Context type, which carries deadlines, cancelation signals, and other request-scoped values across API boundaries and between processes.
Package cookiejar implements an in-memory RFC 6265-compliant http.CookieJar.
Package crc32 implements the 32-bit cyclic redundancy check, or CRC-32, checksum.
Package crc64 implements the 64-bit cyclic redundancy check, or CRC-64, checksum.
Package crypto collects common cryptographic constants.
Package csv reads and writes comma-separated values (CSV) files.
Package debug contains facilities for programs to debug themselves while they are running.
Package des implements the Data Encryption Standard (DES) and the Triple Data Encryption Algorithm (TDEA) as defined in U.S.
Package doc extracts source code documentation from a Go AST.
Package draw provides image composition functions.
Package driver defines interfaces to be implemented by database drivers as used by package sql.
Package driver implements the core pprof functionality.
Package dsa implements the Digital Signature Algorithm, as defined in FIPS 186-3.
Package dump includes import, package statement.
Package dwarf provides access to DWARF debugging information loaded from executable files, as defined in the DWARF 2.0 Standard at http://dwarfstd.org/doc/dwarf-2.0.0.pdf
Package ecdsa implements the Elliptic Curve Digital Signature Algorithm, as defined in FIPS 186-3.
Package elf implements access to ELF object files.
Package elliptic implements several standard elliptic curves over prime fields.
Package encoding defines interfaces shared by other packages that convert data to and from byte-level and textual representations.
Package errors implements functions to manipulate errors.
Package exec runs external commands.
Package expvar provides a standardized interface to public variables, such as operation counters in servers.
Package fcgi implements the FastCGI protocol.
Package fetch provides an extensible mechanism to fetch a profile from a data source.
Package filepath implements utility routines for manipulating filename paths in a way compatible with the target operating system-defined file paths.
Package files may be added incrementally via checker.Files.
Package flag implements command-line flag parsing.
Package flags implements top-level flags and the usage message for the assembler.
Package flate implements the DEFLATE compressed data format, described in RFC 1951.
Package fmt implements formatted I/O with functions analogous to C's printf and scanf.
Package fnv implements FNV-1 and FNV-1a, non-cryptographic hash functions created by Glenn Fowler, Landon Curt Noll, and Phong Vo.
Package format implements standard formatting of Go source.
Package gccgoimporter implements Import for gccgo-generated object files.
Package gcimporter implements Import for gc-generated object files.
Package gcprog implements an encoder for packed GC pointer bitmaps, known as GC programs.
Package gif implements a GIF image decoder and encoder.
Package gob manages streams of gobs - binary values exchanged between an Encoder (transmitter) and a Decoder (receiver).
Package goobj implements reading of Go object files and archives.
Package gosym implements access to the Go symbol and line number tables embedded in Go binaries generated by the gc compilers.
Package gzip implements reading and writing of gzip format compressed files, as specified in RFC 1952.
Package hash provides interfaces for hash functions.
Package heap provides heap operations for any type that implements heap.Interface.
Package hex implements hexadecimal encoding and decoding.
Package hmac implements the Keyed-Hash Message Authentication Code (HMAC) as defined in U.S.
Package hpack implements HPACK, a compression format for efficiently representing HTTP header fields in the context of HTTP/2.
Package html provides functions for escaping and unescaping HTML text.
Package http provides HTTP client and server implementations.
Package httptest provides utilities for HTTP testing.
Package httputil provides HTTP utility functions, complementing the more common ones in the net/http package.
Package image implements a basic 2-D image library.
Package image/jpeg is not used explicitly in the code below, but is imported for its initialization side-effect, which allows image.Decode to understand JPEG formatted images.
Package importer provides access to export data importers.
Package internal contains HTTP internals shared by net/http and net/http/httputil.
Package io provides basic interfaces to I/O primitives.
Package iotest implements Readers and Writers useful mainly for testing.
Package ioutil implements some I/O utility functions.
Package is stale if a dependency is, or if a dependency is newer.
Package is stale if a dependency is.
Package is stale if completely unbuilt.
Package is stale if the expected build ID differs from the recorded build ID.
Package is the documentation for an entire package.
Package jpeg implements a JPEG image decoder and encoder.
Package json implements encoding and decoding of JSON as defined in RFC 4627.
Package jsonrpc implements a JSON-RPC ClientCodec and ServerCodec for the rpc package.
Package lex implements lexical analysis for the assembler.
Package list implements a doubly linked list.
Package log implements a simple logging package.
Package lzw implements the Lempel-Ziv-Welch compressed data format, described in T.
Package macho implements access to Mach-O object files.
Package mail implements parsing of mail messages.
Package math provides basic constants and mathematical functions.
Package mime implements parts of the MIME spec.
Package multipart implements MIME multipart parsing, as defined in RFC 2046.
Package must be importable.
Package name for "sync/atomic" in this file.
Package name, json for encoding/json.
Package net provides a portable interface for network I/O, including TCP/IP, UDP, domain name resolution, and Unix domain sockets.
Package nettrace contains internal hooks for tracing activity in the net package.
Package not installed
Package objfile implements portable access to OS-specific executable files.
Package os provides a platform-independent interface to operating system functionality.
Package parse builds parse trees for templates as defined by text/template and html/template.
Package parser implements a parser for Go source files.
Package path implements utility routines for manipulating slash-separated paths.
Package paths of excluded packages.
Package pe implements access to PE (Microsoft Windows Portable Executable) files.
Package pem implements the PEM data encoding, which originated in Privacy Enhanced Mail.
Package pkix contains shared, low level structures used for ASN.1 parsing and serialization of X.509 certificates, CRL and OCSP.
Package plan9obj implements access to Plan 9 a.out object files.
Package plugin defines the plugin implementations that the main pprof driver requires.
Package png implements a PNG image decoder and encoder.
Package pprof serves via its HTTP server runtime profiling data in the format expected by the pprof visualization tool.
Package pprof writes runtime profiling data in the format expected by the pprof visualization tool.
Package printer implements printing of AST nodes.
Package profile provides a representation of profile.proto and methods to encode/decode profiles in this format.
Package quick implements utility functions to help with black box testing.
Package quotedprintable implements quoted-printable encoding as specified by RFC 2045.
Package race contains helper functions for manually instrumenting code for the race detector.
Package race implements data race detection logic.
Package rand implements a cryptographically secure pseudorandom number generator.
Package rand implements pseudo-random number generators.
Package rc4 implements RC4 encryption, as defined in Bruce Schneier's Applied Cryptography.
Package reflect implements run-time reflection, allowing a program to manipulate objects with arbitrary types.
Package reflect passes a frame type.
Package regexp implements regular expression search.
Package report summarizes a performance profile into a human-readable report.
Package ring implements operations on circular lists.
Package rpc expects both.
Package rpc expects uint64 request IDs.
Package rpc provides access to the exported methods of an object across a network or other I/O connection.
Package runtime contains operations that interact with Go's runtime system, such as functions to control goroutines.
Package scanner implements a scanner for Go source text.
Package scanner provides a scanner and tokenizer for UTF-8-encoded text.
Package scopes are not associated with a specific node but with all files belonging to a package.
Package scopes do not have extents since they may be discontiguous, so iterate over the package's files.
Package sha1 implements the SHA1 hash algorithm as defined in RFC 3174.
Package sha256 implements the SHA224 and SHA256 hash algorithms as defined in FIPS 180-4.
Package signal implements access to incoming signals.
Package signal will not block sending to c: the caller must ensure that c has sufficient buffer space to keep up with the expected signal rate.
Package singleflight provides a duplicate function call suppression mechanism.
Package smtp implements the Simple Mail Transfer Protocol as defined in RFC 5321.
Package socktest provides utilities for socket testing.
Package sort provides primitives for sorting slices and user-defined collections.
Package sql provides a generic interface around SQL (or SQL-like) databases.
Package strconv implements conversions to and from string representations of basic data types.
Package strings implements simple functions to manipulate UTF-8 encoded strings.
Package subtle implements functions that are often useful in cryptographic code but require careful thought to use correctly.
Package suffixarray implements substring search in logarithmic time using an in-memory suffix array.
Package svg provides tools related to handling of SVG files
Package symbolizer provides a routine to populate a profile with symbol, file and line number information.
Package symbolz symbolizes a profile using the output from the symbolz service.
Package sync provides basic synchronization primitives such as mutual exclusion locks.
Package syntax parses regular expressions into parse trees and compiles parse trees into programs.
Package syscall contains an interface to the low-level operating system primitives.
Package sysdll is an internal leaf package that records and reports which Windows DLL names are used by Go itself.
Package syslog provides a simple interface to the system log service.
Package tabwriter implements a write filter (tabwriter.Writer) that translates tabbed columns in input into properly aligned text.
Package tar implements access to tar archives.
Package tempfile provides tools to create and delete temporary files
Package template (html/template) implements data-driven templates for generating HTML output safe against code injection.
Package template implements data-driven templates for generating textual output.
Package testenv provides information about what functionality is available in different testing environments run by the Go team.
Package testing provides support for automated testing of Go packages.
Package textproto implements generic support for text-based request/response protocols in the style of HTTP, NNTP, and SMTP.
Package time knows the layout of this structure.
Package time provides functionality for measuring and displaying time.
Package tls partially implements TLS 1.2, as specified in RFC 5246.
Package token defines constants representing the lexical tokens of the Go programming language and basic operations on tokens (printing, predicates).
Package types declares the data types and implements the algorithms for type-checking of Go packages.
Package unicode provides data and functions to test some properties of Unicode code points.
Package unsafe contains operations that step around the type safety of Go programs.
Package unsafe is excluded.
Package url parses URLs and implements query escaping.
Package user allows user account lookups by name or id.
Package utf16 implements encoding and decoding of UTF-16 sequences.
Package utf8 implements functions and constants to support text encoded in UTF-8.
Package whitelist defines exceptions for the vet tool.
Package x509 parses X.509-encoded keys and certificates.
Package x86asm implements decoding of x86 machine code.
Package xml implements a simple XML 1.0 parser that understands XML name spaces.
Package zip provides support for reading and writing ZIP archives.
Package zlib implements reading and writing of zlib format compressed data, as specified in RFC 1950.
Package-specific flags should be set using the directives, not the environment variables, so that builds work in unmodified environments.
PackageExports trims the AST for a Go package in place such that only exported nodes remain.
PackageName returns the package part of the symbol name, or the empty string if there is none.
Packages are specified as import paths.
Packages in a program need not have unique package names, but there are two reserved package names with special meaning.
Packages named "main" are treated as commands.
Packages named main are ignored.
Packages not named main are ignored.
Packages that check for these interfaces include encoding/gob, encoding/json, and encoding/xml.
Packages that define a Context key should provide type-safe accessors for the values stores using that key:
Packages that import unsafe may be non-portable and are not protected by the Go 1 compatibility guidelines.
Packages that use cgo also import syscall implicitly, to wrap errno.
Packages that use cgo import runtime/cgo implicitly.
Packages used by testing must be low-level (L2+fmt).
Packed GC pointer bitmaps, aka GC programs.
Packet formats Wire constants.
PacketConn is a generic packet-oriented network connection.
Packing and unpacking.
Pad appends -1s to the slice a as needed.
Pad as needed before converting to a decimal.
Pad from ptrdata to size.
Pad functions with trap instruction, to catch invalid jumps
Pad the final quantum
Pad the last byte with 1's.
PadLength is the optional number of bytes of zeros to add to this frame.
Padded base64 should always be a multiple of 4 characters in length.
Padding bits will be zero.
Padding bytes required at end of current archive file
Padding fields and flags are identical to those defined for DATA frames
Padding for complex numbers.
Padding with byte slices.
PageSize can be larger than OS definition of page size, so SysReserve can give us a PageSize-unaligned pointer.
Pahawh_Hmong is the set of Unicode characters in script Pahawh_Hmong.
Palette is a palette of colors.
Palette is the image's palette.
Paletted is an in-memory image of uint8 indices into a given palette.
PalettedImage is an image whose colors may come from a limited palette.
Palmyrene is the set of Unicode characters in script Palmyrene.
Pan anyway when drag is disabled and the user clicked on an element
Panic if slice indices are not in bounds.
Panic is a type that panics in String.
Panic is equivalent to Print() followed by a call to panic().
Panic is equivalent to l.Print() followed by a call to panic().
PanicF is a type that panics in Format.
Panicf is equivalent to Printf() followed by a call to panic().
Panicf is equivalent to l.Printf() followed by a call to panic().
Panicln is equivalent to Println() followed by a call to panic().
Panicln is equivalent to l.Println() followed by a call to panic().
Panics are on stack and already adjusted.
Panics caused by user error (that is, everything except run-time panics such as "index out of bounds" errors) do not leave the file that caused them, but are instead turned into plain error returns.
Panics if arg0 is nil, returns void.
Panics if v is not assigned to a register.
Parallel benchmark for text/template.Template.Execute on a single object.
Parallel calls to Read, and parallel calls to Write, are also safe: the individual calls will be gated sequentially.
Parallel mark over GC roots and heap
Parallel signals that this test is to be run in parallel with (and only with) other parallel tests in this CPU group.
Parallel signals that this test is to be run in parallel with (and only with) other parallel tests.
Parallel tests will wait on this.
Param is function parameter
ParamCount return number of syscall parameters for function f.
ParamList returns source code for function f parameters.
ParamPrintList returns source code of trace printing part correspondent to syscall input parameters.
Parameter and result names are not required to match.
ParameterSizes is a enumeration of the acceptable bit lengths of the primes in a set of DSA parameters.
Parameters represents the domain parameters for a key.
Params returns the parameters for the curve.
Params returns the parameters of signature s, or nil.
Parent returns the scope's containing (parent) scope.
Parentheses are also not permitted around the expression in a go/defer statement.
Parenthesized expressions
Parenthesized expressions with field accesses
Parenthesized pipeline.
Parenthesized register: R(10).
Parse "zoneinfo" time zone file.
Parse + String preserve the original encoding.
Parse GOOS/GOARCH stuff.
Parse IPv4 address (d.d.d.d).
Parse Plan 9 timezone(2) files.
Parse a .debug_types section.
Parse a non-parenthesized list up to a closing paren or EOF
Parse a single source file.
Parse a time value from a string in the standard Unix format.
Parse and symbolize trace asynchronously while browser opens.
Parse command-line flags.
Parse defines the template by parsing the text.
Parse each type with a fresh type cache.
Parse error left name unset.
Parse events transforms raw events into events.
Parse for all member entries.
Parse for the number of entries.
Parse initializes the flags with their values for this run and returns the non-flag command line arguments.
Parse input AST and prepare Prog structure.
Parse line, obeying quoted strings.
Parse mantissa and exponent.
Parse may be called multiple times to parse definitions of templates to associate with t.
Parse methods are annotated with matching Go productions as appropriate.
Parse parses a URL in the context of the receiver.
Parse parses a formatted string and returns the time value it represents.
Parse parses a profile and checks for its validity.
Parse parses a regular expression string s, controlled by the specified Flags, and returns a regular expression parse tree.
Parse parses a string into a template.
Parse parses an object file or archive from r, assuming that its import path is pkgpath.
Parse parses flag definitions from the argument list, which should not include the command name.
Parse parses rawurl into a URL structure.
Parse parses the template definition string to construct a representation of the template for execution.
Parse parses, post-processes and verifies the trace.
Parse past leading word characters.
Parse returns a map from template name to parse.Tree, created by parsing the templates described in the argument string.
Parse returns nil, err on parse failure, otherwise its return value is the same as ResolveReference.
Parse source file and extract the AST without comments for this function, with position information referring to the file set fset.
Parse stack manipulation.
Parse the assertion in the comment.
Parse the first line of the response.
Parse the first token as a decimal integer.
Parse the hash table header.
Parse the response headers.
Parse the source files for a package.
Parse the trailer header
Parse the type units stored in a DWARF4 .debug_types section.
Parse the upper and lower bounds.
Parse type from Entry.
ParseARM64Suffix parses the suffix attached to an ARM64 instruction.
ParseARMCondition parses the conditions attached to an ARM instruction.
ParseAbbrev returns the abbreviation table that starts at byte off in the .debug_abbrev section.
ParseAddressList parses the given string as a list of addresses.
ParseBool returns the boolean value represented by the string.
ParseBool, ParseFloat, ParseInt, and ParseUint convert strings to values:
ParseCRL parses a CRL from the given bytes.
ParseCertificate parses a single certificate from the given ASN.1 DER data.
ParseCertificateRequest parses a single certificate request from the given ASN.1 DER data.
ParseCertificates parses one or more certificates from the given ASN.1 DER data.
ParseDERCRL parses a DER encoded CRL from the given bytes.
ParseDirent parses up to max directory entries in buf, appending the names to names.
ParseDuration parses a duration string.
ParseECPrivateKey parses an ASN.1 Elliptic Curve Private Key Structure.
ParseExpr is a convenience function for obtaining the AST of an expression x.
ParseExpr must not crash
ParseExprFrom is a convenience function for parsing an expression.
ParseFile adds additional file path to a source set src.
ParseFile parses the source code of a single Go source file and returns the corresponding ast.File node.
ParseFiles creates a new Template and parses the template definitions from the named files.
ParseFiles parses files listed in fs and extracts all syscall functions listed in  sys comments.
ParseFiles parses the named files and associates the resulting templates with t.
ParseFloat converts the string s to a floating-point number with the precision specified by bitSize: 32 for float32, or 64 for float64.
ParseFloat is like f.Parse(s, base) with f set to the given precision and rounding mode.
ParseForm parses the raw query from the URL and updates r.Form.
ParseGlob creates a new Template and parses the template definitions from the files identified by the pattern, which must match at least one file.
ParseGlob is equivalent to calling ParseFiles with the list of files matched by the pattern.
ParseGlob is equivalent to calling t.ParseFiles with the list of files matched by the pattern.
ParseGlob parses the template definitions in the files identified by the pattern and associates the resulting templates with t.
ParseHTTPVersion parses a HTTP version string.
ParseIP parses s as an IP address, returning the result.
ParseIP, for example, does accept empty strings.
ParseInLocation is like Parse but differs in two important ways.
ParseInt interprets a string s in the given base (2 to 36) and returns the corresponding value i.
ParseMediaType parses a media type value and any optional parameters, per RFC 1521.
ParseMemoryMap parses a memory map in the format of /proc/self/maps, and overrides the mappings in the current profile.
ParseMultipartForm calls ParseForm automatically.
ParseMultipartForm calls ParseForm if necessary.
ParseMultipartForm parses a request body as multipart/form-data.
ParseNetlinkMessage parses b as an array of netlink messages and returns the slice containing the NetlinkMessage structures.
ParseNetlinkRouteAttr parses m's payload as an array of netlink route attributes and returns the slice containing the NetlinkRouteAttr structures.
ParsePKIXPublicKey parses a DER encoded public key.
ParseProfiles parses profile data in the specified file and returns a Profile for each source file described therein.
ParseQuery parses the URL-encoded query string and returns a map listing the values specified for each key.
ParseRequestURI parses rawurl into a URL structure.
ParseRoutingMessage parses b as routing messages and returns the slice containing the RoutingMessage interfaces.
ParseRoutingSockaddr parses msg's payload as raw sockaddrs and returns the slice containing the Sockaddr interfaces.
ParseSocketControlMessage parses b as an array of socket control messages.
ParseTime parses a time header (such as the Date: header), trying each of the three formats allowed by HTTP/1.1: TimeFormat, time.RFC850, and time.ANSIC.
ParseTracebacks parses a set of tracebacks and returns a newly populated profile.
ParseUint is like ParseInt but for unsigned numbers.
ParseUnixCredentials decodes a socket control message that contains credentials in a Ucred structure.
ParseUnixRights decodes a socket control message that contains an integer array of open file descriptors from another process.
Parsed reports whether f.Parse has been called.
Parsed reports whether the command-line flags have been parsed.
Parsers are required to recognize lt, gt, amp, apos, and quot even if they have not been declared.
Parsing of ELF executables (Linux, FreeBSD, and so on).
Parsing of Go intermediate object files and archives.
Parsing of Mach-O executables (OS X).
Parsing of PE executables (Microsoft Windows).
Parsing of Plan 9 a.out executables.
Parsing state - stack holds old name space translations and the current set of open elements.
Part 2 is tests of operations involving one variable and one constant.
Part containing a boundary with whitespace following it.
Part containing data starting with the boundary, but with additional suffix.
Partial os/user support on Plan 9.
Partial type checker.
Partially fill buffer
Partially satisfy this assist.
Partially undo the NOHUGEPAGE marks from sysUnused for whole huge pages between v and v+n.
Partition the slice of expressions into commutative sets.
Parts of the syntax can be disabled by passing alternate flags to Parse.
Pass -l to the compiler to test stack traces.
Pass -z nodelete to mark the shared library as non-closeable: a dlclose will do nothing.
Pass 1: process rows.
Pass 1: see if it has at least one finalizer.
Pass 2: process columns.
Pass 2: queue all finalizers _or_ handle profile record.
Pass a context with a timeout to tell a blocking function that it should abandon its work after the timeout elapses.
Pass a func value from nestedCall to goCallback using an integer token.
Pass along what we know so liblink can make use of it.
Pass back: pauses, pause ends, last gc (absolute time), number of gc, total pause ns.
Pass context.TODO if you are unsure about which Context to use.
Pass information about recovering frame to recovery.
Pass pointer to interface so Encode sees (and hence sends) a value of interface type.
Pass the address of i because the C function was written to take a pointer.
Pass top as false since we have a pointer to the array.
Passing a Go string is fine.
Passing a pointer to a pointer field of a Go struct, where the field does not contain a Go pointer, but another field (irrelevantly) does.
Passing a pointer to a pointer field of a Go struct.
Passing a pointer to a struct that contains a Go pointer.
Passing a pointer to an int field of a Go struct that (irrelevantly) contains a Go pointer.
Passing a slice of Go strings fails.
Passing a zero slice or nil will close all the elements.
Passing cyclic structures to Marshal will result in an infinite recursion.
Passing it to ValueOf directly would access the underlying Point, not the interface.
Passing pointers Go is a garbage collected language, and the garbage collector needs to know the location of every pointer to Go memory.
Passing the address of a slice of an array that is an element in a struct, with a type conversion.
Passing the address of a slice that is an element in a struct only looks at the slice.
Passing the address of a slice with a Go pointer, where we are passing the address of an element that is not a Go pointer.
Passing the address of a slice with a Go pointer.
Passing the address of a slice with no Go pointers.
Passing the address of a static variable with no pointers doesn't matter.
Passing the address of a static variable with pointers does matter.
Password returns the password in case it is set, and whether it is set.
Past the end of the function.
Patch existing labels and create a new label space for this TEXT.
Path contains the path of named types referring to this type.
Path has the form "/abc".
Path is either of form "/abc/xyz" or "/abc/xyz/".
Path is empty or malformed.
Path is the path of the command to run.
Path returns the package path.
Path-absolute references
Path-relative references: ...
PathError records an error and the operation and file path that caused it.
Pathname of interpreter.
Paths like x/vendor/y must be imported as y, never as x/vendor/y.
Pattern is a limited glob pattern in which '...' means 'any string' and there is no other special syntax.
Pattern is the same limited glob accepted by matchPattern.
Pattern_Syntax is the set of Unicode characters with property Pattern_Syntax.
Pattern_White_Space is the set of Unicode characters with property Pattern_White_Space.
Patterns may optionally begin with a host name, restricting matches to URLs on that host only.
Patterns name fixed, rooted paths, like "/favicon.ico", or rooted subtrees, like "/images/" (note the trailing slash).
Pau_Cin_Hau is the set of Unicode characters in script Pau_Cin_Hau.
Payload returns the frame's payload (after the header).
Pc is the index of the last rune instruction in the string.
Pc is the set of Unicode characters in category Pc.
Pc returns the current Prog.
Pd is the set of Unicode characters in category Pd.
Pe is the set of Unicode characters in category Pe.
Pe, 0x6e MOVD xmm load
Pe, 0x7e MOVD xmm store
Peek at the first few pairs.
Peek at the first rune.
Peek returns the byte at offset i.
Peek returns the next Unicode character in the source without advancing the scanner.
Peek returns the next n bytes without advancing the reader.
Peeks returns the word in *data, not as the return value.
Pending returns the number of unanswered requests that have been received on the connection.
Pending returns the number of unanswered requests that have been sent on the connection.
People think of arguments as 1-indexed.
Per RFC 2616, this is either the value of the "Host" header or the host name given in the URL itself.
Per RFC 2616, we should consume the request body before replying, if the handler hasn't already done so.
Per RFC 5280, 4.2.1.13, one of distributionPoint or cRLIssuer may be empty.
Per RFC 6265 section 5.4, AddCookie does not attach more than one Cookie header field.
Per RFC 6762, the ".local" TLD is special.
Per golang.org/issue/14937, check that every .gz file in the tree has a zero mtime.
Per process profiling
Per rev f280b8a485fd (10/2/2013), qualified names may be used for anonymous fields.
Per the spec, "Add one to the value to obtain a weight between 1 and 256."
Per-call-stack profiling information.
Per-size allocation statistics.
Per-thread (in Go, per-P) cache for small objects.
Percent does not absorb operands and ignores f.wid and f.prec.
Perform GC initialization and the sweep termination transition.
Perform SetCookies with fromURL and the cookies from setCookies.
Perform a backwards copy according to RFC section 3.2.3.
Perform checks of API invariants.
Perform lookup via a binary search
Perform mark termination.
Perform one-time expansion of instructions in progtable to their CC, V, and VCC variants
Perform the default action.
Perform the same bit exchanges as permuteInitialBlock but in reverse order.
Performing multiple connect system calls on a non-blocking socket under Unix variants does not necessarily result in earlier errors being returned.
Perhaps a loop header is inherited.
Perhaps in the future we will want to flush the headers out early if the first byte of the request body is taking a long time to arrive.
Perhaps just looking at the reference count (by noting Stmt.Close) would be enough.
Perhaps libopcodes is reporting an older encoding.
Perhaps put this in its own package later.
Perhaps stdName is not English.
Perhaps that rule is specific to the case of CRC32, since no 66 0F 38 F1 instruction is defined (today) (that we know of).
Perhaps the answer depends on the specific opcodes in question.
Perhaps the test should be more explicit and use a HEAD, but tests elsewhere guarantee that zero byte responses generate a "Content-Length: 0" instead of chunking.
Perhaps xed is reporting an older encoding.
Perl 5.10 gave in and implemented the Python version too, but they claim that the last two are the preferred forms.
Perl character class escape.
Perl character classes
Perl: - is okay anywhere.
Perm returns the Unix permission bits in m.
Permission is NOT granted for the use of any IJG author's name or company name in advertising or publicity relating to this software or products derived from it.
Permission to use, copy, modify, and distribute this software is freely granted, provided that this notice is preserved.
Permit fractions with component sizes up to maxExp before switching to using floating-point numbers.
Permit it but print so that it can be parsed without errors.
PermitProhibitedCipherSuites, if true, permits the use of cipher suites prohibited by the HTTP/2 spec.
Permits backward-compatible changes to the encoding.
Permute cases and case info.
Persistent connection (i.e. HTTP/1.1)
Pf is the set of Unicode characters in category Pf.
Pgcstop is only diagnostic.
Phags_Pa is the set of Unicode characters in script Phags_Pa.
Phase 1: Collect explicitly declared methods, the corresponding signature (AST) expressions, and the list of embedded type (AST) expressions.
Phase 1: const, type, and names and types of funcs.
Phase 1: determine futile wakeup sequences.
Phase 2: Export objects added to exportlist during phase 1.
Phase 2: Full bytes in bitmap, up to but not including write to last byte (full or partial) in bitmap.
Phase 2: Resolve embedded interfaces.
Phase 2: Variable assignments.
Phase 2: remove futile wakeup sequences.
Phase 3: At this point all methods have been collected for this interface.
Phase 3: Type check function bodies.
Phase 3: Write last byte or partial byte and zero the rest of the bitmap entries.
Phase 4: Decide how to capture closed variables.
Phase 4: all done, but perhaps double check.
Phase 6: Escape analysis.
Phase 7: Transform closure bodies to properly reference captured variables.
Phase 8: Compile top level functions.
Phase 9: Check external declarations.
Phase returns the phase (also called the argument) of x.
PhaseOption sets the specified flag in the specified ssa phase, returning empty string if this was successful or a string explaining the error if it was not.
Phases are changed by setting the gcphase to the next phase and possibly calling ackgcphase.
Phi arguments always come from a predecessor block, whereas copies don't.
Phi values are special, as always.
Phis need their args to end up in a specific location.
Phoenician is the set of Unicode characters in script Phoenician.
Physical address (not used).
Pi is the set of Unicode characters in category Pi.
Pick a high address instead.
Pick a random other P to preempt.
Pick a register to spill.
Pick a stack slot for each value needing one.
Pick a value to spill.
Pick a waiting test to be run.
Pick a zero-degree block if we can.
Pick an unused register if one is available.
Pick off 0-length pc here so that we don't let a nil pc slice get to it.
Pick off easy binary format.
Pick off leading sign.
Pick register for output.
Pick the next block to schedule Pick among the successor blocks that have not been scheduled yet.
Pick up a digit, put down a digit.
Pick up the remaining unswept/not being swept spans concurrently
Picking an initial value of -1 for i makes the "want" calculation below correct in all cases.
Picking loadFactor: too large and we have lots of overflow buckets, too small and we waste a lot of space.
Pid returns the process id of the exited process.
Ping verifies a connection to the database is still alive, establishing a connection if necessary.
Pipe adapter to connect code expecting an io.Reader with code expecting an io.Writer.
Pipe between server reader and server writer.
Pipe creates a synchronous in-memory pipe.
Pipe output to gofmt.
Pipe symbols separate and are emitted.
PipeNode holds a pipeline with optional declaration
Pipeline, to manage pipelined requests and responses in a client.
Pipelined arg was not being type-checked.
Pipelines A pipeline is a possibly chained sequence of "commands".
Pix holds the image's pixels, as alpha values in big-endian format.
Pix holds the image's pixels, as alpha values.
Pix holds the image's pixels, as gray values in big-endian format.
Pix holds the image's pixels, as gray values.
Pix holds the image's pixels, as palette indices.
Pix holds the image's pixels, in C, M, Y, K order.
Pix holds the image's pixels, in R, G, B, A order and big-endian format.
Pix holds the image's pixels, in R, G, B, A order.
PixOffset returns the index of the first element of Pix that corresponds to the pixel at (x, y).
PkgPath is the package path that qualifies a lower case (unexported) field name.
PkgPath is the package path that qualifies a lower case (unexported) method name.
PkgPath returns a named type's package path, that is, the import path that uniquely identifies the package, such as "encoding/base64".
PkgPath will be non-empty even for an exported type, so we need to check the type name as well.
Place child in process group.
Place child's process group in foreground.
Place process group in foreground.
Placeholders for saving original socket system calls.
Placeholders for socket system calls.
PlainAuth returns an Auth that implements the PLAIN authentication mechanism as defined in RFC 4616.
Plaintext for use with Table A.2 tests
Plaintext for use with Table A.3 tests
Plan 9 Constants Open modes
Plan 9 On Plan 9, signals have type syscall.Note, which is a string.
Plan 9 Program header.
Plan 9 a.out constants and data structures
Plan 9 alone needs io/ioutil and os.
Plan 9 directory marshalling.
Plan 9 doesn't support floating point in note handler.
Plan 9 environment variables.
Plan 9 may leak resources if the syscall doesn't end up returning.
Plan 9 sbrk from /sys/src/libc/9sys/sbrk.c
Plan 9 symbol table entries.
Plan 9 uses IPv6 natively, see ip(3).
Plan 9, NaCl: Mtime is the time of the last change of content.
Plan 9-specific system calls
Plan is for 3 to be removed when the tests are revised.
Plan9 provides a native ChownPlan9 version instead.
Plaster over linenumbers
Platform dependent relocations.
Platform-specific verification needs the ASN.1 contents so this makes the behaviour consistent across platforms.
Platform-specific verification needs the ASN.1 contents.
Platforms with hardware accelerated implementations of AES should implement their own version of newCipher (which may then call newCipherGeneric if needed).
Playable Examples must be in a package whose name ends in "_test".
Please be informed that for now shouldEscape does not check all reserved characters correctly.
Please keep them in sync.
Please report any issues instead of disabling HTTP/2 support: https://golang.org/s/http2bug
Plus flag should have no effect.
Plus it's nice to be consistent and not have timing-dependent behavior.
Plus two Latin-1 oddballs.
Po is the set of Unicode characters in category Po.
Pointer represents a pointer to an arbitrary type.
Pointer returns v's value as a uintptr.
Pointer therefore allows a program to defeat the type system and read and write arbitrary memory.
Pointer to array: the number of elements in *v (even if v is nil).
Pointer to array: the number of elements in *v (same as len(v)).
Pointer to interface is almost always a mistake.
Pointer types are represented via StarExpr nodes.
Pointer values encode as the value pointed to.
Pointer-valued data or, if flagIndir is set, pointer to data.
Pointers into stacks are also ok, the runtime manages these explicitly.
Pointers passed to C were not marked as escaping (bug in cgo).
Pointers, fully qualified, always legal.
Points are always well-formed.
Poll executes an HTTP HEAD request for url and returns the HTTP status string or an error string.
PollDesc objects must be type-stable, because we can get ready notification from epoll/kqueue after the descriptor is closed/reused.
Poller may want to unregister fd in readiness notification mechanism, so this must be executed before closeFunc.
Polls for completed network IO.
Polls for ready network connections.
Polynomials are represented in LSB-first form also known as reversed representation.
Pool is no-op under race detector, so all these tests do not work.
Pool provides a way to amortize allocation overhead across many clients.
Pool's purpose is to cache allocated but unused items for later reuse, relieving pressure on the garbage collector.
Poor mans 64-bit division.
Poor-man's postorder traversal.
Pop a node from a random stack, then push it onto a random stack.
Pop a reachable block
Pop all elements from both stacks, and verify that nothing lost.
Pop elements, largest first, into end of data.
Pop job off the stack.
Pop records that at lineno the current file was popped from the input stack.
Pop removes the minimum element (according to Less) from the heap and returns it.
Pop stack until a Start or EOF is on the top, undoing the translations that were associated with the element we just closed.
Pop the topmost item from the stack and resume with the next one down.
Popping included file.
Poptemp pops temporaries off the stack until reaching the mark, which must have been returned by marktemp.
Populate jar with cookies.
Populate the remaining fields of ft and store in cache.
Portable analogs of some common system call errors.
Portions Copyright 2009 The Go Authors.
Pos and End implementations for declaration nodes.
Pos and End implementations for expression/type nodes.
Pos and End implementations for spec nodes.
Pos and End implementations for statement nodes.
Pos computes the source position of the declaration of an object name.
Pos is a compact encoding of a source position within a file set.
Pos represents a byte position in the original input text from which this template was parsed.
Pos returns the position of the character immediately after the character or token returned by the last call to Next or Scan.
Position converts a Pos p in the fileset into a Position value.
Position information is interpreted relative to the file set fset.
Position information is just an offset.
Position information is recorded in fset.
Position information is recorded in the file set fset.
Position returns the Position value for the given file position p.
PositionFor converts a Pos p in the fileset into a Position value.
PositionFor returns the Position value for the given file position p.
Positioned errors are of the form filename:line:column: message .
Positive CompressionLevel values are reserved to mean a numeric zlib compression level, although that is not implemented yet.
Positive or negative.
Posix and Perl extensions
Posix character classes
Possible ISA values should be defined by the applicable ABI specification.
Possible lengths are codegenCodeCount, offsetCodeCount and maxNumLit.
Possible lock states are mutex_unlocked, mutex_locked and mutex_sleeping.
Possible new registers to copy into.
Possible optimization: Anonymous pointer types *T where T is a named type are common.
Possible space optimization.
Possible tophash values.
Possible values for the EncryptPEMBlock encryption algorithm.
Possibly still more uses.
Possibly we could add some assembly syntax so that the name of the variable does not have to be assumed.
Post is a wrapper around DefaultClient.Post.
Post issues a POST to the specified URL.
Post with known length
Post with unknown length
PostForm contains the parsed form data from POST, PATCH, or PUT body parameters.
PostForm is a wrapper around DefaultClient.PostForm.
PostForm issues a POST to the specified URL, with data's keys and values URL-encoded as the request body.
PostFormValue calls ParseMultipartForm and ParseForm if necessary and ignores any errors returned by these functions.
PostFormValue returns the first value for the named component of the POST or PUT request body.
PostProcessor is a function that applies post-processing to the report output
PostURL issues a POST to a URL over HTTP.
Pow returns x**y, the base-x exponential of y.
Pow10 returns 10**e, the base-10 exponential of e.
Power series package A power series is a channel, along which flow rational coefficients.
Power-series constructors return channels on which power series flow.
Powers of ten taken from double-conversion library.
Pprof interprets and displays profiles of Go programs.
Pprof will ignore, but useful for people
Pre-check to be sure that spilled value is still in expected register on all exits where live.
Pre-clobber destination.
Pre-initialization function ptrs.
Prec returns the mantissa precision of x in bits.
Precedence for the XML element name is as above, except that we do not look inside structs for the first field.
Precedence for the XML element name is: 0.
Precedence returns the operator precedence of the binary operator op.
Precision for shortest representation mode.
Precision has no effect for binary complex format.
Precision has no effect for binary float format.
Precision is specified after the (optional) width by a period followed by a decimal number.
Precision of 0 and value of 0 means "print nothing" but padding.
Precision returns the value of the precision option and whether it has been set.
Precision, rounding, and accuracy reporting are as for Add.
Precisions below 4 should print 4 digits.
Precompute performs some calculations that speed up private key operations in the future.
Precompute the reflect type for error.
Precomputed contains precomputed values that speed up private operations, if available.
Precondition: the Types, Uses and Defs maps are populated.
Precondition: the Uses and Defs maps are populated.
Predeclared alias types.
Predeclared error interface type.
Predeclared types should have been found in the type map.
Predefined because it's needed by the Decoder
Predefined constants in the package implement common layouts.
Predefined global functions are named as follows.
Predefined layouts ANSIC, UnixDate, RFC3339 and others describe standard and convenient representations of the reference time.
Predefined mode bits to control recognition of tokens.
Predefined polynomials.
Predict iterations/sec.
Predict required iterations.
Preempt G if it's running for too long.
Preempt that by emitting the padding here.
Preempted goroutines are scanned before P schedules next goroutine.
Preemption must be disabled (because this uses a gcWork).
Preemption must be disabled.
Preemption sets stackguard to StackPreempt, a very large value.
Prefer Equal to Compare for equality comparisons.
Prefer Gs with stacks.
Prefer a free connection, if possible.
Prefer debug data over DWARF debug output, if we have it.
Prefer error for original name.
Prefer higher precedence.
Prefer longer common prefixes, but only for IPv4 address pairs in the same special-purpose block.
Prefer matching scope.
Prefer smaller scope.
Prefer the Host: header, but if that is not given, use the host from the request URL.
Prefer the lowest-level path to the reference (for escape purposes).
Prefer to record entries with errors, so we can report them.
PreferServerCipherSuites controls whether the server selects the client's most preferred ciphersuite, or the server's most preferred ciphersuite.
Prefix is a Markov chain prefix of one or more words.
Prefix returns a literal string that all matches for the regexp must start with.
Prefix returns the output prefix for the logger.
Prefix returns the output prefix for the standard logger.
Prefixes applied to the instruction.
Prefixes are certainly the most complex and underspecified part of decoding x86 instructions.
Prefixes are preferred over tables when there is one child, but the root node always uses a table for lookup efficiency.
Prefixes is an array of prefixes associated with a single instruction.
Premature consumption of the request body should not be occurred.
Prepare GC data if any.
Prepare Go import path list.
Prepare a temporary directory that will be cleaned up at the end.
Prepare build + run + print actions for all packages being tested.
Prepare ch so that only one update of resolverConfig may run at once.
Prepare creates a prepared statement for later queries or executions.
Prepare creates a prepared statement for use within a transaction.
Prepare extended header
Prepare field name and parents.
Prepare for next iteration.
Prepare for stack barrier insertion/removal.
Prepare returns a prepared statement, bound to this connection.
Prepare some data to insert into the template.
Prepare the table, no need in constant time access, because the power is not a secret.
Prepare to checkout new copy.
Prepare variable sized arrays.
Prepend captured variables to argument list.
Prepend params and decls.
Prepopulate invariant part of the header.
Prepopulate the invariant header part.
Prerequisite for dwarfaddelfheaders().
Presence of this creates a crash
Preserve Go runtime frames that appear in the middle/bottom of the stack.
Preserve attribute boundaries.
Preserve the portion between written and the comment start.
Preserve those values - even though they are unused - in order to keep their addresses live for use in stack traces.
Presotto says it's okay to assume that servers listed in /etc/resolv.conf are recursive resolvers.
Pretend it has not happened and retry.
Pretend we go through the buffer, even though we copy directly.
Pretty print a list of variables.
Pretty print a variable node.
Prev returns the previous list element or nil.
Prev returns the previous ring element.
Prevent IdentifierNames and NumericLiterals from running into keywords: in, instanceof, typeof, void
Prevent asking by setting GIT_ASKPASS.
Prevent breaking out of text node and element boundaries.
Prevent completion of mark 2 until we've flushed cached workbufs.
Prevent deadlock from recursively starting GC by disabling preemption.
Prevent execution of unsafe templates.
Prevent external implementations.
Prevent fatal from waiting on our own goroutine's bghelper to exit:
Prevent state machine CPU attacks (making us redo work up to the point of finding out we don't have enough data)
Prevent the compiler from applying escape analysis.
Prevents false sharing.
Previous buffer entirely whitespace, read again
Previous failed attempts have tried calling runtime.Gosched and runtime.GC, but neither is reliable.
Previously it deadlocked.
Previously profile special records could have been processed prematurely (while the object is still live).
Previously we put the obj in an 8 element buffer that is drained at a rate to give the PREFETCH time to do its work.
Previously we were leaking one per numReq.
Previously: bug.go:1 x redclared in this block previous declaration at bug.go:1
Primarily useful for testing software div/mod.
Primary refused, fallback without delay.
Prime returns a number, p, of the given size, such that p is prime with high probability.
Prime to not correlate with any user patterns.
Primordial types, needed during initialization.
Print Go version Usage: go version Version prints the Go version, as reported by runtime.Version.
Print a header in our output.
Print a list of expressions.
Print all currently active panics.
Print and parse, to update any missing scoping or position information for subsequent fixers.
Print as many newlines as necessary (but at least min newlines) to get to the current line.
Print calls Output to print to the standard logger.
Print calls l.Output to print to the logger.
Print controller state in terms of the design document.
Print directly to root's io.Writer so there is no delay.
Print dumps a text representation of a profile.
Print dumps events to stdout.
Print each file associated with this function.
Print each spec only if there is at least one exported symbol in it.
Print formats using the default formats for its operands and writes to standard output.
Print gctrace before dropping worldsema.
Print incoming edges.
Print instruction as 32-bit words.
Print instruction as bytes.
Print memstats information too.
Print n terms of a power series
Print outgoing edges.
Print package-level variables in initialization order.
Print prints a disassembly of the file to w.
Print prints x to standard output, skipping nil fields.
Print r both as a fraction and as a floating-point number.
Print shows a message to the user.
Print successors if it's not just the next one
Print the cleaned-up body text to stdout.
Print the error between 2 and x*x.
Print the function body into buffer buf.
Print the imports from the file's AST.
Print the method sets of Celsius and *Celsius.
Print the modified AST.
Print the result of GoString unadorned.
Print the tree of scopes.
Print with possible :: in place of run of zeros
Print(fset, x) is the same as Fprint(os.Stdout, fset, x, NotNilFilter).
PrintDefaults prints to standard error the default values of all defined command-line flags in the set.
PrintDefaults prints, to standard error unless configured otherwise, a usage message showing the default settings of all defined command-line flags.
PrintErr shows an error message to the user.
PrintError is a utility function that prints a list of errors to w, one error per line, if the err parameter is an ErrorList.
PrintEvent dumps the event to stdout.
PrintList returns source code of trace printing part correspondent to syscall return values.
PrintRanges defines the set of printable characters according to Go.
PrintStack prints to standard error the stack trace returned by runtime.Stack.
Printable US-ASCII, excluding backslash or quote.
PrintableString parsePrintableString parses a ASN.1 PrintableString from the given byte array and returns it.
Printf calls Output to print to the standard logger.
Printf calls l.Output to print to the logger.
Printf formats according to a format specifier and writes to standard output.
Printf is fmt.Printf guarded by -v.
Printf is used by the test so we must declare it.
Printing f should result in a correct program no matter what the (incorrect) comment position is.
Printing local variables in inliner shadows global names.
Println calls Output to print to the standard logger.
Println calls l.Output to print to the logger.
Println formats using the default formats for its operands and writes to standard output.
Println is fmt.Println guarded by -v.
Println is variadic user-defined Println-like function.
Prints a basic block annotated with the information computed by liveness analysis.
Prints a control flow graph annotated with any information computed by liveness analysis.
Prints an argument passed to panic.
Prints fields with tag "ipv4" or "ipv6" as IP addresses.
Prints the computed liveness information and inputs, for debugging.
Prior to Android-L, logging was done through writes to /dev/log files implemented in kernel ring buffers.
Prior to Go 1.1, anonymous struct fields were ignored.
Prior to TLS 1.2, an additional MD5 hash is required.
Priority is positive if this node is a complete key, and zero otherwise.
Priority is set if FlagHeadersPriority is set in the FrameHeader.
Priority, if non-zero, includes stream priority information in the HEADER frame.
PriorityParam are the stream prioritzation parameters.
Private implementation past this point.
Private interface for the runtime.
PrivateKey contains the private key corresponding to the public key in Leaf.
PrivateKey represents a DSA private key.
PrivateKey represents a ECDSA private key.
PrivateKey represents a private key using an unspecified algorithm.
Probably a negated class.
Probably a type check problem.
Probably a type conversion.
Probably can't happen.
Probably just a socket-late-binding dial from the default transport that lost the race (and thus this connection is now idle and will never be used).
Probably running "go test -cover" not "go test -cover fmt".
ProbablyPrime performs n Miller-Rabin tests to check whether x is prime.
ProbablyPrime performs n Miller-Rabin tests to check whether z is prime.
Problematic time zone format needs special tests.
ProcAttr holds attributes that will be applied to a new process started by StartProcess.
ProcAttr holds the attributes that will be applied to a new process started by StartProcess.
Proceed to add files to w.
Process Body,ContentLength,Close,Trailer
Process a single pair.
Process all the fields at this depth, now listed in 'current'.
Process all the non-phi values.
Process and reformat export data.
Process calls in this span.
Process dependencies, now that we know what they are.
Process each line in the run.
Process final partial byte and rewind to start.
Process in an ordering defined by the register specification (most constrained first).
Process is the underlying process, once started.
Process one instruction.
Process option settings.
Process package, which might now be multiple packages due to wildcard expansion.
Process phi ops in succ.
Process report generation commands.
Process simple commands.
Process stores the information about a process created by StartProcess.
Process sub-elements along the way.
Process test dependencies when -t is specified.
Process the destinations until they are all satisfied.
Process the remaining segments until the End Of Image marker.
Process the where clause, skipping non-match rows.
Process top-level declarations in phases.
ProcessRemoteIO will execute submit IO requests on behalf of other goroutines, all on a single os thread, so it can cancel them later.
ProcessState contains information about an exited process, available after a call to Wait or Run.
ProcessState stores information about a process, as reported by Wait.
Processes Not supported on NaCl - just enough for package os.
Processing below here calls g.errorf on failure, which does panic(stop).
Processor-dependent address.
Processor-specific flags
Processor-specific semantics.
Producer: sends to myc.
Profile is an in-memory representation of profile.proto.
Profile represents the profiling data for a specific file.
Profile responds with the pprof-formatted cpu profile.
ProfileBlock represents a single block of profiling data.
Profiles must be compatible (same Type and SampleType).
Profiles returns a slice of all the known profiles, sorted by name.
Profiling runs concurrently with GC, so it must not allocate.
Profiling tests are inherently flaky, especially on a loaded system, such as when this test is running with several others under go test std.
ProgInfo holds information about the instruction for use by clients such as the compiler.
Program header file offset.
Program header table entry count
Program header table entry size
Program header table file offset
Program to subtract nearest integer multiple of PI
Programs that change the memory profiling rate should do so just once, as early as possible in the execution of the program (for example, at the beginning of main).
Programs that must disable HTTP/2 can do so by setting Transport.TLSNextProto (for clients) or Server.TLSNextProto (for servers) to a non-nil, empty map.
Programs that need more control over error handling or large tokens, or must run sequential scans on a reader, should use bufio.Reader instead.
Programs that use Contexts should follow these rules to keep interfaces consistent across packages and enable static analysis tools to check context propagation:
Programs that use unsafe can evade this restriction easily, so we don't try to catch them.
Programs using times should typically store and pass them as values, not pointers.
Prologue defining TSAN functions in C.
PrologueEnd indicates that Address is one (of possibly many) PCs where execution should be suspended for a breakpoint on entry to the containing function.
PromiseID is the required Stream ID which this Push Promises
Promote current overflow buckets to the old generation.
Promoted and visible when embedD is embedded.
PropList.txt has the same format as Scripts.txt so we can share its parser.
Propagate any type information that would get lost otherwise when unexported constants are filtered.
Propagate backwards to the start of the block
Propagate backwards to the start of the block Assumes Values have been scheduled.
Propagate context over the body.
Propagate desired registers backwards.
Propagate liveness backwards to the start of the block.
Propagate the Floyd-Steinberg quantization error.
Propagate the used flag for typeswitch variables up to the NONAME in it's definition.
Propagate write barrier depth up from callees.
Properties of basic types.
Proportional sweep is done or disabled.
Protect against panic during Compile.
Protect s such that is passes through the tabwriter unchanged.
Protected by FixAlloc locks.
Protected by an RWMutex because we read it a lot and write it only when we see a new type, typically when compiling.
Protected by either heap or GC lock.
Protected by mheap or stopping the world during GC.
ProtoAtLeast reports whether the HTTP protocol used in the request is at least major.minor.
ProtoAtLeast reports whether the HTTP protocol used in the response is at least major.minor.
Protocol driver not attached
Protocol family not supported
Protocol not available
Protocol returns a protocol number.
Protocol wrong type for socket
Prototypes needed for type synthesis.
Provide a block for the dead code so that we don't have to add special cases everywhere else.
Provide a way to force a re-prepare of a statement on next execution
Provide the the index of a symbol reference by symbol name.
Provided by package runtime.
Provided that T2 is no larger than T1 and that the two share an equivalent memory layout, this conversion allows reinterpreting data of one type as data of another type.
Providing an invalid base argument leads to a run- time panic.
Providing an invalid base argument will lead to a run-time panic.
ProxyFromEnvironment returns the URL of the proxy to use for a given request, as indicated by the environment variables HTTP_PROXY, HTTPS_PROXY and NO_PROXY (or the lowercase versions thereof).
ProxyURL returns a proxy function (for use in a Transport) that always returns the same URL.
Prune locs from each Sample
Prune removes all nodes beneath a node matching dropRx, and not matching keepRx.
Ps aren't allowed to cache work during mark termination.
Ps is the set of Unicode characters in category Ps.
Psalter_Pahlavi is the set of Unicode characters in script Psalter_Pahlavi.
Pseudo-assembly statements.
Pseudo-op, like TEXT, GLOBL, TYPE, PCDATA, FUNCDATA.
Pseudo-ops for parsing stack.
Pseudo-register reference.
Pseudo-registers whose names are the constant name without the leading R.
PseudoFields returns the pseudo header fields of mh.
PseudoValue returns the given pseudo header field's value.
Ptr emits a 1 into the bit stream at the given bit index.
PtrTo returns the pointer type with element t.
PtrType contains Type fields specific to pointer types.
Ptrace Register structures
Ptrmask and heap bitmap are aligned.
Ptrmask and heap bitmap are misaligned.
Ptrto returns the Type *t.
Public memory sanitizer API.
Public returns the public key corresponding to priv.
Public returns the public key corresponding to the opaque, private key.
PublicKey represents a DSA public key.
PublicKey represents a public key using an unspecified algorithm.
PublicKey represents an ECDSA public key.
PublicSuffix returns the public suffix of domain.
PublicSuffixList is the public suffix list that determines whether an HTTP server can set a cookie for a domain.
PublicSuffixList provides the public suffix of a domain.
Publish declares a named exported variable.
Pull the list out into a local variable, waiters will be readied outside the lock.
Pull the real size out of the stat message.
Punct/P is the set of Unicode punctuation characters, category P.
Purge all cached G's from gfree list to the global list.
Push K elements randomly onto the stacks.
Push a marker onto the tag stack so that MarshalXML cannot close the XML tags that it did not open.
Push adds tr to the top (end) of the input stack.
Push and Pop use pointer receivers because they modify the slice's length, not just its contents.
Push avarinitall, avarinitany forward.
Push data through a pipe that compresses at the write end, and decompresses at the read end.
Push pushes the element x onto the heap.
Push records that at that lineno a new file with the given name was pushed onto the input stack.
Push tokenizer for file onto stack.
PushBack inserts a new element e with value v at the back of list l and returns e.
PushBackList inserts a copy of an other list at the back of list l.
PushFront inserts a new element e with value v at the front of list l and returns e.
PushFrontList inserts a copy of an other list at the front of list l.
PushPromiseParam are the parameters for writing a PUSH_PROMISE frame.
Pushing it here will inhibit that.
Put Gs back on the free list.
Put X, but extracted Y.
Put a batch of runnable goroutines on the global runnable queue.
Put a marker at the end.
Put adds the ClientSessionState to the cache with the given key.
Put adds the provided (sessionKey, cs) pair to the cache.
Put adds x to the pool.
Put all functions into one Obj.
Put argument in canonical form, but preserve leading ./.
Put b on full list - let first half of b get stolen.
Put copies b into the buffer.
Put down extra digits.
Put file and line information on head of message.
Put full string into error.
Put g and a batch of work from local runnable queue on global queue.
Put gp at the head of the global runnable queue.
Put gp on the global runnable queue.
Put it back and read it again.
Put it on the queue of g's waiting to run.
Put mp on midle list.
Put p to on _Pidle list.
Put the action for p1 into a.deps.
Put the action for that shared library into a.deps.
Put the file in the same package as the one being tested.
Put the idle conn back into the pool before we send the response so if they process it quickly and make another request, they'll get this same conn.
Put this after Handshake, in case people were calling Read(nil) for the side effect of the Handshake.
Put this data in a read-only section.
Put1 appends one byte to the end of the buffer.
Put2 appends two bytes to the end of the buffer.
Put3 appends three bytes to the end of the buffer.
Put4 appends four bytes to the end of the buffer.
PutIdleConn is called before the caller's Response.Body.Close call returns.
PutIdleConn is called when the connection is returned to the idle pool.
PutIdleConn is not called if connection reuse is disabled via Transport.DisableKeepAlives.
PutInt16 writes v into the buffer using little-endian encoding.
PutInt32 writes v into the buffer using little-endian encoding.
PutInt64 writes v into the buffer using little-endian encoding.
PutUvarint encodes a uint64 into buf and returns the number of bytes written.
PutVarint encodes an int64 into buf and returns the number of bytes written.
Puts the current goroutine into a waiting state and calls unlockf.
Puts the current goroutine into a waiting state and unlocks the lock.
Putting the + 1 inside the numerator as a + 7 keeps the numerator from being negative, which would cause it to round incorrectly.
Python rejects names starting with digits.
QEncoding represents the Q-encoding scheme as defined by RFC 2047.
Quality ranges from 1 to 100 inclusive, higher is better.
Quantization table destination selector.
Quantization tables, in zig-zag order.
Quantize appends up to cap(p) - len(p) colors to p and returns the updated palette suitable for converting m to a paletted image.
Quantize to the second only.
Quantizer is used to produce a palette with size NumColors.
Quantizer produces a palette for an image.
Queries to test the Jar.Cookies method
Query executes a prepared query statement with the given arguments and returns the query results as a *Rows.
Query executes a query that may return rows, such as a SELECT.
Query executes a query that returns rows, typically a SELECT.
Query may return ErrSkip.
Query parses RawQuery and returns the corresponding values.
QueryEscape escapes the string so it can be safely placed inside a URL query.
QueryRow always returns a non-nil value.
QueryRow executes a prepared query statement with the given arguments.
QueryRow executes a query that is expected to return at most one row.
Queryer is an optional interface that may be implemented by a Conn.
Queue embedded struct fields for processing with next level, but only if we haven't seen a match yet at this level and only if the embedded types haven't already been queued.
Queue of runnable goroutines.
Queue of subtests to be run in parallel.
Queue root marking jobs.
Queue the obj for scanning.
Quick check for canonical encoding.
Quick check for top-level name, or struct without anonymous fields.
Quit sends the QUIT command and closes the connection to the server.
Quo panics with ErrNaN if both operands are zero or infinities.
Quo sets z to the quotient x/y and returns z.
Quo sets z to the rounded quotient x/y and returns z.
QuoRem implements T-division and modulus (like Go):
Quotation_Mark is the set of Unicode characters with property Quotation_Mark.
Quote and QuoteToASCII convert strings to quoted Go string literals.
Quote returns a double-quoted Go string literal representing s.
Quote, control characters are invalid.
QuoteRune and QuoteRuneToASCII are similar but accept runes and return quoted Go rune literals.
QuoteRune returns a single-quoted Go character literal representing the rune.
QuoteRuneToASCII returns a single-quoted Go character literal representing the rune.
QuoteRuneToGraphic returns a single-quoted Go character literal representing the rune.
QuoteToASCII returns a double-quoted Go string literal representing s.
QuoteToGraphic returns a double-quoted Go string literal representing s.
Quoted angle brackets do not count for nesting.
Quoted empty string is OK.
Quotes further inside the string do not count.
Quotes outside if/else.
Quotes, slashes and angle brackets get quoted.
Quotient parity is whether we subtract on last round.
Quoting all attributes is the best policy.
R0 is scratch, set by DUFFCOPY, cannot be substituted.
R0 is zero, used by DUFFZERO, cannot be substituted.
R0: always zero R1 (aka REGRT1): ptr to memory to be zeroed - 8 On return, R1 points to the last zeroed dword.
R0: always zero R3 (aka REGRT1): ptr to memory to be zeroed - 8 On return, R3 points to the last zeroed dword.
R0: scratch space R1: ptr to source memory R2: ptr to destination memory R1 and R2 are updated as a side effect
R0: zero R1: ptr to memory to be zeroed R1 is updated as a side effect.
R1 is ptr to memory, used and set, cannot be substituted.
R1 op R2 or r1 op constant.
R1, R2 are ptr to src, dst, used and set, cannot be substituted.
R1, R2 areptr to src, dst, used and set, cannot be substituted.
R16 is ptr to memory, used and set, cannot be substituted.
R16, R17 are ptr to src, dst, used and set, cannot be substituted.
R27 is scratch, set by DUFFCOPY, cannot be substituted.
R3 is ptr to memory, used and set, cannot be substituted.
R3 is scratch, set by DUFFCOPY, cannot be substituted.
R3, R4 are ptr to src, dst, used and set, cannot be substituted.
R31 is zero, used by DUFFZERO, cannot be substituted.
R5 is scratch, set by DUFFCOPY, cannot be substituted.
REGRT1 is reserved on arm64, see arm64/gsubr.go.
REGSP for auto variables
REGZERO is treated as a GPR.
RESOLUTION: This program is illegal.
REX 64-bit extension prefix
RFC 1423 describes the encryption of PEM blocks.
RFC 1951 3.2.7 specifies a special run-length encoding for specifying the literal and offset lengths arrays (which are concatenated into a single array).
RFC 1952, section 2.2, says the following: A gzip file consists of a series of "members" (compressed data sets).
RFC 2047 "Q"-encoded US-ASCII address.
RFC 2616 Section 14.13 says Content-Length should be specified unless body is prohibited by the request method.
RFC 2616 neither explicitly permits nor forbids an entity-body on a GET request so we permit one if declared, but we default to 0 here (not -1 below) if there's no mention of a body.
RFC 2616 recommends that a short note "SHOULD" be included in the response because older user agents may not understand 301/307.
RFC 2616 section 10.3.5: "the response MUST NOT include other entity-headers"
RFC 2616 section 4.1 tolerance for old buggy clients.
RFC 2616, section 7.2.1 - empty type SHOULD be treated as application/octet-stream
RFC 2616: Must treat GET /index.html HTTP/1.1 Host: www.google.com and GET http://www.google.com/index.html HTTP/1.1 Host: doesntmatter the same.
RFC 2616: Should treat Pragma: no-cache like Cache-Control: no-cache
RFC 3279 2.2.1 RSA Signature Algorithms
RFC 3279 2.2.3 ECDSA Signature Algorithm
RFC 3279, 2.3 Public Key Algorithms
RFC 3339 is clear that years are 4 digits exactly.
RFC 4346 on the certificateAuthorities field: A list of the distinguished names of acceptable certificate authorities.
RFC 4648 also defines an alternate encoding, which is the standard encoding with - and _ substituted for + and /.
RFC 5246 section 6.3 says that the largest PRF output needed is 128 bytes.
RFC 5280 4.2.2.1: Authority Information Access
RFC 5280, 4.2.2.1 (Authority Information Access)
RFC 5322, Appendix A.1.3 TODO(dsymonds): Group addresses.
RFC 5322, Appendix A.6.2 Obsolete date.
RFC 5480, 2.1.1 Unrestricted Algorithm Identifier and Parameters
RFC 5758 3.1 DSA Signature Algorithms
RFC 5758 3.2 ECDSA Signature Algorithm
RFC 6874 allows over-escaping in zone
RFC 7230 3.3.2 says "A sender MUST NOT send a Content-Length header field in any message that contains a Transfer-Encoding header field."
RFC suggests that EOF without an alertCloseNotify is an error, but popular web sites seem to do this, so we can't make it an error.
RFC1123 with numeric zone
RFC822 with numeric zone
RGBA is an in-memory image whose At method returns color.RGBA values.
RGBA represents a traditional 32-bit alpha-premultiplied color, having 8 bits for each of red, green, blue and alpha.
RGBA returns the alpha-premultiplied red, green, blue and alpha values for the color.
RGBA64 is an in-memory image whose At method returns color.RGBA64 values.
RGBA64 represents a 64-bit alpha-premultiplied color, having 16 bits for each of red, green, blue and alpha.
RGBToCMYK converts an RGB triple to a CMYK quadruple.
RGBToYCbCr converts an RGB triple to a Y'CbCr triple.
RGBToYCbCr does saturating arithmetic.
RInverse contains 1/R mod p - the inverse of the Montgomery constant (2**257).
RLock locks rw for reading.
RLocker returns a Locker interface that implements the Lock and Unlock methods by calling rw.RLock and rw.RUnlock.
RPC params is struct.
RSA is a single, fundamental operation that is used in this package to implement either public-key encryption or public-key signatures.
RSA is able to encrypt only a very limited amount of data.
RV_390_DBL is a s390x-specific relocation variant that indicates that the value to be placed into the relocatable field should first be divided by 2.
R_ADDRARM64 relocates an adrp, add pair to compute the address of the referenced symbol.
R_ADDRMIPS (only used on mips64) resolves to the low 16 bits of an external address, by encoding it into the instruction.
R_ADDRMIPSTLS (only used on mips64) resolves to the low 16 bits of a TLS address (offset from thread pointer), by encoding it into the instruction.
R_ADDRMIPSU (only used on mips64) resolves to the sign-adjusted "upper" 16 bits (bit 16-31) of an external address, by encoding it into the instruction.
R_ADDROFF resolves to a 32-bit offset from the beginning of the section holding the data being relocated to the referenced symbol.
R_ADDRPOWER_PCREL relocates a D-form, DS-form instruction sequence like R_ADDRPOWER_DS but inserts the offset of the GOT slot for the referenced symbol from the TOC rather than the symbol's address.
R_ADDRPOWER_TOCREL relocates two D-form instructions like R_ADDRPOWER, but inserts the offset from the TOC to the address of the the relocated symbol rather than the symbol's address.
R_ARM64_GOTPCREL relocates an adrp, ld64 pair to compute the address of the GOT slot of the referenced symbol.
R_ARM_V4BX is ABS relocation, so this symbol is a dummy symbol, ignore it
R_CALLMIPS (only used on mips64) resolves to non-PC-relative target address of a CALL (JAL) instruction, by encoding the address into the instruction.
R_DWARFREF resolves to the offset of the symbol from its section.
R_JMPMIPS (only used on mips64) resolves to non-PC-relative target address of a JMP instruction, by encoding the address into the instruction.
R_METHODOFF relocations to fields of runtime.method
R_METHODOFF resolves to a 32-bit offset from the beginning of the section holding the data being relocated to the referenced symbol.
R_PCRELDBL relocates s390x 2-byte aligned PC-relative addresses.
R_POWER_TLS marks an X-form instruction such as "MOVD 0(R13)(R31*1), g" as accessing a particular thread-local symbol.
R_POWER_TLS_IE is used to implement the "initial exec" model for tls access.
R_POWER_TLS_LE is used to implement the "local exec" model for tls access.
R_USETYPE resolves to an *rtype, but no relocation is created.
Rabin-Karp search from the end of the string
Race detector/MSan uses cgo.
Racing with execution or readying of gp.
Racy programs do not have the right to finish successfully.
Radical is the set of Unicode characters with property Radical.
Raise limit to allow frame.
Raises complex A to the complex Zth power.
Ran out of fixed array: skip.
Rand provides the source of entropy for nonces and RSA blinding.
Random UDP source port (net.Dial should do that for us).
Random byte, number generation.
Random numbers are generated by a Source.
Random replacement prevents a performance cliff if a recursive stack's cycle is slightly larger than the cache.
Randomly decide who plays first
Range expression whose evaluation has side-effects
Range is full: folding can't add more.
Range is outside folding possibilities.
Range reduction is from three intervals into the interval from zero to 0.66.
Range reduction is into intervals of pi/4.
Range reduction is modulo pi/4.
Range16 represents of a range of 16-bit Unicode code points.
Range32 represents of a range of Unicode code points and is used when one or more of the values will not fit in 16 bits.
RangeTable defines a set of Unicode code points by listing the ranges of code points within the set.
Ranging over an array value is uncommon though.
Rare case: the request was written in writeLoop above but before it could send to pc.writeErrCh, the reader read it all, processed it, and called us here.
Rather than be a source of test cases for glibc, disable dynamic linking the same way that gcc would.
Rather than calling this function directly, clients should typically use the DWARF method of the File type of the appropriate package debug/elf, debug/macho, or debug/pe.
Rather than distribute them all individually, we ship them in an uncompressed zip file.
Rather than hard-code specific error cases, we just look for that string.
Rather than reject the connection, Go doesn't select a protocol when there is no overlap.
Rather than require memory barriers, which will slow down both the mutator and the GC, we always grey the ptr object regardless of the slot's color.
Rather than try to link with RE2, we read a log file containing the test cases and the expected matches.
Rather, we precompute a prefix of the digest value that makes a valid ASN1 DER string with the correct contents.
Ratio to divide sample values
Raw text of unparsed attribute-value pairs
RawBytes is a byte slice that holds a reference to memory owned by the database itself.
RawContent is used to signal that the undecoded, DER data needs to be preserved for a struct.
RawMessage is a raw encoded JSON value.
RawPath is a hint as to the encoding of Path to use in url.EscapedPath.
RawStdEncoding is the standard raw, unpadded base64 encoding, as defined in RFC 4648 section 3.2.
RawToken is like Token but does not verify that start and end elements match and does not translate name space prefixes to their corresponding URLs.
RawURLEncoding is the unpadded alternate base64 encoding defined in RFC 4648.
Rcpt issues a RCPT command to the server using the provided email address.
Re-check transition condition under transition lock.
Re-check under the lock if we need to do anything.
Re-exec the test binary itself to emulate "sleep 1".
Re-execute this test with constant GC and stack barriers at every frame.
Re-scan the whole stack.
Reach into the buffer and smash the count to make the encoded slice very long.
Reachable from the heap
Reached end of top-level value.
Reached for trailing minus signs since "---" is the same as "-- -".
Reached the end without finding the EOD marker.
Reached the matching newselect.
Reacquire the count for sequential tests.
Read a bit before we cancel.
Read a name and append its bytes to d.buf.
Read a varint, which is 7 bits per byte, little endian.
Read all notes from f.
Read an elfAttribute from the list following the rules used on ARM systems.
Read an extension header and parse its entries.
Read and Write take their byte counts from the length of the argument slice.
Read and decode ELF identifier
Read and decode Mach magic to determine byte order, size.
Read and decode ModR/M if needed by opcode.
Read and decode Plan 9 magic
Read and validate trace header.
Read and verify correctness of data.
Read can be called concurrently with Write, but not with another Read.
Read child error status from pipe.
Read continuation lines.
Read copies bytes from the buffer into p.
Read data from the new position.
Read directly into p to avoid copy.
Read entire file header.
Read entries forward.
Read escaped character expression up to semicolon.
Read event type and number of arguments (1 byte).
Read first line of __.PKGDEF data, so that line is once again the first line of the input.
Read first line to make sure this is an object file.
Read from file, collecting header for __.PKGDEF.
Read from next file, if necessary.
Read generates len(p) random bytes and writes them into p.
Read generates len(p) random bytes from the default Source and writes them into p.
Read got EOF, so pipe closed on exec, so exec succeeded.
Read header, payload.
Read implements the Conn Read method.
Read implements the standard Read interface: it reads data from the pipe, blocking until a writer arrives or the write end is closed.
Read in one goroutine.
Read in the test file (testTest) and write it, with LINEs specified, to coverInput.
Read include directories table.
Read into buffer of that size.
Read is a helper function that calls Reader.Read using io.ReadFull.
Read is the usual method.
Read it back with ReadRune
Read it just once and use that same value now and below.
Read it multiple times.
Read just enough of the target to fetch the build ID.
Read literal and/or (length, distance) according to RFC section 3.2.3.
Read may timeout, it depends on the platform
Read nCodes and h.vals (and derive h.nCodes).
Read new data: try a limited number of times.
Read next request from connection.
Read non-REX prefixes.
Read of x must be outside of the mutex.
Read on the body after it's been fully read:
Read on the body, even though it's closed
Read operations must do rwlock(true)/rwunlock(true).
Read optional header.
Read past the peeked origName, now that we're done with it, using the rfBuf (also no longer used) as the scratch space.
Read plain text section (XML calls it character data).
Read presents one or more IDAT chunks as one continuous stream (minus the intermediate chunk headers and footers).
Read profile to look for entries for runtime.gogo with an attempt at a traceback.
Read reads and decodes quoted-printable data from the underlying reader.
Read reads data from the connection.
Read reads data into p.
Read reads from the current entry in the tar archive.
Read reads one record from r.
Read reads structured binary data from r into data.
Read reads the body of a part, after its headers and before the next part (if any) begins.
Read reads the next len(p) bytes from the buffer or until the buffer is drained.
Read reads the next response from the wire.
Read reads the sparse file data in expanded form.
Read reads up to len(b) bytes from the File.
Read reads up to len(p) bytes into p.
Read replaces the contents of dst with zeros.
Read returns a line of text (a command) read from the user.
Read returns the next request on the wire.
Read satisfies reads by decoding dot-encoded data read from d.r.
Read standard opcode length table.
Read the 16-bit length of the segment.
Read the body if small so underlying TCP connection will be re-used.
Read the bytes for the value.
Read the compression header.
Read the concrete value.
Read the data with occasional UnreadByte calls.
Read the decompressed bytes.
Read the directory one entry at a time.
Read the fat_header struct, which is always in big endian.
Read the file again, and push it through a pipe that compresses at the write end, and decompresses at the read end.
Read the file, as golden output.
Read the final statistics
Read the first 32 kB of the binary file.
Read the four entries from the main tar header
Read the header (RFC 1950 section 2.2.).
Read the image again, encode it, and decode it.
Read the inner text/plain and text/html sections of the multipart/alternative.
Read the length and chunk type of the next chunk, and check that it is an IDAT chunk.
Read the length and chunk type.
Read the name of the concrete type.
Read the next Huffman-encoded symbol from f according to h.
Read the number of FatArchHeaders that come after the fat_header.
Read the type id of the concrete value.
Read them back with ReadRune
Read until we reach offset.
Read up to maxPostHandlerReadBytes bytes of the body, looking for for EOF (and trailers), so we can re-use this connection.
Read waits until data is available and copies bytes from the buffer into p.
Read whole value into buffer.
Read with length 0 should not return EOF.
Read-only file system
ReadAll reads all the remaining records from r.
ReadAll reads from r until an error or EOF and returns the data it read.
ReadAt reads len(b) bytes from the File starting at byte offset off.
ReadAt reads len(p) bytes into p starting at offset off in the underlying input source.
ReadAt writes len(p) 0s into p.
ReadAtLeast reads from r into buf until it has read at least min bytes.
ReadBits64 reads the given number of bits and returns them in the least-significant part of a uint64.
ReadByte reads and returns a single byte.
ReadByte reads and returns the next byte from the buffer.
ReadByte reads and returns the next byte from the input.
ReadBytes reads until the first occurrence of delim in the input, returning a slice containing the data up to and including the delimiter.
ReadCloser is the interface that groups the basic Read and Close methods.
ReadCodeLine reads a response code line of the form code message where code is a three-digit status code and the message extends to the rest of the line.
ReadContinuedLine reads a possibly continued line from r, eliding the final trailing ASCII white space.
ReadDir reads the directory named by dirname and returns a list of directory entries sorted by filename.
ReadDir returns a slice of os.FileInfo, sorted by Name, describing the content of the named directory.
ReadDotBytes reads a dot-encoding and returns the decoded data.
ReadFile reads the file named by filename and returns the contents.
ReadForm parses an entire multipart message whose parts have a Content-Disposition of "form-data".
ReadFrame reads a single frame.
ReadFrameHeader reads 9 bytes from r and returns a FrameHeader.
ReadFrom implements io.ReaderFrom.
ReadFrom implements the PacketConn ReadFrom method.
ReadFrom implements the io.ReaderFrom ReadFrom method.
ReadFrom is here to optimize copying from an *os.File regular file to a *net.TCPConn with sendfile.
ReadFrom reads a packet from the connection, copying the payload into b.
ReadFrom reads data from r until EOF and appends it to the buffer, growing the buffer as needed.
ReadFrom reads data from r until EOF or error.
ReadFromIP reads an IP packet from c, copying the payload into b.
ReadFromUDP reads a UDP packet from c, copying the payload into b.
ReadFromUnix reads a packet from c, copying the payload into b.
ReadFull reads exactly len(buf) bytes from r into buf.
ReadGCStats may use the full capacity of the stats.Pause slice.
ReadGCStats reads statistics about garbage collection into stats.
ReadGo populates f with information learned from reading the Go source file with the given file name.
ReadLine doesn't fit the data/pattern easily so we leave it out.
ReadLine either returns a non-nil line or it returns an error, never both.
ReadLine is a low-level line-reading primitive.
ReadLine tries to return a single line, not including the end-of-line bytes.
ReadMIMEHeader reads a MIME-style header from r.
ReadMemStats populates m with memory allocator statistics.
ReadMessage reads a message from r.
ReadMetaHeaders if non-nil causes ReadFrame to merge HEADERS and CONTINUATION frames together and return MetaHeadersFrame instead.
ReadMsgIP reads a packet from c, copying the payload into b and the associated out-of-band data into oob.
ReadMsgUDP reads a packet from c, copying the payload into b and the associated out-of-band data into oob.
ReadMsgUnix reads a packet from c, copying the payload into b and the associated out-of-band data into oob.
ReadRequest reads and parses an incoming request from b.
ReadRequest will get err below
ReadRequestBody may be called with a nil argument to force the body of the request to be read and discarded.
ReadResponse reads a multi-line response of the form:
ReadResponse reads and returns an HTTP response from r.
ReadResponseBody may be called with a nil argument to force the body of the response to be read and then discarded.
ReadRune reads a single UTF-8 encoded Unicode character and returns the rune and its size in bytes.
ReadRune reads and returns the next UTF-8-encoded Unicode code point from the buffer.
ReadRune reads the next rune (Unicode code point) from the input.
ReadRune returns the next UTF-8 encoded code point from the io.Reader inside r.
ReadSeeker is the interface that groups the basic Read and Seek methods.
ReadSlice fails with error ErrBufferFull if the buffer fills without a delim.
ReadSlice reads until the first occurrence of delim in the input, returning a slice pointing at the bytes in the buffer.
ReadString reads until the first occurrence of delim in the input, returning a string containing the data up to and including the delimiter.
ReadSubKeyNames returns the names of subkeys of key k.
ReadTrace must be called from one goroutine at a time.
ReadTrace returns the next chunk of binary tracing data, blocking until data is available.
ReadUvarint reads an encoded unsigned integer from r and returns it as a uint64.
ReadValueNames returns the value names of key k.
ReadVarint reads an encoded signed integer from r and returns it as an int64.
ReadWriteCloser is the interface that groups the basic Read, Write and Close methods.
ReadWriteSeeker is the interface that groups the basic Read, Write and Seek methods.
ReadWriter is the interface that groups the basic Read and Write methods.
Readdir on a regular file should fail.
Readdir reads the contents of the directory associated with file and returns a slice of up to n FileInfo values, as would be returned by Lstat, in directory order.
Readdirnames reads and returns a slice of names from the directory f.
Reader implements a seekable buffered io.Reader.
Reader implements buffering for an io.Reader object.
Reader is a global, shared instance of a cryptographically strong pseudo-random generator.
Reader is a quoted-printable decoder.
Reader is an iterator over parts in a MIME multipart body.
Reader is the interface that wraps the basic Read method.
Reader returns a new Reader for Data.
Reader's underlying parser consumes its input as needed.
Reader, to read numeric response code lines, key: value headers, lines wrapped with leading spaces on continuation lines, and whole text blocks ending with a dot on a line by itself.
ReaderAt is the interface that wraps the basic ReadAt method.
ReaderAt may be nil if the section is not easily available in a random-access form.
ReaderFrom is the interface that wraps the ReadFrom method.
Readers just do an atomic load to get the current version of the map.
Reading from them should yield (0, io.EOF).
Reading object files.
Reading of Go object files.
Reading the Method type for an unexported method triggers an offset resolution via p.name.pkgPath().
Reading the first 1024 bytes should be plenty.
Readlink returns the destination of the named symbolic link.
Reads from a reader and rot13s the result.
Reads from the Reader return the concatenation of the uncompressed data of each.
Reads from the returned ReadCloser read and decompress data from r.
Reads from the returned io.ReadCloser read and decompress data from r.
Reads the index of a symbol reference and resolves it to a symbol
Reads the sparse-encoded file data
Ready all Gs now that we've dropped the channel lock.
Ready the goroutine arg.
Real returns the real part of x, which must be a numeric or unknown value.
Real size of the output file
Real use would integrate with packages such as code.google.com/p/go-charset
Really just escapes its scope but we don't distinguish
Really just testing that this compiles, but check answer anyway.
Really should be R_AARCH64_JUMP26 but doesn't seem to make any difference
Really shouldn't happen.
Reasons why RemoveAll might succeed in removing dpath as well include: running as root running on a file system without permissions (FAT)
Reassign each comment to abut the end of its spec.
Reassign stack offsets of the locals that are still there.
Reassign the import paths to have the same position sequence.
Reattach drive letter.
Rebuild flow graph, since we inserted instructions
Rebuild to leave things in a better state.
Rebuilding exe makes it work again.
Recalculate control value.
Recalculate param offsets.
Recalculate t.Size now that we know sub.Size.
Receive assignments must not edit or even attempt to compute the address of the lhs.
Receive directly from queue
Receive first or second connection.
Receive value from 'in'.
Receive value of new variable 'i' from 'in'.
Receiver MethodName Signature
Receiver is value, not pointer, to test isZero of array.
ReceiverName returns the receiver type name of this symbol, or the empty string if there is none.
Receivers should be careful to use Equal to compare MACs in order to avoid timing side-channels: CheckMAC reports whether messageMAC is a valid HMAC tag for message.
Receiving a value from b.readySema entitles us to take from the ready queue.
Recheck for background credit now that this G is in the queue, but can still back out.
Recheck gcphase under the lock in case there was a phase change.
Recognize 'go tool pack grc' because that was the formerly canonical way to build a new archive from a set of input files.
Recognize each thread and populate profile samples.
Recompute the running time for all but the first iteration.
Reconstruct expected errors by independently "parsing" the input.
Reconstruct expected output by independently "parsing" the input.
Record CGO_LDFLAGS from the environment for external linking.
Record all locally referenced packages as imports.
Record any values with an "address taken" reaching this code position as live.
Record arg info for parent.
Record best match so far.
Record found field and index sequence.
Record imports and information about cgo.
Record in 'ambiguous' bitmap.
Record initial order in B.
Record live pointers.
Record loop depth at declaration.
Record new anonymous struct to explore in next round.
Record orbit information in chars.
Record parent PID so child can test if it has died.
Record pid and tid of init thread for use during test.
Record positions for specs.
Record represents one entry in pprof-like profiles.
Record signal information and return to assembly trampoline that fakes the call.
Record span info, because gc needs to be able to map interior pointer to containing span.
Record target name for use by actions depending on this one.
Record that a gc just happened: all the 'recent' statistics are now real.
Record that after the current element is finished (that element is already pushed on the stack) Token should return EOF until popEOF is called.
Record that at least one root marking pass has completed.
Record that decoder must stop at end tag corresponding to start.
Record that fact so that any temporary used for synthesizing this expression can be reclaimed when the function returns.
Record that it's not using the cpu anymore.
Record that no proportional sweeping has to happen.
Record that one root marking pass has completed.
Record that we are ending an element with the given name.
Record that we are starting an element with the given name.
Record that we did this much scan work.
Record that we need to resolve this type's size once the type graph is constructed.
Record the elapsed time thus far and reset the timer afterwards.
Record the panic that is running the defer.
Record thread-local storage offset.
Record top of stack for use by mcall.
Record typedef for printing.
Record types and typedef information.
Record what needs to be recorded about f.
Record when the world started.
Record which files are not in package main.
Record which of the lazily initialized fields have actually been initialized.
RecordHeader contains the five bytes of TLS record header that triggered the error.
RecordHeaderError results when a TLS record header is invalid.
Recording a complete stack trace in a call to the context function is likely to be inefficient.
RecordingJar keeps a log of calls made to it, without tracking any cookies.
Recover only sees the panic argument if it is called from a deferred call.
Recover original offset to address passed-in param value.
Rect is the image's bounds.
Recur to read element into slice.
Recurse and attempt to match these.
Recursive conversion divides q by its approximate square root, yielding two parts, each half the size of q.
Recursive data structures didn't terminate.
Recursive struct definitions didn't work.
Recursive types work fine, but recursive values (data with cycles) are problematic.
Recursive used to trigger an internal compiler error.
Recursively assign the new value we've made to the base of the dot op.
Recursively decompose phis for each field.
Recv receives and returns a value from the channel v.
Recv returns the receiver of function type t, if any.
Recv returns the receiver of signature s (if a method), or nil if a function.
Recv returns the type of x in x.f.
RecvStmt with assignment
Recycle the old buffer.
Recycle the quantization error buffers.
Redefining the "lhs" template in t1 should fail as it has been executed.
Redefining the "lhs" template should not fail.
Redirect host file lookups.
Redirect replies to the request with a redirect to url, which may be a path relative to the request path.
Redirect to a fixed URL
Redirect to correct sym before we do the lookup.
RedirectHandler returns a request handler that redirects each request it receives to the given url using the given status code.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1.
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Reduce 2-instruction sequence to 1-instruction sequence.
Reduce allocation to avoid running out of memory on the builder - see issue/12032.
Reduce allocations by pre-creating common cases.
Reduce by production -action.
Reduce reduces the coefficients of a to smaller bounds.
Reduce the number of bits in b.
ReduceLarge converts a p224LargeFieldElement to a p224FieldElement.
Reducible-loop-nest-finding.
Reducing mod poly corresponds to binary xor with poly every time a 0x100 bit appears.
Redundant, but can eliminate bounds checks.
Ref has Marshaler and Unmarshaler methods with pointer receiver.
Ref is defined in encode_test.go.
RefText has Marshaler and Unmarshaler methods with pointer receiver.
Refer to the description of MemProfileRate for the default value.
Reference string converter
Reference to global offset table
Reference to literal section
References to symbols in other sections include that information in the addend.
References to undefined variables are replaced by the empty string.
References: Annotated XML spec: http://www.xml.com/axml/testaxml.htm XML name spaces: http://www.w3.org/TR/REC-xml-names/ TODO(rsc): Test error handling.
References: RFC 5915 SEC1 - http://www.secg.org/sec1-v2.pdf Per RFC 5915 the NamedCurveOID is marked as ASN.1 OPTIONAL, however in most cases it is not.
Referer is misspelled as in the request itself, a mistake from the earliest days of HTTP.
Referer returns the referring URL, if sent in the request.
Referring to fd3 here ensures that it is not garbage collected, and therefore closed, while executing the wantfd loop above.
Refill s.allocCache so that it corresponds to the bits at s.allocBits starting at s.freeindex.
Refill s.allocCache with the next 64 alloc bits.
Refill the buffer if necessary
Refill the buffer if necessary.
Refined nodes (e.g., ODOTPTR as a refinement of OXDOT) are exported as their unrefined nodes (since this is what the importer uses).
Refining a DC component is trivial.
Reflect uses the "interface" calling convention for methods, where receivers take one word of argument space no matter how big they actually are.
Reflect uses the "interface" calling convention for methods, which always uses one word to record the receiver.
ReflectMethod means the function may call reflect.Type.Method or reflect.Type.MethodByName.
Refresh socket properties.
Refusing to use it as a root forces it into the component of the function in which it appears.
RegTo2 is set on the instructions we insert here so they don't get processed twice.
RegTo2 is set on the replacement call insn to stop it being processed when it is in turn passed to progedit.
Regalloc doesn't quite generate legal SSA which will lead to some required moves being eliminated.
Regalloc state is empty to start.
Regalloc wants a critical-edge-free CFG so it can implement phi values.
Regardless of the verb, if an operand is an interface value, the internal concrete value is used, not the interface itself.
Regardless, some new ones may have been defined.
Regardless, the length of the resulting slice reports the number of elements decoded.
Regexp for Go identifiers
Regexp is the representation of a compiled regular expression.
Reginuse reports whether r is in use.
Region extends beyond the "real" size
Regions can't overlap and must be in order
Register a custom Deflate compressor.
Register assignments:
Register command-line flags.
Register indirection: (reg) or (index*scale).
Register makes a database driver available by the provided name.
Register mapping in m and return it.
Register prefix not used on this architecture.
Register publishes the receiver's methods in the DefaultServer.
Register records a type, identified by a value for that type, under its internal type name.
RegisterCompressor registers custom compressors for a specified method ID.
RegisterCompressor registers or overrides a custom compressor for a specific method ID.
RegisterCover records the coverage data accumulators for the tests.
RegisterDecompressor allows custom decompressors for a specified method ID.
RegisterDecompressor registers or overrides a custom decompressor for a specific method ID.
RegisterFormat registers an image format for use by Decode.
RegisterHash registers a function that returns a new instance of the given hash function.
RegisterName is like Register but uses the provided name for the type instead of the receiver's concrete type.
RegisterName is like Register but uses the provided name rather than the type's default.
RegisterNumber converts R(10) into arm.REG_R10.
RegisterOpcode binds a list of instruction names to a given instruction number range.
RegisterProtocol can be used by other packages to provide implementations of protocol schemes like "ftp" or "file".
RegisterProtocol registers a new protocol with scheme.
RegisterRegister binds a pretty-printer (Rconv) for register numbers to a given register number range.
Registered checkers to run.
Registerization is disabled too (-N), which should have no effect on escape analysis.
Registers are allocated to regions greedily in order of descending cost.
Registers it would like to be in, in priority order.
Registers that other values want to be in.
Registration is typically automatic as a side effect of initializing that format's package so that, to decode a PNG image, it suffices to have import _ "image/png" in a program's main package.
Registry key security and access rights.
Registry value types.
Regrealloc(n) undoes the effect of Regfree(n), so that a register can be given up but then reclaimed.
Regression test for bug: must send zero values inside arrays
Regs386 is the Mach-O 386 register structure.
RegsAMD64 is the Mach-O AMD64 register structure.
Regular expressions that should match.
Regular expressions that should not match.
Regular flag invocation should work
RegularFields returns the regular (non-pseudo) header fields of mh.
Reinterpret as *sliceHeader to edit.
Reiserfs rejects the big seeks.
Rejang is the set of Unicode characters in script Rejang.
Reject empty pipelines
Reject since it won't be part of the build.
Reject the request under the assumption that happened here and ".." may not be wanted.
Rel returns a relative path that is lexically equivalent to targpath when joined to basepath with an intervening separator.
Related is issue 15321.
RelatedGoroutines finds a set of goroutines related to goroutine goid.
Relationship between Tok value and Specs element type:
Relative import paths An import path beginning with ./ or ../ is called a relative path.
Relative paths are implicitly relative to the compilation directory.
Relative patterns are also allowed, like "go test ./..." to test all subdirectories.
Relative redirects are resolved relative to the Response's Request.
RelativeTo(pkg) returns a Qualifier that fully qualifies members of all packages other than pkg.
Relay SIGQUIT to the next m by sending it to the current process.
Release calling test.
Release main testing loop
Release only needs to be called if Wait is not.
Release previous log to signal handling side.
Release releases any resources associated with the Process p, rendering it unusable in the future.
Release the bufioWriter that writes to the chunk writer, it is not used after a connection has been hijacked.
Release the lock and acquire it on exit to ensure locks stay paired.
Release the parallel subtests.
Release the second waiter in case it didn't get the broadcast.
Release this m on park.
Release unloads DLL d from memory.
Reload config every 10 seconds and update config value with the new version.
Relocation type and symbol index.
Relocation types for 386.
Relocation types for 64-bit PowerPC or Power Architecture processors.
Relocation types for AArch64 (aka arm64)
Relocation types for ARM.
Relocation types for Alpha.
Relocation types for MIPS.
Relocation types for PowerPC.
Relocation types for SPARC.
Relocation types for s390x processors.
Relocation types for x86-64.
Remain inside the attribute.
Remainder returns the IEEE 754 floating-point remainder of x/y.
Remarks on other algorithms evaluated: - GCC's 4.6.3 stable_sort with merge_without_buffer from libstdc++: Not faster.
Rematerialize instead of loading from the spill location.
Rematerialize into stack slot.
Remember base of selector to find it back after dot insertion.
Remember current value of v.used and restore after evaluating the lhs via check.expr.
Remember how much callee stack space we needed.
Remember previous results to prune the recursion (was issue 1628).
Remember that encryption only provides confidentiality.
Remember the C spelling, in case the struct has __attribute__((unavailable)) on it.
Remember the most-recently computed flag value.
Remember the pipeline id of this request
Remember this (fully qualified) directory for the next pass.
Remember this location so we can swap the operands below.
Remember we have an iterator.
Remember we saw this.
Remember we've seen this type.
Remember we've sent this type, both what the user gave us and the base type.
Remember where each block starts.
Remote address changed
Remote import paths Certain import paths also describe how to obtain the source code for the package using a revision control system.
RemoteAddr allows HTTP servers and other software to record the network address that sent the request, usually for logging.
RemoteAddr returns the remote network address.
Remove a potential executable for each .go file in the directory that is not part of the directory's package.
Remove all read and write waiters.
Remove all remaining unreached R_METHODOFF relocations.
Remove any dot-segments prior to forming the target URI.
Remove any existing stack barriers before we install new ones.
Remove any nested writers remaining due to previous errors.
Remove any temporary files created during pprof processing.
Remove c from the list of cached values.
Remove cached version info.
Remove comment markers.
Remove connected component from stack.
Remove dead text but keep file information (z symbols).
Remove dead values from blocks' value list.
Remove dir-named executable only if this is package main.
Remove duplicates, when possible without data loss.
Remove edges below minimum frequency.
Remove files beginning with .
Remove functions only used as expressions, so their respective bridge functions are not generated.
Remove generated binary named for directory.
Remove generated files.
Remove hop-by-hop headers to the backend.
Remove injected enum to ensure the value will deep-compare equally in future loads of the same constant.
Remove installed packages and tools.
Remove it from the map of yet untyped expressions.
Remove leading directory name
Remove leftover instrumentation from the instruction stream.
Remove old pre-tool binaries.
Remove package test executables.
Remove position information to avoid spurious newlines.
Remove predeclared identifiers from unresolved list.
Remove removes e from l if e is an element of list l.
Remove removes the element at index i from the heap.
Remove removes the execution stack associated with value from the profile.
Remove removes the named file or directory.
Remove rotate 0 and rotate w.
Remove sample with no locations (by not adding it to s).
Remove sign before NaN if not asked for.
Remove stack barriers that we didn't hit.
Remove tabs from tc.out
Remove target before writing it.
Remove the common prefix from all but the first and empty lines.
Remove the first variable declaration from the list of declarations.
Remove the initial mapping if named '/anon_hugepage' and has a consecutive adjacent mapping.
Remove the matching location.
Remove the package clause.
Remove the prepended pathname from automatically generated cgo function names.
Remove them from the list.
Remove this timerCtx from its parent cancelCtx's children.
Remove this use from the uses list.
Remove tool binaries from before the tool/gohostos_gohostarch
Remove trailing slash
Remove trailing slashes
Remove trailing spaces.
Remove unreachable blocks.
Remove v from the live set, but don't add any inputs.
RemoveAll removes all exported variables.
RemoveAll removes any temporary files associated with a Form.
RemoveAll removes path and any children it contains.
RemoveMultiples sorts an ErrorList and removes all but the first error per line.
RemoveUninteresting prunes and elides profiles using built-in tables of uninteresting function names.
Removes the Special record of the given kind for the object p.
Removes the finalizer (if any) from the object p.
Removing a leading string in a concatenation might simplify the concatenation.
Rename any conflicting imports (assuming package name is last element of path).
Rename any conflicting top-level references from name to name_.
Rename any top-level declarations.
Rename renames (moves) oldpath to newpath.
Rename top-level old to new, both unresolved names (probably defined in another file) and names that resolve to a declaration we renamed.
Render a pseudo-diff between two blocks of bytes.
Render byte array in a two-character hexadecimal string, spaced for easy visual inspection.
RenegotiateFreelyAsClient allows a remote server to repeatedly request renegotiation.
RenegotiateNever disables renegotiation.
RenegotiateOnceAsClient allows a remote server to request renegotiation once per connection.
Renegotiation controls what types of renegotiation are supported.
RenegotiationSupport enumerates the different levels of support for TLS renegotiation.
Repeat a few times to test the stack cache.
Repeat count-1 times.
Repeat each case, ensuring that it can be canceled quickly.
Repeat emits an instruction to repeat the description of the last n words c times (including the initial description, c+1 times in total).
Repeat previous length or zero.
Repeat recursively on the discarded argument.
Repeat returns a new byte slice consisting of count copies of b.
Repeat returns a new string consisting of count copies of the string s.
Repeat test1 with closures instead of standard function.
Repeat the bitmap for the slice size, trimming scalars in the last element.
Repeat this process until we can't find any suffixes for the current prefix or we exceed the word limit.
Repeat type check for each case with more precise type information.
Repeat until we can't find any more splits.
Repeat until we find no match for the input immediately after what was consumed by the last emitCopy call.
Repeated calls to Scan yield the token sequence found in the input.
Repeated instances of typ in an array.
Repetitive Sum() calls should return the same value
Replace 0th word by command substitution.
Replace OCLOSURE with ONAME/PFUNC.
Replace TLS register fetches on older ARM processors.
Replace a random entry in the cache.
Replace all elements of e which v dominates
Replace by --overwrite-tags after http://pad.lv/681792 goes in.
Replace byte, rune aliases with real type.
Replace characters from Windows-1252 with UTF-8 equivalents.
Replace executable/buildID with the options provided in the command line.
Replace frames in events array.
Replace invalid characters with the replacement character.
Replace it with BL runtime.read_tls_fallback(SB) for ARM CPUs that lack the tls extension.
Replace multiple Separator elements with a single one.
Replace multiple slashes with a single slash.
Replace other unwanted fields with blank identifiers.
Replace padding fields inserted by cgo with blank identifiers.
Replace returns a copy of s with all replacements performed.
Replace returns a copy of the slice s with the first n non-overlapping instances of old replaced by new.
Replace returns a copy of the string s with the first n non-overlapping instances of old replaced by new.
Replace the NameToCertificate map with a GetCertificate function
Replace with a no-op instead.
Replace with a single-pass label/break matching phase.
ReplaceAll returns a copy of src, replacing matches of the Regexp with the replacement text repl.
ReplaceAllFunc returns a copy of src in which all matches of the Regexp have been replaced by the return value of function repl applied to the matched byte slice.
ReplaceAllLiteral returns a copy of src, replacing matches of the Regexp with the replacement bytes repl.
ReplaceAllLiteralString returns a copy of src, replacing matches of the Regexp with the replacement string repl.
ReplaceAllString returns a copy of src, replacing matches of the Regexp with the replacement string repl.
ReplaceAllStringFunc returns a copy of src in which all matches of the Regexp have been replaced by the return value of function repl applied to the matched substring.
Replacements are performed in order, without overlapping matches.
Replacer replaces a list of strings with replacements.
Replacing a Phi with a Copy can in general cause problems because Phi and Copy don't have exactly the same semantics.
Replenish central list if empty.
Replicate pattern to at most maxBits.
Replicate ptrmask to fill entire pbits uintptr.
Replicated copies are not as nice: if there is an array of objects with scalar tails, all but the last tail does have to be initialized, because there is no way to say "skip forward".
Reply type must be exported.
Report after all subtests have finished.
Report an error when the old code.google.com/p/go.tools paths are used.
Report at address level
Report at source line level
Report both the real package and the wildcard in any error message.
Report contains the data and associated routines to extract a report from a profile.
Report inconsistency.
Report them like calls that have been invoked but not started executing yet.
ReportAllocs enables malloc statistics for this benchmark.
Reportedly, these appear in the wild.
Reports whether a function will set the SP to an absolute value.
Reports whether the signal was sent.
Representation of the information we send and receive about this type.
Represents JSON data structure using native Go types: booleans, floats, strings, arrays, and maps.
Represents invalid code points.
Represents the period in runtime.exit.
Represents the slash in runtime/debug.setGCPercent.
Reproducibility is required in the presence of iterators, as our evacuation decision must match whatever decision the iterator made.
Request a client certificate
Request deadline should hit here
Request gzip only, not deflate.
Request is a header written before every RPC call.
Request returns the HTTP request as represented in the current environment.
Request to an advertised but unhandled NPN protocol.
Request using the "tls-0.9" protocol, which we register here.
Request with Body, but Dump requested without it.
Request with a 0 ContentLength and a 0 byte body.
Request with a 0 ContentLength and a 1 byte body.
Request with a 0 ContentLength and a body with 1 byte content and an error.
Request with a 0 ContentLength and a body without content and an error.
Request with a 5 ContentLength and nil body.
Request with a ContentLength of 10 but a 5 byte body.
Request with a ContentLength of 4 but an 8 byte body.
Request's Body is nil (having already been consumed).
Request.RemoteAddr has its port set by Go's standard http server, so we do here too.
RequestFromMap creates an http.Request from CGI variables.
RequestURI is the unmodified Request-URI of the Request-Line (RFC 2616, Section 5.1) as sent by the client to a server.
Requests with an empty Method should also redirect (Issue 12705)
Requests with no accept-encoding header use transparent compression
Requests with other accept-encoding should pass through unmodified
Require successful HTTP response before switching to RPC protocol.
Require the types to match but also require the addrtaken bits to match.
Required for moving heap allocations onto stack, which in turn is required by the closure implementation, which stores the addresses of stack variables into the closure.
Required pseudo header fields may be missing, however.
Requires allocating a monster, so don't do this from all.bash.
Requires computation, but we're copying someone else's computation.
Requires exactly one main package to be listed.
Requires system stack.
Requires that value dominates x, meaning that regardless of a, value is always computed.
Requires that values and predecessors are in the same order, even though Funcs could be equivalent when they are not.
Reregister some basic types to check registration is idempotent.
Resave for traceback during blocked call.
Rescale to avoid internal overflow or underflow.
Rescan packages and re-evaluate args list.
Rescan some roots and flush work caches.
Reserve PLT entries for these symbols and generate call stubs.
Reserve PLT entry and generate symbol resolver
Reserve some Ids for compatible expansion
Reserve some more space.
Reserve space for it so stack scanner is happy.
Reserve space for these.
Reserved range for operating system
Reset all mapping IDs.
Reset and compress again.
Reset buffer to the line number program offset.
Reset changes the timer to expire after duration d.
Reset clears the state of the Writer z such that it is equivalent to its initial state from NewWriterLevel or NewWriterLevelDict, but instead writing to w.
Reset discards any buffered data and resets the Resetter as if it was newly initialized with the given reader.
Reset discards any buffered data, resets all state, and switches the buffered reader to read from r.
Reset discards any unflushed buffered data, clears any error, and resets b to write its output to w.
Reset discards the Reader z's state and makes it equivalent to the result of its original state from NewReader, but reading from r instead.
Reset discards the Writer z's state and makes it equivalent to the result of its original state from NewWriter or NewWriterLevel, but writing to w instead.
Reset discards the writer's state and makes it equivalent to the result of NewWriter or NewWriterDict called with dst and w's level and dictionary.
Reset empties the buffer.
Reset file entries list.
Reset is the same as Truncate(0).
Reset it to a known zero reader, in case underlying one is unhappy being read repeatedly.
Reset line number program state.
Reset prepares a FakeFile for reuse.
Reset puts the scan back at the beginning.
Reset repositions the line table reader at the beginning of the line table.
Reset resets an ErrorList to no errors.
Reset resets the Hash to its initial state.
Reset resets the Reader to be reading from b.
Reset resets the Reader to be reading from s.
Reset resets the buffer to be empty, but it retains the underlying storage for use by future writes.
Reset sends the RSET command to the server, aborting the current mail transaction.
Reset stack barriers.
Reset the DC components, as per section F.2.1.3.1.
Reset the Huffman decoder.
Reset the current state.
Reset the enabled cipher suites to nil in order to test the defaults.
Reset the opt field of each prog to nil.
Reset the pointer so that we don't get an "invalid stack pointer" error from t.Errorf if we call it.
Reset the progressive decoder state, as per section G.1.2.2.
Reset the signal handler and raise the signal.
Reset the signal handlers for all signals.
Reset the timer after the first time through.
Reset these so that all stacks will be rescanned.
Reset undoes the effect of any prior calls to Notify for the provided signals.
Reset waiters count to 0.
Reset will restore the system default behavior for the signal, while Ignore will cause the system to ignore the signal entirely.
Reset zeros the key data so that it will no longer appear in the process's memory.
ResetForTesting clears all flag state and sets the usage function as directed.
ResetSIGIO stops catching SIGIO signals.
ResetTimer sets the elapsed benchmark time to zero.
ResetTimer zeros the elapsed benchmark time and memory allocation counters.
Resetter resets a ReadCloser returned by NewReader or NewReaderDict to to switch to a new underlying Reader.
Resolutions finer than milliseconds will result in imprecise round-trips.
Resolve definition of name and value of iota lazily.
Resolve the race between forEachP running the safe-point function on this P's behalf and this P running the safe-point function directly.
Resolve typedef if present.
ResolveReference always returns a new URL instance, even if the returned URL is identical to either the base or reference.
ResolveReference resolves a URI reference to an absolute URI from an absolute base URI, per RFC 3986 Section 5.2.
ResolveUnixAddr parses addr as a Unix domain socket address.
Resource record packer.
Resource record unpacker.
Resource represents an HTTP URL to be polled by this program.
Response is a header written before every RPC return.
Response represents the response from an HTTP request.
Response's Location header or ""
Response.Request.URL or ""
ResponseHeaderTimeout, if non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).
ResponseRecorder is an implementation of http.ResponseWriter that records its mutations for later inspection in tests.
ResponseWriter wrappers may also not support Hijacker.
Rest of file is in the format encoding/base64/base64.go:34.44,37.40 3 1 where the fields are: name.go:line.column,line.column numberOfStatements count
Rest of these are reserved by the TLS spec
Restart at the beginning.
Restart markers have no extra data, so we check for this before we read the 16-bit length of the segment.
Restore GOROOT, GOPATH, and GOBIN when done.
Restore TOC after bl.
Restore both the real GOROOT environment variable, and runtime's copies:
Restore flags at time of paren.
Restore masterSecret and peerCerts from previous state
Restore our record of this text/template to its unescaped original state.
Restore sp saved by cgocallback during unwind of g's stack (see comment at top of file).
Restore to "old" release.
Restrict to a 256-color paletted image to avoid quantization path.
Restrict to samples tagged with key:value matching regexp
Restricting us to ASCII is sufficient to handle the IP protocol names and allow us to not depend on the strings and unicode packages.
Restrictions, if any, are noted in the documentation for each method.
Restricts to paths going through a node matching regexp
Result holds the results of Do, so they can be passed on a channel.
Result is the result of a query execution.
ResultNoRows is a pre-defined Result for drivers to return when a DDL command (such as a CREATE TABLE) succeeds.
Resulting in an untyped constant (e.g., built-in complex).
Results of all operations will be sent back to their requesters via channel supplied in request.
Results returns the results of signature s, or nil.
Retain '// +build' directives.
Retake P from syscall if it's there for more than 1 sysmon tick (at least 20us).
Retrieve the pipeline ID of this request/response pair
Retrieves the root element for SVG manipulation.
Retry under the mutex.
Rets describes function return parameters.
Return 0 if the semaphore was acquired, -1 if interrupted or timed out.
Return a chan int of primes.
Return a chan of odd multiples of the prime number p, starting from p*p.
Return a chan of odd numbers, starting from 5.
Return a channel to serve as a sending proxy to 'out'.
Return a descriptive error.
Return a properly encoded error rune but advance only one byte.
Return a single frame.
Return a slice referring to the actual string bytes.
Return a slice so we don't expose the map.
Return all but that last byte, which would cause a syntax error if we let it through.
Return an error for binary-only package.
Return an error if the package has CXX files but it's not using cgo nor SWIG, since the CXX files can only be processed by cgo and SWIG.
Return an importer that searches incpaths followed by the gcc installation's built-in search paths and the current directory.
Return an invalid reflect.Value.
Return back to the non-system stack to pick up the new addresses before continuing.
Return dead blocks to allocator.
Return dead values to the allocator.
Return file data using io.Copy, which should use sendFile if available.
Return instructions implicitly read all the arguments.
Return it to the heap immediately if we're sweeping.
Return new log to caller.
Return next state according to the game rules: exactly 3 neighbors: on, exactly 2 neighbors: maintain current state, otherwise: off.
Return nil per RemoveAll's docs.
Return now in those cases.
Return only if parser made some progress since last sync or if it has not reached 10 sync calls without progress.
Return pending log data.
Return right away if this ticket has already been notified.
Return span from an MCache.
Return that as an error.
Return the EndElement half now.
Return the canonical path for p, eliminating .
Return the current cached span to the central lists.
Return the first frame we saw and store the rest to be returned by later calls to Next.
Return the flags to use when invoking the C, C++ or Fortran compilers, or cgo.
Return the list of export search paths for this GccgoInstallation.
Return the number of SIGIO signals seen.
Return the number of literals assigned to each bit size in the Huffman encoding
Return the package prefix when using gccgo.
Return the pointer to the op we're already building.
Return the span containing the object, the start of the object, and the size of the object.
Return the three parts of the larger variable.
Return the two parts of the larger variable.
Return the type for a type signature.
Return the value of .TOC.
Return the zero value for the map element.
Return true if the specified character should be escaped when appearing in a URL string, according to RFC 3986.
Return value if nonempty, def otherwise.
Return value signals whether the exception has been handled (EXCEPTION_CONTINUE_EXECUTION) or should be made available to other handlers in the chain (EXCEPTION_CONTINUE_SEARCH).
Return values appear on the stack.
Return values of access/connect/socket are the return values of the syscall (may encode error numbers).
Returned connections will be of type *UnixConn.
Returned memory is not zeroed.
Returning a C pointer is fine.
Returning an index into a conversion from string to slice caused a compilation error when using gccgo.
Returning bufio.ErrFinalToken here tells Scan there are no more tokens after this but does not trigger an error to be returned from Scan itself.
Returning lock via interface value
Returning tokens not advancing input at EOF.
Returns ("", v) on failure to consume at least one character.
Returns GC type info for object p for testing.
Returns a Value which is either v or a copy of v allocated to the chosen register.
Returns a map from block ID to the stack values live at the end of that block.
Returns a slice of *BasicBlocks in control flow graph form (basic blocks ordered by their RPO number).
Returns a slice of results of the given result types.
Returns a slow IPv6 address, and a local IPv4 address.
Returns a success boolean, the number of bytes to skip from the start of the record in order to get the application payload, and an optional alert value.
Returns complex logarithm to the base e (2.718...) of the complex argument z.
Returns gamma function of the argument.
Returns hyperbolic tangent of argument in the range MINLOG to MAXLOG.
Returns last new instruction.
Returns list of Ps with local work, they need to be scheduled by the caller.
Returns list of goroutines that become runnable.
Returns nil if it can't find one.
Returns nil if it doesn't find anything.
Returns nil if there is no current block, i.e. if no code flows to the current execution point.
Returns nil if there is no information available.
Returns number of grabbed goroutines.
Returns number, new offset, success.
Returns one of the stolen elements (or nil if failed).
Returns only when span s has been swept.
Returns size of the memory block that mallocgc will allocate if you ask for the size.
Returns struct with 0 fields.
Returns the (former) current block.
Returns the actual number of pages reclaimed.
Returns the address of the return value (or nil if none).
Returns the auxint'th field.
Returns the buffer position corresponding to the beginning of line1 and an error, if any.
Returns the circular tangent of the radian argument x.
Returns the complex exponential of the complex argument z.
Returns the extra offset of a match token
Returns the first line after the traceback, the sample (or nil if it hits a 'same-as-previous' marker) and an error.
Returns the hostname if the profile is remote.
Returns the literal of a literal token
Returns the mapping from each node to any nodes removed by path compression and statistics on the nodes/edges removed.
Returns the number of bytes processed.
Returns the number of bytes xor'd.
Returns the number of cells in that line.
Returns the number of frames printed.
Returns the number of words of in and out arguments.
Returns the number of words of local variables.
Returns the offset code corresponding to a specific offset
Returns the record if the record existed, nil otherwise.
Returns the sources as nodes, using the info.name field to hold the source code.
Returns true for instructions that are safe points that must be annotated with liveness information.
Returns true for instructions that call a runtime function implementing a select communication clause.
Returns true if it succeeded.
Returns true if load-hit-stores were removed.
Returns true if preemption request was issued to at least one goroutine.
Returns true if preemption request was issued.
Returns true if progress was made.
Returns true if s contains only white space (only tabs and blanks can appear in the printer's context).
Returns true if the node names a variable that is otherwise uninteresting to the liveness computation.
Returns true if the span was returned to heap.
Returns true if the special was successfully added, false otherwise.
Returns true is the corresponding regexp matched at least one sample.
Returns true on failure to substitute (it always succeeds on arm64).
Returns true on failure to substitute (it always succeeds on mips).
Returns true on failure to substitute (it always succeeds on ppc64).
Returns true on success.
Returns true when the instruction is a call to a specific package qualified function name.
Returns when the world is restarted.
Returns whether or not the image is fully opaque.
Returns whether the focus/ignore regexps match any tags
Returns whether the signal was forwarded.
Returns whether there is at least one focused location but no ignored locations.
Returns which branch must always be taken.
Returns with acquired P.
Reusable stackAllocState.
Reusable to avoid allocation.
Reuse re1 if possible.
Reuse the newly evicted entry.
Reused is whether this connection has been previously used for another HTTP request.
Reverse again to produce forward decimal in a.d.
Reverse args, placing dest last.
Reverse comparison to place constant (including address constant) last.
Reverse comparison to place constant last.
Reverse order: we're pushing back.
Reverse returns the reverse order for data.
Reverse the 4-word round key sets from enc to produce dec.
Reverse translate file:line to pc.
Reverse values array to make it hard
ReverseProxy is an HTTP Handler that takes an incoming request and sends it to another server, proxying the response back to the client.
RevokedCertificate represents the ASN.1 structure of the same name.
Rewrite B/BL to symbol as TYPE_BRANCH.
Rewrite BR/BL to symbol as TYPE_BRANCH.
Rewrite CALL/JMP/RET to symbol as TYPE_BRANCH.
Rewrite JMP/JAL to symbol as TYPE_BRANCH.
Rewrite PCDATA instructions to use new numbering.
Rewrite SUB constants into ADD.
Rewrite append(src, x, y, z) so that any side effects in x, y, z (including runtime panics) are evaluated in initialization statements before the append.
Rewrite argument named _ to __, or else the assignment to _ will be discarded during code generation.
Rewrite as (case-insensitive) literal.
Rewrite final instance to prediction prefix.
Rewrite float constants to values stored in memory unless they are +0.
Rewrite float constants to values stored in memory.
Rewrite instruction to mimic GNU peculiarities.
Rewrite into call to _Cgo_ptr to prevent assignments.
Rewrite it as the 2-instruction sequence if necessary.
Rewrite left shift half to left rotate.
Rewrite negative immediates as positive immediates with complementary instruction.
Rewrite original into a copy
Rewrite p, if necessary, to access global data via the global offset table.
Rewrite reference to go_args_stackmap(SB) to the Go-provided declaration information.
Rewrite the ELF header to set shnum to 0, so that we can pass the data to elf.NewFile and it will decode the Prog list but not try to read the section headers and the string table from disk.
Rewrite tree to use separate statements to enforce order of evaluation.
RewriteImport affects renameTop, but not vice versa, so do them in this order.
Rewrites will convert this to (SETG (CMPQ b a)).
Ridiculous but allowed.
Rig the matcher with some preloaded values.
Right has already been evaluated to ssa, left has not.
Right now all the entries fit in uint16, so use uint16.
Right side (Prog.to): address taken, read, write.
Right-shift to get the tableBits most significant bits of a uint32.
RightAddr by itself is also implicitly a read.
RightAlign returns a slice where the padding bits are at the beginning.
RightRead is a read, obviously.
RightShiftWithCarry generates a constant unsigned right shift with carry.
Rmdir might also return ENOTDIR if given a bad file path, like /etc/passwd/foo, but in that case, both errors will be ENOTDIR, so it's okay to use the error from unlink.
Rollback aborts the transaction.
Root DIEs for compilation units, types and global variables.
Root is a special case because it has no parent and ends in a slash.
RootCAs defines the set of root certificate authorities that clients use when verifying server certificates.
Rotate performs at most b-a many calls to data.Swap.
Roughly, OS X 10.N shows up as uname release (N+4), so OS X 10.6 is uname version 10 and OS X 10.8 is uname version 12.
Round 1: Factor out common literal prefixes.
Round 2: Factor out common simple prefixes, just the first piece of each concatenation.
Round 3: Collapse runs of single literals into character classes.
Round 4: Collapse runs of empty matches into a single empty match.
Round a down to nd digits (or fewer).
Round a to nd digits (or fewer).
Round a up to nd digits (or fewer).
Round data segment to page boundaries, because it's used in mmap().
Round q using round-half-to-even.
Round returns the result of rounding t to the nearest multiple of d (since the zero time).
Round the length of a netlink message up to align it properly.
Round the length of a netlink route attribute up to align it properly.
Round the length of a raw sockaddr up to align it properly.
Round the size up to be a multiple of the alignment.
Round the size up to one of the small size classes and look in the corresponding MCache free list.
Round to even (down).
Round up to something easy to read.
Round v up to a huge page boundary.
Round v+n down to a huge page boundary.
RoundTrip executes a single HTTP transaction, returning a Response for the provided Request.
RoundTrip implements the RoundTripper interface.
RoundTrip must always close the body, including on errors, but depending on the implementation may do so in a separate goroutine even after RoundTrip returns.
RoundTrip should not attempt to interpret the response.
RoundTrip should not modify the request, except for consuming and closing the Request's Body.
RoundTripOpt are options for the Transport.RoundTripOpt method.
RoundTripOpt is like RoundTrip, but takes options.
RoundTripper is an interface representing the ability to execute a single HTTP transaction, obtaining the Response for a given Request.
Rounding may have caused a denormal number to become normal.
Rounding occurs according to z's rounding mode if the mantissa cannot be represented in prec bits without loss of precision.
RoundingMode determines how a Float value is rounded to the desired precision.
RouteMessage represents a routing message containing routing entries.
RouteRIB returns routing information base, as known as RIB, which consists of network facility information, states and parameters.
Routing and interface messages
RoutingMessage represents a routing message.
Row is the result of calling QueryRow to select a single row.
Rows are always in order of increasing entry.Address, but entry.Line may go forward or backward.
Rows is an iterator over an executed query's results.
Rows is the result of a query.
RowsAffected implements Result for an INSERT or UPDATE operation which mutates a number of rows.
RowsAffected returns the number of rows affected by an update, insert, or delete.
RowsAffected returns the number of rows affected by the query.
Rule 10: Otherwise, leave the order unchanged.
Rule 1: Avoid unusable destinations.
Rule 2: Prefer matching scope.
Rule 3: Avoid deprecated addresses.
Rule 4: Prefer home addresses.
Rule 5: Prefer matching label.
Rule 6: Prefer higher precedence.
Rule 7: Prefer native transport.
Rule 8: Prefer smaller scope.
Rule 9: Use longest matching prefix.
Run "cmd.exe /c test.searchFor" with new environment and work directory set.
Run 'go help get' for more.
Run 'go help importpath' for details.
Run /bin/hostname and collect output.
Run Go 1.4 to build binaries.
Run SWIG on all SWIG input files.
Run SWIG on each .swig and .swigcxx file.
Run SWIG on one SWIG input file.
Run a couple of awful growth/shrinkage tests
Run a deferred function if there is one.
Run a full stop-the-world mark using checkmark bits, to check that we didn't forget to mark anything during the concurrent mark process.
Run a slow C function saving a CPU profile.
Run all deferred functions for the current goroutine.
Run analysis on minimal sets of mutually recursive functions or single non-recursive functions, bottom up.
Run at a few different stack depths just to avoid an unlucky pass due to variables ending up on different pages.
Run before first Read, then set to nil
Run benchmarks f as a subbenchmark with the given name.
Run catching the signal rather than the tRunner as a separate goroutine to avoid adding a goroutine during the sequential phase as this pollutes the stacktrace output when aborting.
Run consistency checker between each phase
Run escape analysis on this set of functions.
Run fn for the current P.
Run gc on the g0 stack.
Run go generate from src/runtime to update.
Run literal-specific tests.
Run more iterations than we think we'll need (1.2x).
Run more iterations than we think we'll need for a second (1.5x).
Run on its own goroutine.
Run on the system stack to give it more stack space.
Run once for package p and once for package p_test.
Run one value through the encoder/decoder, but use the wrong type.
Run our own binary as a relative path (e.g. "_test/exec.test") our parent directory.
Run parallel subtests.
Run passes it to os.StartProcess as the os.ProcAttr's Sys field.
Run prog loop backward from end of program to beginning to avoid quadratic behavior removing a run of checks.
Run queueRescan on the system stack so it has more space.
Run runs f as a subtest of t called name.
Run runs tests in the test directory.
Run runs the command.
Run runs the given command - the external disassembler - and returns a buffered reader of its standard output.
Run safe point function for all idle Ps.
Run several rounds to increase the probability of failure.
Run starts the specified command and waits for it to complete.
Run test once for each specified capital letter mode that we support.
Run the PC table looking for a matching line number or until we reach filePC.
Run the background mark worker
Run the benchmark for a single iteration in case it's expensive.
Run the benchmark for at least the specified amount of time.
Run the bug429.go test.
Run the command in the package directory.
Run the command line.
Run the dataflow framework.
Run the function the specified number of times
Run the lookpath program with new environment and work directory set.
Run the same test a few times to ensure barrier is in a proper state.
Run the template to verify the output.
Run the write barrier now.
Run this after changing builtin/runtime.go and builtin/unsafe.go or after changing the export metadata format in the compiler.
Run this shell script, but do it in Go so it can be run by "go test".
Run this test for about 1ms.
Run will block until all its parallel subtests have completed.
Run with multiple crypto configs to test the logic for computing TLS record overheads.
Run with multiple depths to observe big-O behavior.
RunContext is like Run, but kills the process (by calling os.Process.Kill) if ctx is done before the process ends on its own.
RunGoroutines starts some goroutines that don't do anything.
RunParallel creates parallelism*GOMAXPROCS goroutines The initial states of memStats.Mallocs and memStats.TotalAlloc.
RunParallel is usually used with the go test -cpu flag.
RunParallel runs a benchmark in parallel.
RunParallel will create GOMAXPROCS goroutines and distribute work among them.
Rune and int turns into rune.
RuneCount returns the number of runes in p.
RuneCountInString is like RuneCount but its input is a string.
RuneLen returns the number of bytes required to encode the rune.
RuneReader is the interface that wraps the ReadRune method.
RuneScanner is the interface that adds the UnreadRune method to the basic ReadRune method.
RuneStart reports whether the byte could be the first byte of an encoded, possibly invalid rune.
Runes returns a slice of runes (Unicode code points) equivalent to s.
Runes that are not printable.
Runes that are not valid.
Runic is the set of Unicode characters in script Runic.
Running "go vet" can help find uses of Pointer that do not conform to these patterns, but silence from "go vet" is not a guarantee that the code is valid.
Running 'go test -calibrate' runs the calibration to find a plausible cutoff point for linear search of a range list vs.
Running func Benchmark.
Running go test --test.bench
Running install with arguments does not remove the target, even in the same directory.
Running memcopy on the resulting slice will fault when it reaches the hole.
Runq emptiness affects scheduling decisions and spurious emptiness can lead to underutilization (both runnable Gs and idle Ps coexist for arbitrary long time).
Runs for 8 seconds on ARM chromebook, much faster elsewhere.
Runs in a separate goroutine, opens new connections when requested.
Runtime When using cgo, Go must not assume that it owns all details of the process.
Runtime and its internal packages depend on runtime/internal/sys, so that they pick up the generated zversion.go file.
Runtime package must not be instrumented.
Runtime reads the bitmaps as byte arrays.
Runtime type representation.
RuntimeError is a no-op function but serves to distinguish types that are run time errors from ordinary errors: a type is a run time error if it has a RuntimeError method.
S-box substitution values in hexadecimal format.
S: Unix domain socket
SARL only uses bottom 5 bits of count
SB isn't a real register.
SCTs from the server, if any
SET and SET OF (tag 17) are mapped to SEQUENCE and SEQUENCE OF (tag 16) since we don't distinguish between ordered and unordered objects in this code.
SETTINGS_MAX_CONCURRENT_STREAMS from client (our PUSH_PROMISE limit)
SHA-256 is the least-strong hash function that should be used for this at the time of writing (2016).
SHA256 hash algorithm.
SHA512 hash algorithm.
SHLL only uses bottom 5 bits of count
SI: ptr to source memory DI: ptr to destination memory SI and DI are updated as a side effect.
SIGFLOAT All other traps are normally handled as if they were marked SigThrow.
SIGPIPE When a Go program writes to a broken pipe, the kernel will raise a SIGPIPE signal.
SIGTRAP Writes to a closed pipe can be handled if desired, otherwise they're ignored.
SIGTRAP on something other than INT 3.
SIGTRAP on something other than breakpoint.
SIGWFAULT We can also recover from math errors.
SO_REUSEADDR should not be used here, as it allows a socket to forcibly bind to a port in use by another socket.
SP alignment: 1 normally, 16 for ARM64
SP and SB (generated by OpSP and OpSB) are always available.
SRADCC is only ever inserted by peep so it's hard to be sure when it will be used.
SSA does not generate any unreachable RET instructions.
SSA is now default, and is disabled by setting GOSSAHASH to n or N, or selectively with strings of 0 and 1.
SSA uses this, but so does the front end to see if should not inline a function because it is a candidate for intrinsic substitution.
SSAGenBlock emits end-of-block Progs.
SSAGenState contains state needed during Prog generation.
SSAGenValue emits Prog(s) for the Value.
SSAGenValue should be called for all values in the block before SSAGenBlock.
SSAMarkMoves marks any MOVXconst ops that need to avoid clobbering flags.
SSARegNum returns the register (in cmd/internal/obj numbering) to which v has been allocated.
SSARegToReg maps ssa register numbers to obj register numbers.
SSL 3.0 and TLS 1.0 are susceptible to a chosen-plaintext attack when using block mode ciphers due to predictable IVs.
SSL/TLS version negotiated for the session
START ERROR EXAMPLE OMIT
STMicroelectronics ST100 processor.
STOP OMIT Filter returns a new slice holding only the elements of s that satisfy fn.
STOP OMIT Initial version.
STOP OMIT New returns an error that formats as the given text.
STOP OMIT Reader is the interface that wraps the basic Read method.
STOP OMIT Revised version.
STOP OMIT START f3b OMIT
STOP OMIT START f3c OMIT
STOP OMIT START f3d OMIT
STOP OMIT START f6b OMIT
STOP OMIT START f7b OMIT
STOP OMIT START f7c OMIT
STOP OMIT START f8b OMIT
STOP OMIT TODO(proppy): test output OMIT
STOP OMIT fmtError OMIT
STerm is the set of Unicode characters with property STerm.
SVN doesn't believe in text files so we can't just edit the config.
S_ISREG() does not exist on Plan 9.
S_MOD_INIT_FUNC_POINTERS
Sadly, that's not guaranteed to hold the note, because there is an arbitrary amount of other junk placed in the file ahead of the main text.
Safe to continue with a nil list.
SaltLength controls the length of the salt used in the PSS signature.
Samaritan is the set of Unicode characters in script Samaritan.
Same algorithm, either on uint16 or uint32 value.
Same allocation should be equal to itself (not crash).
Same applies for B and T.
Same applies to named types.
Same applies to struct literals.
Same as BugA after tagging.
Same as Go 1.0, but little endian.
Same as NoRaceStructFieldRW1 but p is a pointer, so there is a read on p
Same as PAUTO -- cannot generate LEA early.
Same as TestParse, but we copy the node first
Same as above but DataLength is more than sum of TXT fields.
Same as above for Fortran files
Same as above for Objective-C files
Same as funcargs, except run over an already constructed TFUNC.
Same as in test/run.go
Same as test1, but the fault happens in the function with the defer.
Same as test3775 but run during init so that there are two levels of internal runtime lock (1 for init, 1 for cgo).
Same body as Uint64.Cmp, but behaves differently because hi is uint32 not int32.
Same comments as mSysStatInc apply.
Same error that loadPackage returns (via reusePackage) in pkg.go.
Same for read/write/close on the resulting -1 fd.
Same if we set the option explicitly to the default.
Same in the other direction.
Same laziness as in 6l.
Same memory layout, so no harm done.
Same reason for mips64x and s390x.
Same struct, different variables, no pointers.
Same, but using recv2.
SameFile only applies to results returned by this package's Stat.
SameFile reports whether fi1 and fi2 describe the same file.
Sample corresponds to Profile.Sample
Sample value to use in reports.
Sanitize Body,ContentLength,TransferEncoding
Sanity check for test before panic.
Sanity check group count.
Sanity check that it's an absolute path and ends in a null byte, which we then strip.
Sanity check the new numbering
Sanity enables additional runtime tests during Huffman table construction.
Satisfy a connRequest or put the driverConn in the idle pool and return true or return false.
Satisfy this entire assist debt.
Satisfy what's possible from the read-ahead data.
Saurashtra is the set of Unicode characters in script Saurashtra.
Save SVG output into a file after including svgpan library
Save TOC pointer in TOC save slot
Save a copy of any remote profiles, unless the user is explicitly saving it.
Save accumulated data.
Save and block signals before installing g.
Save answer as hint to avoid the expensive path next time.
Save binary formats to a file
Save calls to C.xxx for later processing.
Save current goroutine.
Save current syscall parameters, so m.syscall can be used again if callback decide to make syscall.
Save desired registers for this value.
Save elem type for synthesizechantypes.
Save end-of-block register state.
Save error for end of function.
Save expression on right side.
Save gotype for use in synthesizemaptypes.
Save input 0 to a new register so we can clobber it.
Save live flag state for later.
Save other goroutines.
Save references to C.xxx for later processing.
Save ssa-able PPARAMOUT variables so we can store them back to the stack at the end of the function.
Save subexpressions needed on left side.
Save tags list first time we see a directory.
Save text (sticky bit)
Save the coefficients.
Save the iv for the next CryptBlocks call.
Save the return PC and overwrite it with stackBarrier.
Save the return value.
Save the stack top for use below.
Save the starting state for use by merge edges.
Save this 16-bit chunk.
Save users from making that mistake.
Save various references we are going to need later.
Save what the hi code expands to.
Save/restore current setting and set hasCallOrRecv to false for the evaluation of x so that we can check it afterwards.
Saved state between progressive-mode scans.
SawSIGIO returns whether we saw a SIGIO within a brief pause.
Sc is the set of Unicode characters in category Sc.
ScalarBaseMult returns k*G, where G is the base point of the group and k is an integer in big-endian form.
ScalarMult returns k*(Bx,By) where k is a number in big-endian form.
Scale font sizes from 8 to 24 based on percentage of flat frequency.
Scale minimum by 100 to use larger units, allowing minimum value to be scaled down to 0.01, except for callgrind reports since they can only represent integer values.
ScaleValue reformats a value from a unit to a different unit.
Scaling reduces the rounding errors in the conversion from floats to ints.
Scan DWARF info for top-level TagVariable entries with AttrName __cgo__i.
Scan a stack frame: local variables and function arguments/results.
Scan adds line information to the file added to the file set with Init.
Scan advances the Scanner to the next token, which will then be available through the Bytes or Text method.
Scan all spans and count number of alive objects.
Scan also converts between string and numeric types, as long as no information would be lost.
Scan assigns a value from a database driver.
Scan attempts to read two lines into the object.
Scan backward over element.
Scan converts columns read from the database into the following common Go types and special types provided by the sql package:
Scan copies the columns from the matched row into the values pointed at by dest.
Scan copies the columns in the current row into the values pointed at by dest.
Scan down to find pseudo-operator (.
Scan f.typ for fields to include.
Scan for lines that start "//go:generate".
Scan from the root to the leaves to find the prune location.
Scan implements the Scanner interface.
Scan is a support routine for fmt.Scanner.
Scan list of formals.
Scan local variables if stack frame has been allocated.
Scan panics if the split function returns 100 empty tokens without advancing the input.
Scan past OAS nodes copying results off stack.
Scan quoted string to find value.
Scan reads the next token or Unicode character from source and returns it.
Scan scans text read from standard input, storing successive space-separated values into successive arguments.
Scan scans the next token and returns the token position, the token, and its literal string if applicable.
Scan stack pools for empty stack spans.
Scan to closing brace
Scan until space, marking end of word.
Scan until we pass pc, then back up one.
Scan work performed on this gcWork.
Scan, Fscan, Sscan treat newlines in the input as spaces.
ScanLines is a split function for a Scanner that returns each line of text, stripped of any trailing end-of-line marker.
ScanRunes is a split function for a Scanner that returns each UTF-8-encoded rune as a token.
ScanState represents the scanner state passed to custom scanners.
ScanWords is a split function for a Scanner that returns each space-separated word of text, with surrounding spaces deleted.
Scanf scans text read from standard input, storing successive space-separated values into successive arguments as determined by the format.
Scanf, Fscanf and Sscanf require that (after skipping spaces) newlines in the format are matched by newlines in the input and vice versa.
Scanf, Fscanf, and Sscanf parse the arguments according to a format string, analogous to that of Printf.
Scanln is similar to Scan, but stops scanning at a newline and after the final item there must be a newline or EOF.
Scanln, Fscanln and Sscanln stop scanning at a newline and require that the items be followed by a newline or EOF.
Scanner is an interface used by Scan.
Scanner is implemented by any value that has a Scan method, which scans the input for the representation of a value and stores the result in the receiver, which must be a pointer to be useful.
Scanner provides a convenient interface for reading data such as a file of newline-delimited lines of text.
Scanners may do rune-at-a-time scanning or ask the ScanState to discover the next space-delimited token.
Scanning An analogous set of functions scans formatted text to yield values.
Scanning consumes pointers to grey objects, thus blackening them, and then scans them, potentially producing new pointers to grey objects.
Scanning stops unrecoverably at EOF, the first I/O error, or a token too large to fit in the buffer.
Scatter the destination rectangle to draw into.
Scavenge-a-lot for testing.
Scenario that used to leak arbitrarily many SudoG structs.
Sched must be locked.
Schedule another M to run this p.
Schedule flag register generation as late as possible.
Schedule highest priority value, update use counts, repeat.
Schedule it back, never returns.
Schedule stores as early as possible.
Schedule the Values in each Block.
Schedule values dependent on the control value at the end.
Scheduler returned, so we're allowed to run now.
Schedules gp to run on the current M.
Schedules some M to run the p (creates an M if necessary).
Schedules the locked m to run the locked gp.
Scope returns the (complete or incomplete) package scope holding the objects declared at package level (TypeNames, Consts, Vars, and Funcs).
Scopes maps ast.Nodes to the scopes they define.
Scratch buffers to hold the YCbCr values.
Seal encrypts and authenticates plaintext, authenticates the additional data and appends the result to dst, returning the updated slice.
Seal encrypts and authenticates plaintext.
Search children (assumed to have DW_TAG_member) for the one named field and set its DW_AT_type to dwtype
Search returns the result of applying SearchFloat64s to the receiver and x.
Search returns the result of applying SearchInts to the receiver and x.
Search returns the result of applying SearchStrings to the receiver and x.
Search searches f in the table.
SearchFloat64s searches for x in a sorted slice of float64s and returns the index as specified by Search.
SearchInts searches for x in a sorted slice of ints and returns the index as specified by Search.
SearchStrings searches for x in a sorted slice of strings and returns the index as specified by Search.
Second and subsequent bytes always have the top two bits set to 10.
Second and subsequent lines are indented an extra tab.
Second arg must be a pointer.
Second iteration: make sure reset works.
Second pass - deallocate any phi inputs which are now dead.
Second pass: compare disassembly against our decodings.
Second pass: find repeats of pattern's suffix starting from the front.
Second returns the second element of Nodes (same as n.Index(1)).
Second, ask the column to sanity check itself.
Second, check that longer lines match each other exactly, so that the Go compiler and write additional information that must be the same from run to run.
Second, each function becomes two virtual nodes in the graph, with numbers n and n+1.
Second, if you are compiling a Go program not in a work space, you can use a relative path in an import statement in that program to refer to nearby code also not in a work space.
Second, in the Windows process listing during go test, the test shows up as test.test.exe, not pkgname.test.exe.
Second, signal handlers currently run with signals disabled, so a profiling signal cannot arrive during the handler.
Second, when returning from a signal handler, the PC and SP updates are performed by the operating system in an atomic update, so the g update must be done before them.
Second, zero-or-one prefixes followed by opcode followed by all possible 2-byte values.
Secondly, it provides only a small benefit against a downgrade attack and some implementations send the wrong version anyway.
Seconds returns the duration as a floating point number of seconds.
Section B.1.1.2 says, "Any marker may optionally be preceded by any number of fill bytes, which are bytes assigned code X'FF'".
Section B.2.2 states that "the value of C_i shall be different from the values of C_1 through C_(i-1)".
Section B.2.3 states that "the value of Cs_j shall be different from the values of Cs_1 through Cs_(j-1)".
Section compression type.
Section contains TLS data.
Section contains instructions.
Section contains strings.
Section contains writable data.
Section header file offset.
Section header string table index
Section header table entry count
Section header table entry size
Section header table file offset
Section index of symbol.
Section indexes (see SHN_XINDEX).
Section is compressed.
Section may be merged.
Section name (index into the section header string table).
Section name (string tbl index)
Section name strings section.
Section occupies memory.
Section provides access to PE COFF section.
Section reference, replacing use of formData4 and formData8.
Section returns a section with the given name, or nil if no such section exists.
Section returns the first section with the given name, or nil if no such section exists.
Section size in bytes
Section virtual addr at execution
SectionAlignment must be greater than or equal to FileAlignment.
SectionByType returns the first section in f with the given type, or nil if there is no such section.
SectionHeader is similar to SectionHeader32 with Name field replaced by Go string.
SectionHeader32 represents real PE COFF section header.
SectionReader implements Read, Seek, and ReadAt on a section of an underlying ReaderAt.
See "High Performance Web Networking", Chapter 4, or: https://www.igvita.com/2013/10/24/optimizing-tls-record-size-and-buffering-latency/
See "JSON and Go" for an introduction to this package: https://golang.org/doc/articles/json_and_go.html
See "Password Interception in a SSL/TLS Channel", Brice Canvel et al.
See "The Go image package" for more details: https://golang.org/doc/articles/image_package.html
See "The Go image/draw package" for an introduction to this package: https://golang.org/doc/articles/image_draw.html
See "The Laws of Reflection" for an introduction to reflection in Go: https://golang.org/doc/articles/laws_of_reflection.html
See "Tiny allocator" comment in malloc.go.
See "Worker thread parking/unparking" comment at the top of the file for details.
See "Worker thread parking/unparking" comment in proc.go.
See 'go doc runtime.MemProfileRate'.
See 'go doc runtime.SetBlockProfileRate'.
See 'go help buildmode' for more.
See 'go help gopath'.
See 'go help packages' for details on the pattern syntax.
See 'go help run' for details.
See 'go help testflag' for details.
See 'go help testfunc' for more.
See (*Float).Text for the interpretation of 'p'.
See *connReader docs.
See ../go/bootstrap.go and package go/build.
See ../src/cmd/dist/buildruntime.go:stackGuardMultiplier This increase is included in obj.StackGuard
See ../syscall/exec.go for description of lock.
See ../syscall/exec_unix.go for description of ForkLock.
See ../syscall/exec_unix.go.
See /usr/include/net/if.h.
See /usr/include/sys/stat.h.
See BenchmarkNilCheckDeep*.
See Config.BuildNameToCertificate The nil value causes the first element of Certificates to be used for all connections.
See Config.Error for controlling behavior in the presence of errors.
See DWARF 4, Figure 20.
See DecryptPKCS1v15SessionKey for a way of solving this problem.
See Dial for more details about address syntax.
See Dial for the syntax of laddr.
See EncryptOAEP for details.
See FIPS 197 for specification, and see Daemen and Rijmen's Rijndael submission for implementation details.
See GCM spec, section 7.1.
See GetRandom in getrandom_linux.go.
See Gueron, "Efficient Software Implementations of Modular Exponentiation".
See HP-15C Advanced Functions Handbook, p.193.
See Hacker's Delight 8-3.
See Hacker's Delight, chapter 10.
See Hacker's Delight, section 2-4.
See Knuth, The Art of Computer Programming, Vol.
See Knuth, Volume 2, section 4.3.1, Algorithm D.
See Knuth, Volume 2, section 4.3.1, exercise 21.
See Linux implementation and lock_futex.go for comments.
See MarshalIndent for an example.
See Mullender and Cox, ``Semaphores in Plan 9,'' http://swtch.com/semaphore.pdf
See NewCommentMap for a description of the association.
See NewGCMWithNonceSize.
See RFC 5280, A.1, and search for AttributeTypeAndValue.
See RFC 6761 for further information about the reserved, pseudo domain names.
See Selection for more information.
See Squinting at Power Series by Doug McIlroy, http://www.cs.bell-labs.com/who/rsc/thread/squint.pdf
See SubjectPublicKeyInfo in RFC 3280.
See TODO in regalloc.go.
See Table B.1 "Marker code assignments".
See above for why these letters are special.
See also "In-Place Merging Algorithms", Denham Coates-Evely, Department of Computer Science, Kings College, January 2004 and the references in there.
See also ../runtime/iface.go.
See also Computer Recreations, Scientific American 260, 122 - 125 (1989).
See also Rob Pike, ``Lexical File Names in Plan 9 or Getting Dot-Dot Right,'' https://9p.io/sys/doc/lexnames.html
See also TestBlockGeneric.
See also TestDegenerateHuffmanCoding.
See also ``A Layman's Guide to a Subset of ASN.1, BER, and DER,'' http://luca.ntop.org/Teaching/Appunti/asn1.html.
See also comment above.
See also golang.org/issue/6324.
See also http://www.imperialviolet.org/2012/03/16/rsae.html.
See also mkerrors.sh and mkall.sh
See also related issue 14553 and test issue14553.go.
See also the T4 and T5 tests in testdata/cycles2.src.
See also the big comment in Tx.Prepare.
See also: go build, go get, go clean.
See also: go build, go install, go clean.
See also: go build, go vet.
See also: go fix, go vet.
See also: go fmt, go fix.
See also: go fmt, go vet.
See also: go install, go get, go clean.
See also: http://en.wikipedia.org/wiki/Peg_solitaire
See also: https://golang.org/issue/2690 http://stackoverflow.com/questions/4949858/
See also: https://play.golang.org/p/RtH3UCt5IH Add sets z to the rounded sum x+y and returns z.
See bug 8736 for why we need so many tries.
See case OINDEXMAP below.
See check.typ for the details on def and path.
See cmd/compile/internal/gc/reflect.go for derivation of constant.
See comment in CL 7360.
See comment in Inverse about how this is used.
See comment in IsGraphic.
See comment in Run method.
See comment in Slice.Col.
See comment in htmlEscaper.
See comment in isClosedConnError.
See comment in type.go/Register.
See comment near the end of CheckRuntimeTimerOverflow in internal_test.go.
See comment on hmap.overflow in ../../../../runtime/hashmap.go.
See comment on hmap.overflow in ../runtime/hashmap.go.
See comments in debug.go for how to do this.
See comments on foldFunc.
See computeLive for more comments.
See const.go for overview of math here.
See copyright notice in string constant below.
See crypto/cipher for how to use a cipher.Block for encryption and decryption.
See crypto/cipher/cbc.go.
See crypto/cipher/ctr.go.
See crypto/cipher/gcm.go.
See discussion on CL 20813.
See discussion thread: https://groups.google.com/d/msg/golang-dev/Ss7mCKsvk8w/Gsq7VYI0AwAJ
See doc.go for more information.
See encoding description above
See end of sys_nacl_amd64.s.
See expr.y and main.go in that directory for examples of how to write and build yacc programs.
See favoriteAddrFamily for further information.
See float_lit2.go for motivation for these values.
See foo13 above for explanation of why f leaks.
See ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-8/pkcs-8v1_2.asn and RFC 5208.
See func Dial for a description of the network and address parameters.
See funcType in reflect/type.go for details on data layout.
See gc/lex.go for dissection of the option string.
See golang.org/issue/11111.
See golang.org/issue/11175.
See golang.org/issue/11407.
See golang.org/issue/11436.
See golang.org/issue/11823.
See golang.org/issue/12027
See golang.org/issue/12030.
See golang.org/issue/12189.
See golang.org/issue/13281.
See golang.org/issue/13367.
See golang.org/issue/13372.
See golang.org/issue/13610.
See golang.org/issue/13697.
See golang.org/issue/13705.
See golang.org/issue/13720.
See golang.org/issue/13777 and golang.org/issue/14331.
See golang.org/issue/13832.
See golang.org/issue/13901
See golang.org/issue/13907.
See golang.org/issue/14271.
See golang.org/issue/14548.
See golang.org/issue/15059.
See golang.org/issue/15434.
See golang.org/issue/4876 for more details.
See golang.org/issue/5122.
See golang.org/issue/5130.
See golang.org/issue/5581.
See golang.org/issue/5660
See golang.org/issue/5684.
See golang.org/issue/5822.
See golang.org/issue/5832.
See golang.org/issue/6038.
See golang.org/issue/6163, golang.org/issue/6987.
See golang.org/issue/6472.
See golang.org/issue/6563.
See golang.org/issue/6760.
See golang.org/issue/7399.
See golang.org/issue/7476.
See golang.org/issue/7808
See golang.org/issue/7812.
See golang.org/issue/7856
See golang.org/issue/8153.
See golang.org/issue/8367.
See golang.org/issue/9032.
See golang.org/issue/9110.
See golang.org/issue/9167.
See golang.org/issue/9205
See golang.org/issue/9341 and golang.org/issue/12706.
See golang.org/issue/9432.
See golang.org/issues/12941.
See golang.org/s/go12symtab for a definition.
See golang.org/s/go12symtab for header: 0xfffffffb, two zero bytes, a byte giving the PC quantum, and a byte giving the pointer width in bytes.
See golang.org/s/go12symtab for the format.
See golang.org/s/go12symtab.
See golang.org/s/go13linker for more background.
See golang.org/s/go14customimport for more information.
See golang.org/s/go15vendor for more information.
See golang.org/x/mobile/app.
See how much memory in tiny objects is profiled.
See http://blog.golang.org/context for example code for a server that uses Contexts.
See http://blog.golang.org/pipelines for more examples of how to use a Done channel for cancelation.
See http://codereview.appspot.com/180068.
See http://crbug.com/105824 for more details.
See http://csrc.nist.gov/groups/ST/toolkit/BCM/current_modes.html and NIST Special Publication 800-38A.
See http://csrc.nist.gov/groups/ST/toolkit/BCM/documents/proposedmodes/gcm/gcm-revised-spec.pdf
See http://en.wikipedia.org/wiki/Cyclic_redundancy_check for information.
See http://golang.org/cl/21503 for justification of the yield delay.
See http://research.swtch.com/2008/03/using-uninitialized-memory-for-fun-and.html
See http://support.apple.com/kb/HT1633.
See http://timelessrepo.com/json-isnt-a-javascript-subset for discussion.
See http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-09
See http://tools.ietf.org/html/rfc2183 section 2 for EBNF of Content-Disposition value format.
See http://tools.ietf.org/html/rfc6265 for details.
See http://www.freebsd.org/doc/en/books/porters-handbook/freebsd-versions.html.
See http://www.hyperelliptic.org/EFD/g1p/auto-shortw.html
See http://www.iana.org/assignments/protocol-numbers
See http://www.ietf.org/rfc/rfc959.txt page 36.
See http://www.isg.rhul.ac.uk/tls/TLStiming.pdf and https://www.imperialviolet.org/2013/02/04/luckythirteen.html.
See https://codereview.appspot.com/7532043.
See https://codereview.appspot.com/76400046 and https://golang.org/issue/3514
See https://en.wikipedia.org/wiki/Fowler-Noll-Vo_hash_function.
See https://github.com/golang/go/issues/13699.
See https://github.com/golang/go/issues/14212.
See https://github.com/google/go-github/pull/317 for background.
See https://golang.org/design/2775-binary-only-packages for more about the design of binary-only packages.
See https://golang.org/doc/articles/race_detector.html.
See https://golang.org/doc/code.html for an example.
See https://golang.org/issue/11144 confusion.
See https://golang.org/issue/13247
See https://golang.org/issue/13841 for details about known problems.
See https://golang.org/issue/14377.
See https://golang.org/issue/2508
See https://golang.org/issue/3253.
See https://golang.org/issue/3595
See https://golang.org/issue/3795 The resp.Body has already been closed.
See https://golang.org/issue/3871 for details.
See https://golang.org/issue/3945 for details.
See https://golang.org/issue/5224 for details.
See https://golang.org/issue/5402 and https://golang.org/issue/5236.
See https://golang.org/issue/5445.
See https://golang.org/issue/7243 for the discussion.
See https://golang.org/issue/7980.
See https://golang.org/issue/8923
See https://golang.org/issue/9456.
See https://golang.org/issue/9557.
See https://golang.org/issue/9856 for an example GIF.
See https://golang.org/s/go1.4-syscall for more information.
See https://golang.org/s/go14customimport for details.
See https://golang.org/s/go14internal for details.
See https://golang.org/s/go15trace for more info.
See https://golang.org/s/go15vendor for details.
See https://golang.org/s/go15vendor.
See https://golang.org/s/sqldrivers for a list of drivers.
See https://golang.org/s/sqldrivers for a list of third-party drivers.
See https://goo.gl/la6Kli.
See https://http2.github.io/ for more information on HTTP/2.
See https://http2.golang.org/ for a test server running this code.
See https://insouciant.org/tech/connection-management-in-chromium/
See https://mitls.org/pages/attacks/3SHAKE for the motivation behind this requirement.
See https://msdn.microsoft.com/en-us/library/windows/desktop/ms724878.aspx for details.
See https://play.golang.org/p/WMpE0q2wK8
See https://tools.ietf.org/html/rfc7507.
See if a looks like a header key.
See if it falls into several common cases.
See if it will conflict.
See if the note matches one of the patterns in sigtab.
See if there are methods.
See if there's a criteria block in brackets.
See if this is a Mach-O file via its magic number.
See if we can get a token with what we already have.
See if we can use it (in adjusted form) here as well.
See if we have the basename or tail of a package, as in json for encoding/json or ivy/value for robpike.io/ivy/value.
See if we need to replace the existing tiny block with the new one based on amount of remaining free space.
See inet6(4) for details.
See issue 2241 and issue 1878: dwarf include stack size issues in linker.
See issue 3268 for mistakes to avoid.
See issue 4326 for an example and test case.
See issue 65 and golang.org/s/go11return.
See issue 6677 for background.
See issue 7474 for further details.
See issue 7665 and https://codereview.appspot.com/93200044.
See issue 8788 for details.
See larger comment below.
See logic in p256Square.
See main_conf_test.go for what these (don't) do.
See malloc.go for an overview.
See malloc.go for overview.
See mbitmap.go for details.
See mkfastlog2table.go for comments.
See opt.h for bit definitions.
See package json for a textual representation more suitable to data structures.
See page 36 of RFC 959 (http://www.ietf.org/rfc/rfc959.txt) for details of another form of response accepted:
See profile.go for examples of messages implementing this interface.
See progedit in obj6.c.
See reflect/type.go for details.
See resolv.conf(5) on a Linux machine.
See runtime.SetCgoTraceback.
See runtime/cgo/mmap.go.
See runtime/sema.go for documentation.
See selfConnect in tcpsock_posix.go.
See sigfwdgo() for more information on when the signals are forwarded.
See src/runtime/symtab.go:findfunc for details.
See stack_test.go:TestStackPanic GC()
See syscall/fd_nacl.go.
See test/recover.go for test cases and src/reflect/value.go for the actual functions being considered.
See that call site for justification.
See the ConnState type and associated constants for details.
See the EncodeToken documentation for details about when it is necessary.
See the Go compatibility document for background: https://golang.org/doc/go1compat See "Gobs of data" for a design discussion of the gob wire format: https://blog.golang.org/gobs-of-data
See the Request type's documentation for the difference between inbound and outbound request fields.
See the SIGPIPE docs in os/signal, and issue 11845.
See the StdoutPipe example for idiomatic usage.
See the WaitGroup example.
See the Wikipedia page for details.
See the allocation at the top of the function.
See the assembly implementations for more details.
See the blog post, "The Laws of Reflection" for background.
See the cipher.AEAD interface for details.
See the comment about data.rel.ro.FOO section names in data.go.
See the comment above (*response).Write for the entire write flow.
See the comment at the top of regalloc.go and in deadcode for details.
See the comment at the top of regalloc.go for details.
See the comment at the top of the file.
See the comment in NewGCMWithNonceSize.
See the comment in StartTrace.
See the comment in TestArrayHash.
See the comment in beforefork.
See the comment in mgc.go.
See the comment in newTypeObject for details.
See the comment in pin regarding ordering of the loads.
See the comments about ids in newTypeObject.
See the comments in Write() for the details of this format.
See the comments in cmd/internal/obj/x86/obj6.go near CanUse1InsnTLS for a detailed explanation of these instructions.
See the comments in scalarBaseMult about handling infinities.
See the discussion at the end of section 7.4.7.1 of RFC 4346.
See the discussion for issue 7379.
See the docs on Transport for details.
See the documentation for Marshal for details about the conversion of Go values to JSON.
See the documentation for Marshal for details about the conversion of Go values to XML.
See the documentation for Reader's DotReader method for details about dot-encoding.
See the documentation for Unmarshal for details about the conversion of JSON into a Go value.
See the documentation for the DotReader method for details about dot-encoding.
See the documentation for the Request.Write method.
See the documentation for the cgo command for details on using cgo.
See the documentation for the global function PrintDefaults for more information.
See the documentation for those packages for details.
See the documentation in each implementation for details.
See the documentation in each package for details.
See the documentation of the testing package for more information.
See the documentation on Rows.Scan for details.
See the emptyFinalToken example for a use of this value.
See the example for idiomatic usage.
See the fmt package for details.
See the golang.org/x/image/tiff/lzw package for an implementation.
See the large comment above isStale for details.
See the long comment in isStale for details.
See the long comment near jmpdefer in runtime/asm_ppc64.s for why.
See the package docs for more about HTTP/2.
See the package runtime documentation for details.
See the respective function's documentation for details.
See the type.Equal calls below for where this matters.
See the uses of ENOMEM in sysMap in those files.
See the validHostHeader comment.
See the zero* and copy* generators below for architecture-specific comments.
See the zip spec for details.
See tzfile(5), http://en.wikipedia.org/wiki/Zoneinfo, and ftp://munnari.oz.au/pub/oldtz/
See user_namespaces(7).
See: http://www.pkware.com/documents/casestudies/APPNOTE.TXT This package does not support disk spanning.
See: https://golang.org/issue/6506.
See: https://play.golang.org/p/al75v23kUy , but go/types reports: "invalid argument: x.m is a method value".
Seed the maps with information about the addrtaken variables.
Seed the random number generator.
Seed uses the provided seed value to initialize the default Source to a deterministic state.
Seed uses the provided seed value to initialize the generator to a deterministic state.
Seeing how far it gets determines which instructions failed.
Seek implements the io.Seeker interface.
Seek positions the Reader at offset off in the encoded entry stream.
Seek restores the line table reader to a position returned by Tell.
Seek returns the new offset relative to the start of the file and an error, if any.
Seek seems supported, so perform the real Seek.
Seek to a new position in the type unit.
Seek, giving up buffered data.
SeekPC returns the Entry for the compilation unit that includes pc, and positions the reader to read the children of that unit.
SeekPC sets *entry to the LineEntry that includes pc and positions the reader on the next entry in the line table.
Seeker is the interface that wraps the basic Seek method.
Seeking isn't supported.
Seeking to an offset before the start of the file is an error.
Seeking to any positive offset is legal, but the behavior of subsequent I/O operations on the underlying object is implementation-dependent.
Seems like Darwin requires some privilege to increase the soft limit of rlimit sandbox, though Setrlimit never reports an error.
Seems like kern.osreldate is veiled on latest OS X.
Seems like we need to make sure whether the IP interface stack consists of IP point-to-point numbered or unnumbered addressing.
Sees inside the field.
Segment physical address
Segment returns the first Segment with the given name, or nil if no such segment exists.
Segment size in memory
Segment virtual address
Select a Go type with (at least) twice the width.
Select and sync to appropriate version of the repository.
Select best unit for profile output.
Select case descriptor.
Select executes a select operation described by the list of cases.
Select must (unconditionally) choose the non-synchronized variable thus causing exactly one race.
Select must enter one of its blocks, so there is no need for a cleaning at the end.
Select needs to communicate with another goroutine.
Select statement header.
Select the top maxNodelets alphanumeric labels by weight
SelectSend, SelectRecv or SelectDefault
Selected bits with which to run various tests.
Selected dates and corner cases
Selected precisions with which to run various tests.
SelectionKind describes the kind of a selector expression x.f (excluding qualified identifiers).
SelectionString returns the string form of s.
Selections maps selector expressions (excluding qualified identifiers) to their corresponding selections.
Self-check: Verify that the instrumented basic blocks are disjoint.
Self-signed certificate using DSA with SHA1
Semantically it could be a unary "*" expression, or a pointer type.
Semantically it is off(reg), but the (TLS*1) annotation marks this as indexing from the loaded TLS base.
Semantics of each op are described in the opcode files in gen/*Ops.go.
Semaphore implementation exposed to Go.
Semaphore not acquired.
Semi-exhaustive test for the append predeclared function.
Semi-exhaustive test for the copy predeclared function.
Semicolons are inserted by the lexer.
Semrelease atomically increments *s and notifies a waiting goroutine if one is blocked in Semacquire.
Send 'i' to channel 'ch'.
Send 'i' to channel 'out'.
Send 100 integers, ensure that we receive them non-corrupted in FIFO order.
Send 1000 integers in 4 goroutines, ensure that we receive what we send.
Send a quit signal in the hope that the program will print a stack trace and exit.
Send a response on connection 2.
Send a response with no body, keep-alive (implicit), and then lie and immediately close the connection.
Send hand-coded requests to server, parse responses.
Send n one way or another, receive it into x, check that they match.
Send n, receive it one way or another into x, check that they match.
Send on an unbuffered or empty-buffered channel is the only operation in the entire runtime where one goroutine writes to the stack of another goroutine.
Send request to a special dedicated thread, so it can stop the IO with CancelIO later.
Send second connection data (with delay in a separate goroutine).
Send sends x on the channel v.
Send some Resources to the pending queue.
Send some data to confirm that the connection is still alive.
Send the POST, but don't care it succeeds or not.
Send the QUIT command and close the connection.
Send the pair (-id, type) Id:
Send this process a SIGHUP
Send this process a SIGHUP and wait for notification on c2.
Send this process a SIGWINCH
Send this process a SIGWINCH and wait for notification on c1.
Send this process a SIGWINCH.
Send this process a hangup
Send this process an alarm
Send this process that signal
Send to activityc after each request completes, regardless of whether it failed.
Send two more SIGHUPs, to make sure that they get delivered on c1 and that not reading from c does not block everything.
Send two more hangups, to make sure that they get delivered on c1 and that not reading from c does not block everything.
Sending "Bcc" messages is accomplished by including an email address in the to parameter but not including it in the msg headers.
Sending Interrupt on Windows is not implemented.
Sending a Point will require that the receiver define a type in the middle of receiving the value for item2.
Sending a Vector will require that the receiver define a type in the middle of receiving the value for item2.
Sending a nil Int pointer (inside a slice) on a round trip through gob should yield a zero.
Sending a nil Rat pointer (inside a slice) on a round trip through gob should yield a zero.
Sendto Recvfrom Socketpair
Sensitive means that this header field should never be indexed.
Separate children further if source has tags.
Separate command and arguments for exec.Command.
Separate elements with a space.
Separate function so that it can split stack.
Separate mark time components with /.
Separate out the final suffix to the start of its group.
Seq arg is seq when the timer was set.
Sequence of extended key usages.
Sequences like MOVQ TLS, BX ...
Sequential panic - like test2 but less picky.
Sequential tests should partake in the counting of running threads.
Sequential: ensure running count is decremented.
SerialNumber is negative to ensure that negative values are parsed.
Serve a new connection.
Serve accepts incoming FastCGI connections on the listener l, creating a new goroutine for each.
Serve accepts incoming HTTP connections on the listener l, creating a new service goroutine for each.
Serve always returns a non-nil error.
Serve any signals from local copy.
Serve executes the provided Handler on the currently active CGI request, if any.
ServeCodec is like ServeConn but uses the specified codec to decode requests and encode responses.
ServeConn blocks, serving the connection until the client hangs up.
ServeConn does not support h2c by itself.
ServeConn runs the DefaultServer on a single connection.
ServeConn runs the JSON-RPC server on a single connection.
ServeConn runs the server on a single connection.
ServeConn serves HTTP/2 requests on the provided connection and blocks until the connection is no longer readable.
ServeConn starts speaking HTTP/2 assuming that c has not had any reads or writes.
ServeConn uses the gob wire format (see package gob) on the connection.
ServeConnOpts are options for the Server.ServeConn method.
ServeContent replies to the request using the content in the provided ReadSeeker.
ServeFile replies to the request with the contents of the named file or directory.
ServeHTTP calls f(w, r).
ServeHTTP dispatches the request to the handler whose pattern most closely matches the request URL.
ServeHTTP implements an http.Handler that answers RPC requests.
ServeHTTP should write reply headers and data to the ResponseWriter and then return.
ServeMux also takes care of sanitizing the URL request path, redirecting any request containing .
ServeMux is an HTTP request multiplexer.
ServeRequest is like ServeCodec but synchronously serves a single request.
Server configurations must include at least one certificate or else set GetCertificate.
Server is an HTTP/2 server.
Server likely already hung up on us.
Server represents an RPC Server.
Server returns a new TLS server side connection using conn as the underlying transport.
ServerConn is an artifact of Go's early HTTP implementation.
ServerContextKey is a context key.
ServerError represents an error that has been returned from the remote side of the RPC connection.
ServerHello is optionally followed by extension data
ServerInfo records information about an SMTP server.
ServerName indicates the name of the server requested by the client in order to support virtual hosting.
ServerName is used to verify the hostname on the returned certificates unless InsecureSkipVerify is given.
ServiceName contain "." character
Serving of pprof-like profiles.
Session resumption is not allowed if renegotiating because renegotiation is primarily used to allow a client to send a client certificate, which would be skipped if session resumption occured.
SessionCache is a cache of ClientSessionState entries for TLS session resumption.
SessionKeyLen is the length of the session key that is being decrypted.
SessionTicketKey is used by TLS servers to provide session resumption.
SessionTicketsDisabled may be set to true to disable session ticket (resumption) support.
Set .File for the library that actually defines the symbol.
Set BuildIDReadSize to 2kB to exercise Mach-O parsing more strictly.
Set Close to ensure that:
Set Content Type assuming StartCPUProfile will work, because if it does it starts writing.
Set Content Type assuming trace.Start will work, because if it does it starts writing.
Set GOT entry to code address.
Set GOT entry to data address.
Set a default Content-Type
Set all pixels to 0xFF alpha to force opaque mode.
Set assigns x to the value v.
Set bit depth and color type.
Set by gcMarkRootPrepare.
Set by the linker so the runtime can determine the buildmode.
Set configures the architecture specified by GOARCH and returns its representation.
Set controlling terminal to fd Ctty
Set controlling terminal to fd Ctty (only meaningful if Setsid is set)
Set deploys the socket system call filter f for the filter type t.
Set desired register of input 0 if this is a 2-operand instruction.
Set dnsConfig and lastChecked so we don't parse resolv.conf twice the first time.
Set environment (GOOS, GOARCH, etc) explicitly.
Set err if error happens.
Set file permission bits.
Set first allocation sample size.
Set idom of entry block to nil instead of itself.
Set if we see an object compiled by the host compiler that is not from a package that is known to support internal linking mode.
Set is called once, in command line order, for each flag present.
Set is the method to set the flag value, part of the flag.Value interface.
Set keep alive period.
Set length to not process more bytes than the precision demands.
Set list to be the set of all non-zero literals and their frequencies
Set modifies the type representation.
Set mp.mallocing to keep from being preempted by GC.
Set needextram when we've just emptied the list, so that the eventual call into cgocallbackg will allocate a new m for the extra list.
Set new table size to 16384, but still limited to 4096
Set new table size to 2048
Set next var (lexically the first if there are two) to the index.
Set of stack slots we could reuse.
Set our type id before evaluating the element's, in case it's our own.
Set p.indent to 1 so we don't get indent "underflow".
Set receiver (for interface calls)
Set registers for phis.
Set sets f to a slice.
Set sets n to a slice.
Set sets the header entries associated with key to the single element value.
Set sets the key to value.
Set sets the state of the specified cell to the given value.
Set sets the value of the named command-line flag.
Set sets the value of the named flag.
Set sets z to the (possibly rounded) value of x and returns z.
Set sets z to x (by making a copy of x) and returns z.
Set sets z to x and returns z.
Set setuid, setgid and sticky bits.
Set the ELF dynamic linker search path.
Set the controlling TTY to Ctty
Set the count to 1 for the main (sequential) test.
Set the current file reader to a sparse file reader.
Set the current file reader.
Set the current frame address..
Set the head of the hash chain to us.
Set the heap profile bucket associated with addr to b.
Set the high bit in cpuprof.handoff to tell getprofile.
Set the leftmost 8 * emLen - emBits bits of the leftmost octet in DB to zero.
Set the leftmost 8 * emLen - emBits bits of the leftmost octet in maskedDB to zero.
Set the new M's spinning.
Set the new iv to the first block we copied earlier.
Set the sender and recipient first
Set the split function for the scanning operation.
Set the value in the headers map.
Set to "none" to use no support library.
Set to -1 when looking for start of field.
Set to 0 to disable external linking mode, 1 to enable it.
Set to false to ignore NodeCount/*Fraction
Set top var (lexically the second if there are two) to the element.
Set trace to true to cause the decoder to print the PC sequence of the executed instruction codes.
Set up an interface value that will cause a crash.
Set up authentication information.
Set up channel on which to send signal notifications.
Set up environment for invoking Go 1.4 go command.
Set up for next round.
Set up for repetition of ptrmask during main loop.
Set up invariant for next time through the loop.
Set up pkg-level scopes to avoid nil-pointer errors.
Set up the allocation arena, a contiguous area of memory where allocated data will be found.
Set up the divisor and find the number of iterations needed.
Set up the sparse map, according to the particular sparse format in use
Set's argument is a string to be parsed to set the flag.
Set1 sets n to a slice containing a single node.
SetAllowedMaxDynamicTableSize sets the upper bound that the encoded stream (via dynamic table size updates) may set the maximum size to.
SetAutoComplete instructs the UI to call complete(cmd) to obtain the auto-completion of cmd, if the UI supports auto-completion at all.
SetBasicAuth sets the request's Authorization header to use HTTP Basic Authentication with the provided username and password.
SetBigInt sets n's value to x.
SetBinaryValue sets the data and type of a name value under key k to value and BINARY.
SetBit sets z to x, with x's i'th bit set to b (0 or 1).
SetBits provides raw (unchecked but fast) access to z by setting its value to abs, interpreted as a little-endian Word slice, and returning z.
SetBool sets v's underlying value.
SetBoundary must be called before any parts are created, may only contain certain ASCII characters, and must be non-empty and at most 69 bytes long.
SetBoundary overrides the Writer's default randomly-generated boundary separator with an explicit value.
SetBytes interprets b as the bytes of a big-endian integer and sets z to that value.
SetBytes interprets buf as the bytes of a big-endian unsigned integer, sets z to that value, and returns z.
SetBytes records the number of bytes processed in a single operation.
SetBytes sets v's underlying value.
SetCPUProfileRate sets the CPU profiling rate to hz samples per second.
SetCap sets v's capacity to n.
SetCgoTraceback records three C functions to use to gather traceback information from C code and to convert that traceback information into symbolic information.
SetComplex sets v's underlying value to x.
SetConfig configures the tool.
SetConfig is a no-op.
SetConnMaxLifetime sets the maximum amount of time a connection may be reused.
SetCookie adds a Set-Cookie header to the provided ResponseWriter's headers.
SetCookies handles the receipt of the cookies in a reply for the given URL.
SetCookies implements the SetCookies method of the http.CookieJar interface.
SetDWordValue sets the data and type of a name value under key k to value and DWORD.
SetDeadline implements the Conn SetDeadline method.
SetDeadline sets the deadline associated with the listener.
SetDeadline sets the read and write deadlines associated with the connection.
SetEmitEnabled controls whether the emitFunc provided to NewDecoder should be called.
SetEmitFunc changes the callback used when new header fields are decoded.
SetErrorCode returns source code that sets return parameters.
SetExpandStringValue sets the data and type of a name value under key k to value and EXPAND_SZ.
SetFields sets struct/interface type t's fields/methods to fields.
SetFinalizer has a special case for objects potentially coming from tiny allocator, it such case it allows to set finalizers for an inner byte of a memory block.
SetFinalizer sets the finalizer associated with obj to the provided finalizer function.
SetFinalizer(obj, nil) clears any finalizer associated with obj.
SetFlags sets the output flags for the logger.
SetFlags sets the output flags for the standard logger.
SetFloat sets v's underlying value to x.
SetFloat64 panics with ErrNaN if x is a NaN.
SetFloat64 sets z to exactly f and returns z.
SetFloat64 sets z to the (possibly rounded) value of x and returns z.
SetFrac sets z to a/b and returns z.
SetFrac64 sets z to a/b and returns z.
SetGCPercent returns the previous setting.
SetImports sets the list of explicitly imported packages to list.
SetIndex sets the i'th element of Nodes to node.
SetInf sets z to the infinite Float -Inf if signbit is set, or +Inf if signbit is not set, and returns z.
SetInt sets n's value to i.
SetInt sets v's underlying value to x.
SetInt sets z to the (possibly rounded) value of x and returns z.
SetInt sets z to x (by making a copy of x) and returns z.
SetInt64 sets z to the (possibly rounded) value of x and returns z.
SetInt64 sets z to x and returns z.
SetKeepAlive sets whether the operating system should send keepalive messages on the connection.
SetKeepAlivePeriod sets period between keep alives.
SetKeepAlivesEnabled controls whether HTTP keep-alives are enabled.
SetLen sets v's length to n.
SetLineno sets the current source line number.
SetLines sets the line offsets for a file and reports whether it succeeded.
SetLinesForContent sets the line offsets for the given file content.
SetLinger sets the behavior of Close on a connection which still has data waiting to be sent or to be acknowledged.
SetMapIndex sets the value associated with key in the map v to val.
SetMaxDynamicTableSize changes the dynamic header table size to v.
SetMaxDynamicTableSizeLimit changes the maximum value that can be specified in SetMaxDynamicTableSize to v.
SetMaxIdleConns sets the maximum number of connections in the idle connection pool.
SetMaxOpenConns sets the maximum number of open connections to the database.
SetMaxReadFrameSize sets the maximum size of a frame that will be read by a subsequent call to ReadFrame.
SetMaxStack is useful mainly for limiting the damage done by goroutines that enter an infinite recursion.
SetMaxStack returns the previous setting.
SetMaxStack sets the maximum amount of memory that can be used by a single goroutine stack.
SetMaxStringLength sets the maximum size of a HeaderField name or value string.
SetMaxThreads is useful mainly for limiting the damage done by programs that create an unbounded number of threads.
SetMaxThreads returns the previous setting.
SetMaxThreads sets the maximum number of operating system threads that the Go program can use.
SetModTime sets the ModifiedTime and ModifiedDate fields to the given time in UTC.
SetMode changes the permission and mode bits for the FileHeader.
SetMode sets z's rounding mode to mode and returns an exact z.
SetName sets the package name.
SetNoDelay controls whether the operating system should delay packet transmission in hopes of sending fewer packets (Nagle's algorithm).
SetNumElem sets the number of elements in an array type.
SetOffset sets the offset of the beginning of the zip data within the underlying writer.
SetOpt sets the optimizer data for the node, which must not have been used with SetVal.
SetOpt(nil) is ignored for Vals to simplify call sites that are clearing Opts.
SetOutput sets the destination for usage and error messages.
SetOutput sets the output destination for the logger.
SetOutput sets the output destination for the standard logger.
SetPanicOnFault applies only to the current goroutine.
SetPanicOnFault controls the runtime's behavior when a program faults at an unexpected (non-nil) address.
SetParallelism sets the number of goroutines used by RunParallel to p*GOMAXPROCS.
SetPendingDialHooks sets the hooks that run before and after handling pending dials.
SetPointer sets the unsafe.Pointer value v to x.
SetPos sets the file and line number.
SetPos sets the position.
SetPrefix sets the output prefix for the logger.
SetPrefix sets the output prefix for the standard logger.
SetQWordValue sets the data and type of a name value under key k to value and QWORD.
SetRat sets z to the (possibly rounded) value of x and returns z.
SetReadBuffer sets the size of the operating system's receive buffer associated with the connection.
SetReadDeadline implements the Conn SetReadDeadline method.
SetReadDeadline sets the deadline for future Read calls.
SetReadDeadline sets the read deadline on the underlying connection.
SetReturnValuesCode returns source code that accepts syscall return values.
SetSessionTicketKeys updates the session ticket keys for a server.
SetSessionTicketKeys will only update it by replacing it with a new value.
SetSliceBounds sets n's slice bounds, where n is a slice expression.
SetString interprets s as a number in the given base and sets z to that value.
SetString returns an error if s cannot be parsed or the base is invalid.
SetString sets v's underlying value to x.
SetString sets z to the value of s and returns z and a boolean indicating success.
SetString sets z to the value of s, interpreted in the given base, and returns z and a boolean indicating success.
SetStringValue sets the data and type of a name value under key k to value and SZ.
SetStringsValue sets the data and type of a name value under key k to value and MULTI_SZ.
SetTraceback sets the amount of detail printed by the runtime in the traceback it prints before exiting due to an unrecovered panic or an internal runtime error.
SetTracebackEnv is like runtime/debug.SetTraceback, but it raises the "environment" traceback level, so later calls to debug.SetTraceback (e.g., from testing timeouts) can't lower it.
SetTree sets the parent tree for the node.
SetUint sets v's underlying value to x.
SetUint64 sets z to the (possibly rounded) value of x and returns z.
SetUint64 sets z to x and returns z.
SetUnderlying sets the underlying type and marks t as complete.
SetVal sets the Val for the node, which must not have been used with SetOpt.
SetWriteBuffer sets the size of the operating system's transmit buffer associated with the connection.
SetWriteDeadline implements the Conn SetWriteDeadline method.
SetWriteDeadline sets the deadline for future Write calls.
SetWriteDeadline sets the write deadline on the underlying connection.
Setenv sets the value of the environment variable named by the key.
Setg(nil) clears g, which is the signal handler's cue not to run Go handlers.
Setprofilebucket locks a bunch of other mutexes, so we call it outside of proflock.
Sets attributes of an element.
Sets the current transform matrix of an element.
Sets the state of the registers to that encoded in regs.
Sets the traceback context function.
Setting IgnoreVendor ignores vendor directories.
Setting ModTime is required for reader parsing to succeed, and seems harmless enough.
Setting Roots ensures that Verify won't delegate to the OS library and thus the correct error should always be returned.
Setting a negative base is equivalent to fset.Base(), so test some of each.
Setting is a setting parameter: which setting it is, and its value.
Setting it to distinct values allows multiple grammars to be placed in a single package.
Setting the high bit in handoff means that the profiling is over, and the goroutine is now in charge of flushing the data left in the hash table to the log and returning that data.
Setting the top two bits, rather than just the top bit, means that when two of these values are multiplied together, the result isn't ever one bit short.
Setting this flag causes the stream to enter one of "half closed" states.
Setting up lldb is flaky.
Setup HTTP/2 before srv.Serve, to initialize srv.TLSConfig before we clone it and create the TLS Listener.
Setup P client/server connections.
Setup for binary operation.
Shade indicates that it has seen a white pointer by adding the referent to wbuf as well as marking it.
Shade the object if it isn't already.
Sharada is the set of Unicode characters in script Sharada.
Shared empty method set.
Shavian is the set of Unicode characters in script Shavian.
Shift amounts are considered unsigned.
Shift of the number of arguments in the first event byte.
Shift other tokens up to avoid conflicts.
Shift removes the first word from the Prefix and appends the given word.
Shift right once and pull the carry back into the 63rd bit.
Shift slice contents down if we evicted things.
Shift to state action.
Shift up and down in order to sign extend the result.
Shifts Flag: -shift Shifts equal to or longer than the variable's length.
Short circuit if references are already seen.
Short is the short description shown in the 'go help' output.
Short lengths must be encoded in short form.
Short reports whether the -test.short flag is set.
Shortcircuit finds situations where branch directions are always correlated and rewrites the CFG to take advantage of that fact.
Shorten the computed common prefix by the length of suffix, if it is found as suffix of the prefix.
ShortestDecimal stores in d the shortest decimal representation of f which belongs to the open interval (lower, upper), where f is supposed to lie.
Should allocate a buffer.
Should be OK to register the same type multiple times, as long as they're at the same level of indirection.
Should be called only if IsPrint fails.
Should be called only when handling GobEncoders/Decoders, which may be pointers.
Should be impossible, but better to return a truncated profile than to crash the entire process.
Should be no buffering.
Should be no init func in the assembly.
Should be nothing on this line
Should be warmed up by now.
Should call Sqrt, but it's just a test.
Should emit 1 table size update (2048)
Should emit 2 table size updates (2048 and 4096)
Should handle ASCII well.
Should have ".git" suffix
Should have been handled in elfsetupplt
Should have fixed it before Go 1.1.
Should have picked off all the reasons above, but just in case, fall back to generic error.
Should match Go spec, compilers, and ../../go/parser/parser.go:/isValidImport.
Should never be used, because NaCl network connections do not honor "SetNonblock".
Should not be widespread, but easy to support.
Should not change if run again.
Should not happen but might as well show it if it does.
Should not happen, but just in case.
Should not happen, so if it does, shut down the connection to signal that the connection is broken.
Should not use this code.
Should only appear if AllDecls is set.
Should only arrive here with large memory or a struct/array containing a non-memory field/element.
Should only be used after a reset.
Should only be using a few MB.
Should preferably be a multiple of 6, since we accumulate 6 bytes between writes to the buffer.
Should print deadlock message, not hang.
Should return expected error.
Should think about making RPC more general.
Should work with padding.
ShouldRepeat reports whether it would be worthwhile to use a Repeat to describe c elements of n bits each, compared to just emitting c copies of the n-bit description.
Shouldn't happen, but just in case, stop.
Shouldn't happen, so catch it with prejudice.
Shoult not happen, but just in case.
Show a nicer error message if this isn't a Git repo.
Show associated methods, constants, etc.
Show live pointer bitmaps.
Show only package docs for commands.
Show original name passed to lookup, not suffixed one.
Show runtime call frames in memory profiles
Show the current goroutine first, if we haven't already.
Show the documentation for the package, symbol, and method.
Show vendor-expanded paths in listing
Show what created goroutine, except main goroutine (goid 1).
Shrink the stack if not much of it is being used.
Shut down the connection to signal that the connection is broken.
Shut down the connection.
Sibling returns a sibling of x in the dominator tree (i.e., a node with the same immediate dominator) or nil if there are no remaining siblings in the arbitrary but repeatable order chosen.
Siddham is the set of Unicode characters in script Siddham.
Siemens TriCore embedded processor.
Sieve out 'composites' from 'candidates'.
Sign is now in buffer
Sign may also attempt to type assert opts to other types in order to obtain algorithm specific values.
Sign signs an arbitrary length hash (which should be the result of hashing a larger message) using the private key, priv.
Sign signs digest with the private key, possibly using entropy from rand.
Sign signs msg with priv, reading randomness from rand.
SignWriting is the set of Unicode characters in script SignWriting.
Signal assign to use OpZero.
Signal forwarding is currently available only on Darwin and Linux.
Signal masks are per-thread, so make sure this goroutine stays on one thread.
Signal not handled by Go, forward it.
Signal self if parent is already dead.
Signal sends a signal to the Process.
Signal that the process will get when its parent dies (Linux only)
Signal that we're done whether we return normally or by FailNow's runtime.Goexit.
Signal to fetch saved values from gp.
Signal wakes one goroutine waiting on c, if there is any.
Signals are primarily used on Unix-like systems.
Signature algorithms for TLS 1.2 (See RFC 5246, section A.4.1)
Signbit returns true if x is negative or negative zero.
Signed int is a sign-extended varint.
Signed/unsigned is explicit with the extension ops (SignExt*/ZeroExt*) and implicit as the arg to some opcodes (e.g. the second argument to shifts is unsigned).
Signed: need to convert result.
SignedCertificateTimestamps contains an optional list of Signed Certificate Timestamps which will be served to clients that request it.
Signer is an interface for an opaque private key that can be used for signing operations.
SignerOpts contains options for signing with a Signer.
Silence future errors.
Silence them by casting all pointers to void*.
Similar case, with a source on the heap.
Similar to golang.org/issue/3692
Similar to issue 5002, used to fail at link time.
Similar to stopTheWorld but best-effort and can be called several times.
Similar to the addr32 logic above, but it only kicks in when something used the data size prefix (one is implicit).
Similar to the horizontal 1-D IDCT case, if all the AC components are zero, then the IDCT is trivial.
Similarly SHRQ CX, AX:DX is really SHRQ CX(DX*0), AX.
Similarly for image.Gray and image.CMYK.
Similarly one ok bool could be shared among all the x,ok receives.
Similarly, RoundTrip should not attempt to handle higher-level protocol details such as redirects, authentication, or cookies.
Similarly, a 0 indicates zero padding.
Similarly, an empty HLIT tree is guaranteed to fail later since the compressed data section must be composed of at least one symbol (the end-of-block marker).
Similarly, cloning sub-templates should fail.
Similarly, expanding std should include some of our vendored code.
Similarly, if DA is known to be unreachable or if Source(DA) is undefined, then prefer DB.
Similarly, if DB is reached via encapsulation and DA is not, then prefer DA.
Similarly, if Source(DA) is not deprecated and Source(DB) is deprecated, then prefer DA.
Similarly, if Source(DB) is simultaneously a home address and care-of address and Source(DA) is not, then prefer DB.
Similarly, if the generated code looked like:
Similarly, if the writer has a ReadFrom method, use it to do the copy.
Similarly, if there's some memory operand, the segment will be shown there and doesn't need to be shown as an explicit prefix.
Similarly, in the reverse situation, "go test .." will test "unicode" from the "unicode/utf8" directory.
Similarly, mm and mm1 have identical meaning, as do xmm and xmm1.
Similarly, section A.1.1 explains that it is the ratio of H_i to max_j(H_j) that matters, and similarly for V.
Similarly, the _all.o uses dynamic references to real system object code because cmd/link is not sophisticated enough to process the real code.
Similarly, there is no need to specify the size of the operand (int8, int64).
Similarly, total amount of allocated memory is calculated as amount of freed memory plus amount of alive heap memory.
Simple I/O interface to binary blob of data.
Simple backwards flood from check to definition.
Simple byte buffer for marshaling data.
Simple cas-lock to coordinate with setcpuprofilerate.
Simple case: if Remove works, we're done.
Simple conversions to avoid depending on strconv.
Simple counter server.
Simple file i/o and string manipulation, to avoid depending on strconv and bufio and strings.
Simple functions for DeepEqual tests.
Simple implementation to avoid pulling in path/filepath.
Simple methods with and without arguments.
Simple net+crypto-aware packages.
Simple register: R10.
Simple static webserver:
Simple test for go generate.
Simple test of the garbage collector.
Simple test to make sure PAX extensions are in effect
Simple tests, primarily to verify the ReadFrom and WriteTo callouts inside Copy, CopyBuffer and CopyN.
Simple torture test for segmented stacks: do math in unary by recursion.
Simple use: Sort by user.
Simple writes are done in batch.
SimpleFold iterates over Unicode code points equivalent under the Unicode-defined simple case folding.
Simplified version of the code for *ast.Idents: - imported objects are always fully initialized
Simplify children, building new Regexp if children change.
Simplify our invalid instruction text.
Simplify the code accordingly.
Simulate the completion of the barrier.
Simulated net interface to exercise bug without involving a real network.
Sin returns the sine of the radian argument x.
Sin returns the sine of x.
Since CancelRequest will clear the canceler, we can use the return value to detect if the request was canceled since the last setReqCancel call.
Since FixedStack is different on different systems, we must vary NumStackOrders to keep the same maximum cached size.
Since FreeBSD 10 gcc is no longer part of the base system.
Since LZ77 uses forward copies, that situation is used to perform a form of run-length encoding on repeated runs of symbols.
Since PC must be last, there the possible partial transitions in ordinary execution are (1) g alone is updated, (2) both g and SP are updated, and (3) SP alone is updated.
Since PCDATA instructions have no width in the final code, it does not matter which phase we use for the update.
Since Plan 9 preserves message boundaries, never allow a zero-byte write.
Since R is 2**257, we can divide by R with a bitwise shift if we can ensure that the right-most 257 bits are all zero.
Since a huffmanDecoder can be empty or be composed of a degenerate tree with single element, huffSym must error on these two edge cases.
Since a p224FieldElement contains 224 bits there are two possible representations of 0: 0 and p.
Since a seal and open operation may be running concurrently, there is a separate buffer for each.
Since allocations are blocked until assists can happen, we want enable assists as early as possible.
Since b has subbenchmarks, we will no longer run it as a benchmark itself.
Since encryption is a randomized function, ciphertext will be different each time.
Since events contain only stack id rather than whole stack trace, we can allow quite large values here.
Since func main has not returned, the program continues execution of other goroutines.
Since golden is a newly allocated image, we don't have to check if the input source and mask images and the output golden image overlap.
Since it used to not work that way, verify.
Since m and g are not set now (likely nil, but see below) needm is limited in what routines it can call.
Since mcache is in non-GC'd memory, we handle it by clearing it in releaseAll during mark termination.
Since most distributions use the same mtime for all files in a tree, they will be unaffected.
Since most functions come from a single file, these are usually short and quick to scan.
Since most handlers read in the the main ServeHTTP goroutine, this will show up rarely.
Since multiple sudogs may have the same channel, we unlock only after we've passed the last instance of a channel.
Since mutually recursive sets of functions are allowed, we don't necessarily raise an error if n depends on a node which is already waiting for its dependencies to be visited.
Since no more ciphersuites will be added to SSLv3, this will remain true.
Since only a single bit is set, the value is two to the power of k.
Since returns the time elapsed since t.
Since the actual system call is getdirentries64, 64 is a good guess.
Since the code length assignments determine the efficiency of the tree, each of these trees is equally good.
Since the conn is considered bad and is being discarded, treat it as closed.
Since the data is so small, a just reading from the buffered reader is better than flushing the buffer and seeking.
Since the encoder writes no zeros, if we arrive at a decoder we have a value to extract and store.
Since the error requires an EOF, we cannot use the errorcheckoutput mechanism.
Since the former presumably doesn't exist, go build decides to rebuild everything, including the standard library.
Since the key is random, using a fixed nonce is acceptable as the (key, nonce) pair will still be unique, as required.
Since the left hand side of (3) contain only i+2 bits, it does not necessary to do a full (53-bit) comparison in (3).
Since the low bits are often zero, this can save encoding bytes.
Since the object must be alive during call to mProf_Malloc, it's fine to do this non-atomically.
Since the only way to get here is to explicitly request it, just fail on unimplemented instead of trying to unwind our mess.
Since the queue is full, those are both the same slot.
Since the reference implementation will always generate fresh random numbers, large parts of the reference connection will always change.
Since the templates created by ParseFiles are named by the base names of the argument files, t should usually have the name of one of the (base) names of the files.
Since there is no I/O (everything is in memory), the global lock mu protects the whole file system state, and that's okay.
Since there is only one allocation from a given span at a time, we should be able to set these bits non-atomically.
Since there's at most 2 successors, the inner/outer ordering between them can be established with simple comparisons.
Since these are errors in dependencies, the same error might show up multiple times, once in each package that depends on it.
Since they are uint16s, the number must be even.
Since this code (selfConnect) is already trying to work around a problem, we make sure if this happens we recognize trouble and ask the DialTCP routine to try again.
Since this frame never returned, we can stop scanning.
Since this is the first transmission of type Point, the type descriptor for Point itself must be sent before the value.
Since this only occurs when -update is given and thus when there's a human watching the test, this isn't too bad.
Since two case values may have the same "underlying" value but different types we need to also check the value's types (e.g., byte(1) vs myByte(1)) when the switch expression is of interface type.
Since we act on runes, it would be easy to support Unicode here.
Since we are going to write the file to a temporary directory, we will need to add -I .
Since we are reading all the DWARF, assume we will see the variable elsewhere.
Since we can encode in USTAR format, disable PAX header.
Since we disable preemption around the first store, we can wait with active spinning.
Since we don't handle bodies with closures, this return is guaranteed to belong to the current inlined function.
Since we have already called the function it doesn't matter that we are writing to the non-result parameters.
Since we have not updated i, the 8th word from i+1 is i+8.
Since we have previously verified that a frame's component identifiers (C_i values in section B.2.2) are unique, it suffices to check that the implicit indexes into d.comp are unique.
Since we just multiplied two Montgomery values together, the result is x*y*R*R mod p.
Since we never have embedded types, only parse methods here.
Since we switched to allocating black, in theory we shouldn't have to change the assist ratio.
Since we're on the system stack, this is non-preemptible, so we can just measure start and end time.
Since we've disabled preemption, GC cannot happen in between.
Sincos returns Sin(x), Cos(x).
Single character or simple range.
Single const declarations inside ()'s are considered ungrouped and show up in sorted order.
Single empty part, ended with --boundary immediately after headers.
Single entry: can stop once we reach the non-pointer data.
Single panic but recover called via defer
Single quote and parens are sub-delims in RFC 3986, but we escape them so the output can be embedded in single quoted attributes and unquoted CSS url(...) constructs.
Single quotes and double quotes are recognized to prevent splitting within the quoted region, and are removed from the resulting substrings.
Single quotes are reserved in URLs, but are only used in the obsolete "mark" rule in an appendix in RFC 3986 so can be safely encoded.
Single token -- complete command name
Single values - ints, strings etc.
Single var declarations inside ()'s are considered ungrouped and show up in sorted order.
Single-element array is same as its lone element.
Single-word zero for use when we need a valid pointer to 0 bytes.
SingletonValue: uint(0) FieldValue
Sinh returns the hyperbolic sine of x.
Sinhala is the set of Unicode characters in script Sinhala.
Site-local addresses are defined in RFC 3513 section 2.5.6 (and deprecated in RFC 3879).
Size also includes terminating 0.
Size and alignment must agree.
Size class 0 is reserved to mean "not small".
Size grows the buffer to exactly n bytes, so d.Bytes() will return a slice of length n.
Size in bytes of the array of initialization functions.
Size in bytes of the array of pre-initialization functions.
Size in bytes of the array of termination functions.
Size is the number of bytes available for reading via ReadAt.
Size is the size, in bytes, of a SHA-512 checksum.
Size needs to be bigger than size of type definition.
Size of ELF header in bytes.
Size of an address, in bytes.
Size of associated object.
Size of contents in file.
Size of contents in memory.
Size of e_ident array.
Size of each ElfNN_Rel relocation.
Size of each ElfNN_Rela relocation entry.
Size of each entry in section.
Size of each symbol table entry.
Size of initial allocation for buffer.
Size of left rotation per round in each half of the key schedule
Size of program header entry.
Size of right-side write, or right-side read if no write.
Size of section header entry.
Size of string table.
Size of the memory block used for combining (maxTinySize) is tunable.
Size of the trailing by_size array differs between Go and C, NumSizeClasses was changed, but we cannot change Go struct because of backward compatibility.
Size of the trailing by_size array differs between Go and C, and all data after by_size is local to runtime, not exported.
Size of utf16 string in bytes is not perfect, but correct for current test values.
Size reports the length of the data source in bytes.
Size returns a rectangle's width and height, as a Point.
Size returns how many bytes Write would generate to encode the value v, which must be a fixed-size value or a slice of fixed-size values, or a pointer to such data.
Size returns r's width and height.
Size returns the length, in bytes, of a digest resulting from the given hash function.
Size returns the number of bytes Sum will return.
Size returns the number of leading ones and total bits in the mask.
Size returns the original length of the underlying byte slice.
Size returns the original length of the underlying string.
Size returns the size of an entry per RFC 7540 section 5.2.
Size returns the size of file f as registered with AddFile.
Size returns the size of the section in bytes.
Size384 is the size, in bytes, of a SHA-384 checksum.
SizedReaderAt is the interface that groups the basic ReadAt method with a Size method that reports the total size of the underlying object.
Sizeof must implement the size guarantees required by the spec.
Sizeof returns the size of a variable of type T.
Sizes defines the sizing functions for package unsafe.
Sk is the set of Unicode characters in category Sk.
Skip 'new(Type)' for built-in 'new'
Skip a "connection refused" in the fallback thread.
Skip a "connection refused" in the primary thread.
Skip ahead to byte boundary.
Skip any entries that do not match the regexp (for the "peek" command).
Skip blank-named fields.
Skip calls without variadic args.
Skip checking non-variadic functions
Skip checking non-variadic functions.
Skip checking variadic functions without fixed arguments.
Skip combining dwarf on arm.
Skip combining if `dsymutil` didn't generate a file.
Skip following argument to -rpath* too.
Skip initial BOM if present.
Skip initial spaces in value.
Skip is equivalent to Log followed by SkipNow.
Skip non-executable entries.
Skip non-interesting units.
Skip off-site redirects.
Skip over composite entries that happen to be nested inside this one.
Skip over object header to export data.
Skip past all empty fragments.
Skip past comments and empty lines seeking a real header.
Skip reads tokens until it has consumed the end element matching the most recent start element already consumed.
Skip registers that phis used, we'll handle those specially during merge edge processing.
Skip spaces but stop at newline.
Skip spaces in format but absorb at most one newline.
Skip stab debug info.
Skip the interface if it's down.
Skip the nohup test below when running in tmux on darwin, since nohup doesn't work correctly there.
Skip the number of arguments that the prologue says this opcode has.
Skip this check if the input uses "a/b" rational syntax.
Skip trailing path separator.
Skip typecheck if already done.
Skip when using systemVerify, since Windows can only return a single chain to us (for now).
Skip when using systemVerify, since Windows will* find the missing intermediate cert.
SkipChildren skips over the child entries associated with the last Entry returned by Next.
SkipDir is used as a return value from WalkFuncs to indicate that the directory named in the call is to be skipped.
SkipNow marks the test as having been skipped and stops its execution.
SkipNow must be called from the goroutine running the test, not from other goroutines created during the test.
SkipSpace provides Scan methods the ability to skip space and newline characters in keeping with the current scanning mode set by format strings and Scan/Scanln.
SkipSpace skips space in the input.
Skipf is equivalent to Logf followed by SkipNow.
Skipped reports whether the test was skipped.
Skips paths going through any nodes matching regexp
Skips sample locations matching regexp
Sleep for a while to reduce the possibility of the failure.
Sleep for twice the expected length of time for the batch of 50 queries above to finish before starting the next round.
Sleep long enough for Happy Eyeballs to kick in, and inhibit cancelation.
Sleep pauses the current goroutine for at least the duration d.
Sleep sleeps for an appropriate interval (dependent on error state) before sending the Resource to done.
Sleep to ensure that _p_ isn't about to run the g we are about to steal.
Sleep until unparked by semawakeup or timeout.
Sleep(0) sets G's status to Gwaiting, but then immediately returns leaving the status.
Sleep(0) used to hang, the sequence of events was as follows.
Sleeping for 25 ms prevents it on most fast machines, causing the next fetch() call to succeed quickly.
Sleeping for a while seems to do the trick sometimes.
Sleeping when we observe the race seems to be the most reliable option we have.
Slice itself is not leaked until proven otherwise
Slice of element values.
Slice returns the entries in Nodes as a slice.
Slice returns the entries in f as a slice.
Slice: pointer, len, cap.
SliceHeader is the runtime representation of a slice.
SliceOf returns the slice type with element type t.
SlicePtrFromStrings converts a slice of strings to a slice of pointers to NUL-terminated byte arrays.
SliceTmpVarCode returns source code for slice temp variable.
SliceType contains Type fields specific to slice types.
SliceValue: uint(n) (n FieldValue)
Slices and arrays iterate over the elements.
Slices are encoded as an unsigned length followed by the elements.
Slices are translated into 2 syscall parameters: pointer to the first element and length.
Slices of bytes in the returned token data refer to the parser's internal buffer and remain valid only until the next call to Token.
Slices, strings and interfaces are supported.
Slide down, keeping most recently-used conns at the end.
Slide existing data to beginning.
Slightly higher, but you have to read all the way to the end.
Slightly odd error, but correct.
Slow client that should timeout.
Slow path: make sure parent exists and then call Mkdir for path.
Slow path: reached end of ptrmask.
Slurp with -1 instead
Sm is the set of Unicode characters in category Sm.
Small allocation sizes (up to and including 32 kB) are rounded to one of about 100 size classes, each of which has its own free list of objects of exactly that size.
Small enough to slurp past to the next request + declares Connection: close, but chunked, so it might have trailers.
Small enough to slurp past to the next request + has Content-Length + declares Connection: close (so pointless to read more).
Small enough to slurp past to the next request + has Content-Length.
Small enough to slurp past to the next request + is chunked.
Small in-memory unzip implementation.
Small memory is handled inline, and single non-memory is handled during type check (OCMPSTR etc).
Small objects are allocated from the per-P cache's free lists.
Small stacks are allocated with a fixed-size free-list allocator.
Small strings get named directly by their contents.
Small structs or arrays with elements of basic type are also supported.
Smaller than a word, word-sized, larger than a word.
Smallest possible faulting page at address zero.
SmallestNonzero is the smallest positive, non-zero value representable by the type.
Smhasher is a torture test for hash functions.
Smoke test to ensure that imported methods get the correct package.
Smoke tests for convenience wrappers - not comprehensive.
Sniff .debug_info to figure out byte order.
Sniff determines the format of r's data.
Snippet from x/tools/godoc/analysis/analysis.go.
So GMT+1 corresponds to -3600 in the Go zone, not +3600.
So a function type with one method, one input, and one output is:
So add an explicit test for this.
So adjust it upward a little bit ourselves: 1/4 MB to get away from the running binary image and then round up to a MB boundary.
So always use cgo instead, which avoids that.
So branches are taken from the MSB downwards.
So by providing this back link here we avoid special casing there.
So can all of the spill locations.
So closing, rg, rd, wg and wd are manipulated in a lock-free way by all operations.
So definitely leave it out.
So don't use needSlot.
So emit a fake instant at the start of the arrow.
So far this means only arm64 uses the standard numbers.
So far we've used timestamp of event emission (ev.Ts).
So for HEAD, the handler should either write the Content-Length or write non-zero bytes.
So for now we keep using a single index for both bitmap lists.
So for this case we don't change buf.pc, so that when we return we will execute the jump instruction and carry on.
So here we ensure that we are selecting the underlying pointer when we build an eface.
So if it was not passed on the command line and it is not present in another shared library, add it here.
So if the error is EADDRNOTAVAIL, we have to try again too, just for a different reason.
So if we would naively count them, we would get a skew toward mallocs.
So instead we remember the syscall exit time and emit the event in execute when we have a P.
So is the set of Unicode characters in category So.
So it could be that we're allocating one pointer and this was just the smallest block available.
So it is enough to just truncate at the first offending character.
So it needs to know every type that might appear in such an entry.
So just log the content.
So let's set it for now.
So limit the buffer to 16000 characters.
So max bucket size is 2048+eps.
So next cycle memory consumption would be doubled.
So now that we have a consistent trace, test that (1) parser does not return a logical error in case of broken timestamps and (2) broken timestamps are eventually detected and reported.
So only care on amd64 gc for now.
So only the ptrmask for the ptrdata bytes is needed.
So only use uevar in the non-addrtaken case.
So probe the kernel to figure it out.
So remember the token adjacent to the variable so we can push it back if necessary.
So run it as a separate check.
So take out -rdynamic if we added it.
So that is what we do, but only on systems likely to support it, which is to say, systems that normally use gold or the GNU linker.
So that local imports resolve consistently, the files must all be in the same directory.
So the GCM cipher suite will be selected unless it's excluded because of the version in this ClientHello.
So the build ID is already tag-sensitive in a perfectly precise way.
So the mtime evidence is ignored for the standard library if we find ourselves in a release version of Go.
So the top of an element of tmp might overlap with another element two positions down.
So the two cases must be distinguished.
So then two people own that Request.Body (both the server and the http client), and both think they can close it on failure.
So there is no GOPATH vs GOPATH shortcut here anymore.
So this change can't be made for compatibility reasons for Go 1.
So this hack seems preferable.
So this is not much of a test.
So this loop ignores a limited number of empty records.
So this protects us from such races.
So toss it away here.
So wait for more than the timeout to ensure that's not the case.
So we allocate 12 bytes and then use the aligned 8 bytes in them as state.
So we can't let garbage collection or stack copying trigger until we've copied them out to somewhere safe.
So we confirm that the compilation fails.
So we do NOT explicitly add build tags to the build ID hash.
So we eliminate limbs from right to left.
So we fall back to hope: We hope we don't hang here.
So we kick off goroutines that need to block first in the hope that while we are executing the rest of the test, they will block.
So we need to give some time quantum to the kernel.
So we need to make a copy of an input so we have a register we can modify.
So we need to make sure that values do not have mismatched bracket or quote characters to prevent the browser from restarting parsing inside a string that might embed JavaScript source.
So we need to produce a correct interleaving of the batches.
So we parse the list and extract the certificates from an OS X machine and embed them into the x509 package.
So we pass -no-pie here, but support for that flag is quite new and we test for its support first.
So we pass 0 for the likeliness of the first branch.
So we remove leading and trailing NULs and spaces to be sure.
So we resolve our working directory again before the test.
So we use timediv instead.
So we will sleep and smell the roses.
So we wrap it in script(1) and be clever right back at it.
So we'll just look for pseudo-ops that are arch-independent.
So we'll just test to make sure we got at least one sample.
So we'll need to move the linkedit section, but all the others can be copied directly.
So we'll subtract 1 and invert.
So we're iterating through the oldbucket, skipping any keys that will go to the other new bucket (each oldbucket expands to two buckets during a grow).
So when we check the inner closure, we don't yet have name for the outer closure.
So, take the net/http.Server value and pad it up a bit, assuming 10 headers.
Sockaddrs contain syscall.SockaddrDatalink on NetBSD
Socket already connected
Socket control messages
Socket is already connected
Socket is not connected
Socket operation on non-socket
Socket type not supported
Socket wraps syscall.Socket.
SocketControlMessage represents a socket control message.
Sockets maps a socket descriptor to the status of socket.
Sockets returns mappings of socket descriptor to socket status.
Soft error, like EAGAIN
Soft_Dotted is the set of Unicode characters with property Soft_Dotted.
Software IEEE754 64-bit floating point.
Software floating point interpretation of ARM 7500 FP instructions.
Solaris runtime-integrated network poller.
Solaris system calls.
Solaris uses 0 as the "until EOF" value.
Solaris uses event ports for scalable network I/O.
Solve the 2,3,5 problem (print all numbers with 2, 3, or 5 as factor) using channels.
Solve the liveness dataflow equations.
Some BSDs include the trailing NUL in the length, whereas others do not.
Some HTML presented at http://machine:port/debug/rpc Lists services, their methods, and some statistics, still rudimentary.
Some HTTP clients will get the response and some (like ours, currently) will complain that the request write failed, without reading the response.
Some Linux kernels cycle blindly through a fixed range of local ports, regardless of destination port.
Some Linux kernels have a bug where futex of FUTEX_WAIT returns an internal error code as an errno.
Some MIME code makes empty parts like this.
Some OpenSSL servers send empty records in order to randomize the CBC IV.
Some Plan 9 file servers incorrectly return EACCES rather than EISDIR when a directory is opened for write.
Some TLS servers fail if the record version is greater than TLS 1.0 for the initial ClientHello.
Some architectures might need a temporary or other help here, but they don't support direct generation of a bool value yet.
Some bad format/argTypes
Some cases will run quickly when "connection refused" is fast, or trigger the fallbackDelay on Windows.
Some certificates in the wild require them.
Some compilers are not able to inline atomic.Or8 function so if it appears as a hot spot consider inlining it manually.
Some compilers have trouble with standard input.
Some differences between graphic and printable.
Some directories contain main packages: Only accept files that belong to the expected package so that parser.ParsePackage doesn't return "multiple packages found" errors.
Some docs say: "It is expected to be a comma separated list of personal data where the first item is the full name of the user."
Some does, some doesn't.
Some entries will never be populated.
Some external packages provide more functionality.
Some fields may not be populated.
Some form of synchronization is required between initializing an object and making that object accessible to another processor.
Some good format/argtypes
Some indirect uses of types crashed gccgo, because it assumed that the size of the type was known before it had been computed.
Some input data that is longer than the minimum reader buffer size.
Some items and their priorities.
Some linkers will add a FILE sym if one is not present.
Some lists are terminated with an end marker (usually for lists where we may not know the length a priori).
Some magic numbers to make sure there are no surprises.
Some mutually recursive types can cause us to be here while still defining the element.
Some newer versions of Windows has new CancelIoEx API, that does not have that limitation and can be used from any thread.
Some non-int types for width.
Some non-printable but graphic runes.
Some objects (packages, types) may be referred to more than once.
Some of Arith's methods have value args, some have pointer args.
Some of the finalizers may not be executed, if the outermost allocations are combined with something persistent.
Some of the print helpers (printsp, for example) call print recursively.
Some of the tests install binaries into a custom GOPATH.
Some of these errors are caught by the compiler (shadowed return parameters for example) but are nonetheless useful tests.
Some other kind of error occurred, like a read timeout, or corrupt chunked encoding.
Some other m is panicking too.
Some parameter list entries have both a name and a type: Distribute types backwards and check that there are no mixed named and unnamed parameters.
Some parts are a bit tedious, but overall it nicely factors out the otherwise common code from the multiple scanning functions in this package (Compact, Indent, checkValid, nextValue, etc).
Some parts of DWARF have no data format, e.g., abbrevs.
Some platform never uses loopback interface as the nexthop for multicast routing.
Some private keys have leading zero padding.
Some profile handlers will incorrectly set regions for the main executable if its section is remapped.
Some queue entries are just place holders so that the machine knows it has considered that pc.
Some receiver will complete our operation for us.
Some regexps can be analyzed to determine that they never need backtracking: they are guaranteed to run in one pass over the string without bothering to save all the usual NFA state.
Some source we don't know how to deal with.
Some symbols may no longer belong in syms due to movement in machosymorder.
Some system calls that create new file descriptors can block for arbitrarily long times: open on a hung NFS server or named pipe, accept on a socket, and so on.
Some system resolvers will return a valid port number when given a number over 65536 (see https://github.com/golang/go/issues/11715).
Some systems use leading _ to denote non-assembly symbols.
Some systems, such as Ubuntu, always add --build-id to every link, but we don't want a build ID when we are producing an object file.
Some template definitions borrowed from TestClone.
Some tests need to edit the source in GOPATH, so copy this directory to a temporary directory and chdir to that.
Some tests rely on particular execution order.
Some things such as roman numeral U+2161 don't describe themselves as upper case, but have a lower case.
Some types can be done without reflection.
Some types that must exist to define other ones.
Some uses of zeroed constants in non-assignment expressions broke with our more aggressive zeroing of assignments (internal compiler errors).
Some valid PAX time values
Some version control tools require the parent of the target to exist.
Some version control tools require the target directory not to exist.
Some versions of Windows can read even less.
Some will be stack phis.
Someone deleted an entry from the map since we called maplen above.
Someone might be reading this memory state.
Something failed while panicing, probably the print of the argument to panic().
Something like that should happen here.
Something to put in a list
Something underhanded is going on.
Something went wrong during type-checking, but it was reported.
Something went wrong in the trailer, we must not allow any further reads of any kind to succeed from body, nor any subsequent requests on the server connection.
Somethings is wrong if at the end, the top level is null or hasn't used all of the leaves.
Sometimes allowance is so large the last digit might need to be decremented to get closer to f.
Sometimes evconst fails.
Sometimes holds a register.
Sometimes we see WSAECONNRESET and ERROR_NETNAME_DELETED is returned here.
Sora_Sompeng is the set of Unicode characters in script Sora_Sompeng.
Sort by cumulative data
Sort by lo increasing, hi decreasing to break ties.
Sort by value ID last to keep the sort result deterministic.
Sort edges by frequency as a hint to the graph layout engine.
Sort function names for printing.
Sort imports if necessary.
Sort is a convenience method.
Sort is a method on the function type, By, that sorts the argument slice according to the function.
Sort outer lists by address, adding to textp.
Sort sorts an ErrorList.
Sort sorts the argument slice according to the less functions passed to OrderedBy.
Sort strings by length and then by value.
Sort symbols for printing.
Sort the basic blocks by their depth first number.
Sort the comments by new position.
Sort the import specs by import path.
Sort the list of stack variables.
Sort the planets by the various criteria.
Sort typelinks by the rtype.string field so the reflect package can binary search type links.
Sort values to make the initial partition.
Sort variables by start.
SortImports sorts runs of consecutive import lines in import blocks in f.
Sortac sorts the AUTHORS and CONTRIBUTORS files.
Sortac sorts the named files in place.
Sorted the same as extraHeader.Write's loop.
Sorting the packages is not necessary but to compare binaries created using textual and binary format we sort by path to reduce differences.
Source and destination must not overlap.
Source files and functions.
Source for base profile to user for comparison
Source formats src in canonical gofmt style and returns the result or an (I/O or syntax) error.
SourceLine reports the source line information for a given address in the file.
Space around "rx" or rx is ignored.
Space flag should have no effect.
Space has been reserved for the length at the head of the message.
Space in format but not in input.
Space is available in the channel buffer.
Space/Z is the set of Unicode space characters, category Z.
Spaces and tabs between bytes are okay but any other non-hex is not.
Spaces are added between operands when neither is a string.
Spaces are always added between arguments and a newline is appended.
Spaces are always added between operands and a newline is appended.
Spaces are ignored unless there are no tabs, in which case spaces count as one tab.
Spaces are not valid in package name
Spaces are not valid in user names or package names
Spaces in 'encoded' separate entire test cases, not individual bytes.
Span is completely free.
Span stores the minimum range of byte positions in the file in which a given variable (types.Object) is mentioned.
Sparse Array implementation is used as a queueOnePass.
Sparse files are represented using a series of sparseEntrys.
Spawn P goroutines in a nested fashion just to differ from TestGoroutineParallelism.
Special 2-operand jumps.
Special 3-operand jumps.
Special C name for Go string type.
Special Cases Gregorian calendar change (no effect)
Special P identifiers:
Special arg that points to the frame pointer.
Special case 1: ChST and MeST are the only zones with a lower-case letter.
Special case because it's a method: the ignored item might define types and we need to record their state in the decoder.
Special case for "else if".
Special case for Go 1 compatibility: return both the response and an error if the CheckRedirect function failed.
Special case for not confusing GC and liveness.
Special case for print: int constant is int64, not int.
Special case for strings: all the ASN.1 string types map to the Go type string.
Special case for time: UTCTime and GeneralizedTime both map to the Go type time.Time.
Special case of "foo/..." as mentioned above.
Special case synchronous sweep.
Special case, useful in debugging.
Special case: "Any" means any.
Special case: 2d divides 1 second.
Special case: BKPT encodes with condition but cannot have one.
Special case: Can compare integer values regardless of type's sign.
Special case: EndElement can be synthesized.
Special case: always show runtime.gopanic frame, so that we can see where a panic started in the middle of a stack trace.
Special case: assignment of string constant.
Special case: crypto.Hash(0) is used to indicate that the data is signed directly.
Special case: d is a multiple of 1 second.
Special case: explicit name of func (*T) method(...) is turned into pkg.(*T).method, but for export, this should be rendered as (*pkg.T).meth.
Special case: foo/...
Special case: if all that is left is "0", this is zero.
Special case: if duration is smaller than a second, use smaller units, like 1.2ms
Special case: if we don't write back the pointers, don't bother doing the write barrier check.
Special case: input buffer is mostly filled with non-data bytes.
Special case: iterator was started during a grow and the grow is not done yet.
Special case: len/cap is constant when applied to array or pointer to array when the expression does not contain function calls or channel receive operations.
Special case: make sure we add a counter to an empty block.
Special case: name used as local variable in export.
Special case: repeat the empty string as much as you want, but it's still the empty string.
Special case: return the element inside the interface.
Special case: single-rune slice is from literal string, not char class.
Special case: we keep byte and uint8 separate for error messages.
Special case: we keep byte/uint8 and rune/int32 separate for error messages.
Special case: x is a bidirectional channel value, T is a channel type, and x's type V and T have identical element types.
Special case: zeroing.
Special cases are the same as Exp.
Special cases as in C99.
Special cases for Pow(0, c).
Special cases for exec machine.
Special cases for register use.
Special cases taken from FreeBSD's /usr/src/lib/msun/src/e_pow.c updated by IEEE Std.
Special cases that have turned out to be useful: ssa/check/on enables checking after each phase ssa/all/time enables time reporting for all phases
Special comment denoting a binary-only package.
Special compiler-only types.
Special debugging case for inserting stack barriers at every frame.
Special form ARM: destination register pair (R1, R2).
Special handling for Log.
Special handling for infinities and NaN, which don't look like a number so shouldn't be padded with zeros.
Special layout in ARM assembly Comparing to x86, the operands of ARM's CMP are reversed.
Special meaning in relocatable objects.
Special ordering requirements.
Special processing considerations.
Special registers, after subtracting obj.RBaseARM64, bit 12 indicates a special register and the low bits select the register.
Special section indices.
Special-purpose environment variables: GOROOT_FINAL The root of the installed Go tree, when it is installed in a location other than where it is built.
Special: argument will be converted to interface using convT2E so make sure it is an addressable temporary.
Special: clean case temporaries in each block entry.
Special: does not save n onto out.
Special: handle call arguments.
Special: make sure key is addressable, and make sure OINDEXMAP is not copied out.
Special: order arguments to inner call but not call itself.
Special: use temporary variables to hold result, so that assertI2Tetc can take address of temporary.
Special: use temporary variables to hold result, so that chanrecv can take address of temporary.
SpecialCase is a named slice of CaseRange to test issue 9171.
SpecialCase represents language-specific case mappings such as Turkish.
Specific DNS RR formats for each query type.
Specific implementations may document their own behavior.
Specifically, it applies to the signals SIGHUP, SIGINT, SIGQUIT, SIGABRT, and SIGTERM.
Specifically, it warns about attempts to pass a Go chan, map, func, or slice to C, either directly, or via a pointer, array, or struct.
Specifically, slice needs a consistent ptr and cap, string needs a consistent ptr and len, and interface needs a consistent type word and data word.
Specifically, we build a list of the inputs to the build, compute its SHA1 hash, and record that as the ``build ID'' in the generated object.
Specified in section B.2.2.
Specified in section B.2.3.
Specified in section B.2.4.1.
Specified in section B.2.4.2.
Specified in section B.2.4.4.
Specify control values.
Specifying precision should have no effect.
Spectral selection progression is when not all of a block's 64 DCT coefficients are transmitted in one pass.
Speculative grab for lock.
Speculatively check if there are any specials without acquiring the span lock.
Spill code has already been generated so there is no code generated at "spill" time.
Spill instruction to move (a StoreReg)
Spill the phi in case we need to restore it later.
Spill the value with the farthest-in-the-future use.
Spills are moved from one block's slice of values to another's.
Spinning threads do some spinning looking for work in per-P run queues before parking.
Splice b out of the graph.
Splice in record, fill in offset.
Splice out any copies introduced during dead block removal.
Splice out special record.
Split a premaster secret in two as specified in RFC 4346, section 5.
Split fields allowing '' or "" around elements.
Split functions ScanBytes is a split function for a Scanner that returns each byte as a token.
Split functions are defined in this package for scanning a file into lines, bytes, UTF-8-encoded runes, and space-delimited words.
Split into time and day.
Split name into components.
Split off possible leading "http:", "mailto:", etc.
Split operands on comma.
Split panics if it is called after scanning has started.
Split path, respecting but preserving quotes.
Split s at any bytes in t.
Split s into lines, trim whitespace from all lines, and return the concatenated non-empty lines.
Split sets the split function for the Scanner.
Split slices s into all subslices separated by sep and returns a slice of the subslices between those separators.
Split slices s into all substrings separated by sep and returns a slice of the substrings between those separators.
Split slices s into substrings separated by the expression and returns a slice of the substrings between those expression matches.
Split splits path immediately following the final Separator, separating it into a directory and file name component.
Split splits path immediately following the final slash, separating it into a directory and file name component.
Split the equivalence class appropriately.
Split the output at the beginning of each line that doesn't begin with a tab.
Split the string at various periods to see what we find.
Split the tag from the xml namespace if necessary.
Split this complex up into two separate variables.
Split this interface up into two separate variables.
Split this slice up into three separate variables.
Split this string up into two separate variables.
Split up named values into their components.
SplitAfter slices s into all subslices after each instance of sep and returns a slice of those subslices.
SplitAfter slices s into all substrings after each instance of sep and returns a slice of those substrings.
SplitAfterN slices s into subslices after each instance of sep and returns a slice of those subslices.
SplitAfterN slices s into substrings after each instance of sep and returns a slice of those substrings.
SplitFunc is the signature of the split function used to tokenize the input.
SplitList does not replace slash characters in the returned paths.
SplitList splits a list of paths joined by the OS-specific ListSeparator, usually found in PATH or GOPATH environment variables.
SplitN slices s into subslices separated by sep and returns a slice of the subslices between those separators.
SplitN slices s into substrings separated by sep and returns a slice of the substrings between those separators.
SplitPathList splits the path list into a slice of individual paths.
Spoil the previous stack segment.
Sprint formats using the default formats for its operands and returns the resulting string.
Sprintf formats according to a format specifier and returns the resulting string.
Sprintln formats using the default formats for its operands and returns the resulting string.
Squash error printing defer
Src specifies ``src in mask''.
SrcDirs returns a list of package source root directories.
Sscan scans the argument string, storing successive space-separated values into successive arguments.
Sscanf scans the argument string, storing successive space-separated values into successive arguments as determined by the format.
Sscanln is similar to Sscan, but stops scanning at a newline and after the final item there must be a newline or EOF.
Sscanln should not work
Stable sorts data while keeping the original order of equal elements.
Stack barriers require that any goroutine whose stack has been scanned must execute write barriers.
Stack being switched.
Stack copier shouldn't crash if there is a nil defer.
Stack describes a Go execution stack.
Stack formats a stack trace of the calling goroutine into buf and returns the number of bytes written to buf.
Stack frames and global variables in the data and bss sections are described by 1-bit bitmaps in which 0 means uninteresting and 1 means live pointer to be visited during GC.
Stack growth is multiplicative, for constant amortized cost.
Stack layout parameters.
Stack numbers are part of the heap numbers, separate those out for user consumption
Stack of what we're in the middle of - array values, object keys, object values.
Stack phis start out life already spilled - each phi input must be a store (using StoreReg) at the end of the corresponding predecessor block.
Stack returns a formatted stack trace of the goroutine that calls it.
Stack returns the stack trace associated with the record, a prefix of r.Stack0.
Stack tracing didn't work during cgo code after calling a Go callback.
Stack was deallocated in gfput.
Stack, data, and bss bitmaps
StackSize + 2 -- The last address on the stack The last stack trace is of the form: 1st word -- 0 2nd word -- 1 3rd word -- 0
StackSystem is a number of additional bytes to add to each stack below the usual guard area for OS-specific purposes like signal handling.
Stackalloc must be called on scheduler stack, so that we never try to grow the stack during the code that stackalloc runs.
Stacks are assigned an order according to size.
Stacks for the following events are OS-dependent due to OS-specific code in net package.
Stale notifications are detected using seq variable, seq is incremented when deadlines are changed or descriptor is reused.
Stamp newly unused spans.
StampNano requires exactly 9 digits of precision.
Stand-in for a network connection
Stand-in for the network.
Standalone (embedded) application
Standard Unix system calls.
Standard complex arithmetic, factored to avoid unnecessary overflow.
Standard gotest benchmark output, collected by build dashboard.
Standard in and out of generator should be the usual.
Standard padding character
Standard syscall entry used by the go syscall library and normal cgo calls.
Standard types that implement these interfaces include time.Time and net.IP.
StandardUI returns a UI that reads from standard input, prints messages to standard output, prints errors to standard error, and doesn't use auto-completion.
Start 3 outstanding requests and wait for the server to get them.
Start 50 parallel slow queries.
Start Generate() as a subprocess.
Start Of Frame (Baseline).
Start Of Frame (Extended Sequential).
Start Of Frame (Progressive).
Start a goroutine that should send on t.C right away.
Start all the cancels in a random order.
Start and end of a string.
Start another request and grab its connection
Start at end of the "if" block so the covered part looks like it starts at the "else".
Start at the beginning of the table.
Start begins an authentication with a server.
Start by opening defaultMaxIdleConns
Start child process that connects to our listener.
Start enables tracing for the current program.
Start exit block, find address of result.
Start final link command line.
Start goroutine pairs and wait for a few preemption rounds.
Start helper goroutines.
Start in the caller's frame.
Start marktermination which includes enabling the write barrier.
Start new os thread before the call to prevent races.
Start of boilerplate cgo prologue.
Start of padding (per SVR4 ABI).
Start output buffer, write header.
Start regalloc state with the end state of the previous block.
Start returns an error if tracing is already enabled.
Start reusing the wg before waiting for the Wait below to return.
Start starts a server from NewUnstartedServer.
Start starts the specified command but does not wait for it to complete.
Start t off with the previously known live values at the end of p.
Start the main racer.
Start the timer for the fallback racer.
Start two co-scheduled hog goroutines.
Start two co-scheduled light goroutines.
Start two goroutines that will race: one will broadcast on the cond var, the other will wait on it.
Start waits until it is time for the event numbered id to begin.
Start with 1 MB and try a few times, doubling each time.
Start with at least one invalid one.
Start with bits in output buffer.
Start with known live values at the end of the block
Start with known live values at the end of the block.
Start with live at end.
Start with the final register state of the primary predecessor
Start with the header.
Start with the magic number.
Start with the pollorder to permute cases on the same channel.
Start with typ as single entry at shallowest depth.
StartCPUProfile enables CPU profiling for the current process.
StartCPUProfile failed, so no writes yet.
StartCPUProfile relies on the SIGPROF signal, but that signal will be delivered to the main program's SIGPROF signal handler (if any) not to the one used by Go.
StartCPUProfile returns an error if profiling is already enabled.
StartCond returns the leading empty-width conditions that must be true in any match.
StartProcess assumes that argv0 is relative to attr.Dir, because it implies Chdir(attr.Dir) before executing argv0.
StartProcess is a low-level interface.
StartProcess starts a new process with the program, arguments and attributes specified by name, argv and attr.
StartProcess wraps ForkExec for package os.
StartRequest blocks until it is time to send (or, if this is a server, receive) the request with the given id.
StartResponse blocks until it is time to receive (or, if this is a server, send) the request with the given id.
StartTLS sends the STARTTLS command and encrypts all further communication.
StartTLS starts TLS on a server from NewUnstartedServer.
StartTimer starts timing a test.
StartTrace enables tracing for the current process.
StartTrace has emitted EvGoInSyscall about this goroutine
StartTrace returns an error if tracing is already enabled.
Starting position of the fragment
Starting with GCoff GCoff to GCscan GSscan scans stacks and globals greying them and never marks an object black.
Starting without pointer we should get changed value in interface.
Starts a new block on return, unless nil checks are disabled.
Starts a new block on return.
Stat of path should succeed.
Stat of path+"/" should succeed too.
Stat retrieves information about the open key k.
Stat returns a FileInfo describing the named file.
Stat returns a FileInfo structure describing the named file.
Stat returns the FileInfo structure describing file.
State of background sweep.
State represents the last-known state of a URL.
State represents the printer state passed to custom formatters.
StateActive represents a connection that has read 1 or more bytes of a request.
StateClosed represents a closed connection.
StateHijacked represents a hijacked connection.
StateIdle represents a connection that has finished handling a request and is in the keep-alive state, waiting for a new request.
StateMonitor maintains a map that stores the state of the URLs being polled, and prints the current state every updateInterval nanoseconds.
StateNew represents a new connection that is expected to send a request immediately.
Statement program extended opcode encodings.
Statement program standard opcode encodings.
Statement terminators precede regexps.
Statements handled by stmtfmt
Statements which may be rendered with a simplestmt as init.
Static reports whether this symbol is static (not visible outside its file).
Statistics about allocation size classes.
Statistics about garbage collector.
Statistics below here are not exported to Go directly.
Stats returns a list of per-cookie socket statistics.
Stats returns database statistics.
Status code under 100 should be zero-padded to three digits.
Status line without a Reason-Phrase, and no trailing space.
Status line without a Reason-Phrase, but trailing space.
StatusCode 100 is already handled above.
StatusCode ProtoMajor ProtoMinor Request.Method TransferEncoding Trailer Body ContentLength Header, values for non-canonical keys will have unpredictable behavior
StatusText returns a text for the HTTP status code.
StdEncoding is the standard base32 encoding, as defined in RFC 4648.
StdEncoding is the standard base64 encoding, as defined in RFC 4648.
StdSizes is a convenience type for creating commonly used Sizes.
Stderr holds a subset of the standard error output from the Cmd.Output method if standard error was not otherwise being collected.
Stderr is provided for debugging, for inclusion in error messages.
StderrPipe returns a pipe that will be connected to the command's standard error when the command starts.
Stdin specifies the process's standard input.
Stdin, Stdout, and Stderr are open Files pointing to the standard input, standard output, and standard error file descriptors.
StdinPipe returns a pipe that will be connected to the command's standard input when the command starts.
Stdout and Stderr specify the process's standard output and error.
Stdout and stderr are too special to be a reliable test.
StdoutPipe returns a pipe that will be connected to the command's standard output when the command starts.
Steal as much credit as we can from the background GC's scan credit.
Steal half of elements from local runnable queue of p2 and put onto local runnable queue of p.
Steal work from other P's.
Step 1: Replace a phi arg with a constant if that arg is the control value of a preceding If block.
Step 2: Compute which values are live across blocks.
Step 3: Redirect control flow around known branches.
Step advances the game by one instant, recomputing and updating all cells.
Step the clock forward and cross the deadline.
Stich the Body back together again, re-attaching our consumed byte.
Sticky error if escaping fails, or escapeOK if succeeded.
Still bogus, but less bogus.
Still do a cheap sanity check to detect WaitGroup misuse.
Still in STW but gcphase is _GCoff, reset to _GCmarktermination At this point all objects will be found during the gcMark which does a complete STW mark and object scan.
Still nothing, pick any block.
Stitch together any continuations or things with stars (i.e. RFC 2231 things with stars: "foo*0" or "foo*")
Stmt is a prepared statement.
Stmt returns a transaction-specific prepared statement from an existing statement.
Stmt.openStmt checks it before cleaning closed connections in Stmt.css.
Stop and return on any other error.
Stop at end of string.
Stop before an unreachable RET, to avoid creating unreachable control flow nodes.
Stop causes package signal to stop relaying incoming signals to c.
Stop does not close the channel, to prevent a read from the channel succeeding incorrectly.
Stop freeing of object if it has a finalizer.
Stop garbage collecting during reflect.call.
Stop if another nil check happens.
Stop if memory write.
Stop if value is lost.
Stop if we jump backward.
Stop if we see PC within jmpdefer to avoid that confusion.
Stop one level early for method with pointer receiver.
Stop one level early.
Stop only returns after all the writes for the trace have completed.
Stop prevents the Timer from firing.
Stop profiler on this thread so that it is safe to lock prof.
Stop run after a padded field.
Stop stops the current tracing, if any.
Stop the loop and return what we've got.
Stop the ticker to release associated resources.
Stop the walk, if symlink target is not absolute path, and return "." to the caller (just like unix does).
Stop the world so that we can collect the trace buffers from all p's below, and also to avoid races with traceEvent.
Stop the world, so that we can take a consistent snapshot of all goroutines at the beginning of the trace.
Stop turns off a ticker.
StopCPUProfile only returns after all the writes for the profile have completed.
StopCPUProfile stops the current CPU profile, if any.
StopTimer stops timing a test.
StopTrace only returns after all the reads for the trace have completed.
StopTrace stops tracing, if it was previously enabled.
Stopping the world involves removing the p associated with an m.
Stops execution of the current m that is locked to a g until the g is runnable again.
Stops execution of the current m until new work is available.
Stops the current m for stopTheWorld.
Storage for Succs, Preds, and Values
Storage for low-numbered values and blocks.
Storage for the first three args
Storage is allocated as necessary to allow the address to be taken.
Store SSAable PPARAMOUT variables back to stack locations.
Store at p the word which is used to encode that receiver at the start of the argument list.
Store bytes, if we don't get a reasonable improvement.
Store chains for different blocks overwrite each other, so the calculated store chain is good only for this block.
Store of an inconsistent type panics, as does Store(nil).
Store sets the value of the Value to x.
Store the name and type provided by the user....
StoreInt32 atomically stores val into *addr.
StoreInt64 atomically stores val into *addr.
StorePointer atomically stores val into *addr.
StoreUint32 atomically stores val into *addr.
StoreUint64 atomically stores val into *addr.
StoreUintptr atomically stores val into *addr.
Stores necessary for stack scan being eliminated as redundant by optimizer.
Stores the signal handlers registered before Go installed its own.
Storing a Go pointer into C memory by assigning a large value should fail.
Storing a Go pointer into C memory should fail.
Storing a Go pointer into C memory using a slice copy should fail.
Storing cookies under host is a safe stopgap.
Strange special case: MCR, MRC.
Strange special cases.
StrconvFunc returns name of Go string to OS string function for f.
StrconvType returns Go type name used for OS string for f.
StreamDep is a 31-bit stream identifier for the stream that this stream depends on.
StreamError is an error that only affects one stream within an HTTP/2 connection.
StreamID is the required Stream ID to initiate.
StreamID is which stream this frame is for.
StreamReader wraps a Stream into an io.Reader.
StreamWriter wraps a Stream into an io.Writer.
Strict defaults to true, enforcing the requirements of the XML specification.
Strict mode does not enforce the requirements of the XML name spaces TR.
Strictly speaking, the rebuild is only necessary if the modifications to p change its export metadata, but determining that is a bit tricky, so we rebuild always.
Strictly speaking, the remaining code below deals with IDNA (RFC 5890 and friends) and not Punycode (RFC 3492) per se.
Strictly speaking, there is no guarantee that seeing the error at completed:1 (at the end of the file) means we've seen all the errors from earlier in the file, but usually it does.
Strictly speaking, this is a format error.
Stride is the Pix stride (in bytes) between vertically adjacent pixels.
String comparison does not memorize the strings for later use, so it is safe.
String concatenation does not memorize the strings for later use, so it is safe.
String converts sid to a string format suitable for display, storage, or transmission.
String data is just bytes.
String defines a string flag with specified name, default value, and usage string.
String formats the address as a valid RFC 5322 address.
String formats x like x.Text('g', 10).
String is a ValueConverter that converts its input to a string.
String is a special case because of Go's String method convention.
String is a string variable, and satisfies the Var interface.
String is the method to format the flag's value, part of the flag.Value interface.
String keys can be updated to use a smaller backing store.
String of digits must end here - only fractional second is all digits.
String pretty-prints a typePath.
String provides a printable representation for the current set of flags.
String reassembles the URL into a valid URL string.
String returns a description of the source of this public suffix list.
String returns a descriptive name for the time zone information, corresponding to the argument to LoadLocation.
String returns a possibly shortened quoted form of the String value.
String returns a short, human-readable form of the value.
String returns a space-separated list of the variables represented by bits.
String returns a string in one of several forms:
String returns a string representation of a type.
String returns a string representation of p like "(3,4)".
String returns a string representation of r like "(3,4)-(6,5)".
String returns a string representation of the scope, for debugging.
String returns a string representation of the type.
String returns a string representing the duration in the form "72h3m0.5s".
String returns a valid JSON value for the variable.
String returns returns a decimal approximation of the Float value.
String returns the English name of the day ("Sunday", "Monday", ...).
String returns the English name of the month ("January", "February", ...).
String returns the Prefix as a string (for use as a map key).
String returns the contents of the unread portion of the buffer as a string.
String returns the current type representation.
String returns the decimal representation of z.
String returns the game board as a string.
String returns the hexadecimal form of m, with no punctuation.
String returns the literal text of the number.
String returns the serialization of the cookie for use in a Cookie header (if only Name and Value are set) or a Set-Cookie response header (if other fields are set).
String returns the source text used to compile the regular expression.
String returns the string corresponding to the token tok.
String returns the string form of the IP address ip.
String returns the string v's underlying value, as a string.
String table index of name.
String table offset of a needed shared library.
String table offset of a null-terminated library search path string.
String table offset of library path.
String table offset of shared object name.
String the user used to find this package.
String values encode as JSON strings coerced to valid UTF-8, replacing invalid bytes with the Unicode replacement rune.
String: the number of bytes in v.
StringBytePtr returns a pointer to a NUL-terminated array of bytes.
StringData returns a symbol (a *Sym wrapped in an interface) which is the data component of a global string constant containing s.
StringData returns a symbol pointing to the given string's contents.
StringHeader is the runtime representation of a string.
StringNode holds a string constant.
StringSlicePtr converts a slice of strings to a slice of pointers to NUL-terminated byte arrays.
StringTmpVarCode returns source code for string temp variable.
StringToSid converts a string-format security identifier sid into a valid, functional sid.
StringToUTF16 returns the UTF-16 encoding of the UTF-8 string s, with a terminating NUL added.
StringToUTF16Ptr returns pointer to the UTF-16 encoding of the UTF-8 string s, with a terminating NUL added.
StringVal returns the Go string value of x, which must be a String or an Unknown.
StringVar defines a string flag with specified name, default value, and usage string.
Stringer applies only to string formats.
Stringer is implemented by any value that has a String method, which defines the ``native'' format for that value.
Strings and arrays of bytes are supported with a special, efficient representation (see below).
Strings and slices of bytes are sent as an unsigned count followed by that many uninterpreted bytes of the value.
Strings and slices that don't escape and fit into tmpBuf are stack allocated, which defeats using AllocsPerRun to test other optimizations.
Strings are canonicalized similar to objects that may occur multiple times: If the string was exported already, it is represented by its index only.
Strings are encoded as an unsigned count followed by the raw bytes.
Strings for use with buffer.WriteString.
Strings must be UTF-8 encoded and may only contain Unicode code points U+0001 through U+00FF, due to limitations of the GZIP file format.
Strings of content from a trusted source.
Strings sorts a slice of strings in increasing order.
Strings with up to two nonzero bytes all have distinct hashes.
StringsAreSorted tests whether a slice of strings is sorted in increasing order.
Strip "go: exit " prefix.
Strip Escape characters bracketing escaped text segments instead of passing them through unchanged with the text.
Strip comments so their text won't defeat our heuristic.
Strip copyright comment if present.
Strip data- so that custom attribute heuristics below are widely applied.
Strip package name if we're in that package.
Strip standard suffixes to reveal size letter.
Strip the "Output:" or "Unordered output:" comment and adjust body end position.
Strip the bogus "http://" back off.
Strip the quotes, if present.
Strip trailing dot from fully qualified domain names.
Strip trailing slashes.
Strip type conversions.
StripPrefix handles a request for a path that doesn't begin with prefix by replying with an HTTP 404 not found error.
StripPrefix returns a handler that serves HTTP requests by removing the given prefix from the request URL's Path and invoking the handler h.
Stripped down Atom feed data structures.
Strobes when call is complete.
Struct conversion: return Go and (gc) C syntax for type.
Struct field access with large offset.
Struct of four or fewer fields.
Struct tags Range loop variables Flag: -rangeloops Incorrect uses of range loop variables in closures.
Struct values are always true.
Struct values are deeply equal if their corresponding fields, both exported and unexported, are deeply equal.
Struct values encode as JSON objects.
Struct values were not legal in with - mere oversight.
Struct with 1 field of direct iface type can be direct.
Struct with Error method.
Struct with String method.
StructMakeOp returns the opcode to construct a struct with the given number of fields.
StructOf does not share the common lookupCache since we need to pin the memory associated with *structTypeFixedN.
StructOf does not support creating structs with UTF-8 field names or UTF-8 (embedded) type names.
StructOf returns the struct type containing fields.
StructType contains Type fields specific to struct types.
StructType returns t's extra struct-specific fields.
StructValue: (uint(fieldDelta) FieldValue)*
Structs are sent as a sequence of (field number, field value) pairs.
Structs encode and decode only exported fields.
Structs that include GobEncodable fields.
Structs with zero-length trailing fields are now padded by the Go compiler.
Structs, arrays and slices are also supported.
Structs, done below, were already handling recursion correctly so they assign the top-level id before those of the field.
Structure preservation requires values to associate with a consistent attribute.
Structure, union, or class type.
Structures contained in PtraceRegs on s390x (exported by post.go)
Stub implementation used for testing.
Stubs so tests can link correctly.
Sub panics with ErrNaN if x and y are infinities with equal signs.
Sub returns the duration t-u.
Sub returns the rectangle r translated by -p.
Sub returns the vector p-q.
Sub sets z to the difference x-y and returns z.
Sub sets z to the rounded difference x-y and returns z.
SubImage returns an image representing the portion of the image p visible through r.
SubexpNames returns the names of the parenthesized subexpressions in this Regexp.
Subject Alternate Name values
Subject Alternate Name values.
Subjects returns a list of the DER-encoded subjects of all of the certificates in the pool.
Submatch 0 is the match of the entire expression, submatch 1 the match of the first parenthesized subexpression, and so on.
Submatches are matches of parenthesized subexpressions (also known as capturing groups) within the regular expression, numbered from left to right in order of opening parenthesis.
Submit accept request.
Subprocesses started by os.Exec, or by the os/exec package, will inherit the modified signal mask.
Subsequent arguments are already leaked because they are operands to append.
Subsequent blocks, if any.
Subsequent calls on the same file will yield further FileInfos.
Subsequent calls to read succeed.
Subsequent checks of the constructed syntax tree restrict the language accepted by the compiler to proper Go.
Subsequent lines: Key: value.
Subsequent tests won't work correctly if we don't stop the overflow timer and kick the timer proc back into service.
Subspaces are aligned to a power of two so opcodes can be masked with AMask and used as compact array indices.
Substitute command if required.
Substitute definition for mangled type name.
Substitute environment variables.
Substitute the substitutes for .
Substitute those union types with byte arrays.
Substitution when subexpression isn't found
Subtest with a '/' in its name still allows for copy and pasted names to match.
Subtlety arises when a G may be tracebacked when *not* at a safe point.
Subtract TLS overheads to get the maximum payload size.
Subtract quantum from PC to account for post-line increment
Subtract the offset from the start of the main mapping if it ends up at a recognizable start address.
Succeed without timing out:
Succeeded, or out of options.
Success reports whether the program exited successfully, such as with exit status 0 on Unix.
Successfully set waitm to locked.
Successive approximation is when not all of the bits of a band of coefficients are transmitted in one pass.
Successive calls to Deadline return the same results.
Successive calls to Done return the same value.
Successive calls to Value with the same key returns the same result.
Successive calls to the Scan method will step through the 'tokens' of a file, skipping the bytes between the tokens.
Successive lines are recorded using increasing line numbers, until the next directive.
Such a file is usually paired with another file implementing the default functionality for other systems, which in this case would carry the constraint:
Such a large stack we need to protect against wraparound if SP is close to zero.
Such a large stack we need to protect against wraparound.
Such a list is an efficient way to transform a string with repeating elements into one with many small valued numbers, which is suitable for entropy encoding.
Such a message might indicate an attempt to perform request smuggling (Section 9.5) or response splitting (Section 9.4) and ought to be handled as an error.
Such a method must have one return value (of any type) or two return values, the second of which is an error.
Such a package will be recognized regardless of this flag setting (because it has source code) and will have BinaryOnly set to true in the returned Package.
Such a pattern expands to all package directories found in the GOPATH trees with names matching the patterns.
Such an f() could appear as the lone argument to a multi-arg function.
Such calls should be relatively infrequent, since writeIDATs uses a bufio.Writer.
Such cases are documented in the description of each method.
Such chains only exist while named types are incomplete.
Such characters include letters, marks, numbers, punctuation, symbols, and spaces, from categories L, M, N, P, S, Zs.
Such characters include letters, marks, numbers, punctuation, symbols, and spaces, from categories L, M, N, P, S, and Zs.
Such characters include letters, marks, numbers, punctuation, symbols, and the ASCII space character, from categories L, M, N, P, S and the ASCII space character.
Such edits are not applied immediately in case a template set executes a given template in different escaping contexts.
Such faults are typically caused by bugs such as runtime memory corruption, so the default response is to crash the program.
Such functions are identified in the Go input file by doc comments containing the line //export ExpName
Such objects may be linker-allocated, not heap-allocated.
Such partially-initialized Requests come from NPN protocol handlers.
Such pathologies are rare, however, and the package does not protect against them.
Such pattern is used in net/http and net/rpc.
Such shuffling cuts the amount of spill sinking by more than half (in make.bash)
Such statements may be parenthesized."
Such tags are recorded with the unknown prefix as the name space URL.
Such values are called addressable.
Such values are preceded by a zero, making them have the memory layout of a struct field (although with an illegal field number).
Such wakeups happen on buffered channels and sync.Mutex, but are generally not interesting for end user.
SudoG's are referenced from their owning thread so they can't be collected.
Suffixes encode the bit width of various instructions.
Suffixes for all punctuators from section 7.7 of the language spec that are prefix operators not handled above.
Suffixes for all punctuators from section 7.7 of the language spec that only end binary operators not handled above.
Suffixes in their final positions and unambiguously sorted in h-order are in a sorted group.
Sum all the samples until the next instruction (to account for samples attributed to the middle of an instruction).
Sum appends the current hash to b and returns the resulting slice.
Sum offsets for dots until we reach base.
Sum returns the MD5 checksum of the data.
Sum returns the SHA1 checksum of the data.
Sum224 returns the SHA224 checksum of the data.
Sum256 returns the SHA256 checksum of the data.
Sum384 returns the SHA384 checksum of the data.
Sum512 returns the SHA512 checksum of the data.
Summing Bytes is meaningless in aggregate if not all subbenchmarks set it.
Sundanese is the set of Unicode characters in script Sundanese.
Superfluous zeros in the length should be an error.
Supplementary group IDs.
Support for 5-byte or longer UTF-8 would go here, but since we don't have that, we'll just return bad.
Support for memory sanitizer.
Support for test coverage.
Support for testing against external disassembler program.
Support gfortran out of the box and let others pass the correct link options via CGO_LDFLAGS
Supported compilers are "gc", and "gccgo".
Supported key types include RSA, DSA, and ECDSA.
Supported only on linux/amd64, and only with Clang/LLVM as the host C compiler.
Supported only on linux/amd64, freebsd/amd64, darwin/amd64 and windows/amd64.
SupportedCurves lists the elliptic curves supported by the client.
SupportedPoints lists the point formats supported by the client.
Supports Current(), but not Lookup()/LookupId().
Surround timing information w/ enough context to allow comparisons.
Suspect this is not nil for indirect calls.
Swap a and b so that b is the next number in the sequence.
Swap can't add 1, so it uses a different scheme.
Swap is part of sort.Interface.
Swap out old stack for new one
Swap pivot into middle
Swap swaps the elements with indexes i and j.
Swap what we guess is main to position 0.
SwapInt32 atomically stores new into *addr and returns the previous *addr value.
SwapInt64 atomically stores new into *addr and returns the previous *addr value.
SwapPointer atomically stores new into *addr and returns the previous *addr value.
SwapUint32 atomically stores new into *addr and returns the previous *addr value.
SwapUint64 atomically stores new into *addr and returns the previous *addr value.
SwapUintptr atomically stores new into *addr and returns the previous *addr value.
Sweep all spans eagerly.
Sweep can happen during GC on system goroutine.
Sweep frees or collects finalizers for blocks not marked in the mark phase.
Sweep the prog list to mark any used nodes.
Sweeping accesses the specials list w/o locks, so we have to synchronize with it.
Sweeping must be complete before marking commences, so sweep any unswept spans.
Sweeps and reclaims at least npage pages into heap.
Sweeps spans in list until reclaims at least npages into heap.
Swept spans are at the end of lists.
Switch cases ordered by popularity.
Switch to basic multiplication if numbers are odd or small.
Switch to heapsort if depth of 2*ceil(lg(n+1)) is reached.
Switch to systemstack merely to save nosplit stack space.
Syloti_Nagri is the set of Unicode characters in script Syloti_Nagri.
Sym is just a convenient type for saving shadowed Sym definitions, and only a subset of its fields are actually used.
Sym might have resolved to name in other top-level package, because of import dot.
Sym represents an object name.
SymByAddr returns the text, data, or bss symbol starting at the given address.
Symbol Binding - ELFNN_ST_BIND - st_info
Symbol also does not have NumberOfAuxSymbols.
Symbol is a code object
Symbol is a function.
Symbol is similar to COFFSymbol with Name field replaced by Go string.
Symbol looks up the program counters listed in the request, responding with a table mapping program counters to function names.
Symbol lookup based on name and indexed by version.
Symbol table entries.
Symbol type - ELFNN_ST_TYPE - st_info
Symbol type, value, Go type.
Symbol visibility - ELFNN_ST_VISIBILITY - st_other
Symbol/S is the set of Unicode symbol characters, category S.
Symbolize adds symbol and line number information to all locations in a profile.
Symbolize symbolizes profile p by parsing data returned by a symbolz handler.
Symbolize using binutils.
Symbols are not sorted yet, so it is possible that an Outer symbol has been changed to a relro Type before it reaches here.
Symbols are prefixed so their content doesn't get confused with the magic footer.
Symbols returns a list of symbols in the object file.
Symbols returns the symbol table for f.
Symbols to include on disassembly report.
Symbols with only file visibility (such as file-level static declarations in C) have a non-zero version distinguishing a symbol in one file from a symbol of the same name in another file
Symbols without prefix or suffix are jump labels.
Symlink creates newname as a symbolic link to oldname.
Syms non-nil, if vargens match then equal.
Sync commits the current contents of the file to stable storage.
Synchronization between sigsend and signal_recv is based on the sig.state variable.
Synchronize decrements with Wait.
Synchronize with channel ops and copy the part of the stack they may interact with.
Synchronize with scang.
Synchronous signals are signals triggered by errors in program execution: SIGBUS, SIGFPE, and SIGSEGV.
Synopsis returns a cleaned version of the first sentence in s.
Syntactically, composite literals are operands.
Syntax The regular expression syntax understood by this package when parsing with the Perl flag is as follows.
Syntax checking is done by the parser.
Syntax errors should not be reported (false arg to readImports).
Syntax-checking a boolean is annoying.
Synthesize a variable to store the inlined function's arguments when they come from a multiple return call.
Synthesize a variable to store the inlined function's results in.
Synthesize fake "directory" that only shows the named files, to make it look like this is a standard package or command directory.
Synthesize import declaration.
Synthesize main function.
Synthesized main packages sometimes override this.
Syriac is the set of Unicode characters in script Syriac.
Sys is bytes obtained from system.
Sys returns syscall.Win32FileAttributeData for file fs.
Sys returns system-dependent exit information about the process.
SysFault marks a (already sysAlloc'd) region to fault if accessed.
SysMap maps previously reserved address space for use.
SysProcAttr holds optional, operating system-specific attributes.
SysProcIDMap holds Container ID to Host ID mappings used for User Namespaces in Linux.
SysReserve reserves address space without allocating memory.
SysReserve treats the address we ask for, end, as a hint, not as an absolute requirement.
SysUnused makes the memory inaccessible and prevents its reuse
SysUnused notifies the operating system that the contents of the memory region are no longer needed and can be reused for other purposes.
SysUsage returns system-dependent resource usage information about the exited process.
SysUsed notifies the operating system that the contents of the memory region are needed again.
Syscall determines which SyscallX function to use for function f.
Syscall tests split stack between Entersyscall and Exitsyscall under race detector.
Syscall tracing: At the start of a syscall we emit traceGoSysCall to capture the stack trace.
SyscallArgList returns source code fragments representing p parameter in syscall.
SyscallError records an error from a specific system call.
SyscallParamCount determines which version of Syscall/Syscall6/Syscall9/...
SyscallParamList returns source code for SyscallX parameters for function f.
Sysmon and stopTheWorld can declare syscalls running on remote Ps as blocked, to handle this we temporary employ the P.
Sysmon and stopTheWorld can stop Ps blocked in syscalls, to handle this we temporary employ the P.
System call interface forces us to know whether name is a file or directory.
System physical page size
System specify target computer to search for.
System specify target computer to search.
System-dependent status info.
SystemCertPool returns a copy of the system cert pool.
SystemRootsError results when we fail to load the system root certificates.
SystemTime returns the system CPU time of the exited process and its children.
Systems that allow direct TLS access are handled in prefixof above and should not be listed here.
Systems that require the initial-exec model, where you load the TLS base into a register and then index from that register, do not reach this code and should not be listed.
T constants counting from a blank constant.
T constants counting from unexported constants.
T has lots of interesting pieces to use to test execution.
T is a structure with padding.
T is a type passed to Test functions to manage test state and support formatted test logs.
T is an interface type and x implements T
T0.tmpl is a plain template file that just invokes T1.
T0.tmpl is the first name matched, so it becomes the starting template, the value returned by ParseGlob.
T1 has no embedded (level 1) M method due to conflict.
T1.tmpl defines a template, T1 that invokes T2.
T1.tmpl is a plain template file that just invokes T2.
T2 has only M as top-level method.
T2 must not show methods of local T1
T2.M should appear as method of T2.
T2.tmpl defines a template T2.
T3 has only M as top-level method.
T3.M should appear as method of T3.
T4.M should appear as method of T5 only if AllMethods is set.
T61String parseT61String parses a ASN.1 T61String (8-bit clean string) from the given byte slice and returns it.
T: temporary file (not backed up)
TB is the interface common to T and B.
TBSCertificateList represents the ASN.1 structure of the same name.
TCP address to listen on, ":http" if empty
TCP socket options for plan9
TCPAddr represents the address of a TCP end point.
TCPConn is an implementation of the Conn interface for TCP network connections.
TCPListener is a TCP network listener.
TDDDFIELD indicates wrapped ...
TFIELD in arg struct ONAME closure param with PPARAMREF
TG1 should be second.
THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR IMPLIED WARRANTY.
TLS "var" in initial exec mode: will become a memory address (chosen by the program linker) that the dynamic linker will fill with the offset from the thread local base.
TLS "var" in local exec mode: will become a constant offset from thread local base that is ultimately chosen by the program linker.
TLS - initial exec model (for shared libraries loaded at program startup)
TLS - local exec model (for executables)
TLS 1.0 is the minimum version supported as a client.
TLS CertificateStatusType (RFC 3546)
TLS allows HTTP servers and other software to record information about the TLS connection on which the request was received.
TLS always starts with a client to server flow.
TLS compression types.
TLS contains information about the TLS connection on which the response was received.
TLS extension numbers
TLS handshake is complete
TLS handshake message types.
TLS is the optional TLS configuration, populated with a new config after TLS is started.
TLS low level connection and record layer
TLS reference tests run a connection against a reference implementation (OpenSSL) of TLS and record the bytes of the resulting connection.
TLS renegotiation is the act of performing subsequent handshakes on a connection after the first.
TLS signaling cipher suite values
TLS version used by the connection (e.g. VersionTLS12)
TLSClientConfig specifies the TLS configuration to use with tls.Client.
TLSConnectionState returns the client's TLS connection state.
TLSHandshakeTimeout specifies the maximum amount of time waiting to wait for a TLS handshake.
TLSNextProto below depends on it for knowing the connection state.
TLSNextProto optionally specifies a function to take over ownership of the provided TLS connection when an NPN protocol upgrade has occurred.
TLSNextProto specifies how the Transport switches to an alternate protocol (such as HTTP/2) after a TLS NPN/ALPN protocol negotiation.
TLS_FALLBACK_SCSV isn't a standard cipher suite but an indicator that the client is doing version fallback.
TODO Allow R0 and R1, but be careful with a 0 return TODO Allow R9.
TODO EncodeToken writes the given JSON token to the stream.
TODO Use an affinity graph to mark two values which should use the same register.
TODO category: tooLarge
TODO cgo -dynimport don't use this for windows PE, so just return.
TODO conversions are treated as if they may have side effects
TODO determine a better range for BadExpr below
TODO do them here (or earlier), so escape analysis can avoid more heapmoves.
TODO go:nowritebarrier
TODO inlining produces expressions with ninits.
TODO investigate why this is necessary.
TODO is recognized by static analysis tools that determine whether Contexts are propagated correctly in a program.
TODO maybe only if FmtShort, same below
TODO not all calls are equal, names give useful clues.
TODO not sure if this is best done in wide precision or narrow Double-rounding might be an issue.
TODO return error if found .cormeta load string table
TODO returns a non-nil, empty Context.
TODO this is not executed because the front-end substitutes a runtime call.
TODO(0intro): Determine why Plan 9 is leaking file descriptors.
TODO(adg): a more sophisticated test suite
TODO(adg): support zip file comments Writer implements a zip file writer.
TODO(adg,bradfitz): find a way to unify the DoS-prevention strategy here with that of the http package's ParseForm.
TODO(adg,rsc): check that this .go file is actually in "package main", and therefore capable of building to an executable file.
TODO(adonovan): specialize common degenerate cases: 1.0, integers.
TODO(agl): These will only work on 64-bit platforms.
TODO(agl): don't ignore the path length constraint.
TODO(agl): need to cope with values that spread across lines.
TODO(agl): remove this hack once their reissued root is sufficiently widespread.
TODO(agl): this is ok, but it would be nice if the chain building didn't visit the same SPKI twice.
TODO(agl): we don't actually need to store the q value.
TODO(aram): Figure out why ReadMsgUnix is returning empty message.
TODO(aram): Once we remove all instances of C calling sysvicallN, make sysvicallN return errors and replace the body of the following functions with calls to sysvicallN.
TODO(aram): This fails on Solaris because libc opens its own files, as it sees fit.
TODO(aram): add support for STXP
TODO(aram): also logical after we have bimm.
TODO(aram): explain difference from C_VCONADDR The GOT slot for a symbol in -dynlink mode.
TODO(aram): make this panic once we stop calling fcntl(2) in net using it.
TODO(aram): remove hack after I fix _nsec in the pc64 kernel.
TODO(aram): remove these before Go 1.3.
TODO(aram): s/AUTO/INDIR/
TODO(austin) Handle smaller moves.
TODO(austin) Maybe make a map
TODO(austin) Revisit when duffcopy is implemented
TODO(austin): ABI v1 is different
TODO(austin): ABI v1 uses /usr/lib/ld.so.1
TODO(austin): Add self-move test like in 6g (but be careful of truncation moves)
TODO(austin): As of this writing, we always pass true for stw.
TODO(austin): ELF ABI v1 not supported yet
TODO(austin): The rest of this comment is woefully out of date and needs to be rewritten.
TODO(austin): This P isn't going to run anything else for a while, so kick everything out of its run queue.
TODO(austin): This is a bit ridiculous.
TODO(austin): Translate our relocations to ELF
TODO(austin): We could be more aggressive and detect pointers to unallocated objects in allocated spans.
TODO(austin): We could fast path this and basically eliminate contention on c.fractionalMarkWorkersNeeded by precomputing the minimum time at which it's worth next scheduling the fractional worker.
TODO(austin): next_gc is based on heap_reachable, not heap_marked, which means the actual growth ratio technically isn't comparable to the trigger ratio.
TODO(avdva) - make these values platform-specific
TODO(bradfitz): Fix the http2 side of golang.org/issue/15366 once the http1 part is submitted.
TODO(bradfitz): We could be more efficient here and either provide a method to take an existing Stmt (created on perhaps a different Conn), and re-create it on this Conn if necessary.
TODO(bradfitz): add a new test that only corrupts one of these values, and verify that that's also an error.
TODO(bradfitz): ask driver, if supported, for its default preference
TODO(bradfitz): bunch more map types of all different key and value types.
TODO(bradfitz): deal with comma-separated or multiple-valued list of If-None-match values.
TODO(bradfitz): docs of some sort, once we figure out how we're changing headers of files
TODO(bradfitz): finish ctx plumbing.
TODO(bradfitz): give drivers an optional hook to implement this in a more efficient or more reliable way, if they have one.
TODO(bradfitz): move common stuff here.
TODO(bradfitz): move this to textproto.MimeHeader.Write(w), have it sort and clean, like http.Header.Write(w) does.
TODO(bradfitz): non-GET/HEAD requests require more work: sending a different status code on matches, and also can't use weak cache validators (those with a "W/ prefix).
TODO(bradfitz): optimize this.
TODO(bradfitz): push down context
TODO(bradfitz): push down ctx, or at least its deadline to start
TODO(bradfitz): rename this function.
TODO(bradfitz): short-circuit some of the buffering when the initial header contains both a Content-Type and Content-Length.
TODO(bradfitz): short-term hack.
TODO(bradfitz): switch to atomic.Value for this map instead of RWMutex
TODO(bradfitz): use io.WriteString with slices of s, avoiding allocation.
TODO(bradfitz,agl): slightly suspicious that we're throwing away r.Read's err here.
TODO(brainman): add Load function, as a replacement for NewFile, that does not call removeAuxSymbols (for performance) NewFile creates a new File for accessing a PE binary in an underlying reader.
TODO(brainman): copy all IMAGE_REL_* consts from ldpe.go here _Reloc represents a PE COFF relocation.
TODO(brainman): decide if start parameter should be int instead of uint32 String extracts string from COFF string table st at offset start.
TODO(brainman): do not know where to get gid and dir fields
TODO(brainman): do not know why it hangs.
TODO(brainman): do not know why this fails
TODO(brainman): document ImportDirectory once we decide what to do with it.
TODO(brainman): file.Chdir() is not implemented on windows.
TODO(brainman): fix all needed for net
TODO(brainman): fix all needed for os
TODO(brainman): fix it once we know how.
TODO(brainman): implement SockaddrUnix.sockaddr()
TODO(brainman): maybe do something else, but panic.
TODO(brainman): should not need those
TODO(brainman): this needs to be rewritten ds.Data() return contets of .idata section.
TODO(bryanpkc): This is imprecise.
TODO(cespare): Unify with onePassTests and rationalize one-pass test cases.
TODO(cmang): Add tests for SVN and BZR.
TODO(cnicolaou): https://golang.org/issue/2603 leads to leaked file descriptors in this test when it's run from a builder.
TODO(coopernurse): add type-specific converter
TODO(crawshaw): as these structTypeFixedN and funcTypeFixedN structs have no methods, they could be defined at runtime using the StructOf function.
TODO(crawshaw): improve precision of match by working out how to check the method name.
TODO(crawshaw): move this into x_cgo_init, it will not run until runtime has finished loading, which may be after its use.
TODO(crawshaw): reenable on android and iOS golang.org/issue/8345
TODO(cw,rsc): consider using readv if we know the family type to avoid the header trim/copy
TODO(dfc) Add support for the remaining integer types
TODO(dfc) append cap-len at once, rather than one byte at a time.
TODO(dfc) implement this in asm.
TODO(dfc) outBuf duplicates bio.Writer
TODO(dfc) remove this limitation after precise gc.
TODO(dfc) reverse this logic to return false on sunstitution failure.
TODO(dfc) reverse this logic, copysub should return false on failure
TODO(dfc) should n and oobn be set to 0
TODO(dfc): constants that should be in zsysnum_linux_arm64.go, remove these when the deprecated syscalls that the syscall package relies on are removed.
TODO(dfc): https://golang.org/issue/12108 If DUFFZERO is used inside a tail call (see genwrapper) it will overwrite the link register.
TODO(dsnet): This should pass, but currently fails.
TODO(dsymonds): - catch more errors (no first header, etc.)
TODO(dsymonds): - pax extensions
TODO(dsymonds): Handle domain-literal
TODO(dvyukov): restore stacks for EvGoStart events.
TODO(dvyukov): test that all EvGoStart events has non-nil Link.
TODO(dvyukov): these stats are incorrect as we don't subtract stack usage from heap.
TODO(dvyukov,rlh): Rethink when collector can move allocated objects.
TODO(eds): This blocks until the handler reads from the pipe.
TODO(gri) Add tests that check correctness in the presence of aliasing.
TODO(gri) Along the same lines, enforce some limit to shift magnitudes to avoid "infinitely" long running conversions (until we run out of space).
TODO(gri) Consider also using a method set cache for the lifetime of checker once we rely on MethodSet lookup instead of individual lookup.
TODO(gri) Consider eliminating the IsVoid predicate.
TODO(gri) Consider marking methods signatures as incomplete, for better error messages.
TODO(gri) Consider sorting all types by dependencies here, and in the process check _and_ report type cycles.
TODO(gri) Consider using method sets here.
TODO(gri) Do this more efficiently.
TODO(gri) Document factory, accessor methods, and fields.
TODO(gri) For nested breakable statements, the current implementation of hasBreak will traverse the same subtree repeatedly, once for each label.
TODO(gri) If we don't have an exported function body, the parameter names are irrelevant for the compiler (though they may be of use for other tools).
TODO(gri) In inlined functions, constants are used directly so they should never occur as re-exported objects.
TODO(gri) Method set computation should probably always compute both, the value and the pointer receiver method set and represent them in a single structure.
TODO(gri) Optimization: Probably worthwhile collecting long runs of constants and export them "in bulk" (saving tags and types, and making import faster).
TODO(gri) Optimize this for the common case.
TODO(gri) Provide scopes with a name or other mechanism so that objects can use that information for better printing.
TODO(gri) Remove once tests consider +build tags (issue 10370).
TODO(gri) Remove this code if it cannot be reached.
TODO(gri) Remove this function once we switched to new export format by default (and update the comment and want list in TestImportTestdata).
TODO(gri) Remove this function once we switched to new export format by default.
TODO(gri) Remove use of addWW_g here and then we can remove addWW_g and subWW_g.
TODO(gri) Should check if they are sorted already.
TODO(gri) Should rename itoa to utoa (there's no sign).
TODO(gri) Sloppy code - clean up.
TODO(gri) Supply function/method package rather than encoding the package for each parameter repeatedly.
TODO(gri) The functions operand.assignableTo, checker.convertUntyped, checker.representable, and checker.assignment are overlapping in functionality.
TODO(gri) The list of embedded types is only sorted for now to produce the same Interface as NewInterface.
TODO(gri) The list of explicit methods is only sorted for now to produce the same Interface as NewInterface.
TODO(gri) The named type consolidation and seen maps below must be indexed by unique keys for a given type.
TODO(gri) The rest of this loop body is identical with the loop body above.
TODO(gri) This can only happen if exportInlined is enabled (default), and during phase 2 of object export.
TODO(gri) This is compiler-specific (escape info).
TODO(gri) This is compiler-specific.
TODO(gri) This is not correct if the underlying type is unknown yet.
TODO(gri) Using derefStructPtr may result in methods being found that don't actually exist.
TODO(gri) When we import a package, we create a new local package object.
TODO(gri) add larger products
TODO(gri) add more test cases
TODO(gri) add more tests
TODO(gri) add tests to check ImplicitObj callbacks
TODO(gri) allMethods is sorted - can do this more efficiently
TODO(gri) avoid declared but not used error here
TODO(gri) better factoring of error handling (invalid ASTs)
TODO(gri) check that golden is idempotent check(t, golden, golden, e.mode)
TODO(gri) consider doing this always.
TODO(gri) determine a good/better value here
TODO(gri) determine if there's a better solution rather than providing this function
TODO(gri) disable and remove once there is only one export format again
TODO(gri) eventually we must declare variables for type switch statements (type switch statements are not yet exported)
TODO(gri) expand this test framework
TODO(gri) find a better solution instead of providing this function
TODO(gri) having a combined add-and-shift primitive could make this code significantly faster
TODO(gri) make the test vary these precisions
TODO(gri) mulAddVWW and divWVW are symmetric operations but their signature is not symmetric.
TODO(gri) need tests for actual large Floats
TODO(gri) no need to clear if we allocated a new u D1.
TODO(gri) pass srcDir
TODO(gri) provide better error messages depending on context
TODO(gri) re-examine reexportdeplist: Because we can trivially export types in-place, we don't need to collect types inside function bodies in the exportlist.
TODO(gri) register new position
TODO(gri) remove eventually (issue 15323)
TODO(gri) remove extra pkg directory eventually
TODO(gri) remove once we switched to binary export format
TODO(gri) replace this with a table, generated at build time.
TODO(gri) replace this with something closer to fieldName
TODO(gri) replace w/ t*10 once compiler produces better code
TODO(gri) should be the same as for /
TODO(gri) should provide actual type where the conflict happens
TODO(gri) shouldn't create a new one each time
TODO(gri) simplify once textual export format has gone
TODO(gri) split into expr and stmt
TODO(gri) strconv/ftoa.do describes a shortcut in some cases.
TODO(gri) test basic rounding behavior
TODO(gri) test how precision is set for zero value results
TODO(gri) these should not be exported in the first place
TODO(gri) try to simplify the logic below
TODO(gri): Expand this filtering to other entities (const, type, vars) if multiple declarations are common.
TODO(gri): Investigate if providing a closure to Walk leads to simpler use (and may help eliminate Inspect in turn).
TODO(gri): Recognize "Type.Method" as a name.
TODO(gri): Remove this when compilers have caught up.
TODO(gri): This file and the file src/cmd/gofmt/internal.go are the same (but for this comment and the package name).
TODO(gri): This file and the file src/go/format/internal.go are the same (but for this comment and the package name).
TODO(gri): add tests for Filter.
TODO(gri): exp/ssa/interp constant folding is incorrect.
TODO(gri): function-local named types should be displayed differently from named types at package level to avoid ambiguity.
TODO(gri): store interface scope in AST
TODO(gri): store p.imports in AST
TODO(gri): store struct scope in AST
TODO(gri): uncomment if we accept issue 8189.
TODO(hanwen): if (dst, a, b) have common alignment we could still try fastXORBytes.
TODO(iant): Figure out how to catch this.
TODO(josharian): If Type ever moves to a shared internal package, remove this silly wrapper.
TODO(josharian): combine this with its caller and simplify
TODO(jsing): Determine why DragonFly is leaking file descriptors...
TODO(jsing): DragonFly has a "bug" (see issue 3349), which should be reported upstream.
TODO(jsing): Figure out why sendmsg is returning EINVAL.
TODO(jsing): For some reason DragonFly seems to return memory at a different address than we requested, even when there should be no reason for it to do so.
TODO(jsing): Make these available to both crypto/x509 and crypto/tls.
TODO(jsing): Reenable once openbsd/arm has external linking support.
TODO(jsing): This currently fails on NetBSD due to the cloned file descriptors that result from opening /dev/urandom.
TODO(kaib): literal optimizations make constant the right side (it usually is anyway).
TODO(kaib): make sure the conditional branches work on all edge cases
TODO(kaib): this can be done with 4 regs and does not need 6
TODO(kaib): we almost always require a register dest anyway, this can probably be removed.
TODO(khr): We should really do this like allocReg does it, spilling the value with the most distant next use.
TODO(khr): build config just once at the start of the compiler binary
TODO(khr): full 32-bit support
TODO(khr): if we have a moving garbage collector, we'll need to change this function.
TODO(khr): just return 2 values from this function, now that it is in Go.
TODO(khr): print source location also
TODO(khr): schedule smarter.
TODO(khr): should this function take name, type, etc.
TODO(lvd) find out where the PAUTO/OLITERAL nodes come from.
TODO(marvin): Fix Node.EType type union.
TODO(matloob): Allow values and predecessors to be in different orders if the CFG are otherwise equivalent.
TODO(matloob): Aux values may be *gc.Sym pointers in the near future.
TODO(matloob): Choose better names for Fun, Bloc, Goto, etc.
TODO(matloob): Make sure types are canonical and can be compared for equality.
TODO(matloob): Write a parser for the Func disassembly.
TODO(matloob): choose a better name.
TODO(mattn): SockaddrGen is union of sockaddr/sockaddr_in/sockaddr_in6_old.
TODO(mattn): test ProxyAuth
TODO(mdempsky): Find a nicer solution.
TODO(mdempsky): Find out why this is necessary and explain.
TODO(mdempsky): Fix Type rekinding.
TODO(mdempsky): Fix this clumsy API.
TODO(mdempsky): Replace this with a struct-valued switch statement once golang.org/issue/15164 is fixed or found to not impair cmd/link performance.
TODO(mikio): Implement this like other platforms.
TODO(minux) Handle smaller moves.
TODO(minux): FP checks like in os_linux_arm.go.
TODO(minux): add morestack short-cuts with small fixed frame-size.
TODO(minux): correctly handle __i686.get_pc_thunk.bx without set dupok generally.
TODO(mkrautz): use the lChainIndex and lElementIndex fields of the CertChainPolicyStatus to provide proper context, instead using c.
TODO(mundaym): 32-bit load multiple is currently not supported as it requires sign/zero extension.
TODO(mundaym): Hacker's Delight 2nd ed.
TODO(mundaym): add R_390_TLS_LOAD relocation here not strictly required but might allow the linker to optimize
TODO(mundaym): all DBL style relocations should be signalled using the variant - see issue 14218.
TODO(mundaym): allow this by adding a dummy reference to the Node.
TODO(mundaym): currently this excludes REGZER0, but not other special registers.
TODO(mundaym): load/store multiple aren't currently handled by copyu so this pass must be last.
TODO(mundaym): not sure if we need to exclude this.
TODO(mundaym): remove once variants can be serialized - see issue 14218.
TODO(mundaym): remove this special case - see issue 14218.
TODO(mundaym): the name implies this should check for TYPE_ADDR with a base register REGSP.
TODO(mwhudson): It would make sense to do this more widely, but it makes the system linker segfault on darwin.
TODO(mwhudson): Needs to change for platforms that use different naming conventions...
TODO(mwhudson): actually think about this.
TODO(mwhudson): dump datamask etc from all objects data segment
TODO(mwhudson): it would obviously be better to change the register allocation to put the value in R12 already, but I don't know how to do that.
TODO(mwhudson): needs to loop to support shared libs
TODO(mwhudson): only implemented for ppc64x at present.
TODO(mwhudson): presumably the behaviour should actually be the same on both arm and 386.
TODO(mwhudson): remove -w when that gets fixed in linker.
TODO(nigeltao): Handle replacements that are wider than their names.
TODO(nigeltao): check that PDF uses LZW in the same way as GIF, modulo LSB/MSB packing order.
TODO(nigeltao): consider smarter algorithms.
TODO(nigeltao): fix up the doc comment style so that sentences start with the name of the type or function that they annotate.
TODO(nigeltao): handle the case where the dst and src overlap.
TODO(pcc): Read the archive directly instead of using "ar".
TODO(r): anonymous names
TODO(rsc):  There are enough names defined in this file that they're all prefixed with dns.
TODO(rsc): All the calls to newname are wrong for cross-package unexported fields.
TODO(rsc): Allow more pointers, for reflect.Value.
TODO(rsc): An alternative would be to allocate a dummy pthread per-thread variable using pthread_key_create.
TODO(rsc): Can also be TagEnumerationType but haven't seen that in the wild yet.
TODO(rsc): Can make this bigger if we move the text segment up higher in 8l for all GOOS.
TODO(rsc): Check opcode for arm
TODO(rsc): Check that this is actually generating the best code.
TODO(rsc): Clean temporaries more aggressively.
TODO(rsc): Compute max waste for any given size.
TODO(rsc): Could potentially handle many outstanding lookups faster.
TODO(rsc): Decide what the story is here.
TODO(rsc): Decide where this package should live.
TODO(rsc): Define meaning.
TODO(rsc): Delete Hsolaris from list.
TODO(rsc): Describe TEXT/GLOBL flag in from3
TODO(rsc): Describe prog.
TODO(rsc): Do this even for these architectures.
TODO(rsc): Do this even on arm.
TODO(rsc): Doesn't check behavior of close(c) when there are blocked senders/receivers.
TODO(rsc): Emit correct line number annotations.
TODO(rsc): Enable when appropriate.
TODO(rsc): Fix to reject this encoding.
TODO(rsc): Fix, since we are probably wrong, but we don't have vmptrld in the manual.
TODO(rsc): Give idiomatic Go names.
TODO(rsc): Goto and multilevel break/continue can jump over inserted VARKILL annotations.
TODO(rsc): I don't understand why the compiler thinks info escapes when passed to the three functions below.
TODO(rsc): If typedslicecopy becomes faster than calling typedmemmove repeatedly, consider using during func growslice.
TODO(rsc): Investigate the complexity of making the build more precise about when individual results are needed.
TODO(rsc): Investigate the cost of putting source file content into the build ID hash as a replacement for the use of mtimes.
TODO(rsc): Maybe record table of contents in r.p so that linker can avoid having code to parse archives too.
TODO(rsc): Maybe use prefix and the initial input to record the header line from the file, which would give the architecture and other version information.
TODO(rsc): Move tlsoffset back into the linker.
TODO(rsc): Need to skip non-Go object files.
TODO(rsc): Not all TYPE_ADDRs are constants.
TODO(rsc): Once we commit to CopyStackAlways, this doesn't need to be nosplit.
TODO(rsc): Perhaps add these to the tables and create bytecode instructions for them.
TODO(rsc): Perhaps componentgen should run before this.
TODO(rsc): Perhaps introduce a different heapBitsSpan type.
TODO(rsc): Perhaps this instruction class should be derived from the CSV.
TODO(rsc): REG_R0 and REG_F0 used to be (when register numbers started at 0) exregoffset and exfregoffset, which are unset entirely.
TODO(rsc): Reduce the number of symbol types in the object files.
TODO(rsc): Reenable optimization once order.go can handle it.
TODO(rsc): Remove GobEncoder, GobDecoder, MarshalJSON, UnmarshalJSON in Go 2.
TODO(rsc): Remove special case for arm here.
TODO(rsc): Remove special case here.
TODO(rsc): Remove the Hsolaris special case.
TODO(rsc): Remove this allocation by adding IndexString to package bytes.
TODO(rsc): Rewrite all nn(SP) references into name+(nn-8)(FP) so that go vet can check that they are correct.
TODO(rsc): Set up a test case on bitbucket for hg.
TODO(rsc): Share Go definitions with linkers directly.
TODO(rsc): Should at least pick off connection close.
TODO(rsc): Should not need the * in *RawMessage
TODO(rsc): Some day, do a better job with port allocation.
TODO(rsc): Step 4 is not implemented.
TODO(rsc): The Isfat is for consistency with componentgen and orderexpr.
TODO(rsc): The Isfat is for consistency with componentgen and walkexpr.
TODO(rsc): The code having to do with the heap bitmap needs very serious cleanup.
TODO(rsc): The file format is good for a first pass but needs work.
TODO(rsc): The interpretation of Type is not exposed by this package.
TODO(rsc): The moves back and forth to memory here are for truncating the value to 32 bits.
TODO(rsc): This is for testing.
TODO(rsc): This is undone by the selective clearing of width below, to match architectures that were not as aggressive in setting width during naddr.
TODO(rsc): This special case is for PINSRQ etc, CMPSD etc.
TODO(rsc): Use an ODCLFUNC node instead.
TODO(rsc): Use this code for x86-64 too.
TODO(rsc): We may be able to merge various of the memory operands since we don't care about, say, the distinction between m80dec and m80bcd.
TODO(rsc): Whatever invalidated the info should have done this call.
TODO(rsc): Write tests.
TODO(rsc): doesn't work on linux-amd64 or darwin-amd64 builders, nor on a Lenovo x200 (linux-amd64) laptop.
TODO(rsc): make sure Ldexp can handle boundary k
TODO(rsc): more work on 32-bit platforms
TODO(rsc): not sure why ppc64 needs this too.
TODO(rsc): null pointer accesses
TODO(rsc): require failure
TODO(rsc): yscond is wrong here.
TODO(rsc, khr): Delete - no longer possible.
TODO(rsc,gri): Replace with go/typechecker.
TODO(rsc,lvd): This behaves poorly in the presence of inlining.
TODO(rsilvera): Remove this when we remove support for legacy profiles.
TODO(rsilvera): consider normalizing the profiles based on the total samples collected.
TODO(sbinet): creating a name with a package path
TODO(shanemhansen): we might want to use PAX headers for subsecond time resolution, but for now let's just capture too long fields or non ascii characters
TODO(wathiede): switch on m.ColorModel() instead of type.
TODO:  If we have a nonempty interface and its itab field is nil, then this test is redundant and ifaceType should just branch directly to bFail.
TODO: - inline functions with ...
TODO: 16 is ARM-specific.
TODO: A type that implements Formatter may do what it wants, and vet will complain incorrectly.
TODO: AT_linkage_name, AT_MIPS_linkage_name.
TODO: Add javascript click handlers for blocks to outline that block across all phases
TODO: Add visual representation of f's CFG.
TODO: After Go 1, decide when to pass build.AllowBinary here.
TODO: Auto-generate some day.
TODO: Check in input, preserve in brchain.
TODO: Col is only called when defining a macro and all it cares about is increasing position to discover whether there is a blank before the parenthesis.
TODO: Consider removing the periodic controller update altogether.
TODO: Consistency in the encoding would be nice here.
TODO: Convert to Go when something actually uses the result.
TODO: Determine when the final cgen_ret can be omitted.
TODO: Do a better job yet.
TODO: Do something smarter.
TODO: Don't build a shared library, once SWIG emits the necessary pragmas for external linking.
TODO: Eliminate more nil checks.
TODO: Enable profiling interrupts.
TODO: Even though we only support "identity" and "chunked" encodings, the loop below is designed with foresight.
TODO: Fix mmap to return two values.
TODO: For now, simply ignore the field.
TODO: Handle Leq64, Geq64.
TODO: Handle fields that are anonymous structs by promoting the fields of the inner struct.
TODO: Handle types defined within a function.
TODO: Handle types defined within function.
TODO: If ss doesn't contain any OpPhis, are s0 and s1 dead code anyway.
TODO: If we ever have //go: comments in assembly, will need to keep them here.
TODO: If we get rid of errchk, re-enable this test on Plan 9 and Windows.
TODO: If we get rid of errchk, re-enable this test on Windows.
TODO: IsPrint is a local implementation of unicode.IsPrint, verified by the tests to give the same answer.
TODO: It doesn't matter if we set the checkmark, so maybe this case isn't needed any more.
TODO: It would be bad if part of the arena is reserved and part is not.
TODO: It would be nice if ExecError was more broken down, but the way ErrorContext embeds the template name makes the processing too clumsy.
TODO: Look up nelems from sizeclass and remove this field if it helps performance.
TODO: Loop on interrupt.
TODO: Make OpAddr use AuxInt as well as Aux.
TODO: Make this panic again once it stops happening routinely.
TODO: Maybe allow contents of a Value to live on the stack.
TODO: Maybe the constants are named wrong.
TODO: Nested simple blocks get unnecessary (but correct) counters
TODO: Note that this fails if nil is shadowed.
TODO: Once we've fully switched to SSA, make liblink leave our output alone.
TODO: Optimize on systems that can compare to zero easily.
TODO: Perhaps allow comparison between signed and unsigned integers.
TODO: Perhaps support symlinks, although they muck everything up.
TODO: Pick a better sub-sample of the Plan 9 palette.
TODO: Precedence when constructing string.
TODO: Really a boolean, but Linklookup wants a "version" integer.
TODO: Record enough information in new object files to allow stack checks here.
TODO: ReleaseTags (need to load default)
TODO: Remove code looking for the old symbols when we no longer care about 1.3.
TODO: Remove entirely.
TODO: Remove once Makefiles are forgotten.
TODO: Remove original instructions if they are never used.
TODO: Remove this restriction.
TODO: Rename bitScan.
TODO: Report inlined functions.
TODO: Rethink how we handle ARM register shifts to be less special.
TODO: Should have original compilation unit here, not unknownFormat.
TODO: Split attr and element name part filters so we can whitelist attributes.
TODO: Table-driven map insert.
TODO: Teach Cmp64 to generate boolean values and remove this.
TODO: The BSDs can do utimensat with SYS_UTIMENSAT but it isn't supported by darwin so this uses utimes instead
TODO: These are dregs left by Makefile-based builds.
TODO: These should be locals in testAtomic64, but we don't 8-byte align stack variables on 386.
TODO: This could be better once issue 6259 is fixed.
TODO: This file contains the special casing rules for Turkish and Azeri only.
TODO: This ignores shadowing.
TODO: This might be a good place to add prefetch code
TODO: This might be relaxed as in common browsers.
TODO: This one really only escapes its scope, but we don't distinguish yet.
TODO: This routine should do whatever is needed to make the Windows program abort/crash as it would if Go was not intercepting signals.
TODO: This still has atomic accesses left over from when it could race with GC accessing mark bits in the bitmap.
TODO: Unfortunate cases Non-ideal error message: Since we're looking for Lock methods, sync.Once's underlying sync.Mutex gets called out, but without any reference to the sync.Once.
TODO: Unify with linklinefmt somehow.
TODO: Using the Q forms here instead of the L forms seems unnecessary, and it makes the instructions longer.
TODO: Using the value ID as the class ignores the fact that value IDs get recycled and that some values are transmuted into other values.
TODO: We allocate a zeroed object only to overwrite it with actual data.
TODO: We can handle this unsafely.
TODO: We could do more by being unsafe.
TODO: We currently use the 2-byte instruction TESTB AX, (reg).
TODO: When the old backend is gone, reconsider this decision.
TODO: Would be nice if go/doc did this for us.
TODO: add method *Decoder.Reset(maxSize, emitFunc) to let callers re-use Decoders and their underlying buffers for garbage reasons.
TODO: adjust buffer writing sizes based on server config, frame size updates from peer, etc
TODO: also add this to x/net/http2.Configure Transport, behind a +build go1.7 build tag:
TODO: arch-specific flagalloc allocates the flag register among all the flag-generating instructions.
TODO: benchmark and try to find criteria for swapping between dominatorsSimple and dominatorsLT
TODO: better error message
TODO: capture logging during this pass, add it to the HTML
TODO: check for cycles in values TODO: check type
TODO: check if already the same.
TODO: check if nname already has an ntype
TODO: check it if we can figure out what it is.
TODO: clean up this duplication
TODO: closure args reach here.
TODO: configure the architecture
TODO: convince the compiler to issue rotl instructions after inlining.
TODO: could be clever, and use general constant builder
TODO: could do better allocation-wise here, but trailers are rare, so being lazy for now.
TODO: debugging - set flags to control verbosity of compiler, which phases to dump IR before/after, etc.
TODO: detect cycles before calling Marshal which loops infinitely on cyclic data.
TODO: detect defaults for len/cap also.
TODO: document how this works and why it is designed the way it is.
TODO: double check all gp.
TODO: emulate si_addr
TODO: error reporting detail
TODO: exit calculation is messed up for non-inner loops because of multilevel exits that are not part of the "exit" count.
TODO: figure that out explicitly so we don't need this loop.
TODO: fix test_main to avoid race and improve caching, also allowing to eliminate this Mutex.
TODO: fix when we can SSA arrays of length 1.
TODO: generate and print a mapping from nodes to values and blocks
TODO: generate debugging section in binary.
TODO: generate with runtime/mknacl.sh, allow override with IRT.
TODO: get rid of this field and just use parameter index instead
TODO: go/doc does not include typed constants in the constants list, which is what we want.
TODO: golang.org/issue/8206
TODO: handle 32 bit operations
TODO: handle errors better.
TODO: handle negative increment.
TODO: have the frontend give us branch prediction hints for OANDAND and OOROR nodes (if it ever has such info).
TODO: if a single value is in multiple registers, spill one of them before spilling a value in just a single register.
TODO: if the req.ContentLength is large, we allocate memory unnecessarily just to slice it off here.
TODO: if v is a phi, save desired register for phi inputs.
TODO: if val is ever spilled, we'd like to use the PPARAMOUT slot for spilling it.
TODO: implements short string optimization on non amd64 platforms and get rid of strings_amd64.go Index returns the index of the first instance of sep in s, or -1 if sep is not present in s.
TODO: impose length limit
TODO: improve this part No successor of the previously scheduled block works.
TODO: it would be safer to only do this if we verify that the types are the same.
TODO: jump across functions needs reloc
TODO: keep a cache of these, mark entry/exit in escwalk to avoid allocation Or perhaps never mind, since it is disabled unless printing is on.
TODO: keep the result of this function somewhere in the ODOT Node so we don't have to recompute it each time we need it.
TODO: labellist should become part of a "compilation state" for functions.
TODO: let getReadBuf be configurable, and use a less memory-pinning allocator in server.go to minimize memory pinned for many idle conns.
TODO: log err.Error() to the Server.ErrorLog, once it's possible for a handler to get at its Server via the ResponseWriter.
TODO: make hint an int, then none of this nonsense
TODO: make this h.allspans once mheap can be defined in Go h_spans is a lookup table to map virtual address page IDs to *mspan.
TODO: make this h.spans once mheap can be defined in Go
TODO: maybe skip this search if no trailers were declared in the headers.
TODO: maybe switch to RWMutex TODO: add support for sharing conns based on cert names (e.g. share conn for googleapis.com and appspot.com)
TODO: more aggressive
TODO: move Type to its own package, then we don't need to dance around import cycles.
TODO: move to a common support package.
TODO: move to unmapped section
TODO: need more entropy to better seed fastrand1.
TODO: need to reconcile this w/ needs of explanations.
TODO: need to test ipv6 netmask too, but netsh does not outputs it
TODO: never rewrite OPANIC to OCALLFUNC in the first place.
TODO: normalize quotes.
TODO: not implemented
TODO: only do this on 10.6 if we can detect 10.6 cheaply.
TODO: other unconditional operations
TODO: predecessors is a pain to maintain.
TODO: proper overflow check.
TODO: pushState with updated state and read it on page load, so that state can survive across reloads find all values with the same name
TODO: regspec for block control values, instead of using register set from the control op's output.
TODO: remove after SSA is done.
TODO: remove duplicate code
TODO: remove flag input from regspec.inputs.
TODO: remove this helper function once http2 can use build tags.
TODO: return an error if WriteHeader gets a return parameter For now just ignore the Content-Length.
TODO: reuse overflow buckets instead of using new ones, if there is no iterator using the old buckets.
TODO: reuse these slots.
TODO: save c as an offset from max.
TODO: scang blocks until gp's stack has been scanned, which may take a while for running goroutines.
TODO: schedule the spill at a point that dominates all restores.
TODO: select the .enabled field.
TODO: share slots among equivalent types.
TODO: should also check for assignments to struct fields inside methods that are on T instead of *T.
TODO: should probably base this on field alignment.
TODO: some kind of special file
TODO: spanOf and spanOfUnchecked are open-coded in a lot of places.
TODO: specify which of the caller and callee is responsible for IP addresses, for leading and trailing dots, for case sensitivity, and for IDN/Punycode.
TODO: split required rules and optimizing rules
TODO: test 5 pipelined requests with responses: 1) OK, 2) OK, Connection: Close and then verify that the final 2 responses get errors back.
TODO: test a function which calls back in another thread: QueueUserAPC() or CreateThread()
TODO: the above loop could make the deadcode pass take quadratic time
TODO: the old pass hides the details of PHEAP variables behind ONAME nodes.
TODO: these don't work properly.
TODO: this could be quadratic if lots of variables are live across lots of basic blocks.
TODO: this is actually a panic-synchronization test, not a WaitGroup test.
TODO: this parsing is somewhat lame and not exact.
TODO: this test fails, but it's just because fakeConn implements the optional Execer interface, so arguably this is the correct behavior.
TODO: top-level nils.
TODO: truncate 64-bit indexes on 32-bit pointer archs.
TODO: try to understand what's really going on.
TODO: unsupported encoding
TODO: update when package unicode captures more of the properties.
TODO: use println instead to print in the following template
TODO: use something more global.
TODO: use the context if there ever becomes a need.
TODO: use zero register on archs that support it.
TODO: when generating a constant result, use f.constVal to avoid introducing copies just to clean them up again.
TODO:(rlh) Use popcount intrinsic.
TOOD(iant): Remove this when gccgo does do escape analysis.
TP-relative offset, 32 bit
TP-relative offset, 64 bit
TP-relative offset, high 16 bits
TP-relative offset, low 16 bits
TXT Length field is less than actual length.
TXT Length field is more than actual length.
Tab- terminated cells in the next line start new columns.
Tab-terminated cells in contiguous lines constitute a column.
Table A.1 Resulting Ciphertext from the Variable Plaintext Known Answer Test
Table A.2 Resulting Ciphertext from the Variable Key Known Answer Test
Table A.3 Values To Be Used for the Permutation Operation Known Answer Test
Table A.4 Values To Be Used for the Substitution Table Known Answer Test
Table generation tests
Table is a 256-word table representing the polynomial for efficient processing.
Table of register prefix names.
Table represents a Go symbol table.
Table-driven decoding of x86 instructions.
Tables are regenerated each time we update the Unicode version.
Tables of category and script folding exceptions: code points that must be added when interpreting a particular category/script in a case-folding context.
Tag numbers which would overflow int32 are rejected.
Tag with integer argument
Tag with string argument
TagMatch selects tags for filtering
Tag_also_compatible_with Not really, but we don't actually care about this tag.
Tag_nodefaults has no argument
Tagalog is the set of Unicode characters in script Tagalog.
Tagbanwa is the set of Unicode characters in script Tagbanwa.
Tagging parseTagAndLength parses an ASN.1 tag and length pair from the given offset into a byte slice.
Tags must be letters, digits, underscores or dots.
Tags should be encoded in minimal form.
Tags stripped, entity not re-escaped.
Tags stripped, spaces escaped, entity not re-escaped.
Tai_Le is the set of Unicode characters in script Tai_Le.
Tai_Tham is the set of Unicode characters in script Tai_Tham.
Tai_Viet is the set of Unicode characters in script Tai_Viet.
Take a byte from the input byte slice.
Take a byte from the input string.
Take a safety margin due to rounding in frexp10Many, but we lose precision.
Take any number of digits, even more than asked for, because it is what the stdSecond case would do.
Take care with overflow in this calculation.
Take list of dead Gs with stacks.
Take the fast path if d.bytes.buf contains at least two bytes.
Take the item at the head of the queue.
Taken directly from the definition document for ELF64
Taken from http://www.iana.org/assignments/tls-parameters/tls-parameters.xml
Taken from math.Float64bits to avoid dependences into package math.
Taken from src/cmd/pprof/internal/profile/legacy_profile.go
Takes a slice of *BasicBlocks containing selectgo calls.
Takes a slice of *BasicBlocks.
Takes care to separate commands of the form 'top10' into two tokens: 'top' and '10'
Takes too long and does not trigger the race.
Takes too long, too easy to deadlock, etc.
Taking the address of a parenthesized composite literal is permitted.
Taking the address of a variable makes the liveness and optimization analyses lose track of where the variable's lifetime ends.
Taking the address of the first field of a named struct is the same as taking the address of the struct.
Takri is the set of Unicode characters in script Takri.
Tamil is the set of Unicode characters in script Tamil.
Tan returns the tangent of the radian argument x.
Tan returns the tangent of x.
Tanh returns the hyperbolic tangent of x.
Target of the goto substituted in place of a return.
Target triple (e.g. x86_64-unknown-linux-gnu).
Target variables for scanning into.
Taylor series expansion for cosh(2y) - cos(2x)
Tconv already contains all the necessary logic to generate a representation that completely describes the type, so using it here avoids duplicating that code.
Technically more is allowed, but this is only used for *name(SB).
Technically the rate is MemProfileRate not 2*MemProfileRate, but early versions of the C++ heap profiler reported 2*MemProfileRate, so that's what pprof has come to expect.
Technically this only needs write barriers for writes to stack slots, but we enable write barriers in general.
Technically, an empty tree is only valid for the HDIST tree and not the HCLEN and HLIT tree.
Technically, if the stack were to consist solely of return PCs we would need two thirds of the stack, but stealing that much breaks things and this doesn't happen in practice.
TeeReader returns a Reader that writes to w what it reads from r.
Tell all goroutines that they have been preempted and they should stop.
Tell all handlers to unblock and reply.
Tell gcc not to include flags in object files, which defeats the point of -fdebug-prefix-map above.
Tell gcc not to include the work directory in object files.
Tell liveness we're about to build a new slice
Tell msan that this entire span is no longer in use.
Tell msan that we wrote to the entire argument block.
Tell our parent that all the goroutines are executing.
Tell returns the current position in the line table.
Tell the goroutine running on processor P to stop.
Tell the symbolizer we are done.
Tell the test what directory we're running in, so it can write the profiles there.
Telugu is the set of Unicode characters in script Telugu.
TempDir creates a new temporary directory in the directory dir with a name beginning with prefix and returns the path of the new directory.
TempDir returns the default directory to use for temporary files.
TempFile creates a new temporary file in the directory dir with a name beginning with prefix, opens the file for reading and writing, and returns the resulting *os.File.
Template definitions must appear at the top level of the template, much like global variables in a Go program.
Template is a specialized Template from "text/template" that produces a safe HTML document fragment.
Template is the representation of a parsed template.
Template to test evaluation of templates.
Templates are executed by applying them to a data structure.
Templates returns a slice of defined templates associated with t.
Templates returns a slice of the templates associated with t, including t itself.
Templates that end without closing tags will trigger this error.
Templates that should not be used in an HTML context or that produce incomplete Fragments should not be executed directly.
Temporaries are okay, because we emit explicit VARKILL instructions marking the end of those temporaries' lifetimes.
Temporaries created during the statement are cleaned up using VARKILL instructions as possible.
Temporarily grow the stack to 10K.
Temporarily rewind the stack and trigger SIGSETXID
Temporary buffer (avoids repeated allocation).
Temporary buffer for zigzag int writing.
Temporary files are only used in external linking mode.
Temporary reports whether the DNS error is known to be temporary.
Temporary result variables.
Tentatively allocate equal time to each remaining address.
Terminal_Punctuation is the set of Unicode characters with property Terminal_Punctuation.
Terminate each value with a newline.
Terminate escaped mode.
Terminate in padding of sparse header
Terminate pending calls.
Terminate the current cell by adding it to the list of cells of the current line.
Termination function pointers.
Terrible but standard terminology.
Test 'for range' on arrays, slices, and maps.
Test -run flag go:generate echo oh yes my man go:generate echo no, no, a thousand times no
Test Bswap first because the other test relies on it working correctly (to implement bit reversal).
Test Cipher Decrypt against FIPS 197 examples.
Test Cipher Encrypt method against FIPS 197 examples.
Test HuffmanCompression
Test Implicit methods for embedded types and mixed pointer and non-pointer receivers.
Test Open method and seeking.
Test Perl quoted literals
Test PushFront, PushBack, PushFrontList, PushBackList with uninitialized List
Test UTF-8 in strings and character constants.
Test YearDay in several different scenarios and corner cases
Test a large write that requires multiple reads to satisfy.
Test a sequence of read/write pairs.
Test a single read/write pair.
Test a source file does not need a final newline.
Test a string, integer, and time based value.
Test a truly empty template.
Test a zip file with uncompressed size 0xFFFFFFFF.
Test absolute executable path.
Test address from 192.0.2.0/24 block, reserved by RFC 5737 for documentation.
Test all code paths for cmpstackvarlt.
Test all possible combinations of n blocks from the set s.
Test all the combinations.
Test all the different interface conversion runtime functions.
Test an indirection to a large field with methods.
Test arithmetic on complex numbers, including multiplication and division.
Test arrays and slices.
Test base-256 (binary) encoded values.
Test base-8 (octal) encoded values.
Test basic concurrency: the classic prime sieve.
Test basic encode/decode routines for signed integers
Test basic encode/decode routines for unsigned integers
Test basic operation of finalizers.
Test basic operations in a safe manner.
Test basic operations of slices and arrays.
Test basic operations on bool.
Test basic request (no accept-encoding)
Test behavior of the blank identifier (_).
Test broken pipes on Unix systems.
Test building libgo other than installing it.
Test case for BenchmarkScanPi.
Test case for any function which accepts and returns a byte slice.
Test case for any function which accepts and returns a single string.
Test case for https://golang.org/issue/692
Test case for https://golang.org/issue/700
Test case for issue 1402.
Test case for issue 1550: a type cannot implement an interface from another package with a private method, and type assertions should fail.
Test case for issue 3807.
Test case for issue 3870.
Test case for issue 3961.
Test case for issue 471.
Test case for issue 475.
Test case for issue 789.
Test case for issue 849.
Test case involving multiple acceptable length
Test case involving multiple acceptable lengths
Test case that gccgo failed to compile.
Test case that gccgo failed to link.
Test cases assume a lookup of the form a.f or x.f, where a stands for an addressable value, and x for a non-addressable value (even though a variable for ease of test case writing).
Test cases for conversion syntax.
Test cases for revised conversion rules.
Test cases for sort order of declarations.
Test cases that are expected to fail are marked by the prefix "ERROR".
Test cases that didn't fail in Go 1.0
Test cases where there's more than maxBadConnRetries bad connections in the pool (issue 8834)
Test cases with 1-byte old strings, 1-byte new strings.
Test cases with 1-byte old strings, variable length new strings.
Test cases with empty old strings.
Test channel operations that test for blocking.
Test character literal syntax.
Test client against server.
Test close on Read side during Read.
Test close(c), receive of closed channel.
Test closures in if conditions.
Test communication operations including select.
Test communication with multiple simultaneous goroutines.
Test compiler diagnosis of function missing return statements.
Test complex numbers,including fmt support.
Test composite literals.
Test composition, decomposition, and reflection on complex numbers.
Test compound objects
Test compound types made of complex numbers.
Test concurrency primitives: classical inefficient concurrent prime sieve.
Test concurrency primitives: power series.
Test concurrency primitives: prime sieve of Eratosthenes.
Test concurrent use of FileSet.Pos does not trigger a race in the FileSet position cache.
Test conversion from non-interface types to the empty interface.
Test converting a type defined in a different package to an interface defined in a third package, where the interface has a hidden method.
Test correct f.intbuf boundary checks.
Test correct f.intbuf overflow checks.
Test correct short declarations and redeclarations.
Test correctness of Offsetof with respect to embedded fields (issue 4909).
Test data structures for anonymous fields.
Test dead code elimination in ordinary switch statements
Test different URL formats and schemes
Test different calls to Cookies.
Test directories relative to temporary directory.
Test divide corner cases.
Test division of variables.
Test embedded fields of structs, including methods.
Test empty input and/or replacement, with pattern that does not match the empty string.
Test empty input and/or replacement, with pattern that matches the empty string.
Test equality and inequality operations.
Test error after Read.
Test error after ReadByte.
Test error after ReadSlice.
Test error after UnreadByte.
Test error message when EOF is encountered in the middle of a BOM.
Test escape analysis and liveness inferred for syscall.Syscall-like functions.
Test escape analysis for *struct function parameters.
Test escape analysis for arrays and some large things
Test escape analysis for closure arguments.
Test escape analysis for function parameters.
Test escape analysis for interface conversions.
Test escape analysis for maps.
Test escape analysis for slices.
Test escape analysis for struct function parameters.
Test escape analysis through ...
Test escape analysis when assigning to indirections.
Test escape analysis with respect to field assignments.
Test evaluation order in if condition.
Test evaluation order.
Test example from Type documentation.
Test file built with GCC 4.8.4 and as 2.24 using: gcc -Wa,--compress-debug-sections -g -c -o zdebug-test-gcc484-x86-64.obj hello.c
Test files that declare a package with the suffix "_test" will be compiled as a separate package, and then linked and run with the main test binary.
Test finalizers work for tiny (combined) allocations.
Test floating point numbers in maps.
Test floating-point comparison involving NaN.
Test floating-point literal syntax.
Test for 6g register move bug.
Test for 8g register move bug.
Test for bug where func var f used prototype's escape analysis results.
Test for certain specific entities in the imported data.
Test for correct heap-moving of escaped variables.
Test for golang.org/issue/5947
Test for golang.org/issue/7611
Test for infinity by comparing against maximum float.
Test for issue 12090: Was unreading at EOF, double-scanning a byte.
Test for issue 3022, not exposing a reader's error on a successful Peek.
Test for issue 8755 Ensure that if a proxy returns an error, it is exposed by RoundTrip
Test for loops of many forms.
Test for select: Issue 2075 A bug in select corrupts channel queues of failed cases if there are multiple waiters on those channels and the select is the last in the queue.
Test for the race detector, to verify ReadAt doesn't mutate any state.
Test for the race detector, to verify a Read that doesn't yield any bytes is okay to use from multiple goroutines.
Test from golang.org/issue/11893
Test function signatures.
Test functionality of IPv4 communication using AF_INET and IPv6 communication using AF_INET6 sockets.
Test functionality of IPv4 communication using AF_INET6 sockets.
Test functions and goroutines.
Test functions of many signatures.
Test general operation by solving a peg solitaire game.
Test general operation using a list implementation.
Test general operation using s-list.
Test go generate variable substitution.
Test goto and labels.
Test handling of size_t in the face of incorrect clang debug information.
Test handling of unexported fields that should be ignored.
Test heap sampling logic.
Test if errors from the underlying writer is passed upwards.
Test if statements in various forms.
Test if the writer produces the same output after reset.
Test if two runs produce identical results even when writing different sizes to the Writer.
Test ignoring fields via "-" tag
Test implicit and explicit conversions of constants.
Test implicit conversions in MapIndex and SetMapIndex.
Test indirection level computation in escape analysis.
Test initialization of package-level variables.
Test inputs to Rat.SetString.
Test instruction execution for decoding.
Test instruction execution for encoding.
Test integer division and modulus.
Test integer division by constants.
Test integer literal syntax.
Test integer modulus by contstants.
Test interface assignment.
Test interface comparisons using types hidden inside reflected-on structs.
Test interface methods with different return types are distinct.
Test interface values containing structures.
Test interfaces and methods.
Test interfaces on basic types.
Test internal print routines that are generated by the print builtin.
Test key expansion against FIPS 197 examples.
Test len constants and non-constants, https://golang.org/issue/3244.
Test line numbers in error messages.
Test literal syntax for basic types.
Test making channels of a zero-sized type.
Test map declarations of many types, including erroneous ones.
Test maps, almost exhaustively.
Test method expressions with arguments.
Test method invocation with pointer receivers and function-valued fields.
Test methods derived from embedded interface and *interface values.
Test methods derived from embedded interface values.
Test methods on slices.
Test multiple identical unnamed structs with methods.
Test nil marshals to nothing
Test non-idents in range variables
Test of basic recover functionality.
Test of benchmark has been skipped.
Test of recover during recursive panics.
Test of recover for run-time errors.
Test or benchmark has failed.
Test order of calls to builtin functions.
Test order of evaluation in tuple assignments.
Test outputting CDATA-wrapped text.
Test parsing an image attachment from gmail, which previously failed.
Test paths relative to temporary directory.
Test permission errors.
Test pointers and the .
Test range over strings.
Test read after/before writer close.
Test recovering from runtime errors.
Test recursive types.
Test reference to library symbol.
Test relative executable path.
Test reordering of assignments.
Test run-time behavior of 3-index slice expressions.
Test run-time error detection for interface values containing types that cannot be compared for equality.
Test rune constants, expressions and types.
Test runner for coverage test.
Test scoping of variables.
Test select when discarding a value.
Test semantics of pre-filled struct fields and pre-filled map fields.
Test short input/output.
Test simple arithmetic and assignment for complex numbers.
Test simple arithmetic conversion.
Test simple boolean and numeric constants.
Test simple for loop.
Test simple function literals.
Test simple functions.
Test simple methods of various types, with pointer and value receivers.
Test simple multi-argument multi-valued function.
Test simple operations on arrays.
Test simple type switches on basic types.
Test simple type switches, including chans, maps etc.
Test simulating a Turing machine, sort of.
Test simultaneous assignment.
Test slicing and re-slicing.
Test so much we cross a good number of block boundaries.
Test source file beginning with a byte order mark.
Test source files and strings containing NUL and invalid UTF-8.
Test stack growing in different contexts.
Test stack splitting code.
Test static interface conversion of interface value nil.
Test string literal syntax.
Test string operations including printing.
Test strings with only a few bits set
Test strings with repeats, like "abcdabcdabcdabcd..."
Test struct embedding
Test struct-valued variables (not pointers).
Test switch statements.
Test that -help invokes the usage message and returns ErrHelp.
Test that -static works when not using cgo.
Test that C can pass in a Go string from a string constant.
Test that C code can return a value if it calls a Go function that causes a stack copy.
Test that Chdir+Getwd is program-wide.
Test that EOF behavior is the same regardless of whether argument to CopyN has ReadFrom.
Test that FormFile errors if called after MultipartReader on the same request.
Test that FormFile invokes ParseMultipartForm.
Test that FormFile returns an error if the named file is missing.
Test that FormValue and FormFile automatically invoke ParseMultipartForm and return the right values.
Test that FormValue invokes ParseMultipartForm.
Test that Ignore cancels registration for listed signals on all channels.
Test that LookupHost and LookupIP, which normally expect host names, work with IP addresses.
Test that MemStats has sane values.
Test that MultiReader copies the input slice and is insulated from future modification.
Test that MultiWriter copies the input slice and is insulated from future modification.
Test that MultipartReader errors if called after ParseMultipartForm on the same request.
Test that NewTicker panics when given a duration less than zero.
Test that P, Q, and R all point to byte.
Test that ParseMultipartForm errors if called after MultipartReader on the same request.
Test that Pool does not hold pointers to previously cached resources.
Test that Pool releases resources on GC.
Test that RepoRootForImportPath creates the correct RepoRoot for a given importPath.
Test that Request.Cancel is propagated between requests (Issue 14053)
Test that Reset cancels registration for listed signals on all channels.
Test that Reset returns to the first line.
Test that SIGCONT works (issue 8953).
Test that SIGPROF received in C code does not crash the process looking for the C code's func pointer.
Test that SIGSETXID runs on signal stack, since it's likely to overflow if it runs on the Go stack.
Test that Scan finishes if we have endless empty reads.
Test that Stop cancels the channel's registrations.
Test that UnreadRune fails if the preceding operation was not a ReadRune.
Test that a -B option is passed through when using both internal and external linking mode.
Test that a Server doesn't select a TLS 1.2-only cipher suite when the client negotiates TLS 1.1.
Test that a backend failing to be reached or one which doesn't return a response results in a StatusBadGateway.
Test that a bug tearing down a ticker has been fixed.
Test that a child handler writing only headers works.
Test that a client receives a server's reply, even if the server doesn't read the entire request body.
Test that a comment ending a source file does not need a final newline.
Test that a defer in a function with no return statement will compile correctly.
Test that a failed compilation doesn't leave around an executable encoder.
Test that a field with a tag dominates untagged fields.
Test that a hanging Request.Body.Read from another goroutine can't cause the Handler goroutine's Request.Body.Close to block.
Test that a list l is not modified when calling InsertAfter with a mark that is not an element of l.
Test that a list l is not modified when calling InsertBefore with a mark that is not an element of l.
Test that a list l is not modified when calling MoveAfter or MoveBefore with a mark that is not an element of l.
Test that a null for ,string is not replaced with the previous quoted string (issue 7046).
Test that a panic while deleting a timer does not leave the timers mutex held, deadlocking a ticker.Stop in a defer.
Test that a program can survive SIGCHLD.
Test that a runtimeTimer with a duration so large it overflows does not cause other timers to hang.
Test that a syntax error caused by an unexpected EOF gives an error message with the correct line number.
Test that a time.Time will match either tagUTCTime or tagGeneralizedTime.
Test that a write error during the handshake is returned.
Test that adding some random junk between the SOS marker and the EOI marker does not affect the decoding.
Test that all File methods give ErrInvalid if the receiver is nil.
Test that all P goroutines are scheduled at the same time
Test that all runnable goroutines are scheduled at the same time.
Test that all the types from import2.go made it intact and with the same meaning, by assigning to or using them.
Test that an EOF is overridden by a user-generated scan error.
Test that an error shuts down the lexing goroutine.
Test that an https URL doesn't try to do an SSL negotiation with a bytes.Buffer and hang with all goroutines not runnable.
Test that an incorrect use of the blank identifer is caught.
Test that basic operations on named types are valid and preserve the type.
Test that basic signal handling works.
Test that big numbers work as constants and print can print them.
Test that branches have some prediction properties.
Test that buffered channels are garbage collected properly.
Test that calling Move() on an empty Ring initializes it.
Test that cgo reserves enough stack space during cgo call.
Test that cgo's multiple-value special form for C function calls works in variable declaration statements.
Test that channel receive slots that contain local stack pointers are adjusted correctly by stack shrinking.
Test that child.serve closes the bodies of aborted requests and closes the bodies of all requests before returning.
Test that cmd/go doesn't link in the HTTP server.
Test that code compiles without "internal error: ...
Test that compiling with optimization turned on produces faster code.
Test that continued lines are properly trimmed.
Test that decryption tables are correct.
Test that defers do not prevent garbage collection.
Test that deletes from a nil map succeed.
Test that dequeueing from a pending channel doesn't take linear time.
Test that embedded interface types can have local methods.
Test that empty tokens, including at end of line or end of file, are found by the scanner.
Test that encodeState.stringBytes and encodeState.string use the same encoding.
Test that encryption tables are correct.
Test that error messages say what the source file says (uint8 vs byte, int32 vs.
Test that error values are negative.
Test that errors in gob shut down the connection.
Test that even if a file imports runtime, it cannot get at the low-level runtime definitions known to the compiler.
Test that exit values are returned correctly
Test that extra object elements in an array do not result in a "data changing underfoot" error.
Test that fields hide promoted methods.
Test that giving a negative duration returns nil.
Test that go generate handles command aliases.
Test that go1.1 tag above is included in builds.
Test that goLookupIPOrder falls back to the host file when no DNS servers are available.
Test that goroutines and garbage collection run during init.
Test that goroutines are preempted at function calls.
Test that heavy recursion works.
Test that if a slice access causes a fault, a deferred func sees the most recent value of the variables it accesses.
Test that if driver panics, database/sql does not deadlock.
Test that incorrect expressions involving wrong anonymous interface do not generate panics in Type Stringer.
Test that incorrect short declarations and redeclarations are detected.
Test that incorrect uses of the blank identifer are caught.
Test that initializing struct fields out of order still runs functions in the right order.
Test that interface conversion fails when method is missing.
Test that internal linking of standard packages does not require libgcc.
Test that it's OK to have C code that does nothing other than initialize a global variable.
Test that len non-constants are not constants, https://golang.org/issue/3244.
Test that linker defined symbols (e.g., text, data) don't conflict with C symbols.
Test that many initializations can be done at link time and generate no executable init functions.
Test that map index can be used in range and that slicebytetostringtmp is not used in this context.
Test that maps don't go quadratic for NaNs and other values.
Test that multi-line errors are appropriately and fully read.
Test that name casing matters
Test that nil checks are inserted.
Test that nil checks are removed.
Test that on 32-bit systems they crash instead of failing silently.
Test that operators simplify their arguments.
Test that pack works with very long lines in PKGDEF.
Test that pack-created archives can be understood by the tools.
Test that parser correctly handles large timestamps (long tracing).
Test that passing a negative value as max causes Int to panic
Test that passing a new big.Int as max causes Int to panic
Test that pending GC preempts running goroutines.
Test that periodic GC actually happened.
Test that pointer bitmaps of types with large scalar tails are correctly repeated when unrolled into the heap bitmap.
Test that powx is initialized correctly.
Test that predeclared names can be redeclared by the user.
Test that println can be the target of a go statement.
Test that profiler does not observe runtime.gogo as "user" goroutine execution.
Test that profiling of division operations is okay, especially on ARM.
Test that pthread_cancel works as expected (NPTL uses SIGRTMIN to implement thread cancelation) See https://golang.org/issue/6997
Test that race detector does not crash when accessing non-Go allocated memory (issue 9136).
Test that random number sequences generated by a specific seed do not change from version to version.
Test that result parameters are in the same scope as regular parameters.
Test that rounding happens after the sign of a result has been set.
Test that runq is not spuriously reported as empty.
Test that selects do not consume undue memory.
Test that sender synchronizes with receiver even if the sender was blocked.
Test that setgid does not hang on GNU/Linux.
Test that simultaneous RemoveAll do not report an error.
Test that sleeping for an interval so large it overflows does not result in a short sleep duration.
Test that stack barriers are reset when a goroutine exits without returning.
Test that stack copying copies panics correctly.
Test that string option is ignored for invalid types.
Test that taking an empty sub-image starting at a corner does not panic.
Test that the Add functions add correctly.
Test that the CompareAndSwap functions actually do the comparison and the swap correctly.
Test that the Go environment variables are present and accessible through package os and package runtime.
Test that the compiler accepts two slice types that meet that requirement but are not assignment compatible.
Test that the compiler does not crash during compilation.
Test that the empty string doesn't panic decoding when ,string is specified Issue 3450
Test that the error message for multiline unterminated string refers to the line number of the opening quote.
Test that the error value returned by mmap is positive, as that is what the code in mem_bsd.go, mem_darwin.go, and mem_linux.go expects.
Test that the first parse error is returned.
Test that the generated type names are deterministic.
Test that the half multiply resulting from a division by a constant generates correct code.
Test that the image buffer is reasonably small even if (delta.X, delta.Y) is far from the origin.
Test that the implementation catches nil ptr indirection in a large address space.
Test that the line splitter errors out on a long line.
Test that the line splitter handles a final empty line with a carriage return but no newline.
Test that the line splitter handles a final empty line.
Test that the line splitter handles a final line with a carriage return but no newline.
Test that the line splitter handles a final line without a newline.
Test that the modification made to the Request by the RoundTripper is cleaned up
Test that the mutually recursive types in recursive1.go made it intact and with the same meaning, by assigning to or using them.
Test that the program that doesn't need any cgo pointer checking takes about the same amount of time with it as without it.
Test that the rune splitter returns same sequence of runes (not bytes) as for range string.
Test that the signal originating in C is handled by C.
Test that the signal originating in Go is handled (and recovered) by Go.
Test that the special case in IsDigit agrees with the table
Test that the stack can be unwound through a call out and call back into Go.
Test that the struct field in anonunion.go was promoted.
Test that the transport doesn't close the TCP connection early, before the response body has been read.
Test that the variable is being set and returned correctly.
Test that the word splitter returns the same data as strings.Fields.
Test that tiny allocations with finalizers are correctly profiled.
Test that top-level parenthesized declarations can be empty.
Test that typed and untyped negative zero floating point constants are treated as equivalent to zero constants.
Test that types can be parenthesized.
Test that unbuffered channels act as pure fifos.
Test that unexported methods are not visible outside the package.
Test that url.Error implements net.Error and that it forwards
Test that variadic arguments are packed into a slice and passed as last arg
Test that variadic functions work across package boundaries.
Test that vcsFromDir correctly inspects a given directory and returns the right VCS and root.
Test that void* is consistently mapped to *byte.
Test that we can at least read the DWARF data.
Test that we can create an archive twice with the same name (Issue 8369).
Test that we can create an archive, put some files in it, and get back a correct listing.
Test that we can create an archive, put some files in it, and get back a file.
Test that we can create an archive, write to it, and get the same contents back.
Test that we can defer the predeclared functions print and println.
Test that we can do page 1 of the C book.
Test that we can encode a value and decode into a pointer.
Test that we can get a long name back out of the archive.
Test that we can get the xattrs back out of the archive.
Test that we can link together two different cgo packages that both use the same libgcc function.
Test that we can read the values and files of a multipart request with FormValue and FormFile, and that ParseMultipartForm can be called multiple times.
Test that we can use a pointer then a value type of a GobEncoder in the same encoded value.
Test that we can use a value then a pointer type of a GobEncoder in the same encoded value.
Test that we cannot unread any further.
Test that we get the correct results for times before the first transition time.
Test that we have no more than one build ID.
Test that we print using the String method.
Test that we read slightly-bogus MIME headers seen in the wild, with spaces before colons, and spaces in keys.
Test that we recognize a bad type the first time.
Test that when import gives multiple names to a single type, they still all refer to the same type.
Test that when run under nohup, an uncaught SIGHUP does not kill the program, but a
Test that when the compiler expands append inline it does not overwrite a value before it needs it (issue 3369).
Test that without GOPATH set, go get should fail.
Test that you cannot import a main package.
Test that zero division causes a panic.
Test that, even when both sides support an ECDSA cipher suite, it won't be selected if the server's private key doesn't support it.
Test that, even when both sides support an RSA cipher suite, it won't be selected if the server's private key doesn't support it.
Test the 'for range' construct.
Test the -X facility of the gc linker (6l etc.).
Test the Tick convenience wrapper.
Test the basic function calling behavior.
Test the behavior of closures.
Test the bounded case
Test the cap predeclared function applied to channels.
Test the cbcDecAble interface is detected correctly by the cipher package.
Test the cbcEncAble interface is detected correctly by the cipher package.
Test the cgo checker on a file that doesn't use cgo.
Test the code to try multiple packages.
Test the context argument to SetCgoTraceback.
Test the convenience wrapper too.
Test the convenience wrapper with an opaque URL too.
Test the correct error is returned when the split function errors out.
Test the ctrAble interface is detected correctly by the cipher package.
Test the existence of connected multicast route clones for IPv4.
Test the existence of connected unicast routes for IPv4.
Test the existence of connected unicast routes for IPv6.
Test the gcmAble interface is detected correctly by the cipher package.
Test the internal "algorithms" for objects larger than a word: hashing, equality etc.
Test the line splitter, including some carriage returns but no long lines.
Test the order in which the XML element name is chosen
Test the pure Go version.
Test the run-time behavior of escape analysis-related optimizations.
Test the semantics of the select statement for basic empty/non-empty cases.
Test the situation in which two cases of a select can both end up running.
Test the solution, silently.
Test to make sure spills of cast-shortened values don't end up spilling the pre-shortened size instead of the post-shortened size.
Test to make sure that (Store ptr (Trunc32to16 val) mem) does not end up as a 32-bit store.
Test to make sure that a pointer value which is alive across a call is retained, even when there are matching conversions to/from uintptr around the call.
Test to make sure we don't think values are dead when they are assigned to a PPARAMOUT slot before the last GC safepoint.
Test to see if it's actually zero or just unset.
Test trailing commas.
Test trivial, bootstrap-level complex numbers, including printing.
Test typed integer constants.
Test types of constant expressions, using reflect.
Test unclosed closure.
Test unsafe.Sizeof, unsafe.Alignof, and unsafe.Offsetof all return uintptr.
Test using _ receiver.
Test values for the stream test.
Test variadic functions and calls (dot-dot-dot).
Test various ReadResponse error cases.
Test various combinations of non-blocking operations.
Test various correct and incorrect permutations of send-only, receive-only, and bidirectional channels.
Test various parsing cases that are a little different now that send is a statement, not a expression.
Test various safe uses of indirection.
Test vector in file pss-int.txt from: ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-1/pkcs-1v2-1-vec.zip
Test vectors are from FIPS 197: http://www.csrc.nist.gov/publications/fips/fips197/fips-197.pdf Appendix A of FIPS 197: Key expansion examples
Test vectors from the Wikipedia page: http://en.wikipedia.org/wiki/RC4
Test verification depends on these lines being contiguous.
Test where write barriers are and are not emitted.
Test whether the printer stops writing after the first error
Test whether we should use the system call or /dev/urandom.
Test white space table matches the Unicode definition.
Test wildcard IP addresses.
Test with a large field with methods.
Test write after/before reader close.
Test write barrier for implicit assignments to result parameters that have escaped to the heap.
Test zero length structs.
Test, near-exhaustive, of converting numbers between types.
Test, using compiler diagnostic flags, that bounds check elimination is eliminating the correct checks.
Test, using compiler diagnostic flags, that inlining is working.
Test, using compiler diagnostic flags, that the escape analysis is working.
Test304Responses verifies that 304s don't declare that they're chunking in their response headers and aren't allowed to produce output.
TestAcceptIgnoreSomeErrors tests that windows TCPListener.AcceptTCP handles broken connections.
TestArithmetic tests that both backends have the same result for arithmetic expressions.
TestArithmeticBoundary tests boundary results for arithmetic operations.
TestArithmeticConst tests results for arithmetic operations against constants.
TestBadData tests that various problems caused by malformed input are caught as errors and do not cause panics.
TestBestSpeed tests that round-tripping through deflate and then inflate recovers the original input.
TestBlank checks that Sprint (and hence Print, Fprint) puts spaces in the right places, that is, between arg pairs in which neither is a string.
TestBlankln checks that Sprintln (and hence Println, Fprintln) puts spaces in the right places, that is, between all arg pairs.
TestBlockHuff tests huffman encoding against reference files to detect possible regressions.
TestBreakContinue tests that continue and break statements do what they say.
TestCMYKGray tests that CMYK colors are a superset of Gray colors.
TestCMYKRoundtrip tests that a subset of RGB space can be converted to CMYK and back to within 1/256 tolerance.
TestCMYKToRGBConsistency tests that calling the RGBA method (16 bit color) then truncating to 8 bits is equivalent to calling the CMYKToRGB function (8 bit color).
TestCipherSuiteCertPreferance ensures that we select an RSA ciphersuite with an RSA certificate and an ECDSA ciphersuite with an ECDSA certificate.
TestClientCanClose verifies that clients can also force a connection to close.
TestClientWriteShutdown tests that if the client shuts down the write side of their TCP connection, the server doesn't send a 400 Bad Request.
TestClientWrites verifies that client requests are buffered and we don't send a TCP packet per line of the http request + body.
TestClosure tests closure related behavior.
TestComplexFormatting checks that a complex always formats to the same thing as if done by hand with two singleton prints.
TestConstCache ensures that the cache will not return reused free'd values with a non-matching AuxInt
TestCopyError tests that we kill the process if there's an error copying its output.
TestDeferPtrsGoexit is like TestDeferPtrs but exercises the possibility that the stack grows as part of starting the deferred function.
TestDeferPtrsPanic is like TestDeferPtrsGoexit, but it's using panic instead of Goexit to run the Defers.
TestDualStackTCPListener tests both single and double listen to a test listener with various address families, different listening address and same port.
TestDualStackUDPListener tests both single and double listen to a test listener with various address families, different listening address and same port.
TestEOF verifies that when we scan, we see at most EOF once per call to a Scan function, and then only when it's really an EOF.
TestEOFAtEndOfInput verifies that we see an EOF error if we run out of input.
TestEmpty tests that an empty payload still forms a valid GZIP stream.
TestEvalSymlinksCanonicalNames verify that EvalSymlinks returns "canonical" path names on windows.
TestFP tests that both backends have the same result for floating point expressions.
TestFcntlFlock tests whether the file locking structure matches the calling convention of each kernel.
TestFloatAdd32 tests that Float.Add/Sub of numbers with 24bit mantissa behaves like float32 addition/subtraction (excluding denormal numbers).
TestFloatAdd64 tests that Float.Add/Sub of numbers with 53bit mantissa behaves like float64 addition/subtraction.
TestFloatMul64 tests that Float.Mul/Quo of numbers with 53bit mantissa behaves like float64 multiplication/division.
TestFloatRound tests basic rounding.
TestFloatRound24 tests that rounding a float64 to 24 bits matches IEEE-754 rounding to nearest when converting a float64 to a float32 (excluding denormal numbers).
TestFormatterPrintln checks Formatter with Sprint, Sprintln, Sprintf.
TestFuncType tests that an ast.FuncType with a nil Params field can be printed (per go/ast specification).
TestFuzzOneByte tries to decode corrupted input sequences and checks that no panic occurs.
TestGCInfo tests that various objects in heap, data and bss receive correct GC pointer type info.
TestGdbBacktrace tests that gdb can unwind the stack correctly using only the DWARF debug info.
TestGenericTrieBuilding verifies the structure of the generated trie.
TestHandlersCanSetConnectionClose verifies that handlers can force a connection to close, even for HTTP/1.1 requests.
TestHandshakeServerEmptyCertificates tests that GetCertificates is called in the case that Certificates is empty, even without SNI.
TestHandshakeServerSNI involves a client sending an SNI extension of "snitest.com", which happens to match the CN of testSNICertificate.
TestHandshakeServerSNICertForName is similar to TestHandshakeServerSNI, but tests the dynamic GetCertificate method
TestHandshakeServerSNICertForNameError tests to make sure that errors in GetCertificate result in a tls alert.
TestHeadResponses verifies that all MIME type sniffing and Content-Length counting of GET requests also happens on HEAD requests.
TestHelperProcess isn't a real test.
TestHugeWriteFails tests that enormous messages trigger an error.
TestIPv4MulticastListener tests both single and double listen to a test listener with same address family, same group address and same port.
TestIPv6MulticastListener tests both single and double listen to a test listener with same address family, same group address and same port.
TestIdentityResponse verifies that a handler can unset
TestIncompleteSelection ensures that an incomplete selector expression is parsed as a (blank) *ast.SelectorExpr, not a ast.BadExpr.
TestIssue9979 verifies that empty statements are contained within their enclosing blocks.
TestLatin1 tests the internal functions for converting to and from Latin-1.
TestLatin1RoundTrip tests that metadata that is representable in Latin-1 survives a round trip.
TestLineByLineFscanf tests that Fscanf does not read past newline.
TestLineComments, using a simple test case, checks that consecutive line comments are properly terminated with a newline even if the AST position information is incorrect.
TestLinuxSendfileChild isn't a real test.
TestMain calls testMain so that the latter can use defer (TestMain exits with os.Exit).
TestMain may have already called flag.Parse.
TestMain runs in the main goroutine and can do whatever setup and teardown is necessary around a call to m.Run.
TestMemmoveOverflow maps 3GB of memory and calls memmove on the corresponding slice.
TestMulUnbalanced tests that multiplying numbers of different lengths does not cause deep recursion and in turn allocate too much memory.
TestNYCbCrAAlpha tests that NYCbCrA colors are a superset of Alpha colors.
TestNYCbCrAYCbCr tests that NYCbCrA colors are a superset of YCbCr colors.
TestNilcheckAddPtr verifies that nilchecks of OpAddPtr constructed values are removed.
TestNilcheckAddr verifies that nilchecks of OpAddr constructed values are removed.
TestNilcheckBug reproduces a bug in nilcheckelim found by compiling math/big
TestNilcheckDomOrder ensures that the nil check elimination isn't dependent on the order of the dominees.
TestNilcheckInFalseBranch tests that nil checks in the false branch of an nilcheck block are *not* removed.
TestNilcheckKeepRemove verifies that duplicate checks of the same pointer are removed, but checks of different pointers are not.
TestNilcheckPhi tests that nil checks of phis, for which all values are known to be non-nil are removed.
TestNilcheckSimple verifies that a second repeated nilcheck is removed.
TestNilcheckUser verifies that a user nil check that dominates a generated nil check wil remove the generated nil check.
TestNlzNto tests nlz/nto of the same number which is used in some of the rewrite rules.
TestNonZeroSrcPt checks drawing with a non-zero src point parameter.
TestPSSGolden tests all the test vectors in pss-vect.txt from ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-1/pkcs-1v2-1-vec.zip
TestPSSOpenSSL ensures that we can verify a PSS signature from OpenSSL with the default options.
TestPaletted tests that the drawPaletted function behaves the same regardless of whether dst is an *image.Paletted.
TestPanicUseStack checks that a chain of Panic structs on the stack are updated correctly if the stack grows during the deferred execution that happens as a result of the panic.
TestPassFD tests passing a file descriptor over a Unix socket.
TestPickAlgorithm tests that NewReplacer picks the correct algorithm.
TestPipe tests a simple read/write/close sequence.
TestProgramTooLongForBacktrack tests that a regex which is too long for the backtracker still executes properly.
TestReadHeaderOnly tests that Reader does not attempt to read special header-only files.
TestReadResponseCloseInMiddle tests that closing a body after reading only part of its contents advances the read to the end of the request, right up until the next request.
TestReadTruncation test the ending condition on various truncated files and that truncated files are still detected even if the underlying io.Reader satisfies io.Seeker.
TestReadWriteProlongedTimeout tests concurrent deadline modification.
TestReplacer tests the replacer implementations.
TestRequestWriteClosesBody tests that Request.Write does close its request.Body.
TestRewrite processes testdata/*.input files and compares them to the corresponding testdata/*.golden files.
TestRoundTrip tests that gzipping and then gunzipping is the identity function.
TestRoundTrip32 tries a fraction of all finite positive float32 values.
TestSCMCredentials tests the sending and receiving of credentials (PID, UID, GID) in an ancillary message between two UNIX sockets.
TestSEGV makes sure that an invalid address turns into a run-time Go panic.
TestScanStateCount verifies the correct byte count is returned.
TestScopeLookupParent ensures that (*Scope).LookupParent returns the correct result at various positions with the source.
TestServeHTTP10Close verifies that HTTP/1.0 requests won't be kept alive.
TestServeMuxHandlerRedirects tests that automatic redirects generated by mux.Handler() shouldn't clear the request's query string.
TestSetFloat64NonFinite checks that SetFloat64 of a non-finite value returns nil.
TestShortCircuit tests OANDAND and OOROR expressions and short circuiting.
TestSleep emulates "sleep 1".
TestStackMem measures per-thread stack segment cache behavior.
TestTCPListener tests both single and double listen to a test listener with same address family, same listening address and same port.
TestTCPServer tests concurrent accept-read-write servers.
TestTags verifies that the -tags argument controls which files to check.
TestTraceSymbolize tests symbolization and that events has proper stacks.
TestTransportGzipRecursive sends a gzip quine and checks that the client gets the same value back.
TestTransportHeadChunkedResponse verifies that we ignore chunked transfer-encoding on responses to HEAD requests.
TestTransportHeadResponses verifies that we deal with Content-Lengths with no bodies properly
TestTypeAssertion tests type assertions.
TestUDPListener tests both single and double listen to a test listener with same address family, same listening address and same port.
TestUnixAndUnixpacketServer tests concurrent accept-read-write servers
TestUnixRightsRoundtrip tests that UnixRights, ParseSocketControlMessage, and ParseUnixRights are able to successfully round-trip lists of file descriptors.
TestUnreadRuneWithBufio verifies that, at least when using bufio, successive calls to Fscan do not lose runes.
TestWriteBlock tests if the writeBlock encoding has changed.
TestWriteBlockDynamic tests if the writeBlockDynamic encoding has changed.
TestWriteGrayscale tests that a grayscale images survives a round-trip through encode/decode cycle.
TestWriteStringError tests that WriteString returns an error received from the underlying io.Writer.
TestWriterReadFromCounts tests that using io.Copy to copy into a bufio.Writer does not prematurely flush the buffer.
TestYCbCrGray tests that YCbCr colors are a superset of Gray colors.
TestYCbCrRoundtrip tests that a subset of RGB space can be converted to YCbCr and back to within 2/256 tolerance.
TestYCbCrToRGBConsistency tests that calling the RGBA method (16 bit color) then truncating to 8 bits is equivalent to calling the YCbCrToRGB function (8 bit color).
TestZCSE tests the zero arg cse.
Tested in TestMarshalEmptyIP below.
Tested returns the name of the package being tested.
Testing adapter for memclr
Testing adapters for hash quality tests (see hash_test.go)
Testing combined output and error values.
Testing custom case in header keys.
Testing for this case is difficult because it relies on using the same FD values as that case.
Testing is awkward because we need to reference things from a separate package to trigger the warnings.
Testing multiples of windowSize triggers the case where Read will fail to return an early io.EOF.
Testing rebuilding of shared libraries when they are stale is a bit more complicated that it seems like it should be.
Testing the newClientServerTest helper itself.
Tests a Go CGI program running under a Go CGI host process.
Tests a bogus abs_path on the Request-Line (RFC 2616 section 5.1.2)
Tests a map with a single bucket, with all keys having different lengths.
Tests a map with a single bucket, with same-lengthed short keys ("quick keys") as well as long keys.
Tests arithmetic expressions
Tests bug with dot imports.
Tests can be updated by running them with the -update flag.
Tests chunked body and a bogus Content-Length which should be deleted.
Tests chunked body with trailer:
Tests continue and break.
Tests derived from Chromium's cookie_store_unittest.h.
Tests escape analysis for range of arrays.
Tests exercising RFC 6874 compliance:
Tests fix for issue 2542, that we release a lock when querying on a closed connection.
Tests fix for issue 4433, that retries in Begin happen when conn.Begin() returns ErrBadConn
Tests floating point arithmetic expressions
Tests for CGI (the child process perspective)
Tests for deep equality using reflected types.
Tests for golang.org/issue/11326.
Tests for golang.org/issue/13471
Tests for https://golang.org/issue/900
Tests for multiple-template parsing and execution.
Tests for package cgi
Tests for transport.go.
Tests for type stored directly in iface and with pointer receiver method.
Tests for type stored directly in iface and with value receiver method.
Tests for type stored indirectly in iface and with value receiver method.
Tests for vendoring semantics.
Tests from US FIPS 198 http://csrc.nist.gov/publications/fips/fips198/fips-198a.pdf
Tests from http://csrc.nist.gov/groups/ST/toolkit/examples.html (truncated tag tests are left out)
Tests from http://greenbytes.de/tech/tc2231/ TODO(bradfitz): add the rest of the tests from that site.
Tests header sorting when over the insertion sort threshold side:
Tests load/store ordering
Tests of a large random structure.
Tests of correct behavior, with contention.
Tests of correct behavior, without contention.
Tests of internal functions and things with no better homes.
Tests of simple examples.
Tests phi implementation
Tests regarding the ordering of Write, WriteHeader, Header, and Flush calls.
Tests run in a limited file system and we do not provide access to every source file.
Tests short circuiting.
Tests suggested in golang.org/issue/6080.
Tests that ServeFile doesn't add a Content-Length if a Content-Encoding is specified.
Tests that a pipelined request causes the first request's Handler's CloseNotify channel to fire.
Tests that accept deadlines in the past work, even if there's incoming connections available.
Tests that assigning to RawBytes doesn't allocate (and also works).
Tests that below functions, structures and constants are consistent on all Unix-like systems.
Tests that blockGeneric (pure Go) and block (in assembly for amd64, 386, arm) match.
Tests that blockGeneric (pure Go) and block (in assembly for some architectures) match.
Tests that cgo detects invalid pointer passing at runtime.
Tests that chunked server responses that write 1 byte at a time are buffered before chunk headers are added, not after chunk headers.
Tests that clients can send trailers to a server and that the server can read them.
Tests that closing the Request.Cancel channel also while still reading the response body.
Tests that compressing and then decompressing the given file at the given compression level and dictionary yields equivalent bytes to the original file.
Tests that dial timeouts, deadlines in the past work.
Tests that export data does not corrupt type syntax.
Tests that involve both reading and writing.
Tests that method calls through an interface always call the locally defined method localT.m independent at which embedding level it is and in which order embedding is done.
Tests that read deadlines work, even if there's data ready to be read.
Tests that servers send trailers to a client and that the client can read them.
Tests that the HTTP transport re-uses connections when a client reads to the end of a response Body without closing it.
Tests that the HTTP/1 and HTTP/2 servers prevent handlers from writing more than they declared.
Tests that the server flushes its response headers out when it's ignoring the response body and waits a bit before forcefully closing the TCP connection, causing the client to get a RST.
Tests that the server responds to the "Expect" request header correctly.
Tests that we can use CloseNotifier in one request, and later call Hijack on a second request on the same connection.
Tests that we don't leak Transport persistConn.readLoop goroutines when a server hangs up immediately after saying it would keep-alive.
Tests that we don't parse a path that looks like a scheme-relative URI as a scheme-relative URI.
Tests that we occasionally compact.
Tests that we support bogus under-100 HTTP statuses, because we historically have.
Tests that we verify (and accept valid) crc32s on files with crc32s in their file header (not in data descriptors)
Tests that we verify (and reject invalid) crc32s on files with crc32s in their file header (not in data descriptors)
Tests that write deadlines work, even if there's buffer space available to write.
Tests that xadduintptr correctly updates 64-bit values.
Tests the fallback code path in case the optimized asm implementation cannot be used.
Tests the fix to issue 11221.
Tests the rv and then the pv command on a new archive.
Tests the tv command.
Tests to check that not supported verbs generate an error string.
Tests type assertion expressions and statements
Tests whether the iterator returns the right elements when started in the middle of a grow, when the keys are NaNs.
Text and spaces By default, all text between actions is copied verbatim when the template is executed.
Text bracketed by tabwriter.Escape characters is passed through unchanged.
Text converts the floating-point number x to a string according to the given format and precision prec.
Text in an encoded-word in a display-name must not contain certain characters like quotes or parentheses (see RFC 2047 section 5.3).
Text is the malformed text string.
Text is the textproto.Conn used by the Client.
Text must be the start address of the corresponding text segment.
Text of last token returned by Next.
Text returns the most recent token generated by a call to Scan as a newly allocated string holding its bytes.
Text returns the original string representation of the token.
Text returns the string representation of x in the given base.
Text returns the text of the comment.
Text types have the charset parameter set to "utf-8" by default.
TextMarshaler is the interface implemented by an object that can marshal itself into a textual form.
TextNode holds plain text.
TextUnmarshaler is the interface implemented by an object that can unmarshal a textual representation of itself.
TextX is a skeleton test that can be filled in for debugging one-off cases.
Textual prefix but not a path prefix.
Thaana is the set of Unicode characters in script Thaana.
Thai is the set of Unicode characters in script Thai.
Thank you for the lovely bone china tea set.
Thank you for the lovely moleskin pants.
Thanks to our sorting, we can just consider adjacent pairs of imports.
That absolute line number would then have to be converted separately to a file name and line number within the file.
That behaviour is mimicked here in order to be consistent across platforms.
That breaks the math above, so we have to check for that explicitly.
That chunk might have an alignment more than 16 bytes.
That code is never compiled but will be processed by tools like godoc and might be useful as end-user documentation.
That confuses minit, so we remove that signal stack here before calling the regular mstart.
That could confuse callers quite a bit.
That data is platform-specific as it depends on the inlining decisions of the compiler and the representation of the inlined function bodies.
That destructor would put the m back onto the extra list.
That explains the initial "num0" being split into "n" and "um0".
That file is intended to be the input to the external disassembler.
That fits well within the StackGuard - StackSmall bytes at the bottom.
That form of instruction must read all the parameters for correctness, and similarly it must not read the out arguments - they won't be set until the new function runs.
That header is exposed as the fields of the Writer and Reader structs.
That header might say it's of type qtype, but we don't actually have it.
That higher level would shadow the lower level we're now at, so this one can't be useful to us.
That is also where updates required by new systems or versions should be applied.
That is supported for backward compatibility.
That is the reason why the next if block is disabled.
That is, Join(basepath, Rel(basepath, targpath)) is equivalent to targpath itself.
That is, a VARKILL annotation asserts that its argument is certainly dead, for use when the liveness analysis would not otherwise be able to deduce that fact.
That is, a packet-based network connection is a pair of cross-connected pktconns.
That is, a stream-based network connection is a pair of cross-connected conns.
That is, any released version of this package should be able to decode data written with any previously released version, subject to issues such as security fixes.
That is, don't think of these as semaphores.
That is, each limb is alternately 29 or 28-bits wide in little-endian order.
That is, except for the first event, it waits until End(id-1) has been called.
That is, if h describes address p, h.forward(n) describes p+n*ptrSize.
That is, if h describes address p, h.next() describes p+ptrSize.
That is, if on a Mac you do:
That is, it looks up _service._proto.name.
That is, it makes it easy to build efficient, thread-safe free lists.
That is, it reports whether it starts with a colon.
That is, it tests for the ModeDir bit being set in m.
That is, it tests that no mode type bits are set.
That is, the build constraint:
That is, the build constraints:
That is, the command with source in DIR/src/foo/quux is installed into DIR/bin/quux, not DIR/bin/foo/quux.
That is, the final typ.size - typ.ptrdata words contain no pointers.
That is, the first two linked types of the first module are:
That is, the package presented is the one that matches the search and is nearest the root and lexically first at its level of the hierarchy.
That is, the returned Value's Type is PtrTo(typ).
That is, the system call implementation is implicitly converting certain arguments back from uintptr to pointer.
That is, this function expects gcc to fail.
That is, time variables and struct fields should be of type time.Time, not *time.Time.
That is, treat it like an unexported field.
That is, useVendor means that the import path came from a source file and has not been vendor-expanded yet.
That is, we can see a futile wakeup event w/o the actual wakeup before it.
That is, we're indirectly testing that without SetPanicOnFault these would manage to turn into ordinary crashes.
That is, when matching against text, the regexp returns a match that begins as early as possible in the input (leftmost), and among those it chooses a match that is as long as possible.
That is, when we ready a new goroutine and there is a spare P, unpark a thread and handoff it the thread and the goroutine.
That is, you can use escaping in the zone identifier but not to introduce bytes you couldn't just write directly.
That is: retained by the most recent GC plus allocated since then.
That logger writes to standard error and prints the date and time of each logged message.
That means all cookies, if any, are written into the same line, separated by semicolon.
That means choosing a year equal to 1 mod 400, so that the first leap year is the 4th year, the first missed leap year is the 100th year, and the missed missed leap year is the 400th year.
That means symbol plus indirect on SB and no offset.
That means that any remaining unsatisfied moves are in simple cycles.
That means that if we are shifting by 4 (multiplying by 16), it will add 2 digits when the string prefix is "625" through "999", and one fewer digit if the string prefix is "000" through "624".
That means that we don't have to worry about blocking it again.
That means that we will not receive any events at this point.
That means the file must be in the build package's GoFiles or CgoFiles list only (no tag-ignored files, tests, swig or other non-Go files).
That name will identify the concrete type of a value sent or received as an interface variable.
That parameter section must declare a single parameter, the receiver."
That path and prefix have slashes for separators.
That position information is needed to properly position comments when printing the construct.
That rebuild might hit the same write errors as in the last scenario.
That restart marker will be seen here instead of inside the processSOS method, and is ignored as a harmless error.
That second one is a drawback, but it seems a small price to pay for the test running at all.
That sentence ends after the first period followed by space and not preceded by exactly one uppercase letter.
That should be enough to find the build ID.
That should be impossible, but if it does happen then we end up trying to build the same package twice, usually in parallel overwriting the same files, which doesn't work very well.
That simplifies our code and is most general.
That status change by itself can be viewed as a small preemption, because the GC might change Gwaiting to Gscanwaiting, and then this goroutine has to wait for the GC to finish before continuing.
That value is converted to a uint64 using math.Float64bits.
That variable may itself correspond to a hardware register, to represent the use of registers in the unoptimized instruction stream.
That way error messages referring to imported objects can print meaningful information.
That way they can have correct position information.
That way we can avoid the notion of "sealed" blocks.
That will fail if malloc is locked, causing a confusing error message.
That will keep the goroutine structs from being collected.
That will produce shorter, more pipeline-able code.
That won't happen currently.
That won't work if GOBIN is set.
That would lead to an inconsistent trace: - either GoSysExit appears before EvGoInSyscall, - or GoSysExit appears for a goroutine for which we don't emit EvGoInSyscall below.
That would permit Int.Text to be implemented w/o the need for string copy if the number is negative.
That would permit the introduction of itoa which is like utoa but reserves a byte for a possible sign that's passed in.
That would permit usages such as -deltaT 10s -deltaT 15s and other combinations.
That's a waste of I/O when all we care about is the Prog list and the one ELF note.
That's all we care about.
That's different from a switch without a default, which behaves like it has a default with an empty body.
That's done by the alternate protocol's RoundTripper.
That's not a very interesting map, but it provides a way for callers to obtain the list of files in the program.
That's not what we want to test.
That's now handled by the isGoRelease clause above.
That's okay, because by the time this is called, gp.waiting has all channels in lock order.
That's okay, we'll store through the pointer.
That's relatively straightforward as this program goes.
That's the magic marker for a 64-bit file, so even though it fits in a 32-bit field we must use the 64-bit field.
That's unnecessary with HTTP/2's framing, so the server is able to calculate the length while still sending trailers afterwards.
That's what the tables expect.
That's where we keep zoneinfo.zip.
That's why this file is label1.go.
The  compiler no longer statically initializes them.
The ".dynamic" section contains an array of them.
The ".note" section contains an array of notes.
The "/" pattern matches everything, so we need to check that we're at the root here.
The "/any" matches "/any/path" case.
The "/any/" matches "/any/path" case.
The "1+" is a poor man's round-up, to ensure this adds credit even if assistBytesPerWork is very low.
The ":" following the uid is optional.
The "LEGAL ISSUES" section of the README in that archive says: In plain English: 1.
The "Trailer" header isn't included in the Transport's response, at least for *http.Transport.
The "abs_path" or "rel_path" cases.
The "absoluteURI" or "net_path" cases.
The "capacity" is only known statically for strings, arrays, and pointers to arrays, and it is the same as the length for those types.
The "define" keyword has already been scanned.
The "foo/" prefix is stripped so that you can add DIR/bin to your PATH to get at the installed commands.
The "http://www.w3.org/XML/1998/namespace" name space is predefined as "xml" and must be referred to that way.
The "json" key in the struct field's tag value is the key name, followed by an optional comma and options.
The "mark" is any non-nil Aux value.
The "opt" field is the backward link in the linked list.
The "position" of the empty statement is the position of the immediately following (explicit or implicit) semicolon.
The "special" cookies have values containing commas or spaces which are disallowed by RFC 6265 but are common in the wild.
The "string" option signals that a field is stored as JSON inside a JSON-encoded string.
The "test copy" of preal is ptest.
The "true" branch of a "range" node can execute multiple times.
The '.exe' suffix is added when writing a Windows executable.
The 'clean' command can remove the generated files.
The 'final' argument represents the return value from the preceding value of the pipeline, if any.
The 'go test' command may run tests for different packages in parallel as well, according to the setting of the -p flag (see 'go help build').
The 'go test' command rewrites or removes recognized flags, as appropriate, both before and after the optional package list, before invoking the test binary.
The 'instructions' of the decoding machine
The 'instructions' of the encoding machine
The 'v' format is handled like 'g'.
The (*rtype).nameOff method is a convenience wrapper for this function.
The (*rtype).textOff method is a convenience wrapper for this function.
The (*rtype).typeOff method is a convenience wrapper for this function.
The *Package has these, and we use them.
The *parse.Tree field is exported only for use by html/template and should be treated as unexported by all other clients.
The +2 simplifies calculation near the edges.
The --alloc_space, --alloc_objects, and --show_bytes options of pprof control how the information is presented.
The -e flag changes the handling of erroneous packages, those that cannot be found or are malformed.
The -f flag, valid only when -u is set, forces get -u not to verify that each package has been checked out from the source control repository implied by its import path.
The -fix flag instructs get to run the fix tool on the downloaded packages before resolving dependencies or building the code.
The -full flag causes the generated code to do a full (16x) unrolling instead of a 4x unrolling.
The -i flag causes clean to remove the corresponding installed archive or binary (what 'go install' would create).
The -i flag installs the packages that are dependencies of the target.
The -insecure flag permits fetching from repositories and resolving custom domains using insecure schemes such as HTTP.
The -json flag causes the package data to be printed in JSON format instead of using the template format.
The -n flag causes clean to print the remove commands it would execute, but not run them.
The -n flag causes tool to print the command that would be executed but not execute it.
The -n flag prints commands that would be executed.
The -r flag causes clean to be applied recursively to all the dependencies of the packages named by the import paths.
The -r flag restricts the set of rewrites considered to those in the named list.
The -t flag instructs get to also download the packages required to build the tests for the specified packages.
The -u flag instructs get to use the network to update the named packages and their dependencies.
The -v flag prints the names of packages and files as they are processed.
The -x flag causes clean to print remove commands as it executes them.
The -x flag prints commands as they are executed.
The .go file will use import "C" and is to be processed by cgo.
The 0x101 is here for the same reason as in drawRGBA.
The 0x80 bit is whether there was a core dump.
The 1-bit ptrmasks are sized to contain only bits for the typ.ptrdata prefix, zero padded out to a full byte of bitmap.
The 16-bit swap will preserve the high bits of the register, so they are the same.
The 1st list (phase 1, see Export) contains all objects that are exported at the package level.
The 2-bit entries are split when written into the byte, so that the top half of the byte contains 4 high bits and the bottom half contains 4 low (pointer) bits.
The 2-instruction and 1-instruction forms correspond to the two code sequences for loading a TLS variable in the local exec model given in "ELF Handling For Thread-Local Storage".
The 2nd list of objects contains all objects referred to from exported inlined function bodies.
The 386 has basically no registers, so substitute functions that can work with temporaries instead.
The 4 GB of zeros compresses to 4 MB, which compresses to 20 kB, which compresses to 1252 bytes (in the hex dump below).
The 4 values are the unmasked base form, then the unmasked CC, V, and VCC variants, respectively.
The 5 here and below depends on the number of internal runtime frames that sit between a deferred function called during panic and the original frame.
The 64 bit fields will always contain the correct value and for normal archives both fields will be the same.
The 64 bits mantissa is 1 + 52 bits for float64 + 11 extra bits.
The 64-bit data structure is written in the 32-bit format on the 32-bit machines.
The AES block size in bytes.
The AES-GCM construction in TLS has an explicit nonce so that the nonce can be random.
The AESNI GCM code decrypts and authenticates concurrently and so overwrites the output buffer before checking the authentication tag.
The AESNI code decrypts and authenticates concurrently, and so overwrites dst in the event of a tag mismatch.
The AST is generally of the form of a linear search using if..goto, although binary search is used with long runs of concrete types.
The AST is generally of the form of a linear search using if..goto, although binary search is used with long runs of constants.
The AST preserves source-level parentheses so there is no need to introduce them here to correct for different operator precedences.
The Add and Sub computations are oblivious to the choice of epoch.
The Add method adds a Time and a Duration, producing a Time.
The Addr returned is shared by all invocations of Addr, so do not modify it.
The Addr returned is shared by all invocations of LocalAddr, so do not modify it.
The Addr returned is shared by all invocations of RemoteAddr, so do not modify it.
The Adler-32 checksum is stored as s2*65536 + s1 in most- significant-byte first (network) order.
The Atoi are guaranteed to succeed because the versions match goTag.
The Aux field identifies the variable.
The BND prefix is part of the Intel Memory Protection Extensions (MPX).
The BenchmarkFoo functions exercise a drawFoo fast-path function in draw.go.
The BenchmarkGenericFoo functions exercise the generic, slow-path code.
The Block field is used after clobber.
The Body is automatically dechunked if the server replied with a "chunked" Transfer-Encoding.
The Bytes() methods reconstructs it with a pretty error message.
The C call to Go came from a thread not currently running any Go.
The C code must preserve this property: it must not store any Go pointers in Go memory, even temporarily.
The C type void* is represented by Go's unsafe.Pointer.
The CC or CXX environment variables may be set to determine the C or C++ compiler, respectively, to use.
The CGI spec doesn't allow chunked requests.
The CPU profile is not available as a Profile.
The CPU times for mark/scan are broken down in to assist time (GC performed in line with allocation), background GC time, and idle GC time.
The CX register was getting clobbered because we did not keep track of its allocation correctly.
The CXX_FOR_TARGET and CXX environment variables work in a similar way for C++ code.
The Call method waits for the remote call to complete while the Go method launches the call asynchronously and signals completion using the Call structure's Done channel.
The Class of a variable/function describes the "storage class" of a variable or function.
The Client cancels requests to the underlying Transport using the Request.Cancel mechanism.
The Client's Transport typically has internal state (cached TCP connections), so Clients should be reused instead of created as needed.
The CloseNotifier interface is implemented by ResponseWriters which allow detecting when the underlying connection has gone away.
The Comments list contains all comments in the source file in order of appearance, including the comments that are pointed to from other nodes via Doc and Comment fields.
The Compressor itself must be safe to invoke from multiple goroutines simultaneously, but each returned writer will be used only by one goroutine at a time.
The Computer Language Benchmarks Game http://shootout.alioth.debian.org/  contributed by The Go Authors.
The Content-Type header is set to application/x-www-form-urlencoded.
The ContentLength field just wasn't set.
The ContentLength must be 0 or -1, to send a chunked request.
The Context field will be zero to gather a traceback from the current program execution point.
The Context should be the first parameter, typically named ctx:
The Copy function uses ReaderFrom if available.
The Copy function uses WriterTo if available.
The DES block size in bytes.
The DNS lookup timed out for some reason.
The DWARF spec places no restriction on the ordering of attributes in the Abbrevs and DIEs, and we will always write them out in the order of declaration in the abbrev.
The DWARF specification combines ClassReference and ClassReferenceSig into class "reference".
The Data field may be used to store any useful information across calls.
The Data fields contains object-specific data:
The Decompressor itself must be safe to invoke from multiple goroutines simultaneously, but each returned reader will be used only by one goroutine at a time.
The ECMA polynomial, defined in ECMA 182.
The ELF binary is expected to start at position 0 in the ReaderAt.
The ETag or modtime must have been previously set in the ResponseWriter's headers.
The Encoder makes sure all type information is sent before it is needed.
The Entry structures are arranged in a tree.
The Error interface identifies a run time error.
The Examples section of the documentation includes an illustration of how to use MakeFunc to build a swap function for different types.
The ExtraExtensions field is not populated when parsing CSRs, see Extensions.
The ExtraExtensions field is not populated when parsing certificates, see Extensions.
The F2/F3 mandatory prefixes take priority when both are present.
The FMADD-like instructions behave similarly.
The Fatal functions call os.Exit(1) after writing the log message.
The File.Comments list is not changed.
The Filename field is always left untouched by the Scanner.
The FlagSet type allows one to define independent sets of flags, such as to implement subcommands in a command-line interface.
The Float value and all its attributes (precision, rounding mode, accuracy) are marshalled.
The Flow structures hold predecessor and successor information as well as basic loop analysis.
The Flusher interface is implemented by ResponseWriters that allow an HTTP handler to flush buffered data to the client.
The G and its stack (if any) are owned by the M that is exiting the G or that obtained the G from the free list.
The GC assumes that stack writes only happen when the goroutine is running and are only done by that goroutine.
The GC does not trace the pointers during collection, and the compiler does not emit write barriers for assignments of gclinkptr values.
The GC program encodes a sequence of 0 and 1 bits indicating scalar or pointer words in an object.
The GC requests that this routine be moved from a scanmumble state to a mumble state.
The GC runs concurrently with mutator threads, is type accurate (aka precise), allows multiple GC thread to run in parallel.
The GIF specification is at http://www.w3.org/Graphics/GIF/spec-gif89a.txt.
The GIF.Disposal, GIF.Config and GIF.BackgroundIndex fields were added in Go 1.5.
The GIF89a spec, Section 20 (Image Descriptor) says: "Each image must fit within the boundaries of the Logical Screen, as defined in the Logical Screen Descriptor."
The GIF89a spec, Section 23 (Graphic Control Extension) says: "The scope of this extension is the first graphic rendering block to follow." We therefore reset the GCE fields to zero.
The GNU libopcodes rule, which we implement only in gnuCompat mode, is that F3 beats F2 unless F3 has no special meaning, in which case F3 can be a modified on an F2 special meaning.
The GOARCH, GOOS, GOPATH, and GOROOT environment variables complete the set of Go environment variables.
The GODEBUG variable controls debugging variables within the runtime.
The GOGC variable sets the initial garbage collection target percentage.
The GOMAXPROCS variable limits the number of operating system threads that can execute user-level Go code simultaneously.
The GOOS and GOARCH environment variables set the desired target.
The GOPATH environment variable lists places to look for Go code.
The GOROOT tree is always scanned in its entirety before GOPATH.
The GOTRACEBACK variable controls the amount of output generated when a Go program fails due to an unrecovered panic or an unexpected runtime condition.
The Go and C compilers, and the assembler, call writeobj to write out a Go object file.
The Go build ID is stored at the beginning of the Mach-O __text segment.
The Go build ID is stored in a note described by an ELF PT_NOTE prog header.
The Go code can then refer to types such as C.size_t, variables such as C.stdout, or functions such as C.putchar.
The Go code, during a test, is configured with deterministic randomness and so the reference test can be reproduced exactly in the future.
The Go garbage collector requires write barriers when heap pointers are stored in globals.
The Go ident will be mangled.
The Go linker does not currently know how to handle TLS relocations, hence we have to force external linking for any libraries that link in code that uses errno.
The Go path is a list of directory trees containing Go source code.
The Go tool will skip it, because the constraints are invalid.
The Go types corresponding to each class are:
The Go visibility rules for struct fields are amended for JSON when deciding which field to marshal or unmarshal.
The Gobuf.g goroutine pointer is almost always updated by assembly code.
The Gscanstatuses are acting like locks and this releases them.
The HTTP Client's Transport is responsible for calling the Close method.
The HTTP client code always uses either HTTP/1.1 or HTTP/2.
The HTTP client ignores Form and uses Body instead.
The HTTP client ignores MultipartForm and uses Body instead.
The HTTP client ignores PostForm and uses Body instead.
The HTTP server in this package sets RemoteAddr to an "IP:port" address before invoking a handler.
The HTTP/2 setting parameter SETTINGS_HEADER_TABLE_SIZE is set to the value of 256 octets, causing some evictions to occur.
The HTTP/2 setting parameter SETTINGS_HEADER_TABLE_SIZE is set to the value of 256 octets, causing some evictions to occur."
The Handler argument should be used to handle HTTP requests and will initialize the Request's TLS and RemoteAddr if not already set.
The HandlerFunc type is an adapter to allow the use of ordinary functions as HTTP handlers.
The Hijacker interface is implemented by ResponseWriters that allow an HTTP handler to take over the connection.
The Huffman look-up table requires at least 8 bits for look-up, which means that Huffman decoding can sometimes overshoot and read one or two too many bytes.
The Huffman tree can switch every 50 symbols so there's a list of tree indexes telling us which tree to use for each 50 symbol block.
The ID and Type fields must not be modified.
The IP address is expected in a form accepted by ParseIP.
The IPv6 scoped addressing zone identifier starts after the last percent sign.
The ISA doesn't require it, but the various 64-bit loads we generate assume it.
The ISO polynomial, defined in ISO 3309 and used in HDLC.
The IV needs to be unique, but not secure.
The If-Range value is typically the ETag value, but it may also be the modtime date.
The Index field specifies the index number, but the size of the fraction is not specified.
The Int method (not shown) is like either Int31 or Int63 depending on the size of 'int'.
The JSON data is a summary of agl's changes in the go, webkit, and chromium open source projects.
The JSON marshallers are only here for API backward compatibility (programs that explicitly look for these two methods).
The JSON null value unmarshals into an interface, map, pointer, or slice by setting that Go value to nil.
The LOCK prefix is allowed in all modes, provided the corresponding CPUID bit is set.
The LOCK prefix only applies to certain instructions, and then only to instances of the instruction with a memory destination.
The Life Of A Write is like this:
The Linger struct is wrong but we only noticed after Go 1.
The Linux kernel puts the IP address in /proc/net/igmp in native endianness.
The LocalAddr method of the returned UDPConn can be used to discover the port.
The Lookup APIs use various sources such as local database, DNS or mDNS, and may use platform-dependent DNS stub resolver if possible.
The MAC is appended before padding so affects the payload size directly.
The MOVLQZX exists to avoid being confused for a MOVL that is just copying 32-bit data around during copyprop.
The MPEG Software Simulation Group disclaims any and all warranties, whether express, implied, or statuary, including any implied warranties or merchantability or of fitness for a particular purpose.
The MPEG Software Simulation Group does not represent or warrant that the programs furnished hereunder are free of infringement of any third-party patents.
The Mach-O binary is expected to start at position 0 in the ReaderAt.
The Mode field controls which tokens are recognized.
The More field should be set to non-zero if there is more information for this PC, zero otherwise.
The NDS/NDD/DDS part can be dropped, producing this Optab entry:
The NOP is needed to give the jumps somewhere to land.
The Next method advances to the next file in the archive (including the first), and then it can be treated as an io.Reader to access the file's data.
The Node.curfn field is supposed to be set to the current function already, but for some compiler-introduced names it seems not to be, so fix that here.
The Node.opt field is available for use by optimization passes.
The NumGoroutine and Stack below need to see the same state of the world, so anything we can do to keep it quiet is good.
The OID for the named curve may be provided from another source (such as the PKCS8 container) - if it is provided then use this instead of the OID that may exist in the EC private key structure.
The OS X 10.6 linker does not support external linking mode.
The OS-specific main calls into the portable code here.
The O_CLOEXEC flag was introduced in FreeBSD 8.3.
The O_CLOEXEC flag was introduced in OS X 10.7 (Darwin 11.0.0).
The Offset and Index fields are ignored and computed as they would be by the compiler.
The OnePassPrefix skips over the mandatory EmptyBeginText
The Op definitions and string list are in tables.go.
The Order fields record the order in which the examples were encountered.
The P got a new worker.
The P, L, and W fields are chosen to match their eventual locations in the VEX prefix bytes.
The PC field will be a value returned by a call to the traceback function.
The PC must be the last to be updated, because once it gets updated the new g is running.
The PLT stubs generated by the system linker on ppc64le when "std r2, 24(r1)" to save the TOC pointer in their callers stack frame.
The PNG specification is at http://www.w3.org/TR/PNG/.
The PNG specification says that the IHDR, PLTE (if present), tRNS (if present), IDAT and IEND chunks must appear in that order.
The POSIX rule is computationally prohibitive and not even well-defined.
The PREFETCH(obj) logic has been removed but seems like a nice optimization that can be added back in.
The PS padding must be at least 8 bytes long, and it starts two bytes into em.
The PUSH_PROMISE frame includes optional padding.
The Panic functions call panic after writing the log message.
The Parameters of the PrivateKey must already be valid (see GenerateParameters).
The Parse function sets both Path and RawPath in the URL it returns, and URL's String method uses RawPath if it is a valid encoding of Path, by calling the EscapedPath method.
The PkgPath of unexported fields of types defined in package main was incorrectly ""
The Plan 9 C compilers used a limit of 600 regions, but the yacc-generated parser in y.go has 3100 regions.
The Plan 9 binary is expected to start at position 0 in the ReaderAt.
The Priority is a combination of the syslog facility and severity.
The Proc-Type header must be written first.
The Process it returns can be used to obtain information about the underlying operating system process.
The Qualifier controls the printing of package-level objects, and may be nil.
The RGB to CMY inversion cancels out the 'Adobe inversion' described in the applyBlack doc comment above, so in practice, only the fourth channel (black) is inverted.
The Range request should be ignored.
The RawContents will contain the tag and length fields but we'll also be writing those ourselves, so we strip them out of bytes
The Read method is only in ScanState so that ScanState satisfies io.Reader.
The Read method on the returned reader always returns the full amount asked for, or else it returns an error.
The ReadAll will hang for a failing test, so use a Timer to fail explicitly.
The ReadCloser returned by NewReader also implements Resetter.
The ReadCloser returned by NewReaderDict also implements Resetter.
The ReadCloser's Close method must be used to release associated resources.
The Reader must be safe for use by multiple goroutines.
The Reader will return a ErrChecksum when Read reaches the end of the uncompressed data if it does not have the expected length or checksum.
The Reader's Next function return successive entries from a pre-order traversal of the tree.
The Reader.Header fields will be valid in the Reader returned.
The Request that was sent to obtain this Response.
The Request's URL and Header fields must be initialized.
The Request.Proto is always HTTP/1.1.
The Response Body is closed after it is sent.
The RoundTripper's type is used to determine whether the legacy CancelRequest behavior should be used.
The SIGPIPE signal will be delivered to the Notify channel, and the write will fail with an EPIPE error.
The SIGPROF signal is handled directly by the Go runtime to implement runtime.CPUProfile.
The SO_PASSCRED socket option is enabled on the sending socket for this to work.
The SSA backend might prefer the new length or to return only ptr/cap and save stack space.
The SSA backend once tried to do the load in f twice, once sign extended and once zero extended.
The SSA compiler uses this function to allocate space for spills.
The SSE4.2 implementation of this has code to deal with misaligned data so we ensure that we test that too.
The STOSQ in duffzero seem fine, though.
The Scan method is called for any argument to Scan, Scanf, or Scanln that implements it.
The SendMail function and the the net/smtp package are low-level mechanisms and provide no support for DKIM signing, MIME attachments (see the mime/multipart package), or other mail functionality.
The ServeHTTP Handler does not need to.
The Server will close the request body.
The Server, by default, will use the client's preference order.
The Server.ConnState hook for StateActive fires before the request has entered a handler and doesn't fire again until the request has been handled.
The SigVer.rsp file has been edited to remove test vectors for unsupported algorithms and has been compressed.
The Sort method's receiver is the function (closure) that defines the sort order.
The Spec type stands for any of *ImportSpec, *ValueSpec, and *TypeSpec.
The Stream* objects are so simple that all their members are public.
The String and RequestURI methods use EscapedPath to construct their results.
The String method is used to print values passed as an operand to any format that accepts a string or to an unformatted printer such as Print.
The String method's output will be used in diagnostics.
The Sub method subtracts two instants, producing a Duration.
The Syscall functions in package syscall pass their uintptr arguments directly to the operating system, which then may, depending on the details of the call, reinterpret some of them as pointers.
The TCB is two pointers.
The TEXT instruction annotation is implicit.
The TIFF file format uses a similar but incompatible version of the LZW algorithm.
The TLS field is set to a non-nil dummy value if target has scheme "https".
The TestMain function creates a go command for testing purposes and deletes it after the tests have been run.
The Timer type represents a single event.
The Trailer initially contains only nil values, one for each key specified in the server's "Trailer" header value.
The Transport will pass requests using the given scheme to rt.
The Type records the form of address expected in the bytes described by the previous fields: absolute, PC-relative, and so on.
The URI reference may be relative or absolute.
The UTF-8 sequence for a codepoint is never longer than 1 + the number hex digits need to represent that codepoint, so len(s) is an upper bound on the output length.
The Userinfo type is an immutable encapsulation of username and password details for a URL.
The VARDEF must appear before the actual (multi-instruction) initialization, and it must also appear after any uses of the previous value, if any.
The VM allocator wrapper functions can return ENOMEM easily.
The Value v may or may not have the flagMethod bit set, so the kind cached in v.flag should not be used.
The ValueConverters have several uses:
The Vector type has unexported fields, which the package cannot access.
The Wait method will return the exit code and release associated resources once the command exits.
The Whitespace field controls which characters are recognized as white space.
The Write method must be able to accept any amount of data, but it may operate more efficiently if all writes are a multiple of the block size.
The Write sizes are near the thresholds in the compressor.encSpeed method (0, 16, 128), as well as near maxStoreBlockSize (65535).
The WriteCloser's Close method must be used to flush pending data to w.
The Writer inserts padding as needed to make all cells in a column have the same width, effectively aligning the columns.
The Writer must buffer input internally, because proper spacing of one line may depend on the cells in future lines.
The Writers are wired together like:
The X in S11.S6 and S12.S6 annihilate, but they also block the X in S13.S8.S9.
The X in S6 and S7 annihilate, but they also block the X in S8.S9.
The XML element for a struct contains marshalled elements for each of the exported fields of the struct, with these exceptions: - the XMLName field, described above, is omitted.
The XMLName field records the XML element name.
The _ (blank) parameter cannot be accessed, so we don't need to export a package.
The _ means to import a package purely for its initialization side effects.
The _ would suppress the assignment to that argument while generating a call, so remove it.
The _Cgo_ptr function is defined in out.go and simply returns its argument.
The _W suffix indicates a general addressing mode based on the P and W bits.
The __attribute__((weak)) used below doesn't seem to work on Windows.
The _offset and _postindex suffixes force the given addressing mode.
The `C' array (used by the inverse BWT) needs to be zero initialized.
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
The above description skipped over the possibility of the gcc-compiled function f calling back into Go.
The above production uses greedy matching.
The absolute path name for a given file is not guaranteed to be unique.
The absolute value of a byte interpreted as a signed int8.
The access parameter specifies desired access rights to the key to be opened.
The access parameter specifies the access rights for the key to be created.
The acquirem/releasem increments m.locks during new(sudog), which keeps the garbage collector from being invoked.
The actions run in parallel but all the updates to the shared work state are serialized through b.exec.
The actual CPU hogging function.
The actual bytes laid down are a function of the 3rd entry in the line (that is, the Ztype) and the z bytes.
The actual checkmark bits are ignored, so the only work to do is to fix the pointer bits.
The actual decoding program is generated by ../x86map.
The actual maximum token size may be smaller as the buffer may need to include, for instance, a newline.
The actual read interface needed by NewReader.
The actual representation is not copied, but the name space of associated templates is, so further calls to Parse in the copy will add templates to the copy but not to the original.
The actual size is bounded by the value passed to SetMaxDynamicTableSizeLimit.
The actual test functions are in non-_test.go files so that they can use cgo (import "C").
The actual tests are index0.go, index1.go, index2.go.
The adb shell command will return an exit code of 0 regardless of the command run.
The add operation, implemented by the AddT functions, is the atomic equivalent of:
The added final argument corresponds to a fixed parameter of the function.
The added final argument corresponds to the variadic part.
The addend will be adjusted as required.
The additional rules are:
The addr must include a port, as in "mail.example.com:smtp".
The address must be of a compatible type for the network being dialed.
The address of a variable.
The addresses in the to parameter are the SMTP RCPT addresses.
The addresses must not overlap.
The addrs are of type net.IPAddr but can't actually be for circular dependency reasons.
The advantage is better representation of continuous tones.
The advantage of (3) is that s  and y  can be computed by i      i the following recurrence formula: if (3) is false
The affected logic is in the conditional branch for "mandatory" prefixes, case xCondPrefix.
The aggregated BenchmarkResults resemble running all subbenchmarks as in sequence in a single benchmark.
The algorithm and variable names comes from RFC 6724 section 6.
The algorithm decomposes into several steps.
The algorithm for doing that is taken from Sedgewick, Algorithms, Second Edition, p.
The algorithm is breadth first search, one depth level at a time.
The algorithm is breadth-first search over the set of structs to include - the top struct and then any reachable anonymous structs.
The algorithm needs O((M+N)*log(M)) calls to data.Swap.
The algorithm needs O(M*log(N/M + 1)) calls to data.Less.
The algorithm used to generate a key from the password was derived by looking at the OpenSSL implementation.
The algorithm uses at most sniffLen bytes to make its decision.
The algorithm's intellectual heritage includes Dijkstra's on-the-fly algorithm, see Edsger W.
The all.bash installation script sets it to make installation more efficient, but by default the flag is off so a plain "go test" will do a full test of the package.
The allocBits indicate which unmarked objects don't need to be processed since they were free at the end of the last GC cycle and were not allocated since then.
The allocated heap is already past the trigger.
The allocator's data structures are:
The already allocated f.intbuf with a capacity of 68 bytes is large enough for integer formatting when no precision or width is set.
The alternate "base32hex" encoding is used in DNSSEC.
The alternate signal stack is buggy on arm and arm64.
The analysis assumes that closures and the functions in which they appear are analyzed together, so that the aliasing between their variables can be modeled more precisely.
The analysis will fail if this invariant blindly changes.
The annotations are intended as guidelines only since a single Go grammar rule may be covered by multiple parse methods and vice versa.
The another-branch is the default that you get from 'git clone'.
The answer is that running a command is fork and exec.
The answer might be mostly making bufferBeforeChunkingSize smaller and having bufio's fast-paths deal with this instead.
The answers are correct for an optimizer or code generator, but not necessarily typechecking.
The answers come back in the two registers.
The answers were calculated to 26 digits (by using the "Digit number" drop-down control of each calculator).
The append built-in function appends elements to the end of a slice.
The appending is not byte aligned and the remaining bits in the last element of dst is given in rembits.
The approach here is to write 8 byte sizes if needed without adding a zip64 extra in the local header (too late anyway).
The approximant uses a rational function of degree 4/5 of the form x + x**3 P(x)/Q(x).
The archive file should have been created by the compiler.
The archive format is the traditional Unix ar format.
The archive is expected to look like:
The archive is known to be empty.
The archive is known to be sane and we are positioned at the end.
The arctangent ranges from -PI to +PI.
The arena begins with a bitmap large enough to hold 4 bits per allocated word.
The arenas are named relative to the current GC cycle which is demarcated by the call to finishweep_m.
The arg function provides the operand for the i'th argument.
The arg slots have already been offset by the appropriate amount (+2*widthptr for go/defer, +widthptr for interface calls).
The args are for any placeholder parameters in the query.
The args are the arguments after the command name.
The argument boolean, if true, suppresses the output if the user's argument is identical to the actual package path or is empty, meaning it's the current directory.
The argument finalizer must be a function that takes a single argument to which obj's type can be assigned, and can have arbitrary ignored return values.
The argument is converted into a Go string.
The argument is marked as not escaping at all.
The argument obj must be a pointer to an object allocated by calling new or by taking the address of a composite literal.
The argument p is either a pointer to the value (of type t), or the value itself, depending on indir.
The argument p points to a bool variable in which to store the value of the flag.
The argument p points to a float64 variable in which to store the value of the flag.
The argument p points to a string variable in which to store the value of the flag.
The argument p points to a time.Duration variable in which to store the value of the flag.
The argument p points to a uint  variable in which to store the value of the flag.
The argument p points to a uint variable in which to store the value of the flag.
The argument p points to a uint64 variable in which to store the value of the flag.
The argument p points to an int variable in which to store the value of the flag.
The argument p points to an int64 variable in which to store the value of the flag.
The argument pos must have been returned by a call to Tell on this line table.
The argument skip is the number of stack frames to ascend, with 0 identifying the caller of Caller.
The argument skip is the number of stack frames to skip before recording in pc, with 0 identifying the frame for Callers itself and 1 identifying the caller of Callers.
The argument tells whether an EOF is acceptable now.
The argument to the function (*struct).
The argumentation in the paper carries through for Swap operations, especially as the block swapping rotate uses only O(M+N) Swaps.
The arguments are an initial substring of the remaining unprocessed data and a flag, atEOF, that reports whether the Reader has no more data to give.
The arguments are indexed from 0 through flag.NArg()-1.
The arguments associated with a deferred call are stored immediately after the _defer header in memory.
The arguments have the same meaning as for Parse, but the source must be a valid Go (type or value) expression.
The arguments req and via are the upcoming request and the requests made already, oldest first.
The arguments to the directive are space-separated tokens or double-quoted strings passed to the generator as individual arguments when it is run.
The arguments to the underlying system call are the number below and a pointer to an array of uintptr.
The arguments to uintptraddr technically have an address but may not be addressable in the Go sense: for example, in the case of T(v).Field where T is a struct type and v is an addressable value.
The arithmetic value of a Number is the count of the nodes comprising the list.
The array contains replacement byte slices indexed by old byte.
The array contains replacement bytes indexed by old byte.
The array is in order of increasing frequency, and has as its last element a special element with frequency MaxInt32 maxBits     The maximum number of bits that should be used to encode any literal.
The arrays are filled in by InitSizes.
The assembler writes test output to this buffer.
The assignments are to temporaries, so they cannot be involved in races and need not be instrumented.
The assist ratio determines how this corresponds to scan work debt.
The associated templates share nt's common structure.
The associated value will be of type *Server.
The associated value will be of type net.Addr.
The association needs to be done at this early point because we need to process the I/O readiness notification at some point in the future.
The assumption is that we're very unlikely to get an asynchronous SIGTRAP at just the moment that the PC started to point at unmapped memory.
The atof argument is a type-specific reader for the underlying type.
The atof routines return NumErrors wrapping the error and the string.
The atoi routines return NumErrors wrapping the error and the string.
The attribute is implicitly indicated as present, and no value is encoded in the debugging information entry itself.
The authors of this software are Rob Pike and Ken Thompson.
The avarinit output serves as a signal that the data has been initialized, because any use of a variable must come after its initialization.
The average number of allocations over the specified number of runs will then be measured and returned.
The axes increase right and down.
The background sweeper goroutine simply sweeps spans one-by-one.
The backslash is used for escaping.
The banner is five lines so that when changes to different sections of the bootstrap script have to be merged, the banners give patch something to use to find its context.
The base argument must be 0 or a value between 2 and MaxBase.
The base argument must be 0 or a value from 2 through MaxBase.
The base offset must not be smaller than the FileSet's Base(), and size must not be negative.
The basic approach is to use a single uintptr as a bit buffer, alternating between reloading the buffer and writing bitmap bytes.
The basic idea is to switch on the presence of a prefix, so that for example:
The basic parse tree walker is a method of this type.
The basis of the dead code elimination is a flood fill of symbols, following their relocations, beginning at INITENTRY.
The before function records that information on the curfn stack.
The beginning and ending quote are not part of the field.
The behavior is the same as in 'go run'.
The behavior of Close after the first call is undefined.
The behavior of Do is undefined if f changes *r.
The behavior of Seek on a file opened with O_APPEND is not specified.
The below includes the wc (whitespace character) and nl.
The benchmark creates GOMAXPROCS client/server pairs.
The benchmark function must run the target code b.N times.
The benchmark stresses concurrent reading and writing to the same connection.
The best case winning is 8x regardless of block size.
The best reference for the differences between the Plan 9 format and the Go format is the runtime source, specifically ../../runtime/symtab.c.
The big.zip file is interesting because it has no zip64 header, much like the innermost zip files in the well-known 42.zip.
The biggest drawback to this solution is that it requires that we can tell whether it's safe to read from the memory pointed at by PC.
The bin directory holds compiled commands.
The bin/ directory holds compiled commands.
The binary exporter only exports blank as a non-exported identifier without qualification.
The binary expression e may be nil.
The binary file name, left here for serveSVGProfile.
The binary is generated in an otherwise empty subdirectory named exe to avoid naming conflicts.
The bit length of 0 is 0.
The bit length of Q must be a multiple of 8.
The bit mask to extract a single tag.
The bit twiddling below is equivalent to
The bitSize argument specifies the integer type that the result must fit into.
The bits are rotating through the bit buffer.
The bits for the first two words are in a byte shared with another object and must be updated atomically.
The bits have the same definition on all systems, so that information about files can be moved from one system to another portably.
The bloc name should be unique across the containing Fun.
The block based nature means that we can preallocate fixed-size buffers and reuse them.
The block containing S2 will be visited in a separate call.
The block includes the current character
The blocks are in natural (not zig-zag) order.
The blocks are sorted, so we can stop counting as soon as we reach the end of the relevant block.
The blocks are traversed one MCU at a time.
The blocksize of MD5 in bytes.
The blocksize of SHA1 in bytes.
The blocksize of SHA256 and SHA224 in bytes.
The body function will be run in each goroutine.
The body of the part should be written to the returned Writer.
The book-keeping structure hence grows logarithmically with the size of the stack and mark termination re-scans at most twice as much stack as necessary.
The boolean final argument reports whether it is possible that there may be more directories worth looking at.
The boolean functions take any zero value to be false and a non-zero value to be true.
The boolean is false when the scan is done.
The boolean ok is false if it was not possible to recover the information.
The boolean reports if any match was found.
The boolean reports whether the prefix is present.
The boolean return value reports whether to store this tree as t.Tree.
The boolean value ok is true if the value x corresponds to a send on the channel, false if it is a zero value received because the channel is closed.
The bootstrap command runs a build from scratch, stopping at having installed the go_bootstrap command.
The bootstrap sequence is:
The bottom frame is always correct as it is picked up from the signal structure, not the stack.
The boundary is usually obtained from the "boundary" parameter of the message's "Content-Type" header.
The bounds calculations for this loop are tricky.
The bounds do not necessarily contain the point (0, 0).
The branch information is all in the path names.
The browser would probably do this for us, but doing it ourselves is more reliable.
The buffer is stored with an extra indirection because it may be replaced if we load a type during decode (when reading an interface value).
The buffer must be at least a block long.
The buffer should always be empty now.
The buffer's backing array may be overwritten by later calls.
The buffers are being put on the full queue so that the write barriers will not simply reacquire them before the GC can inspect them.
The bug only occurs on Plan 9, because this C program is compiled by the standard host compiler (gcc on most other systems).
The bugs keep coming.
The build flags are shared by the build, clean, get, install, list, run, and test commands: -a force rebuilding of packages that are already up-to-date.
The build process links this stub, along with _cgo_export.c and *.cgo2.c, into a dynamic executable and then lets cgo examine the executable.
The build tag "netcgo" forces use of the cgo DNS resolver.
The built-in copy function is faster than a straightforward for loop to fill the destination with the color, but copy requires a slice source.
The built-in table is small but on unix it is augmented by the local system's mime.types file(s) if available under one or more of these names:
The builtin package needs special treatment: its symbols are lower case but we want to see them, always.
The builtins are already defined in the C prolog, and we don't want to duplicate function definitions we've already done.
The byte is shared with the next object so we may need an atomic.
The byte loop below assumes that all URLs use UTF-8 as the content-encoding.
The byte slice is not zeroed.
The byte slice or string that should be encoded is empty.
The byte-reversal means the exponent and high-precision part of the mantissa go first.
The byteq implementation is in net_nacl.go.
The bytes are taken from at most one Read on the underlying Reader, hence n may be less than len(p).
The bytes stop being valid at the next read call.
The bytes stop being valid at the next read.
The bytes to consume will be 1 if no closing paren is present.
The cached value is a uint32 in which the low bits are the "crash" and "all" settings and the remaining bits are the traceback value (0 off, 1 on, 2 include system).
The calendar runs on an exact 400 year cycle: a 400-year calendar printed for 1970-2469 will apply as well to 2370-2769.
The calendrical calculations always assume a Gregorian calendar.
The call inside g might return information about g's caller or information about f's caller or complete garbage.
The call is added to the end of the current block.
The call is coming from manual instrumentation of Go code running on g0/gsignal.
The call stubs need to live in .text, which is why we need to do this pass this early.
The call that started it will take care of it.
The call to getcallerpc and getcallersp must be done in the frame being asked about.
The call to loadImport inside download needs to do that.
The call to morestack cost a word.
The callee has already been analyzed, so its arguments have esc tags.
The caller asserts that the program emits n bits (describes n words), and Append panics if that is not true.
The caller can use f.Name() to find the pathname of the file.
The caller can use the Addr method of TCPListener to retrieve the chosen address.
The caller does not own the returned slice.
The caller has already opened filename, to get f, and read a few kB out, in data.
The caller has already opened filename, to get f, and read at least 4 kB out, in data.
The caller incremented nmspinning, but there are no idle Ps, so it's okay to just undo the increment and give up.
The caller incremented nmspinning, so set m.spinning in the new M.
The caller is also responsible for arranging that gp will be restarted using ready at an appropriate time.
The caller is expected to use cachePut to unlock the cache.
The caller is responsible for acquiring worldsema and disabling preemption first and then should stopTheWorldWithSema on the system stack:
The caller is responsible for locking around FixAlloc calls.
The caller must FixAlloc_Free the result.
The caller must be sure that the span is a MSpanInUse span.
The caller must call Regfree(a) to free r when the address is no longer needed.
The caller must call f.Close when the file is no longer needed.
The caller must call startTheWorld when other P's should resume execution.
The caller must call the statement's Close method when the statement is no longer needed.
The caller must copy the returned data before calling ReadTrace again.
The caller must eventually call notifyListWait to wait for such a notification, passing the returned ticket number.
The caller must have call gcCopySpans().
The caller must have set the ETag on the response already.
The caller must hold worldsema.
The caller must not retain the returned memory past the next call to ReadFrame.
The caller must own gp and ensure that gp isn't already on the rescan list.
The caller must own gp.
The caller must record the result.
The caller must save the returned data before calling CPUProfile again.
The caller must unlock the list by storing a new list head to extram.
The caller should call Close when finished, to shut it down.
The caller should call reimburseSweepCredit if that turns out not to be the case once the span is allocated.
The caller should close the DotWriter before the next call to a method on w.
The caller should close the writer before calling any more methods on c.
The caller typically invokes Accept in a go statement.
The caller typically invokes ServeConn in a go statement.
The caller wanted to only load the filename DLL from the System32 directory but that facility doesn't exist, so just load it the normal way.
The caller will be looking for that exit status, so just exit normally here to cause a failure in the caller.
The caller's program counter is lr, unless lr is zero, in which case it is *(uintptr*)sp.
The callers to the individual decoders are expected to have used decAlloc.
The calling context must be preemptible.
The calling function will jump to the standard return epilogue.
The calling program is assumed to be running.
The calls serve two purposes: 1) they are opaque to escape analysis, so the argument is considered to escape to the heap.
The calls to RawSyscall are okay because they are assembly functions that do not grow the stack.
The cap built-in function returns the capacity of v, according to its type: Array: the number of elements in v (same as len(v)).
The capacity of the slice is equal to its length.
The case expressions for IPv6 must come first.
The cast will fail, so y is zero initialized.
The certificate doesn't have any extended key usage specified.
The certificate is explicitly good for any usage.
The certificate is signed by parent.
The certificates must be concatenated with no intermediate padding.
The cfg argument is a slice of *BasicBlocks and the vars argument is a slice of *Nodes.
The cgo call may have caused a stack copy (via a callback).
The cgo program will rewrite all possibly bad pointer arguments to call cgoCheckPointer, where we can catch cases of a Go pointer pointing to a Go pointer.
The cgo tool is enabled by default for native builds on systems where it is expected to work.
The cgoCheckPointer call takes additional arguments indicating that it was called on an address expression.
The chain of function calls between must propagate the Context, optionally replacing it with a modified copy created using WithDeadline, WithTimeout, WithCancel, or WithValue.
The channel of all composites to be eliminated in increasing order.
The channel on which the ticks are delivered.
The channel used to read SIGIO signals.
The characters can only appear in string literals, so just scan the string one byte at a time.
The characters in s and the output are interpreted as UTF-8-encoded Unicode code points.
The chardata contained in the element (but not its children) is passed to the text unmarshaler.
The check for "orig_" here handles orig_eax in the x86 ptrace register sets, which otherwise have all fields with reg_ prefixes.
The checker is expected to do as much as it can with what it has been given.
The checking is controlled by the cgocheck setting of the GODEBUG environment variable.
The checks above are content-based staleness.
The checks below are mtime-based staleness.
The child node was just walked and possibly replaced.
The chksum field is terminated by a NUL and a space.
The choice of first child is arbitrary but repeatable.
The chosen r may be the stack pointer, it may be borrowed from res, or it may be a newly allocated register.
The chunkedReader returns io.EOF when the final 0-length chunk is read.
The ciphertext and dst may alias exactly or not at all.
The ciphertext should be signed before authenticity is assumed and, even then, consider that messages might be reordered.
The clean path must not be empty or dot (".").
The client accesses each method using a string of the form "Type.Method", where Type is the receiver's concrete type.
The client calls Close when finished with the connection.
The client calls WriteRequest to write a request to the connection and calls ReadResponseHeader and ReadResponseBody in pairs to read responses.
The client code runs in a subprocess.
The client didn't actually send a certificate
The client didn't include a session ticket, or it wasn't valid so we do a full handshake.
The client has included a session ticket and so we do an abbreviated handshake.
The client is doing a fallback connection.
The client may instead provide a custom split function.
The client should close itself, without sending data.
The client will introduce itself as "localhost" automatically otherwise.
The close built-in function closes a channel, which must be either bidirectional or send-only.
The close tells the connectionOpener goroutine to exit.
The closure is not called, so it is going to stay as closure.
The coalesced parameter is whether singleflight de-dupped the call.
The code assumes that both inputs contain ordered and non-intersecting rune pairs.
The code being tested is not OS-specific, so it does not need to be tested on all operating systems.
The code below to compute cr uses a similar pattern.
The code below to compute g and b uses a similar pattern.
The code encompassed by a Rgn is defined by the flow graph, starting at enter, flood-filling forward while varno is refahead and backward while varno is refbehind, and following branches.
The code for the second panic can be removed.
The code generation pass emits a CHECKNIL for every possibly nil pointer.
The code generator depends on being able to write out jump instructions that it can jump to now but fill in later.
The code in this file implements stack trace walking for all architectures.
The code in vcs.go should be changed so that it is not required.
The code invoking the linker knows to pass only the final path element.
The code is also needed in a few other places anyway.
The code is asking for the address of an external function.
The code is here for reference and for future experiments.
The code lengths are delta encoded from a 5-bit base value.
The code makes use of the fact that the zero value for a heap bitmap has no live pointer bit set and is (depending on position), not used, not checkmarked, and is the dead encoding.
The code values are assigned in literal order (not frequency order).
The codeLength is 1+i, so shift code by 8-(1+i) to calculate the high bits for every 8-bit sequence whose codeLength's high bits matches code.
The coherence checks between a test and the package it tests will report false positives if no non-test files have been provided.
The combination of Name, Kind, and Offset uniquely identifies a variable in a function stack frame.
The combination of PkgPath and Name uniquely identifies a method in a method set.
The command line flag -live causes this code to print debug information.
The command to evaluate as dot for the template.
The command-line package list, if present, must appear before any flag not known to the go test command.
The commands in lexical order.
The comment is for debugging only.
The comment markers have already been removed.
The comment started in the first column but is going to be indented.
The comment was prepared by DocReader, so it is known not to have leading, trailing blank lines nor to have trailing spaces at the end of lines.
The commented out code would round half to even instead of up, but that makes it time-zone dependent, which is a bit strange.
The comments are only on ast1 but we need to save the function bodies from ast2.
The comments show a version with fewer parens.
The common case, since nobody uses trailers.
The common methods Store and Deflate are built in.
The compare-and-swap operation, implemented by the CompareAndSwapT functions, is the atomic equivalent of:
The comparison algorithm assumes that all checks in progress are true when it reencounters them.
The comparison must be defined for the operands.
The compilation of a package records the relevant information to support both linking modes, leaving the decision to be made when linking the final binary.
The compiler always flattens embedded interfaces so there should be no difference between F and G.
The compiler cannot see that cgoAlwaysFalse is always false, so it emits the test and keeps the call, giving the desired escape analysis result.
The compiler does not know about the data structures and methods below.
The compiler doesn't emit initializations for zero-width parameters or results.
The compiler emits calls to printlock and printunlock around the multiple calls that implement a single Go print or println statement.
The compiler ensures that r is non-nil.
The compiler ensures that writes through up-pointers have an accompanying write barrier (it simply doesn't distinguish between writes through up-pointers and writes through heap pointers).
The compiler generates a symbol name using the string form of the type.
The compiler implements two-case select where one is default with custom code,
The compiler inserts a call to this at the end of any function which calls defer.
The compiler jumps to computed addresses within the routine to copy chunks of memory.
The compiler jumps to computed addresses within the routine to zero chunks of memory.
The compiler knows about this variable.
The compiler knows that a print of a value of this type should use printhex instead of printuint (decimal).
The compiler knows the exact layout of all the data structures above.
The compiler needs LSym to satisfy fmt.Stringer, because it stores an LSym in ssa.ExternSymbol.
The compiler only cares about direct imports, but the linker needs the whole dependency tree.
The compiler options are passed through uninterpreted when invoking the C compiler to compile the C parts of the package.
The compiler put a nop here for us to overwrite.
The compiler rewrites calls to this function into instructions that fetch the g directly (from TLS or from the dedicated register).
The compiler rewrites selects that statically have only 0 or 1 cases plus default into simpler constructs.
The compiler runs in the directory dir.
The compiler should work w/o any loss of functionality with the flag disabled, but the generated code will lose access to inlined function bodies across packages, leading to performance bugs.
The compiler turns a defer statement into a call to this.
The compiler turns a go statement into a call to this.
The compiler used to not realize this was a no-op, so it generated a call to the non-existent function runtime.convE2E.
The compiler was failing to correctly report an error when a dot expression was used a struct literal key.
The compiler will create the type structures for the derived types, including their GC metadata.
The compiler will generate the following code:
The compiler will lay out the code so that the if body occurs above the *x, so if the liveness info at the *x is used, it will find the liveness at the call to runtime.GC.
The compilers assume they can generate temporary variables as needed to preserve the right semantics or simplify code generation and the back end will still generate good code.
The compilers, assemblers, and linker must all agree on these values.
The complex built-in function constructs a complex value from two floating-point values.
The complexity is O(1).
The component's (h, v) is effectively always (1, 1): even if the nominal (h, v) is (2, 1), a 20x5 image is encoded in three 8x8 MCUs, not two 16x8 MCUs.
The compressed bytes are not necessarily flushed until the Writer is closed or explicitly flushed.
The compressed bytes are not necessarily flushed until the Writer is closed.
The compressed data written to w can only be decompressed by a Reader initialized with the same dictionary.
The compression level can be DefaultCompression, NoCompression, or any integer value between BestSpeed and BestCompression inclusive.
The concatenation we just parsed is on top of the stack.
The concrete type must be registered.
The concurrent GC will not scan the stack while we are doing the copy since the gp is in a Gcopystack status.
The conditional is to make sure that we don't generate a slice that points to the next object in memory.
The conditions are more general, though, and we may find that we need to do it always in the future.
The conditions here and in handoffp must agree: if findrunnable would return a G to run, handoffp must start an M.
The config cannot be nil: users must set either ServerName or InsecureSkipVerify in the config.
The configuration conf may be nil.
The configuration config must be non-nil and must include at least one certificate or else set GetCertificate.
The conflict cases here are completely undocumented and differ significantly between GNU libopcodes and Intel xed.
The connection gets released by the releaseConn function.
The connection is automatically closed when the function returns.
The connection must be closed after the reply is written, and no chunking is to be done.
The constant is known to runtime.
The constant is known to the compiler.
The constants "mask", "shift", and "bias" are found in src/math/bits.go Sqrt returns the square root of x.
The constants UpperCase and TitleCase are even while LowerCase is odd so we take the low bit from _case.
The constants expMin and expMax constrain the final value of the binary exponent of f.
The consumed result tells whether XML elements have been consumed from the Decoder until start's matching end element, or if it's still untouched because start is uninteresting for sv's fields.
The containing function
The content is expected to be all zeros.
The content's Seek method must work: ServeContent uses a seek to the end of the content to determine its size.
The contentLength is the corrected contentLength (so 0 means actually 0, not unknown).
The contents may not be zero.
The contents of input are right aligned in the new slice.
The contents of the slice should not be mutated.
The contents of this Table must not be modified.
The context function is called when a C function calls a Go function.
The context function may be nil, in which case the traceback function will only be called with the context field set to zero.
The context function will be called with a single argument, a pointer to a struct:
The contexts differ only by jsCtx.
The contexts differ only by urlPart.
The convenience function Dial (DialHTTP) performs both steps for a raw network connection (an HTTP connection).
The convention is to use a 'import/path.' prefix to create separate name spaces for each package.
The conventional OK bool indicates whether the receive corresponds to a sent value.
The conversion allocates, so only do it if the concrete type is huge.
The conversion argument types are final.
The conversion may be lossy.
The copy built-in function copies elements from a source slice into a destination slice.
The copy is owned by the caller and can be modified and held indefinitely.
The correct mapping can be done by clearing or setting the low bit in the sequence offset.
The corresponding Position value for NoPos is the zero value for Position.
The count is already consumed by another goroutine, so no need to wake up another goroutine.
The count of files inside a zip is truncated to fit in a uint16.
The counter is published as a variable directly.
The coverage output will appear in the output directly.
The created images' pixels are initialized to non-zero values.
The crypto/tls package uses the same interfaces and similar Dial and Listen functions.
The cumulative count of lines processed.
The current AES hash function passes Smhasher.
The current and next slices are work queues: current lists the fields to visit on this depth level, and next lists the fields on the next lower level.
The current approach: We unpark an additional thread when we ready a goroutine if (1) there is an idle P and there are no "spinning" worker threads.
The current deadline is already sooner than the new one.
The current implementation for little endian architectures is based on xadduintptr(), which is less than ideal: xadd64() should really be used.
The current implementation is safe, in that it will execute correctly.
The current line number is top of stack
The current live flag value the pre-flagalloc copy).
The current row for y is the previous row for y+1.
The current version, in which dropm happens on each cgo call, is still correct too.
The currently used stack includes everything down to the SP plus the stack guard space that ensures there's room for nosplit functions.
The cutoff is sys.PtrSize*8 - 7 to guarantee that when we add the pattern to a bit buffer holding at most 7 bits (a partial byte) it will not overflow.
The d and e are not in a column at all (there's no terminating tab, nor would the column be contiguous).
The data appended to dst does not begin with the prefix nor any indentation, to make it easier to embed inside other formatted JSON data.
The data is all zeros except for a single one in one location.
The data is arranged into an array of buckets.
The data is encoded as a byte slice.
The data is sent as a byte array.
The data reader position must be the beginning of the export data section.
The data returned by readFlush must be fully consumed before calling any other dictDecoder methods.
The data should be in standard TLS format with a 2-byte uint16 type, 2-byte data length, followed by the extension data.
The data structure for decoding Huffman tables is based on that of zlib.
The day of the week is checked for syntax but it is otherwise ignored.
The daysIn function is not exported.
The ddd argument does not live beyond the call it is created for.
The de Bruijn constant is such that all six bit, consecutive substrings are distinct.
The deadcode pass will remove vestigial values, and the fuse pass will join this block with its successor.
The deadline applies to all future I/O, not just the immediately following call to Read or Write.
The debug info encodes value locations like 8(R3) as a sequence of these op codes.
The debug information needs accurate offsets on the symbols.
The debug parameter enables additional output.
The decimal point amounts to a division by b**(-fcount).
The decimal values may be used, provided that the compiler will convert from decimal to binary accurately enough to produce the hexadecimal values shown.
The decision is made using only the operating system and the -shared flag, not the link mode.
The declaration of x is a shadow because x is mentioned below.
The decode method returns a slice indexed by field number that gives the function to decode that field.
The decode will fail unless the concrete type on the wire has been registered.
The decodeOps correspond to consuming and conditionally branching on input bytes, consuming additional fields, and then interpreting consumed data as instruction arguments.
The decoded bytes of the contents.
The decoder introduces its own buffering and may read data from r beyond the JSON values requested.
The decodetype_* functions in decodetype.go need access to the type data.
The decoding side works through typeIds and userTypeInfos alone.
The decompressor.huffSym function will fail later if the tree is used.
The decrypt function code is equal to the function code + 128.
The deeper the stacks, the more stack barriers help.
The default Error method only shows the first error.
The default HTTP client's Transport does not attempt to reuse HTTP/1.0 or HTTP/1.1 TCP connections ("keep-alive") unless the Body is read to completion and is closed.
The default HTTP/1.x and HTTP/2 ResponseWriter implementations support Flusher, but ResponseWriter wrappers may not.
The default ResponseWriter for HTTP/1.x connections supports Hijacker, but HTTP/2 connections intentionally do not.
The default Source is safe for concurrent use by multiple goroutines.
The default configuration should reject an S/MIME chain.
The default format is inferred from GOOS and GOARCH.
The default is "set" unless -race is enabled, in which case it is "atomic".
The default is 0 (unlimited).
The default is 1 second (1s).
The default is 10 minutes (10m).
The default is 300ms.
The default is NoClientCert.
The default is for each test to analyze only the package being tested.
The default is no timeout.
The default is the current value of GOMAXPROCS.
The default is the number of CPUs available.
The default is the page size for the architecture.
The default is to print the arguments in reverse Intel order.
The default is true (no delay), meaning that data is sent as soon as possible after a Write.
The default lowest and highest continuation byte.
The default output prints one line per symbol, with three space-separated fields giving the address (in hexadecimal), type (a character), and name of the symbol.
The default precision for each verb is specified as last argument in the call to fmt_float.
The default set of command-line flags is controlled by top-level functions.
The default split function is ScanLines.
The default stack reserve size affects only the main thread, ctrlhandler thread, and profileloop thread.
The default type for untyped nil is untyped nil.
The default, none, is correct for the vast majority of applications.
The defer arg areas are scanned as part of scanstack.
The defer cannot be used after this call.
The deferred func recovers from the error and returns, making memcopy return the current value of n.
The define action names the template being created by providing a string constant.
The defined file mode bits are the most significant bits of the FileMode.
The definition of MaxSmallSize and the algorithm in msize.go produces some number of different allocation size classes.
The definition of cheap is that n is a variable or constant.
The definition of space is set by unicode.IsSpace.
The definitions of those identifiers, written as Go functions, types, or variables, are provided in _cgo_gotypes.go.
The denominator is evaluated by its Taylor series near these points.
The described object has a finalizer set for it.
The described object is being heap profiled.
The description of what this test is supposed to test
The description will typically contain something like a time stamp or version number.
The descriptor was reused or timers were reset.
The destination is assumed to have enough space.
The destination port number is irrelevant.
The details vary depending on the underlying system, and by default, godoc will display the syscall documentation for the current system.
The detection is opportunistically, so we want it to panic at least in one run out of a million.
The dictionary may be nil.
The diff shows common lines prefixed by a tab, lines present only in haveText prefixed by "unexpected: ", and lines present only in wantText prefixed by "missing: ".
The difference between MRC and MCR is represented by a bit high in the word, not in the usual way by the opcode itself.
The difference between this estimate and the GOGC-based goal heap growth is the error.
The differences between the kernel form and the NLRI encoding are:
The direction of a channel is indicated by one of these constants.
The direction of a channel type is indicated by one of the following constants.
The direction will be one of Crecv, Csend, or Cboth.
The directives are copied into the .o object file and then processed by the linker.
The directory in which to create profile files and the like.
The disassembler is expected to produce the given syntax and be run in the given architecture mode (16, 32, or 64-bit).
The distinction affects which checks are run.
The div is not expected to be reached.
The doc comment on the import of "C" provides additional context for the C file.
The docs for Server.Close say we wait for "outstanding requests", so we don't close things in StateActive.
The documentation for ServeMux explains how patterns are matched.
The documentation for http.Request.Write details which fields of req are included in the dump.
The documentation here focuses on the security features of the package.
The dollar sign is part of the (first) name.
The domain must domain-match host: www.mycompany.com cannot set cookies for .ourcompetitors.com.
The done channel will signal when the call is complete by returning the same Call object.
The drop through should flow to the selectgo block and the branch should lead to the select case statements block.
The dst.Set equivalent is a batch version of the algorithm used by color.Palette's Index method in image/color/color.go, plus optional Floyd-Steinberg error diffusion.
The dynamic header is on by default, even without any references to dynamic libraries, because many common system tools now assume the presence of the header.
The dynamic linker stores the address of the dynamic resolver and the DSO identifier in the two doublewords at the beginning of the .plt section before the PLT array.
The earlier index entries are the indices of the anonymous struct fields traversed to get to the found entry, starting at depth 0.
The earlier index entries are the indices of the embedded fields implicitly traversed to get from (the type of) x to f, starting at embedding depth 0.
The earlier panic or Goexit will not continue running.
The easiest fix: cut everything in the name before the initial _.
The easiest thing to do is just call a function that crashes if it doesn't get an *rtype.
The effect can be seen, for example, as time.Sleep(100ms) is actually shorter then 100ms when measured as difference between time.Now before and after time.Sleep call.
The effect is that deferreturn is called again and again until there are no more deferred functions.
The effect is that the concatenation of a sequence of gzipped files is treated as equivalent to the gzip of the concatenation of the sequence.
The effective memory address is R or R+X depending on AddrMode.
The efficacy of this pass depends heavily on the efficacy of the cse pass.
The element is not a perfect match for any field, but one or more fields have the path to this element as a parent prefix.
The element is then cached into the svgRoot global variable.
The element must have been finished, so the EOF should be at the top of the stack.
The element nodes in lexical order.
The elements in a file path are separated by slash ('/', U+002F) characters, regardless of host operating system convention.
The embedding of types within structs imposes a tree structure onto types: structs parent the types they embed, and types parent their fields or methods.
The emitFunc will be called for each valid field parsed, in the same goroutine as calls to Write, before Write returns.
The empty string is mapped to index 0.
The empty string must be preserved inside parens in order to make submatches work right, so these tests are less interesting than they might otherwise be.
The empty values are false, 0, any nil pointer or interface value, and any array, slice, map, or string of length zero.
The encode method encodes its receiver into the given buffer.
The encode will fail unless the concrete type has been registered.
The encoded bytes are not necessarily flushed until the Writer is closed.
The encoded form is: -----BEGIN Type----- Headers base64-encoded Bytes -----END Type----- where Headers is a possibly empty sequence of Key: Value lines.
The encoding could be more dense: a full 64-bit value needs an extra byte just to hold bit 63.
The encoding handles 4-byte chunks, using a special encoding for the last fragment, so Encode is not appropriate for use on individual blocks of a large data stream.
The encoding is a simple Lempel-Ziv program, with codes to emit literal bits and to repeat the last n bits c times.
The encoding is a simple Lempel-Ziv style bytecode machine with the following instructions:
The encoding is the same as returned by String.
The encoding looks similar to the NLRI encoding.
The encoding of objects is straight-forward: Constants, variables, and functions start with their name, type, and possibly a value.
The encoding pads the output to a multiple of 4 bytes, so Encode is not appropriate for use on individual blocks of a large data stream.
The encoding pads the output to a multiple of 8 bytes, so Encode is not appropriate for use on individual blocks of a large data stream.
The end-of-line marker is one optional carriage return followed by one mandatory newline.
The entire frame (not just the return values) is described by typ.
The entire log needs to be delivered in a single syscall (the NDK does this with writev).
The entire test file is presented as the example when it contains a single example function, at least one other function, type, variable, or constant declaration, and no test or benchmark functions.
The entry block maps to nil.
The entry point for the missing selectgo control flow algorithm.
The env command prints the default environment.
The eqclass slices are backed by the same storage as the input slice.
The err will be set to io.EOF only when one of the following occurs: Exactly 0 bytes are read and EOF is hit.
The error built-in interface type is the conventional interface for representing an error condition, with the nil value representing no error.
The error from the first address is most relevant.
The error is EOF only if no bytes were read.
The error is ErrBufferFull if n is larger than b's buffer size.
The error is errNeedMore if p doesn't contain a complete integer.
The error message should be plain text.
The error must be non-nil.
The error returned will be nil if the level is valid.
The error should have drained the input.
The error will be guaranteed to contain syscall.Errno.
The errors are always accumulated, though.
The errors in the calls there to Getpeername are discarded, but we can't catch the problem there because those calls are sometimes legally erroneous with a "socket not connected".
The escape analysis can be more precise when analyzing a single non-recursive function than when analyzing a set of mutually recursive functions.
The escape analysis isn't smart enough to realize this function doesn't mutate h.
The escaping is contextual, so actions can appear within JavaScript, CSS, and URI contexts.
The estimate may be too low by at most one month, so adjust.
The event numbering must start at 0 and increment without skipping.
The eviction mechanism uses the length of the decoded literal values, so the same evictions occurs as in the previous section."
The exact function names are not going to be the same.
The exact meaning of this data is up to the client and is not interpreted by the cmd/internal/obj/...
The exact method of division of a binary into separate Objs is an internal detail of the symbol table format.
The exact temporary names are inconsequential but we are trying to check that there is only one at any given site, and also that none show up in "ambiguously live" messages.
The example that triggered this rule.
The example that we observed is inlining of LockOSThread, which lead to false race reports on m contents.
The example used to panic because it tries calling a nil function instead of assigning to f before.
The exception is a degenerate case where the tree has only a single symbol with length 1.
The exception is ranging over an array value (not a slice, not a pointer to array), which must make a copy to avoid seeing updates made during the range body.
The executable example for time.Format demonstrates the working of the layout string in detail and is a good reference.
The exit condition should be tested when allocating.
The expansions are listed in nameToC and also struct_foo becomes "struct foo", and similarly for union and enum.
The expect argument, if non-negative, identifies what the value should be.
The expected results below were computed by the high precision calculators at http://keisan.casio.com/.
The exponential func is called for arguments greater in magnitude than 0.5.
The export data representation is like for F.
The exported fields are cleared up to facilitate testing.
The exported fields can be changed to customize the details before the first call to Read or ReadAll.
The exported fields can be changed to customize the details before the first call to Write or WriteAll.
The exported functions are the first C functions, so we use that.
The exporter and importer are completely symmetric in implementation: For each encoding routine there is a matching and symmetric decoding routine.
The extdis function must start the external disassembler and then parse its output, sending the parsed instructions on ext.Dec.
The extension ext should begin with a leading dot, as in ".html".
The extension name is case-insensitive.
The extension should begin with a leading dot, as in ".html".
The extent is undefined for Universe and package scopes.
The extra M must be created before any C/C++ code calls cgocallback.
The extra level of indirection ensures that no clients of os can overwrite this data, which could cause the finalizer to close the wrong file descriptor.
The fact that it is partial is very important: the input is an AST and a description of some type information to assume about one or more packages, but not all the packages that the program imports.
The fact that it works at all today is probably due to the fact that ODOT and OINDEX are irrelevant.
The factor of r can then be removed by multiplying by the multiplicative inverse of r.
The failure prints stack traces for all goroutines if there is no current goroutine or the failure is internal to the run-time.
The fdct function already does a scale and level shift.
The field is a function (not a method) that may be changed to point to a custom error handler.
The field may be changed at any time.
The field number has already been read (it's how we knew to call this decoder).
The field number is defined by the type of the encoded struct: the first field of the encoded type is field 0, the second is field 1, etc.
The field number is initialized to -1 so 0 comes out as delta(1).
The field semantics differ slightly between client and server usage.
The field value is sent using the standard gob encoding for its type, recursively.
The fields are sorted in increasing index-length order.
The fields are sorted in primary order of name, secondary order of field index length.
The fields are space-padded on the right.
The file contains tests that cannot run under race detector for some reason.
The file data - size bytes - follows the header.
The file data that follows is padded to an even number of bytes: if size is odd, an extra padding byte is inserted betw the next header.
The file descriptor is valid only until f.Close is called or f is garbage collected.
The file is accepted only if each such line lists something matching the file.
The file layout and meaning of type integers are architecture-independent.
The file name can be changed with the -o flag.
The file set is provided to the printer so that it knows about the original source formatting and can add additional line breaks where they were present in the source.
The file system need never be written to disk, so it is represented as in-memory Go data structures, never in a serialized form.
The file will be excluded from regular package builds but will be included when the ``go test'' command is run.
The file's contents must be written to the io.Writer before the next call to Create, CreateHeader, or Close.
The file's data can then be read into a slice of bytes.
The filename is only used in error messages.
The filename used in error messages is the empty string.
The filenames variable is declared in reader_test.go.
The files are walked in lexical order, which makes the output deterministic but means that for very large directories Walk can be inefficient.
The files in the testdata directory are parsed and the errors reported are compared against the error messages expected in the test files.
The files might be on a remote filesystem, though.
The files must contain PEM encoded data.
The final argument must be zero.
The final five FCHECK bits form a mod-31 checksum.
The final part (the Content-Type: message/external-body) is what App Engine replaces the uploaded file with.
The final record may optionally be followed by a newline character.
The final two arguments are the VEX prefix (see encoding above) and the opcode byte.
The finalizer for obj is scheduled to run at some arbitrary time after obj becomes unreachable.
The finalizer goroutine is kicked off only when all spans are swept.
The finalizer resurrects that object.
The first 11 bytes will be populated later in writeLogdHeader.
The first 4 bytes is a nameOff for the method name, and the next 4 bytes is a typeOff for the function type.
The first SIGHUP should be waiting for us on c.
The first address, and any with a matching label, are returned as primaries, while addresses with the opposite label are returned as fallbacks.
The first argument is a type, not a value, and the value returned is a pointer to a newly allocated zero value of that type.
The first argument is the conditional jump instruction corresponding to the desired value.
The first argument must be a full package path.
The first argument must be the result of an evaluation that yields a value of function type (as distinct from a predefined function such as print).
The first block is special because it uses the saved iv.
The first byte in the binary export format is a 'c' or 'd' specifying the encoding format.
The first byte is a bit field containing:
The first byte is included with the request headers Write.
The first byte of the literal has been read already (that's how the caller knows it's a literal).
The first byte we write out covers the first four words of the object.
The first call to ReadContinuedLine will return "Line 1 continued..." and the second will return "Line 2".
The first call to signal_enable is for us to use for initialization.
The first case is handled by the flood fill, a directly called method is marked as reachable.
The first code sent is always a literal code.
The first column has no column to the left of it, so it is a special case.
The first column is 0.
The first entry is all zeros.
The first equals separates the key from the value.
The first field is the number of entries and is always present.
The first four bits is the CINFO (compression info), which is 7 for the default deflate window size.
The first half of this file defines the DNS message formats.
The first increment must be synchronized with Wait.
The first indirection allows us to reduce static size of hmap.
The first is hb, the rest are zero.
The first is the cgo tool, which is part of the Go distribution.
The first iteration should return the +0 key.
The first key is used for new tickets and any subsequent keys can be used to decrypt old tickets.
The first key will be used when creating new tickets, while all keys can be used for decrypting tickets.
The first length code.
The first line must begin with "go object ".
The first line starts with the code and a hyphen.
The first list must not be empty.
The first nibble is an index into acceptRanges or F for special one-byte cases.
The first nibble no longer holds the typeDead pattern indicating that the there are no more pointers in the object.
The first parameter (output) specifies the filter output.
The first part of this method is the same as YCbCr.RGBA.
The first rule means that a build of the godoc binary, which uses net but no other cgo, can run without needing gcc available.
The first run must wait for all builds.
The first string literal or string constant is assumed to be a format string if the call's signature cannot be determined.
The first sunk spill will be the original, but moved, to an exit block, thus ensuring that there is a definition somewhere corresponding to the original spill's uses.
The first table contains (x,y) field element pairs for 16 multiples of the base point, G.
The first three entries correspond to standard input, standard output, and standard error.
The first time the function is called for a particular traceback, all the fields except PC will be 0.
The first tuple is aligned to a multiple of the size of a single tuple (twice the size of an address)
The first varint is 40*value1 + value2: According to this packing, value1 can take the values 0, 1 and 2 only.
The first walk fills in ExpFunc, and the second walk changes the entries to refer to ast2 instead.
The first word dumped is the total number of bitmaps.
The first word in a global variable or in an allocated struct or slice can be relied upon to be 64-bit aligned.
The first word in the entry is an index into what DWARF calls the ``abbreviation table.''  An abbreviation is really just a type descriptor: it's an array of attribute tag/value format pairs.
The first word in the line is taken to be the command name.
The first word in the struct is the *itab.
The first word is the command name itself.
The first words are a header with the following data: 1st word -- 0 2nd word -- 3 3rd word -- 0 if a c++ application, 1 if a java application.
The first zero in the array marks the end of the prefixes.
The fix for issue 8962 introduced a regression.
The flag accepts a value acceptable to time.ParseDuration.
The flag argument defines the logging properties.
The flag handling part of go test is large and distracting.
The flag is set by git and has to be removed.
The flags -unusedfuncs and -unusedstringmethods control the set.
The floating-point value.
The flush result indicates if a newline was written or if a formfeed was dropped from the whitespace buffer.
The fmt package treats Values specially.
The fmt package's Errorf function lets us use the package's formatting features to create descriptive error messages.
The fmtbody flag is intended to suppress escape analysis annotations when printing a function type used in a function body.
The following are new in DWARF 3.
The following are new in DWARF 4.
The following are only valid if children is nil:
The following are out of bounds.
The following article describes an efficient (but much more complicated) implementation compatible with the internal representation used here:
The following bounds should not be removed because they can overflow.
The following code runs only on g0 stack.
The following complex 3-stage scheme of stats accumulation is required to obtain a consistent picture of mallocs and frees for some point in time.
The following ensures that we are rigorous about what data structures hold valid pointers.
The following errors do not correspond to any Plan 9 system messages.
The following example shows how to maintain a scalable frequently read, but infrequently updated data structure using copy-on-write idiom.
The following example shows how to use Value for periodic program config updates and propagation of the changes to worker goroutines.
The following fields are protected by the hchan.lock of the channel this sudog is blocking on.
The following flags are recognized by the 'go test' command and control the execution of any test: -bench regexp Run (sub)benchmarks matching a regular expression.
The following flags turn off heuristics that suppress seemingly identical reports.
The following functions are defined in gcm_amd64.s.
The following functions write specific events to trace.
The following if is merely to use (but not leak) k.
The following initializer should not be part of init() The compiler used to generate a call to Panic() in init().
The following is an invalid 1x2 grayscale PNG image.
The following line is required to unblock Reads.
The following logic prevents Join from inadvertently creating a UNC path on Windows.
The following loop eliminates this overlap.
The following members are accessed on every malloc, so they are grouped here for better caching.
The following members of template are used: Subject, Attributes, SignatureAlgorithm, Extensions, DNSNames, EmailAddresses, and IPAddresses.
The following methods all refer to the most recent token returned by Next.
The following node and object types may appear:
The following node types may appear in Scopes:
The following numeric types are supported: Int    signed integers Rat    rational numbers Float  floating-point numbers The zero value for an Int, Rat, or Float correspond to 0.
The following options are available when running cgo directly: -dynimport file Write list of symbols imported by file.
The following pattern uses the upper two bits in the object's boundary nibble.
The following patterns involving Pointer are valid.
The following relationship exists between a Pos value p for a given file offset offs:
The following routine accomplishes that.
The following sequence of Match calls used to panic.
The following slices are reused across multiple users of stackAllocState.
The following table accumulates these values.
The following table contains the amounts added to each word (as an offset from the value of i at the top of the loop).
The following table may be helpful when reading this code:
The following tags on struct fields have special meaning to Unmarshal:
The following test cases are cribbed from the strconv
The following test should not panic.
The following tests all have a nil mask.
The following tests all have a non-nil mask.
The following three arch specific relocations are only for generation of Linux/ARM ELF's PLT entry (3 assembler instruction)
The foo/ is stripped so that you can add DIR/bin to your PATH to get at the installed commands.
The for loop either exits when a work buffer is found or when _all_ of the work.nproc GC helpers are in the loop looking for work and thus not capable of creating new work.
The form of the params is the same as the field tags.
The format 'verbs' are derived from C's but are simpler.
The format is generic in the sense that different compilers can use the same representation.
The format is heavily biased toward C, but for simplicity the String methods use a pseudo-Go syntax.
The format is one of:
The format of that part is defined in a comment at the top of src/liblink/objfile.c.
The format of the dump matches the output of `hexdump -C` on the command line.
The format of the dumped file is described at https://golang.org/s/go15heapdump.
The format of the hex dump matches the output of `hexdump -C` on the command line.
The format of the input is determined by the verb.
The format of the sparse map consists of a series of newline-terminated numeric fields.
The format of this line is subject to change.
The format of this representation is compiler specific.
The format specifiers here make sure that the ones digits line up for all three possible formats.
The formatted result must look the same as the input for successful tests.
The former is a bug in tracer, the latter is a machine issue.
The former is not resolved by the parser or the resolver.
The formfeed character acts like a newline but it also terminates all columns in the current line (effectively calling Flush).
The formula used depends on whether the JPEG image is stored as CMYK or YCbCrK, indicated by the APP14 (Adobe) metadata.
The fractional worker is necessary when GOMAXPROCS*gcGoalUtilization is not an integer.
The fractional worker should run until it is preempted and will be scheduled to pick up the fractional part of GOMAXPROCS*gcGoalUtilization.
The frame does not contain pointers interesting for GC, all not yet finalized objects are stored in finq.
The frame includes an LR.
The frequency of the last node at this level
The frequency of the next character to add to this level
The frequency of the next pair (from level below) to add to this level.
The frontend gets rid of the write barrier to enable the special OAPPEND handling above, but since this is not a special case, we need it.
The full URL of the request from which Set-Cookie headers where received
The full path to the file where the error is the most important thing.
The full range of spacing (the CFWS syntax element) is not supported, such as breaking addresses across lines.
The full stack test cases for IPConn have been moved to the following: golang.org/x/net/ipv4 golang.org/x/net/ipv6 golang.org/x/net/icmp
The func obvious below checks for out-of-order constant indexes.
The funcLookupCache caches FuncOf lookups.
The function "In" provides a nicer signature and should be used in preference to IsOneOf.
The function checks whether that is followed by a sign and a number in the range -14 through 12 excluding zero.
The function is a variable that may be changed to point to a custom function.
The function is never called with an empty data slice unless atEOF is true.
The function is used to test preemption at split stack checks.
The function may return early (before the entire result is written) and return a formatting error, for instance due to an incorrect AST.
The function must be able to log/abort w/o crashing/deadlocking the whole benchmark.
The function must not keep a copy of the struct pointer between calls.
The function must return 1 result, or 2 results, the second of which is an error.
The function must return a RoundTripper that then handles the request.
The function must return either one or two result values, the second of which is of type error.
The function oclass in span.c computes the specific Ytype of an operand and then the set of more general Ytypes that it satisfies is implied by the ycover table, set up in instinit.
The function reads the profile and produces as output the coverage data broken down by function, like this:
The function returns full path to the created program.
The function returns the field name.
The function returns the size in bits and whether the block fits inside a single block.
The function should fill in the other fields if possible, setting them to 0/nil if the information is not available.
The function should store a zero to indicate the top of the stack, or that the caller is on a different stack, presumably a Go stack.
The function table is a list of 2*nfunctab+1 uintptrs, alternating program counters and offsets to func structures.
The function to split the tokens.
The function used here must match the one used in makeMethodValue.
The function will panic if keys is empty.
The functions JoinHostPort and SplitHostPort manipulate addresses in this form.
The functions repeatedly generate a pseudo-random number such that low bits are equal to high bits, swap, check that the old value has low and high bits equal.
The fundamental interface is called Image.
The g is updated last, at the beginning of the handler.
The garbage collector scales well to 32 cpus.
The gc compiler implementation uses the minimally required 32bit binary exponent, so these constants cannot be represented anymore internally.
The gc compilers know to do that for the name "reflect.callMethod".
The gc compilers know to do that for the name "reflect.callReflect".
The gc runtime imposes a limit of 64 kB on channel element types.
The gc toolchain only permits C source files with cgo.
The gcBitsArenas.previous is released to the gcBitsArenas.free list.
The gcBlackenEnabled check in malloc races with the store that clears it but an atomic check in every malloc would be a performance hit.
The gcWork interface caches a work buffer until full (or empty) to avoid contending on the global work buffer lists.
The gcbits mark each pointer value.
The gcc struct will be compiled with __attribute__((packed)) so all padding must be accounted for explicitly.
The gcc-compiled C function f calls GoF.
The gccgo compiler did not reliably report mismatches between the number of function results and the number of expected results.
The gccgo compiler had a bug: if one file in a package did a dot import, then an earlier file in the package would incorrectly resolve to the imported names rather than reporting undefined errors.
The gccgo compiler had a bug: mentioning a function type in an expression in a function literal messed up the list of variables referenced in enclosing functions.
The gccgo compiler used to crash building a comparison between an interface and an empty struct literal.
The gccgo compiler would fail on the import statement.
The gccgo lexer had a bug handling nested comments.
The gccgo sources have a syslog_solaris.go file that implements unixSyslog to return a type that satisfies this interface and simply calls the C library syslog function.
The gccgo version of TestTwoGopathShlibs: build a GOPATH package into a shared library with gccgo, another GOPATH package that depends on the first and an executable that links the second library.
The gccgo-specific init data for a package.
The gcmarkBits are replaced with a fresh zeroed out memory.
The gcphase is _GCmark, it will transition to _GCmarktermination below.
The general code handles those cases correctly, and they are rare enough not to bother optimizing (and needing to test).
The general form of the result is one of:
The general form represented is:
The general format for profilez samples is a sequence of words in binary format.
The general format is the same as a Go archive file, but it has an armap listing symbols and the objects that define them.
The general forms and their encodings are:
The generate function calls its argument f once for each byte sequence to be tested.
The generate function itself will be called twice, and it must make the same sequence of calls to f each time.
The generated code checks that the result is not nil.
The generated code implements a function of type func (v *Value) bool which returns true iff if did something.
The generated code is added to Curfn's Enter and Exit lists.
The generated code is just going to panic, so it need not be terribly efficient.
The generated files contain type information about the symbols exported by the package and about types used by symbols imported by the package from other packages.
The generated main also imports testing, regexp, and os.
The generated parser is reentrant.
The generator is run in the package's source directory.
The generator uses the X9.31 algorithm with AES-128, reseeding after every 1 MB of generated data.
The given regular expression is split into smaller ones by top-level '/', where each must match the corresponding part of a benchmark's identifier.
The global variable map is locked during the iteration, but existing entries may be concurrently updated.
The global work list is empty, but there can still be work sitting in the per-P work caches and there can be more objects reachable from global roots since they don't have write barriers.
The go code is a modified version of the original C code from http://www.netlib.org/fdlibm/s_cbrt.c and came with this notice.
The go code is a simpler version of the original C.
The go code is a simplified version of the original C.
The go code is a version of the original C.
The go command attempts to download the version of the package appropriate for the Go release being used.
The go command builds most objects in a temporary directory, so go clean is mainly concerned with object files left by other tools or by manual invocations of go build.
The go command diagnoses this situation and prints a useful error.
The go get command variants should not override this.
The go tool can dig up runtime/cgo from GOROOT and think that it should use its CgoLDFLAGS, but gccgo doesn't use runtime/cgo.
The go tool will set the build constraint "cgo" if cgo is enabled.
The go tool's usual package mechanism does not apply: package path elements like .
The go.link.abihashbytes symbol will be pointed at the appropriate part of the .note.go.abihash section in data.go:func address().
The go/doc package does not include methods here.
The go:nowritebarrier magic comment is only permitted in the runtime package.
The goal is to find a stack depth less than 4kB from the end of the stack.
The goal is to make available what can be made available.
The goal is to test the construction.
The goal of this analysis is to add these missing edges to complete the control flow graph.
The gofmt flags used to process a file must be provided via a comment of the form
The golden data for this key is now somewhere else.
The google-perftools code flushed the log itself during the signal handler.
The goroutine can be made runnable again by calling goready(gp).
The goroutine g exited its system call.
The goroutine g is about to enter a system call.
The goroutine has been woken from sleep, so we need to reset the flag in either case.
The goroutine interacts with the signal handler by calling getprofile() to get the next log piece to write, implicitly handing back the last log piece it obtained.
The goroutine is not executing user code and the stack is owned by the goroutine that set the _Gscan bit.
The goroutine is the context in which the cgo callback will run.
The goroutine leaves the non-zero value in place until it has finished processing the log half and then flips the number back to zero.
The goroutine must be executing in order to call newstack, so it must be Grunning (or Gscanrunning).
The goroutine reads requests and then calls handler to reply to them.
The goroutines have signaled via c that they are ready to exit.
The gotype command does syntactic and semantic analysis of Go files and packages like the front-end of a Go compiler.
The graph is serialized in in-order fashion, starting with the roots.
The greatest speedups come when the whole calculation can be performed within the transform (as in ScalarMult and ScalarBaseMult).
The greedy allocator moves values into registers just before they are used, spills registers only when necessary, and spills the value whose next use is farthest in the future.
The group numbers are stored in the inverse slice (inv), and when all groups are sorted, this slice is the inverse suffix array.
The guintptr, muintptr, and puintptr are all used to bypass write barriers.
The gzip and zlib packages implement access to DEFLATE-based file formats.
The gzip file stores a header giving metadata about the compressed file.
The h and v values from the Y components.
The h0, mxx, by and bx variables have the same meaning as in the processSOS method.
The hackery here rounds FixedStack0 up to a power of 2.
The handle is valid only until f.Close is called or f is garbage collected.
The handle must be a console handle.
The handled paths all begin with /debug/pprof/.
The handler can either write a header, or just start writing.
The handler is usually nil, which means to use DefaultServeMux.
The handoff field is manipulated using atomic operations.
The handshake message unmarshallers expect to be able to keep references to data, so pass in a fresh copy that won't be overwritten.
The hard part is predicting that without actually running a build.
The hardware delivers a different kind of fault for a malformed address than it does for an attempt to access a valid but unmapped address.
The hardware will generate undefined result.
The hardware will trap.
The harness will verify that an error matching the regular expression rx is reported at that source position.
The hash table has 4n entries to keep the linear scan short.
The hash table has grown since the iterator was started.
The header is a sequence of possibly continued Key: Value lines ending in a blank line.
The header node of this (reducible) loop
The headerSorter used to sort is also returned, for possible return to headerSorterCache.
The headers are parsed, and the body of the message will be available for reading from r.
The headers of the body, if any, with the keys canonicalized in the same fashion that the Go http.Request headers are.
The heap bitmap comprises 2 bits for each pointer-sized word in that range, stored in bytes indexed backward in memory from start.
The heap dump format is defined at https://golang.org/s/go15heapdump.
The heap dump reader needs to be able to disambiguate Eface entries.
The heap is swept span-by-span both lazily (when a goroutine needs another span) and concurrently in a background goroutine (this helps programs that are not CPU bound).
The helper maybe() is similar but returns true and then false.
The heuristic assumes package names match base import paths for imports w/o renames (should be good enough most of the time).
The high 32 bits hold a value.
The high 8 bits of lutValue are the encoded value.
The high 8 bits of the uint16 are the encoded value.
The high level idea is as follows.
The high-level design of this algorithm is documented at https://golang.org/s/go15gcpacing.
The high-level interface is in client.go.
The higher bit is 1 for pointers and 0 for scalars, whether the object is marked or not.
The higher-precision values in vc26 were used to derive the input arguments vc (see also comment below).
The highest precedence serves as "catch-all" precedence for selector, indexing, and other operator and delimiter tokens.
The hope is that although the code will be slightly longer, the MOVs will have no dependencies and pipeline better than the unrolled STOSL loop.
The hope is that although the code will be slightly longer, the MOVs will have no dependencies and pipeline better than the unrolled STOSQ loop.
The host's colon:port should be normalized.
The hostPort is the "host:port" of the target or proxy.
The hour of the reference time is 15, or 3PM.
The hpack decoder state is still valid, however.
The http Client and Transport guarantee that Body is always non-nil, even on responses without a body or responses with a zero-length body.
The http package adds chunking automatically if handlers don't set a Content-Length header.
The http package automatically decodes chunking when reading response bodies.
The http package's old HTML escaping function.
The httptest.Server has a cert with "example.com" as its name.
The human-readable path is in reverse order, outermost to innermost.
The hybrid scheme should use at least a 16-byte symmetric key.
The idea behind this test: there are two variables, access to one of them is synchronized, access to the other is not.
The idea is to create an input sequence which doesn't repeat too frequently.
The idea is to get some threads going, so that a signal will be delivered to a thread started by Go.
The idea is to remove redundant constants.
The idea is to remove redundant copies.
The idea is to take down the program before it takes down the operating system.
The ideal interface would be to pass typecheck a map from importpath to package API text (Go source code), but for now we use data structures (TypeConfig, Type).
The identifier's name.
The identifiers in lexical order.
The idle worker should run until it is preempted and account its time against gcController.idleMarkTime.
The imag built-in function returns the imaginary part of the complex number c.
The implementation assumes that this year's rules for daylight savings time apply to all previous and future years as well.
The implementation buffers input and may read more data than necessary from r.
The implementation compiles a custom codec for each data type in the stream and is most efficient when a single Encoder is used to transmit a stream of values, amortizing the cost of compilation.
The implementation defines the meaning of the string and can ignore it entirely.
The implementation fn can assume that the argument Value slice has the number and type of arguments given by typ.
The implementation is sufficient for HTTP (RFC 2388) and the multipart bodies generated by popular browsers.
The implementation may or may not use argp, depending on the architecture.
The implementation of Format may call Sprint(f) or Fprint(f) etc.
The implementation of the predeclared function panic.
The implementation of the predeclared function recover.
The implementation provides filters that uncompress during reading and compress during writing.
The implementation uses the Grisu3 algorithm.
The implementations are *cancelCtx and *timerCtx.
The implicit value at index 0 is all zero.
The import path is only set for concrete methods that are defined in a different package than their type.
The importPath has been cleaned, so has only one slash.
The importPath is of the form "golang.org/x/tools".
The important thing is that the wb remains active until all marking is complete.
The important use case here is when the g running on _p_ ready()s another g and then almost immediately blocks.
The importer recognizes this mode automatically (i.e., it can import export data produced with debugging support even if debugFormat is not set at the time of import).
The imports map records packages already known, indexed by package path.
The imports map records the packages already imported, indexed by package id (canonical import path).
The imports might have changed, so reload again.
The incoming value may be a pointer
The increment value must be between 1 and 2,147,483,647, inclusive.
The index is needed by update and is maintained by the heap.Interface methods.
The index is the base form of the instruction, masked by obj.AMask.
The index is the size of the slice element.
The index of the first byte is returned.
The index of the first operation is 0.
The index of the item in the heap.
The indexes of the counters in testPanic are known to main.go
The indirect here is converting from a Go function pointer to a C function pointer.
The individual decoders don't need to it.
The info argument is the os.FileInfo for the named path.
The init function creates a pipe and Dups the read end to a known number that the C code can also use.
The initial //go:generate element is present in line.
The initial base address is the lowpc attribute of the enclosing compilation unit.
The initial case is not Cleaned, though, so we do this explicitly.
The initial contents of buf corresponds to the string s.
The initial handshake will generate a handshakeComplete signal which needs to be quashed.
The initial load of p loads all the non-test imports and rewrites the vendored paths, so nothing should ever call p.vendored(p.Imports).
The initial quote is already scanned.
The initial setting is 1 GB on 64-bit systems, 250 MB on 32-bit systems.
The initial setting is 10,000 threads.
The initial setting is the value of the GOGC environment variable at startup, or 100 if the variable is not set.
The initial value is 0.
The initialization order must not depend on the parse order of the files, only on the presentation order to the type-checker.
The initialization vector iv's length must be equal to b's block size.
The inlining facility makes 2 passes: first caninl determines which functions are suitable for inlining, and for those that are it saves a copy of the body.
The inlsubst type implements the actual inlining of a single function call.
The inner level is keyed by checker name.
The input can be assumed to be a valid encoding of a JSON value.
The input coefficients should already have been multiplied by the appropriate quantization table.
The input encoded as a hex string.
The input is a single string consisting of period-separated condition codes, such as ".P.W".
The input may be a gzip-compressed encoded protobuf or one of many legacy profile formats which may be unsupported in the future.
The input string is known to start "GMT".
The input text for a template is UTF-8-encoded text in any format.
The inputMargin lets us use a fast path for emitLiteral in the main loop, while we are looking for copies.
The inputs and outputs of that op are the given number of bits wide.
The instFormat table contains both conditional and unconditional instructions.
The install command should have created a "shlibname" file for the listed packages (and runtime/cgo, and math on arm) indicating the name of the shared library containing it.
The install suffix specifies a suffix to use in the name of the installation directory.
The instruction before a call to deferreturn is always a no-op, to keep PC-specific data unambiguous.
The instrument pass modifies the code tree for instrumentation.
The integer register argument takes priority.
The integer type depends on the value of mode (rotate direction, signedness).
The interactive shell will apply defaults for the interactive mode.
The interface contains an unexported method so that only types local to this package can satisfy it.
The interface is trivial.
The interface uses the 64-bit structures always, to avoid code duplication.
The interfaces come in pairs that produce and consume encoded data.
The interleaved scans will process 8 Y blocks: 0 1 4 5 2 3 6 7 The non-interleaved scans will process only 6 Y blocks: 0 1 2 3 4 5
The interpretation is not bit compatible with the 7500.
The interpretation of this constant depends on the attribute.
The intersection should be the largest rectangle a such that every point in a is both in r and in s.
The intersperseComments result indicates if a newline was written or if a formfeed was dropped from the whitespace buffer.
The invocation of valfunc to update the current value is, for each p,
The isolation level is dependent on the driver.
The issue was registering *T caused T to be stored as the concrete type.
The items documented here are not actually in package builtin but their descriptions here allow godoc to present documentation for the language's special identifiers.
The iterate/delete idiom currently takes expected O(n lg n) time.
The iterative method processes n Words by n divW() calls, each of which visits every Word in the incrementally shortened q for a total of n + (n-1) + (n-2) ...
The iv must be the same length as the Block's block size.
The ivSize numbers were taken from the OpenSSL source.
The job of appending the moduledata is delegated to runtime.addmoduledata.
The kernel expects milliseconds so round to next highest millisecond.
The kernel expects seconds so round to next highest second.
The kernel provides a pointer to 16-bytes worth of random data.
The kernel socket code is no doubt enjoying watching us squirm.
The kernel will never pass us a nil note or ureg so we probably made a mistake somewhere in sigtramp.
The key argument should be the AES key, either 16 or 32 bytes to select AES-128 or AES-256.
The key argument should be the RC4 key, at least 1 byte and at most 256 bytes.
The key distinction from regular types is to register the concrete type that implements the interface.
The key name will be used if it's a non-empty string consisting of only Unicode letters, digits, dollar signs, percent signs, hyphens, underscores and slashes.
The keys consist of a 12-bit code prefix and an 8-bit byte suffix.
The killer problem, though, for mtime-based build systems is that the build only has access to the mtimes of the inputs that still exist.
The kind is either a constant, type, or variable.
The kind of block this is.
The kind of case depends on Dir, the communication direction.
The kinds 1, 2, 4, 8 stand for values of that size.
The known architectures.
The known operating systems.
The label might already have a target block via a goto.
The label must not have been declared before in any block.
The label parameter may contain arbitrary data that will not be encrypted, but which gives important context to the message.
The label parameter must match the value given when encrypting.
The large response body made the old race easier to trigger.
The largest level that can be stored in a tag.
The largest match length
The largest match offset The maximum number of tokens we put into a single flate block, just to stop things from getting too large.
The largest of these is maxNumLit, so we allocate for that case.
The largest offset code.
The largest recorded benchmark name.
The last argument before variadic args isn't a string
The last byte of the prog terminates the program.
The last cycle has a missing leap year, which does not affect the computation.
The last cycle has one extra leap year, so on the last day of that year, day / daysPer100Years will be 4 instead of 3.
The last digit is rounded to nearest, with halves rounded away from zero.
The last element we read was self-closing and we returned just the StartElement half.
The last entry in a line table should always have EndSequence set.
The last entry will have its EndSequence field set.
The last few problems were specific examples of this, but it's a general problem.
The last form is not permitted for boolean flags because the meaning of the command cmd -x * will change if there is a file called 0, false, etc.
The last index entry is the field or method index in the (possibly embedded) type where the entry was found, either:
The last item, if a string, should not have a newline.
The last non-empty line of input will be returned even if it has no newline.
The last parameter before variadic arguments is assumed to be a format string.
The last part is giving correct timestamps to EvGoSysExit events.
The last reader unblocks the writer.
The last record will be a close_notify alert, which we don't wish to record.
The last two cases get us to oindex_const_sudo in gsubr.c.
The last year is a leap year, so on the last day of that year, day / 365 will be 4 instead of 3.
The later 8 are identical to the first 8 except that the size is set.
The latests spec is actually this:
The latter is the type of an auto-generated wrapper.
The latter loses some information by going to and from 8 bits per channel.
The latter two would require parsing /adm/users.
The layout can express it either way, and since our value is the morning we should see it as an AM time.
The layout string used by the Parse function and Format method shows by example how the reference time should be represented.
The ld is necessary because x_stub will save r2 (the TOC pointer) at 24(r1) (the "TOC save slot").
The leading byte is special because it contains the bits for word 1, which does not have the marked bits set.
The leading half-byte is special because it's a half a byte and must be manipulated atomically.
The left comment marker is known to be present.
The left delim might have the marker afterwards.
The legacy compatibility way, used only for RoundTripper implementations written before Go 1.5 or Go 1.6.
The len built-in function returns the length of v, according to its type: Array: the number of elements in v.
The length indicated by length code X - LENGTH_CODES_START.
The length is always 0
The length is an unsigned integer preceding the elements.
The length is encoded in the bottom 7 bits.
The length must be a multiple of BlockSize (16).
The length of PS may be 0.
The length of an mtime tick on this system.
The length of iv must be the same as BlockSize.
The length of iv must be the same as the Block's block size and must match the iv used to encrypt the data.
The length of iv must be the same as the Block's block size.
The length of payload will always equal fh.Length (which might be 0).
The length of src must be a multiple of the block size.
The length of the ServerHello is taken from the handshake header.
The length of the suffix (but not the prefix) is compensated for in the width calculation.
The level argument takes the same values as the GOTRACEBACK environment variable.
The lfstackpush relinquishes ownership.
The lhs elements are only set up after the for loop below, but that's ok because declareVar only collects the declInfo for a later phase.
The lhs is of integer type or an untyped constant representable as an integer.
The lhs is representable as an integer but may not be an integer (e.g., 2.0, an untyped float) - this can only happen for untyped non-integer numeric constants.
The libc versions are in cgo_*.go.
The limbs are still spaced 28-bits apart and in little-endian order.
The limit controls the number of operating system threads, not the number of goroutines.
The limit was originally 128 but is now 592.
The line directive we are about to print changed the Filename and Line number used for subsequent tokens.
The line does not include trailing whitespace or the trailing new line bytes.
The line number for constant pool entries doesn't really matter.
The line number in the input.
The line number specifies the name involved.
The lines of msg should be CRLF terminated.
The link context for all instructions.
The link has been severed
The link still succeeds and the executable still runs though.
The link to the current Node is parent.src unless parent is nil in which case it is step.dst.
The linkcheck command finds missing links in the godoc website.
The linker can prune methods that are not directly called or assigned to interfaces, but only if reflect.Type.Method is never used.
The linker can prune methods that are not directly called or assigned to interfaces, but only if reflect.Type.MethodByName is never used.
The linker can prune methods that are not directly called or assigned to interfaces, but only if reflect.Value.Method is never used.
The linker uses this as a signal that the pointed-to type information should be linked into the final binary, even if there are no other direct references.
The linker will leave a table of all the typelinks for types in the binary, so the runtime can find them.
The linkers explore all possible call traces involving non-splitting functions to make sure that this limit cannot be violated.
The linking directives are used according to the kind of final link used.
The list below is all of the why-escapes messages seen building the escape analysis tests.
The list flags accept a space-separated list of strings.
The list is assumed to have two kinds of entries: names without slashes, which are commands, and entries beginning with internal/, which are packages supporting the commands.
The list must include the control value, if any.
The list of graphic but not "printable" runes is short.
The list of imports is used by recompileForTest and by the loop afterward that gathers t.Cover information.
The list of packages which this package depends on to be initialized, including itself if needed.
The list of possible Object kinds.
The list of symbols for the move-to-front transform is taken from the previously decoded symbol bitmap.
The list to which this element belongs.
The lists are as short as possible while preserving those requirements.
The lists l and other may be the same.
The live set has changed, update it.
The liveness analysis saw s as having its address taken but the register optimizer did not.
The liveness bitmaps say that so that a panic will not show stale values in the parameter dump.
The localPrefix is the path we interpret ./ imports relative to.
The lock can be held by an arbitrary number of readers or a single writer.
The lock file is never deleted, to avoid concurrent locks on distinct files with the same path.
The lock protects us from races with StartTrace/StopTrace because they do stop-the-world.
The log file, re2-exhaustive.txt, is generated by running 'make log' in the open source RE2 distribution https://github.com/google/re2/.
The logFlag argument is the flag set passed through to log.New to create the Logger.
The logic should call choose(n) when it wants to choose between n possibilities.
The lookup function expects UTC, so we pass t in the hope that it will not be too close to a zone transition, and then adjust if it is.
The lookupCache caches ArrayOf, ChanOf, MapOf and SliceOf lookups.
The loop body is executed b.N times total across all goroutines.
The loop involves only functions, ok.
The loop leaves R1 on the last zeroed dword
The loop leaves R16 on the last zeroed dword
The loop leaves R3 on the last zeroed dword
The loop left room for the newlines and 128 bytes of padding.
The loop over power-of-two values is meant to ensure that the operations apply to the full word size.
The loop queues embedded fields found in 'next', for processing during the next iteration.
The loop should only execute one iteration in the common case.
The loop then returns to accepting, so that multiple connections may be served concurrently.
The loss is not gradual, but jumps suddenly to about 1 part in 10e7.
The low 1 bit signals to complement the rest upon receipt.
The low 16 bits are s1, the high 16 bits are s2.
The low 32 bits hold a pointer offset.
The low 8 bits are 1 plus the code length, or 0 if the value is too large to fit in lutSize bits.
The low 8 bits are 1 plus the codeLength.
The low 8 bits are the actual prefix byte encoding, and the top 8 bits contain distinguishing bits and metadata.
The low bit (LockExternal) is a boolean reporting whether any LockOSThread call is active.
The low bit of the encoding says whether to bit complement the (other bits of the) uint to recover the int.
The low-level implementation is in transport.go.
The low-order bits of the hash are used to select a bucket.
The m.locked word holds two pieces of state counting active calls to LockOSThread/lockOSThread.
The magic computation here is tailored for malloc block sizes and does not handle arbitrary d correctly.
The magic must be converted to little endian first though.
The magic number should already have been consumed.
The magnitude of the result is less than y and its sign agrees with that of x.
The main benefit of ServeContent over io.Copy is that it handles Range requests properly, sets the MIME type, and handles If-Modified-Since requests.
The main benefits of this system are that cmd/link remains relatively simple (it does not need to implement a complete ELF and Mach-O linker) and that gcc is not needed after the package is compiled.
The main concepts are: G - goroutine.
The main executor, builder.do, knows not to print this error.
The main expense here is the call to signalstack to release the m's signal stack, and then the call to needm on the next callback from this thread.
The main goroutine calls Add to set the number of goroutines to wait for.
The main poller loop runs in its own thread waiting for events using port_getn.
The main targets of tiny allocator are small strings and standalone escaping variables.
The main type check is a recursive algorithm implemented by walkBeforeAfter(n, before, after).
The make built-in function allocates and initializes an object of type slice, map, or chan (only).
The mandatory DW_ABRV_NULL entry.
The mangled name for the default context is the input templateName.
The mantissa is normalized such that is uses x.Prec() bits in binary representation.
The mantissas are exactly 256 bits.
The map argument tracks comparisons that have already been seen, which allows short circuiting on recursive types.
The map contains two kinds of entries: 1) Lower-case keys are standard import paths and list the allowed imports in that package.
The map header is allocated on the stack.)
The map is locked during the iteration, but existing entries may be concurrently updated.
The map key is the protocol name negotiated.
The map keys are used as JSON object keys, subject to the UTF-8 coercion described for string values above.
The map only contains locations that are explicitly focused or ignored.
The map's key type must either be a string or implement encoding.TextMarshaler.
The map's key type must either be a string or implement encoding.TextUnmarshaler.
The mapping between JSON and Go values is described in the documentation for the Marshal and Unmarshal functions.
The mark worker associated with this P is blocked performing a mark transition.
The mark worker should run without preemption.
The marking fails because the pointer looks like a pointer into a free span.
The match is good enough that we don't try to find a better one.
The match slice should have been returned by FindSubmatchIndex.
The matched suffix occurs elsewhere in pattern (with a different byte preceding it that we might possibly match).
The max value of GOMAXPROCS.
The maximum code length is 32 bits.
The maximum codeword size is 16 bits.
The maximum error of this polynomial approximation is bounded by 2**-58.45.
The maximum error of this polynomial approximation is bounded by 2**-59.
The maximum error of this polynomial approximation is bounded by 2**-61.
The maximum length of an encoded-word is 75 characters.
The maximum number of bytes that a chain of NOSPLIT functions can use.
The maximum number of frames we print for a traceback
The maximum size is one byte less than 16MB (uint24), but only frames up to 16KB are allowed without peer agreement.
The maximum token size is the larger of max and cap(buf).
The meaning of flags varies depending on the frame type.
The meaning of mode is defined by the implementation.
The meaning of the high bit depends on the position of the word being described in its allocated object.
The meanings and use may change from release to release.
The memmove below does that.
The memory is owned by the Framer and is invalidated when the next frame is read.
The memory profiler can call copy from a slice on the system stack, which msan used to think meant a reference to uninitialized memory.
The merging only happens for a single function, not across the entire binary.
The message must be no longer than the length of the public modulus less twice the hash length plus 2.
The message must be no longer than the length of the public modulus minus 11 bytes.
The meta tag should appear as early in the file as possible.
The method receiver, if any, is treated as a phantom first argument.
The method set for *T contains the methods for T.
The method set has unexported methods, so all the implementations are provided by the same package, so the method set can be extended.
The method's return value, if non-nil, is passed back as a string that the client sees as if created by errors.New.
The methods Local, UTC, and In return a Time with a specific location.
The methods allowed for each kind are:
The methods are ordered by their unique Id.
The methods below reflect a 1:1 translation of the original (and now defunct) go.y yacc productions.
The methods called by symtab.go, which begin with "go12" prefixes, are expected to have that recovery logic.
The methods of FlagSet are analogous to the top-level functions for the command-line flag set.
The methods of embedded interfaces are always "inlined" by the compiler and thus embedded interfaces are never visible in the export data.
The methods on heapBits take value receivers so that the compiler can more easily inline calls to those methods and registerize the struct fields independently.
The methods operating on spans all require that h has been returned by heapBitsForSpan and that size, n, total are the span layout description returned by the mspan's layout method.
The methods require that the elements of the collection be enumerated by an integer index.
The methods should behave the same as those on an *os.File.
The minimal source code for a binary-only package is therefore:
The minimum element in the tree is the root, at index 0.
The minimum size of stack used by Go code
The minimum stack size to allocate.
The missing full path cannot be fixed without breaking existing gob decoders.
The mode arguments specifies the assumed processor mode: 16, 32, or 64 for 16-, 32-, and 64-bit execution modes.
The mode bits are passed to ParseFile unchanged.
The mode flags control merging behavior.
The mode implementations extend that capability to streams of blocks.
The mode parameter controls the amount of source text parsed and other optional parser functionality.
The mode parameter determines how comments are handled.
The mode parameter to the Parse* functions is a set of flags (or 0).
The model is to demonstrate what the reference time looks like so that the Format and Parse methods can apply the same transformation to a general time value.
The modified code has a cycle and the scheduler will barf on it.
The modtime is only compared at second granularity and may be the zero value to mean unknown.
The modulus p must be an odd prime.
The month, day, hour, min, sec, and nsec values may be outside their usual ranges and will be normalized during the conversion.
The most common encoding is the "base64" encoding defined in RFC 4648 and used in MIME (RFC 2045) and PEM (RFC 1421).
The most common is the "base32" encoding introduced for SASL GSSAPI and standardized in RFC 4648.
The most common numeric conversions are Atoi (string to int) and Itoa (int to string).
The most common use of PEM encoding today is in TLS keys and certificates.
The most common use of this pattern is to access fields in a struct or elements of an array:
The most important fact about a given architecture is whether it uses a link register.
The most important rule is that if the local installation is running version "go1", get searches for a branch or tag named "go1".
The most likely cause for this is tick skew on different CPUs.
The most obvious case is that gentraceback needs to use the original return PC when it encounters the stack barrier trampoline.
The most recent such predecessor provides the starting register state for a block.
The msg argument is logged on failure.
The msg headers should usually include fields such as "From", "To", "Subject", and "Cc".
The msg parameter should be an RFC 822-style email with headers first, a blank line, and then the message body.
The n least significant bits of a form the unread bits, to be read in MSB to LSB order.
The name "std" is only the standard library.
The name "title" is what the function will be called in the template text.
The name and msg arguments are as for doGrep.
The name argument is the name of the output we are searching, "output" or "error".
The name documentation indicates documentation for a non-Go program in the directory.
The name is a string in a driver-specific format.
The name is delimited by any single-byte character not valid in names.
The name is used for error reporting only, and serves to distinguish one .debug_types section from another.
The name main indicates a command, not a library.
The name must be a relative path: it must not start with a drive letter (e.g. C:) or leading slash, and only forward slashes are allowed.
The name must be something that can evaluate to a string.
The name must be that of a template associated with the template that contains the invocation.
The name must match exactly.
The name must match the record at the top of the stack, which must be a pushElement record.
The name must refer to the same user type, and vice versa.
The name of embedded builtins belongs to pkg.
The name of the service and method to call.
The name of the template (unquoted).
The name variable only exists for testing.
The name was taken from a practical example that fails and replaced ever char through numbers to anonymize the sample.
The namedType for a type name is always found via reader.lookupType.
The names may be chained ('.x.y').
The naming convention to declare examples for the package, a function F, a type T and method M on type T are:
The need for this was made obvious by changing the (deterministic) scheduling order in Go 1.5 and breaking many poorly-written tests.
The net and net/http packages also refer to debugging variables in GODEBUG.
The net total of this test after being run.
The net/http package's transports support the new Request.Cancel channel
The net/http/cookiejar package provides a CookieJar implementation.
The net/rpc package also uses CONNECT, but there the parameter is a path that starts with a slash.
The network net must be "unix" or "unixpacket".
The network net must be "unixgram".
The network net must be a packet-oriented network: "udp", "udp4", "udp6", "ip", "ip4", "ip6" or "unixgram".
The network net must be a stream-oriented network: "tcp", "tcp4", "tcp6", "unix" or "unixpacket".
The new built-in function allocates memory.
The new export format can contain 0 bytes.
The new fd is created NOT close-on-exec, which is exactly what we want.
The new function translates its arguments, calls xxx, and translates the return value.
The new g is put on the queue of g's waiting to run.
The new scheme adjusts Panic.argp on entry to a wrapper.
The new slice's length is set to the old slice's length, NOT to the new requested capacity.
The new waiter may or may not get notified, but the first one has to be notified.
The next Read should return 0, EOF.
The next arena is populated as the spans request memory to hold gcmarkBits for the next GC cycle as well as allocBits for newly allocated spans.
The next bit, FDICT, is set if a dictionary is given.
The next five bits give the Kind of the value.
The next four bits is the CM (compression method), which is 8 for deflate.
The next four bytes are the Adler-32 checksum of the dictionary.
The next item on this row is a leaf node.
The next item on this row is a pair from the previous row.
The next loop will compile individual non-Go files.
The next loop will insert ninit into nbody.
The next step is to determine each kind of name.
The next token is following on the line immediately after the comment group, thus the last comment group is a lead comment.
The next token is on a different line, thus the last comment group is a line comment.
The next two bits is the FLEVEL (compression level).
The next two bytes are the data length:
The next two codes mean clear and EOF.
The next value is known to be an object or array, not a literal.
The nil pointer exception is not strictly necessary but mimics a similar, necessary exception in the behavior of UnmarshalJSON.
The nine least-significant bits are the standard Unix rwxrwxrwx permissions.
The no-op conversion here used to confuse the compiler into doing a load-effective-address of nil.
The node fields correspond to the individual parts of the respective productions.
The node list only contains declared names.
The node names usually match the corresponding Go spec production names to which they correspond.
The noescape comment only applies to the next func, which must not have a body.
The non-Go code should not change the signal mask on any threads created by the Go runtime.
The non-nil input error is the error from roundTrip, which might be wrapped in a beforeRespHeaderError error.
The nonce must be NonceSize() bytes long and both it and the additional data must match the value passed to Seal.
The nonce must be NonceSize() bytes long and unique for all time, for a given key.
The normalizer does not encode all HTML specials.
The note body starts after the marker.
The note ends at the end of the comment group or at the start of another note in the same comment group, whichever comes first.
The notifications are automatically unregistered when fd is closed.
The number and order depend on the block kind.
The number i of unused bytes at the beginning of buf is returned as result.
The number increases when new code paths are exercised, both in the Go program and in the decoder byte code.
The number is already shortest.
The number is incremented on each call to parseObject.
The number might be parenthesized and has the format (N+Ni) where N is a floating-point number and there are no spaces within.
The number must be of the form:
The number of capture values in the program may correspond to fewer capturing expressions than are in the regexp.
The number of chains remaining to generate for this level before moving up to the next level
The number of codegen codes.
The number of columns of the result is inferred from the length of the slice.
The number of extra bits needed by length code X - LENGTH_CODES_START.
The number of games per series to simulate
The number of goroutines defaults to GOMAXPROCS.
The number of iterations.
The number of literal and offset tokens is returned.
The number of logical CPUs on the local machine can be queried with NumCPU.
The number of output bytes in the last fragment is the number of leftover input bytes - 1: the extra byte provides enough bits to cover the inefficiency of the encoding for the block.
The number of palette entries.
The number of pixels in the image data.
The number of values in dest must be the same as the number of columns in Rows.
The numbers below are only valid for 64-bit interface word sizes, and gc.
The numbers involved must be small (at most 4 digits), have no unnecessary leading zeros, and the version cannot end in .0 - it is go1, not go1.0 or go1.0.0.
The numbers n and c, when they follow a code, are encoded as varints using the same encoding as encoding/binary's Uvarint.
The object file can then be combined with other objects into a package archive or passed directly to the linker (``go tool link'').
The object file can then be combined with other objects into a package archive.
The object fits into existing tiny block.
The object is not nil and known to be in the heap.
The object may be dot-imported: If so, remove its package from the map of unused dot imports for the respective file scope.
The object must not be a function or method.
The object's default key string is the struct field name but can be specified in the struct field's tag value.
The octal prefix "0" is not supported (a leading "0" is simply considered a "0").
The odd order in which the codegen code sizes are written.
The offset gives the location of the end of the most recently returned token and the beginning of the next token.
The offset is also known as distance.
The offset is too big to fit in a load.
The offset where the text segment begins in a hello world compiled for each different object format today:
The offsets of sp, pc, and g are known to (hard-coded in) libmach.
The ok return value reports whether the value was explicitly set in the tag string.
The old compiler uses 0 for the base register.
The old slice's length is used immediately to calculate where to write new values during an append.
The old value is url, ok.
The old version will be garbage collected once the existing readers (if any) are done with it.
The ones in short mode take about 0.1 seconds.
The only ProcInst where target of xml is allowed.
The only allowed use is on array types created with typDDDArray.
The only callable symbols will be those functions exported using a cgo //export comment.
The only callable symbols will be those functions marked as exported.
The only decision is whether there will be spaces around levels 4 and 5.
The only errors returned are ones encountered while writing to the underlying output stream.
The only guarantee is that the result is zero if and only if v is a nil func Value.
The only indication of its native integer type is its ByteSize (inside CommonType).
The only live ref to the allocated object is now x.
The only one-word objects are pointers, or else they'd be merged with other non-pointer data into larger allocations.
The only operation that scales with region count is the sorting by cost, which uses sort.Sort and is therefore guaranteed n log n.
The only operations are precise conversion from binary to decimal and rounding.
The only possible conflict is if we were to create a top-level package named exe.
The only possible returned error is ErrBadPattern, when pattern is malformed.
The only real invariant: Jan 04 is in week 1
The only required bit is ModeDir for directories.
The only signal values guaranteed to be present on all systems are Interrupt (send the process an interrupt) and Kill (force the process to exit).
The only type we have is the type of the function parameter.
The only use of this function is in channel sends, and the 64 kB channel element limit takes care of this for us.
The only way to remove signals from the set is to call Stop.
The only way we can end up with such small sel.ncase values here is for a larger select in which most channels have been nilled out.
The only way we can get here is if we are in a library or archive, we installed a signal handler at program startup, but the Go runtime has not yet been initialized.
The opBits describe bits that should be extracted from x and added to the opcode.
The open and arming mechanisms are serialized using the lock inside PollDesc.
The opening bracket has been consumed.
The opening parenthesis has been absorbed.
The operand types match the result type.
The operands are passed in the slice a.
The operands have now their final types, which at run- time will be materialized.
The operating system doesn't clean up the file that announcing created, so we have to clean it up ourselves.
The operation must be defined for the operand.
The operation must be defined for the operands.
The operation that computes this value.
The operations are needed, however, in order to let the log closer set the high bit to indicate "EOF" safely in the situation when normally the goroutine "owns" handoff.
The operators are idempotent if the flags match.
The opposite can also happen: if we ask the kernel to pick an appropriate originating local address, sometimes it picks one that is already in use.
The optimizer gets confused about 16- vs 32-bit moves during splitContractIndex.
The optimizer gets confused about 32- vs 64-bit moves during splitContractIndex.
The option may be repeated to add multiple mappings.
The optional space at the end allows a hex sequence to be followed by a literal hex.
The options control the printed output:
The opts argument may be nil, in which case sensible defaults are used.
The opts argument should be appropriate for the primitive used.
The opts parameter is optional.
The order chosen is arbitrary, only consistency and division into equivalence classes (Types that compare CMPeq) matters.
The order here is the order in which they are printed by 'go help'.
The order is significant to Phi nodes in the block.
The order matters: we must return the index of the final element, because the final one is where the effective import path starts.
The order matters: we must return the index of the final element, because the final one produces the most restrictive requirement on the importer.
The order of initialization is undefined, so make sure both use the same default value.
The order of operations is important here: reversing the operations can lead to incorrect behavior when racing with a close.
The order of slice elements is not significant.
The order of the methods is irrelevant.
The order of values in multi-valued headers is kept intact.
The order of work does not matter much to overall execution time, but when running "go test std" it is nice to see each test results as soon as possible.
The original (now defunct) grammar in go.y accepted both a method or an (embedded) type:
The original (v7) version of tar had no explicit magic field, so its magic bytes, like the rest of the block, are NULs.
The original C code and the comment below are from FreeBSD's /usr/src/lib/msun/src/e_remainder.c and came with this notice.
The original C code and the long comment below are from FreeBSD's /usr/src/lib/msun/src/e_j0.c and came with this notice.
The original C code and the long comment below are from FreeBSD's /usr/src/lib/msun/src/e_j1.c and came with this notice.
The original C code and the long comment below are from FreeBSD's /usr/src/lib/msun/src/e_jn.c and came with this notice.
The original C code and the long comment below are from FreeBSD's /usr/src/lib/msun/src/e_lgamma_r.c and came with this notice.
The original C code and the long comment below are from FreeBSD's /usr/src/lib/msun/src/e_sqrt.c and came with this notice.
The original C code and the long comment below are from FreeBSD's /usr/src/lib/msun/src/s_erf.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/e_acosh.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/e_atanh.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/e_exp.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/e_log.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/s_asinh.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/s_expm1.c and came with this notice.
The original C code, the long comment, and the constants below are from FreeBSD's /usr/src/lib/msun/src/s_log1p.c and came with this notice.
The original C code, the long comment, and the constants below are from http://netlib.sandia.gov/cephes/c9x-complex/clog.c.
The original C code, the long comment, and the constants below are from http://netlib.sandia.gov/cephes/cprob/gamma.c.
The original C code, the long comment, and the constants below were from http://netlib.sandia.gov/cephes/cmath/atan.c, available from http://www.netlib.org/cephes/cmath.tgz.
The original C code, the long comment, and the constants below were from http://netlib.sandia.gov/cephes/cmath/sin.c, available from http://www.netlib.org/cephes/cmath.tgz.
The original Dijkstra barrier only shaded ptrs being placed in black slots.
The original G is still in the running state, and we want to print its stack.
The original elements are now leaked, too
The original implementation here was a true queue (using a channel) but it had the effect of getting distracted by low-level leaf actions to the detriment of completing higher-level actions.
The original implementation was buggy in that in some data dependent cases it would overwrite stderr in the child with one of the ExtraFile members.
The original input can be supplied, and if the huffman encoded data is larger than the original bytes, the data will be written as a stored block.
The original text of the string, with quotes.
The original textual representation from the input.
The os interface is intended to be uniform across all operating systems.
The os/exec package provides higher-level interfaces.
The other end of the arrow is not captured in the trace.
The other files have accumulated generic http stuff in random places.
The other files in this directory each contain an implementation of TokenReader.
The other form fields (prefixed with "other" in their form-data name) are unchanged.
The other important fact is the size of a pointer: on 32-bit systems the LR takes up only 4 bytes on the stack, while on 64-bit systems it takes up 8 bytes.
The other msan functions are fine.
The other quirk with DragonFly's sendfile implementation is that it doesn't use the current position of the file -- if you pass it offset 0, it starts from offset 0.
The other quirk with FreeBSD's sendfile implementation is that it doesn't use the current position of the file -- if you pass it offset 0, it starts from offset 0.
The other quirk with Solaris's sendfile implementation is that it doesn't use the current position of the file -- if you pass it offset 0, it starts from offset 0.
The other reporting methods, such as the variations of Log and Error, may be called simultaneously from multiple goroutines.
The other tests don't check position, to make the test cases easier to construct.
The other three are variations in the per-P mark workers and are distinguished by gcMarkWorkerMode.
The out variable sets the destination to which log data will be written.
The outer function's stack may have moved during gcMark (it shrinks stacks, including the outer function's stack), so we must not refer to any of its variables.
The outer level is keyed by a nil pointer, one of the AST vars above.
The outermost closure inside of a named function.
The output can be embedded in an HTML attribute without further escaping.
The output could be very long here, but probably isn't.
The output is compiled and run.
The output is error checked.
The output is expected to contain references to 'dir', usually the source directory for the package that has failed to build.
The output is likely to appear multiple times because the benchmark is run multiple times, but at least it will be seen.
The output is semantically equivalent to the input as far as the user of package reflect can tell, but the true func representation can be handled by code like Convert and Interface and Assign.
The output of a command will be either one value or two values, the second of which has type error.
The output of the final command in the pipeline is the value of the pipeline.
The output of the move-to-front transform is run-length encoded and we merge the decoding into the Huffman parsing loop.
The output of this program is compiled and run to do the actual test.
The output testing.BenchmarkHello    10000000    282 ns/op means that the loop ran 10000000 times at a speed of 282 ns per loop.
The outputs of a sound HTML sanitizer and a template escaped by this package are fine for use with HTML.
The overall constraint is the AND of the individual constraints.
The overall structure of Import is symmetric to Export: For each export method in bexport.go there is a matching and symmetric method in bimport.go.
The p was retaken and then enter into syscall again (since _g_.m.syscalltick has changed).
The package also runs and verifies example code.
The package cache doesn't operate correctly in rare (so far artificial) circumstances (issue 8425).
The package e is a go/doc test for embedded methods.
The package exists, so we got some output.
The package f is a go/doc test for functions and factory methods.
The package identifier denotes the current package, but there is no corresponding package object.
The package initialization registers it as /debug/pprof/cmdline.
The package initialization registers it as /debug/pprof/profile.
The package initialization registers it as /debug/pprof/symbol.
The package initialization registers it as /debug/pprof/trace.
The package is built in a temporary directory so it does not interfere with the non-test installation.
The package is marked as complete if no errors occurred, otherwise it is incomplete.
The package is not complete and contains no explicit imports.
The package is sometimes only imported for the side effect of registering its HTTP handler and the above variables.
The package is specified by a list of *ast.Files and corresponding file set, and the package path the package is identified with.
The package is typically only imported for the side effect of registering its HTTP handlers.
The package is using the Elastic Tabstops algorithm described at http://nickgravgaard.com/elastictabstops/index.html.
The package name main is no longer reserved, but we reserve the import path "main" to identify the main package, just as we reserve the import path "math" to identify the standard math package.
The package path is redundant for us.
The package path must be either a qualified path or a proper suffix of a path.
The package provides:
The package scope extent (position information) may be incorrect (files spread across a wide range of fset positions) - ignore it and just consider its children (file scopes).
The package's Imports list must include all packages explicitly imported by exports.go, plus all packages referenced indirectly via exported objects in exports.go.
The packages map must contain all packages already imported.
The packages map must contains all packages already imported.
The packages specified in tests are typechecked.
The panic built-in function stops normal execution of the current goroutine.
The panic call takes/returns memory to ensure that the right memory state is observed if the panic happens.
The panic would still happen during the call if we omit this, but we want Interface() and other operations to fail early.
The paper gives O((M+N)*log(M)) as the number of assignments assuming a rotation algorithm which uses O(M+N+gcd(M+N)) assignments.
The param must look like a *testing.T or *testing.B.
The parameter lists must give a type for each argument: the (x, y, z int) shorthand is not allowed.
The parameter n controls the number of returned names, analogous to the way os.File.Readdirnames works.
The parameter n is the number of specs in the group.
The parameter pub is the public key of the signee and priv is the private key of the signer.
The parameters are the same as for the Init function.
The parent package is needed for exported struct fields and interface methods which don't contain explicit package information in the export data.
The parent's children should contain the two cancelable children.
The parentheses look odd but are correct.
The parenthetical default is omitted if the default is the zero value for the type.
The parse functions return the widest type (float64, int64, and uint64), but if the size argument specifies a narrower width the result can be converted to that narrower type without data loss:
The parse tree walkers are all methods of this type.
The parser accepts a larger language than is syntactically permitted by the Go spec, for simplicity, and for improved robustness in the presence of syntax errors.
The parser assumes that its input is encoded in UTF-8.
The parser behaves as if these standard mappings are present in the map, regardless of the actual map content:
The parser calls this before each push, so only the top fragment of the stack might need processing.
The parser ensures that f.Tag is nil and we don't care if a constructed AST contains a non-nil tag.
The parser ensures that field tags are nil and we don't care if a constructed AST contains non-nil tags.
The parser ensures that there's only one method and we don't care if a constructed AST has more.
The parser flags the outer variable as possibly shared, and therefore sets addrtaken, even though it ends up not being actually shared.
The parser has given us exactly the comment text.
The parser is invoked through one of the Parse* functions.
The parser produces a correct AST but if it was modified elsewhere the else branch may be invalid.
The parser should take care of scoping in the future, so that we will be able to distinguish a "top-level C" from a local C.
The parser structure holds the parser's internal state.
The parsing of userinfo treats ':' as special so we must escape that too.
The part before the : is the name space identifier.
The path below 'src' determines the import path or executable name.
The path below src determines the import path or executable name.
The path is known to be in canonical form, except for CONNECT methods.
The path is then scanned to see if a NUL terminator still exists within the length.
The pattern is either "all" (all packages), "std" (standard packages), "cmd" (standard commands), or a path including "...".
The pattern is processed by filepath.Glob and must match at least one file.
The pattern may describe hierarchical names such as /usr/*/bin/ed (assuming the Separator is '/').
The pattern syntax is:
The pause buffer is circular.
The pause needs to be big enough to let the select block before we run the helper, but if we lose that race once in a while it's okay: the select will just proceed immediately.
The payload is copied from b and the associated out-of-band data is copied from oob.
The payload must fit in a multiple of blockSize, with room for at least one padding byte.
The pc is the program counter of the instruction, used for expanding PC-relative addresses into absolute ones.
The pcln table has the encoding:
The peek requests are machine-size oriented, so we wrap it to retrieve arbitrary-length data.
The period is dropped from each ident.
The period needs escaping only in the last segment of the path, and it makes for happier users if we escape that as little as possible.
The periods are dropped from each ident.
The perm argument is meant to be adjusted according to umask, but we don't know what the umask is.
The permission bits perm are used for all directories that MkdirAll creates.
The pipe serves three purposes:
The pipe will be closed automatically after Wait sees the command exit.
The pipeline in the action.
The pipeline is mandatory.
The pipeline to be evaluated.
The pkg directory holds installed package objects.
The pkg.Files list is not changed, so that file names and top-level package comments don't get lost.
The pkg/ directory holds installed package objects.
The place we'd see it would be the inner most frame.
The plaintext and dst may alias exactly or not at all.
The platform's link register is unchanged during the prologue.
The point of this test file is that it references a type from depBase that is also referenced in dep2, but dep2 is loaded by the linker before depBase (because it is earlier in the import list).
The pointer arithmetic is done "by hand" instead of using arrays to avoid bounds checks along critical performance paths.
The pointer is shared between responses and should not be modified.
The pointer size is dictated by the table being read.
The pointers are 8 byte aligned.
The pointers are marked by a length byte with the top two bits set.
The pool is required to prevent unlimited growth of per-thread caches.
The pool size can be controlled with SetMaxIdleConns.
The port 443 is added if needed.
The port starts after the last colon.
The position Pos, if valid, points to the beginning of the offending token, and the error condition is described by Msg.
The position information recorded in the AST is undefined.
The position points to the beginning of the offending token.
The possible codes are:
The ppc64 ABI PLT has similar concepts to other architectures, but is laid out quite differently.
The practical effect of this is that the result of t.FieldByName("x") is not well defined if the struct type t contains multiple fields named x (embedded from different packages).
The pre-master secret is then calculated using ECDH.
The prebuilt race runtime lives in race_GOOS_GOARCH.syso.
The prec value is ignored for the 'b' or 'p' format.
The precision is the maximum number of mantissa bits available to represent the value.
The precision of z is unchanged and the result is always Exact.
The precision prec controls the number of digits (excluding the exponent) printed by the 'e', 'E', 'f', 'g', and 'G' formats.
The predecessor we come in from.
The predefined constant Unix uses an underscore to pad the day.
The preemption handler (in newstack) does the actual scan.
The prefix "long:" causes the test to be skipped in --test.short mode.
The prefix "type " is the type of a type.
The prefix and output lengths can be specified using the -prefix and -words flags on the command-line.
The prefix appears at the beginning of each generated log line.
The prefix is computed using heuristics such that is likely that the comment contents are nicely laid out after re-printing each line using the printer's current indentation.
The prefix is followed by a colon only when Llongfile or Lshortfile is specified.
The prefix is stripped after the ServeHTTP call finishes and the values are sent in the trailers.
The prefix is the bytes already read from the file, typically in order to detect that this is an object file.
The prefixes are given in descending order so that the 0 will be last.
The prefixes are listed in the same order as found in the instruction: each prefix byte corresponds to one slot in the array.
The presentation computations - year, month, minute, and so on - all rely heavily on division and modulus by positive constants.
The previous value...
The primary use of syscall is inside other packages that provide a more portable interface to the system, such as "os", "time" and "net".
The prime sieve: Daisy-chain Filter processes together.
The prime sieve: Daisy-chain Filter processes.
The print built-in function formats its arguments in an implementation-specific way and writes the result to standard error.
The printing of commands needs a complete redo.
The printing of those values happens only through walk functions.
The println built-in function formats its arguments in an implementation-specific way and writes the result to standard error.
The priorities assigned ensure that, all else being equal, the execution prefers to do what it would have done first in a simple depth-first dependency order traversal.
The priority of the item in the queue.
The private key is generated using the given reader, which must return random data.
The private key is the private key of the signer.
The probability of a sample of size S to appear in that profile is 1-exp(-S/R).
The probability of overflowing is minimal and can be ignored because we still perform Miller-Rabin tests on the result.
The problem is that mallocs come in real time, while frees come only after a GC during concurrent sweeping.
The problem is usually something like missing quotes or angle brackets, or can be avoided by refactoring to put the two contexts into different branches of an if, range or with.
The product should be the identity matrix.
The profile was fetch from src.
The profiler aims to sample an average of one allocation per MemProfileRate bytes allocated.
The profiler aims to sample an average of one blocking event per rate nanoseconds spent blocked.
The profiler aims to sample, on average, one blocking event every n nanoseconds the program spends blocked.
The profiler is forbidden from referring to garbage-collected memory.
The program is syntactically valid regardless of whether each name is a type or an ordinary identifier, so there will be no syntax errors that might stop parsing early.
The program string must be exported.
The proportion is controlled by GOGC environment variable (100 by default).
The proto file is inspired by the Plan 9 mkfs prototype file format.
The proto is "tcp" or "udp".
The protocol is such that each side only has a block or two on its free list at a time, so there's no need to worry about trimming the list, etc.
The protocol version for incoming server requests.
The prototypes are marked by lines beginning with "//sys" and read like func declarations if //sys is replaced by func, but: The parameter lists must give a name for each argument.
The provided Context must be non-nil.
The provided FileHeader fh must not be modified after a call to CreateHeader.
The provided URL may be relative or absolute.
The provided body may be nil.
The provided charset is the IANA charset name of s.
The provided code should be in the 3xx range and is usually StatusMovedPermanently, StatusFound or StatusSeeOther.
The provided cookie must have a valid Name.
The provided ctx must be non-nil.
The provided err indicates whether the connection completedly successfully.
The provided files must all belong to the same package.
The provided handler may be nil to use http.DefaultServeMux.
The provided key must be comparable.
The provided pseudo field should not contain the leading colon.
The provided public suffix list psl is broken.
The provided slice will be the same size as the Columns() are wide.
The pss-vect.txt file contains RSA keys and then a series of signatures.
The ptrace syscall differs from glibc's ptrace.
The purpose of this test is to at least explain why some of the subsequent tests fail.
The push of the binary happens in parallel with other tests.
The pw_gecos field isn't quite standardized.
The race builder should catch any error here, but doesn't.
The race detector doesn't know that we're waiting for a timeout and thinks that the waitgroup inside httptest.Server is added to concurrently with us closing it.
The race detector emits calls to split stack functions so it breaks the test.
The race window would be smaller, perhaps, but not guaranteed to be gone.
The race with StartTrace/StopTrace during tracing in exitsyscall is resolved by locking trace.bufLock in traceLockBuffer.
The racing doesn't work out nicely like it does on Unix.
The rand parameter is used as a source of entropy to ensure that encrypting the same message twice doesn't result in the same ciphertext.
The random parameter is used as a source of entropy to ensure that encrypting the same message twice doesn't result in the same ciphertext.
The random parameter, if not nil, is used to blind the private-key operation and avoid timing side-channel attacks.
The range is safe because the caller cannot modify our copy of the len and each iteration makes its own copy of the value c.
The range runs from Lo to Hi inclusive and has the specified stride.
The range runs from Lo to Hi inclusive, with a fixed stride of 1.
The ranges are listed in two slices to save space: a slice of 16-bit ranges and a slice of 32-bit ranges.
The rawurl may be relative or absolute.
The rbit is the bit immediately before the z.prec leading mantissa bits (the "0.5").
The read field is located in r.field.
The read should fault, except that sometimes we hit addresses that have had C or kernel pages mapped there readable by user code.
The readAll call will read into its allocated internal buffer cheaply.
The readOp constants describe the last action performed on the buffer, so that UnreadRune and UnreadByte can check for invalid usage.
The reader is positioned at byte offset 0 in the DWARF ``info'' section.
The reader is valid until the next call to Decode.
The reader must be positioned at the start of the file before calling this function.
The reader provided by the client.
The reader will disambiguate coarser classes from earlier versions of DWARF into the appropriate DWARF 4 class.
The real built-in function returns the real part of the complex number c.
The real fix is probably to define new values for LSym.Type corresponding to mapped and unmapped notes and handle them in dodata().
The real fix is to not store integers in pointer-typed locations.
The real part comes first.
The real store to the stack appears later in the arg list.
The real test here is that the "defer afterTest" above doesn't find any leaked goroutines.
The real type checker will be more accurate so we won't need the cheat.
The reason is a miscalculation of variable width.
The receive blocks until a value is ready.
The receiver denotes the result and the method arguments are the operation's operands.
The receiver is only used when the node does not have a pointer to the tree inside, which can occur in old code.
The receiver is then woken up to go on its merry way.
The receiver must be a type.
The receiver must exist.
The receiver verifies the hash by recomputing it using the same key.
The recognized name formats are:
The record is a slice of strings with each string representing one field.
The recorded sysexitticks must therefore be treated as "best effort".
The recover built-in function allows a program to manage behavior of a panicking goroutine.
The recover in "defer recover()" is now a no-op, because it runs called from panic, not from the func, and therefore cannot see the panic of 2.
The recover lets test1 exit normally.
The recursion depth is bound by ceil(log(N+M)).
The recursive updating was trying to walk to former dependencies, not current ones.
The recursive-descent parser is built around a slighty modified grammar of Go to accommodate for the constraints imposed by strict one token look- ahead, and for better error handling.
The recycled G is already on the rescan list.
The reduction error is nearly eliminated by contriving an extended precision modular arithmetic.
The reference time used in the layouts is the specific time: Mon Jan 2 15:04:05 MST 2006 which is Unix time 1136239445.
The reflect package was not correctly checking field names when checking for struct assignability.
The reflect.call function does a memmove of the frame structure onto the stack (to set up the inputs), runs the call, and the memmoves the stack back to the frame structure (to preserve the outputs).
The reg and rm arguments appear in the same order as the arguments to asmand, which typically follows the call to asmvex.
The regexp implementation provided by this package is guaranteed to run in time linear in the size of the input.
The regexp refers to storage in re or its children.
The regexp should have been simplified already (returned from re.Simplify).
The register allocator assumes that all live code in the function can be traversed by starting at all the RET instructions and following predecessor links.
The register allocator requires that a block is not scheduled until at least one of its predecessors have been scheduled.
The register optimizer has been changed to respect the same "address taken" flag that the liveness analysis uses, even if it cannot see any address being taken in the actual machine code.
The regular expression is matched against each line separately, as with the grep command.
The relative ordering of the prefixes within the combinations varies deterministically.
The relativeDistinguishedNameSET contains an attributeTypeAndValue for each of the given values.
The relevant pieces are built in encode.go's init() function.
The remainder may be modified if they preserve the value of the Value (e.g. changing a (mul 2 x) to an (add x x)).
The remainder of the MakeFunc implementation is in makefunc.go.
The remainder of the byte array (also not including the new line bytes) is also returned and this will always be smaller than the original argument.
The remainder of the header depends on the value of magic.
The remainder of the makeMethodValue implementation is in makefunc.go.
The remainder of the plaintext must be a string of non-zero random octets, followed by a 0, followed by the message.
The remainder of the plaintext must be zero or more 0x00, followed by 0x01, followed by the message.
The remaining 23+ bits give a method number for method values.
The remaining body was just consumed, close it.
The remaining parameters control the formatting:
The remaining patterns enumerate the only valid conversions from uintptr to Pointer.
The remaining signals are asynchronous signals.
The remaining test cases have variable length old strings.
The remote side is going to reply and then close the TCP connection, and HTTP doesn't really define if that's allowed or not.
The removed elements form a subring and the result is a reference to that subring (if no elements were removed, the result is still the original value for r.Next(), and not nil).
The replacement repl is substituted directly, without using Expand.
The replacement returned by repl is substituted directly, without using Expand.
The reply from the function (*struct).
The report claims that it happens when we have too many open files, so use syscall.EMFILE (too many open files in system).
The representation is a bit sleazy, inherited from C.
The representation limits the largest representable duration to approximately 290 years.
The representation of types is described below.
The req parameter optionally specifies the Request that corresponds to this Response.
The request Body, if non-nil, will be closed by the underlying Transport, even on errors.
The request or something set while executing the handler indicated we shouldn't reuse this connection.
The request parser implements this by using CanonicalHeaderKey, making the first character and any characters following a hyphen uppercase and the rest lowercase.
The reserved argument is true if the address space was really reserved, not merely checked.
The resolution is 2s.
The respective calls take care of calling updateExprType for the arguments if necessary.
The respective case entries are unreachable in the importer.
The respective sub-expressions got their final types upon assignment or use.
The response from the server is our own IP:port
The response is terminated by a line that starts with the same code followed by a space.
The rest of moduledata is zero initialized.
The rest of the line will be returned from future calls.
The rest of the rules still apply.
The rest of this file exists only to make calls to this function.
The rest of this function demonstrates the properties of the layout string used in the format.
The rest should be somewhat self-explanatory, at least given the decodeArg function.
The restore may be off in an unlikely branch somewhere and it would be better to have the spill in that unlikely branch as well.
The result (for a positive mask) cannot be negative, so elision applies to both signed and unsigned indexes.
The result Value slice returned by fn must have the number and type of results given by typ.
The result and abs share the same underlying array.
The result and x share the same underlying array.
The result contains at least one address when error is nil.
The result does not share its underlying array with list.
The result includes in its higher bits the bits for subsequent words described by the same bitmap byte.
The result is (nil, nil) in case of a syntax error.
The result is 125kB of source instead of 2MB.
The result is Cleaned, in particular all empty strings are ignored.
The result is Exact if x is not an Inf.
The result is a package node and a scanner.ErrorList if there were errors.
The result is also nil for the Universe scope.
The result is an error context if either of the input contexts are error contexts, or if the the input contexts differ.
The result is correctly signed, and the sign (+1 or -1) is also returned in a global (extern) variable named signgam.
The result is different from the zero value of the Value struct, which represents no value at all.
The result is guaranteed to be valid only if the type-checked AST has complete position information.
The result is long enough to include (at least) the rounding bit.
The result is nil if there is an error.
The result is round up to byte boundary.
The result is rounded per the precision and rounding mode of z unless z's precision is 0, in which case z is set exactly to the decoded value.
The result is rounded per the precision and rounding mode of z.
The result is sorted in decreasing order for numeric quantities, alphabetically for text, and increasing for addresses.
The result is sorted in source order.
The result is that we'll only get a single trusted chain to return to our caller.
The result is the bitmap entries (0 or 1), one entry per byte.
The result is the consolidated list.
The result is the incoming source.
The result is the removed subring.
The result is the value of dot.
The result is the value of z.
The result is undefined if the Unix time in nanoseconds cannot be represented by an int64.
The result is written into the codegen array, and the frequencies of each code is written into the codegenFreq array.
The result may be accessed by a field or map key invocation.
The result may be an absolute path or a path relative to the current directory.
The result may be an invalid position if it cannot be computed (obj.Decl may be nil or not correct).
The result may be used to manually fine-tune the threshold constant.
The result must be a single value.
The result of Scan is one of these tokens or a Unicode character.
The result of a comparison is an untyped boolean, but may not be a constant.
The result of assert is the value of pred if there is no error.
The result of encoding "hello" with field number 7
The result of encoding a number 17 with field number 7
The result of encoding a number 17+19i with field number 7
The result of encoding a true boolean with field number 7
The result of getcallersp is correct at the time of the return, but it may be invalidated by any subsequent call to a function that might relocate the stack in order to grow or shrink it.
The result of trace is the value of the first argument.
The result pixel is different than in the "copy*" test cases because of rounding errors.
The result points to the element following the last element of s after insertion.
The result should be used for accessing fields, not stored in other data structures.
The result sign always matches the sign of x, even for 0.
The result type depends only on lhs operand.
The result type is independent of operand types and the operand types must have final types.
The result will not be accurate if pc is not a program counter within f.
The result z has the same precision and rounding mode as mant.
The resulting Client object has two methods, Call and Go, that specify the service and method to call, a pointer containing the arguments, and a pointer to receive the result parameters.
The resulting bitvector will have no more than size/sys.PtrSize bits.
The resulting carry c is either 0 or 1.
The resulting function is for use in method tables.
The resulting map is stored in s.live.
The resulting memory block is freed when all subobjects are unreachable.
The resulting regexp will execute correctly but its string representation will not produce the same parse tree, because capturing parentheses may have been duplicated or removed.
The resulting trace is guaranteed to be consistent (for example, a P does not run two Gs at the same time, or a G is indeed blocked before an unblock event).
The resulting value of j(0,x) is compared with the actual value to correct the supposed value of j(n,x).
The results are guaranteed to be valid only if the type-checked AST has complete position information.
The results of a benchmark run.
The return address is preserved at (CFA-frame_size) after a stack frame has been allocated.
The return address is restored into the link register when a stack frame has been de-allocated.
The return type of append is the type of the first argument.
The return type of the method must be error.
The return types and values behave as in methods.
The return value can be passed to Syscall to run the procedure.
The return value fn is a pointer to the method code.
The return value for the method is an error.
The return value i is 0 if there is no name match.
The return value is a slice containing the successive return values of the corresponding non-'All' routine.
The return value is either nil to retry the request, the provided err unmodified, or the unwrapped error inside a beforeRespHeaderError.
The return value is the address of a bool variable that stores the value of the flag.
The return value is the address of a float64 variable that stores the value of the flag.
The return value is the address of a string variable that stores the value of the flag.
The return value is the address of a time.Duration variable that stores the value of the flag.
The return value is the address of a uint  variable that stores the value of the flag.
The return value is the address of a uint64 variable that stores the value of the flag.
The return value is the address of an int variable that stores the value of the flag.
The return value is the address of an int64 variable that stores the value of the flag.
The return value is the effective request "Range" header to use and whether this request is now considered done.
The return value is the index of the filter and also of the row in cr that has had it applied.
The return value is the index to insert x if x is not present (it could be len(a)).
The return value is the template, so calls can be chained.
The return value n is the number of bytes read.
The return value n is the number of bytes written.
The return value rcvrtype gives the method's actual receiver type.
The return value scanEnd indicates that a single top-level JSON value has been completed, *before* the byte that just got passed in.
The return value shared indicates whether v was given to multiple callers.
The return value t gives the method type signature (without the receiver).
The return value used is whether c was used.
The return value will be ErrHelp if -help or -h were set but not defined.
The return value will be floating point type corresponding to the type of c.
The return values are the number of bytes to advance the input and the next token to return to the user, plus an error, if any.
The return values are their zero values if StartTLS did not succeed.
The return values are unused but useful to see in panic tracebacks.
The returned *Float f is nil and the value of z is valid but not defined if an error is reported.
The returned Auth uses the given username and password to authenticate on TLS connections to host and act as identity.
The returned Auth uses the given username and secret to authenticate to the server using the challenge-response mechanism.
The returned Cmd's Args field is constructed from the command name followed by the elements of arg, so arg should not include the command name itself.
The returned DB is safe for concurrent use by multiple goroutines and maintains its own pool of idle connections.
The returned Frame is only valid until the next call to ReadFrame.
The returned Reader behaves as if the uncompressed data stream started with the given dictionary, which has already been read.
The returned Reader is only valid until the next call to a method on r.
The returned Request's Body field is not populated.
The returned Request's Body is populated, if applicable.
The returned RoundTripper ignores the URL host in its incoming requests, as well as most other properties of the request.
The returned Writer behaves as if the dictionary had been written to it without producing any compressed output.
The returned bool signals whether any invalid hex was found.
The returned buffer is only valid until the next call to ReadLine.
The returned bytes are owned by the bufio.Reader so they are only valid until the next bufio read.
The returned connection is of type *Conn.
The returned connection is only used by one goroutine at a time.
The returned connection's ReadFrom and WriteTo methods can be used to receive and send IP packets with per-packet addressing.
The returned connection's ReadFrom and WriteTo methods can be used to receive and send UDP packets with per-packet addressing.
The returned connection's ReadFrom and WriteTo methods can be used to receive and send packets with per-packet addressing.
The returned context's Done channel is closed when the deadline expires, when the returned cancel function is called, or when the parent context's Done channel is closed, whichever happens first.
The returned context's Done channel is closed when the returned cancel function is called or when the parent context's Done channel is closed, whichever happens first.
The returned encoder only checks CanAddr when allowAddr is true.
The returned error in that case is the detail.
The returned error is always nil, but is included to match bufio.Writer's WriteByte.
The returned error is always non-nil, constructed from the result of GetLastError.
The returned error is nil if the command runs, has no problems copying stdin, stdout, and stderr, and exits with a zero exit status.
The returned error message should be errRequestCanceled
The returned extensions will each begin with a leading dot, as in ".html".
The returned function is specialized for matching against s and should only be given s.
The returned line may be empty.
The returned lldb error code is usually non-zero.
The returned map m maps CanonicalMIMEHeaderKey(key) to a sequence of values in the same order encountered in the input.
The returned map, params, maps from the lowercase attribute to the attribute value with its case preserved.
The returned memory is always owned by the caller.
The returned net.Conn is assumed to already be past the TLS handshake.
The returned net.Conn may have read or write deadlines already set, depending on the configuration of the Server.
The returned os.File's file descriptor is different from the connection's.
The returned path does not end in a separator unless it is the root directory.
The returned path ends in a slash only if it is the root "/".
The returned pointer is always _PageSize aligned and between h.arena_start and h.arena_end.
The returned profile may be up to two garbage collection cycles old.
The returned prog should be Patch'ed with the jump target.
The returned records are sorted by priority and randomized by weight within a priority.
The returned rectangle has minimum and maximum coordinates swapped if necessary so that it is well-formed.
The returned regexp may share structure with or be the original.
The returned slice is only valid until s used again or returned to its pool.
The returned slice is the certificate in DER encoding.
The returned slice is the certificate request in DER encoding.
The returned slice points to shared data that may be overwritten by the next call to Token, a call to a Scan function using the ScanState as input, or when the calling Scan method returns.
The returned span has been removed from the free list, but its state is still MSpanFree.
The returned statement is an assignment with a right-hand side that is a single unary expression of the form "range x".
The returned statement operates within the transaction and can no longer be used once the transaction has been committed or rolled back.
The returned string and byte slice both refer to the same storage.
The returned struct must not be modified.
The returned template will have the (base) name and (parsed) contents of the first file matched by the pattern.
The returned template's name will have the (base) name and (parsed) contents of the first file.
The returned template's name will have the base name and parsed contents of the first file.
The returned type exists only for GC, so we only fill out GC relevant info.
The returned value is always the same and is not affected by calls to any other method.
The returned value is neither addressable nor settable.
The returned value shares pixels with the original image.
The returned value's address is v's value.
The returned values are the index, the number of bytes to consume up to the closing paren, if present, and whether the number parsed ok.
The rewriting is not yet complete.
The rhs type was updated when checking the shift.
The right delim might have the marker before.
The rip-relative offset stored in the object file is encoded as follows:
The root chosen is always in the right half plane and Im w has the same sign as y.
The roots of the graph are two lists of objects.
The rounding behavior for halfway values is to round up.
The rounding mode can be detected by checking whether huge + tiny is equal to huge, and whether huge - tiny is equal to huge for some floating point number "huge" and "tiny".
The rounding mode of the result operand determines the rounding mode of an operation.
The rounding mode specifies how a result should be rounded to fit into the mantissa bits, and accuracy describes the rounding error with respect to the exact result.
The routine may modify p if it is turned into a onepass Prog.
The rule is to display all the prefixes not implied by the usual instruction display, that is, all the prefixes except the ones with PrefixImplicit set.
The rules are different than for Go, so cannot use strconv.Unquote.
The rules are different: regardless of the underlying type's representation, we need to tell the other side that the base type is a GobEncoder.
The rules are the same as for /internal/ except that a path ending in /vendor is not subject to the rules, only subdirectories of vendor.
The rules for interfaces are no different in conversions than assignments.
The rules for which file descriptor-creating operations use the ForkLock are as follows:
The run-length encoding works like this: Any sequence of four equal bytes is followed by a length byte which contains the number of repeats of that byte to include.
The rune slice is not zeroed.
The runstress tool stresses the runtime.
The runtime and the compiler cooperate to ensure that all objects reachable from the stack as of mark termination are marked.
The runtime is O(log(N)*len(s)).
The runtime reserves space for this book-keeping structure at the top of the stack allocation itself (just above the outermost frame).
The runtime should have unwound this.
The runtime should see that there are no defers corresponding to this panicked frame and ignore the frame entirely.
The runtime should see the defer and garbage collect the frame as if the PC were immediately after the defer statement.
The runtime.GC checks that we can walk the stack at that point and not get confused.
The runtime.mmap function is nosplit, but t.Errorf is not.
The runtime/debug package's SetGCPercent function allows changing this percentage at run time.
The runtime/debug package's SetTraceback function allows increasing the amount of output at run time, but it cannot reduce the amount below that specified by the environment variable.
The salt is the first 8 bytes of the initialization vector, matching the key derivation in DecryptPEMBlock.
The salt is the first 8 bytes of the initialization vector.
The same algorithm applies in both cases, but the method tables for an interface type and a concrete type are different, so the code is duplicated.
The same as TestNoRaceBlockedSendSync above, but sender unblock happens in a select.
The same as entersyscall(), but with a hint that the syscall is blocking.
The same assembler is used for all target operating systems and architectures.
The same but with a pointer.
The same compiler is used for all target operating systems and architectures.
The same display rules will then be applied to the time value.
The same import path could produce an error or not, depending on what tries to import it.
The same interpretation will then be made to the input string.
The same is true for channel operations.
The same is true of slice literals.
The same notation before a '*' for a width or precision selects the argument index holding the value.
The same semantics will be provided by the generic MarshalBinary, MarshalText, UnmarshalBinary, UnmarshalText.
The same struct without interfaces
The satisfied tags are derived from context but only those that matter (the ones listed in the tags argument) are used.
The sbit is set if any of the bits before the rbit are set (the "0.25", "0.125", etc.):
The scan bit keeps them from running the goroutine until we're done.
The scan will match d2 to frame 2 but having d2 on the stack until then means it will not match d3 to frame 3.
The scan/dead bit on the first word must be set to scan since there are pointers somewhere in the object.
The scan/dead bit on the second word is the checkmark, so we don't set it.
The scanner uses the file set file for position information and it adds line information for each line.
The scavenger will use that info to potentially give back some pages to the OS.
The sched.pc will never be returned to, but setting it to goexit makes clear to the traceback routines where the goroutine stack ends.
The script tables have a lot of adjacent elements.
The second argument (newData) to Flowstart specifies a func to create object for every f.Data field, for use by the client.
The second argument is the destination.
The second argument, quote, specifies the type of literal being parsed and therefore which escaped quote character is permitted.
The second case is handled by decomposing all reachable interface types into method signatures.
The second half implements the conversion to and from wire format.
The second indirection allows to store a pointer to the slice in hiter.
The second is the SWIG program, which is a general tool for interfacing between languages.
The second iteration would produce something like
The second nibble is the Rune length or the Status for the special one-byte case.
The second part of this method applies the alpha.
The second rule means that a build of a cgo-wrapped library like sqlite3 can generate a standalone executable instead of needing to refer to a dynamic library.
The second table follows the same style, but the terms are 2**32G, 2**96G, 2**160G, 2**224G.
The second test is expensive.
The second word is the length of the bitmaps.
The security model used by this package assumes that template authors are trusted, while Execute's data parameter is not.
The security of the private key depends on the entropy of rand.
The sentence ends after the first period followed by space and not preceded by exactly one uppercase letter.
The sentinel is only used for verifying internal consistency.
The separator sep is placed between elements in the resulting slice.
The separator string sep is placed between elements in the resulting string.
The sequence of encoded tokens must make up zero or more valid XML elements.
The server calls Close when finished with the connection.
The server calls ReadRequestHeader and ReadRequestBody in pairs to read requests from the connection, and it calls WriteResponse to write a response back.
The server code and client code both use maxBytesReader.
The server code runs in a subprocess.
The server has just sent the fromServer data.
The server is trying to begin a request with the same ID as an in-progress request.
The server may handle requests on a single connection by calling ServeConn.
The server should echo the line, and close the connection.
The server should've seen both connections.
The server will block on getting conn.RemoteAddr.
The server writes these plaintexts in order.
The server's preferences should override the client.
The server, with no timeouts of its own, sending bytes to clients as fast as it can.
The service goroutines read requests and then call handler to reply to them.
The service goroutines read requests and then call srv.Handler to reply to them.
The set must be nonempty.
The set of available CPUs is checked by querying the operating system at process startup.
The set of valid characters must not intersect with the set of white space characters.
The setHeader struct holds headers we need to add.
The shadowed identifier must appear before this one to be an instance of shadowing.
The shared library contains a note containing the ABI hash that is mapped into memory and there is a local symbol called go.link.abihashbytes that points 16 bytes into it.
The shared library contains a note listing the packages it contains in a section that is not mapped into memory.
The shared library does not contain symbols called ".dup"
The shared library does not have relocations against the text segment.
The shared library was built at the expected location.
The shell now searches each directory specified by the PATH environment variable, in the order listed, for an executable file matching the command name.
The short encoding truncated the output value.
The short flag requests that tests run more quickly, but its functionality is provided by test writers themselves.
The shortest representation of f is either rounded up or down, but in any case, it is a truncation of upper.
The sigBlocked mask contains the signals not active for os/signal, initially all signals except the essential.
The sigaltstack assembly function does nothing.
The sign of the numerator corresponds to the sign of x.
The sign of x is ignored, and x must not be an Inf.
The signal handler for the profiling clock tick adds a new stack trace to a hash table tracking counts for recent traces.
The signal handler handles it directly.
The signaller has subtracted mutexWait.
The signature may either be ECDSA or RSA.
The signed integer value.
The sigprof handler must read the instruction at the current PC and if it was the known instruction (for example, JMP BX or MOV R2, PC), use that other register in place of the PC value.
The simplest use of a Scanner, to read standard input as a set of lines.
The simulation is not particularly tied to NaCl other than the reuse of NaCl's definition for the Stat_t structure.
The simulation is not particularly tied to NaCl, but other systems have real networks.
The single argument isn't actually used - it just has its address taken so it can be matched against pending defers.
The single letters are the abbreviations used by the String method's formatting.
The size at which to start a slice in the 'All' routines.
The size below was determined by the specification for array relocations, and by observing what GCC writes here.
The size does not include any memory possibly referenced by x.
The size field ends at the first space.
The size hint is used for shrinking as a function of indirection level so that recursive data structures will terminate.
The size is in decimal.
The size may be omitted, in which case a small starting size is allocated.
The size of a CRC-32 checksum in bytes.
The size of a CRC-64 checksum in bytes.
The size of a SHA1 checksum in bytes.
The size of a SHA224 checksum in bytes.
The size of a SHA256 checksum in bytes.
The size of an Adler-32 checksum in bytes.
The size of an MD5 checksum in bytes.
The size of an entry is the sum of its name's length in octets (as defined in Section 5.2), its value's length in octets (see Section 5.2), plus 32.
The size of any C type T is available as C.sizeof_T, as in C.sizeof_struct_stat.
The sizeFunc is called at most once.
The skip parameter has the same meaning as runtime.Caller's skip and controls where the stack trace begins.
The slice aliases the buffer content at least until the next buffer modification, so immediate changes to the slice will affect the result of future reads.
The slice is now a depth-first spanning tree with the first node being the root.
The slice is only valid until the next call to a read or write method.
The slice is valid for use only until the next buffer modification (that is, only until the next call to a method like Read, Write, Reset, or Truncate).
The slice may share memory with the BitString.
The slice must be sorted in ascending order.
The slice returned by this method consists of all the substrings of s not contained in the slice returned by FindAllString.
The slice should not be modified.
The slice should now contain random bytes instead of only zeroes.
The slices s and t must have the same element type.
The slow version (d2) was less than 20 times slower than the fast version (d1), so OK.
The small objects on the MCache and MCentral free lists may or may not be zeroed.
The smallest match length per the RFC section 3.2.5
The smallest match length that the compressor actually emits
The smallest match offset
The smallest possible allocation is 8 bytes.
The smallest possible offset from the hardware stack pointer to a local variable on the stack.
The socket constructor can return an fd with raddr nil under certain unknown conditions.
The sole exception is when the function returns the special value SkipDir.
The solution is to use a proxy goroutine to do automatic buffering.
The sort is not guaranteed to be stable.
The sort keys are kept inline to improve cache behaviour while sorting.
The sort order is first based on the edge weight (higher-to-lower) and then by the node names to avoid flakiness.
The source argument does tell us operand size, but libopcodes still always puts a suffix on crc32.
The source code may be provided via the filename of the source file, or via the src parameter.
The source code may include additional Go code.
The source end is indicated by token.EOF.
The source files foo/f.go, foo/bar/x.go, and foo/quux/y.go can all import "foo/internal/baz", but the source file crash/bang/b.go cannot.
The sources are sorted by function name and then by filename to eliminate potential nondeterminism.
The space modifier should have no effect.
The span must be in our exclusive ownership until we update sweepgen, check for potential races.
The span of valid linenos in the recorded line history can be broken into a set of ranges, each with a particular stack.
The span's sweep extinguishes all the references to gcBitsArenas.previous by pointing gcAllocBits into the gcBitsArenas.current.
The sparse map for the file
The sparse map is stored in the PAX headers.
The sparse map is stored in the tar header if it's small enough.
The spec (Appendix F - Compression), says that "An End of Information code...
The spec (section 11.2.3) says that "any out-of-range pixel value found in the image data is an error", but some real-world PNG files have out-of-range pixel values.
The spec asks that we namespace our pseudo files with the current pid.
The spec calls these values Ss, Se, Ah and Al.
The spec requires size be 11, but Adobe sometimes uses 10.
The spec says to ignore unknown request IDs.
The spec says: "Although not originally assigned a signature, the value 0x08074b50 has commonly been adopted as a signature value for the data descriptor record.
The special cases are the same as for Log.
The special code used to mark the end of a block.
The special form /* ERROR HERE "rx" */ must be used for error messages that appear immediately after a token, rather than at a token's position.
The special itself is a root.
The special precision -1 uses the smallest number of digits necessary such that ParseFloat will return f exactly.
The specific error message may not occur when using system verification.
The specific input forms are chosen so that they are valid C syntax regardless of whether name denotes a type or an expression.
The specific rules are: (1) Any instruction with a valid LOCK prefix can have XACQUIRE or XRELEASE.
The specification doesn't mention them, but these seem to be the values agreed on by tools.
The specification of the result depends on the type: Slice: The size specifies the length.
The specified files must be Go source files and all part of the same package.
The spill may be used in the future, either by an outright use in the code, or by shuffling code inserted after stack allocation.
The split function defaults to ScanLines.
The sql package must be used in conjunction with a database driver.
The src is 1 element bigger than dst, but it must be NUL.
The src pointer is off bytes into the gcbits.
The src value will be of one of the following types:
The src/ directory holds source code.
The stack bounds check detects the partial transition here, and (again) signal handlers run with signals disabled, so a profiling signal cannot arrive then anyway.
The stack does not keep pointers to nodes, so they can be garbage collected if there are no other pointers to nodes.
The stack guard is a pointer this many bytes above the bottom of the stack.
The stack includes p.ImportPath.
The stack is dirty from the argument frame, so queue it for scanning.
The stack is maintained as a linked list, using Sym's Link field.
The stack is not owned *except* that a channel operation may read or write parts of the stack under the appropriate channel lock.
The stack is not owned.
The stack is owned by the goroutine that put it in _Gcopystack.
The stack is owned by this goroutine.
The stack map for deferproc does not describe them.
The stack nosplit check ignores this since it is not a function call.
The standard assemblers expect .s files.
The stanza begins by defining a set of strings, quoted using Go double-quote syntax, one per line.
The start and end addresses are program counters written in hexadecimal with optional leading 0x prefix.
The starting '(' has been scanned.
The starting position, in bytes, of this item in the input string.
The starting sp has been passed in as a uintptr, and the caller may have other uintptr-typed stack references as well.
The startup code uses an import of runtime/cgo to decide whether to initialize the TLS.
The state is combination of 2 flags.
The state of this dance between the signal handler and the goroutine is encoded in the Profile.handoff field.
The statement ds may be nil, if no statement is available.
The statements prepared for a transaction by calling the transaction's Prepare or Stmt methods are closed by the call to Commit or Rollback.
The static header table is searched first.
The stdin return value is an opensslInput for the stdin of the child process.
The step is a func to be called to execute the next transition.
The step processes the rune c (which may be endOfText), which starts at position pos and ends at nextPos.
The stoplist contains keywords that start a statement.
The storage is not zeroed.
The store is automatically freed when the CertContext is freed using syscall.CertFreeCertificateContext.
The store scales under load (when many goroutines are actively printing) and shrinks when quiescent.
The string allocation below is optimized away because it is only used in a map lookup.
The string data is 1 pointer + 1 (pointer-sized) int.
The string net gives the network name, "unix", "unixgram" or "unixpacket".
The string refers to storage in re or its children.
The string representation may use shortened package names (e.g., base64 instead of "encoding/base64") and is not guaranteed to be unique among types.
The string returned is the format name used during format registration.
The string s contains the text to print after the prefix specified by the flags of the Logger.
The string table needs to be the last thing in the file for code signing to work.
The string without the enclosing quotes is greater than maxLen-2 runes long.
The string, after quote processing.
The strings mostly use gofmt form.
The struct fields x.before and x.after check that the operations do not extend past the full word size.
The structLookupCache caches StructOf lookups.
The structure contains an IP adapter and flattened multiple IP addresses including unicast, anycast and multicast addresses.
The subobjects must be noscan (don't have pointers), this ensures that the amount of potentially wasted memory is bounded.
The subsequent iterations should return the -0 key.
The successive delay times, one per frame, in 100ths of a second.
The successive images.
The successor we always go to when coming in from that predecessor.
The suffix is unlikely to be empty because file names tend to end in ".go".
The suffix must start with a lower-case letter.
The suggested behavior here is to keep trying with ever-larger buffers, but we don't have a dynamic memory allocator at the moment, so that's a bit tricky and seems like overkill.
The suggested increment frequency for PowerPC's time base register is 512 MHz according to Power ISA v2.07 section 6.2, so we use 16 on ppc64 and ppc64le.
The summary weight of the edge
The swap operation, implemented by the SwapT functions, is the atomic equivalent of:
The sweep phase proceeds concurrently with normal program execution.
The sweep will free the old allocBits and set allocBits to the gcmarkBits.
The switch involves updating three (or four) values: g, PC, SP, and (on arm) LR.
The symbol "::" MUST NOT be used to shorten just one 16 bit 0 field.
The symbolizer function may be called while the program is crashing, and so must be cautious about using memory.
The symbolizer function may be nil, in which case the results of the traceback function will be displayed as numbers.
The symbolizer function will be called with a single argument, a pointer to a struct:
The symbolizer must add that if appropriate.
The symbols are uint16s because bzip2 encodes not only MTF indexes in the tree, but also two magic values for run-length encoding and an EOF symbol.
The symbols used are stored as a two-level, 16x16 bitmap.
The symbols will be listed in the order they appear in f.
The symname function queries the symbol table for the program being disassembled.
The syntax follows the syntax of integer literals in Go.
The syntax is as follows:
The syntax is described in the top-level comment.
The syntax made sure it was a call, so this must be a conversion.
The syntax of patterns is the same as in Match.
The syntax of such definitions is to surround each template declaration with a "define" and "end" action.
The syntax of the regular expressions accepted is the same general syntax used by Perl, Python, and other languages.
The syntax was originally defined by Plan 9.
The syscall might have pointers into the stack.
The syslog package is frozen and not accepting new features.
The system creates an access token when a user logs on, and every process executed on behalf of the user has a copy of the token.
The system uses the token to control access to securable objects and to control the ability of the user to perform various system-related operations on the local computer.
The system will attempt to allocate these IDs densely, but no guarantees.
The table format is a variant of the format used in Plan 9's a.out format, documented at https://9p.io/magic/man2html/6/a.out.
The table is a sequence of (value, pc) pairs, where each pair states that the given value is in effect from the current position up to the given pc, which becomes the new current position.
The table is delta-encoded.
The table is formatted for 8-space tabs.
The table t must be sorted from largest mask size to smallest.
The tabwriter could provide trimming functionality but no tabwriter is used when RawFormat is set.)
The tabwriter here helps us generate aligned output.
The tabwriter passes escaped text segments through unchanged.
The tag must be one that takes string values: DT_NEEDED, DT_SONAME, DT_RPATH, or DT_RUNPATH.
The tag name ends at a comma or paren (prefer the first).
The tag value indicates the kind of object that follows and that this is the first time that we see this object.
The tags didn't match, it might be an optional element.
The tags list, which came from go/build's Package.AllTags, is known to be sorted.
The target directory must either not exist or have a repo checked out already.
The target is named p.a for package p or named after the first Go file for package main.
The target is the RFC 7230 "request-target": it may be either a path or an absolute URL.
The template Name still needs to be supplied.
The temporaries t1, t2 are needed in case the ...
The test binary itself runs when started is set to true.
The test can take a very long time and prints progress messages to package log.
The test cases are described as functions that invoke a callback repeatedly, with a new input sequence each time.
The test cases are from the strconv package which tests float64 values.
The test cases below come from RFC 3492 section 7.1 with Errata 3026.
The test consumed up to 500MB in the past.
The test data "2.71828 etcetera" is ASCII text requiring at least 6 bits.
The test depends on that.
The test depends on the level cap in the escape analysis tags being able to encode that fact.
The test driver in main.go can then compare the coverage statistics with expectation.
The test ensures that compiler can chew these huge types even on weakest machines.
The test fails when the function is the first C function.
The test file format is a sequence of stanzas like:
The test file should be generated with a known working version of go.
The test filenames do not end in .go so that they are invisible to gofmt since they contain comments that must not change their positions relative to surrounding tokens.
The test files have a gAMA chunk but the go PNG parser ignores it (the PNG spec section 11.3 says "Ancillary chunks may be ignored by a decoder").
The test files must end in .src rather than .go so that they are not disturbed by gofmt runs.
The test files were created in Sydney, so there might be a time zone issue.
The test for failure is in ../bug083.go.
The test for the gc compiler resets the stack pointer so that the stack gets modified.
The test is OS-agnostic.
The test is cheaper than the call.
The test is run with external linking, which means that goroutines will be created via the runtime/cgo package.
The test is set up by mmapping a 64 kB block of memory and then unmapping a 16 kB hole in the middle of it.
The test is skipped if REG_feature is not supported by the implementation.
The test ran correctly most of the time, because the background goroutine had usually read even those extra bits by now, but it's not a useful thing to check.
The test still runs (unless -c or -i is specified).
The test verifies that the server correctly selects that certificate.
The testfile must not contain multi-line raw strings since those are not indented (because their values must not change) and make this test fail.
The testing package is just its home.
The tests are run sequentially, so there's no need for locks.
The tests in package compress/gzip serve as the end-to-end test of the decompressor.
The tests will skip (not fail) the test case if they see this error.
The theory is that there wasn't enough work to do anyway, so we might as well let background marking take care of the work that is available.
The third case is handled by looking to see if any of: - reflect.Value.Call is reachable - reflect.Value.Method is reachable - reflect.Type.Method or MethodByName is called.
The third result value reports if it is indeed the comma-ok case.
The this argument and the in arguments are always assumed live.
The thread pointer is typically stored in the register pair AR0 and AR1.
The thread that locks the stack in this way unlocks the stack by storing a valid stack head pointer.
The three addresses are the r/m, vvvv, and reg fields.
The time being formatted must be in UTC for Format to generate the correct format.
The time is a quoted string in RFC 3339 format, with sub-second precision added if present.
The time is expected to be a quoted string in RFC 3339 format.
The time is expected to be in RFC 3339 format.
The time is formatted in RFC 3339 format, with sub-second precision added if present.
The time routines provide no way to get absolute time (seconds since zero), but we need it to compute the right answer for bizarre roundings like "to the nearest 3 ns".
The time taken is a function of the length of the slices and is independent of the contents.
The time zone attached to the time value affects its output.
The time zone database needed by LoadLocation may not be present on all systems, especially non-Unix systems.
The timeout includes connection time, any redirects, and reading the response body.
The timeout includes name resolution, if required.
The timeout is specified in microseconds - ensure that we do not end up dividing to zero, which would put us to sleep indefinitely...
The timer proc is now sleeping and can only be awoken by adding a timer to the *beginning* of the heap.
The timer remains running after Get, Head, Post, or Do return and will interrupt reading of the Response.Body.
The title is the second subexpression.
The tok value must be one of token.INT, token.FLOAT, token.IMAG, token.CHAR, or token.STRING.
The token identifies the user, the user's groups, and the user's privileges.
The token is ASCII, so checking only a single byte is sufficient.
The tool name must be lower-case letters, numbers or underscores.
The toolchain supports relative import paths as a shortcut in two ways.
The tools that process the memory profiles assume that the profile rate is constant across the lifetime of the program and equal to the current value.
The top 16 bits must echo bit 47.
The top 5 bits of the mantissa are used to load limits from a table of constants and the rest are used to scale linearly between them.
The top parameter is whether we are at the top level, where Go pointers are allowed.
The top-level functions such as BoolVar, Arg, and so on are wrappers for the methods of CommandLine.
The top-level template will be given the specified name.
The total number of bytes allocated.
The total number of bytes in all the ranges is larger than the size of the file by itself, so this is probably an attack, or a dumb client.
The total number of memory allocations.
The total time taken.
The traceback and context functions may be called from a signal handler, and must therefore use only async-signal safe functions.
The traceback function may also be called deeper in the call stack on the same thread that recorded the context.
The traceback function may be called from an execution thread other than the one that recorded the context, but only when the context is known to be valid and unchanging.
The traceback function should gather a stack trace from that saved point in the program execution.
The traceback function will be called with a single argument, a pointer to a struct:
The traceback should look something like this, modulo line numbers and hex constants.
The tracebacks with callbacks only happen when everything is stopped nicely.
The trail is a little odd because of how the graph is constructed.
The trailing rest field is not available in cgo.
The trampoline records that the stack has unwound past this frame and jumps to the original return PC recorded when the stack barrier was installed.
The translations to pop when ending a given tag are *below* it on the stack, which is more work but forced on us by XML.
The transparentIndex is out of range, which is an error according to the spec, but Firefox and Google Chrome seem OK with this, so we enlarge the palette with transparent colors.
The transport used to perform proxy requests.
The tree can't have greater depth than n - 1, no matter what.
The tree indexes are move-to-front transformed and stored as unary numbers.
The tv passed to gettimeofday must be non-nil but is otherwise unused.
The two are already known to share the common structure.
The two control structures are identical in behavior except that 'with' sets dot.
The two images must have the same bounds.
The two known misprints in the book are repaired here in the source listings for the gamma function and the incomplete beta integral.
The two maps must not be the same, or nil.
The two methods are simple enough to be implemented by hand rather than by using a protocol compiler.
The two returned values must have the same high byte.
The two returned values must have the same low byte.
The two sizes that follow here can be either 32 bits or 64 bits but the spec is not very clear on this and different interpretations has been made causing incompatibilities.
The two slices must be in sorted order and non-overlapping.
The typ+val+flag bits describe the receiver r, but the flag's Kind bits say Func (methods are functions), and the top bits of the flag give the method number in r's type's method table.
The type and parameter names are written in lower-case.
The type and value of the flag are represented by the first argument, of type Value, which typically holds a user-defined implementation of Value.
The type at that depth shadows this same type at the current depth, so we can ignore this one.
The type bit is the lower of every two-bit pair.
The type checker reports an error if an importer is needed but none was installed.
The type has a GC program.
The type is retained for compatibility.
The type is the first word in the struct.
The type might be a pointer and we need to keep dereferencing to the base type until we find an implementation.
The type mismatches should be fixed and the clearing below removed.
The type object may have been imported before and thus already have a type associated with it.
The type of C is the (named) type of A which is incomplete, and which has as its underlying type the named type B.
The type of Image returned depends on the PNG contents.
The type of the memory is typ, and src is off bytes into that type.
The type of the slot is immaterial - it will not be live across any safepoint.
The type of this information depends on the opcode and type.
The type of this item.
The type of this value.
The type of wireType itself is known (it's built in, as is the type of all its components), so we just need to send a *value* of type wireType that represents type "Point".
The type of x.f is a function (without receiver) and an additional first argument with the same type as x.
The type of x.f is a method with its receiver type set to the type of x.
The type typ must have a plain bitmap, not a GC program.
The type, taken from the preamble (i.e. "RSA PRIVATE KEY").
The typeUnit format is a single type with a signature.
The typechecker itself doesn't need this information so it is not explicitly provided.
The typedef entry must be created after the def, so that future lookups will find the typedef instead of the real definition.
The types are not allocated at runtime.
The types are ordered by the corresponding TypeName's unique Id.
The types in each module are sorted by string.
The types package does not call Import if an ImporterFrom is present.
The types structTypeFixed4, ...structTypeFixedN are used to do this.
The typical use case for NewFileTransport is to register the "file" protocol with a Transport, as in:
The typical use of ExtraUsage is to show any custom flags defined by the specific pprof plugins being used.
The typical use of a Writer is to call Init, maybe call Debug, make a sequence of Ptr, Advance, Repeat, and Append calls to describe the data type, and then finally call End.
The tzdata name Etc/GMT+1 uses "east is negative", but Go and most other systems use "east is positive".
The uint64 is then byte-reversed and sent as a regular unsigned integer.
The unary expression e may be nil.
The underlying Seeker's error text isn't included in the sizeFunc reply so it's not sent over HTTP to end users.
The underlying array may point to data that will be overwritten by a subsequent call to Scan.
The underlying filesystem may truncate or round the values to a less precise time unit.
The underlying implementation is a *LimitedReader.
The underlying io.Reader may not return (0, io.EOF) at EOF if the requested size is 0, so read 1 byte instead.
The underlying resolver func is lookupIP by default but it can be overridden by tests.
The underlying slice is owned by the Framer and must not be retained after the next call to ReadFrame.
The underlying template's parse tree, updated to be HTML-safe.
The underlying type must not be a *Named.
The underlying type of named may be itself a named type that is incomplete:
The underlying wire format limits the range of lengths and offsets.
The unexported fields are cleared up to facilitate testing.
The union should be the smallest rectangle a such that every point in r is in a and every point in s is in a.
The unit is Unicode code points.
The units for cacheStart and cacheEnd are seconds since January 1, 1970 UTC, to match the argument to lookup.
The unlock acts as the barrier to order these writes.
The unordered set of Values that define the operation of this block.
The unresolved object is a sentinel to mark identifiers that have been added to the list of unresolved identifiers.
The unsigned integer value.
The unsigned zero year for internal calculations.
The unusual ancestry means the arguments are not Go-standard.
The updateExprType method is used to record this final type and update the recorded types: the type-checked expression tree is again traversed down, and the new type is propagated as needed.
The upper and lower bounds are possible outputs only if the original mantissa is even, so that IEEE round-to-even would round to the original mantissa and not the neighbors.
The upper and lower bounds are possible outputs only if the original mantissa is even, so that ToNearestEven rounding would round to the original mantissa and not the neighbors.
The upper bits of m.locked record the nesting depth of calls to lockOSThread (counting up by LockInternal), popped by unlockOSThread (counting down by LockInternal).
The use of runtime.GOOS and runtime.GOARCH makes sure that a cross-compiled compiler expects to compile for its own target system.
The use of the global functions is the same, without the receiver.
The use of the struct provides type information to the garbage collector so that it can walk the closure.
The user remains responsible for linking against -lgo -lpthread -lm in the final link.
The user should not call Hijack while Read or Write is in progress.
The uses and definition of use can be removed early in the Go 1.7 cycle.
The usual case is caught by Push, below, but be safe.
The usual culprit is ".git".
The usual culprit is resolving many DNS names in separate goroutines but the DNS server is not responding.
The usual underlying implementation is operating system-dependent: on Unix it is syscall.Signal.
The usual use for such a uintptr is to print it.
The value -1 indicates that the length is unknown.
The value 0xff was chosen because it cannot appear in a valid UTF-8 sequence.
The value deltas are signed and transmitted in zig-zag form, where a complement bit is placed in bit 0, and the pc deltas are unsigned.
The value ep sent by the sender is copied to the receiver sg.
The value has been "unquoted".
The value here is the IPv6 minimum MTU (1280 bytes) minus the overhead of an IPv6 header (40 bytes) and a TCP header with timestamps (32 bytes).
The value includes the 2 bytes for the length itself, so we subtract 2 to get the number of remaining bytes.
The value indicates the number of entries in the log half being handed off.
The value is advice for clients: neither ReadResponse nor Response.Write ever closes a connection.
The value is parsed and stored under all the types that can represent the value.
The value is useful to stop processing early or when it is necessary to deliver a final empty token.
The value may contain spaces.
The value must not contain a zero byte.
The value of single-char tokens is just their character's Unicode value.
The value of the boolean constant.
The value of this item.
The value of z is undefined in that case.
The value should start with 0x and be an even number of hex digits.
The value stored in the interface has the corresponding Go type.
The value stored with this element.
The value strings must not contain a zero byte.
The value that is currently offset 7 will be offset 5 for the next iteration and then offset 3 for the iteration after that.
The value that the returned Value represents is guaranteed to be non-nil.
The values are a 12-bit code.
The values are derived from section K.1 after converting from natural to zig-zag order.
The values assigned to certain and local only matter in their rank order.
The values may be nil or their final values.
The values of n_namesz and n_descsz do not include the padding.
The values of these bits should be considered part of the public API and may be used in wire protocols or disk representations: they must not be changed, although new bits might be added.
The values x are passed to a parameter of type ...T where T is the element type of S and the respective parameter passing rules apply."
The variable "v" is predefined to be the value matched by the entire rule.
The variable is associated with the OANDAND node in the s.vars table (normally variables are only associated with ONAME nodes).
The variable is not defined by b and we haven't looked it up yet.
The variable-sized strings are GOOS, GOARCH, and the experiment list (X:none).
The variables being written do not appear in n.
The variadic argument controls whether the function is variadic.
The vars argument is a slice of *Nodes.
The vcs is one of "git", "hg", "svn", etc, The repo-root is the root of the version control system containing a scheme and not containing a .vcs qualifier.
The verification seed doesn't appear to be exported or used by other code and omitting it makes the code cleaner.
The very end might be just padding that is not covered by the tables.
The very first time only, e.typ may be nil.
The viewer might just send a message to another program to open the file.
The way the code generator uses floating-point registers, a move from F0 to F0 is intended as a no-op.
The week number is now correct under the assumption that the first Monday of the year is in week 1.
The whole (non-expired) content of the jar
The whole request body is parsed and up to a total of maxMemory bytes of its file parts are stored in memory, with the remainder stored on disk in temporary files.
The whole table starts after pc.
The width of each entry in the link table is the maximum code size minus the chunk width.
The widths of tags and entities are assumed to be zero (tags) and one (entities) for formatting purposes.
The window size is 7 so we need to double 7 times.
The winner must therefore be one with the shortest index length.
The winning score in a game of Pig
The wire format for https and http are the same, anyway.
The wire format for the DNS packet header.
The wire protocol for HTTP's "chunked" Transfer-Encoding.
The word LINE is replaced by the line number in this file.
The word list includes setup, install, update, and patch, but it does not appear to be defined anywhere.
The words that are followed are the raw bitmap words.
The work buffer is filled by write barriers, drained by mutator assists, and disposed on certain GC state transitions.
The worker G is no longer running, so it's now safe to allow preemption.
The working directory at initialization is the root of the app bundle: "/private/.../bundlename.app".
The working directory in Plan 9 is effectively per P, so different goroutines and even the same goroutine as it's rescheduled on different Ps can see different working directories.
The world is started but we've set trace.shutdown, so new tracing can't start.
The world is stopped so gp will not be in a scan state.
The world is stopped, sched is locked.
The world must be stopped.
The world should be stopped so this should not happen.
The write functions are all defined in write.go.
The writeCommentSuffix result indicates if a newline was written or if a formfeed was dropped from the whitespace buffer.
The writeCopy and tryWriteCopy are used to implement this command.
The writers know how to marshal a 32-bit representation from the 64-bit structure.
The x.(T) assertions used to write 1 (unexpected) return byte for the 0-byte return value T.
The xxxInterface routines build up a value to be stored in an empty interface.
The y argument must be an odd integer.
The year of the zero Time.
The zero (nil) value of Bits is a ready to use Bits value and represents the value 0.
The zero (uninitialized) value for a Float is ready to use and represents the number +0.0 exactly, with precision 0 and rounding mode ToNearestEven.
The zero Kind is not a valid kind.
The zero Reg value has no name but indicates ``no register.''
The zero Time value does not force a specific epoch for the time representation.
The zero ValAndOff encodes a value of 0 and an offset of 0.
The zero Value represents no value.
The zero duration formats as 0, with no unit.
The zero extension doesn't affect store instructions
The zero value denotes R0, not the absence of a register.
The zero value for Buffer is an empty buffer ready to use.
The zero value for Config is a ready-to-use default configuration.
The zero value for List is an empty list ready to use.
The zero value for Scope is a ready-to-use empty scope.
The zero value for Server is a valid configuration.
The zero value for a MethodSet is a ready-to-use empty method set.
The zero value for a Rat represents the value 0.
The zero value for a Ring is a one-element ring with a nil Value.
The zero value for a Value returns nil from Load.
The zero value for an ErrorList is an empty ErrorList ready to use.
The zero value for an Int represents the value 0.
The zero value for decimal represents a ready-to-use 0.0.
The zero value for each field is equivalent to dialing without that option.
The zero value for objset is a ready-to-use empty objset.
The zero value is "secure".
The zero value of a FlagSet has no name and has ContinueOnError error handling.
The zero value of operand is a ready to use invalid operand.
The zeroth token is already there.
The zone abbreviation "UTC" is recognized as UTC regardless of location.
Their CFGs must be isomorphic, and their values must correspond.
Their HTTP client may or may not be able to read this if we're responding to them and hanging up while they're still writing their request.
Their names are matched by this regular expression:
Their responses will hang until we write to resch, though.
Then -- even larger objects.
Then Ps don't have to fight in the window where we've passed that deadline and no one has started the worker yet.
Then add anything that's left.
Then arrange to continue running as though the caller of the deferred function returned normally.
Then choose subset that is "ready" to be merged, that is, events for which all dependencies are already merged.
Then comes n_descsz bytes of descriptor, again padded to a word boundary.
Then direct to execution.
Then each of the goroutines runs and calls Done when finished.
Then in esc we'll clear it again.
Then inlcalls walks each function body to expand calls to inlinable functions.
Then it generates a report formatted according to the options selected through the flags package.
Then it invokes the host linker (usually gcc) to combine the go.o object file and any supporting non-Go code into a final executable.
Then make add increment the size.
Then n.opt - 1 is the index in the variables list.
Then scan the functab array starting at that index to find the target function.
Then something small.
Then the goroutine calls e.g. new and falls down into the scheduler due to pending GC.
Then the many lookups each use a different thread, and the system or the program runs out of threads.
Then the regexps section gives a sequence of regexps to run on the strings.
Then they can iteratively decrypt a record by breaking each byte.
Then try all the auxiliary groups.
Then use the pprof tool to look at the heap profile:
Then we choose event with the lowest timestamp from the subset, merge it and repeat.
Then with CRLFs, thank you Windows.
Then, any leftover whitespace is printed, followed by the actual token.
Then, if directory exists, we should proceed.
Theoretically, this is a quadratic lookup algorithm, but in practice deeply nested composite types with unnamed component types are uncommon.
There appear to be some loops in the escape graph, causing arbitrary recursion into deeper and deeper levels.
There are 16 methods of Regexp that match a regular expression and identify the matched text.
There are 2 parts: 1) The value sent by the sender sg is put into the channel and the sender is woken up to go on its merry way.
There are 3 main classes of nodes: Expressions and type nodes, statement nodes, and declaration nodes.
There are 500+ zoneinfo files.
There are _SIG constants in os2_plan9.go for the table index of some of these.
There are a wide range of possible addresses the heap may use, that may not be representable as a 32-bit offset.
There are actually two lists of bitmaps, one list for the local variables and one list for the function arguments.
There are bad indexes in the format or there are fewer arguments than the format needs.
There are four reserved names for paths that should not be used for packages to be built with the go tool: - "main" denotes the top-level package in a stand-alone executable.
There are four special operations available for type Pointer that are not available for other types: - A pointer value of any type can be converted to a Pointer.
There are golang.org/x/net/ipv4 and golang.org/x/net/ipv6 packages for general purpose uses.
There are hardware instructions that can be used to make this faster if profiling warrants it.
There are many other DWARF sections, but these are the ones the debug/dwarf package uses.
There are many possible trees that assign the same code length to each symbol (consider reflecting a tree down the middle, for example).
There are many reserved words on Windows that, if used in the name of an executable, cause Windows to try to ask for extra permissions.
There are many types of messages, but they all share the same header.
There are more entries.
There are multiple implementations: all that matters is that we can find out how many traces there are and obtain each trace in turn.
There are never spaces at level 6 (unary), and always spaces at levels 3 and below.
There are no Google hits for b01dfacedebac1e or 0xb01dfacedebac1e as I type this comment.
There are no fundamental restrictions on the value.
There are no guarantees there, and the assemblers just use one big list.
There are no heap bits for value stored on the stack.
There are no mark characters in Latin-1.
There are no more bytes of data in this segment, but we may still be able to read the next symbol out of the previously read bits.
There are no tags here, so S should not appear.
There are no un-SSAable types in dummy land.
There are only 8 MMX registers, so these ignore the REX.X bit.
There are only a few block types so we can make this one function with a switch.
There are other m's that need to dump their stacks.
There are relocations, so this must be a normal object file, and we only look at section symbols, so we assume that the symbol value is 0.
There are some complications.
There are some portable opcodes, declared here in package obj, that are common to all architectures.
There are ten standard frame types, but extension frame types may be written by WriteRawFrame and will be returned by ReadFrame (as UnknownFrame).
There are tests in test/sliceopt.go that could be enabled if this is fixed.
There are three arenas where this data is held.
There are three relocations, one for each of the fields in the reflect.method struct: mtyp, ifn, and tfn.
There are three ways a method of a reachable type can be invoked:
There are two cases to consider:
There are two common ways to decide whether the content of the set has changed: modification times and content hashes.
There are two criteria for termination.
There are two main benefits to delaying the zeroing this way:
There are two reasons this is okay.
There are two sources of flakiness: 1.
There are two transitions that happen when the 'x' is seen: (1) Transition from a before-value state to a start-of-value state without consuming any character.
There are two user-visible effects of this change.
There are various function pointers that should be set too, but those depend on dynamic linker magic to get initialized correctly, and sometimes they break.
There are various irregularities.
There can be a race between the socket pool checking whether a socket is still connected, receiving the FIN, and sending/reading data on a reused socket.
There can be at most one equals sign in an option string.
There can only be one allocation from a given span active at a time, so this code is not racing with other instances of itself, and the bitmap for a span always falls on byte boundaries.
There do exist real C files beginning with _, so limit that check to just Go files.
There is a copy of checkgoto in the new SSA backend.
There is a long history of changes to isStale to try to make -a into a suitable workaround for bugs in the mtime-based decisions.
There is a lookup table of a fixed bit width (huffmanChunkBits), For codes smaller than the table width, there are multiple entries (each combination of trailing bits has the same value).
There is a loop involving visited.
There is a lot of moving parts in an iOS test harness (notably lldb) that can swallow useful stdio or cause its own ruckus.
There is a special case representing sequences of alternating corresponding Upper and Lower pairs.
There is a subtle difference between doing this and having YCbCr satisfy the Color interface by first converting to an RGBA.
There is a superfluous level in the Huffman tree indicating a bug in the encoder.
There is a tension between allocating objects white and allocating them black.
There is a tiny possibility that, by adding delta, we caused the number to be one bit too long.
There is a tiny window where this is possible, between the connecting dying and the persistConn readLoop calling Transport.removeIdleConn.
There is also a subset of the methods that can be applied to text read from a RuneReader:
There is also a trailing zero.
There is also the problem of a crash happening during the print routines and needing to acquire the print lock to print information about the crash.
There is an argument size.
There is an installed copy of the package (or binary).
There is another apparently viable approach, recorded here in case the "PC within setsSP function" check turns out not to be usable.
There is another section (.data.rel.ro) when building a shared object on elf systems.
There is currently no plan for StateHijacked or hijacking HTTP/2 connections.
There is known to be a register (current token) and a shift operator (peeked token).
There is never a time that Gobuf.g's contain the only references to a goroutine: the publishing of the goroutine in allg comes first.
There is no associated free operation.
There is no attempt to limit the size of the cache, so it will grow to the maximum number of simultaneous matches run using re.
There is no check for overflow.
There is no control over the order they appear (the order listed here) or the format they present (as described in the comments).
There is no corresponding free function.
There is no definition for units of Day or larger to avoid confusion across daylight savings time zone transitions.
There is no distinct scan phase any more and we allocate black during GC.
There is no fundamental theory behind this number.
There is no guarantee about matching memory layout.
There is no guarantee that finalizers will run before a program exits, so typically they are useful only for releasing non-memory resources associated with an object during a long-running program.
There is no guarantee that there won't be occasional holes, though.
There is no int8, int16 etc.
There is no internal buffering - the write must complete before the read completes.
There is no loss of expressivity here, because the final uint16, if it is used, is supposed to be a NUL, and Go doesn't need that.
There is no need for that function to do anything.
There is no notion of "sign", so Add32 can be used both for signed and unsigned 32-bit addition.
There is no other way to fetch hostname on windows, but via winapi.
There is no overall non-empty common prefix, but some pairwise common prefixes.
There is no place for the critical flag in a CSR.
There is no pushback here (the serve goroutine never blocks).
There is no real merging of offsets, we just pick the non-nil one.
There is no reason why the escapes need to be different inside strings and chars.
There is no reverse operation, used during crashing.
There is no support for groups, message sets, or "has" bits.
There is no surrounding struct to frame the transmission, so we must generate data even if the item is zero.
There is no tag command in subversion.
There is one Y sample per pixel, but each Cb and Cr sample can span one or more pixels.
There is one exception for performance and complexity reasons: hitting a stack barrier manipulates the stack barrier list without acquiring the stack barrier lock.
There is one exception to the rule: a span that consists of a single line, is followed by another paragraph span, begins with a capital letter, and contains no punctuation is formatted as a heading.
There is one exception: runtime/cgo's job is to bridge the cgo and non-cgo worlds, so it necessarily has files in both.
There is one exceptional transition to a system g, not in ordinary execution.
There is one file for generic (architecture-independent) ops and one file for each architecture.
There is one final token to be delivered, which may be the empty string.
There is one node per line, and the key ending with the current line is in the trie if it ends with a "+".
There is room for 11 octal digits (33 bits) of mtime.
There is some data that are conceptually read-only but are written to by relocations.
There is some disagreement about how this is done.
There is still an implicit sparse hole at the end
There is still one pending token that needs to be flushed
There is the following trade-off:
There is thus a connected connection in StateNew with no associated Request.
There is usually no need to call SetParallelism for CPU-bound benchmarks.
There may already be scan work on the gcw, which we don't want to claim was done by this call.
There may be a precision.
There may be a width.
There may be an index.
There may be more bytes in the remaining readers.
There may be multiple IDAT chunks, and IDAT chunks must be sequential (i.e. they may not have any other chunks between them).
There may be multiple examples for a given function, constant, or variable, distinguished by a trailing _xxx, where xxx is a suffix not beginning with an upper case letter.
There may be multiple matches.
There may be multiple outstanding Calls associated with a single Client, and a Client may be used by multiple goroutines simultaneously.
There may be other instructions pointing at curr, and we want them to now point at prev.
There may be periods in the package path before or after the slash and between a symbol and method.
There may be some other spans being swept concurrently that we need to wait for.
There may be stale stack barriers from an earlier cycle since we never passed through mark phase.
There may still be a carriage return.
There might be multiple uses, but we only need to track one.
There must be a multiple of gcmBlockSize bytes in blocks.
There must be an EOF symbol.
There must be at least one file.
There must be even more data left over.
There needs to be time between the PREFETCH and the use.
There should always be a free M since nothing is running.
There should be two numbers in sparseMap for each entry.
There should not be a field named 'y'.
There should only be a few desired registers, so linear insert is ok.
There shouldn't be any sections, but just to make sure...
There shouldn't be much difference between reading 4kB and 32kB: the hard part is getting to the data, not transferring it.
There the instruction only has a float64 form.
There was a bug in the linker where it would not correctly read out the type data in this case and later crash.
There was a declared Content-Length, and we have more bytes remaining than our maxPostHandlerReadBytes tolerance.
There was a match at the previous step, and the current match is not better.
There was an error check comparing the length of the input with the length of the slice being decoded.
There was an old finalizer
There was some error writing to the underlying connection during the request, so don't re-use this conn.
There was space in the format, so there should be space in the input.
There was supposed to be more data
There will be two non-blank lines with indent, hence 2*indent.
There's a cpu for us, so we can run.
There's a race here with fork/exec, which we are content to live with.
There's a small window here where an assist may add itself to the blocked queue and park.
There's a very narrow window here on most OSs, so we basically can't do anything (not even a time.Sleep or a channel).
There's an additional space after the 8th byte.
There's apparently a de-facto standard for this.
There's guaranteed to be a percent sign.
There's no RFC for bzip2.
There's no corresponding barrier for the read side because the read side naturally has a data dependency order.
There's no overlap so OpenSSL will not select a protocol.
There's no right answer for out of range.
There's no way to tell it "start from current position", so we have to manage that explicitly.
There's not a huge cost to having too many regions: the main processing traces the live area for each variable, which is limited by the number of variables times the area, not the raw region count.
There's nothing to do if this is a package in the standard library.
There's nothing to say about the instruction, but it's still okay to see.
There's one of these for each Node, and the integer values rarely exceed even what can be stored in 4 bits, never mind 8.
There's only one choice, so no point doing any work.
There's only one for now: on input we rewrite C.malloc into C._CMalloc, so change it back here.
There's room for a second copy of the data in stats.Pause.
There's room for arbitrary complexity here, but we keep it simple and handle just a few important cases: int, string, and Stringer.
There's surprisingly little documentation about this, so we just do what libopcodes and xed agree on.
Therefore it's common to include it at the beginning of the ciphertext.
Therefore reasonably large/small numbers are parsed in full and rejected if invalid.
Therefore the table includes only the FindAllStringSubmatchIndex result.
Therefore the total value added will be the values added at 7, 5 and 3.
Therefore we draw a line at the start of the body of the first function literal we find.
Therefore we use the sequence number as the nonce.
Therefore, all incoming server requests Bodies need to be thread-safe.
Therefore, if we have a left shifted version of this constant we can find by how many bits it was shifted by looking at which six bit substring ended up at the top of the word.
Therefore, packages are also part of the export graph.
Therefore, the lexer should be shut down.
Therefore, we preserve it, and OR (not ADD) it back in.
These CSR was generated with OpenSSL: openssl req -out CSR.csr -new -sha256 -nodes -keyout privateKey.key -config openssl.cnf
These DLLs are then only loaded from the System32 directory.
These TestXxx routines should be declared within the package they are testing.
These additional files can contain test functions, benchmark functions, and example functions.
These additional levels (beyond -l) may be buggy and are not supported.
These addresses are reserved for benchmarking by RFC 6890.
These all require that the imaginary part be zero.
These alternatives happen in constant time.
These alternatives occur in constant time.
These appear to be fine, but they fail the integer constraint below, so okay them here.
These are AWORDS because there is no (afaict) way to generate the addis instruction except as part of the load of a large constant, and in that case there is no way to use r12 as the source.
These are almost always useless, and even when they aren't they are usually a mistake.
These are already acknowledged by being in the file "api/except.txt".
These are also in the "foo" package.
These are called from msan_amd64.s go:cgo_import_static __msan_read_go go:cgo_import_static __msan_write_go go:cgo_import_static __msan_malloc_go go:cgo_import_static __msan_free_go
These are checked in moduledataverify1 below.
These are chosen carefully not to be symlinks on a Mac (unlike, say, /var, /etc), except /tmp, which we handle below.
These are communicated by writing //go: directives in a Go source file compiled by gc.
These are controlled by the GOEXPERIMENT environment variable recorded when the toolchain is built.
These are generally fragile and won't allow the assist to block.
These are here because they are disabled in optab.
These are ideal constants but we don't know the type and we have no context.
These are invalid times.
These are not supported by fmt.Fscanf.
These are only considered synchronous when caused by program execution, not when sent using os.Process.Kill or the kill program or some similar mechanism.
These are ordered and grouped to match ../../go/ast/ast.go
These are predefined layouts for use in Time.Format and Time.Parse.
These are recorded for later use.
These are removed when sent to the backend.
These are required to work.
These are required to work: according to the Go spec, the internal float mantissa must be at least 256 bits, and these expressions can be represented exactly with a 256-bit mantissa.
These are roughly enough for the following:
These are sites where memory was allocated, but it has all been released back to the runtime.
These are the errors returned by Decode.
These are the errors that can be returned in ParseError.Error
These are the portable opcodes.
These are the same checks as performed by the BSD tar utility.
These are the same on Linux, BSD, and OS X.
These are the same up to LOG_FTP on Linux, BSD, and OS X.
These are the space characters defined by Go itself.
These are things like R for R(0) and SPR for SPR(268).
These are tried in order.
These are used for error reporting.
These are used when printing stack traces for a program that uses cgo.
These aren't really pointers: they're integers, so we can reinterpret them this way without using package unsafe.
These aren't required to be in the same order.
These assume decimal and the Go int type.
These assumptions are checked by the gccProlog.
These behave like Go's untyped constants.
These bits let us map between variants.
These blocks were inserted to remove critical edges.
These blocks will be revisited to add successor control flow edges.
These bounds are for 64-bit floats.
These buffers are allocated once and re-used for each row.
These built-ins are intended for debugging and testing of this package only.
These can be called concurrently from multiple goroutines.
These can be recomputed by adapting the tests in aes_test.go.
These can be specified with the -d flag, as in "-d nil" to set the debug_checknil variable.
These can move symbols out of sections that rely on stable offsets from the beginning of the section (like STYPE).
These can tick at different frequencies and can arrive out of sync.
These cases are all the same, but the x.Body only works when the specific type of x is known, so the cases cannot be merged.
These cases test non-standard nonce sizes.
These come from the ELF AT_RANDOM auxiliary vector (vdso_linux_amd64.go or os_linux_386.go).
These come from the RFC section 3.2.6.
These comparisons are compile time constants.
These conditions apply to any software derived from or based on the IJG code, not just to the unmodified library.
These constants are copied from the flate package, so that code that imports "compress/gzip" does not also have to import "compress/flate".
These constants are copied from the flate package, so that code that imports "compress/zlib" does not also have to import "compress/flate".
These constants are defined by the Snappy implementation so that its assembly implementation can fast-path some 16-bytes-at-a-time copies.
These constants are the ARM condition codes encodings, XORed with 14 so that C_SCOND_NONE has value 0, so that a zeroed Prog.scond means "always execute".
These constants cause FlagSet.Parse to behave as described if the parse fails.
These constants define supported rounding modes.
These conversion functions are returned by convertOp for classes of conversions.
These data structures are known to the compiler (../../cmd/internal/gc/reflect.go).
These defaults mean that Go-aware build systems can ignore the linking changes and keep running plain 'cmd/link' and get reasonable results, but they can also control the linking details if desired.
These defaults take about 1 seconds on a 2012 MacBook Pro.
These do not accept segment prefixes, at least in the GNU rendering.
These don't escape but are too big for the stack
These errors relate to new connection, not to AcceptEx, so ignore broken connection and try AcceptEx again for more connections.
These examples demonstrate more intricate uses of the flag package.
These expression are never untyped - nothing to do.
These extensions are: .go Go source files.
These fail because of non-one-to-oneness of the data, such as multiple upper case 'I' mapping to 'i'.
These failures happen for several reasons beyond our control, but all of them are safe to retry as they happen before lldb encounters the initial getwd breakpoint.
These fields are read and written with the singleflight mutex held before the WaitGroup is done, and are read but not written after the WaitGroup is done.
These fields are written once before the WaitGroup is done and are only read after the WaitGroup is done.
These flags define which text to prefix to each log entry generated by the Logger.
These funcs are used to manage the workbufs.
These functions are called from C code via cgo/callbacks.go.
These functions cannot have go:noescape annotations, because while ptr does not escape, new does.
These functions check at run time that the default type (in the absence of any implicit conversion hints) is the given type.
These functions deal with group elements.
These functions implement the usual BSD socket operations.
These functions require great care to be used correctly.
These functions write to the standard logger.
These goroutines access considerable amount of local data so that unnecessary rescheduling is penalized by cache misses.
These goroutines will not run until the mark phase, but they must be started while the work is not stopped and from a regular G stack.
These goroutines yield during local work, so that switching from a blocked goroutine to other goroutines is profitable.
These happen if connection reset is received before AcceptEx could complete.
These happen in .toc sections
These have been mostly rewritten by the front end into their Nbody fields.
These helpers make writing those a little easier.
These image and image/color struct types are frozen.
These implement IsNil.
These inputs crashed parser previously.
These instructions are marked as RightAddr so that the register optimizer does not try to replace the memory references with integer register references.
These interfaces are defined in the "encoding" package.
These kernels/arches have poor resolution timers, so this gives up a whole scheduling quantum.
These lines set CFLAGS, CPPFLAGS, CXXFLAGS and LDFLAGS and pkg-config directives that affect the way cgo's C code is built.
These magic auxint values let us easily cache non-numeric constants using the same constants map while making collisions unlikely.
These match the traditional values.
These may then be referred to from Go code as though they were defined in the package "C".
These meta data "files" should not normally be visible to the outside.
These methods return float64 because the dominant use case is for printing a floating point number like 1.5s, and a truncation to integer would make them not useful in those cases.
These must be consistent or else we will elide stores and the garbage collector will see uninitialized data.
These names must have a base of SP.
These nodes do not carry line numbers.
These nodes have the special property that they are names with a left OTYPE and a right ONAME.
These objects are the full representation of the package's API, and they are the only information a platform-independent tool (e.g., go/types) needs to know to type-check against a package.
These operations are used by the vector operations below.
These ops are for temporary use by rewrite rules.
These packages can use internal linking mode.
These parameter values are specified in section 5.
These parameters can be shared across many keys.
These powers of 5 fit into a uint64.
These predefined profiles maintain themselves and panic on an explicit Add or Remove method call.
These presentation routines already have to add the zone offset, so adding the translation to the alternate epoch is cheap.
These properties must be preserved when modifying the encoding.
These relocations are specially defined as R_METHODOFF by the compiler so we can detect and manipulated them here.
These replacements permit compatibility with old numeric entities that assumed Windows-1252 encoding.
These requirements apply even if a different codec is used.
These result in a parse warning in HTML5 and are indicative of serious problems if seen in an attr name in a template.
These routines do not take a format string Fprint formats using the default formats for its operands and writes to w.
These routines end in 'f' and take a format string.
These routines end in 'ln', do not take a format string, always add spaces between operands, and add a newline after the last operand.
These rules are checked dynamically at runtime.
These rules mean that in Go files a build constraint must appear before the package clause.
These rules shall apply even when operands or results are zero or infinite.
These seem to be all of the opcodes that lead to the "S" bit being set in the instruction encodings.
These short names are so that gofmt doesn't break the BenchmarkXxx function bodies below over multiple lines.
These should be equivalent but most of the backend only expects to see LEAL, because that's what we had historically generated.
These should be legal according to the spec.
These should be split into the two different conversions instead of overloading the one.
These should just work on the first try.
These should never be called.
These should trigger a pax header because pax headers have a defined utf-8 encoding.
These should typically not be scheduling operations, just a few atomics, so the cost should be small.
These signal handlers will be invoked in cases where Go doesn't want to handle a particular signal (e.g., signal occurred on a non-Go thread).
These special kinds are not valid sizes.
These still work as well.
These strings are also in testdata/*.
These structures reflect the ASN.1 structure of X.509 certificate signature requests (see RFC 2986):
These structures reflect the ASN.1 structure of X.509 certificates.:
These stubs avoid importing packages with large dependency trees, like the use of "net/http" in vcs.go.
These symbols won't show up in the first loop below because we skip STEXT symbols.
These tables were generated by cut and paste from Appendix B of the XML spec at http://www.xml.com/axml/testaxml.htm and then reformatting.
These temporary bitvectors exist to avoid successive allocations and frees within the loop.
These test vectors were generated from GnuTLS using `gnutls-cli --insecure -d 9 `
These test vectors were generated with `openssl rsautl -pkcs -encrypt`
These tests are not designed to run off the host.
These tests are too simple.
These tests open and examine the test binary, and use elf.Open to do so.
These tests serve as an example but also make sure we don't change the output of the random number generator when given a fixed seed.
These things just won't leave us alone.
These three formatting routines call the Qualifier for each package-level object O, and if the Qualifier returns a non-empty string p, the object is printed in the form p.O.
These three headers are actually sent in the trailer.
These three structures have the same data with different indirections
These two cases are valid as textual representations as described in RFC 4007, but are not valid as address literals with IPv6 zone identifiers in URIs as described in RFC 6874.
These two lines find the PC and SP immediately following the call to f (where f will return).
These two variables accumulate the repeat count.
These types always passed
These types are included in the symbol table when dynamically linking.
These types caused compilation failures
These types contain internal pointers that will always be allocated in the Go heap.
These types may be as small as 32 bits, but no smaller.
These utility functions are available to be called from code compiled with gcc via crosscall2.
These values are known by runtime.
These values are referred to in the source code but really don't matter.
These values are returned by the state transition functions assigned to scanner.state and the method scanner.eof.
These values are stored in the parseState stack.
These values are typically found in PEM blocks with "BEGIN PUBLIC KEY".
These values are unlikely to occur in regular code and are easy to grep for in case of bugs.
These values may increase over time.
These values mean that the file can be a zip64 file
These values must match ../reflect/value.go:/SelectDir.
These variables are used to initialize runtime.firstmoduledata, see symtab.go:symtab.
These variables have type *RangeTable.
These variables hold the decoded operation specified by the first argument.
These will appear as trailers.
These will be closed after the transaction has been committed or rolled back.
These will be set during inlnode
These will grow the relocation symbol, which is itself data.
These will output their program paths when run.
These will run when we start the world again.
These wrappers are here for gotest to find.
They all have default behaviors that use the local file system, so clients need only set the functions whose behaviors they wish to change.
They all look breakpoint-induced by default.
They allow to enumerate all Ps in different pseudo-random orders without repetitions.
They also have tiny stacks, so just ignore them until mark termination.
They alternately write a pointer and nil to a slot in the collider.
They are all below utf8.RuneSelf.
They are also known to ../runtime/type.go.
They are both technically valid characters in JSON strings, but don't work in JSONP, which has to be evaluated as JavaScript, and can lead to security holes there.
They are good synchronization points in case of syntax errors and (usually) shouldn't be skipped over.
They are implemented by computing the arctangent after appropriate range reduction.
They are not necessary in the spec definition of terminating, because a continue statement cannot be the final statement before a return.
They are not strictly necessary, but they avoid the weight of reflection in this common case.
They are not triggered by program errors, but are instead sent from the kernel or from some other program.
They are numbered densely from 0 (for each architecture).
They are sent byte-reversed, with the exponent end coming out first, so integer floating point numbers (for example) transmit more compactly.
They are specific to the frame type.
They are the building blocks for the implementation of signed integers, rationals, and floating-point numbers.
They are usually unnecessary, but in the unnecessary cases they are also typically registerizable, so not much harm done.
They are valid in leading // comments in the file followed by a blank line.
They are zeroed if and only if the second word of the object is zero.
They aren't necessary in the pure Go implementation, as we don't use those same optimizations, but using the same thresholds doesn't really hurt.
They cannot appear in the generated assembly.
They cannot represent nil pointers, which have no value to encode.
They control how the Xconv functions format their values.
They control printing.
They control scanner behavior.
They control the amount of source code parsed and other optional parser functionality.
They could be simplified significantly and also use better variable names.
They differ when package name is "main".
They do not have an enclosing tag.
They don't exactly mean the same thing, but they're close.
They end with a zero-length string.
They find problems approximately never.
They get similar wb-removal treatment in walk.go:OAS.
They give details about the current state of the scan that callers might be interested to know about.
They give the current state of a composite value being scanned.
They had populated this, but their dial won first, so we can clean up this map entry.
They have more structure that we could test, but if this sanity check passes, we'll assume the cut and paste from the FIPS PDF worked.
They implement the Go rules for comparison of values, except that size and exact type are ignored, so any integer value, signed or unsigned, may be compared with any other integer value.
They influence the building of Go programs (see https://golang.org/cmd/go and https://golang.org/pkg/go/build).
They just take the address of it.
They may be negative.
They may not be writable anyway, but they are certainly not changing.
They may not run on Windows, and they do not run in the Go Playground used by golang.org and godoc.org.
They must all dominate r.
They must be enabled before assists are enabled because they must be enabled before any non-leaf heap objects are marked.
They must be enabled for writes to higher stack frames before we scan stacks and install stack barriers because this is how we track writes to inactive stack frames.
They must be set up with an init function.
They need to still describe the same things below that they describe right here.
They need to use incref/decref to ensure that they operate on the correct fd in presence of a concurrent close call (otherwise fd can be closed under their feet).
They perform well if compared experimentally to other stable in-place sorting algorithms.
They read pointers from slots and make sure they are valid.
They should be in the auxint field instead.
They should not appear outside strings.
They should only be consulted if the sizes read earlier are maxed out.
They start an encapsulated generator that puts the terms of the series on the channel.
They use a compact stateful bytecode representation that is too much bother to deal with.
They will be printed by the eventual call to importPaths instead.
They will be type-checked later, with regular functions.
They will need to be distinct anyway for register allocation (duplicate successors implies the existence of critical edges).
They're capped at the min of the peer's max frame size or 512KB (kinda arbitrarily), but definitely capped so we don't allocate 4GB bufers.
They're read sequentially.
They're sent before any stream-specific freams.
They're still consuming the request body, so we shouldn't notify yet.
They've been separate internally to make error messages better, but we have to merge them in the reflect tables.
They've consumed the request body, so anything remaining is a pipelined request, which we document as firing on.
Things that are too hairy, irrespective of the budget
Think carefully about the signs below.
Think of them as a way to implement sleep and wakeup such that every sleep is paired with a single wakeup, even if, due to races, the wakeup happens before the sleep.
Third pass - pick registers for phis whose inputs were not in a register.
Third, the common case: it may be that the switch updates g, SP, and PC separately.
This "requestTooLarge" check is only used by the server code.
This (and the matching part in the load case below) are the only places in the ppc64 toolchain that knows the name of the tls variable.
This 00 is called the ``dead'' encoding: it signals that the rest of the words in the object are uninteresting to the garbage collector.
This CSR contains an extension request where the extensions have a critical flag in them.
This DOTPTR was built by the compiler for access to runtime data structures.
This FileInfo came from a Header (not the OS).
This Go implementation is derived in part from the reference ANSI C implementation, which carries the following notice:
This LineEntry applies to each instruction from Address to just before the Address of the next LineEntry.
This OID is in the PKIX arc, but unknown.
This P has picked the token for the fractional worker.
This P is now dedicated to marking until the end of the concurrent mark phase.
This RST seems to occur mostly on BSD systems.
This URL is queried from templTrace HTML.
This ``header'' is read by cmd/go.
This acts like a lock acquire while the casfromgstatus acts like a lock release.
This affects stack unwinding.
This affects the handling of certain field formats.
This affinity graph will be used to prefer certain registers for allocation.
This affinity helps eliminate moves that are required for phi implementations and helps generate allocations for 2-register architectures.
This algorithm is based on "Faster Suffix Sorting" by N.
This algorithm was derived from the OpenSSL source.
This all assumes the only tls variable we access is g, which we can't check here, but will when we assemble the second instruction.
This allows a client to tolerate networks where one address family is silently broken.
This allows better move propagation in the back ends (and maybe it helps the processor).
This allows execution of cross-compiled programs when a simulator or other execution method is available.
This allows new operating systems, such as android, to arrive without breaking existing code with innocuous source code in "android.go".
This allows optimization of a common pattern where an object has a small header followed by a large scalar buffer.
This allows people to have packages and commands named vendor, for maximal compatibility with existing source trees.
This allows pre-compiled static libraries to be included in the package directory and linked properly.
This allows pure (non-cgo) Go binaries to be code signed correctly.
This allows us to verify that the client is in possession of the private key of the certificate.
This allows using Sym pointer equality to test for Go identifier uniqueness when handling selector expressions.
This also blocks until any remaining mark 1 workers have exited their loop so we can start new mark 2 workers that will observe the new root marking jobs.
This also implements the `single array' method from the bzip2 source code which leaves the output, still shuffled, in the bottom 8 bits of tt with the index of the next byte in the top 24-bits.
This also puts the old fd into blocking mode, meaning that I/O will block the thread instead of letting us use the epoll server.
This always returns a newly allocated slice.
This amortizes the cost of an assist by pre-paying for this many bytes of future allocations.
This appears to happen for interface methods with _ (blank) parameter names.
This applies regardless of linking mode.
This approach ensures that we form a consistent stream even if timestamps are incorrect (condition observed on some machines).
This approach is equally valid whether or not static comment content is removed from the template.
This approach is more reliable than using go/printer to print a modified AST containing comments.
This approach smooths out unjustified spikes of thread unparking, but at the same time guarantees eventual maximal CPU parallelism utilization.
This approach works with tzres.dll but may have to be revised in the future to allow callers to provide custom search paths.
This array allows us to distinguish forward edges from backward edges and compute how far they go.
This assignment doesn't race because the world is stopped.
This assignment is a no-op for escape analysis, it does not store any new pointers into b that were not already there.
This assumes "case 1" from the ABI, where the caller needs us to save and restore the TOC pointer.
This assumes adding an exported function breaks ABI, which is not true in some senses but suffices for the narrow definition of ABI compatibility the toolchain uses today.
This assumes that all possible runes are equally likely.
This assumes that at least one newline exists in the buffer.
This assumes that counter is filled with zeros on entry.
This assumes that the token run does not include any string tokens, comment tokens, regular expression literal tokens, or division operators.
This assumes the current program is being run by a web server in a CGI environment.
This automatically prevents an infinite resend loop because we'll run out of the cached keep-alive connections eventually.
This avoids a race in case background marking has flushed more credit since we checked above.
This avoids a recursive print that generates very long names.
This avoids allocation of a closure object.
This avoids build tags and works even on systems like Plan 9 where the file mask computation incorporates other information.
This avoids confusion over package paths that have other package paths as their prefix.
This avoids installing assemblers/compilers that are being executed by other steps in the build.
This avoids negative offsets, which cannot be encoded.
This avoids parsing ambiguities due to the use of - as a separator.
This avoids scanning such maps.
This avoids the allocation that would be required to convert r to l for comparison.
This avoids the following situation: - v is currently held in R0 and stacktmp0.
This avoids using a type assertion to unsafe.Pointer in our copy of user code.
This behavior can be managed using Transport's CloseIdleConnections method and the MaxIdleConnsPerHost and DisableKeepAlives fields.
This behavior can be overridden with a separate registration for the path without the trailing slash.
This behavior differs from the corresponding routines in C, which uniformly treat newlines as spaces.
This behavior is consistent with time.Date.
This behavior matches the BSD tar utility.
This behavior was confusing when using non-trivial GOPATHs, which were particularly common with some code management conventions, like the original godep.
This benchmark models a situation where spinning in the mutex should be non-profitable and allows to confirm that spinning does not do harm.
This benchmark models a situation where spinning in the mutex should be profitable.
This benchmark tests JSON encoding and decoding performance.
This benchmark tests gob encoding and decoding performance.
This benchmark tests gzip and gunzip performance.
This benchmark tests text/template throughput, converting a large data structure with a simple template.
This benchmark, taken from the shootout, tests array indexing and array bounds elimination performance.
This benchmark, taken from the shootout, tests garbage collector performance by generating and discarding large binary trees.
This benchmark, taken from the shootuot, tests floating point performance.
This body, extracted from an email, contains headers that span multiple lines.
This breaks the SSA representation.
This breaks the case of a thread created in C that calls sigaltstack and then calls a Go function, because we will lose track of the C code's sigaltstack, but it's the best we can do.
This breaks the write barrier shadow checking mode, and it is also scary: better to have a word that is completely ignored by the GC than to have one for which only a few updates are ignored.
This buffer is huge (8 kB) but we are on the system stack and there should be plenty of space (64 kB).
This cache is small enough that full associativity is cheaper than doing the hashing for a less associative cache.
This call will go away when the scheduler improves.
This came up in a real program in issue 7725.
This can all be done without acquiring a lock.
This can be an issue with the SIGPROF signal in particular.
This can be avoided by using MAP_FIXED, but I'm not sure we should need to do this - we do not on other platforms.
This can be done by disabling preemption (systemstack or acquirem).
This can be fixed by making context richer if interpolation into charsets is desired.
This can be overridden by setting Server.MaxHeaderBytes.
This can be prevented by splitting each Application Data record into two records, effectively randomizing the IV.
This can be removed if the Go linker ever supports these relocation types.
This can be thought of as a stack of both work buffers' pointers concatenated.
This can be used for authentication.
This can be used to create aliases or to handle multiword generators.
This can be used to pause the timer while performing complex initialization that you don't want to measure.
This can be used to write extension frames unknown to this package.
This can be used with nested slices where a struct tag cannot be given.
This can be useful if the source is a local fork of the original.
This can cause one or more spurious rebuilds, but only for 1 second, until the object finally has an mtime later than the input.
This can cause problems in racy code, particularly sync/mutex.
This can happen at the end of the mark phase when there are still assists tapering off.
This can happen for unsafe.Pointer, which is a TypeName holding a Basic type.
This can happen here because we build and install the cgo command and then run it.
This can happen if the mutator is allocating very quickly or the GC is scanning very slowly.
This can happen if the package at path hasn't been compiled yet.
This can happen if the triggerRatio is very low and the reachable heap estimate is less than the live heap size.
This can happen if we were woken up by a close().
This can happen when using all.bash with GOROOT_FINAL set, because the tests are run before the final installation of the files.
This can occur even in cases where Read or ReadMsgIP could return a complete packet.
This can occur if a distance refers to data that wraps-around in the buffer.
This can only happen for dot-imported objects whose scope is the scope of the package that exported them.
This can only happen if non-Go code called sigaction without setting the SS_ONSTACK flag.
This can only happen if non-Go code calls sigaltstack to disable the signal stack.
This can only happen with an incorrectly constructed AST.
This can print more than one line because of inlining.
This can reduce the amount of register spilling required, if it doesn't also create more live values.
This can take up to two GC cycles to get a complete snapshot of the current point in time.
This can turn into an infinite loop given a cyclic chain, but it matches the Go 1 behavior.
This can't use range, as entries are added to the list while it is being processed.
This case handles: 1.
This case happens with words generated in the PC stream as part of the literal pool.
This case is invalid according to ISO C anyway (i.e. void (*__cgo_1)(...) is not legal).
This case is the same as the value returned by reflect.TypeOf(s.f).FieldAlign().
This catches accidental dependencies between the HTTP transport and server code.
This catches changes like a source file being removed from a package directory.
This categorization is the same as IsGraphic except that the only spacing character is ASCII space, U+0020.
This caused a compilation error with gccgo.
This caused a panic due to mishandling of a space:
This causes the store to not work.
This change was introduced with TLS 1.2.
This check is redundant with code at the top of the loop.
This check is very early in newstack so that even the status change from Grunning to Gwaiting and back doesn't happen in this case.
This check isn't in the Snappy implementation, but there, the caller instead of the callee handles this case.
This check will need to change if there ever are.
This checks for things like 'int64' converting to '*int'.
This checks that the server can't select a cipher suite that the client didn't offer.
This choice means that such a time can be parsed and reformatted with the same layout losslessly, but the exact instant used in the representation will differ by the actual zone offset.
This clause is only needed at the end of the input string.
This clears gcscanvalid.
This clears out the bits that are about to be ored into *h.hbitp in the next instructions.
This code assumes x, y, m are all the same length, n.
This code cannot do that, because the io.Writer might block or need system calls or locks that are not safe to use from within the signal handler.
This code cannot execute write barriers because the GC might drop them on the floor.
This code decides which ones live or die.
This code handles the case where the key has been deleted, updated, or deleted and reinserted.
This code is based on the StructTag.Get code in package reflect.
This code is hereby placed in the public domain.
This code is in a separate block so that code below cannot accidentally refer to these.
This code is intended to document the ordering requirements between different phases.
This code is likely more efficient than using a map.
This code is similar to gopanic, see that implementation for detailed comments.
This code is symmetric to uadd.
This code may need to change if some other kind of non-link-register architecture comes along.
This code sequence used to hang.
This code uses printer.Fprint, not conf.Fprint, because we don't want //line comments in the middle of the function types.
This code uses several global variables that are set by pcln.go:pclntab.
This code was never quite correct.
This code will not remove dead stores to the same address of different types.
This comment explains the operation of cgo.
This comment is associated with the hello constant.
This communication is only required in assembly functions that make calls to other functions that might be preempted or grow the stack.
This computes which symbol resolver stub we came through and invokes the dynamic resolver via a pointer provided by the dynamic linker.
This confuses register allocation if it occurs before it is complete, so candidates are recorded, then rechecked and moved after all allocation (register and stack) is complete.
This connection is now useless, since the idle queue is full and there are no pending requests.
This constant needs to be at least 76 for this package to work correctly.
This contains only the properties we're interested in.
This continues until all functions in the executing goroutine have stopped, in reverse order.
This controls whether we end up in gsubr.c (i) or cgen.c (q).
This convention matches ASN.1, but differs from almost everything else.
This converts a path like "./io/" to "io".
This copy is O(n) but in practice faster than a linked list.
This could be faster if more cleverness were applied, but it's really only here to avoid special case restrictions in the API.
This could be handled differently but it's an unusual case.
This could be surprising behavior to retroactively apply to driver.String now that Go1 is out, but this is convenient for our TestPointerParamsAndScans.
This could lead to a non-deterministic behavior, where connection requests over the port cannot be guaranteed to be handled by the correct socket.
This could only trigger if we import a (non-type) object a second time.
This could probably be removed by factoring it into the multiplier.
This crashed Unmarshal in the past.
This credit is accumulated by the background scan and stolen by mutator assists.
This data contains no pointers.
This decision was made specifically to work well with mtime-based build systems.
This declares an integer flag, -flagname, stored in the pointer ip, with type *int.
This decouples the constant type from the encoding of the constant value.
This defeats the point of this function.
This demonstrates Go's ability to handle large numbers of concurrent processes.
This desired register information is stored in s.desired.
This determines which Go callback function is executed later on.
This dial never starts to send any SYN segment because of above socket filter and test hook.
This dial never starts to send any TCP SYN segment because of above socket filter and test hook.
This differentiates embedded interfaces from embedded values.
This differs from CSS3's wc production because it contains a probable spec error whereby wc contains all the single byte sequences in nl (newline) but not CRLF.
This directive typically appears in machine-generated code, so that compilers and debuggers will show lines in the original input to the generator.
This disclaimer of warranty extends to the user of these programs and user's customers, employees, agents, transferees, successors, and assigns.
This distinction is rarely important, but when it is, code must not use Path directly.
This does not affect valid PNG images that contain multiple IDAT chunks, since the first call to parseIDAT below will consume all consecutive IDAT chunks required for decoding the image.
This does not ensure that fn will run on every CPU executing Go code, but it acts as a global memory barrier.
This does not free stacks of dead Gs cached on Ps, but having a few cached stacks around isn't a problem.
This does not happen if the caller is using go/build.ScanDir to determine the list of files implementing a package.
This does not include tests that are waiting for subtests to complete.
This does not include unsafe.Pointer.
This does not match what most callers expect so we must return an error here rather than letting the caller think that the call succeeded.
This does not test anything involving the bodies.
This does some "fuzz testing" by attempting to decode a sequence of random bytes.
This doesn't catch bugs shared between the 1-bit and 4-bit GC program execution, but it does catch mistakes specific to just one of those and bugs in heapBitsSetTypeGCProg's implementation of arrays.
This doesn't work well with the "let the kernel pick an address" mode, so don't do that.
This duplicates information known during livenesssolve but avoids storing two more vectors for each block.
This duplicates one of the cycle entries, allowing the just duplicated value to be overwritten and the cycle to proceed.
This effectively discards the very large initial flate setup cost, as well as the initialization of bigBuf.
This effectively parses the form used in archive headers.
This embedded Interface permits Reverse to use the methods of another Interface implementation.
This emits a relocation so that if the linker needs to adjust the offset, it can.
This encoder uses the same Huffman encoding for all images.
This encoding algorithm, which prioritizes speed over output size, is based on Snappy's LZ77-style encoder: github.com/golang/snappy
This endpoint implicitly responds 100 Continue and reads body.
This endpoint tries to read body without 100 (Continue) response.
This ends up being O(n log n) in the worst case, but that's fast enough.
This ends up wrong, have to do it at the PARAM node instead.
This ensures consistency of the trace (the goroutine is started after it is blocked).
This ensures that a sequence of sequential tests runs without being preempted, even when their parent is a parallel test.
This ensures that all imports refer to the same type object for a given type declaration.
This ensures that each transition is performed by exactly one thread and threads that need the transition to happen block until it has happened.
This ensures that we can install a Go release on a system that does not have a C compiler installed and still build Go programs (that don't use cgo).
This ensures that we never enter infinite recursion.
This ensures that when we pass the object to its finalizer, everything the finalizer can reach will be retained.
This error declaration shadows the predeclared error type.
This error is no longer generated but is kept for backwards compatibility with programs that might mention it.
This escaping can be disabled using an Encoder with DisableHTMLEscaping.
This example comes from http://compgroups.net/comp.lang.ruby/Decompressing-LZW-compression-from-PDF-file
This example comes from http://en.wikipedia.org/wiki/Graphics_Interchange_Format.
This example creates a PriorityQueue with some items, adds and manipulates an item, and then removes the items in priority order.
This example demonstrates a custom function to process template text.
This example demonstrates a priority queue built using the heap interface.
This example demonstrates an integer heap built using the heap interface.
This example demonstrates decoding a JPEG image and examining its pixels.
This example demonstrates how to inspect the AST of a Go program.
This example demonstrates how to use big.Int to compute the smallest Fibonacci number with 100 decimal digits and to test whether it is prime.
This example demonstrates how to use big.Rat to compute the first 15 terms in the sequence of rational convergents for the constant e (base of natural logarithm).
This example demonstrates how to use one group of driver templates with distinct sets of helper templates.
This example demonstrates one way to share some templates and use them in different contexts.
This example demonstrates unmarshaling an XML excerpt into a value with some preset fields.
This example fetches several URLs concurrently, using a WaitGroup to block until all the fetches are complete.
This example illustrates how to remove a variable declaration in a Go program while maintaining correct comment association using an ast.CommentMap.
This example inserts several ints into an IntHeap, checks the minimum, and removes them in order of priority.
This example reads 10 cryptographically secure pseudorandom numbers from rand.Reader and writes them to a byte slice.
This example shows how csv.Reader can be configured to handle other types of CSV files.
This example shows how to encode an interface value.
This example shows how to use big.Float to compute the square root of 2 with a precision of 200 bits, and how to print the result as a decimal number.
This example shows the basic usage of the package: Create an encoder, transmit some values, receive them with a decoder.
This example shows the use of each of the methods on a *Rand.
This example shows what an AST looks like when printed for debugging.
This example transmits a value that implements the custom encoding and decoding methods.
This example uses RawMessage to delay parsing part of a JSON message.
This example uses a Decoder to decode a stream of distinct JSON values.
This example uses a Decoder to decode a streaming array of JSON objects.
This exception helps mainly in programs running without garbage collection enabled, usually for debugging purposes.
This executes the write barriers necessary after a copy.
This executes the write barriers necessary after a memmove.
This explicit tag will have the compound flag set.
This extension should override the SubjectKeyId, above.
This extra level of encoding is sometimes used when communicating with JavaScript programs:
This extra work is only required for the base strip.
This fact is encoded in peep.c
This failed to be true on arm and arm64, which was the root cause of issue 13881.
This failed with gccgo.
This feature is intended for the standard library cmd/api tool.
This field is ignored by the HTTP client.
This field is initialized from the Trailer response header when the response header is written.
This field is not filled in by ReadRequest and has no defined format.
This field is not filled in by ReadRequest.
This field is only available after ParseForm is called.
This field is only available after ParseMultipartForm is called.
This file appears in its own package since the assertion tests the per-package counter used to create fresh identifiers.
This file checks invariants of token.Token ordering that we rely on since package go/token doesn't provide any guarantees at the moment.
This file contains AES constants - 8720 bytes of initialized data.
This file contains a constant-time, 32-bit implementation of P256.
This file contains boolean condition tests.
This file contains code to compute the dominator tree of a control-flow graph.
This file contains examples to embed in the Go 1 release notes document.
This file contains extra hooks for testing the go command.
This file contains printing support for ASTs.
This file contains routines related to the generation of annotated source listings.
This file contains some utility functions to help define Funcs for testing.
This file contains test cases for cgo with function pointer variables.
This file contains test cases for cgo.
This file contains test cases for short valid and invalid programs.
This file contains tests for Eval.
This file contains tests for the atomic checker.
This file contains tests for the bool checker.
This file contains tests for the buildtag checker.
This file contains tests for the canonical method checker.
This file contains tests for the cgo checker.
This file contains tests for the copylock checker's function declaration analysis.
This file contains tests for the copylock checker's range statement analysis.
This file contains tests for the printf checker.
This file contains tests for the rangeloop checker.
This file contains tests for the shadowed variable checker.
This file contains tests for the suspicious shift checker.
This file contains tests for the unusedresult checker.
This file contains tests for the useless-assignment checker.
This file contains tests of the GobEncoder/GobDecoder support.
This file contains the Go wrapper for the constant-time, 64-bit assembly implementation of P256.
This file contains the actual write barrier implementation, markwb, and the various wrappers called by the compiler to implement pointer assignment, slice assignment, typed memmove, and so on.
This file contains the code snippets included in "Defer, Panic, and Recover."
This file contains the code snippets included in "Error Handling and Go."
This file contains the code snippets included in "The Go image/draw package."
This file contains the code snippets included in "The Laws of Reflection."
This file contains the code to call the SSE 4.2 version of the Castagnoli CRC.
This file contains the code to call the SSE 4.2 version of the Castagnoli and IEEE CRC.
This file contains the code to check canonical methods.
This file contains the code to check for shadowed variables.
This file contains the code to check for suspicious shifts.
This file contains the code to check for useless assignments.
This file contains the code to check for useless function comparisons.
This file contains the code to check range loop variables bound inside function literals that are deferred or launched in new goroutines.
This file contains the code to check that locks are not passed by value.
This file contains the code to handle template options.
This file contains the exported entry points for invoking the parser.
This file contains the generic version of updateCastagnoli which does slicing-by-8, or uses the fallback for very small sizes.
This file contains the implementation of Go channels.
This file contains the implementation of Go select statements.
This file contains the implementation of Go's map type.
This file contains the pieces of the tool that use typechecking from the go/types package.
This file contains the printf-checker.
This file contains the test for canonical struct tags.
This file contains the test for unkeyed struct literals.
This file contains the test for untagged struct literals.
This file contains utility functions for use when assembling vector instructions.
This file deals with lexical matters of HTTP
This file defines flags attached to various functions and data objects.
This file defines operands and associated operations.
This file defines the IDs for PCDATA and FUNCDATA instructions in Go binaries.
This file defines the check for unused results of calls to certain pure functions.
This file defines the raw protocol and some utilities used by the child and the host.
This file encapsulates some of the odd characteristics of the 64-bit MIPS (MIPS64) instruction set, to minimize its interaction with the core of the assembler.
This file encapsulates some of the odd characteristics of the 64-bit PowerPC (PPC64) instruction set, to minimize its interaction with the core of the assembler.
This file encapsulates some of the odd characteristics of the ARM instruction set, to minimize its interaction with the core of the assembler.
This file encapsulates some of the odd characteristics of the ARM64 instruction set, to minimize its interaction with the core of the assembler.
This file encapsulates some of the odd characteristics of the s390x instruction set, to minimize its interaction with the core of the assembler.
This file exercises the import parser but also checks that some low-level packages do not have new dependencies added.
This file holds the go generate command to run yacc on the grammar in expr.y.
This file implements "varint" encoding of 64-bit integers.
This file implements API tests across platforms and will never have a build tag.
This file implements CGI from the perspective of a child process.
This file implements FastCGI from the perspective of a child process.
This file implements FindExportData.
This file implements Float-to-string conversion functions.
This file implements NewPackage.
This file implements Scopes.
This file implements Selections.
This file implements Sizes.
This file implements a Forward Discrete Cosine Transformation.
This file implements a GCD benchmark.
This file implements a parser test harness.
This file implements a typechecker test harness.
This file implements binary search.
This file implements commonly used type predicates.
This file implements encoding/decoding of Floats.
This file implements encoding/decoding of Ints.
This file implements encoding/decoding of Rats.
This file implements export filtering of an AST.
This file implements initialization and assignment checks.
This file implements int-to-string conversion functions.
This file implements isTerminating.
This file implements method sets.
This file implements multi-precision decimal numbers.
This file implements multi-precision floating-point numbers.
This file implements multi-precision rational numbers.
This file implements nat-to-string conversion functions.
This file implements objsets.
This file implements parsers to convert legacy profiles into the profile.proto format.
This file implements printing of expressions.
This file implements printing of types.
This file implements rat-to-string conversion functions.
This file implements resolveOrder.
This file implements runtime support for signal handling.
This file implements scopes and the objects they contain.
This file implements signed multi-precision integers.
This file implements string-to-Float conversion functions.
This file implements sysSocket and accept for platforms that do not provide a fast path for setting SetNonblock and CloseOnExec.
This file implements sysSocket and accept for platforms that provide a fast path for setting SetNonblock and CloseOnExec.
This file implements tests for various issues.
This file implements the Bits type used for testing Float operations via an independent (albeit slower) representations for floating-point numbers.
This file implements the Check function, which drives type-checking.
This file implements the Punycode algorithm from RFC 3492.
This file implements the host side of CGI (being the webserver parent process).
This file implements the visitor that computes the (line, column)-(line-column) range for each function.
This file implements type-checking of identifiers and type expressions.
This file implements typechecking of builtin function calls.
This file implements typechecking of call and selector expressions.
This file implements typechecking of conversions.
This file implements typechecking of expressions.
This file implements typechecking of statements.
This file implements unsigned multi-precision integers (natural numbers).
This file implements various error reporters.
This file implements various field and method lookup functions.
This file is a simple protocol buffer encoder and decoder.
This file is compiled and then imported by ddd3.go.
This file is compiled as ordinary Go code, but it is also input to mksyscall, which parses the //sys lines and generates system call stubs.
This file is generated by mksyntaxgo from the RE2 distribution.
This file is named "generic" because at a certain point Linux started standardizing on system call numbers across architectures.
This file is not normally included in the gob package.
This file is used to generate an object file which serves as test file for gcimporter_test.go.
This file merely ensures that we link in runtime/cgo in race build, this is turn ensures that runtime uses pthread_create to create threads.
This file prints execution times for the Mul benchmark given different Karatsuba thresholds.
This file provides Go implementations of elementary multi-precision arithmetic operations on word vectors.
This file provides methods that let us export a Type as an ../ssa:Type.
This file sets up the universe scope and the unsafe package.
This file should compile.
This file shouldn't compile.
This file shows examples of basic usage of the go/types API.
This file starts with two simple examples using the scanner before diving into the scanner itself.
This file tests that required algs are generated, even when similar types have been marked elsewhere as not needing algs.
This file tests that when cgo -godefs sees a struct with a field that is an anonymous union, the first field in the union is promoted to become a field of the struct.
This file tests the situation where memeq is checking data very near to a page boundary.
This file tests types.Check by using it to typecheck the standard library and tests.
This first satisfies blocked assists on the work.assistQueue and then flushes any remaining credit to gcController.bgScanCredit.
This flag is appended to the end of the script's arguments and is not passed through to the underlying binary.
This flag is exported in the x/tools/go/types package.
This flag is for bootstrapping a new Go implementation, to generate Go types that match the data layout and constant values used in the host's C libraries and system calls.
This flood fill is wrapped in logic for pruning unused methods.
This follows the structure of Eqtype in subr.go with two exceptions.
This forces dialParallel to juggle two successful connections.
This forces the Transport's readLoop to immediately Peek an io.EOF and get to the point that used to hang.
This form allows a copy from the 1-bit to the 4-bit form to keep the pointer bits contiguous, instead of having to space them out.
This form appends the bytes of the string.
This form typically matches the syntax defined in the ARM Reference Manual.
This format is slightly documented in "ELF for the ARM Architecture" but mostly this is derived from reading the source to gold and readelf.
This format synthesizes the information used during the multiple passes into a single presentation.
This formulation worked when the bug was fixed.
This fully covers seq, rt and wt variables.
This function assumes that r is entirely within dst's bounds and the translation of r from dst coordinate space to src coordinate space is entirely within src's bounds.
This function body is a manually inlined version of:
This function can take many seconds, even on fast machines.
This function does not perform that truncation itself.
This function doesn't follow FIPS 186-3 exactly in that it doesn't use a verification seed to generate the primes.
This function implements the JSON numbers grammar.
This function is called automatically before a benchmark starts, but it can also used to resume timing after a call to StopTimer.
This function is called before fork in syscall package.
This function is called by newosproc0, so it is also required to operate without stack guards.
This function is called with the world stopped, at the beginning of a garbage collection.
This function is central to assignment and expression checking.
This function is deterministic.
This function is here just to be sure that those are handled correctly now.
This function is inlineable via export data.
This function is not a method, because ultimately it should be shared by ReadResponse and ReadRequest.
This function is not an anonymous func, so that the compiler can do escape analysis and place x on stack (and subsequently stack growth update the pointer).
This function is purely best-effort.
This function is required because we want the zero value of Encoder.CompressionLevel to map to zlib.DefaultCompression.
This function is slow but it is only used for generating debug prints.
This function is used only on windows after a failed attempt to cancel a pending async IO operation.
This function it known to the compiler to inhibit the go:nowritebarrierrec annotation because it uses P for allocation.
This function links that ref up with possible definitions, inserting Phi values as needed.
This function makes a network file descriptor for the following applications:
This function may also produce bytes for "Header Table Size Update" if necessary.
This function may return negative numbers.
This function must execute db.numOpen-- if the connection fails or is closed before returning.
This function must never be called directly.
This function must not lock any mutexes.
This function must stop reading at the end boundary of the block containing the last newline.
This function never executes, but it serves as a simple test for the program.
This function panics if p is not an odd integer.
This function returns "" (2 double quotes) if s is empty.
This function returns 1 byte BOOLEAN rather than the 4 byte BOOL.
This function rewalks the regexp tree and is called for every repetition, so we have to worry about inducing quadratic behavior in the parser.
This function takes care to associate the descriptor only with the subset of events that were previously part of the association, except the one that just happened.
This function transforms the sparse format 0.0 headers into sparse format 0.1 headers.
This function understands how each of the concrete types in this package represents its parent.
This function uses its incoming context register.
This function uses recursion to generate names all the way up if necessary.
This functionality should only be used with legacy web sites.
This gives callers a simple 1-byte undo mechanism.
This goroutine performs a TLS handshake over clientConn and then reads TLS records until EOF.
This guarantees that the side effects of value are not seen if a is false.
This handles 32-bit comparison but presumably all the other ops have the same problem.
This handles custom import paths like "name.tld/pkg/foo" or just "name.tld".
This handles expressions too.
This happens because the values of n are nearly prime (being the product of two primes) rather than truly prime.
This happens during import, where the hidden_fndcl rule has used functype directly to parse the function's type.
This happens during sigprof.
This happens for Go because a package is made up of all source files in a directory.
This happens if you get a profiling interrupt at just the wrong time.
This happens in fixed locations like "Etc/GMT0".
This happens on Windows.
This happens on systems like Solaris that call .so functions instead of system calls.
This has a direct impact on the speed of gofmt and thus seems worthwhile (2011-04-29).
This has been seen for .idata sections, which we want to ignore.
This has better constant-time properties than Euclid's method (implemented in math/big.Int.ModInverse) although math/big itself isn't strictly constant-time so it's not perfect.
This has reached a background completion point.
This has to be in sync with ../../runtime/type.go, or more specifically, with what ../gc/reflect.c stuffs in these.
This helps HTTP/1.0 clients keep their "keep-alive" connections alive.
This helps debugging and I've added this enough times "temporarily".
This helps keeping the association between comments and AST nodes.
This helps net/http.Transport reuse HTTP/1 connections more aggressively.
This helps reduce the mutator's ability to hide pointers during the concurrent mark phase.
This helps the go command know to recompile when people use the same GOPATH but switch between different Go releases.
This heuristic will not work if the binaries are back-dated, as some binary distributions may do, but it does handle a very common case.
This hides the start-up pauses, which are much smaller than the normal pauses and would otherwise make the average look much better than it actually is.
This hijacked endpoint responds error without Connection:close.
This hooks the typedef into any circular definition loops, so that gdb can understand them.
This idle connection used to block forever in the TLS handshake, preventing future connections from being accepted.
This implementation depends on OS-specific implementations of
This implementation only works within a basic block.
This implements a producer/consumer model for pointers to grey objects.
This implies gcDrainNoBlock.
This implies that e is coprime to each p-1 as e has a multiplicative inverse.
This import should fail because the vendor/golang.org/x/net/http2 directory has no source code.
This improves convergence.
This improves the effectiveness of cse by using the same Aux values for the same symbols.
This includes all writes performed by an executing function to its own stack frame.
This includes bytes blackened in scanned objects, noscan objects that go straight to black, and permagrey objects scanned by markroot during the concurrent scan phase.
This includes doing a proxy CONNECT and/or setting up TLS.
This includes return parameters.
This includes synchronization primitives to run at most *parallel tests.
This includes syscall.ENOSYS (no kernel support) and syscall.EINVAL (fd types which don't implement sendfile)
This includes writes made by the GC.
This increases pause time, so we instead rely on write barriers for writes to globals so that we don't have to rescan global during mark termination.
This index, 3, is out of range of the global palette and there is no local palette in the subsequent image descriptor.
This indirect func is only used for recursive types.
This information can be used during the compiler's escape analysis of Go code calling the function.
This information is held in the second nibble.
This information should go in req.URL.Host.
This initiates a mail transaction and is followed by one or more Rcpt calls.
This input is an invalid JPEG image, based on the fuzzer-generated image in issue 10413.
This instant is representable in most date/time formats (not just Go's time.Time) and should be far enough in the future.
This interface and the separate syslog_unix.go file exist for Solaris support as implemented by gccgo.
This interface is implemented by *serverConn.
This is 2 or 3 more than the float32 mantissa field width of Msize: - the optional extra bit is shifted away in step 3 below.
This is 2 or 3 more than the float64 mantissa field width of Msize: - the optional extra bit is shifted away in step 3 below.
This is O(N*M), if this ever shows up as a bottleneck, evaluate sorting the mappings and doing a binary search, which would make it O(N*log(M)).
This is OK since we allocated this much space in mpreinit, it was just removed from the buffer by stackalloc.
This is a Go translation of idct.c from
This is a NULL parameters value which is technically superfluous, but most other code includes it and, by doing this, we match their public key hashes.
This is a backup alarm in case the test wedges with a goroutine spinning and its background timer does not get a chance to fire.
This is a bit messier than fortunate, pulled out of esc's big switch for clarity.
This is a breakpoint inserted by gdb.
This is a broken pipe on both Darwin and Linux, but checking this isn't the point of the test.
This is a cheap way to reduce the amount of space taken up by reflect strings.
This is a common case, handle it all here instead of recursing down any further via reflection.
This is a common error mode for scanners.
This is a common problem in threaded C programs that use popen.
This is a conservative fix.
This is a constant condition - it is not evaluated on each iteration.
This is a constant-time, 32-bit implementation of P224.
This is a de-recursed version of dfs from the original Tarjan-Lengauer TOPLAS article.
This is a fairly standard file format used on OS X, Linux, BSD, Sun, and others.
This is a file, so stop
This is a from-scratch implementation.
This is a fundamentally racy check but it's important to notice if NumGoroutine and Stack are _always_ out of sync.
This is a genuine bug in the runtime, we couldn't even print the stack trace successfully.
This is a hack but it is effective.
This is a helper for TestStdPipe.
This is a high level description of the algorithm being used.
This is a key generated by `certtool --generate-privkey --bits 128`.
This is a last-ditch deadline to detect and stop wedged test binaries, to keep the builders running.
This is a little clumsy but makes the failure repeatable.
This is a little dirty: we grab the slice from the bytes.Buffer and massage it by hand.
This is a local call, so the caller isn't setting up r12 and r2 is the same for the caller and callee.
This is a lot of lines of code, but it compiles into relatively few machine instructions.
This is a low-level header writing method.
This is a lower bound on how much stack will have to be re-scanned during mark termination.
This is a meta header affecting the next header
This is a minimal, self-signed certificate that should parse correctly.
This is a negative number.
This is a nonsense, unassigned OID.
This is a one- or two-element equivalence class containing rune and ToLower(rune) and ToUpper(rune) if they are different from rune.
This is a potential security risk, but so is Windows XP.
This is a problem for arm where there is no 16-bit comparison op.
This is a rare case but it would be nice if reflection could help a little more.
This is a rare case, arising only when we're trying to give memory back to the operating system, which happens on a time scale of minutes.
This is a reduction of a program reported by GoSmith.
This is a renegotiation handshake.
This is a simple wrapper that just calls the real function.
This is a simplified copy of linklinefmt above.
This is a standard CRC32 like in hash/crc32 except that all the shifts are reversed, causing the bits in the input to be processed in the reverse of the usual order.
This is a string without an explicit string type.
This is a temporary introduced by reorder1.
This is a terminal state.
This is a test case for issue 777 ( https://golang.org/issue/777 ).
This is a test case for issue 788.
This is a test case for issue 804.
This is a test for issue 3272.
This is a test for issue 7379: type assertion error caused panic, and then the code to handle the panic breaks escaping.
This is a torture test for an old implementation of recover that tried to deal with wrapper functions by doing some argument positioning math on both entry and exit.
This is a trivial improvement and would reduce the maximum encoding length to 9 bytes.
This is a variable for testing purposes.
This is a very special function, do not use it if you are not sure what you are doing.
This is a violation of the spec, but occurs in practice.
This is a wrapper function and should not count as disabling 'recover'.
This is accomplished through the writeByte method for a single symbol, or combinations of writeSlice/writeMark for multiple symbols.
This is actually not the x86 NOP anymore, but at the point where it gets used, AX is dead so it's okay if we lose the high bits.
This is aggregated into gcController by dispose and may also be flushed by callers.
This is aggregated into work.bytesMarked by dispose.
This is allowed by LZ77 so that repeated strings can be succinctly represented using (dist, length) pairs.
This is allowed for assembly that wants to use 32-bit hex constants, e.g. LEAL 0x99999999(AX), AX.
This is almost like the Benchmark function, except that we override the benchtime and catch the failure result of the subbenchmark.
This is also a better fix for issue 8290.
This is also used by routines that do stack dumps.
This is always a good enough approximation.
This is an AJAX handler, so instead of http.Error we use log.Printf to log errors.
This is an API usage error - the local side is closed.
This is an acceptable failure due to a possible TCP race: We were still writing data and the server hung up on us.
This is an error according to the spec, but Firefox and Google Chrome seem OK with this.
This is an estimate of how long we need to sleep to ensure that the mtime of two files is different.
This is an inline version of image/color/ycbcr.go's func YCbCrToRGB.
This is an optimization to speed up pprof.
This is an optimized version of the sample code in the PNG spec.
This is an optional interface, but it's implemented here just to check that all the args are of the proper types.
This is an unmarshaler with a non-pointer receiver, so it's likely to be incorrect, but we do what we're told.
This is approximately equivalent to the ELF linker -Bsymbolic-functions option, but that is buggy on several platforms.
This is based on the "antiquicksort" implementation by M.
This is basically a best-effort live variable analysis, so it can be much simpler than a full analysis.
This is because for most types T in a program, the type *T also exists and reusing the str data saves binary size.
This is because, in tests, rand will return all zeros and we don't want to get the point at infinity and loop forever.
This is best possible as each element might need a move.
This is best-effort, so it may perform less work if it fails to get a work buffer.
This is both an optimization and a hedge against the Mach-O parsing failing in the future due to, for example, the name of the __text section changing.
This is built by issue10607.go with a -B option.
This is called an "up-pointer".
This is called before dwarfaddelfheaders.
This is called by the signal handler, and the world may be stopped.
This is called if we receive a signal when there is a signal stack but we are not on it.
This is called on the system stack.
This is called only from the go syscall library and cgocall, not from the low-level system calls used by the runtime.
This is called only from the go syscall library, not from the low-level system calls used by the runtime.
This is called out as a special case primarily for 32-bit systems, so that on 32-bit systems the code below can assume all objects are 4-word aligned (because they're all 16-byte aligned).
This is called via cgocallback to establish a stack.
This is called when "error" has been determined to be a local name, not the predeclared type.
This is called when we receive a signal when there is no signal stack.
This is certainly possible to do, but it is an enormous amount of work.
This is cheaper and in testing there was no difference in the number of spills.
This is checked by root marking operations that have to happen only during the first root marking pass, whether that's during the concurrent mark phase in current GC or mark termination in STW GC.
This is clumsy but fairly portable.
This is computed at the beginning of each cycle and decremented atomically as dedicated mark workers get started.
This is computed at the beginning of each cycle and updated every time heap_scan is updated.
This is computed at the beginning of each cycle.
This is conservative but keeps the two consistent, which is the most important thing.
This is conservative--it returns false for an unknown identifier.
This is consistent with the behavior for structs, which allow read but not write of unexported fields.
This is correct in that FSTSW is a pseudo-op for the pair, but it really is a pair of instructions: execution can stop between them.
This is different from functions like cheapexpr that may make a copy of their argument.
This is different from obj.ANOP, which is a virtual no-op that doesn't make it into the instruction stream.
This is different from package xml, but it's what we've always done.
This is different from the other octal fields.
This is difficult to test because it is very unlikely that the stack will be copied in the middle of gopanic.
This is done by generating a uniformly distributed random number and applying the cumulative distribution function for an exponential.
This is done by shifting the result of the addition right by 1 and inserting the carry bit into the MSB.
This is done by taking the address of the relocation and adding 4 to it (since the rip-relative offset can at most be 32 bits long).
This is done for a number of reasons, but the most obvious is to ensure that the value is large enough that the exponentiation is larger than the modulus.
This is done to simplify the graph while preserving connectivity.
This is due to the fact that IPv4 traffic will not be routed to an IPv6 socket - two separate sockets are required if both address families are to be supported.
This is due to the prevalence of buggy code that produces certificates with negative serial numbers.
This is easy to reproduce on fuse file systems (see http://golang.org/issue/11180).
This is either 0 or 1.
This is either the RUNA or RUNB symbol.
This is equivalent to AES in ECB mode.
This is equivalent to a sequence of MOVSL but for some reason MOVSL is really slow.
This is equivalent to a sequence of MOVSQ but for some reason that is 3.5x slower than this code.
This is escape analysis false negative.
This is essentially the resolver from the ppc64 ELF ABI.
This is even more pronounced on relaxed memory architectures since we access arena_used without barriers or synchronization, but the same logic applies.
This is exactly what a test would do without a TestMain.
This is expected to fail--t0 is in package bug0 and should not be visible here in package bug1.
This is expensive when there's a large number of Gs, so only do it if checkmark is also enabled.
This is extremely conservative, but easy and correct.
This is faster and shorter and allows the corresponding assertX2X2 routines to skip nil checks on their last argument.
This is faster than a map keyed by struct of two fields.
This is faster than code with a branch.
This is fine as both times the same expression and type are recorded.
This is fine because the output is always shorter than the input used so far.
This is fine for now to illustrate the API but we should really cache already-prepared statements per-Conn.
This is for 'go tool'.
This is for C functions that appear in the profile.
This is for ODOT and friends.
This is for cmd/pprof to locate cgo functions.
This is for codegen convenience.
This is for compatibility with existing test harness and should go away.
This is for testing and permits using the Framer to test other HTTP/2 implementations' conformance to the spec.
This is for tests only.
This is functionally equivalent to the following:
This is generally done with
This is generated by the code that copies small values out of closures, and that code has DX live, so avoid DX and just use AX twice.
This is greater than the irreducible polynomial so the result has to be reduced.
This is hack to work around "artificial" end positions in the AST which are computed by adding 1 to (presumably valid) token positions.
This is handled appropriately in runtime/cgo.
This is hardcoded, and there will be only a handful of them.
This is helpful for finding exit edges.
This is here for tests and to prevent bitrot.
This is here to work around a bug where we generate negative operands that match C_MOVCON, but we use them with instructions that only accept unsigned immediates.
This is hidden from the runtime and reflect package by the per-module typemap built in typelinksinit.
This is implemented by checking if the nodes have a common ancestor after removing the edge.
This is important if we skipped over a scalar tail, since nb could be larger than the bit width of b.
This is in fact the termination condition for the STW mark phase.
This is in its own struct for easy printing.
This is intended to be called from the init function in packages that implement hash functions.
This is intended to replicate the logic in gofrontend.
This is intended to support name resolution during Dial.
This is just testing that we don't change Go 1.0 behavior.
This is legacy code for Go 1.1 and earlier, which used the Plan 9 format for pc-line tables.
This is legal in general, but if we make the tests clean up their statements first, then we can safely verify this is always zero here, and any other value is a leak.
This is less a test of SetPanicOnFault and more a check that the operating system and the runtime can process these faults correctly.
This is less overhead than using buffer.Write with byte arrays.
This is likely due to a bug in xnu kernels, where instead of ECONNABORTED error socket is accepted, but has no address.
This is modifying the same underlying map from req (shallow copied above) so we only copy it if necessary.
This is more convenient for escape analysis.
This is more cute than anything, but checks that we don't recurse forever, and checks that Content-Encoding is removed.
This is more useful than having it default to generating objects for the original target (in this example, a Mac).
This is most commonly used by low-level runtime sources invoked at times when it is unsafe for the calling goroutine to be preempted.
This is most important for syscall.Syscall.
This is most important for the invocation of 'go1.4 build -v bootstrap/...'.
This is much faster than doing a full encode.
This is necessary as Go currently does not offer a way to specify the set of LDFLAGS that only apply to shared objects.
This is necessary because a sigprof during barrier installation or removal could observe inconsistencies between the stkbar array and the stack itself and crash.
This is necessary because the liveness analysis for the garbage collector works at variable granularity, not at word granularity.
This is necessary because the regular memory allocator can itself grow the stack, and hence can't be used when allocating stack-related structures.
This is necessary for a Go program running under lldb (the way we run tests).
This is necessary for shared libraries where we kickoff runtime initialization in a separate thread and return without waiting for this thread to complete the init.
This is necessary for the negative case and just tidy for the positive case.
This is necessary on Android L where we share a process with ART, which reserves virtual memory aggressively.
This is necessary to ensure the suffix "a" is before "aba" when using a potentially unstable sort.
This is necessary to pick byte offsets in ptrmask0.
This is needed by net/http, so it uses a context key instead of unexported variables.
This is needed since kernel 3.19, because you can't write gid_map without disabling setgroups() system call.
This is never wrapped by other types and is the value given out to CloseNotifier callers.
This is non-SSA formed code, so be careful after this pass not to run deadcode elimination.
This is nosplit so it can manipulate a gcWork without preemption.
This is nosplit to ensure gp's stack does not move.
This is not a big deal because benchmarks rarely print, but just in case, we trim it if it's too long.
This is not airtight.
This is not automatically added to any output of this package, it is provided as a convenience.
This is not documented anywhere, but is de facto part of the ABI.
This is not done automatically to avoid depending on having a working compiler binary.
This is not going to be correct until 6g has multiprecision floating point.
This is not guaranteed to be correct.
This is not inherent to FFI, just a mismatch between Go's convention of making zero values useful and gmp's decision not to.
This is not needed for a correct expression x as the parser will be ok with a nil topScope, but be cautious in case of an erroneous x.
This is not noscan, so set the scan bit in the first word.
This is not possible if we use the func value directly, because funcs are no longer comparable.
This is not strictly true, as is the case for the so-called funny nodes and there are special cases to skip over that stuff.
This is not technically the Linux semantics for abstract Unix domain sockets--they are supposed to be uninterpreted fixed-size binary blobs--but everyone uses this convention.
This is not technically the Solaris semantics for abstract Unix domain sockets -- they are supposed to be uninterpreted fixed-size binary blobs -- but everyone uses this convention.
This is not true for Go types with embedded pointers.
This is okay: if we're running d2, then all the defers after d2 have completed and their corresponding frames are dead.
This is only called by crypto/cipher.NewGCM via the gcmAble interface.
This is only called from the encoding side.
This is only called with fatal signals expected to kill the process.
This is only done if the runtime is in a different module.
This is only for use by internal compiler optimizations that know that the slice won't be mutated.
This is only populated for Client requests.
This is only used in internal link mode.
This is only used to populate the deprecated Package.Bugs field.
This is otherwise like _Grunning.
This is package 'bad' rather than 'main' so the erroneous build tag doesn't end up looking like a package doc for the vet command when examined by godoc.
This is potentially updated atomically at every scheduling point (hence it gets its own cache line).
This is probably not the best choice, but at this point anything else would be an API change.
This is probably working around a Solaris-specific bug that should be fixed differently, but we don't know what that bug is.
This is profile record, but the object has finalizers (so kept alive).
This is purely a performance optimization.
This is racy and may drop the background credit below 0 if two mutators steal at the same time.
This is really an os package test but here for convenience.
This is recorded because the first transmitted Finished message is the tls-unique channel-binding value.
This is required to avoid false race reports on writer passed to trace.Start.
This is responsible for maintaining the same GC-related invariants as markrootSpans in any situation where it's possible that markrootSpans has already run but mark termination hasn't yet.
This is retained to support the renegotiation extension and tls-unique channel-binding.
This is safe because we cannot expect the interface type to appear in a cycle, as any such cycle must contain a named type which would have been first defined earlier.
This is safe to do without the world stopped because any Gs created during or after this will start out in the reset state.
This is scanned code.
This is separate from the usual GOT entry, just in case the C code assigns to the variable, and of course it only works for single pointers, but we only need to support cgo and that's all it needs.
This is similar to the URI to IRI encoding scheme defined in section 3.1 of  RFC 3987, and behaves the same as the EcmaScript builtin encodeURIComponent.
This is similar to the command-line usage for the godoc command.
This is slightly conservative, in that we don't check that the goto is reachable, so L: goto L will not provoke a warning.
This is solely a branch to the glink resolver stub.
This is standard behavior for gzip readers.
This is still an error.
This is still not a complete fix (see golang.org/issue/14271 and next test) but it is clearly OK and enough to fix both of the two reported instances of the underlying problem.
This is sufficient on Linux, OS X, and FreeBSD.
This is supposed to be something that stops execution.
This is syscall.RawSyscall, it exists to satisfy some build dependency, but it doesn't work correctly.
This is syscall.Syscall, it exists to satisfy some build dependency, but it doesn't work correctly.
This is technically not allowed in a PrintableString.
This is the Dijkstra barrier coarsened to always shade the ptr (dst) object.
This is the EOF symbol.
This is the GNU multiprecision library gmp's integer type mpz_t wrapped to look like the Go package big's integer type Int.
This is the actual system call structure.
This is the address of something that is not an index expression.
This is the complicated case.
This is the definition of truth used by if and other such actions.
This is the documented way to disable http2 on a Transport.
This is the external entry point.
This is the final ARET, and the code so far doesn't have one.
This is the final state of the instruction opt field.
This is the first type we've sent on this Encoder, so it has type id 65 (0 through 64 are reserved).
This is the goroutine that runs all of the finalizers
This is the high-level Client interface.
This is the index of either the start or end of a pair that might span x.
This is the inverse of initialPermutation
This is the left side of x:y in a struct literal.
This is the likely path if we completed above.
This is the live heap (as counted by heap_live), but omitting no-scan objects and no-scan tails of objects.
This is the low-level Transport implementation of RoundTripper.
This is the main entry point for generating dwarf.
This is the maximum level computed from path suffixes starting with copies where paths flow from destination to source.
This is the minimal metadata needed by the serve goroutine.
This is the one exception in which a cookie with a domain attribute is a host cookie.
This is the only field that must be set to a non-zero value.
This is the only place where the type-checker (just the importer) needs to know the actual source location of a file.
This is the only way to specify the hash function when using the crypto.Signer interface.
This is the opposite of issue 9076.
This is the opposite of what the previous problem would have us do, but binary distributions are more common than instances of the previous problem.
This is the package comment.
This is the paypal NUL-hack certificate.
This is the pure Go version.
This is the same as StdEncoding but omits padding characters.
This is the same as URLEncoding but omits padding characters.
This is the same as converting any other out-of-range value - let string(codepoint) do the work.
This is the same dance as when starting a new m to run Go code via newosproc.
This is the same heuristic build.ScanDir uses.
This is the setup recommended in the Server-Sent Events candidate recommendation 11, section 8.
This is the signal that the span may be used in an MCache, so it must come after the linked list operations above (actually, just after the lock of c above.)
This is the size of the connectionOpener request chan (DB.openerCh).
This is the smallest set of packages we can link into a shared library (runtime/cgo is built implicitly).
This is the subset of the transitive closure of the package's dependencies that need initialization.
This is the value of a Handler's (*Request).RemoteAddr.
This is to avoid possible access violations.
This is to retain the order of type id allocation after a fix made to handle recursive types, which changed the order in which types are built.
This is to stub out uses of ssh by go get.
This is true if t is a pointer and if the value to which it points might contain a pointer.
This is typically only useful when you are running a test of a single input case.
This is unrelated to the number of http.Handler goroutines which may be active globally, which is MaxHandlers.
This is updated at the end of of each cycle.
This is updated atomically at the end of the concurrent mark phase.
This is updated atomically during the cycle.
This is updated atomically throughout the cycle and will be up-to-date if the fractional mark worker is not currently running.
This is updated atomically throughout the cycle.
This is updated atomically without locking.
This is updated atomically.
This is used at the end of a GC cycle.
This is used by heapBitsBulkBarrier for writes to data and BSS.
This is used by the http1 Transport code when it creates a new connection.
This is used by the recursiveStringer method in print.go.
This is used by the typeReader interface.
This is used during stack unwinding for panic/recover and by heapBitsBulkBarrier to force stack re-scanning when its destination is on the stack.
This is used for HTTP/2 today and future protocols later.
This is used for the compiler support library libgcc.a.
This is used to avoid dumping binary data on the screen.
This is used to compute a geometric distribution for heap sampling, without introducing dependences into package math.
This is used to implement fastlog2, which is used for heap sampling.
This is used to scan non-heap roots, so it does not update gcw.bytesMarked or gcw.scanWork.
This is useful mainly for allocation traces.
This is useful when interoperating with Windows code requiring callbacks.
This is usually a problem only when there is no space between input values.
This is usually more pleasant.
This is very much a hack, but it is better than nothing.
This is what's called by the persistConn's idleTimer, and is run in its own goroutine.
This is why (*t2).f2 is kept and t2.f2 is eliminated in this test case.
This isn't a perfect number scanner - for instance it accepts "." and "0x0.2" and "089" - but when it's wrong the input is invalid and the parser (via strconv) will notice.
This isn't advisable except for interoperability.
This isn't just string(b) since that converts to UTF-8.
This isn't obviously the correct behaviour, but it's what Go has traditionally done.
This isn't really an exhaustive test of eqstring, it's just a convenient way of documenting (via eqstring_generic) what eqstring does.
This isn't safe during mark termination because mark termination is consuming this list, but it's also not necessary.
This just looks for crashes due to bounds errors etc.
This keeps textp in increasing address order.
This keeps the GC cost in linear proportion to the allocation cost.
This key was generated by GnuTLS and has illegal zero-padding of the private key.
This last option is used for testing very large (multi-GB) compressed files.
This lazy approach works out in practice: we don't mind if the first couple gc rounds don't have quite the maximum number of procs.
This leads to duplicated loads of the standard packages.
This leads to relocation codes that are inherently processor specific.
This lets people have a go.release.r60 branch and a go1 branch and make changes in both, without constantly editing .hgtags.
This lets us avoid checks of ok until the end of a packing sequence.
This lets us detect removed files.
This lets us run the scan in overall linear time instead of the quadratic time  a naive search would require.
This lets us test code paths that differ based on the underlying type of the Context.
This lets you run go test ./ioutil in package io and be referring to io/ioutil rather than a hypothetical import of "./ioutil".
This library accepts either size of byte slice but always returns 16-byte addresses.
This limit of 2 million comes from the bzip2 source code.
This limitation may be lifted eventually.
This limits the search to run in time linear in the length of the test.
This limits the trailer to the underlying buffer size, typically 4kB.
This list is also known to cmd/gc.
This list is taken from include/link.h.
This list is truncated at the point where smallPrimesProduct exceeds a uint64.
This list is used by 'go tool dist list'.
This lock solves that race: the create new fd/mark close-on-exec operation is done holding ForkLock for reading, and the fork itself is done holding ForkLock for writing.
This logic is basically a copy of the net/http transferWriter.shouldSendContentLength.
This looks for code that uses cgo to call C code passing values whose types are almost always invalid according to the cgo pointer sharing rules.
This looks like it's quadratic in the size of the text, but we are not clearing visited between calls to TrySearch, so no work is duplicated and it ends up still being linear.
This loop is the bottleneck.
This loop needs to examine each character before deciding whether to consume it.
This loop should not assume Sunday will be visited first.
This loop stops when Peek returns an error, which it does when r's buffer has been filled.
This loop terminates because getLine's second result is always smaller than its argument.
This loop will make progress because gcBlackenPromptly is now true, so it won't take this same "if" branch.
This makes 'go build -tags netgo' work, among other things.
This makes 'go build' skip the standard packages when using an official release, even when the mtimes have been changed.
This makes 'go get rsc.io/pdf/...' work in a fresh GOPATH.
This makes Counter satisfy the expvar.Var interface, so we can export it directly.
This makes absolute values of timestamp diffs smaller, and so they are encoded in less number of bytes.
This makes access to the TLS storage (for g) doable with 1 instruction.
This makes fork slower.
This makes it easier to compare packages computed with the type- checker vs packages imported from gc export data.
This makes it easy to add fixup code on merge edges - the source of a merge edge has only one successor, so we can add fixup code to the end of that block.
This makes it easy to sort them later.
This makes it possible for a single UDP listener to join multiple different group addresses, for multiple UDP listeners that listen on the same UDP port to join the same group address.
This makes it possible to copy code into alternate locations in vendor trees without needing to update import comments.
This makes it possible to see call sites for duffcopy/duffzero in BP-based profiling tools like Linux perf (which is the whole point of obj.Framepointer_enabled).
This makes it safe to call cloneTLSClientConfig on a config in active use by a server.
This makes level1.nextPairFreq be a legitimate value that never gets chosen.
This makes obj reachable again, but now without an associated finalizer.
This makes sure new(T) is allocated on heap, not on the stack.
This makes sure that q sees the modifications to p.
This makes sure that we only have one live flags value at a time.
This makes sure the converted value vout2 is really usable as a regular value.
This makes the assumption that aux values can be compared using DeepEqual.
This makes the output look a little nicer when debugging, and some kind of space is required if the encoded value was a number, so that the reader knows there aren't more digits coming.
This map lists the conversion from real answer to Apple answer.
This map's max size is bounded by 2*len(statusText), two protocol types for each known official status code in the statusText map.
This mask-and-or approach prevents an additional branch.
This matches libjpeg's jdapimin.c.
This matches the Go field resolution on embedding.
This matches the behavior of a range loop over an incorrectly encoded string.
This matches the docs in go help get.
This matches the rest of the toolchain.
This math is overflow free since we verify that offset and numBytes can be safely added when creating the sparseFileReader.
This matters mainly for people invoking cgo -godefs by hand.
This may be a renegotiation handshake, in which case some fields need to be reset.
This may be an unacceptable DoS risk.
This may be called concurrently, for example, when called from sync.Cond.Wait while holding a RWMutex in read mode.
This may be called during a concurrent phase, so make sure allgs doesn't change.
This may be called with the world stopped.
This may be more or less than the set of packages directly imported by pkg's source code.
This may be racing with GC so do it atomically if there can be a race marking the bit.
This may hang forever if timers are broken.
This may happen because at the end of p, a value may be live but only used by some other successor of p.
This may happen when tracing a system call, so we must lock the stack.
This may help reduce breakage, or it may just be confusing.
This may include C++ demangling and additional simplification.
This may leave huge pages off at the end points v and v+n even though allocations may cover these entire huge pages.
This may leave many open connections when accessing many hosts.
This may no longer be necessary now that we run escape analysis after wrapper generation, but for 1.5 this is conservatively left unchanged.
This may not be the case if GC start is delayed or if the allocation that pushed heap_live over next_gc is large or if the trigger is really close to GOGC.
This may race with adding the first special to a span, but in that case addfinalizer will observe that the GC is active (which is globally synchronized) and ensure the above invariants.
This may return without performing this transition in some cases, such as when called on a system stack or with locks held.
This may simplify the full type-checking phase.
This may underflow if carry is non-zero but, if so, we'll fix it in the next line.
This means no rescheduling, no malloc calls, and no new stack segments.
This means that a field element hits 2**257, rather than 2**256 as we would like.
This means that callers wanting to reuse the body for subsequent requests must arrange to wait for the Close call before doing so.
This means that directories containing parse errors will be built (and fail) instead of being silently skipped as not matching the pattern.
This means that it should only be selected when the client indicates that it supports ECC with a curve and point format that we're happy with.
This means that stack unwinding may not work entirely correctly (https://golang.org/issue/5723) but the user is running under gdb anyhow.
This means that the positive branch learns signed/LT and unsigned/LT but the negative branch only learns unsigned/GE.
This means that the scanning of preempted gs can't start until all the Ps have acknowledged.
This means that there may be multiple matches of a lower-case argument in a package if different symbols have different cases.
This means that we also need to start our own timers now.
This means that, by default, command line programs will behave like typical Unix command line programs, while other programs will not crash with SIGPIPE when writing to a closed network connection.
This means we can use the buffer to assemble the message without another allocation.
This mechanism can be used to cancel long operations on the server if the client has disconnected before the response is ready.
This mechanism ensures that a client sees the actual (run-time) type an untyped value would have.
This mechanism is intended only for trailers that are not known prior to the headers being written.
This mechanism makes it possible for C code to call back into Go or to share Go's data.
This mechanism permits an importer to recognize immediately when it is out of sync.
This message is a digest of all preceding handshake-layer messages that is signed using the private key corresponding to the client's certificate.
This method always updates z.digest with the data read.
This method consults the following fields of the request: Host URL Method (defaults to "GET") Header ContentLength TransferEncoding Body
This method consults the following fields of the response r:
This method does not set z.err.
This method generates that run-length encoding.
This method has a value receiver, despite the somewhat large size of h, because it prevents an allocation.
This method is designed to be inlined for performance reasons.
This method is intended to support keys where the private part is kept in, for example, a hardware module.
This method is invoked during shared library loading to create a new OS thread to perform the runtime initialization.
This method is only called via Conn.
This method is similar to _cgo_sys_thread_start except that it doesn't update any Go state.
This method may not be called if the server doesn't send a ServerKeyExchange message.
This method runs after the Handler is done and promotes any Header fields to be trailers.
This method should only be called from writeIDATs (via writeImage).
This might be a good place to add prefetch code...
This might cause a duplicate signal in rare cases, but it won't matter when using SIGKILL.
This might change at some point, but not yet in Go 1.6.
This might help others debug their implementations.
This might let us simplify or remove the next peep loop, too.
This minimum amortizes this per-GC overhead while keeping the heap reasonably small.
This mode is intended for use by pprof.
This mode will lead to massively larger export data (by a factor of 2 to 3) and should only be enabled during development and debugging.
This must NOT be go:noescape: if fn is a stack-allocated closure, fn puts g on a run queue, and g executes before fn returns, the closure will be invalidated while it is still executing.
This must be at least a 6-word object.
This must be called with preemption enabled.
This must be done after the type graph is constructed because it may need to resolve cycles in a different order than readType encounters them.
This must be done before endCycle since endCycle depends on statistics kept in these caches.
This must be done between GC cycles.
This must be performed *before* the span is allocated to ensure the system has enough credit.
This must happen after cachestats (which flushes local statistics to these) and flushallmcaches (which modifies heap_live).
This must happen after recompileForTest, because recompileForTest modifies XXX.
This must happen before disabling preemption.
This must match ../reflect/value.go:/runtimeSelect
This must match ../runtime/select.go:/runtimeSelect
This must match types handled by printany.
This must not access gp's stack (see gopark).
This must not be run from the serve goroutine itself, else it might deadlock writing to sc.wantWriteFrameCh (which is only mildly buffered and is read by serve itself).
This needs to happen before walk, because closures must be transformed before walk reaches a call of a closure.
This needs to run before escape analysis, because variables captured by value do not escape.
This netpoll is only an optimization before we resort to stealing.
This next case seems wrong, but the docs say the Formatter wins here.
This node is the root of a strongly connected component.
This null SHdr must appear before all others
This number is approximately what a typical machine's TCP buffer size is anyway.
This number was discovered by experimenting with syscall.WriteConsole.
This object is not marked and has at least one special record.
This occurs when function parameter type Isddd and n not Isddd
This offsets the worst-case charge performed by deductSweepCredit.
This one fails because there is a hex byte after the data, that is, an odd number of hex input bytes.
This one is a bit redundant, if we figured out that x wasn't going to change across the function call.
This one is an error that we can't catch because it breaks templates with minimized JavaScript.
This one is harder because the import name changes.
This one should be an ExecError.
This one should be auto closed if t doesn't close it.
This one should not belong to mop_test
This only includes the common elements of a DN.
This only matters in the old (pre-Go 1.2) symbol table format, so it's not worth fixing.
This operation used to corrupt c.recvq.
This operation used to fail because c.recvq was corrupted (it tries to wake up an already running G instead of B)
This option is supported only in descendants of 4.4BSD, to make an effective multicast application that requires quick draw possible.
This order guarantees that we will always be able to find a register.
This package compiles each Func independently.
This package does not require that behavior but html/template's escaping does, so it's a good habit.
This package favors simplicity over efficiency.
This package follows the JFIF specification at http://www.w3.org/Graphics/JPEG/jfif3.pdf.
This package is intended primarily for compatibility with existing systems.
This package is low-level and intended to be used directly by very few people.
This package is purely internal for use by the net/http/httptrace package and has no stable API exposed to end users.
This package only considers the positions between runes, so it disagrees.
This package only handles gc export data.
This package only manipulates the path as a whole, so we allow those last two as well.
This package operates, internally, on Jacobian coordinates.
This package uses CancelIoEx API, if present, otherwise it fallback to CancelIo.
This package's GOMAXPROCS function queries and changes the limit.
This package's compressor uses a higher minimum match length, enabling optimizations such as finding matches via 32-bit loads and compares.
This padding ensures that taking the address of the zero-sized thing can't manufacture a pointer to the next object in the heap.
This palette was used in the Plan 9 Operating System, described at https://9p.io/magic/man2html/6/color
This part of the stack will be re-scanned by mark termination, which will mark any objects made reachable from modifications to this part of the stack.
This particular estimate is a strict upper bound on the possible remaining scan work for the current heap.
This particular test never worked with the old scheme, because panic never did the right unwinding math.
This pass removes a CHECKNIL if every predecessor path has already checked this value for nil.
This permits Unsetenv to safely delete only the first item without worrying about unshadowing a later one, which might be a security problem.
This permits permits the context function to release any associated resources.
This permits reusing a ReadCloser instead of allocating a new one.
This permits reusing a Reader rather than allocating a new one.
This permits reusing a Writer rather than allocating a new one.
This permits using the Framer to test other HTTP/2 implementations' conformance to the spec.
This phase and the next run in parallel with other tests (using t.Parallel).
This pointer may be to some mmap'd region, so we allow it.
This port is also mostly cross-compiled, so it makes little sense to auto-detect the setting.
This preserves all relevant overflow buckets alive even if the table grows and/or overflow buckets are added to the table while we are iterating.
This preserves the property that we never read any extra bytes after the end of the DEFLATE stream.
This prevents collisions with keys defined in other packages.
This prevents go doc time.Sunday from finding the symbol.
This prevents hv1 from being the sole, inaccessible reference to an otherwise GC-able value during the next channel receive.
This prevents net/http from calculating the length for short bodies and adding a Content-Length.
This prevents return values from being assigned too early.
This prevents the need for any dominator calculations in this pass.
This previous version duplicated code (those lines are in tRunner no matter what), but worse the goroutine teardown implicit in runtime.Goexit was not guaranteed to complete before the test exited.
This previously panicked.
This prints: 2 3 5 7 but it should crash: The type assertion on line 18 should fail for the 2nd call to f with outer_T.
This private key includes an invalid prime that rsa.PrivateKey.Validate should reject.
This procedure is complicated by various sources of implicit control flow that are not accounted for using the standard cfg construction algorithm.
This process continues building additional simple chains until the first self-signed certificate is a trusted certificate or until an additional simple chain cannot be built.
This produces a fairly small set of test cases that exercise nearly all the code.
This program can be used as go_android_GOARCH_exec by the Go tool.
This program can be used as go_darwin_arm_exec by the Go tool.
This program caused an infinite loop with the recursive-descent parser.
This program compares a pair of trees by walking each in its own goroutine, sending their contents through a channel to a third goroutine that compares them.
This program generates a lot of equality tests and hopes to catch this.
This program generates a test to verify that the standard arithmetic operators properly handle const cases.
This program generates a test to verify that the standard arithmetic operators properly handle some special cases.
This program generates palette.go.
This program generates tests to verify that copying operations copy the data they are supposed to and clobber no adjacent values.
This program generates tests to verify that zeroing operations zero the data they are supposed to and clobber no adjacent values.
This program is processed by the cover command, and then testAll is called.
This program produced false race reports when run under the C/C++ ThreadSanitizer, as it did not understand the synchronization in the Go code.
This program solves the (English) peg solitaire board game.
This program used to complain because inlining created two exit labels.
This program will crash.
This protects from races between traceEvent and StartTrace/StopTrace.
This provides a connection for the blocked goroutine and then fills up the idle queue.
This provides the expected exit status for the shell.
This really doesn't have much to do with escape analysis per se, but we are reusing the ability to annotate an individual function argument and pass those annotations along to importing code.
This reduces compilation time and memory usage.
This reduces potential contention and chances of deadlocks.
This reduces the nosplit footprint of notetsleep_internal.
This reduces the number of register spills.
This reduces the size of the multiplication factor needed for base-10 exponents.
This reference should be invalid, because bug0.T.i is local to package bug0 and should not be visible in package bug1.
This repeats typ.Kind() except for method values.
This repo has two branches, master and another-branch.
This reportedly happens with clang 3.7 on ARM.
This represents n matches with len(x)/n submatches each.
This requires that the hash function be collision resistant.
This restriction is imposed by the gc compiler and the runtime.
This results in a large number of ephemeral temporary variables.
This returns 1 if it modified any instructions.
This returns the number of bytes copied and may be less than the requested length if the available space in the output buffer is too small.
This routine does the swizzling.
This routine does the unswizzling.
This routine should not deadlock.
This runs on a foreign stack, without an m or a g.
This saves a little bit of work in some small cases
This saves an instruction in the checking sequence for tiny frames.
This saves space in Types that do not have fields or methods compared to a simple slice of *Field.
This saves the TOC in the TOC save slot, reads the function pointer from x's .plt slot and calls it like any other global entry point (including setting r12 to the function address).
This scheme is very lightweight.
This script requires that three environment variables be set: GOIOS_DEV_ID: The codesigning developer id or certificate identifier GOIOS_APP_ID: The provisioning app id prefix.
This script supports an extra flag, -lldb, that pauses execution just before the main program begins and allows the user to control the remote lldb session.
This section can overlap if the copy length for this section is larger than the backwards distance.
This section documents those steps and the overall effect changes to signal handler settings by the non-Go code can have on Go programs.
This section is non-overlapping in that the copy length for this section is always less than or equal to the backwards distance.
This separation from IsGraphic allows quoteWith to avoid two calls to IsPrint.
This separation makes the API cleaner since it doesn't expose reflection to the client.
This sequence needs to fit in the bottom section of the stack.
This sequence used to cause a crash.
This serves as a simple spin lock that we can use even without an m.
This set is caught by pass 1.
This set is caught by pass 2.
This sets r2's Z value to 1, in the Montgomery domain.
This sets the linking mode as described in cmd/cgo/doc.go.
This setting is equivalent to not setting GOPATH at all, which is not what most people want when they do it.
This should be called either under STW or whenever memstats.heap_scan or memstats.heap_live is updated (with mheap_.lock held).
This should be called from a package's init function when it creates its Vars.
This should be called like
This should be called when all mark work has been drained.
This should be impossible because decryptPKCS1v15 always returns the full slice.
This should be per-function, but it is a global counter for now.
This should be used if the symbols used have a disproportionate histogram distribution.
This should be used only for testing.
This should degenerate to heapsort.
This should fail, as t0 has already executed.
This should happen fairly quickly, since all the I/O is non-blocking, and any attempts to block in the pollDesc will return errClosing.
This should never happen.
This should only be used as a temporary workaround to diagnose buggy code.
This should override the Country, above.
This should very nearly always work.
This shouldn't happen if we're being invoked in background mode since proportional sweep should have just finished sweeping everything, but rounding errors, etc, may leave a few spans unswept.
This shouldn't happen, but if it does, avoid dividing by zero or setting the assist negative.
This sieve is Eratosthenesque and only considers odd candidates.
This significantly complicates the state machine and has been the source of numerous, subtle security issues.
This simple check dramatically reduces the nuisance rate for the shadowing check, at least until something cleverer comes along.
This simplifies life if we wish to query information about x when x is both an input to and output of a block.
This simplifies testing.
This simulates in a small amount of code the behavior of Go's ideal constants.
This situation is analogous to being on a freelist.
This situation is rare, but unavoidable.
This sleep is completely optional: race report must not be printed regardless of whether the sender actually blocks or not.
This slice is updated by walkStates to maintain the known non-nil values.
This smashes the stack frame but we're not going back there anyway.
This so-called leftmost-first matching is the same semantics that Perl, Python, and other implementations use, although this package implements it without the expense of backtracking.
This so-called leftmost-longest matching is the same semantics that early regular expression implementations used and that POSIX specifies.
This software is copyright (C) 1991-2011, Thomas G.
This software is provided "AS IS", and you, its user, assume the entire risk as to its quality and accuracy.
This software may be referred to only as "the Independent JPEG Group's software".
This special case is going away after Issue 13851 is fixed.
This special tag is applied to uintptr variables that we believe may hold unsafe.Pointers for calls into assembly functions.
This specialized version is optimized for short distances.
This speeds up walks of deep stacks, which tend to have the same recursive functions over and over.
This spill was completely eliminated
This state cannot arise for decodeSingle, which is called directly from the user's value, not from the innards of an engine.
This statement crashed, because the partial call was allocated on the old stack.
This step is only needed if we believe that the Go compiler built from Go 1.4 will produce different object files than the Go compiler built from itself.
This step picks one name per value arbitrarily.
This still gets most of the benefit of huge pages while keeping the number of VMAs under control.
This still works but not well, and is superseded by FlagSet.
This stops godoc dumping all the tables but keeps them available to clients.
This string is claimed now, so resume
This struct defines the bucket header.
This struct type is not used outside of this package per se, but the exported fields are those of RFC 6265.
This structure doesn't exist on-disk, but eases navigation through the object file.
This structure has pointers and refers to itself, making it a good test case.
This stub is PIC, so first get the PC of label 1 into r11.
This supports using the memory sanitizer with Go programs.
This symmetry makes it very easy to change or extend the format: If a new field needs to be encoded, a symmetric change can be made to exporter and importer.
This table gives the basic information about instruction generated by the compiler and processed in the optimizer.
This table might overflow 127-bit exponent representations.
This table starts with opcode 1.
This takes ownership of the slice.
This technique works even for long if-else-if chains.
This tells msan that we set the results.
This tends to reduce register pressure.
This tension is resolved by allocating white until the mark phase is approaching its end and then allocating black for the remainder of the mark phase.
This termination sequence is called panicking and can be controlled by the built-in function recover.
This test _may_ fail on arm, but requires the host to  trap unaligned loads.
This test _may_ fail on arm, but requires the host to trap unaligned loads.
This test actually doesn't have anything to do with cgo.
This test appears first because the index of its counters is known to main.go
This test applies gofmt to all Go files under -root.
This test assumes registry state of NtfsDisable8dot3NameCreation is 2, the default (Volume level setting).
This test checks if the compiler's internal constant arithmetic correctly rounds denormal float32 values.
This test checks if the compiler's internal constant arithmetic correctly rounds up floating-point values that become the smallest denormal value.
This test checks that Go is doing the correct explicit checks to catch these nil pointer accesses, not just relying on the hardware.
This test checks that heap sampling produces reasonable results.
This test checks that select acts on the state of the channels at one moment in the execution, not over a smeared time window.
This test computes the precision of the compiler's internal multiprecision floats.
This test could only test Go version of expandKey because asm version might use different memory layout for expanded keys This is OK because we don't expose expanded keys to the outside
This test currently triggers a large number of usleep(100)s.
This test does not test whether the transport deals with too much data, though, since the server doesn't make it possible to send bogus data.
This test fails on older versions of OS X because they use older buggy versions of Clang that emit ambiguous DWARF info.
This test flakes out on some systems, so we'll try it a few times before declaring it a failure.
This test has to be in internal_test.go since it fiddles with unexported data structures.
This test hook prevents dialTCP from returning before the deadline.
This test intends to test that sending SIGPROF to foreign threads before we make any cgo call will not abort the whole process, so we cannot make any cgo call here.
This test involved both a parent and child process.
This test is a CGI host (testing host.go) that runs its own binary as a child process testing the other half of CGI (child.go).
This test is excluded when running under the race detector because it is a very expensive test and takes too long.
This test is in misc/cgo to take advantage of the testing framework support for when -static is expected to work.
This test is just to check that it shows the two NaNs at all.
This test is known not to work.
This test is not exhaustive, we're just checking that the formatting is correct.
This test is racy: it assumes that after a write to a localhost TCP connection, the peer TCP connection can immediately read it.
This test is run by bug429_run.go.
This test is run by linkx_run.go.
This test is run by sinit_run.go.
This test is sensitive to the level cap in function summary results.
This test just works now.
This test looks for the bug by checking that the value received actually ends up in t.
This test makes sure that naming named return variables in a return statement works.
This test makes sure that we don't split a single load up into two separate loads.
This test makes sure that we use all 64 bits of an index, even on 32 bit machines.
This test makes sure we can queue a G on the same channel multiple times.
This test only checks that the resulting values appear reasonable.
This test relies on gccgo being around, which it most likely will be if we were compiled with gccgo.
This test reproduces the corner case.
This test runs only on linux.
This test runs the full set of NIST test vectors from http://csrc.nist.gov/groups/STM/cavp/documents/dss/186-3ecdsatestvectors.zip
This test tests all such types.
This test tests some internals of the flate package.
This test tests what it is intended to test only if writes are fast.
This test trumps all others.
This test uses external network connectivity.
This test uses specific values that are known to fail if rounding is "factored" out before setting the result sign.
This test verifies that Go can access C variables in shared object file via cgo.
This test will not be run, it has no "Output:" comment.
This test's output is intended to be observed manually.
This tests for a bug found when partitioning, but not sorting by the Aux value.
This tests for a specific bug in the P224 implementation.
This tests inlined interfaces on 64-bit targets and indirect interfaces on 32-bit targets.
This tests missing hash references in a very large input.
This tests that an client requesting a content range won't also implicitly ask for gzip support.
This tests that attempting to decrypt a session key where the ciphertext is too small doesn't run outside the array bounds.
This tests that one can reset the flags.
This tests that the linker can read symbol names larger than the bufio buffer.
This tests that the package associated with the types.Object.Pkg method is the type's package independent of the order in which the imports are listed in the sources src1, src2 below.
This tests the internal isSpace function.
This the next line right shifts the desired bits into the least-significant places and masks off anything above.
This thread is going to run a goroutine and is not spinning anymore, so if it was marked as spinning we need to reset it now and potentially start a new spinning M.
This threshold is represented by leafSize.
This time does not include the time to read the response body.
This time does not include the time to send the request header.
This transition can race with submission of a new goroutine, and either one part or another needs to unpark another worker thread.
This transition enables write barriers because stack barriers assume that writes to higher frames will be tracked by write barriers.
This triggers two reallocations in Map.
This type conversion should fail at runtime.
This type is not visible to users - we include only enough information to generate a correct GC program for it.
This type is used to avoid extra allocations from cloning and/or populating the response Header map and all its 1-element slices.
This type of frame does not appear on the wire and is only returned by the Framer when Framer.ReadMetaHeaders is set.
This type waits on the real func (f) to be ready and then calls it.
This typically happens on file systems with 1-second (or, worse, 2-second) mtime granularity and with automated scripts that write an input and then immediately run a build, or vice versa.
This typically happens when the body is read after an HTTP Handler calls WriteHeader or Write on its ResponseWriter.
This unlock acts as a release barrier.
This used to be an issue because Go expects the working directory to be program-wide.
This used to cause a link error with gccgo.
This used to crash gccgo.
This used to drop the pages-in-use count below zero because of a rounding mismatch (golang.org/issue/15022).
This used to fail with gccgo.
This used to have a spurious "live at call to printint: p".
This used to install a race-enabled cgo.
This used to miscompile on arm5.
This uses a very rough approximation using the float64 exponent and the first 25 bits of the mantissa.
This uses the same condition that the Go language does: there must be a unique instance of the match at a given depth level.
This value can be no bigger than the size of the unmapped space at zero.
This value holds the lesser of the two delays.
This value is generated by the compiler, assembler, or linker.
This value should be larger than the maximum typical value used for db.maxOpen.
This value will contain at least the union of the regs fields of entries, but may contain additional entries for values that were once in this data structure but are no longer.
This variable is a backup: it depends only on old C style static linking rules.
This variable is also filled in by the logarithmic gamma function lgamma().
This verifies that a handler can Flush and then Hijack.
This version just generates the slice of strings, not the String method.
This version uses integers for most of the computation, to make the work arrays smaller and pointer-free.
This was a bug: the receiver has a different indirection level than the variable.
This was a buglet: we used to get "expected integer".
This was a regression which sadly lacked a triggering test.
This was an extension in the old C version of 'go tool addr2line' and is probably not used by anyone, but recognize the syntax.
This was generated by starting with a 2MB JSON file with actual data about open source revision history, then compressing with bzip2 -9, then encoding to base64 with openssl enc -e -base64.
This was generated by starting with a the contents of src/pkg/go/parser/parser.go at rev 9b455eb64690, then compressing with bzip2 -9, then encoding to base64.
This was generated using an old version of OpenSSL and is missing a leading zero byte in the private key that should be present.
This was needed until Go 1.6 to call syscall.Syscall correctly.
This was observed on Windows XP SP3 (windows/386).
This was our historic behavior.
This was previously broken by https://codereview.appspot.com/95760043/ and reverted in https://codereview.appspot.com/117600043/
This was the MIME POST body that previously failed.
This wasn't removed from Go 1.0 to Go 1.3, so locking it in that we keep this:
This way they are automatically encoded with a known and fixed type index.
This way we have one buffer's worth of hysteresis, which amortizes the cost of getting or putting a work buffer over at least one buffer of work and reduces contention on the global work lists.
This whitespace may be found as suffix in the common prefix.
This will all go away when we can use go/typechecker directly.
This will allocate space on the C heap.
This will allow larger batches for xor, and we should be able to match CTR/OFB performance.
This will allow people to have packages or commands named vendor.
This will also catch multiple modes in a single field.
This will avoid thrashing gs between different Ps.
This will be called again when the frame is done being written.
This will be good enough a lot of the time.
This will be index 0.
This will be index 1.
This will be index 2.
This will be index 3.
This will be scaled by gcpercent/100.
This will call badVerb.
This will call reflectFunc3
This will cause extra compilation, so for now we only do it when testCover is set.
This will cause oplook to return a variant of the instruction that loads the negative constant from memory, rather than using the immediate form.
This will cause the code below to memclr the dead section of the final array element, so that scanobject can stop early in the final element.
This will cause the test files.
This will change in future versions of Go once the TLS master-secret fix has been standardized and implemented.
This will emit a bunch of full buffers, we will pick them up on the next iteration.
This will gather all the information about types and methods but doesn't depend on any of it.
This will give package runtime a different build ID in each Go release.
This will have the effect of reading many bits out of b, but once the real bits are shifted out, b will supply as many zero bits as we try to read, which is exactly what we need.
This will help make sure that people don't rely on it in general.
This will inhibit spill sinking.
This will just cause steals to fail until credit is accumulated again, so in the long run it doesn't really matter, but we do have to handle the negative credit case.
This will likely be http.DefaultServeMux.
This will most likely happen when trying to retrieve its IP address.
This will patch up the .plt slot to point directly at the function so future calls go straight from the call stub to the real function, and then call the function.
This will protect the encoder from too large size.
This will remove any possibility that an attacker can learn any information about the plaintext.
This will restart the world.
This will return false if the gp is not in the expected status and the cas fails.
This will set the bits at most twice, keeping the overall loop linear.
This will smash the stack frame but we're not going back there anyway.
This won't handle .W/.P, so we should reject such code.
This would be costly if it occurred very often, but it doesn't.
This would be nice, but it has never worked.
This would be part of core crypto except that it imports math/big, which imports fmt.
This would complicate things too much, given that these functions are for debugging only.
This would have been broken by CL 11663043.
This would lead to at most one *T entry in typIndex, and all future *T's would be encoded as the respective index directly.
This would lead to excessive thread parking/ unparking as the additional threads will instantly park without discovering any work to do.
This would lead to thread state thrashing, as the thread that readied the goroutine can be out of work the very next moment, we will need to park it.
This would remove an int (likely 1 byte) for each named parameter.
This would set err to windows "last-error", otherwise it will be nil.
This wrapper uses complicated machinery to run iOS binaries.
This write barrier marks any object made reachable from modifications to this part of the stack.
This yields the same result, but is fewer arithmetic operations.
This, combined with the runtime/zversion content, will cause packages to have different build IDs when compiled with different Go releases.
Those MAP_*values are different from these.
Those are tested by slice3err.go.
Those can arrange for main.main to run in the main thread by calling runtime.LockOSThread during initialization to preserve the lock.
Those commands can run any process but the intent is to create or update Go source files, for instance by running yacc.
Those methods must be called only from the goroutine running the Benchmark function.
Those methods, as well as the Parallel method, must be called only from the goroutine running the Test function.
Those must not be instrumented, because the instrumentation calls will smash the results.
Those two are different execution paths in the runtime.
Those values are not added to Header.
Those widths must be cleared to avoid triggering failures in gins when it detects real but heretofore latent (and one hopes innocuous) type mismatches.
Though, we test those names here for verifying negative answers at DNS query-response interaction level.
Thread local storage segment
Thread-local storage references use the TLS pseudo-register.
Thread-local storage segment (really just size).
ThreadCreateProfile returns n, the number of records in the thread creation profile.
Three cases, depending on internal at start/end of string or not.
Three common cases: value is exact integer value is exact integer * exact power of ten value is exact integer / exact power of ten These all produce potentially inexact but correctly rounded answers.
Three leading slashes isn't an authority, but doesn't return an error.
Three rejected approaches that would work badly: 1.
Three-letter months and days must not be followed by lower-case letter.
Throw a better error message instead.
Throw away terminating NUL.
Throw away volume name
Thus "call .X.Y 1 2" is, in Go notation, dot.X.Y(1, 2) where Y is a func-valued field, map entry, or the like.
Thus 0 is transmitted as (00), 7 is transmitted as (07) and 256 is transmitted as (FE 01 00).
Thus explicit calls to WriteHeader are mainly used to send error codes.
Thus here we must observe local at least as large localSize.
Thus it cannot have overflowed when we eliminated top for the second time.
Thus it may not be possible to export multi-prime private keys in certain formats or to subsequently import them into other code.
Thus it targets the same goal as Linux's futex, but it has much simpler semantics.
Thus running the tests involves nothing external, but creating and updating them requires the reference implementation.
Thus the return value from recover reports whether the goroutine is panicking.
Thus there are more than 256 possible symbols.
Thus this check is for robustness:
Thus this test also verifies that the Flock_t structure can be roundtripped with F_SETLK and F_GETLK.
Thus we are forced to poll until we get a connection.
Thus we check BitLen here.
Thus we only need to protect the first character after the backslash.
Thus we process blocks all at once, except for the RLE which we decompress as required.
Thus we skip this test until that's fixed.
Thus we take c.handshakeMutex first and, if we find that a handshake is needed, then we unlock, acquire c.in and c.handshakeMutex in the correct order, and check again.
Thus, a repeated symbol ends up being encoded with many zeros, as the symbol will be at the front of the list after the first access.
Thus, a subsequent indent by a linebreak call after a type, or in the next multi-line identList will do the right thing.
Thus, after interspersing such comments, the space taken up by them is not considered to reduce the number of linebreaks.
Thus, all n bytes are available for output.
Thus, even if the resulting token sequence contains no illegal tokens, a client may not assume that no error occurred.
Thus, exported object names must be fully qualified.
Thus, for instance, for a slice it returns the length of the slice times the element size and does not count the memory occupied by the header.
Thus, if in the future we need to define new message structs, no new pack/unpack/printing code needs to be written.
Thus, if the RSA result isn't well-formed, the implementation uses a random key in constant time.
Thus, if the set of possible messages is small, an attacker may be able to build a map from messages to signatures and identify the signed messages.
Thus, if we have a named pointer type, proceed with the underlying pointer type but discard the result if it is a method since we would not have found it for T (see also issue 8590).
Thus, image.Decode can yield a different ColorModel than image.DecodeConfig.
Thus, it is okay to return io.EOF here.
Thus, stopping the loop after a fixed number of iterations gives somewhat stochastic testing.
Thus, the Open function should be called just once.
Thus, the first byte is equivalent to the sign bit in two's complement form.
Thus, the merging goroutine will receive from 'primes' much slower than this goroutine will send to it, making the buffer accumulate and block this goroutine from sending, causing a deadlock.
Thus, the package scope can be found in the type-checked Package object.
Thus, the result is the largest number that can be divided repeatedly by 2 before becoming about the value of karatsubaThreshold.
Thus, top- level untyped constants will return an untyped type rather then the respective context-specific type.
Thus, use the (latest) colon position for error reporting.
Thus, we proceed to compute log(u), and add back the correction term c/u.
Thus, we test that a nil stream is okay.
Thus, we try an innocent seek to the current position to see if Seek is really supported.
Thus, we will always find any valid block, no matter what bytes precede it.
Thus, when using keys which may have been generated by other code, this error must be handled.
Tibetan is the set of Unicode characters in script Tibetan.
Tick is a convenience wrapper for NewTicker providing access to the ticking channel only.
Tie the command-line flag to the intervalFlag variable and set a usage message.
Tifinagh is the set of Unicode characters in script Tifinagh.
Time instants can be compared using the Before, After, and Equal methods.
Time returns the current time as the number of seconds since the epoch.
Time stamps, Fractional seconds.
Time test or benchmark started
Time zone abbreviations.
Time zone indices for transition times.
Time zones are human-generated and unpredictable.
Time-based staleness.
Time-related runtime and pieces of package time.
Time3339 is a time.Time which encodes to and from JSON as an RFC 3339 time in UTC.
TimeFormat is the time format to use when generating times in HTTP headers.
Timeout exceeded and entire body is sent.
Timeout is the maximum amount of time a dial will wait for a connect to complete.
Timeout reports whether the DNS lookup is known to have timed out.
Timeout specifies a time limit for requests made by this Client.
TimeoutHandler buffers all Handler writes to memory and does not support the Hijacker or Flusher interfaces.
TimeoutHandler returns a Handler that runs h with the given time limit.
TimeoutReader returns ErrTimeout on the second read with no data.
Timer func will check the seq against current descriptor seq, if they differ the descriptor was reused or timers were reset.
Timerproc runs the time-driven events.
Times measured as an int64 seconds since the year 1970 are called Unix times.
Timespec is an invented structure on Windows, but here for consistency with the syscall package for other operating systems.
Timestamps in trace are cputicks/traceTickDiv.
Timing go:nowritebarrier
Timing/utilization stats for this cycle.
Tiny allocator combines several tiny allocation requests into a single memory block.
Tiny allocator parameters, see "Tiny allocator" comment in malloc.go.
Tiny buffer to keep it honest.
Tirhuta is the set of Unicode characters in script Tirhuta.
Title is the set of Unicode title case letters.
Title returns a copy of s with all Unicode letters that begin words mapped to their title case.
Title returns a copy of the string s with all Unicode letters that begin words mapped to their title case.
TmpVarCode returns source code for temp variable.
TmpVarHelperCode returns source code for helper's temp variable.
To a user-defined type
To accept any key usage, include ExtKeyUsageAny.
To access a struct, union, or enum type directly, prefix it with struct_, union_, or enum_, as in C.struct_stat.
To access multiple values of a key, access the map directly with CanonicalHeaderKey.
To access multiple values of the same key, call ParseForm and then inspect Request.Form directly.
To access multiple values, use the map directly.
To accommodate services publishing SRV records under non-standard names, if both service and proto are empty strings, LookupSRV looks up name directly.
To accommodate this, we use regSize as the size of the architecture-pushed return PC.
To accomplish that, we iteratively perform depth-first searches of increasing depth until we either find the named field/method or exhaust the tree.
To achieve this we create a goroutine per-proc.
To achieve this we create excess of goroutines most of which do local work.
To acquire a copy of the bytes, call CopyToken or the token's Copy method.
To add and remove things from the heap, use heap.Push and heap.Pop.
To allow this we use trace.lockOwner.
To attach ReadRune and UnreadRune methods to a reader without that capability, use bufio.NewReader.
To avoid a cyclic dependency with go/parser, this file is in a separate package.
To avoid allocating while building that equivalence class, move the values equivalent to v to the beginning of e and other values to the end of e.
To avoid ambiguity, Go programs cannot use relative import paths within a work space.
To avoid denial of service attacks, the provided bufio.Reader should be reading from an io.LimitReader or similar Reader to bound the size of responses.
To avoid errors during all.bash on those file systems, skip during go test -short.
To avoid extra conversions, f operates on the reflect.Value form.
To avoid filling the dynamic table with lots of unnecessary symbols, mark all Go symbols local (not global) in the final executable.
To avoid hurting the analyses of ordinary stack variables, those are not 'isaddrokay'.
To avoid lock contention on DB.mu, we do it only when s.db.numClosed - s.lastNum is large enough.
To avoid long hash chains, we assign a random number as the hash value for a NaN.
To avoid making a copy each time, we loop over the blocks BACKWARDS.
To avoid problems on case-insensitive files, we reject any package where two different input files have equal names under a case-insensitive comparison.
To avoid putting the temporary output directory name there (and making the resulting shared library useless), run the link in the output directory so that -o can name just the final path element.
To avoid requesting more OS memory while there are unswept spans, when a goroutine needs another span, it first attempts to reclaim that much memory by sweeping.
To avoid such problems, prefer time layouts that use a numeric zone offset, or use ParseInLocation.
To avoid such redirects either modify the path or use ServeContent.
To avoid that being an unrelated instruction, insert an actual hardware NOP that will have the right line number.
To avoid the binary search through tx, keep a static one-element cache that gives the correct zone for the time when the Location was created.
To avoid the quadratic behavior, we only turn on the bits if v is the head of the list or if the head's bit is not yet turned on.
To avoid these write errors, if an input and output have the same mtime, we assume the output is up-to-date.
To avoid this, definitions must be placed in preambles in other files, or in C source files.
To avoid this, run the program several times in the hopes that it will eventually fail.
To avoid this, we disable inlining of runtime functions when instrumenting.
To avoid type assertions, some XxxNodes also have specialized CopyXxx methods that return *XxxNode.
To be fully precise, there are two results of a compilation: the entire .a file used by the link and the subpiece used by later compilations (__.PKGDEF only).
To be sent on signal channel when done.
To be the end, the peek buffer must contain a newline after the boundary or contain the ending boundary (--separator--).
To be used when the error handler is not set up.
To bridge the gap, the init bool says whether this is a valid gmp value.
To build a file only when using cgo, and only on Linux and OS X:
To calculate the offset into the section the relocation is referencing, we subtract the vaddr of the start of the referenced section found in the original object file.
To call into the C function f from Go, the cgo-generated code calls runtime.cgocall(_cgo_Cfunc_f, frame), where _cgo_Cfunc_f is a gcc-compiled function written by cgo.
To change the context, use WithContext.
To check if an error occurred during the Flush, call Error.
To check interface assignments, depends on phase 1.
To choose the cutoff, look at the whole expression but excluding primary expressions (function calls, parenthesized exprs), and apply these rules:
To close the connection gracefully, set the Response.Close field to true.
To compare two Values, compare the results of the Interface method.
To compensate for that, if the last spinning thread finds work and stops spinning, it must unpark a new spinning thread.
To complete the example above, the following code tries to find the value x in an integer slice data sorted in ascending order:
To compute q    from q , one checks whether i+1       i
To compute t-d for a duration d, use t.Add(-d).
To compute the number of allocations, the function will first be run once as a warm-up.
To create a request for use with testing a Server Handler use either ReadRequest or manually update the Request fields.
To create the Pos value for a specific source offset (measured in bytes), first add the respective file to the current file set using FileSet.AddFile and then call File.Pos(offset) for that file.
To cut one instruction from the check sequence for functions with tiny frames, the stack is allowed to protrude StackSmall bytes below the stack guard.
To date, the opposite of a link register architecture is an x86 architecture.
To date, there is nothing in the Go command to express this.
To deal with recursive types, populate the map with an indirect func before we build it.
To debug a specific function, uncomment second line and change name.
To detect changes in toolchain, we include the toolchain version in the build ID hash for package runtime, and then we include the build IDs of all imported packages in the build ID for p.
To detect the set of inputs changing, we turn away from mtimes and to an explicit data comparison.
To determine whether a tag is explicitly set to the empty string, use Lookup.
To determine whether the flags are available, use GetProcAddress to get the address of the AddDllDirectory, RemoveDllDirectory, or SetDefaultDllDirectories function.
To differentiate RSP from ZR, we use a different numeric value for REGZERO and REGSP.
To distinguish build constraints from package documentation, a series of build constraints must be followed by a blank line.
To distinguish them from non-directive comments, the directives require no space between the slashes and the name of the directive.
To do lazy symbol lookup right, we're supposed to tell the dynamic loader which library each symbol comes from and format the link info section just so.
To do so, it consumes req.Body and then replaces it with a new io.ReadCloser that yields the same bytes.
To do that, buf should have the desired capacity but a length of zero.
To do that, we mark all file descriptors close-on-exec and then, in the child, explicitly unmark the ones we want the exec'ed program to keep.
To do this we explicitly check early dates in a couple of specific timezones.
To do this we take first unmerged event from each batch (frontier).
To do this we use an orthogonal bit pattern to indicate the object is marked.
To do this, cgo must introduce a Go variable that points at the C variable (the linker can be told to initialize this pointer).
To do this, set sendZero.
To do this, the package must be distributed with a source file not excluded by build constraints and containing a "//go:binary-only-package" comment.
To easily look up file/line information for the call sequence, use Frames.
To effect edge-triggered events, we need to be sure to update our association with whatever events were not set with the event.
To embed spaces in an element in the list, surround it with either single or double quotes.
To enable the Debug function, delete the +build ignore line above and do go install
To ensure that the lock eventually becomes available, a blocked Lock call excludes new readers from acquiring the lock.
To ensure that we get rewrite the Trunc32to16 before we rewrite the Store, we force the truncate into an earlier basic block by using it on both branches.
To err on the side of caution, Go interprets this to mean "zero or more".
To escape a text segment, bracket it with Escape characters.
To fill nBuckets buckets takes LOAD * nBuckets keys.
To find a function given a pc, locate the bucket and subbucket for that pc.
To find the head, we walk the prefix chain until we find a literal code.
To force a parsing as index*scale, write (index*1).
To force ignoring of an anonymous struct field in both current and earlier versions, give the field a JSON tag of "-".
To further complicate matters, for non-interleaved scans, there is no data for any blocks that are inside the image at the MCU level but outside the image at the pixel level.
To generate HTML output, see package html/template, which has the same interface as this package but automatically secures HTML output against certain attacks.
To get the absolute address of the value this rip-relative address is pointing to, we must add the address of the next instruction to it.
To get the address of such a field (which is the only operation you can do with a zero-sized field) you must take the address of the struct and add the size of the struct.
To get the dependency without importing any specific symbols, use _ for local and remote.
To get the original response from the server, set Transport.DisableCompression to true.
To get the same layout for a run time generated type, we need an array directly following the uncommonType memory.
To handle recursive types, mark this engine as underway before compiling.
To help the user, see if a pointer receiver would work.
To help us, the linker emits a jmp back to the beginning right after the call to morestack.
To help, the Go code can define Go objects holding the C pointers and use runtime.SetFinalizer on those Go objects.
To implement OANDAND (and OOROR), we introduce a new temporary variable to hold the result.
To import a package solely for its side-effects (initialization), use the blank identifier as explicit package name." check use of regular imported packages
To include every allocated block in the profile, set MemProfileRate to 1.
To increase parallelism for non-CPU-bound benchmarks, call SetParallelism before RunParallel.
To instruct traceEvent that it must not ignore events below, we set startingtrace.
To invoke it, use the call function, defined below.
To invoke manually: go tool dist test -run api --no-rebuild
To iterate in program order follow the link pointer from the first node and stop after the last node has been visited
To iterate in reverse program order by following the opt pointer from the last node
To keep a file from being considered for the build:
To keep binary size down, we replace the names with SHA-1 prefixes.
To keep the leak checker happy, keep track of pending dials and wait for them to finish (and be closed or returned to the idle pool) before we close idle connections.
To load, parse, and type-check a complete Go program from source, use golang.org/x/tools/go/loader.
To locate a Go package, use (*go/build.Context).Import.
To maintain binary compatibility, if you extend this type, always put the new fields last.
To maintain iteration semantics, we never move keys within their bucket (if we did, keys might be returned 0 or 2 times).
To make a request with custom headers, use NewRequest and Client.Do.
To make a request with custom headers, use NewRequest and DefaultClient.Do.
To make it possible for gcc-compiled C code to call a Go function p.GoF, cgo writes a gcc-compiled function named GoF (not p.GoF, since gcc doesn't know about packages).
To make it work, call os/signal.Notify for syscall.SIGPROF, but note that doing so may break any profiling being done by the main program.
To make static symbols unique across all files being read, we replace version 1 with the version corresponding to the current file number.
To make sure that the runtime's chansend can call typeBitsBulkBarrier, we raised the limit to 2048, so that even 32-bit systems are guaranteed to use bitmaps for objects up to 64 kB in size.
To make sure we never come back to this level or any lower level, set nextPairFreq impossibly large.
To make these the same, we can only ask about one page at a time.
To make this test effective, edit panic.go:gopanic and uncomment the GC() call just before freedefer(d).
To make this work, we append a '.' so that GCC will decide that the file already has an extension.
To maps the rune to the specified case: UpperCase, LowerCase, or TitleCase.
To match Bison, suggest at most four expected tokens.
To obtain the line number, consult e.g. Position.Line.
To obtain the path, String uses u.EscapedPath().
To overcome that limitation, we run special goroutine, locked to OS single thread, that both starts and cancels IO.
To overcome this we ask for PageSize more and round up the pointer.
To prevent binaries which only using the HTTP Client code (such as cmd/go) from also linking in the HTTP server, don't use a static type assertion to the server "*response" type.
To prevent duplicate operations, ErrBadConn should NOT be returned if there's a possibility that the database server might have performed the operation.
To prevent excessive heap growth, before allocating n pages we need to sweep and reclaim at least n pages.
To prevent false positives, average away variation by doing multiple rounds within a single run.
To prevent false retention of whole Pools.
To prevent the Server's Content-Length and test ServeFile only, flush here.
To produce a different normal distribution, callers can adjust the output using:
To produce a distribution with a different rate parameter, callers can adjust the output using:
To provide stable offsets, we add pin *rtype objects in a global map and treat the offset as an identifier.
To put things into a priority queue The values that should come last are least.
To read from other sources, callers can set the following functions.
To recap, there are no constraints on the assembly being used for the transition.
To receive such a message, the SO_PASSCRED option must be enabled on the socket.
To reduce duplication, we generate the list for go/build from this.
To rewrite Host headers, use ReverseProxy directly with a custom Director policy.
To run fix with specific options, run 'go tool fix'.
To run gofmt with specific options, run gofmt itself.
To run the vet tool with specific options, run 'go tool vet'.
To run this test you must use the ./run shell script.
To save one multiplication, we scale the coefficient Qi to Qi*2**i, and replace z by (x**2)/2.
To save space, it's a 16-bit number, so we clamp it if it overflows - won't matter in practice.
To send an interface, we send a string identifying the concrete type, followed by the type identifier (which might require defining that type right now), followed by the concrete value.
To serve a directory on disk (/tmp) under an alternate URL path (/tmpfiles/), use StripPrefix to modify the request URL's path before the FileServer sees it:
To set custom headers, use NewRequest and Client.Do.
To set custom headers, use NewRequest and DefaultClient.Do.
To set other headers, use NewRequest and DefaultClient.Do.
To shake out latent assumptions about scheduling order, we introduce some randomness into scheduling decisions when running with the race detector.
To signal a test is done.
To signal parallel subtests they may start.
To start the next stream, call z.Reset(r) followed by z.Multistream(false).
To start, we must know the set of inputs to the build process that can affect the generated output.
To support these and other cases, if a test file contains a function:
To suppress implicit response headers, set their value to nil.
To test for equality, compare the Types directly.
To test this we want to communicate between the main program and the shared library without using any exported symbols.
To the caller G, the invocation of F then behaves like a call to panic, terminating G's execution and running any deferred functions.
To truncate, subtract remainder.
To turn off profiling entirely, set MemProfileRate to 0.
To unmarshal JSON into a pointer, Unmarshal first handles the case of the JSON being the JSON literal null.
To unmarshal JSON into an interface value, Unmarshal stores one of these in the interface value:
To unmarshal a JSON array into a Go array, Unmarshal decodes JSON array elements into corresponding Go array elements.
To unmarshal a JSON array into a slice, Unmarshal resets the slice length to zero and then appends each element to the slice.
To unmarshal a JSON object into a map, Unmarshal first establishes a map to use, If the map is nil, Unmarshal allocates a new map.
To update the reference files use the "-update" flag on the test.
To use a Pipeline p to manage multiple clients on a connection, each client should run:
To use an alternate codec, use ServeCodec.
To use an existing prepared statement on this transaction, see Tx.Stmt.
To use gobs, create an Encoder and present it with a series of data items as values or addresses that can be dereferenced to values.
To use it this way, link this package into your program: import _ "expvar"
To use it, the first field of the struct must have this type.
To use pprof, link this package into your program: import _ "net/http/pprof"
To use the operating system's file system implementation, use http.Dir:
To verify if headers are not filtered out.
To verify that the data source name is valid, call Ping.
To view all available profiles, open http://localhost:6060/debug/pprof/ in your browser.
To work around this, we explicitly disable transparent huge pages when we release pages of the heap.
To write a new test suite, create a file whose name ends _test.go that contains the TestXxx functions as described here.
To16 converts the IP address ip to a 16-byte representation.
To4 converts the IPv4 address ip to a 4-byte representation.
ToComplex converts x to a Complex value if x is representable as a Complex.
ToFloat converts x to a Float value if x is representable as a Float.
ToHTML converts comment text to formatted HTML.
ToHTML in comment.go assigns a (possibly blank) ID to each heading
ToLower maps the rune to lower case giving priority to the special mapping.
ToLower maps the rune to lower case.
ToLower returns a copy of the byte slice s with all Unicode letters mapped to their lower case.
ToLower returns a copy of the string s with all Unicode letters mapped to their lower case.
ToLowerSpecial returns a copy of the byte slice s with all Unicode letters mapped to their lower case, giving priority to the special casing rules.
ToLowerSpecial returns a copy of the string s with all Unicode letters mapped to their lower case, giving priority to the special casing rules.
ToParams converts r into slice of *Param.
ToSlash returns the result of replacing each separator character in path with a slash ('/') character.
ToText prepares comment text for presentation in textual output.
ToTitle maps the rune to title case giving priority to the special mapping.
ToTitle maps the rune to title case.
ToTitle returns a copy of the byte slice s with all Unicode letters mapped to their title case.
ToTitle returns a copy of the string s with all Unicode letters mapped to their title case.
ToTitleSpecial returns a copy of the byte slice s with all Unicode letters mapped to their title case, giving priority to the special casing rules.
ToTitleSpecial returns a copy of the string s with all Unicode letters mapped to their title case, giving priority to the special casing rules.
ToUpper maps the rune to upper case giving priority to the special mapping.
ToUpper maps the rune to upper case.
ToUpper returns a copy of the byte slice s with all Unicode letters mapped to their upper case.
ToUpper returns a copy of the string s with all Unicode letters mapped to their upper case.
ToUpperSpecial returns a copy of the byte slice s with all Unicode letters mapped to their upper case, giving priority to the special casing rules.
ToUpperSpecial returns a copy of the string s with all Unicode letters mapped to their upper case, giving priority to the special casing rules.
Today, this only happens for channel receive operations.
Together with the remainder, we can decide whether the result is exact, bigger than 1/2ulp, or less than 1/2ulp (it will never equal to 1/2ulp).
Together with the value ID is a count of how many instructions to the next use of that value.
Token implements XML name spaces as described by http://www.w3.org/TR/REC-xml-names/.
Token is the set of lexical tokens of the Go programming language.
Token positions are relative to that file and thus relative to the file set.
Token returns the next JSON token in the input stream.
Token returns the next XML token in the input stream.
Token skips space in the input if skipSpace is true, then returns the run of Unicode code points c satisfying f(c).
TokenString returns a printable string for a token or Unicode character.
TokenText returns the string corresponding to the most recently scanned token.
Too big and we'll introduce too much register pressure.
Too long for everyday testing.
Too many programs use r.URL.Path to construct the argument to serveFile.
Too many symbolic links
TooManyIntermediates results when a path length constraint is violated.
ToolDir is the directory containing build tools.
Toolchain experiments.
Tools like DTrace will have to wait for now.
Top-level convenience functions
Top-level functions, such as Float64 and Int, use a default shared Source that produces a deterministic sequence of values each time a program is run.
Torture test for goroutines.
Total amount of space to reserve at the start of the file for Header, PHeaders, SHeaders, and interp.
Total amount of space to reserve at the start of the file for Header, PHeaders, and SHeaders.
Total available is now below the sane minimum.
Total execution time of all goroutines in this group.
Total number of bytes to skip
Total number of goroutines in this group.
Total number of mallocs is calculated as number of frees plus number of alive objects.
Total size cannot be negative
Total size in bytes of PLT relocations.
Total size of ElfNN_Rel relocations.
Total size of ElfNN_Rela relocations.
Total size of the file
Toyota ME16 processor.
Trace C compiler execution and output.
Trace contains a set of hooks for tracing events within the net package.
Trace is a tool for viewing trace files.
Trace responds with the execution trace in binary form.
Trace viewer wants timestamps in microseconds.
Trace-viewer discards arrows if they don't start/end inside of a slice or instant.
TraceKey is a context.Context Value key.
Traceback is safe if we're on the system stack (if necessary, flags will stop it before switching to the user stack), or if we locked the user stack.
Traceback over the deferred function calls.
Tracing can start in the middle of a futile wakeup.
Tracing code can invoke write barriers that cannot run without a P.
Tracing lasts for duration specified in seconds GET parameter, or for 1 second if not specified.
Tracing of alloc/free/gc.
Tracing won't work reliably for architectures where cputicks is emulated by nanotime, so the value doesn't matter for those architectures.
Track each driverConn's open statements, so we can close them before closing the conn.
Track time spent in this assist.
TrackingWriter tracks the last byte written on every write so we can avoid printing a newline if one was already written or if there is no output at all.
Trailer and no chunking
Trailer maps trailer keys to values in the same format as Header.
Trailer must not be accessed concurrently with Read calls on the Body.
Trailer specifies additional headers that are sent after the request body.
TrailerPrefix is a magic prefix for ResponseWriter.Header map keys that, if present, signals that the map entry is actually for the response trailers, and not the response headers.
Trailers returns any trailers set by the handler.
Trailing * matches rest of string unless it has a /.
Trailing commas now allowed in conversions.
Trailing data after the fullName is allowed because other elements of the SEQUENCE can appear.
Trailing path separators are removed before extracting the last element.
Trailing slashes are removed before extracting the last element.
Trailing space is tougher.
Trailing zero-sized field will take space.
Transfer encoding, content length
Transfer half of local cache to the central cache.
Transfer semantics for Requests are exactly like those for Responses with status code 200, responding to a GET method
TransferEncoding lists the transfer encodings from outermost to innermost.
Transform direct call of a closure to call of a normal function.
Transition from mark 1 to mark 2.
Transition to mark termination.
Transitions between states are done atomically with CAS.
Transitions between these states are constrained as follows:
Translate 0(FS) and 8(FS) into -16(FS) and -8(FS).
Translate cpu ticks to real time.
Translate name to mib number.
Translate rewrites f.AST, the original Go input, to remove references to the imported package C, replacing them with references to the equivalent Go types, functions, and variables.
Translate to internal uint64 and save JSON on the side.
Translate to zero-length array instead.
Transmogrify slow integer division into fast multiplication using magic.
Transparent is a fully transparent uniform image.
Transport is an HTTP/2 Transport.
Transport is an implementation of RoundTripper that supports HTTP, HTTPS, and HTTP proxies (for either HTTP or HTTPS with CONNECT).
Transport specifies the mechanism by which individual HTTP requests are made.
Transport uses HTTP/1.1 for HTTP URLs and either HTTP/1.1 or HTTP/2 for HTTPS URLs, depending on whether the server supports HTTP/2.
Transports are safe for concurrent use by multiple goroutines.
Transports should be reused instead of created as needed.
Traps that we cannot be recovered.
Trashes *resp.V in process of printing.
Traverse live range of each variable to set start, end.
Treat EOF as "end of line" for the purposes of inserting a semicolon.
Treat a PPARAMREF closure variable as equivalent to the original variable.
Treat all fields of a struct as referring to the whole struct.
Treat as ordinary assignment.
Treat as successful but build ID empty.
Treat as successful, with empty build id.
Treat blocks like basic blocks to avoid overlapping counters.
Treat data-action as URL below.
Treat it as EINVAL instead, so we fall back to the normal dup path.
Treat nils as zeros rather than literals.
Treat partial event handler names as script.
Treat precision as a flag.
Treat svg:href and xlink:href as href below.
Treat the pointer as unknown.
Treat this as a successful connection--writes to the socket will see EOF.
Treat this special case as void.
Treat values with their address taken as live at calls, because the garbage collector's liveness analysis in plive.go does.
Treated as JS since quotes are inserted.
Treated as a quoting character by IE.
Tree is the representation of a single parsed template.
Trees may be of different shapes, but have the same contents.
Tricky 64-bit unsigned cases.
Tricky because an empty result has two meanings: no match or empty match.
Tries to add one more P to execute G's.
Tries to steal from other P's, get g from global queue, poll network.
Trigger GC from malloc.
Trigger collection of x and y, queueing of their finalizers.
Trigger panic for method on nil interface now.
Trigger the next GC cycle when the allocated heap has grown by triggerRatio over the reachable heap size.
Trigonometric constants in 13-bit fixed point format.
Trim away incomplete copy of original pattern in high bits.
Trim extra and put it back in the heap.
Trim returns a slice of the string s with all leading and trailing Unicode code points contained in cutset removed.
Trim returns a subslice of s by slicing off all leading and trailing UTF-8-encoded Unicode code points contained in cutset.
Trim to the top n nodes.
TrimBytes returns b without leading and trailing ASCII space.
TrimFunc returns a slice of the string s with all leading and trailing Unicode code points c satisfying f(c) removed.
TrimFunc returns a subslice of s by slicing off all leading and trailing UTF-8-encoded Unicode code points c that satisfy f(c).
TrimLeft returns a slice of the string s with all leading Unicode code points contained in cutset removed.
TrimLeft returns a subslice of s by slicing off all leading UTF-8-encoded Unicode code points contained in cutset.
TrimLeftFunc returns a slice of the string s with all leading Unicode code points c satisfying f(c) removed.
TrimLeftFunc returns a subslice of s by slicing off all leading UTF-8-encoded Unicode code points c that satisfy f(c).
TrimPrefix returns s without the provided leading prefix string.
TrimRight returns a slice of the string s, with all trailing Unicode code points contained in cutset removed.
TrimRight returns a subslice of s by slicing off all trailing UTF-8-encoded Unicode code points that are contained in cutset.
TrimRightFunc returns a slice of the string s with all trailing Unicode code points c satisfying f(c) removed.
TrimRightFunc returns a subslice of s by slicing off all trailing UTF-8 encoded Unicode code points c that satisfy f(c).
TrimSpace returns a slice of the string s, with all leading and trailing white space removed, as defined by Unicode.
TrimSpace returns a subslice of s by slicing off all leading and trailing white space, as defined by Unicode.
TrimString returns s without leading and trailing ASCII space.
TrimSuffix returns s without the provided trailing suffix string.
Trims if any is unexported.
Triple dot isn't special
Trivial case: nothing to do, or branch unknown.
Trivial parser for literal string.
Troublesome floating point constants.
True arrays have size in the type.
True for 64-bit DWARF format
True if never discovered to contain a loop register allocation uses this.
True if the specified HTTP status code is one for which the Get utility should automatically redirect.
True if the specified HTTP status code is one for which the Post utility should automatically redirect.
Trunc returns the integer value of x.
Truncate changes the size of the file.
Truncate changes the size of the named file.
Truncate discards all but the first n unread bytes from the buffer but continues to use the same allocated storage.
Truncate file name at last file name separator.
Truncate number to avoid wrapping.
Truncate returns the result of rounding t down to a multiple of d (since the zero time).
Truncate to a multiple of original ptrmask.
TruncateWriter returns a Writer that writes to w but stops silently after n bytes.
Truncated is whether the max header list size limit was hit and Fields is incomplete.
Try Grisu3 algorithm.
Try MUI_Std and MUI_Dlt first, fallback to Std and Dlt if *any* error occurs
Try a reasonable date first, then the huge ones.
Try a small date first, then the large ones.
Try again with -insecure (should succeed).
Try all but the last comparison.
Try all readers with UnreadByte.
Try another fast path.
Try as a literal IP address.
Try as whole source file.
Try both: it is cheaper on average than doing a Stat plus the right one.
Try expanding symlinks and comparing expanded against unexpanded and expanded against expanded.
Try for lock, rescheduling.
Try for lock, spinning.
Try get a batch of G's from the global runnable queue.
Try get a p from _Pidle list.
Try go get -d of HTTP-only repo (should fail).
Try in fixed-size lists up to max.
Try it 10 times to avoid flakiness.
Try looking at the code to see if it's a breakpoint.
Try original file name
Try prepending "http://" to it and see if that parses correctly.
Try pure floating-point arithmetic conversion.
Try rewriting as shifts or magic multiplies.
Try to add at least npage pages of memory to the heap, returning whether it worked.
Try to avoid more allocations.
Try to connect to that address repeatedly.
Try to determine the 'hint' size.
Try to enable when we have fully precise GC.
Try to exec ourselves in a mode to detect VFP support.
Try to find GC bits somewhere else.
Try to find a match starting at index whose length is greater than prevSize.
Try to find the function name.
Try to find the tag end prefix first
Try to get a comparable environment for each run by clearing garbage from previous runs.
Try to get a stack from the large stack cache.
Try to get an m from midle list.
Try to get any other idle P.
Try to keep work available on the global queue.
Try to match the actual tag if there is still space for it
Try to move an input to the desired output.
Try to move it out of the way.
Try to open a pipe with O_CLOEXEC set on both file descriptors.
Try to order these comparison by cost (cheaper first)
Try to preempt execution so it can scan itself.
Try to re-acquire the last P.
Try to read 2 bytes from x.
Try to resolve the key but don't collect it as unresolved identifier if it fails so that we don't get (possibly false) errors about undeclared names.
Try to resume a previously negotiated TLS session, if available.
Try to see if we have debugging permissions.
Try to set mutexWoken flag to inform Unlock to not wake other blocked goroutines.
Try to steal from _p_.runnext.
Try to tickle stack splitting bugs by doing go, defer, and closure calls at different stack depths.
Try unsuffixed, if not tried first above.
Try up to 10 times for a match before giving up.
Try updating without -insecure (should fail).
Try using importpkg here and then update the symbols if we find an inlined body only.
Try using paths we received.
Try visualizers until one is successful
TryRecv attempts to receive a value from the channel v but will not block.
TrySend attempts to send x on the channel v but will not block.
Trying printing a meaningful message, otherwise a stack trace of typechecking.
Trying to read unreadable message
Trying to repro golang.org/issue/3514
Trying to validate an IP
Tukey's ``Ninther,'' median of three medians of three.
Turn T(v).Field into v.Field
Turn an OINLCALL into a single valued expression.
Turn an OINLCALL into a statement.
Turn decimal into hex, just for consistency with enum-derived constants.
Turn empty string into "."
Turn functions into machine code images.
Turn on for constant arithmetic debugging output.
Turn parameter list into slice of types (in the ast, types are Exprs).
Turn relative (PC) into absolute (PC) automatically, so that most branch instructions don't need comments giving the absolute form.
Turn the eventual fault into a panic, not a program crash, so that memcopy can recover.
Turns out to be a relatively common case.
Turns out we won't be needing them.
Twain is Mark Twain's classic English novel.
Two anonymous fields are considered to have the same name.
Two array types are identical if they have identical element types and the same array length.
Two blocks of zero bytes marks the end of the archive.
Two calls to Import with the same path return the same package.
Two calls to ImportFrom with the same path and srcDir return the same package.
Two cases, depending on internal at start of string or not.
Two cases: The template exists but is empty, or has never been mentioned at all.
Two channel types are identical if they have identical value types and the same direction.
Two complications here: 1.
Two conditions must happen listed below to accept ind as an induction variable.
Two consecutive extensions.
Two different parses: once with comments, once without.
Two distinct -v flags.
Two flushes, to verify the error is sticky.
Two interface types are identical if they have the same set of methods with the same names and identical function types.
Two keys are potential matches.
Two map types are identical if they have identical key and value types.
Two named types are identical if their type names originate in the same type declaration.
Two non-trivial aspects: 1.
Two or fewer fields: use plain field equality.
Two pointer types are identical if they have identical base types.
Two polynomial approximating functions are employed.
Two relocation entries: MACHO_ARM64_RELOC_PAGEOFF12 MACHO_ARM64_RELOC_PAGE21 if r.Xadd is non-zero, add two MACHO_ARM64_RELOC_ADDEND.
Two sets of interfaces are included in this package.
Two slice types are identical if they have identical element types.
Two struct types are identical if they have the same sequence of fields, and if corresponding fields have the same names, and identical types, and identical tags.
Two subsequent requests and verify their response is the same.
Two times can be equal even if they are in different locations.
Two tuples types are identical if they have the same number of elements and corresponding elements have identical types.
Two values interfere if one is defined while the other is live.
Two values of identical type are deeply equal if one of the following cases applies.
Two-bit encoding (for example.
Two-byte overshoot can happen when expecting to read a 0xff 0x00 byte-stuffed byte.
Tx is an in-progress database transaction.
Type      Correct string     Actual string
Type -u with unexported fields.
Type and binding information.
Type assertions and slice indexing.
Type can be compared/hashed as regular memory.
Type check the body now, but only if we're inside a function.
Type check the package.
Type conversions for Scan.
Type defined in a different package.
Type definition for (-id) follows.
Type describes the Fields and Methods of a type.
Type inference computes the type (Type) of every expression (ast.Expr) and checks for compliance with the language specification.
Type is found in Header.Type.
Type is the documentation for a type declaration.
Type is the representation of a Go type.
Type is the type of string that was expected, such as "IP address", "CIDR address".
Type list is known to be 0 or 1 element - it's a C function.
Type must be a pointer, channel, func, interface, map, or slice type Type is here for the purposes of documentation only.
Type needs special comparison/hashing functions.
Type of relocation used for PLT.
Type of variable changes for each case in type switch, but go/parser generates just one variable.
Type reads the type at off in the DWARF ``info'' section.
Type returns a *Type with the same memory layout as dtype when used as the type of a variable or a struct field.
Type returns a socket type.
Type returns itself and provides an easy default implementation for embedding in a Node.
Type returns the type of x.f, which may be different from the type of f.
Type returns v's type.
Type with Error method.
Type with String method.
Type(Left) (Type is string, Left is rune)
Type(Left) (type conversion)
Type(Left) (type conversion, no effect)
Type(Left) (type conversion, to interface)
Type-check a package consisting of these files.
Type-check a package consisting of this file.
Type-check package files.
Type-check the package.
Type-checking consists of several interdependent phases:
Type.ArrayType.elem and Type.SliceType.Elem
Type.FuncType.dotdotdot
Type.FuncType.inCount
Type.MapType.key, elem
Type.StructType.fields.Slice::length
Type.commonType.ptrdata
Type.commonType.tflag
Type.gc points to GC program
Type1 is here for the purposes of documentation only.
TypeAndValue reports the type and value (for constants) of the corresponding expression.
TypeByExtension returns the MIME type associated with the file extension ext.
TypeByName is the only place where the strings are resolved.
TypeConfig describes the universe of relevant types.
TypeName returns the type name for the named type t.
TypeOf returns the reflection Type that represents the dynamic type of i.
TypeOf returns the type of expression e, or nil if not found.
TypeString returns the string representation of typ.
Typecheck because inlvar is not necessarily a function parameter.
Typecheck1 is the recursive form of typecheck.
Typechecking order is important here: 0.
Typed Strings By default, this package assumes that all pipelines produce a plain text string.
Typed constant, exported for unexported type.
Typed constants must be representable in their type after each constant operation.
Types HTML, JS, URL, and others from content.go can carry safe content that is exempted from escaping.
Types STYPE-SFUNCTAB above are written to the .rodata section by default.
Types already visited at an earlier level.
Types and Values The source and destination values/types need not correspond exactly.
Types implementing Valuer interface are able to convert themselves to a driver Value.
Types maps expressions to their types, and for constant expressions, their values.
Types not supported at top level by the Encoder.
Types of signals The signals SIGKILL and SIGSTOP may not be caught by a program, and therefore cannot be affected by this package.
Types stores pointers to predeclared named types.
Types that implement the GobEncoder/Decoder interfaces.
Types to help sort the keys in a map for reproducible output.
Types to represent untyped numeric constants.
Types to represent untyped string and boolean constants.
Typical apps have the zoneinfo.zip in the root of their app bundle, read by the time package as the working directory at initialization.
Typical tables will be somewhat less loaded.
Typical uses of the flow graph are to iterate over all the flow-relevant instructions:
Typically a DER encoded ASN.1 structure.
Typically a caller sets gp's status away from Grunning and then immediately calls dropg to finish the job.
Typically a non-fixed seed should be used, such as time.Now().UnixNano().
Typically the suffix suffices, but there are exceptions.
Typically this indicates an incorrect use of unsafe or cgo to store a bad pointer in the Go heap.
Typically this is ptrSize.
Typically this means the calls to Add should execute before the statement creating the goroutine or other event to be waited for.
Typically this will be from an "auto increment" column when inserting a new row.
Typically, the Location represents the collection of time offsets in use in a geographical area, such as CEST and CET for central Europe.
Typically, this code copies heap-allocated PPARAMOUT variables back to the stack.
Typically, this means flushing the file system's in-memory copy of recently written data to disk.
Typically: pc is the PC of the running function.
U is a structure with a blank field
U+0000 encoded in two bytes: incorrect
U+1D4D0 to U+1D4D4: MATHEMATICAL BOLD SCRIPT CAPITAL LETTERS
U+2028 and U+2029 should be escaped inside strings.
U+2028 is LINE SEPARATOR.
U+2029 is PARAGRAPH SEPARATOR.
U+D800 high surrogate (sic)
U+DFFF low surrogate (sic)
U1.M should appear as method of U1.
U2.M should appear as method of U2 and as method of U3 only if AllMethods is set.
U3.N should appear as method of U3 and as method of U2 only if AllMethods is set.
U4.M should appear as method of U4.
UDP round-tripper algorithm should ignore invalid DNS responses (issue 13281).
UDPAddr represents the address of a UDP end point.
UDPConn is the implementation of the Conn and PacketConn interfaces for UDP network connections.
UID/GID 99 is the user/group "nobody" on RHEL/Fedora and is unused on Ubuntu
ULEB128 register, BLOCK
ULEB128 register, SLEB128 offset
ULEB128 register, ULEB128 offset
ULEB128 register, ULEB128 register
URL encapsulates a known safe URL or URL substring (see RFC 3986).
URL escaped, then quoted for JS.
URL query parameters are ignored.
URL specifies either the URI being requested (for server requests) or the URL to access (for client requests).
URLEncoding is the alternate base64 encoding defined in RFC 4648.
URLQueryEscaper returns the escaped value of the textual representation of its arguments in a form suitable for embedding in a URL query.
URLs that do not start with a slash after the scheme are interpreted as:
USmall is like U but the frontend will inline comparison instead of calling the generated eq function.
UTC represents Universal Coordinated Time (UTC).
UTC returns t with the location set to UTC.
UTCTime only encodes times prior to 2050.
UTF16FromString returns the UTF-16 encoding of the UTF-8 string s, with a terminating NUL added.
UTF16PtrFromString returns pointer to the UTF-16 encoding of the UTF-8 string s, with a terminating NUL added.
UTF16ToString returns the UTF-8 encoding of the UTF-16 sequence s, with a terminating NUL removed.
UTF8String parseUTF8String parses a ASN.1 UTF8String (raw UTF-8) from the given byte array and returns it.
Ubuntu Trusty w/ avahi-daemon, libavahi-* etc installed.
Ugaritic is the set of Unicode characters in script Ugaritic.
Ugly failure of vision: already type-checked body.
Ugly, but dealing with an edge case: a known pointer to an invalid type, probably something from a failed import.
Ugly: ask for SIGHUP so that child will not have no-hup set even if test is running under nohup environment.
Uint defines a uint flag with specified name, default value, and usage string.
Uint returns v's underlying value, as a uint64.
Uint32 returns a pseudo-random 32-bit value as a uint32 from the default Source.
Uint32 returns a pseudo-random 32-bit value as a uint32.
Uint64 defines a uint64 flag with specified name, default value, and usage string.
Uint64 returns a value drawn from the Zipf distribution described by the Zipf object.
Uint64 returns the uint64 representation of x.
Uint64 returns the unsigned integer resulting from truncating x towards zero.
Uint64Var defines a uint64 flag with specified name, default value, and usage string.
UintVar defines a uint flag with specified name, default value, and usage string.
Ullman, "Analysis of a Simple Algorithm for Global Data Flow Problems", Conf.
Ultimately the goal is to print the output.
Unaligned 64-bit atomics on 32-bit systems are a continual source of pain.
Unanchored search, starting from each possible text position.
Unary "*" expressions are represented via StarExpr nodes.
UnaryOp returns the result of the unary expression op y.
Unauthenticated request.
Unblock blocked readers, if any.
Unblock helper goroutines and wait them to finish.
Unblock the transport's roundTrip goroutine.
Unchunked HTTP/1.1 204 response without Content-Length.
Unchunked HTTP/1.1 response without Content-Length or Connection headers.
Unchunked response with Content-Length.
Unchunked response without Content-Length, Request is nil
Unchunked response without Content-Length.
Uncomment if you are trying to improve the number of compares/swaps.
Uncomment these two lines to also understand GIF and PNG images: _ "image/gif" _ "image/png"
Uncomment this for help tracking down the location of an incorrect marker when running in debugFormat.
Uncompressed reports whether the response was sent compressed but was decompressed by the http package.
Uncompressed size (section 2.3.1)
Unconnected blocks will not be affected.
Undefined, missing, irrelevant.
Under heavy read contention, this is significantly faster than a map protected by a mutex.
Under race detector the Pool degenerates into no-op.
Underflow is always OK.
Underlying returns the underlying type of a type.
Underlying system call writes to newoffset via pointer.
Understanding C Cgo scans the Go source files that import "C" for uses of that package, such as C.puts.
Undo creation of UNC path.
Undo the interlacing if necessary.
Undocumented, not in standard flag parser to avoid exposing in usage message.
Unexported constants counting from blank iota.
Unexported struct fields are never printed.
Unexported type with -u.
Unfortunately (and necessarily) morestack is called before the function that calls it sets up its frame and so the PLT ends up smashing the saved TOC pointer for its caller's caller.
Unfortunately for us, we need to do our own flag processing because go test grabs some flags but otherwise its command line is just a holding place for pkg.test's arguments.
Unfortunately the cost of ensuring that the object holding the slot doesn't concurrently change to black without the mutator noticing seems prohibitive.
Unfortunately the format used means that we have to parse all of the file-level attributes to find the one we are looking for.
Unfortunately, a simultaneous call to adb shell hold open file descriptors, so it is necessary to push then move to avoid a "text file busy" error on execution.
Unfortunately, occasionally the signal is delivered to a Go thread, which winds up discarding it because it was sent by another program and there is no Go handler for it.
Unfortunately, there are a variety of ways in which the mtime approach fails to detect a change and reuses a stale object file incorrectly.
Unfortunately, we don't know what to put in the host name section to get the client to connect to us again, so we can't know the right absolute URI to send back.
Unfortunately, we need to run on kernels built without IPv6 support too.
Ungrouped imports are sorted by default.
Unhandled standard opcode.
UnhandledCriticalExtensions contains a list of extension IDs that were not (fully) processed when parsing.
Unicode case folding.
Unicode replacement character
Unified_Ideograph is the set of Unicode characters with property Unified_Ideograph.
Uniform distribution  algorithm by DP Mitchell and JA Reeds
Uniform is an infinite-sized Image of uniform color.
Uniformize exponents.
Unify presentation by going to lower case.
Unimplemented TODO(jsing): Update this list for DragonFly.
Unimplemented Unix midden heap.
Unimplemented functions.
Unimplemented reports that the function cannot be compiled.
Uninitialized common block.
Union returns the smallest rectangle that contains both r and s.
Unique identifier (PC).
Unit for the sample data from the profile.
Units for data formatting in report.
Unix character device
Unix doesn't like it when we write to a running (or, sometimes, recently run) binary, so remove the output file before writing it.
Unix doesn't make this easy: there is, in general, no way to allocate a new file descriptor close-on-exec.
Unix returns t as a Unix time, the number of seconds elapsed since January 1, 1970 UTC.
Unix returns the local Time corresponding to the given Unix time, sec seconds and nsec nanoseconds since January 1, 1970 UTC.
Unix shell semantics: path element "" means "."
Unix time starts Dec 31 1969 in some time zones
UnixAddr represents the address of a Unix domain socket end point.
UnixConn is an implementation of the Conn interface for connections to Unix domain sockets.
UnixCredentials encodes credentials into a socket control message for sending to another process.
UnixListener is a Unix domain socket listener.
UnixListener.Close calls syscall.Unlink internally
UnixNano returns t as a Unix time, the number of nanoseconds elapsed since January 1, 1970 UTC.
UnixRights encodes a set of open file descriptors into a socket control message for sending to another process.
Unkeyed composite literals Flag: -composites Composite struct literals that do not use the field-keyed syntax.
UnkeyedLiteral is a white list of types in the standard packages that are used with unkeyed literals we deem to be acceptable.
Unknown extensions are recorded if critical.
Unknown key types result in an error.
Unknown sparse formats are ignored, causing the file to be treated as a regular file.
UnknownAuthorityError results when the certificate issuer is unknown
UnknownFileError represents a failure to find the specific file in the symbol table.
UnknownGroupError is returned by LookupGroup when a group cannot be found.
UnknownGroupIdError is returned by LookupGroupId when a group cannot be found.
UnknownLineError represents a failure to map a line to a program counter, either because the line is beyond the bounds of the file or because there is no code on the given line.
UnknownUserError is returned by Lookup when a user cannot be found.
UnknownUserIdError is returned by LookupId when a user cannot be found.
Unless an explicit codec is set up, package encoding/gob is used to transport the data.
Unless explicitly stated as such (or *Plain), all of the tests below are two-way tests.
Unless found inside an HTML tag or inside an escaped text segment, formfeed characters appear as newlines in the output.
Unless fracOk is set, the base argument must be 0 or a value between 2 and MaxBase.
Unless it's an interface, need to get to a value of type *T to guarantee we see all methods of T and *T.
Unless otherwise noted, these are defined in RFC 7231 section 4.3.
Unless specified otherwise, operations permit aliasing of parameters, so it is perfectly ok to write sum.Add(sum, x) to accumulate values x in a sum.
Unless the 'l' flag was specified, if the type has a name, just print that name.
Unless the first element is a UNC path, Join shouldn't create a UNC path.
Unless the result is empty, it is newline-terminated.
Unless the typedef happens to point to void* since Go has special rules around using unsafe.Pointer.
Unless there was an error, now all parameter entries have a type.
Unless ut represents a GobEncoder, rt should be the base type of ut.
Unless vendoring support is disabled (see 'go help gopath'), when go get checks out or updates a Git repository, it also updates any git submodules referenced by the repository.
Unlike ClassExprLoc/ClassBlock, some DWARF 4 attributes need to distinguish Class*Ptr from ClassConstant, so we only do this promotion for versions 2 and 3.
Unlike IPv6, IPv4 multicast capability is not a mandatory feature, and so this test is disabled.
Unlike MPFR, the rounding mode is not specified with each operation, but with each operand.
Unlike NewFile, it does not check that h is syscall.InvalidHandle.
Unlike VERSION, it gets deleted by the clean command.
Unlike a Buffer, a Reader is read-only and supports seeking.
Unlike buf, we own this data.
Unlike build constraints, this comment is only recognized in non-test Go source files.
Unlike gcDrain, there's no need to flush remaining work here because this never flushes to bgScanCredit and gcw.dispose will flush any remaining work to scanWork.
Unlike in C, it is not valid to advance a pointer just beyond the end of its original allocation:
Unlike in Go identifiers, all digits are fine (e.g., "386").
Unlike in other systems, Wait cannot return unless awoken by Broadcast or Signal.
Unlike in tests, benchmark logs are always printed, so as not to hide output whose existence may be affecting benchmark results.
Unlike in the http.Header map, the keys in a Values map are case-sensitive.
Unlike new, make's return type is the same as the type of its argument, not a pointer to it.
Unlike octal encoding, base-256 encoding does not require that the string ends with a NUL character.
Unlike previous, the cases in this select fall through, so we can get to the println, so p is not dead.
Unlike runtime.Callers, the PC values returned should, when passed to the symbolizer function, return the file/line of the call instruction.
Unlike strings.Split, SplitList returns an empty slice when passed an empty string.
Unlike text/template, html/template crashed if given an incomplete template, that is, a template that had been named but not given any content.
Unlike the drawCopyOver function, we don't have to check the x coordinates because the built-in copy function can handle overlapping slices.
Unlike the http2 spec, zero here means to use a default limit (currently 10MB).
Unlike the other getters, it does not panic if v's Kind is not String.
Unlike the other tests that set the log output to ioutil.Discard to quiet the output, this test uses a pipe.
Unlike the pthread keys we already use on OS X, this dummy key would never be read by Go code.
Unlike with tests, we ignore the -chatty flag and always print output for benchmarks since the output generation time will skew the results.
Unlimited repetitions are not subject to this restriction.
Unlock unlocks rw for writing.
Unmap the memory and update m.
Unmark it, so that it will show up in disassembly, so that the reader can tell the size of memory operand.
Unmarshal a single XML element into val.
Unmarshal converts a point, serialized by Marshal, into an x, y pair.
Unmarshal into array containing struct for now.
Unmarshal maps an XML element or attribute value to a bool by setting it to the boolean value represented by the string.
Unmarshal maps an XML element or attribute value to an integer or floating-point field by setting the field to the result of interpreting the string value in decimal.
Unmarshal maps an XML element to a pointer by setting the pointer to a freshly allocated value and then mapping the element to that value.
Unmarshal maps an XML element to a slice by extending the length of the slice and mapping the element to the newly created value.
Unmarshal maps an XML element to a struct using the following rules.
Unmarshal maps an XML element to an xml.Name by recording the element name.
Unmarshal must reject invalid comments.
Unmarshal parses the DER-encoded ASN.1 data structure b and uses the reflect package to fill in an arbitrary value pointed at by val.
Unmarshal parses the JSON-encoded data and stores the result in the value pointed to by v.
Unmarshal parses the XML-encoded data and stores the result in the value pointed to by v, which must be an arbitrary struct, slice, or string.
Unmarshal then stores key- value pairs from the JSON object into the map.
Unmarshal uses a case-sensitive comparison to match XML element names to tag values and struct field names.
Unmarshal uses the inverse of the encodings that Marshal uses, allocating maps, slices, and pointers as necessary, with the following additional rules:
Unmarshal will only set exported fields of the struct.
UnmarshalBinary implements the encoding.BinaryUnmarshaler interface.
UnmarshalBinary modifies the receiver so it must take a pointer receiver.
UnmarshalBinary must be able to decode the form generated by MarshalBinary.
UnmarshalBinary must copy the data if it wishes to retain the data after returning.
UnmarshalDir decodes a single 9P stat message from b and returns the resulting Dir.
UnmarshalJSON implements the json.Unmarshaler interface.
UnmarshalJSON must copy the JSON data if it wishes to retain the data after returning.
UnmarshalJSON sets *m to a copy of data.
UnmarshalText implements the encoding.TextUnmarshaler interface.
UnmarshalText interface test
UnmarshalText must be able to decode the form generated by MarshalText.
UnmarshalText must copy the text if it wishes to retain the text after returning.
UnmarshalWithParams allows field parameters to be specified for the top-level element.
UnmarshalXML decodes a single XML element beginning with the given start element.
UnmarshalXML may not use d.RawToken.
UnmarshalXML must consume exactly one XML element.
UnmarshalXMLAttr decodes a single XML attribute.
UnmarshalXMLAttr is used only for struct fields with the "attr" option in the field tag.
Unmarshaler is the interface implemented by objects that can unmarshal an XML element description of themselves.
Unmarshaler is the interface implemented by types that can unmarshal a JSON description of themselves.
UnmarshalerAttr is the interface implemented by objects that can unmarshal an XML attribute description of themselves.
Unminit unregisters the signal handling stack (but needs g on some systems).
Unnamed types simply encode their respective fields.
Unoptimal case is where the underlying reader doesn't implement io.WriterTo
Unordered output: 1 2 0
Unpack 4 bytes into uint32 to repack into base 85 5-byte.
Unpack 8x 5-bit source blocks into a 5 byte destination quantum
Unpack a domain name.
Unpack multiple-return result before type-checking.
Unpacking should succeed, but we should just get the header.
Unpadded data may end with partial block of 2-3 characters.
Unpark an additional thread whenever we ready a goroutine and there is an idle P, but don't do handoff.
Unquote and UnquoteChar unquote Go string and rune literals.
Unquote interprets s as a single-quoted, double-quoted, or backquoted Go string literal, returning the string value that s quotes.
UnquoteChar decodes the first character or byte in the escaped string or character literal represented by the string s.
UnquoteUsage extracts a back-quoted name from the usage string for a flag and returns it and the un-quoted usage.
Unquoted URLs end with a newline or close parenthesis.
Unreachable blocks map to nil.
Unreachable blocks will not appear.
Unreachable code Flag: -unreachable Unreachable code.
Unreachable control flow nodes are indicated by a -1 in the rpo field.
Unreachable, but prove doesn't know that.
Unread a single byte.
Unread one byte if there is one.
Unread the overshot bytes, if any.
UnreadByte causes the next call to ReadByte to return the same byte as the previous call to ReadByte.
UnreadByte unreads the last byte returned by the most recent read operation.
UnreadByte unreads the last byte.
UnreadRune causes the next call to ReadRune to return the same rune as the previous call to ReadRune.
UnreadRune causes the next call to ReadRune to return the same rune.
UnreadRune unreads the last rune returned by ReadRune.
UnreadRune unreads the last rune.
Unregister from config.
Unreserved according to RFC 3986 sec 2.3
Unresolved forward jumps inside the nested block become forward jumps in the current block.
Unrolled loop for significant performance gain.
Unsafe.Pointer is a basic type that includes nil.
UnsafeAddr returns a pointer to v's data.
Unsample values if period and cpuHz are available.
Unset endpoints (offset -2) are denoted by X.
Unsetenv unsets a single environment variable.
Unsigned int is just a varint.
Unsigned integers have a two-state encoding.
Unsigned: move result into correct register.
Until the calling goroutine exits or calls UnlockOSThread, it will always execute in that thread, and no other goroutine can.
Until the child has called exec, it holds the fd open and the kernel will not let us run cgo.
Until the copy completes, we can only call nosplit routines.
Until the server code is modified to always be in a read (Issue 15224), this test doesn't work yet.
Untyped (ideal) constants get their own type.
Untyped constant expression values that become fully typed must now be representable by the full type (constant sub-expression trees are left alone except for their roots).
Untyped expressions may eventually become fully typed (i.e., not untyped), typically when the value is assigned to a variable, or is used otherwise.
UntypedNils are final
Unused "blank imports" are automatically ignored since _ identifiers are not entered into scopes.
Unused autos are at the end, chop 'em off.
Unused now but kept around for future use.
Unused portions are junk.
Unused portions of AuxInt are filled by sign-extending the used portion.
Unused result of certain function calls Flag: -unusedresult Calls to well-known functions and methods that return a value that is discarded.
Unused slots are filled with noRegister.
Unwind our local defer stack past this frame.
Unwind the stack after a deferred function calls recover after a panic.
Unwind to next frame.
Up to 100ms per test.
Up to now we extracted the induction variable (ind), the increment delta (inc), the temporary sum (nxt), the mininum value (min) and the maximum value (max).
Update MemProfileRate directly here since it is int, not int32, and should only be updated if specified in GODEBUG.
Update all the copies we saw to point directly to w.
Update any desired registers at the end of p.
Update block control values.
Update branch prediction
Update desired registers if there are any fixed register inputs.
Update entry 0 in place.
Update existing entry, except make copy to avoid changing earlier history.
Update hdr from GNU sparse PAX headers
Update lim with the new information we know.
Update node references to use merged temporaries.
Update nodes waiting on this type.
Update only indirect uses of v in p.To
Update operand types to the default type rather then the target (interface) type: values must have concrete dynamic types.
Update other GC heap size stats.
Update output flags based on parameters.
Update p.deps and p.imports to use at test copies.
Update parent offset to account for the virtual line number range taken by the included file.
Update pointer to head of list in G.
Update profile with demangled names.
Update register masks.
Update replaces an old node in the comment map with the new node and returns the new node.
Update res with base, len+argc, cap.
Update returns the result of adding the bytes in p to the crc.
Update stats so we can dump them.
Update string and hash
Update symbol data directly instead of generating a DATA instruction that liblink will have to interpret later.
Update syscallsp, syscallpc in case traceback uses them.
Update the C environment if cgo is loaded.
Update the buffer state before checking for errors.
Update the cell width.
Update the current file reader.
Update the data cache.
Update the expression trees.
Update the factsTable accordingly.
Update the name if this is the entry following that empty one.
Update the next notify ticket number, and try to find the G that needs to be notified.
Update the next ticket to be notified.
Update the path fields
Update the reachable heap stat.
Update the relocation to use the call stub
Update the state of the next field (b) from the current field (a).
Update the table entry
Update the time/duration if the profile source doesn't include it.
Update this Huffman Code object to be the minimum code for the specified frequency count.
Update timing memstats
Update type of OCALLFUNC node.
Update use counts of arguments.
Update variable assignment.
Update window information.
Update with -insecure should succeed.
Update without -insecure should fail.
Update work.totaltime.
Updates may be batched arbitrarily, since the value is only read at the end of the cycle.
Updates occur in bounded batches, since it is both written and read throughout the cycle.
Updates the association with a new set of interested events.
Upfront pass to update the parent chains, to prevent the merging of nodes with different parents.
Upon entry this go routine owns b.
Upon return, the remainder of dec.buf is the value to be decoded.
Upon returning, rawExpr is recording the types and constant values for all expressions that have an untyped type (those types may change on the way up in the expression tree).
Upper bytes are junk.
Upper case symbol cannot be a package name.
Upper comes before lower (Cherokee).
Upper is the set of Unicode upper case letters.
Upper limit of 1GB, allowing room to grow a little without overflow.
Upper portions are junk.
Usable representation of a DNS packet.
Usable with pointers, channels, arrays, and slices.
Usage information when no arguments.
Usage is a replacement usage function for the flags package.
Usage is the function called when an error occurs while parsing flags.
Usage pattern: defer un(trace(p, "..."))
Usage prints to standard error a usage message documenting all defined command-line flags.
Usage: Define flags using flag.String(), Bool(), Int(), etc.
Usage: go test math/big -test.bench GCD
Usage: go tool addr2line binary
Usage: go tool yacc args...
UsageLine is the one-line usage message.
Use "fail" to expect failure
Use "vendor/path" without any prefix.
Use //line to set the line number of the next line to 20.
Use 1 as the initial estimate.
Use 1GB instead of, say, 2GB-1, to keep subsequent reads aligned.
Use Certificate.CheckCRLSignature to verify the signature.
Use Config.Check to invoke the type checker for a package.
Use ExactString for a string representing a value exactly.
Use ExpandString to expand EXPAND_SZ strings.
Use FindStringIndex or FindStringSubmatch if it is necessary to distinguish these cases.
Use Fprintf to make sure we count arguments correctly.
Use LazyDLL in golang.org/x/sys/windows for a secure way to load system DLLs.
Use NewEncoder() instead.
Use Next to advance through the rows:
Use O_CLOEXEC if available (Linux).
Use PhysicalDnsHostname to uniquely identify host in a cluster
Use RCDATA instead of parsing into JS or CSS styles.
Use RSA OAEP in new protocols.
Use ReadBits to retrieve a single bit from the underling io.ByteReader.
Use ReadFrom to read in some data.
Use ReadSlice to look for array, accumulating full buffers.
Use Run to catch failure.
Use SetsockoptLinger instead.
Use TempDir (via newDir) to make sure we're on a local file system, so that timings are not distorted by latency and caching.
Use TempDir (via newFile) to make sure we're on a local file system, so that timings are not distorted by latency and caching.
Use TempDir() to make sure we're on a local file system, so that the group ids returned by Getgroups will be allowed on the file.
Use Windows's own verification and chain building.
Use __gcc_struct__ to work around http://gcc.gnu.org/PR52991 on x86, and https://golang.org/issue/5603.
Use a 200ms explicit timeout.
Use a Scanner to implement a simple word-count utility by scanning the input as a sequence of space-delimited tokens.
Use a Scanner with a custom split function (built by wrapping ScanWords) to validate 32-bit decimal input.
Use a Scanner with a custom split function to parse a comma-separated list with an empty final value.
Use a Transport with a custom dialer that returns a fake net.Conn that waits for the full input (and recording it), and then responds with a dummy response.
Use a closure here to remember state.
Use a couple of variables to trigger shadowing errors.
Use a file lock to make sure only one wrapper is running at a time.
Use a format string to only list packages and commands that have tests.
Use a formfeed to terminate the current section.
Use a function call to force generating code.
Use a goroutine to receive values from 'out' and store them in an expanding buffer, so that sending to 'out' never blocks.
Use a local color table.
Use a new goroutine so that we get a small stack.
Use a string range loop to validate the sequence of runes.
Use a very brief delay, which should fallback immediately.
Use a very small prime sized buffer.
Use acquireSudog and releaseSudog to allocate and free them.
Use address 1 (a misaligned pointer) to get -EINVAL.
Use any template derived during an earlier call to escapeTemplate with different top level templates, or clone if necessary.
Use c1 as the error context if neither assumption worked.
Use clang on OS X, because gcc is deprecated there.
Use compile-time constants for common cases.
Use constants for the division and modulo for more efficient code.
Use context Values only for request-scoped data that transits processes and APIs, not for passing optional parameters to functions.
Use context values only for request-scoped data that transits processes and API boundaries, not for passing optional parameters to functions.
Use different delimiters to test Set.Delims.
Use enough stack to get stack barriers, but not so much that we go over _FixedStack.
Use entries from /etc/hosts if they match.
Use exact fmt formatting if in float64 range (common case): proceed if f doesn't underflow to 0 or overflow to inf.
Use existing signal stack.
Use exported name instead.
Use fake context, traceback, and symbolizer functions.
Use float64 because (trace.ticksEnd - trace.ticksStart) * 1e9 can overflow int64.
Use floating point to avoid integer overflows.
Use global variables so the compiler doesn't know that they are constants.
Use go test -update to create/update the respective golden files.
Use go/importer to obtain an ImporterFrom implementation.
Use hash to distinguish them.
Use indentList heuristic to make corner cases look better (issue 1207).
Use integer overflow resistant math to check this.
Use io.Copy from a bytes.Buffer to trigger ReadFrom.
Use iterator to pop an element.
Use large string keys to avoid small-allocation coalescing, which can cause AllocsPerRun to report lower counts than it should.
Use last element of import path, not package name.
Use last value if none is requested.
Use leftover decoded output from last read.
Use length of strings for that.
Use likely direction if we have it.
Use local copies of original parameters, so that a stack trace due to one of the throws below shows the original block base and extent.
Use logd if /dev/socket/logdw is available.
Use matchPackagesInFS to avoid printing warnings.
Use mean of sample_index over count
Use mime.ParseMediaType to parse such headers.
Use nat_test.go's BenchmarkLeafSize tests to optimize leafSize for specific hardware.
Use netdir/cs instead of netdir/dns because cs knows about host names in local network (e.g. from /lib/ndb/local)
Use new file with sorted imports.
Use nn here to avoid passing r to typecheck.
Use non linear growth to emphasize the size difference.
Use of C.enum_x, C.struct_x or C.union_x without C definition.
Use of PREFETCHNTA might be more appropriate than PREFETCH
Use of a nil interface or nil slice.
Use of new package name.
Use of single named return value.
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file Issue 2529
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file Issue 2529.
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file Test that a select statement proceeds when a value is ready.
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file Test that structures pack densely, according to the alignment of the largest field.
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.`)
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.h
Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.h Package httptrace provides mechanisms to trace the events within HTTP client requests.
Use of xmlns without a name is not allowed.
Use packed attribute to force no padding in this struct in case gcc has different packing requirements.
Use pkg.gofiles instead of pkg.Dir so that the command only applies to this package, not to packages in subdirectories.
Use putOrCloseIdleConn instead for that.
Use q.first to disambiguate.
Use r.peek as first input byte.
Use range since we want to ignore objects added to exportlist during this phase.
Use raw strings to avoid having to quote the backslashes.
Use results from call expression as arguments for complex.
Use secure for https.
Use several sizes and types of operands.
Use slicing-by-8 on larger inputs.
Use smaller size for Android to avoid crash.
Use spaces instead of zero if padding to the right.
Use stream without newlines as input, just to stress the decoder even more.
Use sysctl to fetch hw.ncpu.
Use that in the following to prevent hysteresis effects in e.g. downloadCache and packageCache.
Use that to make it match our version of PC-relative.
Use that to make the test most likely to fail.
Use the Kind method to find out the kind of type before calling kind-specific methods.
Use the Kind method to find out the kind of value before calling kind-specific methods.
Use the MetaHeadersFrame.Pseudo accessor method access pseudo headers.
Use the Seed function to initialize the default Source if different behavior is required for each run.
Use the actual Transport code to record what we would send on the wire, but not using TCP.
Use the actual source file extent rather than *ast.File extent since the latter doesn't include comments which appear at the start or end of the file.
Use the beginning of the md5 of the input to disambiguate.
Use the castogscanstatus and casfrom_Gscanstatus instead.
Use the comment map to filter comments that don't belong anymore (the comments associated with the variable declaration), and create the new comments list.
Use the correct obj if the ident is redeclared.
Use the correct struct, a win32finddata1, and then copy the results out.
Use the dedicated WriteConsole call to ensure unicode is printed correctly.
Use the defaultUserAgent unless the Header contains one, which may be blank to not send the header.
Use the empty string if it's not present.
Use the form `ERROR HERE "rx"` for error messages that are located immediately after rather than at a token's position.
Use the functions in one.go so that the inlined forms get type-checked.
Use the functions in pkg2.go so that the inlined forms get type-checked.
Use the functions instead.
Use the global color table.
Use the keys of Table.Files to obtain a list of source files.
Use the known semi-weak key pairs to test DES implementation
Use the known weak keys to test DES implementation
Use the name of the type.
Use the original Header to populate all remaining fields.
Use the registers determined by the primary predecessor if we can.
Use the same importer for all std lib tests to avoid repeated importing of the same packages.
Use the stack variable at that index for v.
Use the typedef name for C code.
Use the value of bit to decide whether is a left or a right value.
Use this function instead of ParseMultipartForm to process the request body as a stream.
Use those packages rather than this one if you can.
Use three readers so that no matter what order they're scheduled in, two will be on the same side of the write lock above.
Use time.Stamp instead of time.RFC3339.
Use unresolved identifiers to determine the imports used by this example.
Use vectorized function if vector facility is available and data length is above threshold.
Use wrapper to hide existing r.ReadFrom from io.Copy.
UseRelro returns whether to make use of "read only relocations" aka relro.
Used by ../internal/ld/dwarf.go
Used by IOCP interface, it must be first field of the struct, as our code rely on it.
Used by androidtest.bash.
Used by getcallerpc, so it must be nosplit.
Used by go build when building a cgo package.
Used by range iterations.
Used by setcallerpc, so it must be nosplit.
Used by the C library build mode.
Used by the app package to start all-Go Android apps that are loaded via JNI.
Used by the linker to determine what methods can be pruned.
Used desired register if available.
Used during ssa construction.
Used for Values whose values don't matter because they are dead code.
Used for deduplicating the symbol reference list.
Used for every benchmark for measuring memory.
Used for non-Go frames.
Used for some of the concurrent tests.
Used for synchronization after an error.
Used for the data block.
Used for verbose flag -v.
Used in NewTicker, dropping sends on the floor is the desired behavior when the reader gets behind, because the sends are periodic.
Used in NewTimer, it cannot block anyway (buffer).
Used in only one instruction, which had better be a write.
Used in the key schedule to produce each subkey by selecting 48 bits from the 56-bit input
Used in the key schedule to select 56 bits from a 64-bit input.
Used on Windows, Plan 9, and Darwin/ARM because they do not use a separate stack.
Used only by ReadFrameHeader.
Used only by the Decoder to read the message length.
Used only during parse.
Used only for debugging the package itself.
Used only for debugging the runtime.
Used only for error detection and reporting.
Used only if cgoLookupCNAME refuses to handle the request (that is, only if cgoLookupCNAME is the stub in cgo_stub.go).
Used only if cgoLookupHost refuses to handle the request (that is, only if cgoLookupHost is the stub in cgo_stub.go).
Used only if cgoLookupPTR refuses to handle the request (that is, only if cgoLookupPTR is the stub in cgo_stub.go).
Used only if creating a calltree
Used only if debugFormat is set.
Used this way, the zip file format serves as a commonly readable container for the individual small files.
Used to avoid duplicate entries in pkg.imports.
Used to avoid string allocation when looking up dwarf symbols
Used to be a union, but unions break precise GC.
Used to be issue 8305, but time.Time implements encoding.TextUnmarshaler so this works now.
Used to be miscompiled by gccgo, due to a bug in handling initialization ordering.
Used to be rejected https://golang.org/issue/188
Used to cause "internal error: typename ideal bool" Copyright 2013 The Go Authors.
Used to cause a typechecking loop error.
Used to crash compiler in interface type equality check.
Used to crash https://golang.org/issue/204
Used to crash the compiler.
Used to crash trying to compile this line as part of init() (funcdepth mismatch).
Used to crash: negative count in recvMessage.
Used to decide on which relocation to use with a load or store and only supports the needed instructions.
Used to decide whether to suppress internals for commands.
Used to deduplicate panic calls.
Used to die in runtime due to init goroutine exiting while locked to main thread.
Used to emit a spurious "invalid recursive type" error.
Used to enforce load/store ordering.
Used to expand an input block of 32 bits, producing an output block of 48 bits.
Used to fail at link time.
Used to fail in -race mode with "non-orig name" error.
Used to fail with -race.
Used to generate an error message.
Used to generate files in the syscall package when bootstrapping a new target.
Used to hang indefinitely.
Used to happen with 6g.
Used to happen with both 6g and 8g.
Used to leak registers on 8g.
Used to not be evaluated.
Used to panic because 8g was generating incorrect code for converting a negative float to a uint64.
Used to panic because of the UnlockOSThread below.
Used to perform a final permutation of a 4-bit preoutput block.
Used to perform an initial permutation of a 64-bit input block.
Used to print many errors, now just one.
Used to reduce the size of writeBlockTests
Used to run 6g out of registers.
Used to run out of registers on 8g.
Used to test a corner case.
Used when PWD is read-only.
Used when crashing with panicking.
Useful for ASTs generated by code other than the Go parser.
Useful for creating custom benchmarks that do not use go test.
Useful for creating custom benchmarks that do not use the "go test" command.
Useful format combinations:
Useful sanity check: on entry to the function, the only things that can possibly be live are the input parameters.
Useful to find regressions.
Useful to make sure expressions are evaluated (and variables are "used") in the presence of other errors.
Useless assignments Flag: -assign Check for useless assignments.
User ID mappings for user namespaces.
User is on Windows XP or something ancient.
User names cannot have uppercase letters
User represents a user account.
User returns a Userinfo containing the provided username and no password set.
User-defined function: test argument evaluator.
User-defined self-inverse mapping function
UserAgent returns the client's User-Agent, if sent in the request.
UserPassword returns a Userinfo containing the provided username and password.
UserTime returns the user CPU time of the exited process and its children.
Username returns the username.
Users can access these extensions using Extensions and can remove elements from this slice if they believe that they have been handled.
Users can create them themselves.
Users of AuxInt which interpret AuxInt as unsigned (e.g. shifts) must be careful.
Users of bufr must hold mu.
Users of this library probably want to handle all these errors uniformly.
Users with other needs should redirect Cmd.Stderr as needed.
Users worked around this with "go build -tags netgo -a myprog.go".
Users worked around this with "go build -tags netgo -installsuffix barf myprog.go".
Users worked around this with "go install -a ./...".
Uses Ctty as fd of controlling TTY)
Uses Montgomery method for odd moduli.
Uses Montgomery representation.
Uses Pascal like conventions for pointers and addresses to avoid confusing the C like conventions used in the node variable names.
Uses interface method.
Uses maps identifiers to the objects they denote.
Uses the URL.Host as the scope of all cookies.
Using -2 suffices to pass all the tests we have written so far, which we assume matches the level of complexity we want the escape analysis code to handle.
Using //export in a file places a restriction on the preamble: since it is copied into two different C output files, it must not contain any definitions, only declarations.
Using 28-bit limbs means that there's only 4 bits of headroom, which is less than we would really like.
Using CallExpr here will catch conversions as well as function and method invocations.
Using MD5 is overkill, but reduces accidental collisions.
Using NewChunkedWriter inside a handler would result in double chunking or chunking with a Content-Length length, both of which are wrong.
Using SysFault here means that the program will run out of memory fairly quickly in efence mode, but at least it won't have mysterious crashes due to confused memory reuse.
Using a -buildmode option that requires non-default compile flags has a similar effect.
Using a fixed seed will produce the same output on every run.
Using a huge type and huge offsets so the compiler does not expect the memory hardware to fault.
Using a nil Qualifier is equivalent to using (*Package).Path: the object is qualified by the import path, e.g., "encoding/json.Marshal".
Using a pointer to this struct reduces the overall size required to describe an unnamed type with no methods.
Using a pseudo-import path like this makes the ./ imports no longer a special case, so that all the code to deal with ordinary imports works automatically.
Using a stride other than 1 is meant to visit the instructions in a pseudorandom order, which gives better variety in the set of test cases chosen by -printtests.
Using a write barrier is sufficient to make up for violating that assumption, but the write barrier has to work.
Using addWW_g is likely slower.
Using an unexported field forces flagRO.
Using at least a 16-byte key will protect against this attack.
Using cgo with the go command To use cgo write normal Go code that imports a pseudo-package "C".
Using cheapexpr also makes sure that the evaluation of all arguments (and especially any panics) happen before we begin to modify the slice in a visible way.
Using compare-and-swap to pop from the stack has ABA races, so we simulate a lock by doing an exchange (via casp) to steal the stack head and replace the top pointer with MLOCKED (1).
Using decimal instead of binary GB and MB because they look nicer in the stack overflow failure message.
Using fewer of these - in particular, using only Name - does not.
Using fixCount(call()) instead of call() corrects the count.
Using guintptr doesn't make that problem any worse.
Using name as the attribute name is not required, but doing so will enable Unmarshal to match the attribute to the correct struct field.
Using newChunkedWriter inside a handler would result in double chunking or chunking with a Content-Length length, both of which are wrong.
Using start as the element tag is not required, but doing so will enable Unmarshal to match the XML elements to the correct struct field.
Using strings makes this a little harder, but it makes a lot of the rest of the code easier.
Using t.Parallel isn't compatible with the afterTest func in non-short mode.
Using techniques from http://supertech.csail.mit.edu/papers/debruijn.pdf
Using the iterative method on both halves means 2 * (n/2)(n/2 + 1)/2 divW()'s plus the expensive long div().
Using the offset helps us pick the right one for the given time.
Using the same unexported name for a method as a method on an imported embedded type caused a gccgo compilation failure.
Using xadduintptr() is a stop-gap solution until arm supports xadd64() that doesn't use locks.
Usual case: one argument.
Usual reason is that we've merged memory from two different VirtualAlloc calls, and Windows will only let each VirtualFree handle pages from a single VirtualAlloc.
Usually (in correct programs), the lhs expression is in the untyped map.
Usually an offset into a struct.
Usually identity will be left blank to act as username.
Usually inner prefixes win for display, so that F3 F2 0F 2B 11 is REP MOVNTSD and F2 F3 0F 2B 11 is REPN MOVNTSS.
Usually that happens quickly, which is why this test has seemed to work for ages.
Usually the URL field should be used instead.
Usually the copy is cheap (e.g., array pointer, chan, slice, string are all tiny).
Usually these are constants, but the results of comparisons or non-constant shifts of untyped constants may also be untyped, but not constant.
Utility routines to set flag values.
V has padding but not on the first field.
V4.M should appear as method of V2 and V3 if AllMethods is set.
V6.M should appear as method of V1 and V5 if AllMethods is set.
VARDEF is an annotation for the liveness analysis, marking a place where a complete initialization (definition) of a variable begins.
VARKILL is the opposite of VARDEF: it marks a value as no longer needed, even if its address has been taken.
VAx variables should appear after VBx variables.
VBx variables should appear before VAx variables.
VFP MOV core reg to/from cond codes
VFP MOV core reg to/from float32
VFP MOV core reg to/from float64 half
VM reservation granularity is 64K on windows
VRI-d element rotate and insert under mask and shift left double by byte
VRI-d fp test data class immediate
VRR-c SHIFT/ROTATE/DIVIDE/SUB (rhs value on the left, like SLD, DIV etc.)
VRR-f LOAD VRS FROM GRS DISJOINT
VRS SHIFT/ROTATE and LOAD GR FROM VR ELEMENT
VRS STORE WITH LENGTH
VRS element shift/rotate and load gr to/from vr element
VRS store with length
Vai is the set of Unicode characters in script Vai.
Val has Marshaler methods with value receiver.
Val returns the Val for the node.
Val returns the value associated with attribute Attr in Entry, or nil if there is no such attribute.
Val returns the value type of map type t.
ValText has Marshaler methods with value receiver.
Valid Go 1.4 code, such as when the Disposal field is omitted in a GIF struct literal, should still produce valid GIFs.
Valid Go 1.4 or earlier code should still produce valid GIFs.
Valid after calling Scan().
Valid is true if Bool is not NULL
Valid is true if Float64 is not NULL
Valid is true if Int64 is not NULL
Valid is true if String is not NULL
Valid means that the combination of the top-level repetition and any inner repetitions does not exceed n copies of the innermost thing.
Valid program, gccgo reported an error.
Valid reports whether p consists entirely of valid UTF-8-encoded runes.
Valid reports whether the setting is valid.
Valid values are 387, sse2.
Valid when either flagIndir is set or typ.pointers() is true.
ValidRune reports whether r can be legally encoded as UTF-8.
ValidString reports whether s consists entirely of valid UTF-8-encoded runes.
Validate against the type of the actual parameter.
Validate against the type of the elements of the variadic slice.
Validate all sparse entries.
Validate and assign element name.
Validate opcode lengths.
Validate performs basic sanity checks on the key.
Validate the constants redefined from unicode.
Validate the day of the month.
Validate the flags used.
Validate the output of unsuccessful go install foo/quxx.
Validated by cmd/compile.
Valu defines a value in a block.
Value and pointer receivers.
Value implements the driver Valuer interface.
Value is a value that drivers must be able to handle.
Value is already in the correct place.
Value is dead, free all registers that hold it.
Value is direct, and so is the interface.
Value is indirect, and so is the interface we're making.
Value is indirect, but interface is direct.
Value is nil, means that "identity" encoding is used.
Value is rematerializeable, don't issue it here.
Value is the documentation for a (possibly grouped) var or const declaration.
Value is the interface to the dynamic value stored in a flag.
Value returns a driver Value.
Value returns an arbitrary value of the given type.
Value returns the value associated with this context for key, or nil if no value is associated with key.
Value to use for signal mask for newly created M's.
Value too large for defined data type
ValueConverter is the interface providing the ConvertValue method.
ValueOf returns a new Value initialized to the concrete value stored in the interface i.
ValueOf(nil) returns the zero Value.
ValueType corresponds to Profile.ValueType
Valuer is the interface providing the Value method.
Values are just relinked, nothing is deleted.
Values can be created as part of other data structures.
Values containing the types defined in this package should not be copied.
Values defined in multiple directives are concatenated together.
Values here change, cannot reuse table across runs.
Values in Blocks are in final order when register allocation is done, maps value ids to locations
Values maps a string key to a list of values.
Values near 1 may be unstable.
Values of distinct types are never deeply equal.
Values of string type are immutable.
Values of the Image interface are created either by calling functions such as NewRGBA and NewPaletted, or by calling Decode on an io.Reader containing image data in a format such as GIF, JPEG or PNG.
Values override any extensions that would otherwise be produced based on the other fields but are overridden by any extensions specified in Attributes.
Values override any extensions that would otherwise be produced based on the other fields.
Values/types for special cases.
Var block where first entry is unexported.
Var defines a flag with the specified name and usage string.
Var is an abstract type for all exported variables.
Variable declarations in lexical order.
Variable has specific type only when there is exactly one type in the case list.
Variable in enclosing function with same name as field in struct composite literal confused gccgo.
Variable mask and variable source.
Variable name and fields in lexical order.
Variable or constant.
VariableNode holds a list of variable names, possibly with chained field accesses.
Variables A pipeline inside an action may initialize a variable to capture the result.
Variables Comment about exported variable.
Variables are addressable, so we can always take their address.
Variables are described below.
Variables declared by the pipeline persist.
Variables declared in ORANGE are assigned on every iteration.
Variables from function calls.
Variables with conversions:
Variables without an initialization expression do not appear in this list.
Variadic function corner cases.
Variadic reports whether the signature s is variadic.
Variant with *byte pointer type for DWARF debugging.
Variation_Selector is the set of Unicode characters with property Variation_Selector.
Various declarations of exported variables and functions.
Various errors contained in DNSError.
Various errors contained in OpError.
Various hidden assumptions are baked in by now.
Various implementations of ValueConverter are provided by the driver package to provide consistent implementations of conversions between drivers.
Various prefixes: 0x, -, etc.
Various runtime operations such as sends to unbuffered channels can write to arbitrary parts of the stack, including above the lowest un-hit stack barrier.
Various tests for expressions with high complexity.
Vector registers (VRs) - only available when the vector facility is installed.
Vendor Directories Go 1.6 includes support for using local copies of external dependencies to satisfy imports of those dependencies, often referred to as vendoring.
Vendor directories do not affect the placement of new repositories being checked out for the first time by 'go get': those are always placed in the main GOPATH, never in a vendor subtree.
Vendor directories get first chance to satisfy import.
Vendor is present, and srcDir is outside parent's tree.
Vendored packages do not contribute to our public API surface.
Verbatim copy from src/runtime/trace.go.
Verbose reports whether the -test.v flag is set.
Verifies it doesn't crash.
Verifies that NewSectionReader's Seeker behaves like bytes.NewReader (which is like strings.NewReader)
Verifies that the Transport doesn't reuse a connection in the case where the server replies before the request has been fully written.
Verifies we don't path.Clean() on the wrong parts in redirects.
Verify Response.ContentLength is populated.
Verify a log message looks right in the right time zone.
Verify a log message looks right, with our prefix and microseconds present.
Verify allowed and disallowed conversions.
Verify assignment rules are enforced by the compiler.
Verify attempts to verify c by building one or more chains from c to a certificate in opts.Roots, using certificates in opts.Intermediates if needed.
Verify checks the validity of an email address on the server.
Verify compiler complains about missing implicit methods.
Verify compiler messages about erroneous static interface conversions.
Verify correctness before running benchmark.
Verify error/no error for all types.
Verify field depth and index.
Verify filters before doing any processing.
Verify goto semantics.
Verify it before proceeding.
Verify it's not wrapped in some type.
Verify no outstanding requests after readLoop/writeLoop goroutines shut down.
Verify overflow is detected when using numeric constants.
Verify simple assignment errors are caught by the compiler.
Verify that DumpRequest preserves the HTTP version number, doesn't add a Host, and doesn't add a User-Agent.
Verify that ErrContentLength is returned
Verify that ErrNaN implements the error interface.
Verify that LookupFieldOrMethod and MethodSet.Lookup agree.
Verify that QuoteMeta returns the expected string.
Verify that SIGIO stays blocked on the C thread even when unblocked for signal.Notify().
Verify that a couple of illegal variable declarations are caught by the compiler.
Verify that a label name matching a constant name is permitted.
Verify that a label named like a package is recognized as a label rather than a package and that the package remains unused.
Verify that an io.Copy from an eofReader won't require a buffer.
Verify that any results don't contain any Go pointers.
Verify that both our HTTP/1 and HTTP/2 request and auto-decompress gzip.
Verify that built-in types don't get printed with (empty) package qualification.
Verify that calling Scan() provides the correct results.
Verify that comments of the form "//line filename:line" are interpreted correctly.
Verify that comparisons of slice/map/func values against converted nil values are properly rejected.
Verify that concrete/interface comparisons are typechecked correctly by the compiler.
Verify that constant definition loops are caught during typechecking and that the errors print correctly.
Verify that contents of buf match the string s.
Verify that erroneous initialization expressions are caught by the compiler Does not compile.
Verify that erroneous labels are caught by the compiler.
Verify that erroneous switch statements are detected by the compiler.
Verify that erroneous type switches are caught be the compiler.
Verify that erroneous use of init is detected.
Verify that error messages print meaningful values for various extreme floating-point constants.
Verify that flate.Reader.Read returns (n, io.EOF) instead of (n, nil) + (0, io.EOF) when possible.
Verify that illegal assignments with both explicit and implicit conversions of literals are detected.
Verify that illegal character literals are detected.
Verify that illegal composite literals are detected.
Verify that illegal conversions involving strings are detected.
Verify that illegal function signatures are detected.
Verify that illegal uses of ...
Verify that illegal uses of composite literals are detected.
Verify that illegal uses of indirection are caught by the compiler.
Verify that import conflicts are detected by the compiler.
Verify that incorrect comparisons are detected.
Verify that incorrect invocations of the complex predeclared function are detected.
Verify that initialization loops are caught and that the errors print correctly.
Verify that initializing the same scanner more than once works correctly.
Verify that invalid imports are rejected by the compiler.
Verify that it is illegal to take the address of a function.
Verify that it round-trips.
Verify that large integer constant expressions cause overflow.
Verify that method redeclarations are caught by the compiler.
Verify that named types always have only one representation (even when imported indirectly via different packages.)
Verify that no comments show up as literal values when skipping comments.
Verify that our IsGraphic agrees with unicode.IsGraphic.
Verify that our IsPrint agrees with unicode.IsPrint.
Verify that our IsSpace agrees with unicode.IsSpace.
Verify that pointers and interface types cannot be method receivers.
Verify that pointers can't be used as constants.
Verify that product is identity matrix
Verify that renamed identifiers no longer have their old meaning.
Verify that sequential Decoders built on a single input will succeed if the input implements ReadByte and there is no type information in the stream.
Verify that serialization works too, and that it round-trips.
Verify that sink addresses x1
Verify that sink addresses x3
Verify that taking the address of a type gives us a pointer which we can convert back using the usual interface notation.
Verify that the Go compiler will not die after running into an undefined type in the argument list for a function.
Verify that the SourcePos mode emits correct //line comments by testing that position information for matching identifiers is maintained.
Verify that the clone is self-consistent.
Verify that the connection is closed when the declared Content-Length is larger than what the handler wrote.
Verify that the garbage collector ran by seeing if we allocated fewer than N*MB bytes from the system.
Verify that the printer can be invoked during initialization.
Verify that the printer doesn't crash if the AST contains BadXXX nodes.
Verify that the printer produces a correct program even if the position information of comments introducing newlines is incorrect.
Verify that the quoted string is in fact treated as expected by Compile -- i.e. that it matches the original, unquoted string.
Verify that various erroneous type switches are caught be the compiler.
Verify that various kinds of "imported and not used" errors are caught by the compiler.
Verify that we can import package "a" containing an inlineable function F that declares a local interface with a non-exported method f.
Verify that we can withstand SIGPROF received on foreign threads
Verify that we have one build-id note with the expected value.
Verify the checksum of that chunk.
Verify the number of files is sane.
Verify the other tests didn't leave any goroutines running.
Verify the status quo: that the Client.Post function coerces its body into a ReadCloser if it's a Closer, and that the Transport then closes it.
Verify there's no data race accessing any lazy boundary if it's used by different goroutines.
Verify these don't exist:
Verify these exist: (sanity checking this test)
Verify verifies the signature in r, s of hash using the public key, pub.
Verify we do not treat non-zip64 archives as zip64
Verify we don't crash at least.
Verify we return ErrUnexpectedEOF when length is short.
Verify we return ErrUnexpectedEOF when reading truncated data descriptor.
Verify will fail if this slice is non-empty, unless verification is delegated to an OS library which understands all the critical extensions.
VerifyHostname checks that the peer certificate chain is valid for connecting to host.
VerifyHostname returns nil if c is a valid certificate for the named host.
VerifyOptions contains parameters for Certificate.Verify.
VerifyPSS verifies a PSS signature.
Verifying with a custom list of root certificates.
Version "goX" (or "goX.Y" or "goX.Y.Z") matches tags of the same form.
Version "release.rN" matches tags of the form "go.rN" (N being a floating-point number).
Version "weekly.YYYY-MM-DD" matches tags like "go.weekly.YYYY-MM-DD".
Version definition of file itself
Version is the Unicode edition from which the tables are derived.
Version is zero for symbols with global visibility.
Version name hash value
Version of bytes.Buffer that checks whether WriteTo was called or not
Version of newosproc that doesn't require a valid G.
Version or dependency names
Version prints the Go version.
Version returns the Go tree's version string.
Versym parallels symbol table, indexing into verneed.
Vertical sampling factor.
Very small values underflow to 1.
Very unlikely, but we handle it here rather than elsewhere for now.
Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string.
Vet expects to be given a set of files all from the same package.
Vet is a simple checker for static errors in Go source code.
Vet uses heuristics that do not guarantee all reports are genuine problems, but it can find errors not caught by the compilers.
Vet's exit code is 2 for erroneous invocation of the tool, 1 if a problem was reported, and 0 otherwise.
Virtual address in memory image.
Visible (printing) characters.
Visible but not preemptible.
Visit implements the ast.Visitor interface.
Visit visits the command-line flags in lexicographical order, calling fn for each.
Visit visits the flags in lexicographical order, calling fn for each.
VisitAll visits the command-line flags in lexicographical order, calling fn for each.
VisitAll visits the flags in lexicographical order, calling fn for each.
Visited comparisons are stored in a map indexed by visit.
Visits all instructions in a basic block and computes a bit vector of live variables at each safe point locations.
Visits all the instructions in each basic block to summarizes the information at each basic block
Visualize HTML directly generated by report.
Visualize postprocessed dot output
VolumeName returns leading volume name.
Vu is typed x's type V and T have identical underlying types and at least one of V or T is not a named type
W has padding at the end.
W.Hormann, G.Derflinger: "Rejection-Inversion to Generate Variates from Monotone Discrete Distributions" http://eeyore.wu-wien.ac.at/papers/96-04-04.wh-der.ps.gz
WANTED: An error here :(
WARNING - silently ignored by linker in ELF32
WARNING - silently ignored by linker in ELF64
WARNING: this doesn't do any revocation checking.
WARNING: use of this function to encrypt plaintexts other than session keys is dangerous.
WSP is a space or horizontal tab (RFC 5234 Appendix B).
Wait atomically unlocks c.L and suspends execution of the calling goroutine.
Wait blocks until the WaitGroup counter is zero.
Wait for 100us, then try to re-preempt in case of any races.
Wait for RewindAndSetgid
Wait for User ID/Group ID mappings to be written.
Wait for a connection.
Wait for active readers.
Wait for all HTTP clients to be done.
Wait for all HTTP fetches to complete.
Wait for all P's to acknowledge phase change.
Wait for all goroutines to be stuck in the Handler.
Wait for all parallel RLock()s to succeed.
Wait for all the cancel functions to return.
Wait for all the goroutines to start executing.
Wait for background goroutines to finish, so that exit handler that removes the work directory is not fighting with active writes or open files.
Wait for cancelation to complete.
Wait for everyone to run.
Wait for goroutine 1 and 2
Wait for goroutines to schedule and die off:
Wait for ioready, ignore closing or timeouts.
Wait for our request to complete.
Wait for outstanding closes to finish.
Wait for remaining Ps to run fn.
Wait for serial tests to finish
Wait for subtests to complete.
Wait for the 2 writers and all readers to finish.
Wait for the deadline, or indefinitely if none exists.
Wait for the goroutine converting context.Done into a write timeout to exist, otherwise our caller might cancel the context and cause fd.setWriteDeadline(aLongTimeAgo) to cancel a successful dial.
Wait for the goroutines to finish.
Wait for the parent test to complete.
Wait for the request before replying with a dummy response:
Wait for the trace reader to flush pending buffers and stop.
Wait for trigger to ensure that the process is started.
Wait for updates to be available from signal sender.
Wait for write to finish.
Wait forever without chewing up cpu.
Wait must be synchronized with the first Add.
Wait on all the contexts in a random order.
Wait releases any resources associated with the Cmd.
Wait releases any resources associated with the Process.
Wait status is 7 bits at bottom, either 0 (exited), 0x7F (stopped), or a signal number that caused an exit.
Wait till traceGoSysBlock event is emitted.
Wait until another thread schedules gp and so m again.
Wait until another thread schedules lockedg again.
Wait until number of goroutines is no greater than nmax, or time out.
Wait until the goroutine we've just created has started waiting.
Wait waits for the Process to exit, and then returns a ProcessState describing its status and an error, if any.
Wait waits for the closeWaiter to become closed.
Wait waits for the command started with Run to exit.
Wait waits for the command to exit.
WaitContext is like Wait, but kills the process (by calling os.Process.Kill) if ctx is done before the process ends on its own.
WaitProcess waits until the pid of a running process is found in the queue of wait messages.
Waiting to update arena_used until after the memory has been mapped avoids faults when other threads try access the bitmap immediately after observing the change to arena_used.
Wake all blocked assists.
Wake all read and write waiters, they will observe closed flag after wakeup.
Wakeup an additional proc in case we have excessive runnable goroutines in local queues or in the global queue.
Wakeup happened so semaphore is available.
Walk DWarfDebugInfoEntries, and emit .debug_info
Walk all mappings looking for matching functions with samples.
Walk along until d has distinguished itself from upper and lower.
Walk backward from b looking for one of the a's blocks.
Walk backwards looking for dead stores.
Walk backwards through the block doing liveness analysis.
Walk backwards, filling in locally live values, removing those defined.
Walk blocks backwards.
Walk blocks in the general direction of propagation.
Walk does not follow symbolic links.
Walk down stack to find Start.
Walk every absolute line and ensure that we hit every source line monotonically
Walk forward through the basic block instructions and allocate liveness maps for those instructions that need them.
Walk functions step through the major pieces of the template structure, generating output as they go.
Walk iterates over fields of a structure and calls f with a reference to that field, the name of the field and a tag ("", "domain", "ipv4", "ipv6") specifying particular encodings.
Walk lines, stripping trailing white space and adding to list.
Walk of OCALLFUNC(OCLOSURE) will complete the transformation later.
Walk over attributes again, this time writing them down.
Walk over attributes, counting.
Walk prog table, emit line program and build DIE tree.
Walk the block instructions backward and update the block effects with the each prog effects.
Walk the block instructions forward to update avarinit bits.
Walk the dominator tree from end to beginning, just once, treating SCC components as single blocks, duplicated calculated liveness information out to all of them.
Walk the list and set all the bits.
Walk the nodes and outgoing edges in reverse order to prefer removing edges with the lowest weight.
Walk the struct using memequal for runs of AMEM and calling specific equality tests for the others.
Walk the struct using memhash for runs of AMEM and calling specific hash functions for the others.
Walk through sp adjustments in function, consuming relocs.
Walk traverses a tree depth-first, sending each Value on a channel.
Walk values backwards computing desired register info.
Walk values backwards to figure out what flag value we want in the flag register at the start of the block.
Walk walks the file tree rooted at root, calling walkFn for each file or directory in the tree, including root.
Walk will complain about this label being already defined, but that's not until after escape analysis.
WalkFunc is the type of the function called for each file or directory visited by Walk.
Walker launches Walk in a new goroutine, and returns a read-only channel of values.
Wang, "Fast algorithms for the discrete W transform and for the discrete Fourier transform", IEEE Trans.
Want a single Content-Length header.
Want functions with 0 results and 1 parameter.
Want same, side effect-free expression on lhs of both shifts.
Want to enable these tests but gofmt mangles them.
Want to give up and return, but have to unregister first, so that any notewakeup racing with the return does not try to grant us the semaphore when we don't expect it.
Warang_Citi is the set of Unicode characters in script Warang_Citi.
Warn about -coverpkg arguments that are not actually used.
Warn but continue to next package.
Warn reports an error but does not set the exit code.
Warnf reports a formatted error but does not set the exit code.
Warning logs a message with severity LOG_WARNING, ignoring the severity passed to New.
Warnl reports a "warning", which is usually flag-triggered logging output for the benefit of tests.
Warnl writes compiler messages in the form expected by "errorcheck" tests
Was a bug: used to give EOF reading empty slice at EOF.
Was a gob problem encoding the body but the header has been written.
Was discarding function calls made for arguments named _ in inlined functions.
Was failing to compile with 'invalid receiver' due to incomplete type definition evaluation.
Was taking address of interface field, so method set was empty.
WasIdle is whether this connection was obtained from an idle pool.
Waste some time so sender can finish using lots of stack and block in channel send.
We *do* need to enforce that this is at least 1, since marking is racy and double-scanning objects may legitimately make the expected scan work negative.
We AND together the bits of good and replicate the result across all the bits.
We accept any IPv6 address including IPv4-mapped IPv6 address.
We add : because we include :port as part of host.
We add back v.ID here because we want this value to appear live even before this point.
We add in a window of four bits each iteration and do this 64 times.
We allocate extra bitmap pieces in chunks of bitmapChunk.
We allocate from the most to the least constrained input.
We allocated 100 MB or (if not short) 1 GB.
We allow both tag and branch names as 'tags' for selecting a version.
We allow extra bytes at the end of the SEQUENCE because adding elements to the end has been used in X.509 as the version numbers have increased.
We allow functions with 1 result or 2 results where the second is an error.
We allow known flags both before and after the package name list, to allow both go test fmt -custom-flag-for-fmt-test go test -x math
We almost always do, to ensure that we don't see any value changes made during the loop.
We already have the sizes from the central directory so we can just ignore these.
We already have visual noise in the form of punctuation maybe we could replace some of that with formatting.
We already know from the shift check that it is representable as an integer if it is a constant.
We already put _cgo_ at the beginning, so the main concern is other cgo wrappers for the same functions.
We also allow the special tag cmd_go_bootstrap.
We also assume that the two chroma components have the same subsampling ratio.
We also can exit this loop via goto if we get close to exhausting the input.
We also fill in string for possible debugging use.
We also fill in the name for possible debugging use.
We also know that ind has the form (Phi min nxt) where nxt is (Add inc nxt) which means: 1) inc dominates nxt and 2) there is a loop starting at inc and containing nxt.
We also need to do this if we are going to loop.
We also need to switch to g0 so we can shrink the stack.
We also score GetLoweredClosurePtr as early as possible to ensure that the context register is not stomped.
We always create a new signal stack here, to avoid having two Go threads using the same signal stack.
We always know when EOF is coming.
We always pass absolute paths of source files so that the error messages will include the full path to a file in need of attention.
We apply this rewrite on systems that support the 1-instruction form.
We are a trailing empty field or a blank line
We are about to rename exact.* to constant.*, but constant is a common name.
We are adjusting for that difference here by making argv0 absolute.
We are comparing a struct or an array, neither of which can be nil, and our comparisons are shallow.
We are counting on this stat never overflowing a uintptr, so this function must only be used for system memory stats.
We are creating an object file, so we don't want a build ID.
We are currently running inside a signal handler, so the signal is blocked.
We are done with this fragment, so pop it
We are done, and for this output we want default behavior.
We are going to define 256 types T(n), such that T(n) embeds T(2n) and *T(2n+1).
We are going to insert captured variables before input args.
We are in 32-bit mode, maybe we didn't use all possible address space yet.
We are in stop-the-world, but syscalls can finish and write to trace concurrently.
We are in the admissible range.
We are interested in preempting user Go code, not runtime code.
We are locked to the thread and are not running concurrently with a signal handler.
We are not in a scan state
We are not writing on field boundaries.
We are on the opening paren.
We are only looking for calls to functions imported from the "C" package.
We are running in a signal handler with all signals blocked, so we don't have to worry about any other code interrupting us.
We are sitting on the opening parenthesis.
We are therefore also liberal in what we accept.
We are trying to unmap just a hole in the middle.
We are unlikely to be able to continue.
We arrange link, and pc to pretend the panicking function calls sigpanic directly.
We arrange lr, and pc to pretend the panicking function calls sigpanic directly.
We arrange things very carefully to have to/from conversions on either side of the call which cannot be combined with any other conversions.
We arrange to call memmove and typeBitsBulkBarrier instead.
We arrive here when parsing an interface type declared inside an exported and inlineable function and the interface declares unexported methods (which are then package-qualified).
We asked for recursion, so it should have included all the answers we need in this one packet.
We assign the pointer to x.p but leak x.s.
We assign uint64 sequence numbers to incoming requests but save the original request ID in the pending map.
We assume that LookPath will only add file extension.
We assume that append doesn't need to preserve old.array in this case.
We assume that the earliest reference to a temporary is its definition.
We assume that the nodes corresponding to the sources and destinations of memory operations will be declared in the function.
We assume the soft-float ABI unless we see a tag indicating otherwise.
We assume they are always accurate.
We avoid dependency on the unicode package, but check validity of the implementation in the tests.
We behave as if we observed the channel at that moment and report that the receive cannot proceed.
We behave as if we observed the channel at that moment, and report that the send cannot proceed.
We benchmark converting between the JSON form and in-memory data structures.
We benchmark four common sizes (byte, pointer, string/interface, slice), and one larger size.
We buffer until we've received all parameters.
We build a new channel tree for each run of the loop.
We can afford to clobber one.
We can already diagnose variables used as types.
We can assume the existence of ::1/128 when at least one loopback interface is installed.
We can assume the existence of connected multicast route clones when at least two connected unicast routes, ::1/128 and other, are installed.
We can be a little aggressive about being sure directories exist.
We can clobber its register.
We can do that for 8 further limbs and then right shift to eliminate the extra factor of R.
We can do this later, without encoding format change.
We can fix that as we go.
We can get away without memory args because we know there is no aliasing of spill slots on the stack.
We can have a closing brace for a range on the same line as a condition for an "else if" and we don't want that brace to steal the count for the condition on the "if".
We can make that true by adding multiplies of p without affecting the value.
We can make the error clearer this way.
We can multiply the mantissa exactly.
We can now safely discard this map.
We can observe a newer/larger local, it is fine (we must observe its zero-initialized-ness).
We can only guarantee that the loops runs within limits of induction variable if the increment is 1 or when the limits are constants.
We can only release pages in PhysPageSize blocks, so round start and end in.
We can pass a slice or array, meaning that we should check the entire slice or array but need not check any other part of the object.
We can precompute a larger segment of the keystream on decryption.
We can read them out of the object file.
We can rely on the io.CopyN done shortly afterwards to trigger any IO errors.
We can replace the "a" in the phi with the constant true.
We can reuse the same slice as long as we don't try to append to it.
We can safely skip it if there a thread blocked in netpoll already.
We can set it to the current value of wait because any previous waiters are already in the list or will notice that they have already been notified when trying to add themselves to the list.
We can slide things down instead of allocating a new slice.
We can still do those computations and then adjust the result for a negative numerator, but it's annoying to write the adjustment over and over.
We can uncomment this when compiler escape analysis is good enough to see that the integer assigned to i does not escape and therefore need not be allocated.
We can use the installed copy if it matches what we'd get by building a new one.
We can use the usual fmt.Printf verbs since big.Float implements fmt.Formatter
We can't call RawSyscall because it's not safe even for BSD-subsystem calls.
We can't call malloc here because it could cause a deadlock.
We can't control what the host resolver does.
We can't copy the stack if we're in a syscall.
We can't delay the nil check past the next store.
We can't do arrays because dynamic indexing is not supported on SSA variables.
We can't do precise error checking.
We can't easily check that the type is *testing.M because we don't know how testing has been imported, but at least check that it's *M or *something.M.
We can't expand the GC program without extra storage space we can't easily get.
We can't figure out the type.
We can't have a stack barrier in g.sched.pc, so don't install one in this frame.
We can't hope for the best and do it anyway, like on Darwin, because Solaris might eventually allocate a constant with a different meaning for the value of TCP_KEEPINTVL on illumos.
We can't just short-circuit here, though, because we check labels and gotos as part of SSA generation.
We can't move values which have a memory arg - it might make two memory values live across a block boundary.
We can't overwrite arg0 (or arg1, if commutative).
We can't overwrite the last copy of a value that needs to survive.
We can't permit that, because then the size of the Go struct will not be the same as the size of the C struct.
We can't re-associate with that right away, because event ports are level triggered so it would cause a busy loop.
We can't reasonably grab the lock across those operations.
We can't releasem yet since even the call to gopark may be preempted.
We can't resolve dot imports (yet).
We can't run it because it may be on some other run or wait queue.
We can't shift ret.length up without overflowing.
We can't take that risk, so no use of ForkLock here.
We can't trace syscall exit right now because we don't have a P.
We can't trust the output because imaginary comes out as a number.
We can't use -r to pick them up because we can't combine split-stack and non-split-stack code in a single -r link, and libgo picks up non-split-stack code from libffi.
We can't use it directly because it would generate an import cycle.
We can't use the flag package because some of the flags from our command line are for us, and some are for 6.out, and some are for both.
We can't wake it up by calling NewTimer since other tests may have left timers running that should have expired before ours.
We cannot allow in-place modification of x or y.
We cannot assume they are in any order or even contiguous, due to external linking.
We cannot generate a token with what we are holding.
We cannot just call the runtime routines, because the race detector expects to be able to intercept the sync/atomic forms but not the runtime forms.
We cannot safely move the stack during an active call to syscall, because we do not know which of the uintptr arguments are really pointers (back into the stack).
We cannot simply call z.SetUint64(uint64(u)) and change the sign afterwards because the sign affects rounding.
We certainly don't want to exchange with AX if the op is MUL or DIV.
We chain together "Less" functions, each of which compares a single field.
We changed the current directory and cannot go back.
We chdir to the directory of the archive for simplicity.
We cheat and take the "Z" variants to mean "the time zone as formatted for ISO 8601".
We check for test success by scanning for the final PASS returned by the test harness, assuming the worst in its absence.
We check off first because we're more likely to have multiple entries with different offsets for the same targetpc than the other way around, so we'll usually fail in the first clause.
We check that each returned chain matches a chain from expectedChains but an entry in expectedChains can't match two chains.
We check that executing n.List once results in the same context as executing n.List twice.
We check the full array of paths each time to allow for the case that a pattern contains a '/'.
We check the transition condition continuously here in case this G gets delayed in to the next GC cycle.
We checked above that the element type is comparable.
We choose 7 seconds because httptest.Server starts logging warnings to stderr at 5 seconds.
We choose a different buffer size, bigger than a maximum block, and also a prime.
We comment them out but keep them for interest.
We compare the underlying Object, which checks that the identifier is the one we declared as the receiver for the String method in which this printf appears.
We compile the data into the binary so that the benchmark is a stand-alone binary that can be copied easily from machine to machine.
We compute and return both.
We compute the actual heap growth during this cycle and scale that by how far off from the goal CPU utilization we were (to estimate the heap growth if we had the desired CPU utilization).
We conservatively treat all strings as URLs, but make some allowances to avoid confusion.
We consider rootless paths per RFC 3986 as opaque.
We convert to uint32 to avoid the extra test for negative, and in the index we convert to uint8 to avoid the range check.
We could allocate a larger initial stack if necessary.
We could assign to _ but the compiler optimizes it too easily.
We could avoid some of the fmt, but math/big imports fmt anyway.
We could be more aggressive and try to arrange for it to be cleaned up when the call completes.
We could but it doesn't seem important enough to bother.
We could change the functions to return -1, 0, 1 and reduce the number of calls for greater efficiency: an exercise for the reader.
We could dequeueRescan, but that takes a lock and isn't really necessary.
We could detect this and undo NOHUGEPAGE on the end points as well, but it's probably not worth the cost because when neighboring allocations are freed sysUnused will just set NOHUGEPAGE again.
We could discard the body earlier if this matters.
We could do a more precise analysis if needed, like in walk.go.
We could do a second binary search, but the caller is going to do a linear scan anyway.
We could do better but we would have to keep track of the fields.
We could do this by adding to the tree, but it's easier just to print the text.
We could do this more neatly by setting the id at the start of building every type, but that would break binary compatibility.
We could embed the text/template field, but it's safer not to because we need to keep our version of the name space and the underlying template's in sync.
We could equivalently use the locally defined GobEncode/GobDecoder interfaces.
We could fix up the users with another pass, but for now we'll just leave it.
We could immediately start working at s now, but to improve compression we first update the hash table at s-1 and at s.
We could in principle add binaries to testdata and check all the supported systems during this test.
We could just check that byte, but this is a perhaps more robust.
We could let them all process in parallel even if their responses need to be serialized.
We could make things marginally faster by splitting the 32-bit case out into a separate block but it's not worth the duplication, so u has 64 bits.
We could pass an int if we felt like rewriting the C code.
We could possibly relax this constraint in the future in order to choose the decoding method using the data in the wireType.
We could probably skip this prologue in some situations but it's a bit subtle.
We could return a ProtocolError here, but better to be liberal in what we accept, so if we get an empty key, skip it.
We could save this copy by encrypting all the whole blocks in the data separately, but it doesn't seem worth the additional code.
We could synthesize here but that would change the order of DIEs we output.
We could synthesize here, but that would change the order of the DIEs.
We could use ReadDotBytes and then Split it, but reading a line at a time avoids needing a large contiguous block of memory and is simpler.
We could use SecTrustEvaluate to verify that a trust chain exists for a certificate, but the x509 API requires returning the entire chain.
We could use smaller k for some divisors but there's no point.
We could use the name but it's not unique.
We create absTestDirs first.
We create an empty map for each kind of input we're interested in, and Check populates them.
We create our own buffer to control number of writes.
We currently block at every CGO entry point (via _cgo_wait_runtime_init_done) to ensure that the runtime has been initialized before the CGO call is executed.
We deal with the structures defined in this package first.
We decode rv not rv.Elem because the Unmarshaler interface test must be applied at the top level of the value.
We define a loop entry as the target of a backward jump.
We define codes for each error that manifests while escaping templates, but escaped templates may also fail at runtime.
We define two kinds of phis, those where the merge happens in a register (a "register" phi) and those where the merge happens in a stack location (a "stack" phi).
We delay the allocation until then so that it can be done after exitsyscall makes sure it is okay to be running at all (that is, there's no garbage collection running right now).
We delay this until after reloadPackage so that the old entry for p has been replaced in the package cache.
We deleted an entry but now there will be a blank line-sized hole where the import was.
We did that after each fix, so this appears redundant, but it is necessary to generate gofmt-compatible source code in a few cases.
We didn't find the symbols, so look for the names used in 1.3 and earlier.
We do impose some restrictions on the zone, to avoid stupidity like newlines.
We do it in this order, rather than only adding -rdynamic later, so that -extldflags can override -rdynamic without using -static.
We do it this way so the test doesn't depend on ints being 32 bits.
We do not allow full Unicode case folding, for fear of causing more confusion or harm than good.
We do not currently automatically parse this test.
We do not currently easily support (ul, ol).
We do not do any explicit checks, just ensure that it does not crash.
We do not have a valid pcdata value but there might be a stackmap for this function.
We do not really need .symtab for go.o, and if we have one, ld will also include it in the exe, and that will confuse windows.
We do not use channels because we need to be able to handle writes after and during close, and because a chan byte would require too many send and receive operations in real use.
We do not use events, so we can skip them always.
We do not want to call into the scheduler when panicking or when on the system stack.
We do our own vendor resolution, because we want to find out the key to use in packageCache without the overhead of repeated calls to buildContext.Import.
We do this after re-checking the transition condition so that multiple goroutines that detect the heap trigger don't start multiple STW GCs.
We do this by boosting objects of type SXXX with relocations to type SXXXRELRO.
We do this here so that the output can use the same register as a dying input.
We do this so that the g stack we're currently running on will no longer change.
We do this unconditionally to avoid leaking timing information.
We do this under the lock to prevent a GC cycle from ending between this check and queuing the assist.
We do what Intel xed does except in gnuCompat mode.
We document that "" means "GET" for Request.Method, and people have relied on that from NewRequest, so keep that working.
We don't actually connect to (or even resolve) "some-other-host.tld", though, because of the Transport.Dial hook.
We don't actually know how big the stack is, like we don't know how big any scheduling stack is, but we assume there's at least 32 kB, which is more than enough for us.
We don't allocate any register here.
We don't allow an empty match right after a previous match, so ignore it.
We don't believe that logic is the right thing to do in general, but when testing against libopcodes it simplifies the comparison if we adjust a few small pieces of logic.
We don't care about the output.
We don't care because base-2 exponents can only show up in machine-generated textual export data which will use correct formatting.
We don't care for d, p, q, dP, dQ or qInv.
We don't care if the two pix data differ if the 8x8 block is entirely outside of the image's bounds.
We don't care if there are values in the window, as long as it is at d.index is 0
We don't care, but accumulate for caller.
We don't check n against buffer length here because if it's a slice of interfaces, there will be buffer reloads.
We don't check the version number in the premaster secret.
We don't cover tests, only the code they test.
We don't do any particular checks on the result at the moment.
We don't enforce either of those.
We don't export this package's Type directly because it would lead to an import cycle with this package and ../ssa.
We don't find all values that depend on the control, just values with a direct dependency.
We don't handle non-section relocations for now.
We don't have a way to do that for gccgo without writing more assembly code, which we haven't bothered to do.
We don't have an implementation.
We don't have any 32-bit big-endian systems.
We don't have to be constant time if the lengths of the MACs are different as that suggests that a completely different hash function was used.
We don't instrument the runtime, but operations like a slice copy can call msanread anyhow for values on the stack.
We don't know how big the buffer needs to be to collect all the goroutines.
We don't know how many symbols we have, but we do have symbol information.
We don't know the type of the element.
We don't make any attempt to solve this, and we haven't had many reports of it.
We don't need it at the moment in the std repo and so we don't export it anymore.
We don't need the MOVSL side-effect of updating SI and DI, and issuing a sequence of MOVLs directly is faster.
We don't need the MOVSQ side-effect of updating SI and DI, and issuing a sequence of MOVQs directly is faster.
We don't need to be precise here, any reasonable upper limit would do.
We don't need to parse the public key for TLS, but we so do anyway to check that it looks sane and matches the private key.
We don't need to perform that iteration of the loop because we already set out_* to zero.
We don't need to send the type info but we do need to update enc.sent.
We don't parse mdns.allow files.
We don't promise that this software works.
We don't register for any specific type of events yet, that's netpollarm's job.
We don't remove the byte if we're about to return and we're not reading all of it.
We don't request gzip if the request is for a range, since auto-decoding a portion of a gzipped document will just fail anyway.
We don't support any of the OS X versions that run on 32-bit-only hardware anymore.
We don't support examples that are not self-contained (yet).
We don't support examples that are part of the greater package (yet).
We don't support old-classful IP address notation.
We don't support sockaddr_mpls for now.
We don't support sockaddr_rtlabel for now.
We don't support that.
We don't treat ABFPT and ABFPF as branches here, so that we will always fill nop (0x0) in their delay slot during assembly.
We don't try to maintain a single cgoSymbolizerArg for the whole use of Frames, because there would be no good way to tell the symbolizer when we are done.
We don't use executeTest because we need to kill the program while it is running.
We don't use the connection freelist for http2.
We don't use the quotient parity anymore (round half up instead of round to even) but it's still here in case we change our minds.
We don't use the result when *x is a type, but compute it anyway.
We don't want TesticularCancer.
We don't want pointers accidentally classified as not-pointers or vice-versa because of copy elision.
We don't want that--we only want one.
We don't want the following line, because it slows down all.bash (by 10 seconds on my laptop).
We don't want the wait to hang.
We don't want to block here.
We don't want to include the time we spend waiting for serial tests in the test duration.
We don't want to merge a non-addressed var with an addressed one and inhibit registerization of the former.
We don't want to produce import path symbols for both of them, so just produce one for localpkg.
We don't want to start leaking information in error messages.
We double-check that property below once the offsets and size are computed.
We drop all others because they can appear in places that cause our counters to appear in syntactically incorrect places.
We echo the client's session ID in the ServerHello to let it know that we're doing a resumption.
We either have the paramnodes, which may be connected to other things through flows or we have the parameter type nodes, which may be marked "noescape".
We estimate the unsampled value by dividing each collected sample by its probability of appearing in the profile.
We expect 0 or 1 extra goroutine, empirically.
We expect an error, so the tree set and funcs list are explicitly nil.
We expect each line to be trimmed (prefix and suffix) before being concatenated.
We expect errCount be 1 iff err is set
We expect errors since the server is hanging up on us after telling us to send more requests, so we don't actually care what the error is.
We expect only 16-bit values.
We expect that v*pow2(e) fits in a float64, but pow2(e) by itself may not.
We expected to be signaled before stdin closed
We failed to parse or open nsswitch.conf, so conservatively assume we should use cgo if it's available.
We fake a gAMA output.
We fill an Addr.Reg field with 0 in this case.
We finished data, begin read-only data.
We force all symbol resolution to be done at program startup because lazy PLT resolution can use large amounts of stack at times we cannot allow it to do so.
We forgot to send map subtypes before the map.
We found a potential import path for dir, but check that using it wouldn't find something else first.
We found an import spec that imports path.
We generate an UpperCase name to serve as concise documentation and an _UnderScored name to store the data.
We generate random temporary file names so that there's a good chance the file doesn't exist yet - keeps the number of tries in TempFile to a minimum.
We give up and pass it as an 8-bit string.
We got a --same as previous threads--.
We got caught in the middle of a stack barrier (presumably by a signal), so stkbar may be inconsistent with the barriers on the stack.
We got the error we expected.
We guarantee to the Transport that this has been initialized, though.
We handle that by proceeding to the next iteration of the main loop.
We handle that situation by copying the point from the table.
We have RLE data pending.
We have SWIG version 3.0.x.
We have SWIG version 3.x.
We have a block (statement list), but it may have several basic blocks due to the appearance of statements that affect the flow of control.
We have a full newline-terminated line.
We have a literal code.
We have a negative width, so take its value and ensure that the minus flag is set
We have a quick division method so use it for modulo too.
We have a real UTF-8 encoding error.
We have a special op for this so as to not confuse GC (particularly stack maps).
We have all pauses, so this should be exact.
We have an array, but we cannot Slice() a non-addressable array, so we build a slice by hand.
We have built the binary.
We have completed the entropy decoding.
We have consumed the preamble line and will have consumed any lines which could be header lines.
We have consumed the register or R prefix.
We have decided that we want to honor the -o option.
We have decoded a complete run-length so we need to replicate the last output symbol.
We have exhausted an IDAT chunk.
We have failed to build the binary, don't try again.
We have made modifications to the package p being tested and are rebuilding p (as ptest), writing it to the testDir tree.
We have more than one predecessor, which means we may have Phi ops.
We have no business with this element.
We have no intention of reading from c.
We have no way to know the size of the object.
We have not factored the common code out because eventually uadd (and usub) should be optimized by special-casing, and the code will diverge.
We have nothing to do.
We have only 2 bits for number of arguments.
We have previously verified that the alpha value is fully opaque.
We have run into this trying to run the go.codereview/patch tests.
We have saved up frames to return.
We have seen this type before, at a more shallow depth (note that multiples of this type at the current depth were consolidated before).
We have the precalculated values needed for the CRT.
We have to assume that it might contain a pointer.
We have to assume the worst case values (digit 84) in order to ensure that the top bits are correct.
We have to avoid calling cgen for those.
We have to do most of these before we traceback the new stack because gentraceback uses them.
We have to do the ShouldVisit check that Push would have, but we avoid the stack manipulation.
We have to exclude these cases because we reject all multiples of these numbers below.
We have to mask off any excess bits in the case that the size of the underlying field is not a whole number of bytes.
We have to read the whole POST body before writing any output.
We have to search the list of codes to find the divide between the left and right sides.
We have to update our AST-space position accordingly and suspend indentation temporarily.
We have to validate the plaintext in constant time in order to avoid attacks like: J.
We have unwrapped any explicit tagging at this point.
We haven't added this allocation to the stats, so subtract it from a fake stat (but avoid underflow).
We haven't found a single match.
We hide the pointer in the socketcall assembly to avoid allocation on every system call.
We hope they are accurate, but we know that they fail in the case of prebuilt Go installations that don't preserve the build mtimes (for example, if the pkg/ mtimes are before the src/ mtimes).
We ignore exit status.
We ignore the other two values because rsa will calculate them as needed.
We ignore these values because rsa will calculate them.
We ignore these values, if present, because rsa will calculate them.
We implement TestMain so remove the test binary when all is done.
We include a build tag that go generate should ignore.
We include some but not all of this information.
We increment our line number (lines start at 1, not 0) and set column to -1 so as we increment in readRune it points to the character we read.
We increment with the count and append a string with the count.
We infer the size of a symbol by looking at where the next symbol begins.
We initialize the levels as if we had already figured this out.
We intentionally ignore receiver parameters for type equality, because they're never relevant.
We introduce such temps when initializing struct literals.
We issue spills unconditionally, then at the end of regalloc delete the ones we never use.
We issued a cancelation request.
We just have to decode and apply that jump.
We just have to stop a signal handler from interrupting in the middle of our copy.
We just incremented s.freeindex so it isn't 0.
We just made more work available.
We just need a prototype.
We just need to reserve 8 bytes for each PLT entry and generate a JMP_SLOT dynamic relocation for it.
We just scanned a frame containing a return to a stack barrier.
We just set up the spill pointer to point at itself and any later user will restore it to use it.
We just want to avoid a uniform image.
We keep a separate list of keys to make iteration order deterministic.
We keep it in pkg/ so that all the generated binaries are in one tree.
We keep it in pkg/, just like the object directory above.
We keep the codes packed into a uint32, at the most-significant end.
We keep the directory if we can import it, or if we can't import it due to invalid Go source files.
We keep the recver because it might catch more bugs in the future.
We keep them in a separate space to make printing etc.
We know it's an assignment, so the LHS must be all identifiers.
We know it's one of these.
We know r must fit in 16 bits - see makeisprint.go.
We know that the argument type must be assignable to the function parameter type, or the code would not compile, but there is nothing requiring that the types be exactly the same.
We know that the signal was unblocked before entering the handler, or else we would not have received it.
We know that the waiter is in the cond.Wait() call because we synchronized with it, then acquired/released the mutex it was holding when we synchronized.
We know that there is more data, because we handled 2-word objects above.
We know the code we're working with is not dead, so we're ok.
We know the import path for parent's dir.
We know the type params are correct, because the Go equivalents had good type params.
We let the HTTP/1.1 client dial and use its TLS connection instead.
We let the low bit of tophash drive the evacuation decision.
We let them jump anywhere and stop jumping after a while.
We likely end up being as long as the modulus.
We list all supported platforms in this list, so that this is the single point of truth for supported platforms.
We load all the templates before execution.
We look at the beginning of the string for a run of upper-case letters.
We maintain one set of mark bits for allocation and one for marking purposes.
We make a separate copy for phis and regular values.
We make it in tempDir, which our parent will clean up.
We make no attempt to detect or solve this problem.
We make up a rune/ScanToken value for them - ugly but simple.
We make variables to hold all the different values we'd like to use.
We manually create a runtimeTimer to bypass the overflow detection logic in NewTimer: we're testing the underlying runtime.addtimer function.
We mark them SigPanic here so that debug.SetPanicOnFault will work.
We may also ensure the invariants, but it's okay to scan an object twice.
We may be able to claim source order in the future.
We may be running on a different P at this point, so we can't reattach until this G is parked.
We may have to keep the current version on systems with cgo but without pthreads, like Windows.
We may not have space to append this to the partial log buf, so we always return a new slice for the end-of-data marker.
We may not need the qualified name here.
We may receive another instance of the signal before we restore the Go handler, but that is not so bad: we know that the Go program has been ignoring the signal.
We may revisit past Go 1.1.
We may see at once that the number is already shortest.
We may want to revisit this, since the EscStep nodes would make an excellent replacement for the poorly-separated graph-build/graph-flood stages.
We merge the right shift with a carry chain.
We might also want a finalizer on Stmt to drop the reference count.
We might be interrupted for profiling halfway through a goroutine switch.
We might block trying to get that byte from src, so instead invent a space byte.
We moved the memory loads out, so there shouldn't be any reason for it to panic anymore.
We must be careful while reading data from P's, M's and G's.
We must be very careful here to not touch sel after we have unlocked the last lock, because sel can be freed right after the last unlock.
We must define an implementation of the T2 template.
We must do this before signaling that we're no longer working so that other workers can't observe no workers and no work while we have this cached, and before we compute done.
We must do this before waking blocked assists.
We must explicitly assert properties of the Signature's receiver since it doesn't participate in Identical() or String().
We must match the results of this code.
We must register the concrete type for the encoder and decoder (which would normally be on a separate machine from the encoder).
We must use a buffered channel or risk missing the signal if we're not ready to receive when the signal is sent.
We need -f to ignore import comments.
We need a fast system call to provoke the race, and Close(-1) is nearly universally fast.
We need a phi if there are two different args (which are both not v).
We need a repeatable and randomish choice of which direction to send NaNs during evacuation.
We need a total of 2*n - 2 items at top level and have already generated 2.
We need its address if the receiver is a pointer.
We need nanoseconds, which means scaling by the number of missing digits in the format, maximum length 10.
We need the package when the function is inlined so we can properly resolve the name.
We need to assume an output context so that recursive template calls take the fast path out of escapeTree instead of infinitely recursing.
We need to balance between keeping enough running worker threads to utilize available hardware parallelism and parking excessive running worker threads to conserve CPU resources and power.
We need to be able to look this up, so put it in the hash table.
We need to be able to reference dynimport symbols when linking against shared libraries, and Solaris needs it always
We need to build a new structure with the new value for the field we're assigning and the old values for the other fields.
We need to call both tf and of in some order.
We need to cas the status and scan before resuming...
We need to clear importpkg before calling p.next(), otherwise it will affect lexlineno.
We need to continue this work
We need to do one of these before letting the mutator allocate more to prevent over-allocation.
We need to duplicate template.Parse here to hold on to the lexer.
We need to ensure that the handler always sees a valid slice, so set the values in an order such that it always does.
We need to export the symbol crosscall2 in order to support callbacks from shared libraries.
We need to figure out what the right general solution is, besides telling people to use float64.
We need to generate codegen indicating "count" of size.
We need to keep a slot for Phis corresponding to b.
We need to load the data at v.ptr into the interface data word.
We need to preserve the ./ for pattern matching and in the returned import paths.
We need to prove that the induction variable is incremented only when it's smaller than the maximum value.
We need to remember this information so that the liveness analysis in stackalloc is correct.
We need to search our list of client certs for one where SignatureAlgorithm is acceptable to the server and the Issuer is in certReq.certificateAuthorities
We need to select which scratch buffer to use carefully, since this method is called recursively to write PAX headers.
We need to start over from a new position.
We need to supply the parameter package here.
We need to take care with errors on both DNS message exchange layer and DNS transport layer because goLookupIP may fail when the IP connectivty on node under test gets lost during its run.
We need to treat the IO operation as succeeded (the bytes are actually sent/recv from network).
We need to type assert that to the type we want.
We need to unblock it before raising the signal, or the signal we raise will be ignored until we return from the signal handler.
We need two things from the segment table: the load offset and the dynamic table.
We never ask for more than 2.
We never pass these arguments to a shell (just to programs we construct argv for), so this should be okay.
We never return any /32 or /128 IP address prefix on any IP tunnel interface as the hardware address.
We never use packed registers, so a MOVSD between registers can be replaced by MOVAPD, which moves the pair of float64s instead of just the lower one.
We now have the base type.
We only asked for SOCK_STREAM, but check anyhow.
We only attempt to uncompress the gzip stream if we were the layer that requested it.
We only care about Go memory that might contain pointers.
We only care about direct references, not references via typedefs.
We only care about global data: NAME_EXTERN means a global symbol in the Go sense, and p.Sym.Local is true for a few internally defined symbols.
We only care about liveness info at call sites, so putting the varkill in the store chain is enough to keep it correctly ordered with respect to call ops.
We only care about the delta from the section base.
We only check instances where the defer or go statement is the last statement in the loop body, as otherwise we would need whole program analysis.
We only close StateIdle and StateNew because they're not doing anything.
We only compress if we have maxStoreBlockSize.
We only format the final F2/F3 as XRELEASE/XACQUIRE.
We only get here if defining a macro inside a macro.
We only have a labelname if there is a symbol (was issue 14006).
We only have powers of 2 and 10, and we split powers of 10 into the product of the same powers of 2 and 5.
We only know once we have found the end of the uexpr.
We only look at chainCount possibilities before giving up.
We only match IP addresses against IP SANs.
We only need a wrapper to support static functions in the prologue--without a wrapper, we can't refer to the function, since the reference is in a different file.
We only need to check that the previous byte is not a dot, and this isn't the end of the string.
We only need to check the Latin-1 range.
We only need to examine the single value to which it points.
We only need to get one 100 Hz clock tick, so we've got a large safety buffer.
We only need to handle 64-bit.
We only queue the first one, but we increment the count on each.
We only reach this if isStale believes the binary form is either not present or not usable.
We only split encoded-words when the charset is UTF-8.
We only support 8-bit precision.
We only support null compression, so check that the client offered it.
We only this when looking at a value on the stack when the type uses a GC program, because otherwise it's more efficient to use the GC bits.
We only use the lower one, but the processor can do better if we do moves using both.
We only use the zip file anyway.
We only want to do this when producing a Windows output file on a Windows host.
We only want to pay for this cost during testing.
We over-assist to build up credit for future allocations and amortize the cost of assisting.
We pad the bytes we want decoded with enough 0x5Fs that no matter what state the instruction stream is in after reading our bytes, the pops will get us back to a forced instruction boundary.
We pass both to avoid unnecessarily generate garbage in rw.WriteString which was created for performance reasons.
We pass park to a gopark unlock function, so it can't be on the stack (see gopark).
We pass the bytes.Buffer separately for easier testing of the infrastructure without requiring a full Decoder.
We pass the value we want to send directly to the receiver, bypassing the channel buffer (if any).
We pass this information to the rounding routine for adjustment.
We pass user-generated signals to os/signal, or else ignore them.
We pick the largest recommended number from table C.1 of FIPS 186-3.
We populate these ahead of time so we're not reading from req.Header after their Handler starts and maybe mutates it (Issue 14940)
We prepare different command lines for the two binaries, so it matters what we call it.
We print it all, regardless, because we don't want to trim the reason the benchmark failed.
We process one item per non-trivial format
We provide a socket that listens to a wildcard address with reusable UDP port when the given laddr is an appropriate UDP multicast address prefix.
We provide it with the address of the correspondent GOT symbol.
We put each test file in its own directory in the fakeFS so we can look at it in isolation.
We queue values in this list in reverse order.
We quit when we get a match that's at least nice long
We read the header successfully.
We really only care about testing this on Unixy things.
We really should verify that "panic" is the predefined function, but without type checking we can't and the likelihood of it being an actual problem is vanishingly small.
We received handshake bytes, indicating the start of a renegotiation.
We recheck old marked interfaces as new types (with new methods) may have been discovered in the last pass.
We recognise this certificate by its SubjectPublicKeyInfo and exempt it from the Basic Constraints requirement.
We recompute a new random tophash for the next level so these keys will get evenly distributed across all buckets after multiple grows.
We record the function's node number as n but search from node n+1.
We record the index in the Preds list where the primary predecessor sits.
We record the target of the first time we see a .a file for a package to make sure that we prefer the 'install' rather than the 'build' location (which may not exist any more).
We refer to this year as the absolute zero year, and to times measured as a uint64 seconds since this year as absolute times.
We registered it in the calling function.
We remove any formatting so that we don't get spurious line breaks/indentation when showing the TODO body.
We remove pass1Bits scaling, but leave results scaled up by an overall factor of 8.
We replace each pointer argument x with _cgoCheckPointer(x).(T).
We report idle marking time below, but omit it from the overall utilization here since it's "free".
We represent large scalar tails that must be expanded in the replication by setting endnb larger than 4.
We require only hex digits, and at least one.
We require pub.E to fit into a 32-bit integer so that we do not have different behavior depending on whether int is 32 or 64 bits.
We require that the server's identity (i.e. leaf certificate) is unchanged and thus any previous trust decision is still valid.
We require that too, just to avoid stepping on existing work.
We resend a request only if we reused a keep-alive connection and did not yet receive any header data.
We reserve a few possibilities for special marks.
We respect this sorting in exprSwitch.walkCases.
We return the name of the _cgoCheckPointer function we are going to build, or the empty string if the type does not use unsafe.Pointer.
We save the line number here so error messages from this instruction are labeled with this line.
We save the request method in pending when sending a request and then look it up by request ID when filling out the rpc Response.
We scan to string and convert so we get a copy of the data.
We send zero-length (but non-nil) maps because the receiver might want to use the map.
We set MaxRgn large enough to handle that.
We set _StackGuard to StackPreempt so that first split stack check calls morestack.
We set a somewhat arbitrary lower bound on remaining scan work since if we aim a little high, we can miss by a little.
We set it to the line number of the preceding instruction so that there are no deltas to encode in the pc-line tables.
We set the type and leave NAME untouched.
We shift the address left 16 to eliminate the sign extended part and make room in the bottom for the count.
We should be in PST/PDT, but if the time zone files are missing we won't be.
We should crash immediately, but give it plenty of time before failing (by exiting 0) in case we are running on a slow system.
We should do the same for each dot-imported object.
We should eventually try to remove it altogether.
We should have deleted it before Go 1.
We should never get here.
We should never need to overwrite an existing chunk.
We should never receive a longer note.
We should probably check these at compile time somewhere, but for now we'll do it here.
We should reject all unnecessary backslashes.
We should see both packages in the error.
We should still attempt to read error body, but there's no one to give it to.
We show both in one format string.
We side with Intel xed, unless we are trying to match libopcodes more closely during the comparison-based test suite.
We simply require that g and SP match and that the PC is not in gogo.
We singly-linked up the SudoGs in lock order.
We skip installing a barrier on bottom-most frame because on LR machines this LR is not on the stack.
We solve this in two ways.
We specifically permit and encourage the use of this software as the basis of commercial products, provided that all warranty or liability claims are assumed by the product vendor.
We spill the register containing the value whose next use is as far in the future as possible.
We start ServeHTTP in a goroutine, which may take a long time if the file is large.
We start by dealing with each of the primitive types in turn.
We started with the whole bit output buffer, and then we loaded bits from whole bytes.
We still enforce validMethod for non-empty methods.
We still honor that reply (see TestIssue3595), but don't send future requests on the connection because it's then in a questionable state.
We still need to parse the type structure, but throw it away if the object already has a type.
We still permit the old way, but we also permit this hack: if a Header() key begins with "Trailer:", the suffix of that key is a Trailer.
We stress that one must show how the reference time is formatted, not a time of the user's choosing.
We strip the wrapper in errRecover.
We substitute v for w if v and w are in the same equivalence class and v dominates w.
We support a single layer of EXPLICIT or IMPLICIT tagging with tag strings on the fields of a structure.
We synchronize through a shared variable, so we need two procs
We tell the compiler and linker to look in that _test directory first.
We test an even stronger restriction, that one store can't shadow another unless the types of the address fields are identical (where identicalness is decided by the CSE pass).
We test the "grow" and "no grow" paths separately, but not the "normal" (occasionally grow) path, because it is a blend of the other two.
We then pause for a bit, hoping the client processes it before any subsequent RST.
We then unpack the *Signature and use the scope for the literal body.
We therefore use a for loop to fill the first row, and then use the first row as the slice source for the remaining rows.
We therefore write a BinaryMarshal/BinaryUnmarshal method pair to allow us to send and receive the type with the gob package.
We think that the subtract should be sufficient in general, so do that unconditionally, but double-check, in case our beliefs are wrong.
We throw in a gob-encoding array, to test another case of isZero, and a struct containing an nil interface, to test a third.
We took care of 1-word and 2-word objects above, so this is at least a 6-word object, so our start bits are shared only with the type bits of another object, not with its mark bit.
We track them by remembering the current declaration in check.decl.
We track this in bytes to make it fast to update and check for debt in the malloc hot path.
We trade each dot byte for a length byte.
We treat the whole function as a single long basic block and run through it using a greedy register allocator.
We treat these as requiring eager writes to memory, due to the possibility of a fault handler looking at them, so there is not much point in registerizing the loads.
We treat this as a read operation, so we allow it even for unexported data, because the caller has to import "unsafe" to turn it into something that can be abused.
We tried using special assignment functions invoked only when not holding a running P, but then some updates to a particular memory word went through write barriers and some did not.
We try all five filter types, and pick the one that minimizes the sum of absolute differences.
We try to run this test with increasingly larger multiples until one works so slow, loaded hardware isn't as flaky, but without slowing down fast machines unnecessarily.
We try to use the final element of the path but fall back to _.
We use "other" rather than "previous" here because the first declaration seen may not be textually earlier in the source.
We use -widthptr(FP) for x86.
We use 4:2:0 chroma subsampling.
We use MOVAPD as a faster synonym for MOVSD.
We use a cycle detection algorithm from Knuth, Vol 2, Section 3.1, Ex 6, pp 539-540.
We use a fake traceback, and a symbolizer that dumps a string we recognize.
We use a mixture of both.
We use a type's hash field to pick a bucket.
We use a version of a linear scan register allocator.
We use an explicitly ASCII function to avoid any sharp corners resulting from performing Unicode operations on DNS labels.
We use an internal buffer to guarantee alignment.
We use fixed-point computation, with the number of bits for the fractional component varying over the intermediate stages.
We use gcscandone to record whether the scan has been done during this round.
We use global variables to prevent any constant folding.
We use it to hold the index of the node in the variables array, plus 1 (so that 0 means the Node is not in the variables array).
We use kern.osrelease instead.
We use negative offsets that do not overlap with any compile-time module offsets.
We use one-character names to identify merged categories
We use scalars instead of pointers in an attempt to avoid benchmarking the write barriers.
We use sized math, so the result is already truncated.
We use small numbers and small sizes in an attempt to avoid benchmarking memory allocation and copying.
We use t as a temporary variable.
We use the 64-bit data structures on both 32- and 64-bit machines in order to write the code just once.
We use the P224 CurveParams directly in order to test the generic implementation.
We use the ability to read bytes as a plausible surrogate for buffering.
We use the formulation described in chapter 2, section 2.4, "The Yacas Book of Algorithms": http://yacas.sourceforge.net/Algo.book.pdf
We use the same importer for all imports to ensure that everybody sees identical packages for the given paths.
We use the string-valued token here, for variety.
We use the uintptr mutex.key and note.key as a uint32.
We use this feature to do a binary search to find a function that is incorrectly compiled.
We use this to record the shortest import sequence that leads to a particular package.
We use two maps, one for parsing and one for execution.
We use weak declarations, and test the addresses, so that this code works with older versions of gccgo.
We used to 'checkout master' but that doesn't work if the default branch is not named master.
We used to be clever here and use a non-atomic update in certain cases, but it's not worth the risk.
We used to check if there were waiting workers, but it's better to just keep work available than to make workers wait.
We used to look at specific warning or error messages here, but that tied the behavior too closely to specific versions of the compilers.
We used to quote empty strings, but we do not anymore (as of Go 1.4).
We used to try to be clever but that didn't always work (see golang.org/issue/12205).
We used to use 16 because the GC programs do have some constant overhead to get started, and processing 128 pointers seems to be enough to amortize that overhead well.
We wait before kicking off a goroutine to satisfy a blocked select.
We walk down the list and cross out any usages that aren't supported by each certificate.
We walk through the bits of the exponent one by one.
We want Pop to give us the highest, not lowest, priority so we use greater than here.
We want a sign if asked for and if the sign is not positive.
We want a small integral part in the result because finding digits of an integer requires divisions, whereas digits of the fractional part can be found by repeatedly multiplying by 10.
We want all the phis first.
We want all the vardefs next.
We want blocking mode for the new fd, hence the double negative.
We want it to be at least 3*Widthptr so slices can be registerized.
We want predecessor lists to be long, so 2/3rds of the blocks have a successor of the first or last block.
We want the Timeout and Deadline values from dialer to cover the whole process: TCP connection and TLS handshake.
We want the child in a fork/exec sequence to inherit only the file descriptors we intend.
We want the kernel ones, which are in the asm/* headers.
We want the lengths of x and m to be equal.
We want the stack trace to include the C functions.
We want the user type, not the base type.
We want this to be fast, see issue 8412.
We want to cache 2KB, 4KB, 8KB, and 16KB stacks.
We want to delay that declaration (and possible allocation) until inside the case body.
We want to detect all cases where a program that does not use unsafe makes a cgo call passing a Go pointer to memory that contains a Go pointer.
We want to generate func table entries only for the "lowest level" symbols, not containers of subsymbols.
We want to give handlers a chance to hijack the connection, but we need to prevent the Server from dealing with the connection further if it's not hijacked.
We want to jump over the systemstack switch.
We want to make sure equal does not read across the boundary and cause a page fault where it shouldn't.
We want to provide access to a broader range of (simulated) files than Native Client allows, so we maintain our own file descriptor table exposed to higher-level packages.
We want to remove all of that.
We want to see a stack trace for each thread.
We want to send the process a signal and see if it dies.
We want to test that FDs in the child do not get overwritten by one another as this shuffle occurs.
We want to zero-index the actual arguments.
We were able to steal all of the credit we needed.
We were unable steal enough credit or perform enough work to pay off the assist debt.
We were unable to build the binary.
We will allow it to be copied even though we don't have full GC info for it (because it is written in asm).
We will be able to use MIB_IF_ROW2.AccessType once we drop support for Windows XP.
We will have two TCP FSMs inside the kernel here.
We will leak pointer to args in ret, so its lifetime is not scoped.
We will load syscalls, if available, before using them.
We will never add fields to them.
We will never be able to CSE two values that generate memory.
We wish to divide by R in order for the result also to be in Montgomery form.
We won't actually wait for this sleep to complete.
We won't need those until 2106.
We work around that by disabling the builtin functions (this is safe as it won't affect the actual compilation of the C code).
We would need to only share among types with the same GC signature.
We write the EOF to the write-side error, because there still might be some pipelined reads
We'd like to check a reasonable minimum, like total / len(have) / smallconstant, but this test is pretty flaky (see bug 7095).
We'd need to make the ResponseWriter an optional "ExpectReplier" interface or something.
We'd need to test the high word and branch to out-of-bounds failure if it is not 0.
We'd use *gc.Node directly but that would lead to an import cycle.
We'll account for internal fragmentation at the end of mallocgc.
We'll also need these when preprocessing for dwarf information.
We'll do computations with 200 bits of precision in the mantissa.
We'll have to pad this with 0x00 in order to stop it looking like a negative number.
We'll invert flags again before using it below.
We'll later see if more than 4 bytes match.
We'll live with the false negatives for now.
We'll overflow an int64 in this case.
We'll use a PrintableString if the character set in the string is sufficiently limited, otherwise we'll use a UTF8String.
We'll use the low bit of tophash to decide which way NaNs go.
We're about to emit a bunch of Progs.
We're allocating a block big enough to hold two pointers.
We're already looking at this type.
We're assigning a slicing operation back to its source.
We're assigning to a field of an ssa-able value.
We're done with this pconn and somebody else is currently waiting for a conn of this type (they're actively dialing, but this conn is ready first).
We're going to look at the files it examines.
We're going to need a bigger boat.
We're interpreting the args and locals bitmap instead of liveout so that we include the bits added by the avarinit logic in the previous loop.
We're looking for cases in which a reference to this type can be locked, but a value cannot.
We're not fastidious about case.
We're not timing out immediately and there's no way we would be done before we entered the handler, but the race detector doesn't know this, so synchronize explicitly.
We're not using testing's benchmarking mechanism directly because we want custom output.
We're only interested in the case in which the underlying type is a struct.
We're ready to trigger GC and stack shrink.
We're testing the runtime, so make tracebacks show things in the runtime.
We're then interested in the other operand.
We're trying to write a gcc struct that matches gc's layout.
We're very careful here not to have any operation between the e.word and e.typ assignments that would let the garbage collector observe the partially-built interface value.
We're working on a bucket whose oldbucket has not been evacuated yet.
We've already covered this file
We've already scanned span roots and kept the scan up-to-date during concurrent mark.
We've already sent everything.
We've also run into compilers that reject "-I." but allow "-I", ".", so be sure to use two arguments.
We've done everything we need to do for this level.
We've found an HTML tag.
We've found an empty match.
We've got an error response.
We've got no pending call.
We've loaded all the code now.
We've looked through this type before, at a higher level.
We've put a digit into the token buffer.
We've reached our target depth.
We've reached the end and there's padding
We've run out of both leafs and pairs.
Weak loop heuristic -- both source and at least one dest are in loops, and there is a difference in the destinations.
WebSafe is a 216-color palette that was popularized by early versions of Netscape Navigator.
Week ranges from 1 to 53.
Weekday returns the day of the week specified by t.
Weight is the stream's zero-indexed weight.
Weird special instruction for strength reduction of divides.
Welch, ``A Technique for High-Performance Data Compression'', Computer, 17(6) (June 1984), pp 8-19.
Well-formed data that does not fit into v is discarded.
Well-known IPv4 addresses
Well-known IPv6 addresses
Well-known encoding struct tags (json, xml) used with unexported fields.
What to execute if the value is empty (nil if absent).
What to execute if the value is non-empty.
What you see here may be used freely but it comes with no support or guarantee.
What's going on: large 64-bit "unsigned" looks like negative number to hardware's integer-to-float conversion.
What's left is the exceptions.
When 'go get' checks out or updates a git repository, it now also updates submodules.
When 'go test' runs a test binary, it does so from within the corresponding package's source code directory.
When -dynlink is passed, many operations on external names (and also calling duffzero/duffcopy) use R15 as a scratch register.
When -shared is passed, we leave the code in the 2-instruction form but assemble (and relocate) them in different ways to generate the initial exec code sequence.
When AX is needed for another value, we simply reuse AX.
When GC finishes marking heap, it preempts P's one-by-one and retakes partial wbufs (filled by write barrier or during a stack scan of the goroutine currently scheduled on the P).
When Stop returns, it is guaranteed that c will receive no more signals.
When TestMain is called, flag.Parse has not been run.
When a CERT_CHAIN_CONTEXT is built, the first simple chain begins with an end certificate and ends with a self-signed certificate.
When a data value is not plain text, you can make sure it is not over-escaped by marking it with its type.
When a deferred big call starts, it must first create yet another stack segment to hold the giant frame for x.
When a disassembly does not match the internal decoding, allowedMismatch determines whether this mismatch should be allowed, or else considered an error.
When a function F calls panic, normal execution of F stops immediately.
When a goroutine explicitly frees an object or sets a finalizer, it ensures that the span is swept (either by sweeping it, or by waiting for the concurrent sweep to finish).
When a goroutine grabs a new span into mcache, it sweeps it.
When a goroutine needs to allocate a new small-object span, it sweeps small-object spans for the same object size until it frees at least one object.
When a goroutine needs to allocate large-object span from heap, it sweeps spans until it frees at least that many pages into heap.
When a match is found, immediately go back to looking at every byte.
When a matching line is found, that z pointer has the extra data to use in laying down the instruction bytes.
When a more abstract interface isn't necessary, there are functions for encrypting/decrypting with v1.5/OAEP and signing/verifying with v1.5/PSS.
When a receive operation is selected, the received Value is returned by Select.
When a response to a POST has Content-Length: -1, make sure we don't write the Content-Length as -1.
When a scan stops, the reader may have advanced arbitrarily far past the last token.
When a signal arrives, the operating system starts the signal handler running with an updated PC and SP.
When a stack is scanned, this phase also installs stack barriers to track how much of the stack has been active.
When a symbol is referenced, it's moved to the front of the list.
When a type is defined at run time, its *rtype data lives on the heap.
When a type is defined on a given connection between an Encoder and Decoder, it is assigned a signed integer type id.
When a version control system supports multiple protocols, each is tried in turn when downloading.
When action returns, the file offset is at the start of the next entry.
When an import and a declaration collide in separate files, present the import as the "redeclared", because the declaration is visible where the import is, but not vice versa.
When and if we implement a moving garbage collector, cgoCheckPointer will pin the pointer for the duration of the cgo call.
When any of the arguments result in a standard violation then FormatMediaType returns the empty string.
When building recursive types, someone may get there before us.
When built using c-archive or c-shared, only install signal handlers for synchronous signals.
When calculating hashes over objects, it's important that the resulting bytes be the same at both ends and DER removes this margin of error.
When called on an expression that contains no metacharacters, it is equivalent to strings.SplitN.
When called, that new function does the following:
When calling Encode instead of EncodeAll, the single-frame image is translated such that its top-left corner is (0, 0), so that the single frame completely fills the overall GIF's bounds.
When calling SetCgoTraceback, the version argument is the version number of the structs that the functions expect to receive.
When canceled, it also cancels any children that implement canceler.
When cgo is involved, the compile step already requires gcc, so it is not problematic for the link step to require gcc too.
When checking out or updating a package, get looks for a branch or tag that matches the locally installed version of Go.
When checking, you should subtract obj.RBaseARM64 first.
When compiling Go into PIC, R2 is reserved to be the TOC pointer and R12 so that calls via function pointer can stomp on it.
When compiling Go into PIC, all functions must start with instructions to load the TOC pointer into r2:
When compiling multiple packages or a single non-main package, build compiles the packages but discards the resulting object, serving only as a check that the packages can be built.
When compiling packages, build ignores files that end in '_test.go'.
When converting to the latter two, time.Format3339Nano is used.
When creating fresh test files and testing them, this issue is not present.
When cross-compiling, you must specify a C cross-compiler for cgo to use.
When decoding an interface, after a type there may be a DelimitedValue still in the buffer.
When dialing a name with multiple IP addresses, the timeout may be divided between them.
When doInsert is false do prep-work and error checking, but don't actually add the row to the table.
When doInsert is true, add the row to the table.
When doing this we must keep track of what kind of events the goroutines are currently interested in, for example a fd may be open both for reading and writing.
When dynamically linking, we create LSym's by reading the names from the symbol tables of the shared libraries and so the names need to match exactly.
When dynamically linking, we want references to functions defined in this module to always be to the function object, not to the PLT.
When dynlinking on 386, almost any call might end up being a call to a PLT, so make sure the GOT pointer is loaded into BX.
When either cgo or SWIG is used, go build will pass any .c, .m, .s, or .S files to the C compiler, and any .cc, .cpp, .cxx files to the C++ compiler.
When embedded, the locally-declared error interface is only visible if all declarations are shown.
When embedded, the predeclared error interface must remain visible in interface types.
When err is nil, resp always contains a non-nil resp.Body.
When ext has no associated type, TypeByExtension returns "".
When faced with a new decision, x chooses randomly.
When false, the size of TLS records may be adjusted in an attempt to improve latency.
When findDead returns, d.reachable tells whether the statement following stmt is reachable.
When finished, emit header for nextTest, which is going to run after the pending commands are done (and runPending returns).
When finished, the caller must either call startTheWorld or undo these three operations separately:
When fix rewrites a file, it prints a line to standard error giving the name of the file and the rewrite applied.
When formatting such a fragment, gofmt preserves leading indentation as well as leading and trailing spaces, so that individual sections of a Go program can be formatted by piping them through gofmt.
When gofmt reads from standard input, it accepts either a full Go program or a program fragment.
When growing the table, iterators remain iterating through the old table and must check the new table if the bucket they are iterating through has been moved ("evacuated") to the new table.
When introducing new tests, please try to make them two-way as well to ensure that marshalling and unmarshalling are as symmetrical as feasible.
When invoking the generated test binary (the result of 'go test -c') directly, however, the prefix is mandatory.
When issue 1909 is fixed, change from skip to compile.
When it's time to write the Trailers, we pick out the fields of Headers that were declared as trailers.
When key or value or both are too large, it uses pointers to key+value instead.
When linking a shared object, some conceptually "read only" types need to be written to by relocations and putting them in a section called ".rodata" interacts poorly with the system linkers.
When linking an executable, outfile is just "a.out".
When linking an object that does not contain the runtime we are creating the moduledata from scratch and it does not have a compiler-provided size, so read it from the type data.
When linking relocatable objects, various flags need to be filtered out as they are inapplicable and can cause some linkers to fail.
When loading DLLs, we prefer to use LoadLibraryEx with LOAD_LIBRARY_SEARCH_* flags, if available.
When main_init is complete, it is closed, meaning cgocallbackg can reliably receive from it.
When marshaling certificates, the Extensions field is ignored, see ExtraExtensions.
When marshaling, elements in ExtraNames are appended and override other values with the same OID.
When matching against text, the regexp returns a match that begins as early as possible in the input (leftmost), and among those it chooses the one that a backtracking search would have found first.
When modifying this code, also update the validateStructTag code in golang.org/x/tools/cmd/vet/structtag.go.
When normalizing do not re-encode valid escapes.
When not building for a shared library the instruction does not require a prefix.
When not in checkmark mode, this bit is set to 1.
When not specified, every primitive type has a default tag in the UNIVERSAL class.
When not under test, these values are always nil and never assigned to.
When opening a fakeDriver's database, it starts empty with no tables.
When parsing (only), the input may contain a fractional second field immediately after the seconds field, even if the layout does not signify its presence.
When parsing CSRs, this can be used to extract extensions that are not parsed by this package.
When parsing a time with a zone abbreviation like MST, if the zone abbreviation has a defined offset in the current location, then that offset is used.
When parsing a time with a zone offset like -0700, if the offset corresponds to a time zone used by the current location (Local), then Parse uses that location and zone in the returned time.
When parsing certificates, this can be used to extract non-critical extensions that are not parsed by this package.
When parsing multiple files with the same name in different directories, the last one mentioned will be the one that results.
When parsing, all elements are stored in Names and non-standard elements can be extracted from there.
When parsing, if the seconds value is followed by a decimal point and some digits, that is taken as a fraction of a second even if the layout string does not represent the fractional second.
When passed to ggloblsym, causes Local to be set to true on the LSym it creates.
When passing a pointer to a field in a struct, the Go memory in question is the memory occupied by the field, not the entire struct.
When passing a pointer to an element in an array or slice, the Go memory in question is the entire array or the entire backing array of the slice.
When present, REX.W is always the first entry in the table.
When putting the runtime but not main into a shared library these symbols are undefined and that's OK.
When race detection enabled everything depends on runtime/race.
When reaching an object that was not serialized before, an integer _index_ is assigned to it, starting at 0.
When reading into a struct, all non-blank fields must be exported.
When rpc responds, we use the sequence number in the response to find the original request ID.
When run under nohup, the test should ignore uncaught SIGHUPs, because the runtime is not supposed to be listening for them.
When run with one argument, the argument is treated as a Go-syntax-like representation of the item to be documented.
When run without nohup, the test should crash on an uncaught SIGHUP.
When running a large set of sequential test cases, checking Coverage after each one can be useful for identifying which test cases exercise new code paths.
When running go build, any file with a .swig extension will be passed to SWIG.
When running under the Go continuous build, skip tests for now when under Kubernetes.
When running with cgo, we call _cgo_thread_start to start threads for us so that we can play nicely with foreign code.
When scanning with Scanf, Fscanf, and Sscanf, all non-empty runs of space characters (except newline) are equivalent to a single space in both the format and the input.
When set to 0 memory profiling is disabled.
When set, no timer will be created and this channel will be used instead.
When signal.Notify()/Stop is called, sigenable/sigdisable in turn notify this thread to update its signal mask accordingly.
When signal_recv is unblocked, it resets sig.Note and rechecks sig.mask.
When sufficient allocation has taken place replay the sequence starting at 0 above, see discussion of GC rate below.
When switching from a system g to a user g, there are three possibilities.
When switching from a user g to a system g, LR is not considered live, so the update only affects g, SP, and PC.
When that form is used, the variable is declared at the beginning of the implicit block in each clause.
When the G runs on another M, it locks all the locks and frees sel.
When the GC has more background credit, it will satisfy queued assists before flushing to the global credit pool.
When the Go function returns, the non-Go signal mask will be restored.
When the IP node supports IPv4-mapped IPv6 address, we allow an listener to listen to the wildcard address of both IP addressing spaces by specifying IPv6 wildcard address.
When the Timer expires, the current time will be sent on C, unless the Timer was created by AfterFunc.
When the bug in ld64 is fixed, we can enable this block and also enable duff's device in cmd/7g.
When the callback is done with the m, it calls dropm to put the m back on the list.
When the channel is closed, the reader returns io.EOF.
When the execution path branches on the condition `v op w` the set of relations is updated to exclude any relation not possible due to `v op w` being true (or false).
When the file is executed, the coverage processing has changed the line numbers, so we can't use runtime.Caller.
When the final tree contains forward references, it will write the debug_info section in 2 passes.
When the function is invoked, reflect turns the arguments into Values, calls swap, and then turns swap's result slice into the values returned by the new function.
When the garbage collector finds an unreachable block with an associated finalizer, it clears the association and runs finalizer(obj) in a separate goroutine.
When the go command makes the wrong build decision and does not rebuild something it should, users fall back to adding the -a flag.
When the hashtable grows, we allocate a new array of buckets twice as big.
When the last block of a loop is processed, attempt to move spills out of the loop.
When the last m receives the SIGQUIT, it will fall through to the call to crash below.
When the next GC starts, it sweeps all not-yet-swept spans (if any).
When the parameter is type T defined as *X, simulate a little of the laxness of C by making the argument *X instead of T.
When the scan is over, we emit the closing ", pc)".
When the signal handler fills its half, it offers to swap with the goroutine.
When the test completes, the file or directory will be removed if it exists.
When there are no more parts, the error io.EOF is returned.
When there is a very small live set but a lot of allocation, simply collecting when the heap reaches GOGC*live results in many GC cycles and high total per-GC overhead.
When this goroutine is done, either because fn(t) returned normally or because a test failure triggered a call to runtime.Goexit, record the duration and send a signal saying that the test is done.
When this is the case encode the name using base64 encoding.
When this test fails, it hangs.
When tracing it is useful to see what called instPrefix to report an error.
When true, the largest possible TLS record size is always used.
When typ has no associated extensions, ExtensionsByType returns an nil slice.
When unmarshaling quoted strings, invalid UTF-8 or invalid UTF-16 surrogate pairs are not treated as an error.
When used as the last argument of an instruction, this form makes clear that both registers are destinations.
When using a Regexp in multiple goroutines, giving each goroutine its own copy helps to avoid lock contention.
When using cgo, call the C library for mmap, so that we call into any sanitizer interceptors.
When using gccgo variables have to be exported so that they become global symbols that the C code can refer to.
When using search domains, return the error encountered querying the original name instead of an error encountered querying a generated name.
When we branched from parent we learned a new set of restrictions.
When we fill both buffers, we shift the stack down by one work buffer by bringing in a new empty buffer and discarding a full one.
When we have many dashes or pluses, then they are grouped left to right.
When we know the CAs we trust, then we can send them down, so that the client can choose an appropriate certificate to give to us.
When we pop the last pointer, we shift the stack up by one work buffer by bringing in a new full buffer and discarding an empty one.
When we run the actual test below, worker threads running the goroutines will start parking.
When we see an R_PPC64_REL24 relocation to a dynamic symbol (indicating that the call needs to go through the PLT), we generate up to three stubs and reserve a PLT slot.
When we're not allowed to read anything
When writing structs, zero values are written for fields with blank (_) field names.
When zeroing, prepare a register containing zero.
Whenever f returns false, Walk must stop and return false, and otherwise return true.
Whenever this is updated, call gcController.revise().
Whenever this is updated, call traceHeapAlloc() and gcController.revise().
Whenever we hit a reference node, the level goes up by one, and whenever we hit an OADDR, the level goes down by one.
Where "key" contains the RSA private key given at the bottom of this file.
Where k is an arbitrary integer.
Where only one block exists for a given source position, it should be 0.
Whether it points to the heap or not is impossible to know at compile time
Whether the + or - is infix or prefix, it cannot precede a div op.
Whether to check for signed or unsigned overflow depends on the instruction
Whether to write an extra block after the LZW-encoded data.
Whether tx times associated with local time types are specified as UTC or local time.
Whether tx times associated with local time types are specified as standard time or wall time.
Whether we are adding any sort of code instrumentation, such as when the race detector is enabled.
Whether we have an indexed argument that has not resolved.
Which argument we're expecting to format now.
Which is expected to be one of 11-13, 21-23, 31, 32, and y.val() should be equal to which and y.p.val() should be equal to z.val().
Which registers are possibilities.
While Scan stringifies all numbers scanned from numeric database columns into *string, scans into numeric types are checked for overflow.
While a worker is working it decrements nwait.
While doing that, cmd/link will discover that there is no definition for _cgo_gcc_Cfunc_sin, referred to by the gc-compiled source file.
While profiling, the profile will be buffered and written to w.
While the world is stopped, exitsyscall could already emit a delayed event (see exitTicks in exitsyscall) if we set trace.enabled here.
While tracing, the data will be buffered and available via ReadTrace.
While tracing, the trace will be buffered and written to w.
While we process the vars and funcs, also write gcc output.
White is an opaque white uniform image.
White space is considered part of a field.
White-space and newline characters separating two encoded-words must be deleted.
White_Space is the set of Unicode characters with property White_Space.
Whitespace is accumulated until a non-whitespace token appears.
Whitespace sequences are very short so this should never happen.
Widen for calculation
Width cannot be one for a correctly encoded non-ASCII rune.
Width is the width of this Type in bytes.
Width returns the value of the width option and whether it has been set.
Wikipedia examples, converted to base32
Wildcard gets replaced with map value.
Wildcard matches any expression.
Will be set to this object file's .got+0x8000.
Will be used to figure out live inputs to exit blocks of inner loops.
Will block if barrier fails to unlock someone.
Will deadlock if no goroutine wakes up
Will deadlock unless n are running.
Will get NUL wrong but that doesn't matter
Will have to change if we want to support 80-bit floats in the future.
Will move as we add PHeaders
Will need to store the library name rounded up and 24 bytes of header metadata.
Will probably also need to make frame invalidation have a hook too.
Will re-panic if not one of our errors, such as a runtime error.
Will read from network.
Will skip walking of directory pictures and its contents.
Will write to network.
Win32finddata is what we committed to in Go 1.
Windows  can't read bytes over max of int16.
Windows 10 and above will deprecate this API
Windows 10 version of fsutil has different output message.
Windows CreateProcess assumes the opposite: it looks for argv0 relative to the current directory, and, only once the new process is started, it does Chdir(attr.Dir).
Windows CreateProcess takes the command line as a single string: use attr.CmdLine if set, else build the command line by escaping and joining each argument with spaces
Windows PE may, but if so we have not implemented it.
Windows TLS base is always 0x14(FS).
Windows TLS base is always 0x28(GS).
Windows XP SP2 and Windows 2003 do not support SHA2.
Windows and Plan 9 already do this correctly, but are structured with different syscalls such that they don't use Lstat, so the hook below for testing it wouldn't work.
Windows and Plan 9 will layout sched stack on OS stack.
Windows counts memory used by page table into committed memory of the process, so we can't reserve too much memory.
Windows cryptographically secure pseudorandom number generator.
Windows defines some predefined root keys that are always open.
Windows does not allow deletion of a binary file while it is executing.
Windows dynamic priority boosting assumes that a process has different types of dedicated threads -- GUI, IO, computational, etc.
Windows environment variables.
Windows has very strict rules about things like removing directories while someone else has them open.
Windows otherwise runs out of stack space.
Windows returns WSAEMSGSIZ
Windows system calls.
Windows time can tick only every 15ms, wait for at least one tick.
Windows uses closures and channels for IO completion port-based netpoll.
Windows will reuse recently-used addresses by default.
Wire type is IT0, local type is RT1.
Wire type is RT0, local type is RT1.
WireType    16 ArrayType   17 CommonType  18 SliceType   19 StructType  20 FieldType   21 22 is slice of fieldType.
With 32-bit words there are more convT2E allocs, and with gccgo, only pointers currently go in interface data.
With HTTP Basic Authentication the provided username and password are not encrypted.
With a Content-Length.
With a search path, "onion.vegegtables.com" can use DNS.
With an adjusted reexportdeplist used only by the binary exporter, we can also avoid the global exportlist.
With current optimizations, constructing the returned array uses only a single register.
With each step past a non-matching ytable line, z advances by the 4th entry in the line.
With ignored leading line.
With internal linking, DWARF is embedded into the executable, this lets us do the same for external linking.
With no arguments it prints the list of known tools.
With or without a timeout, the operating system may impose its own earlier timeout.
With the -e flag, the list command never prints errors to standard error and instead processes the erroneous packages with the usual printing.
With the exceptions of comments, which are skipped if SkipComments is set, unrecognized tokens are not ignored.
With the randomness here, as long as the tests pass consistently with -race, they shouldn't have latent scheduling assumptions.
With the textual export format, the list may also include additional packages that are not strictly required for import processing alone (they are exported to err "on the safe side").
With two or fewer literals, everything has bit length 1.
WithCancel returns a copy of parent with a new Done channel.
WithCancel should return a canceled context on a canceled parent.
WithClientTrace returns a new context based on the provided parent ctx.
WithContext returns a shallow copy of r with its context changed to ctx.
WithDeadline returns a copy of the parent context with the deadline adjusted to be no later than d.
WithPadding creates a new encoding identical to enc except with a specified padding character, or NoPadding to disable padding.
WithTimeout returns WithDeadline(parent, time.Now().Add(timeout)).
WithValue returns a copy of parent in which the value associated with key is val.
Within a package, generate processes the source files in a package in file name order, one at a time.
Within a quoted-field a quote character followed by a second quote character is considered a single quote.
Within a source file, generate runs generators in the order they appear in the file, one at a time.
Within the subtree rooted at foo, an import of "crash/bang" resolves to "foo/vendor/crash/bang", not the top-level "crash/bang".
Within these functions, use the Error, Fail or related methods to signal failure.
Within this subspace, the first arch-specific opcode should be at offset A_ARCHSPECIFIC.
Without --overwrite bzr will not pull tags that changed.
Without a Content-Length.
Without a list of paths, gotype reads from standard input, which must provide a single Go source file defining a complete package.
Without a search path (or with a trailing dot), the queries are just kinda useless, but don't reveal anything private.
Without an explicit path, it processes the standard input.
Without any roots specified we should get a system roots error.
Without conflicts, add the new field and return.
Without synchronization, the initialization writes and the "publication" write may be reordered, allowing the other processor to follow the pointer and observe an uninitialized object.
Without the fix, this loops forever or crashes.
Without the type information, gdb can't use the locations, so we don't bother to save them.
Without them, we only have to mark variables, see *Var case below).
Without this, if .K is empty then .V is the value of checked, but otherwise .V is the value of the attribute named .K.
WordDecoder optionally specifies a decoder for RFC 2047 encoded-words.
Work around Leopard bug that doesn't set FPE_INTDIV.
Work around for dot bug which misses quoting some ampersands, resulting on unparsable SVG.
Work around this by subtracting the leading family and len.
Work around this for now, but we should fix it in go/doc.
Work around what appears to be a race with Linux's proc filesystem (as used by lsof).
Work here is duplicated in scanblock and above.
Work out a way to handle these.
Worker thread parking/unparking.
Works regardless: we print it as a pointer.
Worse, in such a binary distribution, those rebuilds might not even have permission to update the cached build output.
Would save 1 byte (pointerTag) per *T and reduce the typIndex size (at the cost of a canonicalization map).
Wrap default case with label.
Wrap in extra struct to hide interface type.
Wrap the Body reader with one that replies on the connection
Wrapper around strconv.ParseFloat(x, 32).
Wrapper around strconv.ParseFloat(x, 64).
Wrapper around sysAlloc that can allocate small chunks.
Wrapper around the accept system call that marks the returned file descriptor as nonblocking and close-on-exec.
Wrapper around the socket system call that marks the returned file descriptor as nonblocking and close-on-exec.
Wrapper calls into gcc, passing a pointer to the argument frame.
Wrappers around formatter that automatically sets paxHeaders if the argument extends beyond the capacity of the input byte slice.
Write (via the embedded io.Writer interface) adds more data to the running hash.
Write .debug_info Compilation Unit Header (sec 7.5.1) Fields marked with (*) must be changed for 64-bit dwarf This must match COMPUNITHEADERSIZE above.
Write .debug_line Line Number Program Header (sec 6.2.4) Fields marked with (*) must be changed for 64-bit dwarf
Write C main file for using gcc to resolve imports.
Write Content-Length and/or Transfer-Encoding whose values are a function of the sanitized field triple (Body, ContentLength, TransferEncoding)
Write Elf_Note header.
Write Go output: Go input with rewrites of C.xxx to _C_xxx.
Write a pointer using memmove.
Write all pcs to addr2line.
Write always succeeds and writes to rw.Body, if not nil.
Write an image with bounds 2x1 but tc.nPix pixels.
Write an image with bounds 2x1, as per TestDecode.
Write any buffered data to the underlying writer (standard output).
Write any final bits out, using full-byte writes, even for the final byte.
Write appends the contents of p to the buffer, growing the buffer as needed.
Write args to the stack
Write argsize and closure (args to Newproc/Deferproc).
Write barrier becomes nop.
Write barrier calls must not happen during critical GC and scheduler related operations.
Write barrier now handled.
Write barriers are disallowed because this is used by gcDrain after it has ensured that all work is drained and this must preserve that condition.
Write barriers on workbuf pointers may also be dangerous in the GC.
Write barriers, root discovery, stack scanning, and object scanning produce pointers to grey objects.
Write body and trailer
Write calls encode to serialize the file set s.
Write characters before the encoded-word.
Write copies bytes from p into the buffer and wakes a reader.
Write copies bytes from p into the buffer.
Write data descriptor.
Write directly from p to avoid copy.
Write encodes p using quoted-printable encoding and writes it to the underlying io.Writer.
Write exactly n digits to d.
Write final partial bitmap byte if any.
Write footer with timer frequency.
Write half the input and read back.
Write implements the Conn Write method.
Write implements the standard Write interface: it writes data to the pipe, blocking until readers have consumed all the data or the read end is closed.
Write in another goroutine.
Write is the function to call to emit formatted output to be printed.
Write it without any leading and trailing space.
Write len (and cap if needed) back to x.
Write len, cap, base to result.
Write must not modify the slice data, even temporarily.
Write new environment variables.
Write nil to indicate iteration end (see cmd/internal/gc/range.go).
Write nil using memclr.
Write nwrite bytes using buffer size bs.
Write of x must be under the mutex.
Write operations must do rwlock(false)/rwunlock(false).
Write out a wrapper for a function when using gccgo.
Write out the C header allowing C code to call exported gccgo functions.
Write out the various stubs we need to support functions exported from Go so that they are callable from C.
Write returns the error ErrWriteTooLong if more than hdr.Size bytes are written after WriteHeader.
Write reversed decimal in buf.
Write s into b, terminating it with a NUL if there is room.
Write second Go output: definitions of _C_xxx.
Write sends a log message to the syslog daemon.
Write sequence of MOV 0, off(base) instead of using STOSL.
Write sequence of MOV 0, off(base) instead of using STOSQ.
Write should be considered operational until it returns an error, regardless of any errors returned on the Read side.
Write some random extraneous data.
Write symbol resolver stub (just a branch to the glink resolver stub)
Write text to standard output.
Write the End Of Image marker.
Write the GZIP header lazily.
Write the Huffman tables.
Write the PLTE and tRNS (if applicable).
Write the Start Of Image marker.
Write the actual image data to one or more IDAT chunks.
Write the compressed bytes.
Write the contents of data as one chunk to Wire.
Write the digits of integer: the digits of rest are omitted.
Write the encoding directly into the output buffer.
Write the filename and IHDR.
Write the final bits.
Write the graphic control for the transparent index.
Write the header of a dynamic Huffman block to the output stream.
Write the image data.
Write the image dimensions.
Write the quantization tables.
Write the request concurrently with waiting for a response, in case the server decides to reply before reading our full request body.
Write the runes out using WriteRune
Write the savedCode if valid.
Write the xor to dst, then encrypt in place.
Write to -dynout argument or to standard output.
Write to sparseMap instead of using the headers map.
Write to stderr for command-line programs.
Write to stderr just in case user has root on device and has run adb shell setprop log.redirect-stdio true
Write whole bitmap bytes.
Write writes a compressed form of p to the underlying io.Writer.
Write writes a compressed representation of p to e's underlying writer.
Write writes a header in wire format.
Write writes a request.
Write writes an HTTP/1.1 request, which is the header and body, in wire format.
Write writes buf to the writer b.
Write writes data to the connection.
Write writes data to w, which will eventually write the compressed form of data to its underlying writer.
Write writes len(b) bytes to the File.
Write writes len(p) bytes from p to the underlying data stream.
Write writes r to w in the HTTP/1.n server response format, including the status line, headers, body, and optional trailer.
Write writes resp in response to req.
Write writes the binary representation of data into w.
Write writes the contents of p into the buffer.
Write writes the data to the connection as part of an HTTP reply.
Write writes the headers described in h to w.
Write writes the index x to w.
Write writes the profile as a gzip-compressed marshaled protobuf.
Write writes to the buffer to satisfy io.Writer.
Write writes to the current entry in the tar archive.
Write x into b, as binary (GNUtar/star extension).
WriteAddr writes an address of size siz into s at offset off.
WriteAll writes multiple CSV records to w using Write and then calls Flush.
WriteAt writes len(b) bytes to the File starting at byte offset off.
WriteAt writes len(p) bytes from p to the underlying data stream at offset off.
WriteByte appends the byte c to the buffer, growing the buffer as needed.
WriteByte writes a single byte.
WriteBytes writes a slice of bytes into s at offset off.
WriteCloser is the interface that groups the basic Write and Close methods.
WriteColumn writes raw HTML in a column headed by title.
WriteContinuation writes a CONTINUATION frame.
WriteData writes a DATA frame.
WriteExpr writes the (possibly simplified) string representation for x to buf.
WriteField calls CreateFormField and then writes the given value.
WriteField encodes f into a single Write to e's underlying Writer.
WriteFile writes data to a file named by filename.
WriteFloat32 writes f into s at offset off.
WriteFloat64 writes f into s at offset off.
WriteFunc writes f in a column headed by title.
WriteHeader called (explicitly or implicitly).
WriteHeader calls Flush if it is not the first header.
WriteHeader sends an HTTP response header with status code.
WriteHeader sets rw.Code.
WriteHeader writes hdr and prepares to accept the file's contents.
WriteHeaders writes a single HEADERS frame.
WriteHeapDump suspends the execution of all goroutines until the heap dump is completely written.
WriteHeapDump writes a description of the heap and the objects in it to the given file descriptor.
WriteHeapProfile is shorthand for Lookup("heap").WriteTo(w, 0).
WriteInt writes an integer i of size siz into s at offset off.
WriteMsgIP writes a packet to addr via c, copying the payload from b and the associated out-of-band data from oob.
WriteMsgUDP writes a packet to addr via c if c isn't connected, or to c's remote destination address if c is connected (in which case addr must be nil).
WriteMsgUnix writes a packet to addr via c, copying the payload from b and the associated out-of-band data from oob.
WriteOff writes a 4 byte offset to rsym+roff into s at offset off.
WritePriority writes a PRIORITY frame.
WriteProxy is like Write but writes the request in the form expected by an HTTP proxy.
WritePushPromise writes a single PushPromise Frame.
WriteRSTStream writes a RST_STREAM frame.
WriteRawFrame writes a raw frame.
WriteRequest must be safe for concurrent use by multiple goroutines.
WriteResponse must be safe for concurrent use by multiple goroutines.
WriteRune appends the UTF-8 encoding of Unicode code point r to the buffer, returning its length and an error, which is always nil but is included to match bufio.Writer's WriteRune.
WriteRune writes a single Unicode code point, returning the number of bytes written and any error.
WriteSeeker is the interface that groups the basic Write and Seek methods.
WriteSettings writes a SETTINGS frame with zero or more settings specified and the ACK bit not set.
WriteSettings writes an empty SETTINGS frame with the ACK bit set.
WriteSignature writes the representation of the signature sig to buf, without a leading "func" keyword.
WriteString always succeeds and writes to rw.Body, if not nil.
WriteString appends the contents of s to the buffer, growing the buffer as needed.
WriteString is like Write, but writes the contents of string s rather than a slice of bytes.
WriteString writes a string of size siz into s at offset off.
WriteString writes a string.
WriteString writes s to w with all replacements performed.
WriteString writes the contents of the string s to w, which accepts a slice of bytes.
WriteSubset writes a header in wire format.
WriteTo can be used to produce output that can be later be loaded with ParseTestData.
WriteTo implements io.WriterTo.
WriteTo implements the PacketConn WriteTo method.
WriteTo implements the io.WriterTo interface.
WriteTo writes Go source code to w that contains the recorded traffic.
WriteTo writes a packet with payload b to addr.
WriteTo writes a pprof-formatted snapshot of the profile to w.
WriteTo writes a string representation of the scope to w, with the scope elements sorted by name.
WriteTo writes data to w until the buffer is drained or an error occurs.
WriteTo writes data to w until there's no more data to write or when an error occurs.
WriteToIP writes an IP packet to addr via c, copying the payload from b.
WriteToUDP writes a UDP packet to addr via c, copying the payload from b.
WriteToUnix writes a packet to addr via c, copying the payload from b.
WriteType writes the string representation of typ to buf.
WriteWindowUpdate writes a WINDOW_UPDATE frame.
Writer implements a seekable buffered io.Writer.
Writer is the interface that wraps the basic Write method.
Writer maintains its own toggle to avoid races looking at signal handler's toggle.
Writer whose Write method always returns an error.
Writer writes a single CSV record to w along with any necessary quoting.
Writer, to write dot-encoded text blocks.
WriterAt is the interface that wraps the basic WriteAt method.
WriterTo is the interface that wraps the WriteTo method.
Writers make a full copy of the map and atomically update the pointer to point to the new map.
Writes all objects in the heap plus additional info (roots, threads, finalizers, etc.) to a file.
Writes may be buffered and not flushed until Close.
Writes test binary as -c would.
Writes to a Writer are compressed and written to w.
Writes to pointers to traceAllocBlocks do not need write barriers.
Writes to the returned Writer are compressed and written to w.
Writes to the returned io.WriteCloser are compressed and written to w.
Writes to the returned writer are compressed and written to w.
Writing assembly test cases to divine which interpretation the CPU uses might clarify the situation, but more likely it would make the situation even less clear.
Writing before sending a header sends an implicitly empty 200 OK header.
Writing object files.
Writing of Go object files.
Writing to chunkedWriter translates to writing in HTTP chunked Transfer Encoding wire format to the underlying Wire chunkedWriter.
Written in one instruction, read in the next, otherwise unused, no jumps to the next instruction.
Written like this to avoid integer overflow.
Wrong interface definitions may have types lacking a symbol.
Wrong number of args:
WrongString is a struct that's misusing the ,string modifier.
WroteHeaders is called after the Transport has written the request headers.
WroteRequest is called with the result of writing the request and any body.
WroteRequestInfo contains information provided to the WroteRequest hook.
X0: zero DI: ptr to memory to be zeroed DI is updated as a side effect.
X509KeyPair parses a public/private key pair from a pair of PEM encoded data.
XACQUIRE/XRELEASE adjustment.
XORKeyStream XORs each byte in the given slice with a byte from the cipher's key stream.
XORKeyStream can work in-place if the two arguments are the same.
XORKeyStream sets dst to the result of XORing src with the key stream.
Xcode for OS X 10.9 Mavericks will ship a fake "gcc" binary that actually runs clang.
Xs accepts any non-empty run of the verb character
Y0 returns the order-zero Bessel function of the second kind.
Y1 returns the order-one Bessel function of the second kind.
YCbCr is an in-memory image of Y'CbCr colors.
YCbCr represents a fully opaque 24-bit Y'CbCr color, having 8 bits each for one luma and two chroma components.
YCbCrK or CMYK image.
YCbCrModel is the Model for Y'CbCr colors.
YCbCrSubsampleRatio is the chroma subsample ratio used in a YCbCr image.
YCbCrToRGB converts a Y'CbCr triple to an RGB triple.
YCbCrToRGB does saturating arithmetic.
YOffset returns the index of the first element of Y that corresponds to the pixel at (x, y).
YStride is the Y slice index delta between vertically adjacent pixels.
Yacc is a version of yacc for Go.
Year minus one tests (non-leap)
Year one tests (non-leap)
Year returns the year in which t occurs.
Yes, functions can be named _.
Yes, really good diagnostics, clang.
Yet another CA reversed the order of the bit flags in the keyUsage due to confusion over encoding endianness, essentially setting a random keyUsage in certificates that it issued.
Yi is the set of Unicode characters in script Yi.
Yields a 32-bit output from a 32-bit input
Yn returns the order-n Bessel function of the second kind.
You can control this by setting the CGO_ENABLED environment variable when running the go tool: set it to 1 to enable the use of cgo, and to 0 to disable it.
You can do this by setting the CC_FOR_TARGET environment variable when building the toolchain using make.bash, or by setting the CC environment variable any time you run the go tool.
You can layer EXPLICIT and IMPLICIT tags to an arbitrary depth, however we don't support that here.
You can use this software for whatever you want.
You can't get any smaller than a.
You don't have to pay us.
You may not pretend that you wrote this software.
ZERO OMIT image.ZP is the zero point -- the origin.
ZLIB (RFC 1950) is big-endian, unlike GZIP (RFC 1952).
ZLIB has a two-byte header (as documented in RFC 1950).
ZP is the zero Point.
ZR is the zero Rectangle.
ZR: always zero R16 (aka REGRT1): ptr to memory to be zeroed - 8 On return, R16 points to the last zeroed dword.
Zero ambiguously live variables.
Zero argument values might be cached, so remove them there.
Zero arguments: go doc Show the documentation for the package in the current directory.
Zero is a special case, be sure it is done right.
Zero is always a special case.
Zero is an invalid entry since the lower 12 bits of a valid entry must be a non-literal code.
Zero is written as a single 0 zero rather than no bytes.
Zero length but not nil.
Zero means no deadline, or dependent on the operating system as with the Timeout option.
Zero means no dependency.
Zero means no timeout.
Zero means to use a default limit.
Zero or more comma-separated operands, one per loop.
Zero padding does not apply to infinities and NaN.
Zero returns a Value representing the zero value for the specified type.
Zero takes a Type and returns a Value representing a zero value for that type.
Zero the now unused input area of args, because the Values returned by this function contain pointers to the args object, and will thus keep the args object alive indefinitely.
Zero value must be stateInit
Zero- or single-element array, of any type.
Zero-argument macros are tricky.
ZeroUntil is usually called in preparation for a call to Repeat, Append, or End.
Zilo_m is the same but a long (32-bit) immediate.
Zl is the set of Unicode characters in category Zl.
Zone computes the time zone in effect at time t, returning the abbreviated name of the zone (such as "CET") and its offset in seconds east of UTC.
Zp is the set of Unicode characters in category Zp.
Zs is the set of Unicode characters in category Zs.
_ (blank) caused crash
_ variables don't count as new variables
_2006 is really a literal _, followed by stdLongYear
_Ctype_void, denotes C's void
_ENOMEM is defined in mem_bsd.go for nacl.
_FullName finds real name of symbol sym.
_Gidle means this goroutine was just allocated and has not yet been initialized.
_Gscanrunning is different: it is used to briefly block state transitions while GC signals the G to scan its own stack.
_NSIG is the number of signals on this operating system.
_StringTable is a COFF string table.
__.PKGDEF has no cgo section - those are in the C compiler-generated object files.
__attribute__((__aligned__(16)))
__i686.get_pc_thunk.bx is allowed to be duplicated, to workaround that we set dupok.
__ieee754_j0(x), __ieee754_y0(x) Bessel function of the first and second kinds of order zero.
__ieee754_j1(x), __ieee754_y1(x) Bessel function of the first and second kinds of order one.
__ieee754_jn(n, x), __ieee754_yn(n, x) floating point Bessel's function of the 1st and 2nd kind of order n
__ieee754_lgamma_r(x, signgamp) Reentrant version of the logarithm of the Gamma function with user provided pointer for the sign of Gamma(x).
__ieee754_log(x) Return the logarithm of x
__ieee754_sqrt(x) Return correctly rounded sqrt.
_cgo_Cfunc_f invokes the actual C function f with arguments taken from the frame structure, records the results in the frame, and returns to runtime.asmcgocall.
_cgo_mmap is filled in by runtime/cgo when it is linked into the program, so it is only non-nil when using cgo.
_cgoexp_GoF calls runtime.cgocallback(p.GoF, frame, framesize).
_cgoexp_GoF immediately returns to crosscall2, which restores the callee-save registers for gcc and returns to GoF, which returns to f.
_panic must be cleared before d is unlinked from gp.
_test.go files in package
_test.go files outside package
`) fmt.Fprintln(b, t.c) fmt.Fprintln(b, `
a "correcting" unindent immediately following a line break is applied before the line break if there is no comment between (see writeWhitespace)
a backward jump, increases loopdepth
a bit inefficient but this doesn't need to be fast.
a bunch of chunks, each with a different alignment mod 16
a cache of already-constructed actions
a cache of created directories
a cache of supported compiler flags
a channel (just for the fun of it)
a clone of slices to give out to clients, indexed by the the original slice's first byte address.
a coarser generic description of T, e.g. T's underlying type
a constant index i must be in bounds
a conversion, not a call
a copy of runtime.typeAlg
a default value for INTEGER typed fields (maybe nil).
a deferred func that stops a panic makes the deferproc return 1.
a few A records, no AAAA records
a field declaration cannot start with a '(' but we accept it here for more robust parsing and better error messages (parseFieldDecl will check and complain if necessary)
a float-to-int or int-to-float conversion requires the source operand in a register
a float32-to-float64 or float64-to-float32 conversion requires the source operand in a register
a frameParser parses a frame given its FrameHeader and payload bytes.
a goroutine is writing to the map sentinel bucket ID for iterator checks
a graphical character according to the Unicode definition.
a harmless forward jump
a heading must start with an uppercase letter
a hint for print go:nosplit
a hint wildcard for Go 1.0 undocumented behavior
a keyAgreement implements the client and server side of a TLS key agreement protocol by generating and processing key exchange messages.
a letter that is neither upper nor lower case.
a limit records known upper and lower bounds for a value.
a limitFact is a limit known for a particular value.
a line of source text
a list of identifiers looks like a list of type names
a map from entry format ids to their descriptions
a map to hold pax header records, if any are needed
a movb into a register can smash the entire 32-bit register without causing any trouble.
a movb into a register can smash the entire 64-bit register without causing any trouble.
a must be a power of 2.
a named type may be referred to before the underlying type is known - set it up
a nil entry indicates a name collision Add adds all functions in list to the method set s.
a nil entry indicates a name collision Add adds field f to the field set s.
a non-constant result implies a function call
a non-empty literal prefix is used to determine possible match start indices with Lookup
a non-zero base offset increment
a normal exit returns no message
a package that uses unsafe on the inside but not in it's api
a pair of IPv4 server and IPv6 client
a pair of IPv6 server and IPv4 client
a pair of values, ordered by ID.
a printable character according to Go's definition.
a punctuation character.
a qualified name cannot be a parameter name
a re-usable buffer for readContinuedLineSlice
a read from ch has occurred
a register, such as AX.
a semicolon is not permitted unless automatically inserted
a series of FastCGI records that start a request and begin sending the request body
a single -m is useful for verifying which calls get inlined or not, more is for debugging, and may go away at any point.
a single entry's description: a sequence of attributes
a slice length, corruptions are not handled yet.
a string plus adding zeros must make distinct hashes
a struct field that Formats
a struct field that GoStrings
a switch for enabling/disabling instruction scheduling
a symbolic character.
a valid expression followed by extra tokens is invalid
a valid move was found and executed, see if this new board has a solution
a valid type expression
a value resulting from taking the address of a value, or a value constructed from an offset of a non-nil ptr (OpAddPtr) implies it is non-nil
a variadic function accepts an "empty" last argument: count one extra
a whole program version of the example
a zero pointer means zero length
a, b must not be used anymore (may be aliases with u) v might be 0 now
a.neg determines the sign of the Rat, b.neg is ignored.
aLongTimeAgo is a non-zero time, far in the past, used for immediate cancelation of dials.
abbrev returns the abbreviations to use for the given zone z.
abbreviated name, "CET"
abbreviation for Mode().IsDir()
abort request body write, but send stream reset of cancel.
abs returns the absolute time stored in t, as seconds and nanoseconds.
abs returns the time t as an absolute time, adjusted by the zone offset.
absClock is like clock but operates on an absolute time.
absDate is like date but operates on an absolute time.
absDomainName returns an absolute domain name which ends with a trailing dot to match pure Go reverse resolver and all other lookup routines.
absString returns abs as a decimal string.
absWeekday is like Weekday but operates on an absolute time.
absolute file name, for pcln tables
absolute relocation, don't bother reading the null symbol
absolute value of the integer
absorb released pages
accelerate common case (7bit ASCII)
accept checks the next rune in the input.
accept consumes the next rune if it's from the valid set.
accept potential name list but complain
accept potential vardcl but complain (for test/syntax/forvar.go)
accept the bare quote
acceptRange gives the range of valid values for the second byte in a UTF-8 sequence.
acceptRun consumes a run of runes from the valid set.
access register (32-bit)
account for 2 guard pages
account for the above fields
accumulate powers of two into exp.
accumulated ExpFunc from Files
accumulated Name from Files
accurate position of next item
acePrefix is the ASCII Compatible Encoding prefix.
acosh(NaN) is NaN without signal.
acquire that many iterations from globalN at once
action for cgo binary if needed
action never looks for p in a shared library, but may find p's dependencies in a shared library if buildLinkshared is true.
action returns the action for applying the given operation (mode) to the package.
action within rule...
action1 returns the action for applying the given operation (mode) to the package.
action1 will look for p in a shared library if lookshared is true.
actionList returns the list of actions in the dag rooted at root as visited in a depth-first post-order traversal.
actions that must happen before this one
actual   receiver "T" or "*T"
actual base is 10 unless there's a base prefix
actualPrec returns the number of actually used mantissa bits.
actually just escapes its scope
actually named omitempty, not an option
adapt is the bias adaptation function specified in section 6.1.
adapted from hacker's delight
adapted from hacker's delight.
adapted from libmach.
adapterAddresses returns a list of IP adapter and address structures.
adaptors for use by rewrite rules
add "lib" to the final element
add (possibly unnamed) pkg to local packages
add 1 iff n1 is negative.
add SA_ONSTACK to libc handler
add a .note.GNU-stack section to mark the stack as non-executable
add adds an entry to q for pc, unless the q already has such an entry.
add adds n bytes (positive or negative) to the flow control window.
add adds pc to the head of the linked list.
add adds the stack trace to the profile.
add adds tree to t.treeSet.
add all dominated blocks to the work list
add any assignments in r to top
add blank to align final star
add block to schedule
add build flags to testFlagDefn
add carry flag to target
add clearing of the output parameters
add comment group to the comments list
add current cell if not empty
add expressions to automatic
add file and verify name and size
add file name to error
add import to file scope
add it to the base type method list
add k to y's exponent
add library to library list.
add lines individually and provide alternative line information
add lines individually and verify all positions
add lines with SetLines and verify all positions
add lines with SetLinesForContent and verify all positions
add method to type unless type was imported before and method exists already TODO(gri) This leads to a quadratic algorithm - ok for now because method counts are small.
add more cases as needed
add mov b,rn just after r
add negated length to sl
add new entries as needed
add new methods to already type-checked types (from a prior Checker.Files call)
add numerator (might overflow).
add package documentation
add paths for runtime and main, which 6l imports implicitly.
add pc to r11 might be part of a PIC floating point move (or might not, but again no harm done).
add pe section and pad it at the end
add position to set of dot-import positions for this file (this is only needed for "imported but not used" errors)
add records that we'd like value vid to be in register r.
add required parameters to request 1
add simulates running benchmarks in sequence in a single iteration.
add some lines and alternative file infos
add space for mantissa and exponent
add the .S files only if we are using cgo (which means gcc will compile them).
add the file to the file set
add this import during rewrite
add to got: pointer to current pos in plt
add to list of unresolved targets
add up all partial products
add windows specific tests
add x as element Len()
add/subtract extended register
add1 returns the byte pointer p+1.
addBuildFlags adds the flags common to the build, clean, get, install, list, run, and test commands.
addConnIfNeeded makes a NewClientConn out of c if a connection for key doesn't already exist.
addCounters takes a list of statements and adds counters to the beginning of each basic block at the top level of that list.
addDep adds obj as a dependency to d.
addDep notes that x now depends on dep, and x's finalClose won't be called until all of x's dependencies are removed with removeDep.
addDereference constructs a suitable OIND note applied to src.
addFieldInfo adds finfo to tinfo.fields if there are no conflicts, or if conflicts arise from previous fields that were obtained from deeper embedded structures than finfo.
addFile adds a single file to the archive
addFiles adds files to the archive.
addFuncs adds to values the functions in funcs.
addImport adds an import for the specified path, if one does not already exist, and returns the local package name.
addImport adds the import path to the file f, if absent.
addJacobian takes two points in Jacobian coordinates, (x1, y1, z1) and (x2, y2, z2) and returns their sum, also in Jacobian form.
addLocked returns a new Status without locking.
addPkgdef adds the __.PKGDEF file to the archive, copied from the first Go object file on the file list, if any.
addReflectOff adds a pointer to the reflection lookup map in the runtime.
addToFlag appends args to flag.
addUnusedImport adds the position of a dot-imported package pkg to the map of dot imports for the given file scope.
addValueFuncs adds to values the functions in funcs, converting them to reflect.Values.
addVariables adds to the end of the file the declarations to set up the counter and position variables.
addb returns the byte pointer p+n.
adddot1 returns the number of fields or methods named s at depth d in Type t.
addgostring adds str, as a Go string value, to s.
adding more code - even though it is dead - now requires a return
adding the same offset again should be ignored
additional args for runProgram
additional data for functions
additional flags to pass to rfork
additional pretend arguments for each Value.
addr converts the address of the expression n to SSA, adds it to s and returns the SSA result.
addr is always a canonicalAddr with a host and port.
addr returns the first hop "host:port" to which we need to TCP connect.
addr-spec has a more restricted grammar than name-addr, so try parsing it first, and fallback to name-addr.
addr16 records the eight 16-bit addressing modes.
addrBits is the number of bits needed to represent a virtual address.
addrPrefixLen returns an appropriate prefix length in bits for ip from pfxs.
addrRecordList converts and returns a list of IP addresses from DNS address records (both A and AAAA).
addrescapes tags node n as having had its address taken by "increasing" the "value" of n.Esc to EscHeap.
address contains port only
address mode (width in bits)
address of TLS variable
address of first byte of span aka s.base()
address parses the operand into a link address structure.
address size override
address taken - no accurate end
address taken, even if not moved to heap
address, flag, reference, string
addressable (and thus assignable) operands
addresses of PPARAM and PPARAMOUT variables.
adds "adjust" to all the argument locations for the call n.
addstring, addaddr, etc., mark the symbols as reachable.
adjBlock prints an "adjacent" block (e.g., a for-loop or function body) following a header (e.g., a for-loop control clause or function signature) of given headerSize.
adjust Gobuf as if it executed a call to fn and then did an immediate gosave.
adjust Gobuf as if it executed a call to fn with context ctxt and then did an immediate Gosave.
adjust Gobuf as it if executed a call to fn with context ctxt and then did an immediate gosave.
adjust as appropriate, this is an approximate value
adjust for fraction, if any
adjust mantissa: divide by 2 to compensate for exponent adjustment
adjust match if necessary
adjust precision depending on compiler
adjust stack on return by (in bytes) (386 only)
adjustSourcePath adjusts the path for a source file by trimming known prefixes and searching for the file on all parents of the current working dir.
adjustURL updates the profile source URL based on heuristics.
adjusted position info should have changed
adjustment needed for odd addresses
advance advances the markBits to the next object in the span.
advance consumes n bytes of the buffer.
advance determines whether the next characters in the input match those of the format.
advance for correct error position
advance tokenstate from a separator state to a value state
advancePC advances "operation pointer" (the combination of Address and OpIndex) in r.state by opAdvance steps.
advanceUses advances the uses of v's args from the state before v to the state after v.
advertised authentication mechanisms
aesCipherGCM implements crypto/cipher.gcmAble so that crypto/cipher.NewGCM will use the optimised implementation in this file when possible.
affineFromJacobian reverses the Jacobian transform.
after EOF position doesn't change
after is the regexp suffix following after the repetition operator.
after runs after all testing.
again inefficient but doesn't need to be fast.
again, but without the leading print(1).
again, with func literals
agree with the tables.
ah and al are the successive approximation high and low values.
alarm is called if the timeout expires.
algtype is like algtype1, except it returns the fixed-width AMEMxx variants instead of the general AMEM kind when possible.
algtype1 returns the AlgKind used for comparing and hashing Type t.
alias for -sort address
alias reports whether x and y share the same base array.
align Context to 16 bytes
align returns the result of rounding x up to a multiple of n.
align the last instruction (the actual BL) to the last instruction in a bundle
align to 16-byte boundary
align to page boundary so as not to mix rodata and executable text.
alignment of struct field with this type
alignment of variable with this type
aline's don't exist in the Go 1.2 table.
alineFromLine will always return alines in the first file, so track which lines we've seen.
all (recursively) imported dependencies Error information
all 1s indicating all free.
all CFI offset calculations include multiplication with this factor
all COFF symbols (including auxiliary symbol records)
all but InstMatch, InstFail
all bytes should have been written, by definition of Write method in io.Writer
all calls to C.xxx in AST
all code must be indented by at least 'indent' tabs
all current buckets are full, allocate a new one.
all defined variables at the end of each block.
all different bit numbers
all done, in output ordering
all elements are different
all elements are the same
all elements must have keys
all for ease of drivers, and to prevent drivers from messing up conversions or doing them differently.
all immediates are 16-bit sign-extended unless moving into a register.
all is the scope of all declared labels, parent the set of labels declared in the immediately enclosing block, and lstmt is the labeled statement this block is associated with (or nil).
all list entries on a single line
all other nodes are expressions or types
all other nodes are not legal composite literal types
all other nodes are not proper expressions
all other nodes are not type names
all references to C.xxx in AST
all results computed - sorted res and exp must be equal
all semicolons required (they are not separators, print them explicitly)
all spans are swept span lookup
all stacks in s are allocated.
all statements are empty
all subsequent i's should also return 1
all test cases below from strconv/ftoa_test.go
all the composite literal fields are keyed
all the elements in the field must be satisfied.
all values in this equiv class that are not equivalent to v get moved into another equiv class.
allArchiveActions returns a list of the archive dependencies of root.
allIdents returns the names of the identifiers under the Ident field of the node, which might be a singleton (Identifier) or a slice (Field or Chain).
allPackagesInFS is like allPackages but is passed a pattern beginning ./ or ../, meaning it should scan the tree rooted at the given directory.
alloc allocates a new thread with the given instruction.
alloc allocates n-byte block.
alloc performs only small allocations for sanity testing.
allocBits and gcmarkBits hold pointers to a span's mark and allocation bits.
allocBits is a bitmap of objects in this span.
allocBytes returns the number of bytes allocated by invoking f.
allocCache holds the complement of allocBits, thus allowing ctz (count trailing zero) to use it directly.
allocCache is shifted such that the lowest bit corresponds to the bit freeindex.
allocInterleaved stress-tests the heap sampling logic by interleaving large and small allocations.
allocObjects examines the profile records for the named function and returns the allocation stats aggregated by source line number.
allocReg chooses a register for v from the set of registers in mask.
allocSize is the total size of the allocated memory.
allocValToReg allocates v to a register selected from regMask and returns the register copy of v.
allocate a bunch of stack frames and spray them with pointers
allocate a new f2 each time
allocate buffer for conversion
allocate enough room to hold another production
allocate flags register
allocate register of type t, leave in n.
allocate stacks from system memory instead of the heap
allocate struct with pointer to avoid hitting tinyalloc.
allocated for garbage collected heap
allocated for use by stack allocator
allocation sites, when -v is given
allocator for mcache*
allocator for specialfinalizer*
allocator for specialprofile*
allow "'" for possessive "'s" only
allow Perl extensions
allow SB and SP to pass each other.
allow SB to pass SB iff doffsets are ok anything else conflicts
allow deadcode to clean up after nilcheckelim
allow following code improvement to be suppressed
allow reference to first word (pointer)
allow unkeyed locally defined composite literal
allowed input registers
allowed slack - we don't need to be perfectly random
allowedMismatchObjdump reports whether the mismatch between text and dec should be allowed by the test.
allowedMismatchPlan9 reports whether the mismatch between text and dec should be allowed by the test.
allowedMismatchXed reports whether the mismatch between text and dec should be allowed by the test.
almost no files have extra line infos
alpha and omega are the beginning and end of time for zone transitions.
alphanum zone identifier
alphanumeric identifier not starting with '.'
alphanumeric identifier starting with '.'
already checked - nothing to do
already have a mapping for key.
already have a nilcheck in the dominator path, or this block is a success block for the same value it is checking
already have this witness
already printed error about this
already progressed, no need to advance
already swept empty span, all subsequent ones must also be either swept or in process of sweeping
already taken care of
already wrapped around from end of bucket array to beginning
already written out by export
also associated with T x
also associated with s1 associated with s2 also associated with s2
also needs file cmplxdivide1.go - ignore
also removes unresolved sentinel
also resets gp.traceseq/tracelastp
also test it starting backwards
also use temporary if possible stack overlap.
also works for append(slice, string).
also, don't follow too many pointers -- maybe there's a loop.
alt of failure is other
alt optionally specifies the TLS NextProto RoundTripper.
altGetRandom if non-nil specifies an OS-specific function to get urandom-style randomness.
alternate between bad conn and not bad conn
alternate escapings of path survive round trip
alternate replaces the top of the stack (above the topmost '(') with its alternation.
alternate source of bits Heap bitmap output.
alternate timezone offset
always call chdir when getwd returns an error
always followed by a read.
always keep imports so we can collect them
always permit ellipsis for more fault-tolerant parsing
always permit optional initialization for more tolerant parsing
alwaysNewConn forces a new connection to the database.
amd64 and s390x use PC relative addressing.
amd64 systems can place the stack above the VA hole, so we need to sign extend val before unpacking.
amount of padding (ignored) after current file entry
amount of padding to write after current file entry
an EOF terminates a line
an ONAME *gc.Node representing a variable on the stack
an empty resolv.conf should use defaultNS as name servers
an error, save the bytes for the next read
an extra bit to identify an escaped variable
an indexed string always yields a byte value (not a constant) even if the string and the index are constant
an integer constant we can use as an immediate is simpler than a variable - we can use the immediate in the adjustment instruction directly - so it goes on the right.
an invalid expression
an item calling for a reduction
an old fashion, AF_UNSPEC or unknown means AF_INET
an optimization is done if there is no constant part 3.
an uncaught panic should still work after goexit
an untyped constant must be representable as Int
an untyped constant number can alway be considered as a complex constant
an untyped non-constant argument may appear if it contains a (yet untyped non-constant) shift expression: convert it to complex128 which will result in an error (shift of complex value)
an upper-case letter.
analyzeGoroutines generates statistics about execution of all goroutines and stores them in gs.
anchored search - will not run off ignore indices leading to overlapping matches
and Returns the boolean AND of its arguments by returning the first empty argument or the last argument, that is, "and x y" behaves as "if x then y else x".
and acts like an empty map.
and compute ChopMD-256(SHA-512), which is an indifferentiable MAC.
and computes the Boolean AND of its arguments, returning the first false argument it encounters, or the last argument.
and hence is not a pointer type.
and it may have a function literal.
and parses it into a linked list.
and sometimes not even that
and test against strict mode.
and then p2 linked though p2link.
and try retransmitting
and uncompressed size should be zero
and x is single-valued
android logging won't print a zero byte
annihilated by Embed0's Level1d
annihilated by Embed0's Level1e
annihilated by Embed0a's Level1d
annihilated by Embed0a.Level1e
annotateAssembly annotates a set of assembly instructions with a set of samples.
annoying case - not typechecked
anonymous field - typ must be T or *T and T must be a type name
anonymous return values, synthesize names for use in assignment that replaces return
another possible choice would be package main, but using runtime means fewer copies in .6 files.
another value to make sure something can follow map
any available address
any error encountered opening or parsing the file
any error that occurs during open of resolv.conf
any floating point operand requires register src, so goto hard to copy to register first.
any left-over identifiers didn't exist in the source
any lv that causes a fn call must be deferred until all the return arguments have been pulled from the output arguments
any non-empty string will do for now
any other 32-bit constant
any other error is fatal.
any over GRE over IPv4 tunneling
any over GRE over IPv6 tunneling
any sunk spills after first must make a copy
any type, for builtin export data
anything above this shouldn't exist
anything else is illegal
anything unknown was encountered
anything zeroed here must be zeroed in typedcl2 too.
appears to change the precision of f
append a bit to the bitmap.
append adds the Prog to the end of the program-thus-far.
append converts an OAPPEND node to SSA.
append data to the file when writing.
append is the only built-in that permits the use of ...
append ordinary arguments to LHS.
append receiver inlvar to LHS.
append seconds if appropriate
append sentinel set up iteration variables
append should not create a slice with nil pointer but non-zero len.
append varint to b.data
append(slice1, slice2...) -- slice2 itself does not escape, but contents do.
appendByteToHuffmanCode appends Huffman code for c to dst and returns the extended buffer and the remaining bits in the last element.
appendClass returns the result of appending the class x to the class r.
appendCmd appends the given command to the end of the command pipeline unless it is redundant with the last command.
appendFolded returns the result of appending the case folding of the class x to the class r.
appendFoldedRange returns the result of appending the range lo-hi and its case folding-equivalent runes to the class r.
appendHpackString appends s, as encoded in "String Literal" representation, to dst and returns the the extended buffer.
appendIndexed appends index i, as encoded in "Indexed Header Field" representation, to dst and returns the extended buffer.
appendIndexedName appends f and index i referring indexed name entry, as encoded in one of "Literal Header field - Indexed Name" representation variants, to dst and returns the extended buffer.
appendInt appends the decimal form of x to b and returns the result.
appendLiteral returns the result of appending the literal x to the class r.
appendNegatedClass returns the result of appending the negation of the class x to the class r.
appendNegatedTable returns the result of appending the negation of x to the class r.
appendNewName appends f, as encoded in one of "Literal Header field - New Name" representation variants, to dst and returns the extended buffer.
appendPCDeltaCFA appends per-PC CFA deltas to b and returns the final slice.
appendRDNs appends a relativeDistinguishedNameSET to the given RDNSequence and returns the new value.
appendRange returns the result of appending the range lo-hi to the class r.
appendTable returns the result of appending x to the class r.
appendTableSize appends v, as encoded in "Header Table Size Update" representation, to dst and returns the extended buffer.
appendVarInt appends i, as encoded in variable integer form using n bit prefix, to dst and returns the extended buffer.
appendZeros appends n 0 digits to buf and returns buf.
append_ssa.go tests append operations.
appended to slice appendee slice arg to ...
appendinit is like addinit in subr.go but appends rather than prepends.
application data waiting to be read
apply PC1 permutation to key
apply PC2 permutation to 7 byte input
apply mask to both pointer bits and mark bits
apply pending indentation
apply replaces each AST field x in val with f(x), returning val.
apply rewrite function
applyBlack combines d.img3 and d.blackPix into a CMYK image.
applyCast applies the cast implied by the given move instruction to v and returns the result.
applyRelocations applies relocations to dst.
approx time the G is blocked, in minutes
approx time when the g become blocked
arbitrary gzip response
arbitrary upper bound
arbitraryValues writes Values to args such that args contains Values suitable for calling f.
arch-specific opcodes
architectural zero register, if available
architecture dependent install root directory ("" if unknown)
architecture information
architecture-independent object file output
archive builds a .a archive from the hostobj object files.
archive opens (and if necessary creates) the named archive.
archiveMap is an archive symbol map: a mapping from symbol name to offset within the archive file.
are both reads and writes.
are not implemented by go doc.
are there any imported init functions
are there any interesting init statements
arg ST(i) with +i in opcode
arg imm8 but record as unsigned
arg is an open *File or a path string.
arg numbers are one-indexed and skip paren.
arg r16 with +rw in opcode
arg r32 with +rd in opcode
arg r64 with +rd in opcode
arg r8 with +rb in opcode
arg specifies the parameter type we look for: B, M or T.
arg to recursive call address-of appended slice...
arg0 + 2*arg1 + auxint + aux
arg0 + 4*arg1 + auxint + aux
arg0 + arg1 + auxint + aux
arg0 + auxInt + aux.(*gc.Sym)
arg0 + auxint (arg0 and result are pointers) Slices
arg0 + auxint + offset encoded in aux
arg0 / arg1, unsigned
arg0 compare to arg1, f32
arg0 compare to arg1, f64
arg0 compare to auxint
arg0 is a pointer and arg1 is an int.
arg0 is the base pointer (SB or SP, depending on whether it is a global or stack variable).
arg0 rotate left auxint, rotate amount 0-15
arg0 rotate left auxint, rotate amount 0-31
arg0 rotate left auxint, rotate amount 0-63
arg0 rotate left auxint, rotate amount 0-7 unary ops
argNum returns total number of args for the event accounting for timestamps, sequence numbers and differences between trace format versions.
argp used in Defer structs when there is no argp.
args - handle T.meth(f()) with func f() (t T, arg, arg, )
args are filled in the second pass.
args int32 TODO: Move into funcinfo.
args, reply would be the correct thing to use
argsFor returns a map from formal name to actual value for this argumented macro invocation.
argument checks passing of argument x to the i'th parameter of the given signature.
argument does not escape"
argument escapes to heap"
argument is of the form x...
argument passing to/from smagic and umagic
argument to fmt.Sprint.
argument to the function.
argument value: for TYPE_SCONST, a string for TYPE_FCONST, a float64 for TYPE_BRANCH, a *Prog (optional) for TYPE_TEXTSIZE, an int32 (optional)
argument, which means we can't see it.
arguments after flags
arguments and expected results for boundary cases
arguments and expected results for special cases
arguments checks argument passing for the call with the given signature.
arguments leak out of scope TODO: leak to a dummy node instead defer f(x) - f and x escape
arguments of fn follow fn
arguments require special handling
argv guaranteed to be a pointer now.
arithmetic (signed) right shift
arithmetic operations
arithmetic right shift does not give the correct rounding.
arityMatch checks that the lhs and rhs of a const or var decl have the appropriate number of names and init exprs.
arm and amd64 distinguish between moves that *must* sign/zero extend and moves that don't care so they can eliminate moves that don't care without breaking moves that do care.
arm and amd64 distinguish between moves that moves that *must* sign/zero extend and moves that don't care so they can eliminate moves that don't care without breaking moves that do care.
arm doesn't have a division instruction, so slowdodiv is the best that we can do.
arm soft division benchmarks adapted from http://ridiculousfish.com/files/division_benchmarks.tar.gz
arm64 needs 16-byte aligned SP, always
arm64 requires that the frame size (not counting saved LR) be empty or be 8 mod 16.
array backing buffer slice
array backing key slice
array of 1 direct iface type can be direct
array of reflect.imethod values
array with five elements
array with four elements
array, slice, and map composite literals may be simplified
arrayAt returns the i-th element of p, a C-array whose elements are eltSize wide (in bytes).
arrayType represents a fixed array type.
arrays must be sent so we know their lengths and element types.
as close to Perl as possible
as reasonable an error as any
as, ytab, andproto, opcode
as2variant returns the variant (V_*) flags of instruction as.
asReader converts an io.Reader to a reader.
asciiAlpha reports whether c is an ASCII letter.
asciiAlphaNum reports whether c is an ASCII letter or digit.
asciiEqualFold is a specialization of bytes.EqualFold for use when s is all ASCII (but may contain non-letters) and contains no special-folding letters.
ask windows for the remaining errors
asm runs the assembler in a specific directory on a specific file to generate the named output file.
asmCheckVar checks a single variable reference.
asmData assembles a DATA pseudo-op.
asmFuncData assembles a FUNCDATA pseudo-op.
asmGlobl assembles a GLOBL pseudo-op.
asmInstruction assembles an instruction.
asmJump assembles a jump instruction.
asmPCData assembles a PCDATA pseudo-op.
asmParseDecl parses a function decl for expected assembly variables.
asmText assembles a TEXT pseudo-op.
asmoutnacl assembles the instruction p.
asmoutnacl might change p in rare cases
asmoutnacl might change pc for alignment
asn1BitLength returns the bit-length of bitString by considering the most-significant bit in a byte to be the "first" bit.
assembleChildren initializes the children field of each loop in the nest.
assembler syntax for the various shifts.
assemblyPerSourceLine disassembles the binary containing a symbol and classifies the assembly instructions according to its corresponding source line, annotating them with a set of samples.
assert(pred) causes a typechecker error if pred is false.
assertableTo reports whether a value of type V can be asserted to have type T.
assertion: must not panic
assign addresses to text
assign arguments to the parameters' temp names
assign maps type strings to lists of expressions that were assigned to values of another type that were assigned to that type.
assign new elements to slots
assign parameter offsets
assign sizes, now that we know symbols in sorted order.
assign specific types so that they sort together.
assign successor names
assign the args i is now addable, prepare an indirected register to hold its address.
assign to the function out parameters, so that reorder3 can fix up conflicts
assignReg assigns register r to hold c, a copy of v.
assignTo returns a value v that can be assigned directly to typ.
assignableTo reports whether x is assignable to a variable of type T.
assigning to a struct field  is like assigning to the struct
assigning to a struct field is like assigning to the struct but here this subtlety is lost, since s.a counts as an assignment to a track-losing dereference.
assigning to an array element is like assigning to the array
assigning to expression
assignment compatible
assignment operations
assignment reports whether x can be assigned to a variable of type T, if necessary by attempting to convert untyped values to the appropriate type.
assignment statement, possibly part of a range clause
assignment to non-stack variable must be delayed if right has function calls.
assignment token, DEFINE
assignments to pointer dereferences lose track
assignsTo reports whether any of the code in scope assigns to or takes the address of x.
assistBytesPerWork is 1/assistWorkPerByte.
assistG is the G to charge for this allocation, or nil if GC is not currently active.
assistQueue is a queue of assists that are blocked because there was neither enough credit to steal or enough work to do.
assistTime is the nanoseconds spent in mutator assists during this cycle.
assistWorkPerByte is the ratio of scan work to allocated bytes that should be performed by mutator assists.
associate factory functions with the first visible result type, if any
associate function with typ
associate installs the new template into the group of templates associated with t.
associate methods with the receiver type, if any
associate new named type with obj if it doesn't exist yet
associate with that type
associated declarations
associated static data, untouched by the ssa package
associated with a, b, c associated with x, y
associated with f1 also associated with f1 associated with f2 f2
assume NUL-terminated
assume all types behave similarly to int8/uint8
assume element type is simply absent - don't advance
assume fd is real windows handle.
assume files move (get installed) so don't record the full path.
assume int unless proven otherwise fraction
assume invalid types to be comparable to avoid follow-up errors
assume printing the test binary's exit status is superfluous
assume sorted already
assume that the second in the pair is in this section and use that as the pc-relative base.
assume we have an addressable variable of type typ
assumes the last CNAME is the correct one
asynchronous channels
at least 2 exponent digits
at least one line break, but respect an extra empty line in the source
at least utf8.UTFMax A Scanner implements reading of Unicode characters and tokens from an io.Reader.
at marks the state to be on node n, for error reporting.
at most n digits in base b1 fit into Word
at most one entry - nothing to do
at most one line - nothing to do
at reports whether the next tokens are as requested.
at returns the i'th mantissa digit, starting with the most significant digit at 0.
at that position in the call.
at the beginning of the source
at this point we have something like: MOV* const/mem/reg, reg MOV* reg, reg/mem now check if this is a cast that cannot be forward propagated
at this stage, only n(SP) nodes from nodarg
atLeftDelim reports whether the lexer is at a left delimiter, possibly followed by a trim marker.
atLineBegin emits a //line comment if necessary and prints indentation.
atRegisterShift reports whether we are at the start of an ARM shifted register.
atRightDelim reports whether the lexer is at a right delimiter, possibly preceded by a trim marker.
atStartOfRegister reports whether the parser is at the start of a register definition.
atTerminator reports whether the input is at valid termination character to appear after an identifier.
atan.c Inverse circular tangent (arctangent)
atime sets ip.Atime to the current time.
atom We actually parse dot-atom here to be more permissive than what RFC 5322 specifies.
atomic GetRandomFlag is a flag supported by the getrandom system call.
atomically replace the current object with the new one At this point all new readers start working with the new version.
attached p for executing go code (nil if not executing go code)
attempt to resume parsing
attempt to reuse existing envs backing array.
attr identifies the current HTML attribute when inside the attribute, that is, starting from stateAttrName until stateTag/stateText (exclusive).
attrEscaper escapes for inclusion in quoted attribute values.
attrIsExprloc indicates attributes that allow exprloc values that are encoded as block values in DWARF 2 and 3.
attrNone corresponds to a normal attribute or no attribute.
attrPtrClass indicates the *ptr class of attributes that have encoding formSecOffset in DWARF 4 or formData* in DWARF 2 and 3.
attrScript corresponds to an event handler attribute.
attrStyle corresponds to the style attribute whose value is CSS.
attrType returns a conservative (upper-bound on authority) guess at the type of the named attribute.
attrURL corresponds to an attribute whose value is a URL.
attrValue returns the attribute value for the case-insensitive key `name', or the empty string if nothing is found.
auth calculates GHASH(ciphertext, additionalData), masks the result with tagMask and writes the result to out.
authorityAddr returns a given authority (a host/IP, or host:port / ip:port) and returns a host:port.
auto generated by go tool dist
autocomplete for interactive mode
autodcl for this func/closure
autotmp's are always local
aux is a *gc.Node of a variable that is about to be initialized.
aux is a *gc.Node of a variable that is known to be dead.
aux is a *gc.Node of a variable that must be kept live.
aux is a symbol, auxInt is a 32-bit integer
aux is a symbol, auxInt is a ValAndOff
aux is a symbol, auxInt is an offset
auxInt is 0/1 for false/true
auxInt is a 16-bit integer
auxInt is a 32-bit integer
auxInt is a 64-bit integer
auxInt is a float32 (encoded with math.Float64bits)
auxInt is a float64 (encoded with math.Float64bits)
auxInt is an 8-bit integer
auxInt represents a 128-bit integer.
auxint is 0 for false and 1 for true
auxint is sign-extended 16 bits
auxint is sign-extended 32 bits
auxint is sign-extended 8 bits
availRead reports the number of bytes that can be flushed by readFlush.
availWrite reports the available amount of output buffer space.
avarinit describes the effect at the end of the block, not the beginning.
avarinitall says the addressed var is initialized along all paths reaching the block exit.
avarinitany says the addressed var is initialized along some path reaching the block exit.
averageDelta returns the average delta in RGB space.
avoid 'not used' when function doesn't have return
avoid -0 (should not be needed, but be conservative)
avoid a spill in the fast path
avoid allocation of slice on each call to WriteRune
avoid altering ADD.S/ADC sequences.
avoid constant arithmetic
avoid constant conversions in switches below
avoid converting huge floating-point numbers to integers (2*Mpprec is large enough to permit all tests to pass)
avoid declared but not used error below
avoid division by zero
avoid division-by-zero
avoid follow-up errors
avoid generating HTML just to discard it
avoid generating tests that divide by zero
avoid imported and not used errors "io/ioutil"
avoid meaningless follow-up errors
avoid performance bugs
avoid re-genning Ninit
avoid rescheduling to another P
avoid showing a default in usage message
avoid spurious div-zero errors
avoid spurious division by zero errors
avoid spurious errors
avoid string allocation
avoid undefined: x error below with recursive-descent parser
avoid usage error when checking entire function
avoid work the second time
avoidDNS reports whether this is a hostname for which we should not use DNS.
avoided repeated calculations, errors
avoids cycles for recursive interface types.
avoids problems with target being addressed, as usual.
await() returns '' for no error
awayFromTTY saves the output in a file if it would otherwise go to the terminal screen.
b .glink In the ppc64 ABI, the dynamic linker is responsible for writing the entire PLT.
b acts as both dst and src.
b is in natural (not zig-zag) order.
b is the decoded coefficients, in natural (not zig-zag) order.
b is the number of bits in the most significant byte of max.
b is the number of bytes to zero.
b is the profile bytes after the header, period is the profiling period, and parse is a function to parse 8-byte chunks from the profile in its native endianness.
b isn't actually larger than a.
b must not have subbenchmarks.
b must point to the beginning of a heap object, so we can get its bits and span directly.
b0 is the if block giving the boolean value.
b2i translates a boolean value to 0 or 1 for assigning to auxInt.
bEncode encodes s using base64 encoding and writes it to buf.
back up to CALL instruction for funcline.
back-link to associated m (nil if idle)
back-off timeout on error
backend-dependent builtin types (e.g. int).
background sweeper position
backtrack is a fast replacement for the NFA code on small regexps when onepass cannot be used.
backtrack is a regular expression search with submatch tracking for small regular expressions and texts.
backtrack runs a backtracking search of prog on the input starting at pos.
backup backs the input stream up one token.
backup steps back one rune.
backup2 backs the input stream up two tokens.
backup3 backs the input stream up three tokens The zeroth token is already there.
bad line comment, ignored
bad size but shouldn't be consulted
bad syntax, reject always
badRequestError is a literal string (used by in the server in HTML, unescaped) to tell the user why their request was bad.
bail here if no Files expected to be tested (there may actually be files in the zip, but we don't care)
bail if file is not zip
balance moves some work that's cached in this gcWork back on the global queue.
bany reports whether any bits in a are set.
base URL of form http://ipaddr:port with no trailing slash
base address for all 0-byte allocations
base and off are for debugging only and could be removed.
base is an offset to adjust the sample addresses.
base name of the file
base offset for the next file
base pointer of a slice or string.
base returns the final element in the path.
base strips away qualifiers and typedefs to get the underlying type
baseReg records the base register for argument types that specify a range of registers indexed by op, regop, or rm.
baseReg returns the base register for a given register size in bits.
based on C program by Kevin Carson
basefds returns the number of expected file descriptors to be present in a process at start.
basename removes trailing slashes and the leading directory name and drive letter from path name.
basename removes trailing slashes and the leading directory name from path name
basic types are named types
basicMul multiplies x and y and leaves the result in z.
basicPrefixes geneartes 8 different possible prefix cases: no prefix and then one each of seven different prefix bytes.
basicsTests contains fundamental tests.
basn4a16.sng is gray + alpha but sng() will produce true color + alpha so we just check a single random pixel.
bc bo,bi,lbra (same for now)
bctr The symbol resolvers must immediately follow.
be auto generated by cgo yet.
be careful in case of incorrect ASTs
be careful to not lose concurrent READY notification
be conservative about spinning threads
be safe and ensure it's a single bit cut off extra words
because it's a sub-call
because it's not a defer call
because mustRecover will squelch it
because of "+ s", s is of type uint
because of panic below
because of the required look-ahead, labeled statements are parsed by parseSimpleStmt - don't expect a semicolon after them
because the args are stacked
before Serve can return
before any calls to notesleep or notewakeup, must call noteclear to initialize the Note.
before is the regexp suffix starting at the repetition operator.
before pc might return to idle pool
before runs before all testing.
beforeRespHeaderError is used to indicate when an IO error has occurred before any header data was received.
begin sending body of request 1
being assigned contain m or k.
being used by an mcache
bench benchmarks drawing src and mask images onto a dst image with the given op and the color models to create those images from.
benchFnPass runs passFunc across a function with b.N blocks.
benchFnPass runs passFunc b.N times across a single function.
benchmark based on fmt/fmt_test.go
benchmark based on regexp/exec_test.go
benchmark based on time/time_test.go
benchmarkBuf is a read buffer we can reset
benchmarkName returns full name of benchmark including procs suffix.
benchmarkNilCheckDeep is a stress test of nilcheckelim.
best is now the default entry
best maps from the ODCLFUNC of each visited function that recursively invokes a write barrier to the called function on the shortest path to a write barrier.
better fix for issue 4860
bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28Gpgoiskli
bfsWalkRoot walks a single directory hierarchy in breadth-first lexical order.
bgScanCredit is the scan work credit accumulated by the concurrent background scan.
bgenx is the backend for Bgen and Bvgen.
bgrun adds 1 to wg immediately, and calls Done when the work completes.
bgrun is like run but runs the command in the background.
bgwait must be called from only a single goroutine at a time.
bgwait waits for pending bgruns to finish.
biclr sets bit n to 0.
big directory that doesn't change often.
big endian remove leading 0's if any
big enough for 64bit value base 10
big enough in any case
big.Word size in bits The following methods are extracted from math/big to make this a stand-alone program that can easily be run without dependencies and compiled with different compilers.
bigFtoa uses multiprecision computations to format a float.
bigInt and bigUint are hex string representing numbers either side of the max int boundary.
bigger than a page Make sure we find the correct byte even when straddling a page.
binary exponent not permitted
binary mantissa, binary exponent
binary mantissa, decimal exponent
binary objects to add to package archive Likely of the form foo_windows.syso, but the name was vetted above with goodOSArchFile.
binary search among cases to narrow by hash
binary search over ranges
binary-only package: cannot be recompiled from sources Source files
bind(2) man page: If name is zero, everything bound or mounted upon old is unbound or unmounted.
bins inserts an instruction to handle the result of a compare.
binutils for arm generate these mapping symbols, ignore these
biset sets bit n to 1.
bit positions as an field element.
bitCount counts the number of bits needed to hold an integer.
bitReader wraps an io.Reader and provides the ability to read values, bit-by-bit, from it.
bitState holds state for the backtracker.
bitbucketVCS determines the version control system for a Bitbucket repository, by using the Bitbucket API.
bitfield and logical immediate masks
bitmaps, each starting on a 32-bit boundary
bitmask of arch-specific items
bits and nBits are accumulated bits to write to w.
bits being prepared for *hbitp
bits for hardware registers
bits holds the unprocessed bits that have been taken from the byte-stream.
bits packed into bytes.
bits returns the heap bits for the current word.
bits same as overall array
bits used in rex byte
bl XXXXXX or b YYYYYY
bl runtime.addmoduledata
blank between names and types
blank fields/methods are never found
blank line - no continuation
blank line before new paragraph
blank names initialization is part of init() but not when they are inside a function.
blkSlice is a variant of blk that processes slices.
bloc, ctrl, and valu are internal structures used by Bloc, Valu, Goto, If, and Exit to help define blocks.
block ending in terminating statement is okay
block has not been discovered yet
block identified by this label
block in loop exiting to d.
block is the permutation:
block on reading body of request
block to break to in control flow node identified by this label
block to continue to in control flow node identified by this label
block until all connections are in flight
block until new work is available
block until server hangs up on us
block, constant, loclistptr
block, constant, reference
block, constant, string
block, loclistptr Dwarf3
block, or nil in RecPtr/ClearPtr state
blockBranches processes a block's statement list and returns the set of outgoing forward jumps.
blockGeneric is a portable, pure Go version of the SHA1 block step.
blockSize is a power of two
blocking profile buckets
blocknumber to catch redeclaration
blocks until work is available
blocks with positive remaining degree
blocks with zero remaining degree
blocks, waiting for the connection.
bnum reports the lowest index of a 1 bit in a.
body bytes seen so far
body could be an io.LimitReader, but it shouldn't matter as long as both sides are behaving.
body turns a Reader into a ReadCloser.
body.Close is assumed to be idempotent and multiple calls to it should return the error that its first invocation returned.
bodyAllowed reports whether a Write is allowed for this response type.
bodyAllowedForStatus reports whether a given response status code permits a body.
bodyEOFSignal is used by the HTTP/1 transport when reading response bodies to make sure we see the end of a response body before proceeding and reading on the connection again.
bodyLocked is a io.Reader reading from a *body when its mutex is already held.
bodyRemains reports whether future Read calls might yield data.
bodySize is like nodeSize but it is specialized for *ast.BlockStmt's.
bogus "invalid recursive type T" from 6g
bool alignment is wrong and causing wrong arguments when calling functions.
bool is the set of boolean values, true and false.
boolean node used for comma-ok type assertions
boolean test vals toggle to be sure they are written
bootstrapDirs is a list of directories holding code that must be compiled with a Go 1.4 toolchain to produce the bootstrapTargets.
borderline - too large
botch - probably failing to recognize address arithmetic on the above.
botch - shouldn't fall through declaration
botch is really f0,f1
both A and AAAA records
both argument types must be identical
both createCmd and downloadCmd update the working dir.
both float and double
both ptr1 and ptr2 are guaranteed non-nil here
both read from and written to in a single operand
both read from and written to in different operands
both slice and string have len one pointer into the struct.
both syms nil, look at structure below.
both x and target are untyped
boundary returns a Boundary, populating the Norm field with a normalized Count.
bounds check unnecessary
boundsCheck generates bounds checking code.
bp returns the blockRecord associated with the blockProfile bucket b.
branch target: leave alone
branch to 123 if the F3 prefix is present, 234 if the F2 prefix is present, 66 if the 345 prefix is present, and 456 otherwise.
brcom is not valid on floats when NaN is involved.
break addable nc-complex into nr-real and ni-imaginary
break code into lines
break infinite recursion if the broken recursive type is referenced again
break line if the opening "(" or previous parameter ended on a different line
break out of switch for one-instruction gins.
breakAfter is the number of successful writes that will be allowed before all subsequent writes fail.
breaks control flow (no fallthrough)
broken field definition
broken field, just skip it so that other valid fields get a width.
broken type definition.
brokenConn wraps a net.Conn and causes all Writes after a certain number to fail with brokenConnErr.
brokenConnErr is the error that brokenConn returns once exhausted.
browsers returns a list of commands to attempt for web visualization on the current platform
bsdthread_register delayed until end of goenvs so that we can look at the environment first.
bstart remembers where each block starts (indexed by block ID)
btest reports whether bit n is 1.
bucket iteration started at
bucket maps are least
bucket ptr at hash_iter initialization time
buf contains a TLS record, with a 5 byte record header and a 4 byte handshake header.
buf is a scratch buffer.
buf is deflate-compressed
buf read and write positions
bufWriter encapsulates bufio.Writer but also closes the underlying stream when Closed.
buffer currently handed off to user
buffer empty: disable output
buffer for all writes
buffer for directory I/O
buffer for more efficient i/o from r
buffer for the encrypted counter values
buffer for top-level encoderState
buffer full: expand it
buffer has been scanned, now report any error
buffer holds pauses and end times
buffer of pending write data
buffer position up to which cell.width of incomplete cell has been computed
buffer smaller than minimal read size.
buffer to use in readHeader
buffer to use in writeHeader when writing a pax header
buffer to use in writeHeader when writing a regular header
bufferFlushSize indicates the buffer size after which bytes are flushed to the writer.
bufferSize is the actual output byte buffer size.
buffered data waiting to be encoded
buffered input and output ReadWriter stores pointers to a Reader and a Writer.
buffered output Writer implements buffering for an io.Writer object.
buffered pipe with the flow-controlled response payload
bufferedWriter is a buffered writer that writes to w.
buffers output in chunks to chunkWriter
bug 9172: WriteHeapDump couldn't handle more than one finalizer
bug used to run sleeps in serial, producing a 2*sleepSec-second delay.
bug was: internal compiler error: var without type, init: v
bug0.go:8: case statement out of place
bug003.go:6: fatal error: walkswitch: not case EMPTY
bug028.go:7: unreachable statements in a switch
bug047.go:4: fatal error: stringpool: not string
bug081.go:3: first constant must evaluate an expression Bus error
bug089.go:16: fatal error: agen_inter i2i
bug112.go:6: illegal conversion of constant to T
bug13.go:4: missing ' bug13.go:4: syntax error bug13.go:5: newline in string bug13.go:5: missing ' bug13.go:6: newline in string
bug137.go:9: break label is not defined: L2 bug137.go:15: break label is not defined: L4
bug139.go:7: fatal error: naddr: ONAME class x 5
bug140.go:6: syntax error near L1 bug140.go:7: syntax error near L2
bug157.go:20: syntax error near default bug157.go:20: first switch statement must be a case
bug158.go:14: fatal error: dowidth: unknown type: E-33
bug161.go:8: operation LITERAL not allowed in assignment context
bug239.go:11: imported and not used: unsafe bug239.go:15: undefined: Sizeof
bug245.go:14: fatal error: method mismatch: T for T
bug275.go:17: internal compiler error: subnode not addable
bug307.go:14:6: error: complex arguments must have identical types
bug315.go:13: internal compiler error: optoas: no entry DIV-complex
bug333.go:14: cannot use ts (type Ts) as type string in function argument
bug338.go:14: array bound must be non-negative
bug5.go:4: Foo undefined bug5.go:4: fatal error: walktype: switch 1 unknown op GOTO l(4)
bugs prints the BUGS information for the package.
bugs/bug150.go:13: reorder2: too many funcation calls evaluating parameters
bugs/bug151.go:10: illegal types for operand: CALL string S
build a dispatch operator from the two legs of the alt.
build constraints to match in +build lines
build dummy rtype holding gc program
build file scope by processing all imports
build immediate dominators.
build is the action for building a single package or command.
build iterator struct holding the above fields
build list of string arguments
build up numerator and denominator
buildBranch builds one branch in the prefix tree rooted at ctx.frameTree.
buildCompiler implements flag.Var.
buildHuffmanNode takes a slice of sorted huffmanCodes and builds a node in the Huffman tree at the given level.
buildPrintPathExe creates a Go program that prints its own path.
buildTypeInfo constructs the type information for the type and stores it in the type info map.
builddeps records the build dependencies for the 'go bootstrap' command.
buildlist is the list of directories being built, sorted by name.
buildssa builds an SSA function.
built-in from package unsafe - ignore details
builtin: OLEN, OCAP, etc.
builtinpkg is a fake package that declares the universe block.
builtins may expect a type: make(some type, ...)
bulkHash4 will compute hashes using the same algorithm as hash4
bump alignment once in a while
bumpWeight increases the weight of an edge.
busy lists of large objects of given length
but also: "If a message is received with both a Transfer-Encoding and a Content-Length header field, the Transfer-Encoding overrides the Content-Length.
but cannot be written to
but defer does escape to later execution in the function
but if argument is dotted too forget about variadicity.
but if it was for if/for/switch, put in an extra surrounding block to limit the scope
but if that temporary slice escapes, then the write barriers are necessary.
but not ODOTPTR Should have been handled in aliased.
but not trailing blank lines
but only builtin panic
but otherwise writes to: 6.
but record the existing type, if any
but should not underflow in float and in fact is exactly representable.
but the flattened type in the type table, since that's what decode needs.
but this is much less likely than (a + b) / c
but uses fewer branches and is faster.
but we don't need -pie for normal cgo programs
but we'll omit the body
but we're going to send only 5 bytes
but we're going to try to send 8 bytes
bv describes the memory starting at address scanp.
bx O(R) when returning from fn
by default, copy until EOF
byIndex sorts field by index sequence.
byLineno sorts errors by lineno.
byMaskLength sorts policyTableEntry by the size of their Prefix.Mask.Size, from smallest mask, to largest.
byMethodNameAndPackagePath sorts method signatures by name, then package path.
byName implements sort.Interface.
byName sorts field by name, breaking ties with depth, then breaking ties with "name came from json tag", then breaking ties with index sequence.
byPref implements sort.Interface to sort MX records by preference
byPriorityWeight sorts SRV records by ascending priority and weight.
byString is a slice of reflectWithString where the reflect.Value is either a string or an encoding.TextMarshaler.
byUniqueMethodName method lists can be sorted by their unique method names.
byUniqueName function lists can be sorted by their unique names.
byUniqueTypeName named type lists can be sorted by their unique type names.
byte appends v to buf.
byte is an alias for uint8 and is equivalent to uint8 in all ways.
byte is the bottleneck interface for reading p.data.
byte multiply behaves differently.
byte offset of data within the aggregate info
byte offset of field within struct
byte offset of header within the aggregate info
byte offset of last line in leading space
byte offset where error occurred
byte offset, starting at 0
byte order for goarch
byte order mark, only permitted as very first character Read the next Unicode char into s.ch.
byte position of start of node in full original input string tree returns the containing *Tree.
byte slices are special even if they're renamed types.
byte writes the byte x to the output.
byte, word arithmetic elimination.
byteFromChanReader is an io.Reader that reads a single byte at a time from the channel.
byteIndex is strings.IndexByte.
byteReplacer is the implementation that's used when all the "old" and "new" values are single ASCII bytes.
byteStringReplacer is the implementation that's used when all the "old" values are single ASCII bytes but the "new" values vary in size.
bytep points to the byte holding the mark bit.
bytes 13-14: zone offset in minutes
bytes 9-12: nanoseconds
bytes allocated (even if freed)
bytes allocated and not yet freed
bytes allocated and not yet freed (same as Alloc above)
bytes allocated and not yet freed (same as alloc above)
bytes cleared by one block
bytes in non-idle span
bytes in non-idle spans
bytes is a byte buffer, similar to a bufio.Reader, except that it has to be able to unread more than 1 byte, due to byte stuffing.
bytes obtained from system
bytes obtained from system (should be sum of xxx_sys below, no locking, approximate)
bytes obtained from system (sum of XxxSys below)
bytes of return values from fn
bytes of run-time computed expressions
bytes of scannable heap allocated Allocator cache for tiny objects w/o pointers.
bytes of text segment (actual instructions)
bytes or str are the beginning of the response body.
bytes released to the OS
bytes released to the os
bytes remaining ch is non-nil if a background read is in progress.
bytes to return from Read
bytes used by stack allocator
bytes writes the value of z into buf using big-endian encoding.
bytes.EqualFold or equivalent
bytesIndexByte is bytes.IndexByte.
bytesMarked is the number of bytes marked this cycle.
byteswapreg returns a byte-addressable register (AX, BX, CX, DX) which is not referenced in a.
bzip2 is a block based compressor, except that it has a run-length preprocessing step.
c is non-nil interface containing nil pointer
c should be a packet-oriented connection, such as a *UDPConn.
c should be a stream-oriented connection, such as a *TCPConn.
c, b, a, such that there is a path (list of edges) from a to z.
c.StartResponse(id) defer c.EndResponse(id)
c.handshakeErr and c.handshakeComplete are protected by c.handshakeMutex.
c.sessionTicketKeys is constant once created.
c1 is accurate if it matches our assumed output context.
c: Unix character device, when ModeDevice is set
cache Copy the concatenated code sizes to codegen.
cache for default getReadBuf
cache of compiled engines
cache of last file looked up
cache of machines for running regexp
cache result for future callers
cacheGet looks for a type under the key k in the lookupCache.
cacheKey is the key for the action cache.
cachePut stores the given type in the cache, unlocks the cache, and returns the type.
cached compiled form of re
cached divisors for base 10
cached value of v.rematerializeable()
cached version of the value
cachedOrNewConn returns a cached connection, if available, else waits for one to become available (if MaxOpenConns has been reached) or creates a new database connection.
cachedTypeFields is like typeFields but uses a cache to avoid repeated work.
cal.b is the current approximation of what's live across the call.
calahead/calbehind are similar, but for variables in instructions that are reachable after hitting at least one CALL.
calculate sethi/ullman number roughly how many registers needed to compile a node.
calculate sinh and cosh
calculates expression types.
call Returns the result of calling the first argument, which must be a function, with the remaining arguments as parameters.
call SliceOf here as it calls cacheGet/cachePut.
call before accessing p.linecomment
call before accessing p.linecomment collect imports
call bigframe, which used to miss the preemption in its prologue.
call calls fn with a copy of the n argument bytes pointed at by arg.
call function via closure.
call gcw.put() to produce and gcw.get() to consume ..
call gofmtMain in a separate function so that it can use defer and have them run before the exit.
call has no return value.
call in new proc (go)
call instruction for Sun ABI GD sequence
call instruction for Sun ABI LD sequence
call is an in-flight or completed singleflight.Do call
call is the expression being called, not the overall call.
call must return multiple values
call ptr dynamic with ptr dynamic
call ptr dynamic with ptr fixed from new
call ptr dynamic with ptr fixed from var
call ptr fixed with ptr fixed
call static function aux.(*gc.Sym).
call tempname pointer
call to n has already been generated.
call-only expressions are ok
callCgoSymbolizer calls the cgoSymbolizer function.
callMethod is the call implementation used by a function returned by makeMethodValue (used by v.Method(i).Interface()).
callReflect is the call implementation used by a function returned by MakeFunc.
callback arguments size (in bytes)
callback(x) calls goCallback(x)
callbackasmAddr returns address of runtime.callbackasm function adjusted by i.
callbacks into compiler frontend
called first time p is returned
called from (incomplete) assembly
called from generated code
called from handler goroutines.
called function must be a (possibly parenthesized, qualified) identifier denoting the expected built-in
called in auto-declaration context.
called in extern-declaration context returns in auto-declaration context.
called in return expr-list func(expr-list)
caller is responsible for calling sudoclean after successful sudoaddable, to release the register used for a.
caller must Regfree(n).
caller must call restx to move it back.
caller must hold es.mu.
caller will correct it
caller will read false if nothing else
callerpc is the address of the go statement that created this.
callgrindName implements the callgrind naming compression scheme.
calls Flush internally
calls makeclosure twice on same closure
can backslash-escape any punctuation
can be modified for testing.
can change for testing
can convert *byte and *MyByte
can delete (non-existent) entries
can happen if called from signal handler or throw
can only happen for div-0 which should be checked elsewhere
can only test reassembly if we didn't lose information
can read one character (rune) past the input they return, which means that a loop calling a scan routine may skip some of the input.
can receive from buffer
can receive from sleeping sender (sg)
can send to a sleeping receiver (sg)
can stop after this digit
can't be seen by C/C++ and therefore irrelevant for msan.
can't currently inline functions with a break statement
can't currently inline functions with a type switch
can't depend on panic
can't do anything that might move the G between Ms here.
can't do purely lexically
can't free P itself because it can be referenced by an M in syscall
can't happen: blitrl is not nil, but checkpool didn't flushpool
can't happen: we looked up g.sig in sigtable to decide to call sigpanic
can't possibly be used - there were no symbols
can't really check this in machine-indep code.
can't use BP-base with index
can't use local path with -u, use -I.
can't use stmtList here since we don't want the final OEND
canBeNil reports whether an untyped nil can be assigned to the type.
canHaveDefaultValue reports whether k is a Kind that we will set a default value for.
canReuseNode indicates whether it is known to be safe to reuse a Node.
canSSA reports whether n is SSA-able.
canSSA reports whether variables of type t are SSA-able.
canSend is a slice of memory that's reused between frame scheduling decisions to hold the list of writeQueues (from sq) which have enough flow control data to send.
canUseCgo reports whether calling cgo functions is allowed for non-hostname lookups.
canUseConnectEx reports whether we can use the ConnectEx Windows API call for the given network type.
cancel closes c.done, cancels each of c's children, and, if removeFromParent is true, removes c from its parent's children.
cancel scan request if no longer needed
cancelTimerBody is an io.ReadCloser that wraps rc with two features: 1) on Read error or close, the stop func is called.
cannot assign untyped values to non-empty interfaces
cannot backtrack, but not rooted, so append ..
cannot be rebuilt from source (has //go:binary-only-package comment) Source files
cannot convert mismatched array sizes
cannot convert other instances
cannot decode argument
cannot determine composite literals' type, skip it
cannot happen: caller checked that lists had same length
cannot have 64-bit immediate in ADD, etc.
cannot have more than 16-bit of immediate in ADD, etc.
cannot have two floating point memory operands.
cannot have two memory operands
cannot initialize in init because (printer) Fprint launches goroutines.
cannot match any version
cannot modify state - see io.ReaderAt
cannot parse Feb as Mon
cannot predict pid, don't want to kill group
cannot put side effects from n.Right on init, because they cannot run before n.Left is checked.
cannot re-use z.mant w/o testing for aliasing
cannot type check until all the source has been parsed
cannot use chanfn - closechan takes any, not chan any
cannot use temp file on nacl via child process
canonical import path check
canonicalAddr returns url.Host but always with a ":port" suffix
canonicalHost strips port from host if present and returns the canonicalized host name.
canonicalMIMEHeaderKey is like CanonicalMIMEHeaderKey but is allowed to mutate the provided byte slice before returning the string.
canonicalMethods lists the input and output types for Go methods that are checked using dynamic interface checks.
canonicalize ideal types
canonicalize the logging
canonicalized version of "TE"
cap of string or slice
cap(arg0) Complex (part/whole)
capacity - number of objects in freelist
capacity is stored in the second word for chan
capture information for the match cached inputs, to avoid allocation
capture stdout and stderr
capturevars is called in a separate phase after all typechecking is done.
capturing index, for OpCapture
capturing name, for OpCapture
capturing subexpression with index Cap, optional name Name
cas the worker because we may be racing with a new worker starting on this P.
cas to 1 when at a background mark completion point Background mark completion signaling mode is the concurrency mode of the current GC cycle.
cas-release, commits consume
case 0: mapped to ONAME
case 1: mapped to OPACK
case 2: mapped to ONAME
case 3: mapped to OPACK
case ANOP: return SYSHINT(0)
case CASE(TFLOAT32, TUINT64):
case CASE(TFLOAT64, TUINT64):
case OAS2DOTTYPE, OAS2FUNC, OAS2MAPR, OAS2RECV: unreachable - mapped to OAS2 case below by exporter
case OCALL, OCALLFUNC, OCALLMETH, OCALLINTER, OGETG: unreachable - mapped to OCALL case below by exporter
case OCALLPART: unimplemented - handled by default case
case OCALLPART: unimplemented case OXDOT, ODOT, ODOTPTR, ODOTINTER, ODOTMETH: unreachable - mapped to case OXDOT below by exporter
case OCASE, OXCASE: unreachable - mapped to OXCASE case below by exporter
case OCMPSTR, OCMPIFACE: unreachable - mapped to std comparison operators by exporter
case OCONV, OCONVIFACE, OCONVNOP, OARRAYBYTESTR, OARRAYRUNESTR, OSTRARRAYBYTE, OSTRARRAYRUNE, ORUNESTR: unreachable - mapped to OCONV case below by exporter
case ODCLFIELD: unimplemented - handled by default case
case ODCLFIELD: unimplemented case OAS, OASWB: unreachable - mapped to OAS case below by exporter
case ODOTTYPE, ODOTTYPE2: unreachable - mapped to case ODOTTYPE below by exporter
case OEMPTY: unreachable - not emitted by exporter
case OFALL: unreachable - mapped to OXFALL case below by exporter
case OINDEX, OINDEXMAP, OSLICE, OSLICESTR, OSLICEARR, OSLICE3, OSLICE3ARR: unreachable - mapped to cases below by exporter
case ORETJMP: unreachable - generated by compiler for trampolin routines (not exported)
case OTARRAY, OTMAP, OTCHAN, OTSTRUCT, OTINTER, OTFUNC: unreachable - should have been resolved by typechecking case OCLOSURE: unimplemented case OCOMPLIT: unimplemented
case io.Reader: (interface type)
case that once triggered a bug
case time.Time: (concrete type, has type hash)
case-insensitive match
case-insensitive scheme
case-sensitive lookup
caseClauses generates a slice of caseClauses corresponding to the clauses in the switch statement sw.
caseInfo describes a single case in a select test.
case_ parses a superset of switch and select statement cases.
caseblock parses a superset of switch and select clauses.
caseblock_list parses a superset of switch and select clause lists.
casebody builds separate lists of statements and cases.
cases it.N().Rlist is the variable per case
cases n.Left.Right is the argument of the .(type), it.N().Rlist is the variable per case
cases with one byte strings - test IndexByte and special case in Index()
cases with one byte strings - test special case in Index()
casgstatus(gp, oldstatus, Gcopystack), assuming oldstatus is Gwaiting or Grunnable.
castPropagation tries to eliminate unecessary casts.
castagnoliSSE42 is defined in crc_amd64.s and uses the SSE4.2 CRC32 instruction.
castagnoliTable points to a lazily initialized Table for the Castagnoli polynomial.
catchError is meant to be used as a deferred function to turn a panic(gobError) into a plain error.
cause a panic due to a segfault
cause all runtime procs to exit (only used on Plan 9).
cause writing goroutine to fail and exit if CopyN doesn't finish.
caused 'variable live at entry' error in liveness analysis.
caused by racewalker inserting instrumentation before an OAS where the Ninit of the OAS defines part of its right-hand-side.
causes something awful
cbP8 encoding needs PalettedImage's ColorIndexAt method.
cbcDecAble is an interface implemented by ciphers that have a specific optimized implementation of CBC decryption, like crypto/aes.
cbcDecAble is implemented by cipher.Blocks that can provide an optimized implementation of CBC decryption through the cipher.BlockMode interface.
cbcEncAble is an interface implemented by ciphers that have a specific optimized implementation of CBC encryption, like crypto/aes.
cbcEncAble is implemented by cipher.Blocks that can provide an optimized implementation of CBC encryption through the cipher.BlockMode interface.
cbcMode is an interface for block ciphers using cipher block chaining.
cc is a nonterminal with a goto on c
cc runs the toolchain's C compiler in a directory on a C file to produce an output file.
ccompile runs the given C or C++ compiler and creates an object from a single source file.
ccompilerCmd returns a command line prefix for the given environment variable and using the default command when the variable is empty.
cd changes the current directory to the named directory.
cdat is the current row's data, pdat is the previous row's data.
cell exists in this column
cell is empty, bucket is evacuated.
central free lists for small size classes.
cert, if not empty, contains a DER-encoded certificate for the reference server.
cert.pem and key.pem were generated with generate_cert.go Thus, they have no ExtKeyUsage fields and trigger an error when verification is turned on.
certificate chain presented by remote peer
cfbTests contains the test vectors from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf, section F.3.13.
cgen_norm moves n1 to res, truncating to expected type if necessary.
cgo -cdefs defs2_linux.go
cgo -cdefs defs_darwin.go
cgo -cdefs defs_dragonfly.go
cgo -cdefs defs_freebsd.go
cgo -cdefs defs_linux.go defs1_linux.go
cgo -cdefs defs_linux.go defs3_linux.go
cgo -cdefs defs_netbsd.go defs_netbsd_386.go
cgo -cdefs defs_netbsd.go defs_netbsd_amd64.go
cgo -cdefs defs_netbsd.go defs_netbsd_arm.go
cgo -cdefs defs_openbsd.go
cgo -cdefs defs_solaris.go defs_solaris_amd64.go
cgo -cdefs defs_windows.go
cgo -dynimport is essentially a separate helper command built into the cgo binary.
cgo -godefs -- -fsigned-char types_freebsd.go +build arm,freebsd
cgo -godefs -- -fsigned-char types_linux.go +build arm64,linux
cgo -godefs types_darwin.go +build 386,darwin
cgo -godefs types_darwin.go +build amd64,darwin
cgo -godefs types_darwin.go +build arm64,darwin
cgo -godefs types_dragonfly.go +build amd64,dragonfly
cgo -godefs types_freebsd.go +build 386,freebsd
cgo -godefs types_freebsd.go +build amd64,freebsd
cgo -godefs types_linux.go
cgo -godefs types_linux.go +build 386,linux
cgo -godefs types_linux.go +build amd64,linux
cgo -godefs types_linux.go +build arm,linux
cgo -godefs types_linux.go +build ppc64,linux
cgo -godefs types_linux.go +build ppc64le,linux
cgo -godefs types_netbsd.go +build 386,netbsd
cgo -godefs types_netbsd.go +build amd64,netbsd
cgo -godefs types_netbsd.go +build arm,netbsd
cgo -godefs types_openbsd.go +build 386,openbsd
cgo -godefs types_openbsd.go +build amd64,openbsd
cgo -godefs types_openbsd.go +build arm,openbsd
cgo -godefs types_solaris.go +build amd64,solaris
cgo DNS resolution forced machine has an /etc/mdns.allow file
cgo files are full of 'Z' symbols, which we don't handle
cgo files have absolute paths
cgo is required to initialize libc, which is used by race runtime
cgo isn't available, but if we found the minimum information without it, use it:
cgo must be explicitly enabled for cross compilation builds
cgo rewrote C.var to *_Cvar_var, but left C.var.field as _Cvar.var.field.
cgo traceback context Per-G GC state gcRescan is this G's index in work.rescan.list.
cgo traceback if crashing in cgo call
cgo1 and cgo2 don't run on freebsd, srandom has a different signature
cgo1 and cgo2 don't run on netbsd, srandom has a different signature
cgo: flags for C compiler
cgo: flags for C preprocessor
cgo: flags for C++ compiler
cgo: flags for Fortran compiler
cgo: flags for linker
cgo: pkg-config names Dependency information
cgoAlwaysFalse is a boolean value that is always false.
cgoBaseType tries to look through type conversions involving unsafe.Pointer to find the real type.
cgoCheckArg is the real work of cgoCheckPointer.
cgoCheckBits checks the block of memory at src, for up to size bytes, and throws if it finds a Go pointer.
cgoCheckMemmove is called when moving a block of memory.
cgoCheckResult is called to check the result parameter of an exported Go function.
cgoCheckSliceCopy is called when copying n elements of a slice from src to dst.
cgoCheckTypedBlock checks the block of memory at src, for up to size bytes, and throws if it finds a Go pointer.
cgoCheckUnknownPointer is called for an arbitrary pointer into Go memory.
cgoCheckUsingType is like cgoCheckTypedBlock, but is a last ditch fall back to look for pointers in src using the type information.
cgoCheckWriteBarrier is called whenever a pointer is stored into memory.
cgoContextArg is the type passed to the context function.
cgoContextPCs gets the PC values from a cgo traceback.
cgoHasExtraM is set on startup when an extra M is created for cgo.
cgoInRange returns whether p is between start and end.
cgoIsGoPointer returns whether the pointer is a Go pointer--a pointer to Go memory.
cgoMmap calls the mmap function in the runtime/cgo package on the callCgoMmap calls the mmap function in the runtime/cgo package using the GCC calling convention.
cgoNext returns frame information for pc, known to be a non-Go function, using the cgoSymbolizer hook.
cgoPackages is the standard packages that use cgo.
cgoSymbolizerArg is the type passed to cgoSymbolizer.
cgoTraceback prints a traceback of callers.
cgoTracebackArg is the type passed to cgoTraceback.
cgoUse is called by cgo-generated code (using go:linkname to get at an unexported name).
cgoUse should not actually be called (see cgoAlwaysFalse).
cgocallback is defined in runtime go:linkname _runtime_cgocallback runtime.cgocallback
cgocallback_gofunc is not called from go, only from cgocallback, so the arguments will be found via cgocallback's pointer-declared arguments.
ch does not belong to number anymore
ch was missing or ch is closed
chain of overflows of term/nonterm generation lists
chain.leafCount gives the number of literals requiring at least "bits" bits to encode.
chan has cap in the second int-sized word.
chan, etc: cannot handle.
chan, string, slice, array ranges use value multiple times.
chanType represents a channel type.
chan_ssa.go tests chan operations.
chanbuf(c, i) is pointer to the i'th slot in the buffer.
change back to gid to test fd.Chown
change objsize to objsize-1 and the test passes
change our output to temporary object file
change starting time to January 1, 1601
change starting time to the Epoch (00:00:00 UTC, January 1, 1970)
change the 3 to 2 to disable 3-index slices
change the declaration context from auto to extern
change the declaration context from extern to auto
changeCipherSpec changes the encryption and MAC states to the ones previously passed to prepareCipherSpec.
changeImplConn is a net.Conn which can change its Write and Close methods.
changed for testing ReadBuildIDFromBinary reads the build ID from a binary.
changes between next-to-last GC and last GC
changes since last GC
changes to the non-source-code do not matter, and only one file needs the special comment.
channel direction (ChanDir)
channel is buffered so test is single-goroutine.
channel of scanned items
channel to use (for send or receive)
channel type (not used here)
channel type or receive expression
channels for synchronizing signal mask updates with the signal mask thread
chanrecv receives on channel c and writes the received data to ep.
chapter 10 proposes an alternative sequence of instructions for architectures (TODO: MIPS64, PPC64, S390X) that do not have a shift right with carry instruction.
character before current srcPos Error is called for each error encountered.
character device node
character device node.
character represents itself in all cases - no need to mention it
character string or constant
characters below Runeself are represented as themselves in a single byte.
charsetReader returns a reader for the given charset.
check GetValue returns ErrNotExist as required
check String form of ChanDir
check after parsing header for fault-tolerance
check again under the write lock
check all runqueues once again
check assign expression list to a expression list.
check assign expression list to a type list.
check assign type list to a expression list.
check assignment to/declaration of iteration variables (irregular assignment, cannot easily map to existing assignment checks) lhs expressions and initialization value (rhs) types
check both ways to allocate channels
check checks that the two pix data are equal, within the given bounds.
check compiler's and reflect's math
check consistency of packages map
check construction and use of type not in binary
check conversion is correct (no need to do this for y, since we see exactly the same values there)
check creation of unbuffered channel
check duplicate names
check each method to be uniquely reachable
check element against composite literal element type
check expression to iterate over
check first 4 bytes TODO: on amd64/386 at least, make this compile to one 4-byte comparison instead of four 1-byte comparisons.
check for //go: directive
check for //line directive
check for Println(os.Stderr, ...)
check for chars that need escaping
check for compatible general types (numeric, string, etc)
check for compatible types.
check for cycle (it's ok to iterate forward because each named type appears at most once in path)
check for division by zero
check for length of run.
check for state equal to another
check general case by creating custom signature
check gives a test non-fatal error if err is not nil.
check idempotency of TokenText() call
check if argument is actually a returned tuple from call.
check if inlined function is variadic.
check if the CompositeLit contains an unkeyed field
check if we need to force a GC
check if we've been asked to stop.
check is BNE arg, 2(PC) MOVV R0, 0(R0)
check is CBNZ arg, 2(PC) MOVD ZR, 0(arg)
check itable/type before full compare.
check montgomery with correct k0 produces correct output
check no-input paths to InstMatch
check order of operations by ensuring that successive calls to checkorder have increasing o values.
check out of bounds indices on array
check precision when set automatically
check recorded types for fun and descendents (may be parenthesized)
check records the location and expected value for a counter.
check static interface assignments
check suffix for gc, prefix for gccgo
check that -0 is a uint.
check that MakeSlice panics when size of slice overflows uint
check that all connections fail without deadlock
check that all packages were imported
check that cannot assign one to the other, but can convert.
check that compiler doesn't stop reading struct def after first unknown type.
check that default action is reasonable
check that dynamic interface check doesn't get confused
check that each identifier in the source is found in uses or defs or both
check that file corresponds to a listener
check that initialization loop is diagnosed and that closure cannot be used to hide it.
check that invalid key type panics
check that paths from Alt instructions are unambiguous, and rebuild the new program as a onepass program
check that qualified identifiers are resolved
check that reflect paths are correct, meaning that reflect data for v0, v1 didn't get confused.
check that supplied *Int is used
check that supplied *Rat is used
check that surrogate pair elements are invalid (d800-dbff, dc00-dfff).
check that the lengths match
check that the offset fits into a 12-bit displacement
check that type already in binary is found
check that type is correct
check that type switch works.
check that types already in binary are found
check that value is correct
check that variadic requires last element be a slice.
check the expected set of idents that are simultaneously uses and defs
check the position equals another only if the states are identical
check the size, alignment and field offsets
check they're a matched case pair.
check use of dot-imported packages
check what missing arguments are allowed
check whether f and t could be overlapping stack references.
check whether shift result is used subsequently
check whether substitution can be done
check: main_sigs_I: not defined
checkASM returns whether assembly runtime checks have passed.
checkAddrArgs tries to add arguments to the call of _cgoCheckPointer when the argument is an address expression.
checkAllocations validates that the profile records collected for the named function are consistent with count contiguous allocations of the specified sizes.
checkAmbiguity on InstAlts, build onepass Prog if possible
checkAtomicAddAssignment walks the atomic.Add* method calls checking for assigning the return value to the same variable being used in the operation
checkBuildTag checks that build tags are in the correct location and well-formed.
checkCall triggers the print-specific checks if the call invokes a print function.
checkCanonicalFieldTag checks a struct field tag.
checkChainSSLServerPolicy checks that the certificate chain in chainCtx is valid for use as a certificate chain for a SSL/TLS server.
checkChainTrustStatus checks the trust status of the certificate chain, translating any errors it finds into Go errors in the process.
checkConnErrorWriter writes to c.rwc and records any write errors to c.werr.
checkConnHeaders checks whether req has any invalid connection-level headers.
checkCopyLocks checks whether node might inadvertently copy a lock.
checkCopyLocksAssign checks whether an assignment copies a lock.
checkCopyLocksCallExpr detects lock copy in the arguments to a function call
checkCopyLocksCompositeLit detects lock copy inside a composite literal
checkCopyLocksFunc checks whether a function might inadvertently copy a lock, by checking whether its receiver, parameters, or return values are locks.
checkCopyLocksGenDecl checks whether lock is copied in variable declaration.
checkCopyLocksRange checks whether a range statement might inadvertently copy a lock by checking whether any of the range variables are locks.
checkCopyLocksReturnStmt detects lock copy in return statement
checkETag implements If-None-Match and If-Range checks.
checkExpr checks that x is an expression (and not a type).
checkForGNUSparsePAXHeaders checks the PAX headers for GNU sparse headers.
checkForResumption reports whether we should perform resumption on this connection.
checkFrameOrder reports an error if f is an invalid frame to return next from ReadFrame.
checkFunc checks invariants of f.
checkHeader verifies the header of the file.
checkIsBestApprox32 checks that f is the best possible float32 approximation of r.
checkIsBestApprox64 checks that f is the best possible float64 approximation of r.
checkLastByte encodes the last buffered byte if it is a space or a tab.
checkLinear asserts that the running time of f(n) is in O(n).
checkLongShift checks if shift or shift-assign operations shift by more than the length of the underlying variable.
checkLower checks for unlowered opcodes and fails if we find one.
checkPrint checks a call to an unformatted print routine such as Println.
checkPrintf checks a call to a formatted print routine such as Printf.
checkPub sanity checks the public key before we use it.
checkQueryStringHandler checks if r.URL.RawQuery has the same value as the URL excluding the scheme and the query string and sends 200 response code if it is, 500 otherwise.
checkRangeLoop walks the body of the provided range statement, checking if its index or value variables are used unsafely inside goroutines or deferred function literals.
checkRedirect calls either the user's configured CheckRedirect function, or the default.
checkRenegotiationError, if not nil, is called with any error arising from renegotiation.
checkReset reports any error sent in a RST_STREAM frame by the server.
checkShadowAssignment checks for shadowing in a short variable declaration.
checkShadowDecl checks for shadowing in a general variable declaration.
checkShadowing checks whether the identifier shadows an identifier in an outer scope.
checkShouldTest runs sanity checks on the shouldTest function.
checkSimilarDistribution returns success if the mean and stddev of the two statsResults are similar.
checkTestFunctions walks Test, Benchmark and Example functions checking malformed names, wrong signatures and examples documenting inexistent identifiers.
checkTransportResend checks whether a failed HTTP request can be resent on a new connection.
checkUnkeyedLiteral checks if a composite literal is a struct literal with unkeyed fields.
checkUnreachable checks a function body for dead code.
checkVal is a version of check that returns its extra argument, so it can be used in conditionals.
checkValid verifies that data is valid JSON-encoded data.
checkValue checks an unsampled value against a range.
checkVolume8dot3Setting runs "fsutil 8dot3name query c:" command (where c: is vol parameter) to discover "8dot3 name creation state".
checkbce is only activated when with corresponsing debug options, so it's off by default.
checkbce needs the values removed
checkbce prints all bounds checks that are present in the function.
checkdupfields emits errors for duplicately named fields or methods in a list of struct or interface types.
checked in 1st pass (check.stmt)
checked in 2nd pass (check.labels)
checkedptr returns the Value, if any, that is used in a nil check in b's Control op.
checkers is a two-level map.
checkgoto checks that a goto from from to to does not jump into a block or jump over variable declarations.
checkpoint saves the current state of known relations.
checkpointFact is an invalid value used for checkpointing and restoring factsTable.
checks if the address has shadow (i.e. heap or data/bss) go:nosplit
checksum is a slow but simple implementation of the Adler-32 checksum.
checkwidth makes sure the size is evaluated eventually.
child is subrange with upper bound
child should be finished.
children is non-nil for internal nodes
chki8(int8(f32), 0) chki8(int8(f64), 0)
chku8(uint8(f32), 0) chku8(uint8(f64), 0)
chop off trailing separator
chop to 22 bits, make larger than cbrt(x)
chose base such that we cross the mantissa precision limit
chromiumBasicsTests contains fundamental tests.
chromiumDeletionTests must be performed all on the same Jar.
chromiumDomainTests contains jarTests which must be executed all on the same Jar.
chtmpdir changes the working directory to a new temporary directory and provides a cleanup function.
chunkWriter writes to a response's conn buffer, and is the writer wrapped by the response.bufw buffered writer.
chunkWriter.Writer (whose writeHeader finalizes Content-Length/Type) and which writes the chunk headers, if needed.
chunks as described above
ci.Close has been called
cipher message (KM) does not need key expansion so there is no assembly equivalent.
cipher suite in use (TLS_RSA_WITH_RC4_128_SHA, ...)
cipherSuiteLen is the number of bytes of cipher suite numbers.
circular buffer of recent GC pause end times
circular buffer of recent gc end times (nanoseconds since 1970)
circular buffer of recent gc pause lengths
claim the right to signal
clamp to uchar with room to grow
clang -pie fails to link misc/cgo/test
clang also writes out a byte size that we can use to distinguish.
clang is too smart about command-line arguments
clang writes out 'complex' instead of 'complex float' or 'complex double'.
clang, unlike GCC, passes -rdynamic to the linker even when linking with -static, causing a linker error when using GNU ld.
clause.Comm must be a SendStmt, RecvStmt, or default case
clean up but preserve trailing slash
clean up phi's args and b's predecessor list
clean up the removed nil check
cleanAlt cleans re for eventual inclusion in an alternation.
cleanClass sorts the ranges (pairs of elements of r), merges them, and eliminates duplicates.
cleanHost strips anything after '/' or ' '.
cleanTest is the action for cleaning up after a test.
cleanup cleans up a test that runs testgo.
cleanup whatever was placed in "renameto"
cleanupOnePass drops working memory, and restores certain shortcut instructions.
cleanupTypes removes the association of functions and methods with types that have no declaration.
clear Frev if unneeded
clear frees all threads on the thread queue.
clear nil check if we should and traverse to dominees regardless
clear out entries in temp1 which equal lastred count entries in optst table
clear perm, setuid, setgid and sticky bits.
clear rightmost bit of target
clearAllConns closes all connections in db.
clearCheckmarkSpan undoes all the checkmarking in a span.
clearLoopCutOff is the (somewhat arbitrary) value above which it is better to have a loop of clear instructions (e.g. XCs) rather than just generating multiple instructions (i.e. loop unrolling).
clearMarked clears the marked bit in the markbits, atomically.
clearMarkedNonAtomic clears the marked bit non-atomically.
clearer in disassembly
clearfat clears (i.e. replaces with zeros) the value pointed to by nl.
clearpools before we start the GC.
clearslim generates code to zero a slim node.
client's Response.Trailer
client's number of open streams
clientConnReadLoop is the state owned by the clientConn's frame-reading readLoop.
clientFinished and serverFinished contain the Finished message sent by the client or server in the most recent handshake.
clientFinishedIsFirst is true if the client sent the first Finished message during the most recent handshake.
clientSessionCacheKey returns a key used to cache sessionTickets that could be used to resume previously negotiated TLS sessions with a server.
clientStream is the state for a single HTTP/2 stream.
clientSum returns the contents of the verify_data member of a client's Finished message.
clientTest represents a test of the TLS client handshake against a reference implementation.
clip clips r against each image's bounds (after translating into the destination image's coordinate space) and shifts the points sp and mp by the same amount as the change in r.Min.
clobber erases any desired registers in the set m.
clobber invalidates v.
clobber is used by rewrite rules to: A) make sure v is really dead and never used again.
clone returns a copy of the reader.
clone returns a new reader for the type unit.
cloneTLSClientConfig is like cloneTLSConfig but omits the fields SessionTicketsDisabled and SessionTicketKey.
cloneTLSConfig returns a shallow clone of the exported fields of cfg, ignoring the unexported sync.Once, which contains a mutex and must not be copied.
close closes the underlying TCP connection and closes the pc.closech channel.
close enough: worst case we will allocate an extra temporary and the registerizer will clean it up.
close now, instead of defer, to populate res.Trailer
close op generic ops have no reg info or asm
close pipe, restore stdout/stderr, get output
closeConnChan is like closeConn, but takes an optional channel to receive a value when the goroutine closing c is done.
closeConnIfStillIdle closes the connection if it's still sitting idle.
closeDot drains the current DotReader if any, making sure that it reads until the ending dot line.
closeNotify is a special case in that it isn't an error.
closeNotifyCh is non-nil once CloseNotify is called.
closeWithErrorAndCode is like CloseWithError but also sets some code to run in the caller's goroutine before returning the error.
closeWord writes the end of an encoded-word into buf.
closeWrite flushes any outstanding data and sends a FIN packet (if client is connected via TCP), signalling that we're done.
closed by the first cancel call.
closed wait stream transitions to closed state owned by serverConn's serve loop:
closed when conn closed
closed when roundTrip caller has returned
closed when serverConn.serve ends
closure variable reference
closuredebugruntimecheck applies boilerplate checks for debug flags and compiling runtime
closurename returns name for OCLOSURE n.
cmd is a convenience function that sends a command and returns the response
cmd.Run will fail on Unix if some other process has the binary we want to run open for writing.
cmd/7l doesn't support cgo internal linking This is https://golang.org/issue/10373.
cmd/9l/l.h from Vita Nuova.
cmd/cgo is handled specially in b.action, so that we can both build and use it in the same 'go install'.
cmd/cgo: undefined reference when linking a C-library using gccgo
cmd/compile used to require integer constants to fit into an "int".
cmd/go: "go test" should fail if package does not build
cmd/go: custom import path checking should not apply to github.com/xxx/yyy.
cmd/go: go test -a foo does not rebuild regexp.
cmd/link Command Line Interface The go command and any other Go-aware build systems invoke cmd/link to link a collection of packages into a single binary.
cmdFlags parses the options of an interactive command and returns an updated flags object.
cmdline   os.Args memstats  runtime.Memstats
cmdlist lists all supported platforms.
cmdtab records the available commands.
cmp hi bgt to blt L cmp lo bge to (or bgt to) L:
cmp hi blt to bgt L cmp lo ble to (or jlt to) L:
cmp hi bne L cmp lo beq to L:
cmp hi bne to cmp lo bne to
cmp hi jgt to jlt L cmp lo jge to (or jgt to) L:
cmp hi jlt to jgt L cmp lo jle to (or jlt to) L:
cmp hi jne L cmp lo jeq to L:
cmp hi jne to cmp lo jne to
cmp_ssa.go tests compare simplification operations.
cmpout Copyright 2009 The Go Authors.
cmpstackvarlt reports whether the stack variable a sorts before b.
cname returns the C name to use for C.s.
co-processor 0 control registers
code (with db.mu held) run when conn is next returned
code for cipher message instruction
code points not adjacent (shouldn't happen)
code to help generate trampoline functions for methods on embedded subtypes.
code to run on the serve loop
code using x.Maybe() or x.Choice(n) to create test cases ...
code-message line 1 code-message line 2 ...
code-message line 1 message line 2 ...
code_alignment_factor
codes for literal and offset encoding must be supplied.
collapse indicates whether prev may be removed, leaving only next.
collapse returns the result of applying op to sub.
collapseTags reduces the number of entries in a tagMap by merging adjacent nodes into ranges.
collect MARKER(...): annotations
collect associated methods
collect comments text
collect embedded methods
collect embedded methods for t
collect gathers the emitted items into a slice.
collect interface types with their dependencies, and all other objects
collect lhs variables
collect methods at current depth
collect top-level file objects in package scope
collectArgument returns the actual tokens for a single argument of a macro.
collectEmbeddedMethods collects the embedded methods of typ in mset.
collectObjects collects all file and package objects and inserts them into their respective scopes.
collected preamble for _cgo_export.h
collected text excluding tabs or line breaks
collector merges in one channel all the upstream signals from parallel tests.
colon, but no port OK
color table and graphics control (13)
colors generates the CSS rules for coverage colors.
column block end discard empty columns if necessary
column number, starting at 1 (byte count)
column number, starting at 1 (character count per line)
combine adjacent cases with the same hash
combine halves to form 56-bit input to PC2
combine sorted groups at end of sa
combine sorted groups before pi
combinedMult implements fast multiplication S1*g + S2*p (g - generator, p - arbitrary point)
come back when we're done.
coming out of cgo call
comma was always permitted (like function call)
command implementations
command install directory ("" if unknown)
command, if not empty, contains a series of arguments for the command to run for the reference server.
command: operand (space operand)* space-separated arguments up to a pipeline character or right delimiter.
commands to download a fresh copy of a repository
commands to download updates into an existing repository
commands to list tags
commands to lookup tags before running tagSyncCmd
commands to sync to default tag
commands to sync to specific tag
commaok indicates whether to panic or return a bool.
commaok is the more complicated case because we have a control flow merge point.
comment character for start of line
comment group at current index
comment in a different file - separate with newlines
comment on a different line: separate with at least one line break
comment on the same line as last item: separate with at least one separator
comment on x, not on url
comment starts at the beginning of the current line
comment text on the first line
commentBefore reports whether the current comment group occurs before the next position in the source code and printing it does not introduce implicit semicolons.
commentEscaper returns the empty string regardless of input.
commentSizeBefore returns the estimated size of the comments on the same line before the next position.
commented node - restrict comment list to relevant range
commented out to avoid a huge table just for debugging.
comments from func aclass in asmz.go
commentsHaveNewline reports whether a list of comments belonging to an *ast.CommentGroup contains newlines.
commit applies changes to actions and template calls needed to contextually autoescape content and adds any derived templates to the set.
commit the grow (atomic wrt gc)
common case will be no lock contention.
common case: p is in last file
common case: single declaration w/o parentheses (if a single declaration is parenthesized, create a new fake declaration below, so that go/doc type declarations always appear w/o parentheses)
common case: the entire token text is still in srcBuf
common case: use constants for / because the compiler can optimize it into a multiply+shift
common case: x fits into an int64 - use compact encoding
common for users not to be able to write to /
common holds the elements common between T and B and captures common methods such as Errorf.
common holds the information shared by related templates.
common mistake: *struct and *interface.
common returns the CommonType at the input point.
common to all associated templates
common-subexpression before dead-store elim, so that we recognize when two address expressions are the same.
commonHeader interns common header strings.
commonPrefix returns the common prefix of a and b.
communication variables between various I/O routines
commutativeSets returns all side effect free sets of expressions in e that are connected by op.
compact format - nothing to do
compare and branch reg reg
compare and swap reg reg reg
compare least significant word
compare memory stats with gc stats:
compare parity clear (for x86 NaN check)
compare parity set (for x86 NaN check)
compare types, returning one of CMPlt, CMPeq, CMPgt.
compareErrors compares the map of expected error messages with the list of found errors and reports discrepancies.
comparison is okay as long as one side is assignable to the other.
comparison of an interface with a non-interface, especially in a switch on interface value with non-interface cases, is not visible to orderstmt, so we have to fall back on allocating a temp here.
compatRegs returns the set of registers which can store a type t.
compatibility version
compilation of top-level (static) assignments into DATA statements if at all possible.
compile Copyright 2013 The Go Authors.
compile and test output
compile-time assertion failure - safe to continue
compile-time constants are evaluated.
compileDec compiles the decoder engine for a value.
compileEnc returns the engine to compile the type.
compileIgnoreSingle compiles the decoder engine for a non-struct top-level value that will be discarded.
compileSingle compiles the decoder engine for a non-struct top-level value, including GobDecoders.
compiled expression for -run
compiled onepass program, or notOnePass
compiler allocates R0 up as temps compiler allocates register variables R7-R25 compiler allocates external registers R26 down
compiler allocates R1 up as temps
compiler allocates external registers F7 down
compiler allocates external registers R10 down
compiler allocates external registers R15 down
compiler allocates register variables F0 up
compiler allocates register variables F7-F26 compiler allocates external registers F26 down
compiler allocates register variables R3 up
compiler checks this but be safe.
compiler crash fixable with 'switch true'
compiler emits a check of this before calling write barrier
compiler has provided some good hash codes for us.
compiler not supported
compiler to assume when computing target paths
compiler to assume when computing target paths The build and release tags specify build constraints that should be considered satisfied when processing +build lines.
compiler used to crash on nested divide
compiler-emitted artificial things that we do not want to instrument, can't possibly participate in a data race.
compiler-specific stuff
compiles because r compiled same comment about Lookup applies here as in the loop above
complete file scopes with imports and resolve identifiers
complete package scope
complete, unambiguous type name
completely separate copy
completion port io handle
complex infinites and NaNs
complex side effects like statements are appended to init
complex test instructions - ignore
complex to complex move/convert.
complex(Left, Right) statements
complex(x, y floatT) complexT
complex128 is the set of all complex numbers with float64 real and imaginary parts.
complex64 is the set of all complex numbers with float32 real and imaginary parts.
complexSize is the maximum length of arbitrary values that contain other values.
complexTokens returns the real and imaginary parts of the complex number starting here.
complex_lit or rune_lit
compose modifies t such that it respects the previously-registered hooks in old, subject to the composition policy requested in t.Compose.
composite literal elements that are composite literals themselves may have the type omitted
composite literals are not addressable assignable but not addressable values
composite values with the 'a' verb
composite values with the 'v' verb.
compressOrig is the "simple" compress function from LT paper
compressed, dynamic Huffman tables
compressed, fixed Huffman tables
compression algorithm
compute (x+y)/2 unsigned.
compute accurate (not rounded) result z
compute accurate x as z*y
compute address of actual parameter on stack.
compute adjusted x.mant such that we get enough result precision
compute an array with the beginnings of productions yielding given nonterminals The array pres points to these lists the array pyield has the lists: the total size is only NPROD+1
compute an array with the first of nonterminals
compute documentation
compute expected accuracy
compute exponent power
compute exponents ex, ey for mantissa with "binary point" on the right (mantissa.0) - use int64 to avoid overflow
compute maximum common white prefix
compute number of words n required to represent x
compute offset relative to FP
compute offsets on demand
compute size info like hashmap.c does.
compute size needed for return parameters
compute the lookahead
compute the object dependency graph and initialize a priority queue with the list of graph nodes
compute the result of i op j, cast as type t.
compute total size of f's in/out arguments.
compute yd (or the negative value if underflow occurs)
compute z0 and z2 with the result "in place" in z
computeBuildID computes the build ID for p, leaving it in p.buildID.
computeLive also computes the desired register information at the end of each block.
computeLive computes a map from block ID to a list of stack-slot-needing value IDs live at the end of that block.
computeLive computes a map from block ID to a list of value IDs live at the end of that block.
computeMethodSets determines the actual method sets for each type encountered.
computeOutCtx takes a template and its start context and computes the output context while storing any inferences in e.
computeStale computes the Stale flag in the package dag that starts at the named pkgs (command-line arguments).
computed address, 16-bit displacement, possibly SP-relative
computed address, 32-bit displacement, possibly SP-relative
computed by calibrate.go karatsuba multiplies x and y and leaves the result in z.
computed from sizeclass or from npages
concat of failure is failure
concat returns the result of concatenating list and i.
concat takes two generators and returns a generator for the cross product of the two, concatenating the results from each.
concat3 takes three generators and returns a generator for the cross product of the three, concatenating the results from each.
concat4 takes four generators and returns a generator for the cross product of the four, concatenating the results from each.
concatstring slice should die on return
concatstrings implements a Go string concatenation x+y+z+...
concrete type (not interface) argument must be addressable temporary to pass to runtime.
concreteTypeToName is keyed off the base type.
concurrent GC and sweep
condBranch evaluates the boolean expression cond and branches to yes if cond is true and no if cond is false.
condCases generates conditional instructions.
conditions array record the required CPSR cond field for the first 5 pairs of conditional execution opcodes higher 4 bits are must set, lower 4 bits are must clear
conf represents a system's network configuration.
conf.go mirrors these into conf for easier testing.
config is usually used to say what binaries to invoke.
config not needed for non-constant x
config, if not nil, contains a custom Config to use for this test.
configuration (arch) information
configuration passed to constructor handshakeComplete is true if the connection is currently transfering application data (i.e. is not currently processing a handshake).
confirm that child.handleRecord closes req.pw after aborting req
confirm that child.serve closes all pipes after error reading record
conflict - mark it using a method with nil Decl
conflict, add disambiguating string.
conflicts with and hides bytes.Buffer's ReaderFrom.
conflicts with and hides bytes.Buffer's WriterTo.
confusion about addressed results used to cause "live at entry to f7: x".
confusion about the _ result used to cause spurious "live at entry to f6: _".
conn points to the shared connection-level flow that is shared by all streams on that conn.
conn returns a newly-opened or cached *driverConn.
conn sends records over rwc
conn's bufio writer zero chunk to mark EOF
conn-wide (not stream-specific) outbound flow control
conn-wide inbound flow control
connError returns ConnectionError(code) but first stashes away a public reason to the caller can optionally relay it to the peer before hanging up on them.
connFromCommand starts opens a listening socket and starts the reference client to connect to it.
connFromCommand starts the reference server process, connects to it and returns a recordingConn for the connection.
connReader is the io.Reader wrapper used by *conn.
connRequest represents one request for a new connection When there are no idle connections available, DB.conn will create a new connRequest and put it on the db.connRequests list.
connReuseStrategy determines how (*DB).conn returns database connections.
connStmt is a prepared statement on a particular connection.
connStmt returns a free driver connection on which to execute the statement, a function to call to release the connection, and a statement bound to that connection.
connect makes a connection to the syslog server.
connectMethod is the map key (in its String form) for keeping persistent TCP connections alive for subsequent HTTP requests.
connectMethodKey is the map key version of connectMethod, with a stringified proxy URL (or the empty string) instead of a pointer to a URL.
connection closed by user in the meantime
connection resumes a previous TLS connection
connection will close upon return
conservative - everything might be a pointer
consolidateMultiples collects multiple list entries with the same type into a single entry marked as containing multiples.
const temperature.Boiling temperature.Celsius .
const* routines add a new const value to the entry block.
constVal returns a constant value for c.
constant (int32 or uint32)
constant (int64 or uint64)
constant TODO(gri) determine if we need the typecheck call here
constant integer arguments, if any
constant no tests for trace since it produces output as a side-effect
constant shift expressions
constant types are never structured - no need for parent type
constant with mixed type runes
constant, lineptr, loclistptr, macptr, rangelistptr
constantPropagation removes redundant constant copies.
constantTimeStringCompare compares string a and b in a constant time manner.
constants and variables are always handled as a group
constants and variables have the same ullman count, so look for constants specially.
constants can't move directly to memory
constants from Numerical Recipes
construct lots of values with args that have aux values and place them in an order that triggers the bug
construct table of powers of bb*leafSize to use in subdivisions
construct the bit pattern 000...111, with bit 33 set as well.
construct two pointers that alias one another
constructed by hand and disassembled with gdb to verify.
consult goto table to find next state
consume ':' after declaring select cases for correct lineno
consume ':' after declaring type switch var for correct lineno
consume ':' after making label node for correct lineno
consume initial '/' again
consume reads the next rune in the input and reports whether it is in the ok string.
consume successor comments, if any
consume the leading quote
consumeAddrSpec parses a single RFC 5322 addr-spec at the start of p.
consumeAtom parses an RFC 5322 atom at the start of p.
consumePhrase parses the RFC 5322 phrase at the start of p.
consumeQuotedString parses the quoted string at the start of p.
consumeToken consumes a token from the beginning of provided string, per RFC 2045 section 5.1 (referenced from 2183), and return the token consumed and the rest of the string.
consumeValue consumes a "value" per RFC 2045, where a value is either a 'token' or a 'quoted-string'.
consumed unassociated comments - remove from AST
consumes d.buf iff it returns nil.
contains exported field
contains is a local version of strings.Contains.
contains reports whether the position is inside the span.
contains reports whether the string contains the byte c.
contains reports whether the text s contains any of the given substrings.
contains returns true if vector contains the string s.
contains some constant values, which may be written into data symbols
contains some dynamic values, for which init code will be generated
contains the RLE data still to be processed.
contains type information about the states
contains version field as well.
content must be seeked to the beginning of the file.
contentLengthAlreadySent may have been already sent for POST/PUT requests, even if zero length.
context describes the context in which the assignment takes place.
context describes the state an HTML parser must be in when it reaches the portion of HTML produced by evaluating a particular template node.
context is init() function.
context, for goto restrictions
context-specific, tag 0
contextAfterText starts in context c, consumes some tokens from the front of s, then returns the context after those tokens and the unprocessed suffix.
contextKey is a value for use with context.WithValue.
contexts are the default contexts which are scanned, unless overridden by the -contexts flag.
continue loop on the other.
continue loop with what comes after p
continue to read to closing quote
continue to use the current P
continue with first expression
continue with first receiver
continue with first two expressions
continue with underlying type
control flow is more complicated in generated go code than in generated c code.
control is call op (of memory type)
convas will turn map assigns into function calls, making it impossible for reorder3 to work.
conversion or unsafe.Alignof, Offsetof, Sizeof
conversion should match strconv where syntax is agreeable
conversion to interface should not leave temporary behind
conversions involved.
conversions to literal function types require parentheses around the type
convert I1 to I2 call interface
convert a parsed id/type list into a type for struct/interface/arglist
convert any partial leading digit and advance to next word
convert both interface key and interface value
convert both, with non-empty interfaces
convert case value arguments to addresses.
convert channel direction
convert constant to desired type
convert digits of most-significant word w (omit leading zeros)
convert each bit to a variable
convert float32 to float64
convert float32 to int32
convert float32 to int64
convert float64 to float32
convert float64 to int32
convert float64 to int64
convert from Prog list to machine code
convert from float/float64 to int32/int64
convert from float/float64 to uint32/uint64
convert from int32/int64 to float/float64
convert from uint32/uint64 to float/float64
convert identical underlying types TODO(rsc): Should be able to define MyBuffer here.
convert int32 to float32
convert int32 to float64
convert int64 to float32
convert int64 to float64
convert interface key
convert interface value
convert into 100-nanosecond
convert into an expression list so we can re-use exprList formatting
convert into nanoseconds
convert large precision literal floating into limited precision (float64 or float32)
convert n, if literal, to type t.
convert ns to cycles, use float64 to prevent overflow during multiplication
convert or check untyped arguments
convert power of two and non power of two bases separately
convert q to string s in base b
convert rune into digit value d1
convert so they have the same type.
convert string Algorithm: Collect digits in groups of at most n digits in di and then use mulAddWW for every such group to add them to the result.
convert the switch into OIF statements
convert to 64-bit info
convert to common ideal
convert to interface with methods this conversion is guaranteed to succeed - we checked in SetFinalizer
convert to little endian TODO(gri) go/constant should have a more direct conversion function (e.g., once it supports a big.Float based implementation)
convert to machine-dependent ops
convert to regular number
convert untyped types to default types
convert via int32 memory
convert via int64 memory
convert x into a user-friendly set of values TODO(gri) this code can be simplified
convert x to type et and back to int64 for sign extension and truncation.
convertAssign copies to dest the value in src, converting it if possible.
convertComplex converts the next token to a complex128 value.
convertFloat converts the string to a float64value.
convertNumber converts the number literal s to a float64 or a Number depending on the setting of d.useNumber.
convertOp returns the function to convert a value of type src to a value of type dst.
convertOp: direct copy
convertString returns the string represented by the next input characters.
convertUntyped attempts to set the type of an untyped value to the target type.
convince inliner not to inline
convlit1 converts n, if literal, to type t.
convtype '(' expr ocomma ')'
cooked random numbers the state of the rng after 780e10 iterations
cookies is like Cookies but takes the current time as a parameter.
copies and protects "'s in q
coprocessor information
coprocessor operation
copy JSON into buffer, checking validity.
copy all data from the current object to the new one
copy any *T Extra fields, to avoid aliasing
copy any postfix code
copy as much as we can
copy copies a desired state from another desiredState x.
copy copies the file src to dst, via memory (so only good for small files).
copy data from queue to receiver
copy data from sender ep points to our own stack or heap, so nothing special (ala sendDirect) needed here.
copy data from sender to queue
copy existing function declaration and set new receiver field list
copy existing function documentation and set new declaration
copy existing receiver field and set new type
copy existing receiver field list and set new receiver field
copy from byte to full registers
copy fwdJumps to badJumps
copy into temporaries.
copy new type and clear fields that don't come along.
copy numeric value to avoid modifying nl, in case someone still refers to it (e.g. iota).
copy of allspans referenced by gc marker or sweeper
copy of array of pointers should die at end of range loop
copy of dcl for use in inlining
copy of the body for use in inlining
copy old stack barriers to new stack barrier array
copy returns a copy of the underlying data.
copy returns a shallow copy of t, with common set to the argument.
copy returns the level for a copy of a value with level l.
copy static to automatic
copy static to heap (4)
copy the constant for conversion
copy the map value in case it is a map literal.
copy the remaining c bytes
copy the union declaration to the output, and the define file if present
copy to let escape into Ctxt.Dconv
copy types from externdcl list to signatlist
copy up to 4 instructions or else branch to other copy.
copy1 replaces uses of v2 with v1 starting at r and returns 1 if all uses were rewritten.
copy1 replaces uses of v2 with v1 starting at r and returns true if all uses were rewritten.
copyBuffer is the actual implementation of Copy and CopyBuffer.
copyChecker holds back pointer to itself to detect object copying.
copyConstType returns a copy of typ with position pos.
copyData copies f.copyLen bytes from the underlying reader into f.hist.
copyFile is like 'cp src dst'.
copyInto makes a new value identical to v and adds it to the end of b.
copyPropagation tries to eliminate register-to-register moves.
copySource returns the (non-copy) op which is the ultimate source of v.
copyTrailersToHandlerRequest is run in the Handler's goroutine in its Request.Body.Read just before it gets io.EOF.
copyWithLeftPad copies src to the end of dest, padding with zero bytes as needed.
copyas returns 1 if a and v address the same register.
copyas returns true if a and v address the same register.
copyau returns 1 if a either directly or indirectly addresses the same register as v.
copyau returns true if a either directly or indirectly addresses the same register as v.
copyau1 returns 1 if p.Reg references the same register as v and v is a direct reference.
copyelim removes all uses of OpCopy values from f.
copyelimValue ensures that no args of v are copies.
copysub replaces v.Reg with s.Reg if a.Reg and v.Reg are direct references to the same register.
copysub returns true on failure to substitute.
copysub substitute s for v in a.
copysub1 replaces p.Reg with s.Reg if p.Reg and v.Reg are direct references to the same register.
corner case: empty source
corner case: source with only a newline
corner case: source with only a single character
correct (the dynamic type of nonemptyinterface may be a stringer)
correct (the type is responsible for formatting)
correct double-marking of directory itself
correct for earlier optimism
correctly encoded RuneError
corresponding declared object
corresponding label (ephemeral)
corresponds to the boolean formula:
cost of reference if not registerized
could accept if we wanted
could also decode from Type.string
could be C_ADDCON or C_BITCON
could be C_MOVCON or C_BITCON
could be a conversion: (some type)(x)
could be type for composite literal or conversion
could check that it is fn of no args/returns
could do add/sub more efficiently
could hash on t.t0.offset
could not parse ip:port, let's use whole RemoteAddr and leave REMOTE_PORT undefined
could use Tptr but these are constants
couldn't find the function for this PC, so assume the worst and stop traceback
count all the messages arriving
count bytes, not uint16
count indented or blank lines
count is a flag.Value that is like a flag.Bool and a flag.Int.
count of instructions
count of references to reg
count of zero padding
count returns a channel that will deliver n sequential 1-letter strings starting at "a"
count returns the count and index for the counter at the specified line.
count the initializers
countBlock returns the number of records in the blocking profile.
countEdges counts the number of edges below the specified cutoff.
countFree runs through the mark bits in a span and counts the number of free objects in the span.
countGoroutine returns the number of goroutines.
countHeap returns the number of records in the heap profile.
countRegs returns the number of set bits in the register mask.
countThreadCreate returns the size of the current ThreadCreateProfile.
countUses returns the number of uses of the identifier x in scope.
counterCrypt crypts in to out using g.cipher in counter mode.
counters will be added before S1 and before S3.
countingWriter counts how many bytes have been written to it.
counts the number of symbols decoded by the current tree.
coverReport reports the coverage percentage and writes a coverage profile if requested.
coverage returns a floating point number denoting the test coverage until now.
coverage returns the fraction of the statements in the function that were covered, as a numerator and denominator.
coveragePercentage returns the coverage results (if enabled) for the test.
cpu has a dedicated zero register
cpu, wall, inuse_space, etc
cpuProfile returns a new Profile from C++ profilez data.
cputicks when syscall has returned (for tracing)
cputicks when tracing was started
cputicks when tracing was stopped
cr and pr are the bytes for the current and previous row.
crash by write to memory address 0.
create OADDSTR node with list of strings in x + y + z + (w + v) + ...
create a fake type to encode ...
create a new file if none exists.
create corresponding float
create creates a file in the file system with the given name, mode, time, and data.
create creates a new copy of repo in dir.
create creates and initializes an archive that does not exist.
create final parameter list
create new closure var.
create new table for this conversion
create node list in lexical order
create stack variable to hold pointer to heap
create string with byte array
create string with byte array pointer
create string with int array
create string with integer constant
create string with integer variable
create symbols for elfmapped sections
create symbols for mapped sections
create temporary directory and arrange cleanup
createAttrPrefix finds the name space prefix attribute to use for the given name space, defining a new prefix if necessary.
createEnvBlock converts an array of environment strings into the representation required by CreateProcess: a sequence of NUL terminated strings followed by a nil.
createFiles copies srcPath file into multiply files.
create_user_ns in the kernel (see https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/kernel/user_namespace.c) forbids the creation of user namespaces when chrooted.
created by Go, after we wrote the "optional" data descriptor signatures (which are required by OS X)
created by Go, before we wrote the "optional" data descriptor signatures (which are required by OS X)
created by Zip 3.0 under Linux
created by cgo -cdefs and then converted to Go cgo -cdefs defs_linux.go defs1_linux.go
created by cgo -cdefs and then converted to Go cgo -cdefs defs_linux.go defs3_linux.go
created by cgo -cdefs and then converted to Go cgo -cdefs defs_netbsd.go defs_netbsd_386.go
created by cgo -cdefs and then converted to Go cgo -cdefs defs_netbsd.go defs_netbsd_amd64.go
created by cgo -cdefs and then converted to Go cgo -cdefs defs_netbsd.go defs_netbsd_arm.go
created by cgo -cdefs and then converted to Go cgo -cdefs defs_solaris.go defs_solaris_amd64.go
created in windows XP file manager.
creates 16 28-bit blocks rotated according to the rotation schedule
creates 16 56-bit subkeys from the original key
creates a parser that can handle typical HTML.
creates output string for item pointed to by pp
creatingTemp records that the test plans to create a temporary file or directory.
critical splits critical edges (those that go from a block with more than one outedge to a block with more than one inedge).
crosscall1 calls into the runtime to set up the registers the Go runtime expects and so the symbol it calls needs to be exported for external linking to work.
crosscall_ppc64 calls into the runtime to set up the registers the Go runtime expects and so the symbol it calls needs to be exported for external linking to work.
cryptBlocks invokes the cipher message (KM) instruction with the given function code.
cryptBlocksChain invokes the cipher message with chaining (KMC) instruction with the given function code.
crypto/rand should set the top two bits in each prime.
crypto/rand.Reader is a good source of entropy for blinding the RSA operation.
crypto/rand.Reader is a good source of entropy for randomizing the encryption function.
cse does common-subexpression elimination on the Function.
cse substantially improves nilcheckelim efficacy
cse, phiopt, nilcheckelim, prove and loopbce share idom.
css is a list of underlying driver statement interfaces that are valid on particular connections.
cstring converts ASCII byte sequence b to string.
ctrAble is an interface implemented by ciphers that have a specific optimized implementation of CTR, like crypto/aes.
ctrAble is implemented by cipher.Blocks that can provide an optimized implementation of CTR through the cipher.Stream interface.
ctx is either the client or server context.
cu has no line table.
curfnSym returns n.Curfn.Nname.Sym if no nils are encountered along the way.
current block number dclstack maintains a stack of shadowed symbol declarations so that popdcl can restore their declarations when a block scope ends.
current block we're working on
current comment index
current directory in printed script
current feedback register
current field typ and tag
current handled block
current indentation level
current input line number
current known set of relation
current line is non-blank, surrounded by blank lines and the next non-blank line is not indented: this might be a heading.
current list length excluding (this) sentinel element
current loop depth is an upper bound on actual loop depth of addressed value.
current node position
current node, for errors
current pass information (name, options, etc.)
current position in AST (source) space
current position in output space
current position in the input
current program status register
current reading index
current running goroutine
current state of each (preregalloc) Value
current state of each register
current target for plain break statement
current target for plain continue statement current location where we're interpreting the AST
current: Information being used during this GC cycle.
currently in-flight dials
currently that can leave unresolved ONONAMEs in import-dot-ed packages in the wrong package
cut errors off after a while.
cut in half to give stack a chance to split
cut interpretation bits, producing original segment prefix
cut long ranges short (optimization)
cut off (round to zero) low 53-prec bits
cut off (round to zero) low 63-prec bits
cut off (round to zero) low 64-prec bits
cut off excess text and go back to a word boundary
cut off gc-specific parameter numbering
cut off msb (implicit 1 bit)
cut off unused trailing words
cv refers to the field inside of closure OSTRUCTLIT.
cx won't be affected.
cycle clock frequency if there is one, 0 otherwise
cycle.elf built with GCC 4.8.4: gcc -g -c -o cycle.elf cycle.c
cycles spent in kernel
cycles spent in process (kernel + user)
d overflows, should not be handled.
d's arguments need to be in the stack.
d.scan thinks we're still at the beginning of the item.
dalgsym is only called for a type that needs an algorithm table, which implies that the type is comparable (or else it would use ANOEQ).
darwin ld64 cannot handle BR26 reloc with non-zero addend
dat is the section of attrBuf that contains valid data, without the 4 byte length header.
data element (may point to stack) The following fields are never accessed concurrently.
data instruction Set, use, or kill of carry bit.
data offset should be the size of the bmap struct, but needs to be aligned correctly.
data only written by relocations
data past the end is different
data remaining in pending write
dataDescriptorLen includes the size of the signature but first read just those 4 bytes to see if it exists.
dataSize is the total size of the intended data, a multiple of elemSize.
dataSize returns the number of bytes the actual data represented by v occupies in memory.
dataSortKey is used to sort a slice of data symbol *LSym pointers.
datap is a collection of reachable data symbols in address order.
date that fix was introduced, in YYYY-MM-DD format
dc is owned exclusively until Commit or Rollback, at which point it's returned with putConn.
dcommontype dumps the contents of a reflect.rtype (runtime._type).
dcommontype, typehash
de-facto standard, required by OS X
dead value in dead block
deadCodeElimination removes writes to registers which are written to again before they are next read.
deadcode after prove to eliminate all new dead blocks.
deadcode after regalloc is forbidden for now.
deadcode marks all reachable symbols.
deadcode removes dead code from f.
deadcodepass holds state for the deadcode flood fill.
deadline has already passed
deadline returns the earliest of: - now+Timeout - d.Deadline - the context's deadline Or zero, if none of Timeout, Deadline, or context's deadline is set.
deal with expressions one at a time
deal with special go errors
deb.uint64 will error at EOF
debug implements Debug, but catches panics and returns them as errors to be printed by Debug.
debug.sbrk never frees memory, so no finalizers run (and we don't have the data structures to record them).
debugServerConnections controls whether all server connections are wrapped with a verbose logging wrapper.
debug_info_offset (of the Comp unit Header)
debugging flag for apack
debugging flag for closure
debugging flag for cpfir
debugging flag for putitem
debugging flag for stagen
debugging for callopt
debugging support (keep code around)
debugging/development support
decAlloc takes a value and returns a settable value that can be assigned to.
decBool decodes a uint and stores it as a boolean in value.
decBuffer is an extremely simple, fast implementation of a read-only byte buffer.
decComplex128 decodes a pair of unsigned integers, treats them as a pair of floating point numbers, and stores them as a complex128 in value.
decComplex64 decodes a pair of unsigned integers, treats them as a pair of floating point numbers, and stores them as a complex64 in value.
decFloat32 decodes an unsigned integer, treats it as a 32-bit floating-point number, and stores it in value.
decFloat64 decodes an unsigned integer, treats it as a 64-bit floating-point number, and stores it in value.
decIgnoreOpFor returns the decoding op for a field that has no destination.
decInt16 decodes an integer and stores it as an int16 in value.
decInt32 decodes an integer and stores it as an int32 in value.
decInt64 decodes an integer and stores it as an int64 in value.
decInt8 decodes an integer and stores it as an int8 in value.
decOp is the signature of a decoding operator for a given type.
decOpFor returns the decoding op for the base type under rt and the indirection count to reach it.
decString decodes byte array and stores in value a string header describing the data.
decUint16 decodes an unsigned integer and stores it as a uint16 in value.
decUint32 decodes an unsigned integer and stores it as a uint32 in value.
decUint64 decodes an unsigned integer and stores it as a uint64 in value.
decUint8 decodes an unsigned integer and stores it as a uint8 in value.
decUint8Slice decodes a byte slice and stores in value a slice header describing the data.
decide a shift/reduce conflict by precedence.
decide what to complain about.
decide where to start
decimal 0, octal, or float
decimal mantissa, binary exponent
decimal point in middle of digits
decimal power of ten to binary power of two.
decimal to binary floating point conversion.
declImports reports whether gen contains an import of path.
declNode() ensures that only declaration nodes can be assigned to a Decl.
declaration loop depth, increased for every loop or label
declarations (without value) cannot be races
declare all constants
declare all variables
declare all variables (only at this point are the variable scopes (parents) set)
declare imported package object in file scope
declare individual names - var, typ, const
declare new variable, possibly a blank (_) variable
declare new variables
declare non-blank label
declare records that Node n declares symbol n.Sym in the specified declaration context.
declare the C function.
declare the arguments in an interface field declaration.
declare the function proper and declare the arguments.
declare the out arguments.
declare the receiver and in arguments.
declareCoverVars attaches the required cover variables names to the files, to be used when annotating the files.
declareTrailer is called for each Trailer header when the response header is written.
decldepth++ to denote loop body.
decode an array value (Message)
decode as many elements as present in buf
decode decodes the IDAT data into an image.
decode decompresses bytes from r and leaves them in d.toRead.
decode is like Decode but returns an additional 'end' value, which indicates if end-of-message padding or a partial quantum was encountered and thus any additional data is an error.
decode is like Decode but returns an additional 'end' value, which indicates if end-of-message padding was encountered and thus any additional data is an error.
decode reads a GIF image from r and stores the result in d.
decode reads a JPEG image from r and returns it as an image.Image.
decode1 is the implementation of Decode but takes an extra gnuCompat flag to cause it to change its behavior to mimic bugs (or at least unique features) of GNU libopcodes as used by objdump.
decodeArg decodes the arg described by aop from the instruction bits x.
decodeArray decodes an array and stores it in value.
decodeArrayHelper does the work for decoding arrays and slices.
decodeCSS decodes CSS3 escapes given a sequence of stringchars.
decodeGobDecoder decodes something implementing the GobDecoder interface.
decodeHuffman returns the next Huffman-coded value from the bit-stream, decoded according to h.
decodeIgnoredValue decodes the data stream representing a value of the specified type and discards it.
decodeInt reads an encoded signed integer from state.r.
decodeInterface decodes an interface value and stores it in value.
decodeIntoValue is a helper for map decoding.
decodeMap decodes a map and stores it in value.
decodeShift decodes the shift-by-immediate encoded in x.
decodeSingle decodes a top-level value that is not a struct and stores it in value.
decodeSlice decodes a slice and stores it in value.
decodeState represents the state while decoding a JSON value.
decodeStruct decodes a top-level struct and stores it in value.
decodeUint reads an encoded unsigned integer from state.r.
decodeUintReader reads an encoded unsigned integer from an io.Reader.
decodeValue decodes the data stream representing a value and stores it in value.
decode_methodsig decodes an array of method signature information.
decoded immediate values
decoder is the state from which the readXxx method converts a byte stream into a code stream.
decoder is the type used to decode a GIF file.
decoderCover records coverage information for which parts of the byte code have been executed.
decoderState is the execution state of an instance of the decoder.
decoders for literal/length, distance
decodetype_name decodes the name from a reflect.name.
decodetype_str returns the contents of an rtype's str field (a nameOff).
decompose converts phi ops on compound builtin types into phi ops on simple types.
decorate + log + public function.
decorate inserts the final newline if needed and indentation tabs for formatting.
decorate prefixes the string with the file and line of the call site and inserts the final newline if needed and indentation tabs for formatting.
decref removes a reference from fd.
decref removes a reference from mu.
decrypt checks and strips the mac and decrypts the data in b.
decrypt function code is encrypt + 128
decrypt performs an RSA decryption, resulting in a plaintext integer.
decryptPKCS1v15 decrypts ciphertext using priv and blinds the operation if rand is not nil.
dedicatedMarkTime is the nanoseconds spent in dedicated mark workers during this cycle.
dedicatedMarkWorkersNeeded is the number of dedicated mark workers that need to be started.
deductSweepCredit deducts sweep credit for allocating a span of size spanBytes.
deductSweepCredit is the core of the "proportional sweep" system.
deductSweepCredit makes a worst-case assumption that all spanBytes bytes of the ultimately allocated span will be available for object allocation.
defPath and host are the default-path and the canonical host name of the URL c was received from.
defaulFileImpl implements fileImpl.
default actions of states lookahead set information
default behavior with no EV is "on"
default compression method
default filter method
default flag is debug
default is 0 for the first index
default is to leave line number alone in listtreecopy
default precision for 'e', 'f'
default precision for 'g', 'G'
default value, if not changed below
default) ast.Field         anonymous parameter *Var
default: 0 (all code is indented at least by this much)
default: 32 bit, unsigned
default: expression switch
default: false forceObjFileStability enforces additional constraints in export data and other parts of the compiler to eliminate object file differences only due to the choice of export format.
defaultCC is defined in zdefaultcc.go, written by cmd/dist.
defaultPath returns the directory part of an URL's path according to RFC 6265 section 5.1.4.
defaultRunOutputLimit returns the number of runoutput tests that can be executed in parallel.
defaultSeg returns the default segment for an implicit memory reference: the final override if present, or else DS.
defaultStart returns the default start element to use, given the reflect type, field info, and start template.
defaultUsage is the default function to print a usage message.
defaults to 64-bit mode
defer Left (Left must be call)
defer a function that panics 3.
defer a function that recovers 2.
defer checkwidth calls until after we're done
defer func arg dot dot of pointer dot-equals fixed-array-index-of go func go func ...
defer removal of ./testdata/test_cover.go
defer removal of test_line.go
defer removal of testcover
defer returns in rax: 0 if we should continue executing 1 if we should jump to deferreturn call
defer should not cause spurious ambiguously live variables
defer size class for arg size sz go:nosplit
defer some type-checking until all types are read in completely (parser.go:import_package)
deferproc returns 0 normally.
deferred call (defer)
deferred error for easy chaining
deferred subroutine calls
deferreturn pretends to have one uintptr argument.
define assert built-in
define break and continue labels
define dynamic elf table
define pseudo-variables for registers, so we have complete register usage information.
defineMacro stores the macro definition in the Input.
defined by files listed on command line
defined from directoryEndSignature in struct.go
defined in asm_amd64.s
defined in floor_amd64.s
defined reports whether the label has a definition (OLABEL node).
definition of named type
definition of temp var
definition: ONAME OTYPE OPACK or OLITERAL
delay parsing until we know the color space
delay so that gc is sure to have asked for a preemption
delay type and value recording until we know the type or until the end of type checking
delay updating sweepgen until here.
delayed checks requiring fully setup types context within which the current object is type-checked (valid only for the duration of type-checking a specific object)
delayed until now to preserve side effects.
delayed white space Positions The out position differs from the pos position when the result formatting differs from the source formatting (in the amount of white space).
delegateReader is a reader that delegates to another reader, once it arrives on a channel.
delete last state fix up lookaheads
deleteAttrPrefix removes an attribute name space prefix.
deleteImport deletes the import path from the file f, if present.
delicate little dance.
delim is the delimiter that will end the current HTML attribute.
delimDoubleQuote occurs when a double quote (") closes the attribute.
delimEnds maps each delim to a string of characters that terminate it.
delimNone occurs outside any attribute.
delimSingleQuote occurs when a single quote (') closes the attribute.
deliver from Read without EOF
delta returns the absolute difference between r and f.
delta returns the field delta at the input point.
denorm-squared should underflow to zero.
denote cmdline interpreter override
denotes the prefix for the package in which the object file has been found.
depMode is the action to use when building dependencies.
depSet is a finalCloser's outstanding dependencies
dependency tweaks for targets with that prefix
dependencyGraph computes the transposed object dependency graph from the given objMap.
depends on Timespec, must appear below
depends on layout of iterator struct.
depicts network unblocks
depicts returns from syscalls
depicts timer unblocks
depsuffix records the allowed suffixes for source files.
deptab lists changes to the default dependencies for a given prefix.
dequeueRescan removes gp from the stack rescan list, if gp is on the rescan list.
dequeued failed IO packet, so report that
deref dereferences typ if it is a *Pointer and returns its base and true.
derefStructPtr dereferences typ if it is a (named or unnamed) pointer to a (named or unnamed) struct and returns its base.
dereference pointer receiver types
deriveCounter computes the initial GCM counter state from the given nonce.
deriveKey uses a key derivation function to stretch the password into a key with the number of bits our cipher requires.
desCipher is an instance of DES encryption.
describeEscape returns a string describing the escape tag.
describes how to handle callback
description of JSON value - "bool", "array", "number -5"
description of the error
descriptor with 8 byte sizes
desire fast sorting, not pretty sorting.
desired destination locations
desired input registers (for inputs 0,1, and 2)
desired name for temporary executable
desired output registers
desired register assignments at the end of each block.
dest is really reference
dest should be a pointer type.
dest temporary for channel receive.
destination for output
destination register specific
detail about local variables
detect shells out to ideviceinfo, a third party program that can be obtained by following the instructions at https://github.com/libimobiledevice/libimobiledevice.
determine Tk, the work load execution time using Karatsuba multiplication
determine Tk, the work load execution time using basic multiplication
determine actual arguments
determine actual base
determine and check index
determine and validate target
determine binary or decimal exponent contribution of decimal point
determine break-even point
determine dependencies on embedded interfaces
determine diminishing return
determine element size: all bets are off if we don't have position information for the previous and next token (likely generated code - simply ignore the size in this case by setting it to 0)
determine field pad from width: the least number of characters to output
determine file filter
determine if decl should be associated with a type Heuristic: For each typed entry, determine the type name, if any.
determine if we've only got a single phi in this block, this is easier to handle than the general case of a block with multiple phi values.
determine if z can be reused TODO(gri) should find a better solution - this if statement is very costly (see e.g. time pidigits -s -n 10000)
determine initialization order by removing the highest priority node (the one with the fewest dependencies) and its edges from the graph, repeatedly, until there are no nodes left.
determine input files
determine key/value types
determine lhs variable
determine number of linebreaks before the comment
determine number of trailing zero bits (ntz) and compute lsb mask of mantissa's least-significant word
determine package name and collect valid files
determine par begin and end line (may be different if there are multiple parameter names for this par or the type is on a separate line)
determine parameter type
determine prefix characters for indicating output base
determine printer configuration
determine receiver base type object
determine recent node group
determine result type
determine sign character
determine the type of a symbol
determine token string
determine token value
determine type, if any
determine values list with which to associate the Value for this decl
determine which case we have
determine which init exprs to use
determine which initialization expressions to use
determine which methods to include
determines if CancelIoEx API is present
dev.ssa doesn't see this one
devNull implements ReaderFrom as an optimization so io.Copy to ioutil.Discard can avoid doing unnecessary work.
devNullStat is fileStat structure describing DevNull file ("NUL").
dextratype dumps the fields of a runtime.uncommontype.
dfs performs a depth first search over the blocks starting at entry block (in arbitrary order).
dgcptrmask emits and returns the symbol containing a pointer mask for type t.
dgopkgpathOffLSym writes an offset relocation in s at offset ot to the pkg path symbol.
dialCall is an in-flight Transport dial call to a host.
dialParallel races two copies of dialSerial, giving the first a head start.
dialParallel returns one connection (and closes the other.)
dialParam contains a Dial's parameters and configuration.
dialSerial connects to a list of addresses in sequence, returning either the first successful connection, or the first error.
dialSingle attempts to establish and returns a single connection to the destination address.
dictDecoder implements the LZ77 sliding dictionary as used in decompression.
did not find mapping for key.
did not install binaries") tg.wantExecutable(tg.path("bin/b"+exeSuffix), "go install example/...
dieFromSignal kills the program with a signal.
diff compares a and b.
diff exits with a non-zero status when the files don't match.
diffSortedOutput prepares a diff of the already sorted outputs haveText and wantText.
differ reports whether any pair-wise elements in b0 and b1 differ by 2 or more.
different end alignments
different file, but same line
different machines and different types report errors with different strings.
different start alignments
different start and end alignments
digest represents the partial evaluation of a checksum.
digit length of divisor in terms of output base digits
digits, big-endian representation
dimensions are in left to right order.
dir is a temp directory where executable will be created.
dir makes a good-faith attempt to return the directory portion of path.
dirToImportPath returns the pseudo-import path we use for a package outside the Go path.
direct channel operations when possible
direct reference, could be set/use depending on semantics
direct send to direct recv
direct send to select recv
direct use of pointer
directly addressable set of DOTs
directly handoff current P to the locked m
directlyAssignable reports whether a value x of type V can be directly assigned (using memmove) to a value of type T.
directories generated by walk.
directory already exists
directory containing files
directory containing package sources
directory for intermediate objects
directory portion of file.Name()
directory to qualify relative paths
dirlink adds to the directory dp an entry for name pointing at the inode ip.
dirlookup looks for an entry in the directory dp with the given name.
dirs are the directories to look for *.go files in.
dirsRun and filesRun indicate whether the vet is applied to directory or file targets.
disable ASCII art in clang errors, if possible
disable DWARF generation
disable GC because it can be called from sysmon
disable GC so we can control when it happens.
disable all pieces of that variable
disable any previous rewrite
disable dwarf, which gets confused and is useless anyway
disable escape codes in clang errors
disable preemption because it can be holding p in a local var
disable timestamps for reproducible output
disable use of prefixes for first argument
disable word wrapping in error messages
disableBuildID adjusts a linker command line to avoid creating a build ID when creating an object file rather than an executable or shared library.
disableKeepAlives reports whether connections should be closed as soon as possible after handling the first request.
disables extra blank after /*-style comment
disables extra line break after /*-style comment
disallow T.m if m requires *T receiver
disallowInternal checks that srcDir is allowed to import p.
disallowVendor checks that srcDir is allowed to import p as path.
disallowVendorVisibility checks that srcDir is allowed to import p.
disasm returns the decoded instruction and text for the given source bytes, using the given syntax and mode.
disassembler function for goarch
disassembly of PC range
disassembly of entire object
discard - likely a spurious error
discard during parse of duplicate import
discard rounding bit.
discard trailing space
discardHandshakeBuffer is called when there is no more need to buffer the entirety of the handshake messages.
disconnect cached list before dropping it on the floor, so that a dangling ref to one entry does not pin all of them.
discovered and in queue, outedges not processed yet
discovered and in queue, outedges processed
display incorrectly reformatted source and exit
dispose happens relatively infrequently.
dispose returns any cached pointers to the global queue.
dist in turn looks at VERSION and uses its content if available, which is empty at this point.
distance from start of the block to a use of a value
distance is a measure of how far into the future values are used.
distance is measured in units of instructions.
ditto for ignored objects
ditto, sign extend to int64
div divides t by d and returns the quotient parity and remainder.
div returns a/b rounded to the nearest integer, instead of rounded to zero.
div/mod denominator for arm - known to liblink Fields not known to debuggers.
divMagic holds magic constants to implement division by a particular constant as a shift, multiply, and shift.
divide in two by "k" axis deliberately not parallel because of data races
divide in two by x axis
divide in two by y axis
divide-and-conquer list-link sort of LSym* structures.
division by constant 0 is a compile-time error :( If it's a large allocation, we want to leave huge pages enabled.
dll and dll function names
dll function parameter
dname creates a reflect.name for a struct field or method.
dnameData writes the contents of a reflect.name into s at offset ot.
dnameField dumps a reflect.name for a struct field.
dnsRoundTrip executes a single DNS transaction, returning a DNS response message for the provided DNS query message.
dnsRoundTripTCP implements the dnsRoundTrip interface for RFC 1035's "TCP usage" transport mechanism.
dnsRoundTripUDP implements the dnsRoundTrip interface for RFC 1035's "UDP usage" transport mechanism.
do a size-appropriate check for zero
do basic types if compiling package runtime.
do binary search on runs of constants
do is the workhorse, broken out of main to make testing easier.
do it here rather than with fmt to avoid dependency
do not advance pointer, to avoid pointing beyond end of slice
do not automatically insert semicolons - for testing only
do not display Windows Error Reporting dialogue
do not dump full stacks
do not hide any compiler panic
do not lay out in data segment
do not let unexported x leak
do not modify v, it may be used by another goroutine simultaneously
do not service both channels
do not strip parentheses
do not trigger loading of zipped file system here
do not use stringtoarraylit.
do not warn about rebuild
do not warn about unreachable empty statements
do runs the action graph rooted at root.
do something that won't be inlined:
do something with the open *File f STOP OMIT
do the update that we need
do we need the carry bit
do whatever you like, just don't crash.
doCall handles the single call for a key.
doExecute finds the leftmost match in the input and returns the position of its subexpressions.
doGrep looks for a regular expression in a buffer and fails if it is not found.
doGrepCount counts the number of times a regexp is seen in a buffer.
doGrepMatch looks for a regular expression in a buffer, and returns whether it is found.
doGrepNot looks for a regular expression in a buffer and fails if it is found.
doLocked calls f for each entry in the map.
doPackage analyzes the single package constructed from the named files.
doPackageDir analyzes the single package found in the directory, if there is one, plus a test package, if there is one.
doPrintln is like doPrint but always adds a space between arguments and a newline after the last argument.
doRun runs a program in a directory and returns the output.
doRun runs the test go command, recording stdout and stderr and returning exit status.
doScan does the real work for scanning without a format string.
doScanf does the real work when scanning with a format string.
doc consumed - remove from AST
docs say "For client requests an empty string means GET"
documentation synopsis
does not compile (literal substitution of b2)
does not include the UnitLength field
does not leak m but does leak content
does not leak x but does leak content
does not rebuild p1 (or else p2 will fail)
does not require instrumentation
doesn't conflict with this name.
doinit initializes z.i if it needs it.
dolockOSThread is called by LockOSThread and lockOSThread below after they modify m.locked.
domain attribute in Set-Cookie header
domain represents the domain of a variable pair in which a set of relations is known.
domain worked neither as a domain nor as a server could be domain server unavailable pretend username is fullname
domainAndType determines the cookie's domain and hostOnly attribute.
domainHandlingTests tests and documents the rules for domain handling.
domainMatch implements "domain-match" of RFC 6265 section 5.1.3.
dominators computes the dominator tree for f.
dominatorsLTOrig runs Lengauer-Tarjan to compute a dominator tree starting at entry and using predFn/succFn to find predecessors/successors to allow computing both dominator and post-dominator trees.
don't abort at the first error
don't allow tags or comments
don't attach listeners to li nodes, just the spans they contain
don't bother if val is invalid to start with
don't bother if x cannot be set or y is invalid
don't bother instrumenting it
don't bother tagging for scalars
don't call next()/expect() since reading past the export data may cause scanner errors (e.g. NUL chars)
don't care about t, but will pop the stack
don't change incoming comments
don't check if code is panicking
don't check this section if we have binary (B) export data TODO fix this eventually
don't clobber names, unless they're freshly synthesized
don't collect comments
don't collect token text
don't complain about unused variable
don't count the Escape chars
don't count unit_length field itself
don't crash when type-checking this package
don't deal with floating point instructions for now
don't declare init functions in the package scope - they are invisible
don't emit pos info for builtin packages (not needed and avoids path name diffs in builtin.go between Windows and non-Windows machines, exposed via builtin_test.go)
don't escape (Issue 11202)
don't exceed maxNewlines if we already wrote one
don't exit after first error
don't generate tests for shifts by signed integers
don't give credit for NOPs
don't know where we are
don't layout blocks until critical edges have been removed
don't leave plain values as statements.
don't lose indentation information
don't mark finalized object, but scan it so we retain everything it points to.
don't override -extld if supplied
don't overwrite any pending comment in the p.comment cache (there may be a pending comment when a line comment is immediately followed by a lead comment with no other tokens between)
don't overwrite functions with the same name - drop them
don't print comments that are not in AST
don't print parentheses around an already parenthesized expression TODO(gri) consider making this more general and incorporate precedence levels
don't process the same function twice
don't propagate CX, it is used implicitly by PIC global references
don't recognize any token classes
don't resolve ident yet - it may be a parameter or field name
don't resolve if map key
don't run optimization pass until we've decomposed builtin objects
don't send a user and password:
don't send any more requests
don't set cookies for this path
don't show top-level package doc
don't skip any whitespace
don't store a nil signature
don't trace bexpr - only leads to overly nested trace output prec is precedence of the prior/enclosing binary operator (if any), so we only want to parse tokens of greater precedence.
don't update nSpills, since spill is only moved, and if it is duplicated, the spills-on-a-path is not increased.
don't use parseType so we can provide better error message
don't use range here - no need to decode Unicode code points
don't use word multiply, the high 32-bit are undefined.
don't walk n.Comments - they have been visited already through the individual nodes
don't walk, generated by anylit.
don't want to see "encoding/../encoding/base64" as different from "encoding/base64".
done processing format string
done transitions from false to true exactly once, on Commit or Rollback.
done with body, goto incr
done, if non-nil, must be a buffered channel with space for 1 message and is sent the return value from write (or an earlier error) when the frame has been written.
dopack copies the package src to dst, appending the files listed in extra.
dot following a literal value
dot is the environment in which to evaluate arguments, while receiver is the value being walked along the chain.
dot returns the type of "typ.name", making its decision using the type information in cfg.
dotEdge generates a graph edge in DOT format.
dotLegend generates the overall graph label for a report in DOT format.
dotNode generates a graph node in DOT format.
dotNodelets generates the DOT boxes for the node tags.
dotdot is index in buf where ..
dotlist is used by adddot1 to record the path of embedded fields used to access a target field or method.
dotpath computes the unique shortest explicit selector path to fully qualify a selection expression x.f, where x is of type t and f is the symbol s.
dotpath may have dug out arbitrary fields, we only want methods.
dottype generates SSA for a type assertion node.
double check that the embedded template isn't available in the original
double comment disables ERROR
double log1p(double x)
doubleJacobian takes a point in Jacobian coordinates, (x, y, z), and returns its double, also in Jacobian form.
doubleword aligned clears should be kept doubleword aligned
doublewords if we are copying forward on the stack and the src and dst overlap, then reverse direction
dowidth may not have been called for PEXTERN.
dowidth should only be called when the type's size is needed immediately.
download downloads any new changes for the repo in dir.
download runs the download half of the get command for the package named by the argument.
downloadCache records the import paths we have already considered during the download, to avoid duplicate work when there is more than one dependency sequence leading to a particular package.
downloadPackage runs the create or download command to make the first copy of or update a copy of the given package.
downloadPaths prepares the list of paths to pass to download.
downloadRootCache records the version control repository root directories we have already considered during the download.
drain drains the output so the lexing goroutine will exit.
drain own cached work first in the hopes that it will be more cache friendly.
drain returns a single string representing the processed input tokens.
draw.FloydSteinberg is used in place of a nil Drawer.
driverConn wraps a driver.Conn with a mutex, to be held during all calls into the Conn.
driverStmt associates a driver.Stmt with the driverConn from which it came, so the driverConn's lock can be held during calls.
drop finalizer queue references to finalized object
drop frees all previously allocated memory and resets the allocator.
drop the scan bit Basic string status
dropm is called when a cgo callback has called needm but is now done with the callback and returning back into the non-Go thread.
dse does dead-store elimination on the Function.
dst and src are unnamed pointer types with same underlying base type.
dst and src have same underlying type.
dst and src point off bytes into the value to copy.
dst and src reference the same base ONAME Here we also assume that the statement will not contain calls, that is, that order will move any calls to init.
dst is ONAME dereference
dst is an interface type and src implements dst.
dt used in background after this iteration
duff returns the offset (from duffzero, in bytes) and pointer adjust (in bytes) required to use the duffzero mechanism for a block of the given size.
duffzero leaves R1 on the last zeroed dword
duffzero leaves R16 on the last zeroed dword
duffzero leaves R3 on the last zeroed dword
duffzeroDI returns the pre-adjustment to DI for a call to DUFFZERO.
dummy MSpan that contains no free objects.
dummy node for the memory variable
dummy nodes for temporary variables
dummy value defined for badsignal
dummy value defined for sighandler
dummy value, not needed
dummy1 and dummy2 must be initialized after a and b.
dump a uint64 in a varint format parseable by encoding/binary
dump information for a type
dump is only needed for debugging
dump prints a string representation of the regexp showing the structure explicitly.
dump prints the next nBytes of the input.
dump varint uint64 length followed by memory contents
dump writes all previously cached stacks to trace buffers, releases all memory and resets state.
dumpConn is a net.Conn which writes to Writer and reads from Reader
dumpRegexp writes an encoding of the syntax tree for the regexp re to b.
dup returns a testEntry where both src and str are the same.
dup2(i, i) won't clear close-on-exec flag on Linux, probably not elsewhere either.
dupCloseOnExecUnixOld is the traditional way to dup an fd and set its O_CLOEXEC bit, using two system calls.
duplicate definitions ok
duplicate dictionary for Reset method.
during a declaration like
during import unexported method names should be in the type's package
during imports, unqualified non-exported identifiers are from builtinpkg
dwarf version (appendix F)
dwarf version (appendix F) debug_abbrev_offset (*)
dwarfSourceLine tries to get file/line information using DWARF.
dwarfSourceLineEntry tries to get file/line information from a DWARF compilation unit.
dynamic concrete type
dynamic symbol table - first entry all zeros
dynamic symbol table section
dynamicSize returns the size of dynamically encoded data in bits.
dzOff returns the offset for a jump into DUFFZERO.
e is *appError, not error.
e is sorted by entry value so maximal dominant element should be found first in the slice
e or E followed by an optional - or + and 1 or more digits.
e.g. "compat", "files", "mdns4_minimal"
e.g. "mdns4", "mdns4_minimal" We already returned true before if it was *.local.
e.g. "return", "continue" (lowercase)
e.g. "success", "unavail" (lowercase)
e.g. 0 Header maps header keys to values.
e.g., FlagUp, FlagLoopback, FlagMulticast
each item must be received atomically
each item must be sent atomically
each token is on a new line
early Go pprof profiles
early bounds check to guarantee safety of writes below
easier If the code generator ever emits vector instructions it will need to take into account the aliasing.
ecPrivateKey reflects an ASN.1 Elliptic Curve Private Key Structure.
ecdheRSAKeyAgreement implements a TLS key agreement where the server generates a ephemeral EC public/private key pair and signs it.
echoes that of the Request
echoes that of the request
edgeInfo contains any attributes to be represented about edges in a graph/
editActionNode records a change to an action pipeline for later commit.
editTextNode records a change to a text node for later commit.
effictively no limit for response bodies
ehlo sends the EHLO (extended hello) greeting to the server.
either TPTR32 or TPTR64
either dataB or dataS is non-zero.
either direct or indirect
either part of CALLMETH or CALLPART (lowered to PTRLIT)
elemSize is the size of the element that the GC program describes (a prefix of).
element identifies the HTML element when inside a start tag or special body.
element is interpreted as a file system path and denotes the package in that directory.
element that precedes it.
element: remove to last /
element: remove to last separator
elementNone occurs outside a special tag or special element body.
elements or repeated slashes to an equivalent, cleaner URL.
elements that begin a rooted path: that is, replace "/.." by "/" at the beginning of a path, assuming Separator is '/'.
elements that begin a rooted path: that is, replace "/.." by "/" at the beginning of a path.
elf.NewFile requires io.ReaderAt, which compress/gzip cannot provide.
elfIsLittleEndian detects if the ELF file is little endian.
elfdynhash will finish it.
elide shift into TYPE_SHIFT operand of subsequent instruction
eliminate leading and trailing 0's
ellipses are handled explicitly where they are legal (array composite literals and parameter lists)
else let fmt do its thing
else use this response (see res method)
else, if non-nil, send value to it on close
embedded (unique) assignment
embedded field indices, starting with index at depth 0
embedded in descriptive error driverArgs converts arguments from callers of Stmt.Exec and Stmt.Query into driver Values.
embedded interface, inline methods
embedded types found at current depth field and method sets at current depth, allocated lazily
embedded types found at current depth look for (pkg, name) in all types at current depth
embeddedPaletted is an Image that behaves like an *image.Paletted but whose type is not *image.Paletted.
embeddedType represents an embedded named type
emit //line comments to preserve original source positions
emit a pair of "scattered" relocations that resolve to the difference of section addresses of the symbol and the instruction this value is added to the field being relocated
emit an initializer for n:1 initializations only once (not for each node on the lhs which may appear in different order in the dependency graph)
emit code to ensure pointer/interface not nil
emit compiler error instead of write barrier
emit emits the least significant nBits bits of bits to the bit-stream.
emit methods with value receiver
emit passes an item back to the client.
emit post part of split check
emit pre part of split check
emit prints the node.
emit type structs for error and func(error) string.
emitCDATA writes to w the CDATA-wrapped plain text data s.
emitHuff emits the given value with the given Huffman encoder.
emitHuffRLE emits a run of runLength copies of value encoded with the given Huffman encoder.
emits terminating OEND
emitted by compiler, not referred to by go programs
empirically true, but not what headers say
empty array to interface test
empty buffer for each test case (in case of failures)
empty chardata pointer field
empty interface: common case
empty interfaces are ok
empty is a non-nil 0-element slice, so doExecute can avoid an allocation when 0 captures are requested from a successful match.
empty lines don't have indentation
empty name is not okay
empty returns true if w has no mark work available.
empty selects always block
empty string is mapped to 0
empty string marks the end
empty switch is allowed according to syntax unclear why it shouldn't be allowed
empty switch with default case.
empty-width conditions required at start of match
emptyBody is an instance of empty reader.
emptyFunc should not be inlined.
emptyStruct is the type we compile into when ignoring a struct value.
emulate an exceedingly slow package initialization function
enable for debugging A nonzero finite Float represents a multi-precision floating point number
enable for debugging fix failures
enable to calculate top unimplemented features
enabled reports whether the input is enabled by an ifdef, or is at the top level.
encBool encodes the bool referenced by v as an unsigned 0 or 1.
encBuffer is an extremely simple, fast implementation of a write-only byte buffer.
encComplex encodes the complex value (complex64 complex128) referenced by v.
encFloat encodes the floating point value (float32 float64) referenced by v.
encGobEncoder encodes a value that implements the GobEncoder interface.
encIndirect dereferences pv indir times and returns the result.
encInt encodes the signed integer (int int8 int16 int32 int64) referenced by v.
encOp is the signature of an encoding operator for a given type.
encOpFor returns (a pointer to) the encoding op for the base type under rt and the indirection count to reach it.
encSpeed will compress and store the currently added data, if enough has been accumulated or we at the end of the stream.
encString encodes the string referenced by v.
encStructTerminator encodes the end of an encoded struct as delta field number of 0.
encUint encodes the unsigned integer (uint uint8 uint16 uint32 uint64 uintptr) referenced by v.
encUint8Array encodes the byte array referenced by v.
enclosingTarget returns the innermost enclosing labeled statement with the given label name, or nil.
encode as many elements as fit into buf
encode encodes a string as specified in section 6.3 and prepends prefix to the result.
encodeArray encodes an array.
encodeInt writes an encoded signed integer to state.w.
encodeInterface encodes the interface value iv.
encodeMap encodes a map as unsigned count followed by key:value pairs.
encodeReflectValue is a helper for maps.
encodeSingle encodes a single top-level non-struct value.
encodeStruct encodes a single struct value.
encodeTypeByte returns type byte.
encodeUint writes an encoded unsigned integer to state.b.
encodeWord encodes a string into an encoded-word.
encoded as a set of endReg records.
encoder encodes an image to the GIF format.
encoder encodes an image to the JPEG format.
encoder is LZW compressor.
encoderState is the global execution state of an instance of the encoder.
encodes with a value, decodes with a pointer.
encoding.BinaryMarshaler or encoding.BinaryUnmarshaler
encoding.TextMarshaler or encoding.TextUnmarshaler
encrypt encrypts and macs the data in b.
end array (implies scanArrayValue if possible)
end inner type (arrayType, etc.)
end is the end position in the input.
end object (implies scanObjectValue if possible)
end of all rules dump out the prefix code
end of allocated registers
end of run (possibly)
end of spec (overrides Path.Pos if nonzero)
end position of the most recent match
end time of last collection (nanoseconds since 1970)
end wireType Remember we've seen this type.
endBlock marks the end of generating code for the current block.
endCycle updates the GC controller state at the end of the concurrent part of the GC cycle.
endFile writes the archive entry tail (a single byte of padding, if the file size was odd).
endOfTime is the time when session (non-persistent) cookies expire.
endStream closes a Request.Body's pipe.
endsStream reports whether the given frame writer w will locally close the stream.
endsWithCSSKeyword reports whether b ends with an ident that case-insensitively matches the lower-case kw.
enlistWorker encourages another dedicated mark worker to start on another P if there are spare worker slots.
enormous receiver + enormous method frame, so wrapper splits stack to call M, and then M splits stack to allocate its frame.
enormous receiver, so wrapper splits stack to call M
enough bits to hold n precisely
enough for padding around every field
enough space for karatsuba of x0*y0 and full result of x*y
enough until runtime.main sets it for real
ensure 8-byte alignment of val on 386
ensure SSA keeps the n variable
ensure idempotency of TokenText() call
ensure that addr has the right type
ensure that it's still not broken
ensure that v has the right type CONVNOP closure
ensure that we can function normally
ensure that we reuse symbols for out parameters so that cse works on their addresses
ensureNBits reads bytes from the byte buffer to ensure that d.bits.n is at least n.
ensurePipelineContains ensures that the pipeline has commands with the identifiers in s in order.
ensureSigM starts one global, sleeping thread to make sure at least one thread is available to catch signals enabled for os/signal.
enter gotos on nonterminal i into array amem
enter state i into the amem array
enter sub-symbols into symbol table.
entersyscall below is the normal entry point for syscalls, which obtains the SP and PC from the caller.
entersyscall saves the caller's SP to allow the GC to trace the Go stack.
entire argument struct, not just one arg
entire string must have been consumed
entirely positive ranges are covered by mulRangesN
entity is a map from HTML entity names to their values.
entity, count as one rune
entries is a set of entries, keyed by their eTLD+1 and subkeyed by their name/domain/path.
entries should consist of calls to valu, as well as one call to Goto, If, or Exit to specify the block kind.
entry address of a function Memory operations
entry block in the loop.
entry has a named type
entry is in "testdata/hosts"
entry is the desired entry.
entry is the internal representation of a cookie.
entry must be a name supplied to one of the Bloc functions.
entry point for testing
entryNewValue0 adds a new value with no arguments to the entry block.
entryNewValue0A adds a new value with no arguments and an aux value to the entry block.
entryNewValue0I adds a new value with no arguments and an auxint value to the entry block.
entryNewValue1 adds a new value with one argument and an auxint value to the entry block.
entryNewValue1 adds a new value with one argument to the entry block.
entryNewValue1A adds a new value with one argument and an aux value to the entry block.
entryNewValue2 adds a new value with two arguments to the entry block.
enum24bit generates all possible 3-byte sequences, followed by distinctive padding.
enum8bit generates all possible 1-byte sequences, followed by distinctive padding.
enum8bit generates all possible 2-byte sequences, followed by distinctive padding.
enumModRM generates all possible modrm bytes and, for modrm values that indicate a following sib byte, all possible modrm, sib combinations.
enumerate the cases, and lop off the default case
env maps from an environment variable to its first occurrence in envs.
envForDir returns a copy of the environment suitable for running in the given directory.
envList returns the value of the given environment variable broken into fields, using the default value when the variable is empty.
envLock guards env and envs.
envOnce guards initialization by copyenv, which populates env.
envOnce looks up an environment variable (optionally by multiple names) once.
environment for closures
environment variables to inherit from host, as "key"
envs is provided by the runtime.
eof tells the scanner that the end of input has been reached.
eofCounter is a special Reader that counts reads at end of file.
eofError returns io.EOF when fd is available for reading end of file.
eofReader is a non-nil io.ReadCloser that always returns EOF.
eofReaderFunc is an io.Reader that runs itself, and then returns io.EOF.
eofc is used to block caller goroutines reading from Response.Body at EOF until this goroutines has (potentially) added the connection back to the idle pool.
eol, newline, or comment must follow
ep may be nil, in which case received data is ignored.
ep must be non-nil and point to the heap or the caller's stack.
epipecheck raises SIGPIPE if we get an EPIPE error on standard output or standard error.
eq reports whether two contexts are equal.
equal but different instance
equalFoldRight is a specialization of bytes.EqualFold when s is known to be all ASCII (including punctuation), but contains an 's', 'S', 'k', or 'K', requiring a Unicode fold on the bytes in t.
equals cannot be first
equivEscapers matches contextual escapers to equivalent template builtins.
er, eg and eb are the pixel's R,G,B values plus the optional Floyd-Steinberg error.
erase removes any user of loc.
eret, nop, others with no operands
err can be something like 'exit status 1'.
err is EOF, so return nil explicitly
err is optionally the last error that occurred on this connection.
err is the first error encountered during writing.
err will be nil on Read io.EOF
errHandlerPanicked is the error given to any callers blocked in a read from Request.Body when the main goroutine panics.
errMap collects the regular expressions of ERROR comments found in files and returns them as a map of error positions to error messages.
errMissingFF00 means that readByteStuffedByte encountered an 0xff byte (a marker byte) that wasn't the expected byte-stuffed sequence 0xff, 0x00.
errMissingHost is returned by Write when there is no Host or URL present in the Request.
errMu protects concurrent accesses to errset and err.
errNeedMore is an internal sentinel error value that means the buffer is truncated and we need to read more data before we can continue parsing.
errNoBody is a sentinel error value used by failureToReadBody so we can detect that the lack of body was intentional.
errNoMatch is returned from matchGoImport when there's no applicable match.
errNoMatch is returned if none match.
errNotParsed is returned when a certificate without ASN.1 contents is verified.
errOutOfCodes is an internal error that means that the encoder has run out of unused codes and a clear code needs to be sent next.
errPhase is used for errors that should not happen unless there is a bug in the JSON decoder or something is editing the data slice while the decoder executes.
errPos and err are for making Next return early with error.
errRecover is the handler that turns panics into returns from the top level of Parse.
errRequestCanceled is a copy of net/http's errRequestCanceled because it's not exported.
errSeeker is returned by ServeContent's sizeFunc when the content doesn't seek properly.
errShortHuffmanData means that an unexpected EOF occurred while decoding Huffman data.
errno returns v's underlying uintptr, else 0.
errnoErr returns common boxed Errno values, to prevent allocations at runtime.
error aborts the decoding by panicking with err.
error check handled in matchChunk: bad pattern.
error creates a new ParseError based on err.
error loading package
error loading this package (not dependencies)
error message for overflow/underflow (for arrays, of the elements)
error message is not standard format, so no errchk above.
error occurred after reading Offset bytes
error on write barrier in this or recursive callees
error prefers block diagnostic over declaration diagnostic
error records an error and switches to the error state.
error records that an error occurred.
error reported before
error reported before by arityMatch
error reported by unpack
error resulting from handshake
error returned by underlying Read
error returned by underlying Write
error should be here - line 22
error should be visible
error should not be visible
error shows first (outermost) offending block
error shows first offending variable
error status of socket by SO_ERROR
error status of socket system call
error terminates processing.
error to return for x
error used to have last line number in file
error values for debugging and testing, not seen by users.
error was reported before
error will stop processing
error wraps the argument error and uses it as the argument to panic.
error.Pos is a token.Position, but we want a token.Pos so we can do a map lookup
error: incorrect use of decimal point
error: no exported fields.
error: short buffer error: EOF
errorHandler turns local panics into error returns.
errorReader returns error from all operations.
errorString is a trivial implementation of error.
errorWriter is a writer that fails after N writes.
errorcheck Copyright 2011 The Go Authors.
errorcheck all files in lexicographic order useful for finding importing errors
errorf creates an error given a format string f and args.
errorf formats the error and terminates processing.
errorf formats the error to standard error, adding program identification and a newline, and exits.
errorf is like error_ but takes Printf-style arguments to construct an error.
errorf is like t.Errorf, but also writes to println.
errorf is used by the test for a case in which the function accepts multiple string parameters before variadic arguments
errorf logs an error message prefixed with the file and line number.
errorf records an ExecError and terminates processing.
errorf returns an error token and terminates the scan by passing back a nil pointer that will be the next state, terminating l.nextItem.
erroring is set when printing an error string to guard against calling handleMethods.
errors loading dependencies
errors loading dependencies Test information
errors logged via conf.Error
errors other than the ones listed
errprintf prints a message to standard output.
errset is set if an error is encountered by one of the goroutines grabbing a profile.
esc.go needs to find f given a PPARAM to add the tag.
escFnsEq reports whether the two escaping functions are equivalent.
escMax returns the maximum of an existing escape value (and its additional parameter flow flags) and a new escape type.
escNoteOutputParamFlow encodes maxEncodedLevel/.../1/0-level flow to the vargen'th parameter.
escape escapes a template node.
escape escapes all associated templates.
escape sequence in username
escape2n.go contains all the same tests but compiles with -N.
escapeAction escapes an action template node.
escapeBranch escapes a branch template node: "if", "range" and "with".
escapeList escapes a list template node.
escapeListConditionally escapes a list node but only preserves edits and inferences in e if the inferences and output context satisfy filter.
escapeOK is a sentinel value used to indicate valid escaping.
escapeTemplate rewrites the named template, which must be associated with t, to guarantee that the output of any of the named templates is properly escaped.
escapeTemplateBody escapes the given template assuming the given output context, and returns the best guess at the output context and whether the assumption was correct.
escapeText escapes a text template node.
escapeText writes to w the properly escaped XML equivalent of the plain text data s.
escapeTree escapes the named template starting in the given context as necessary and returns its output context.
escaped path for use in symbol table
escaper collects type inferences about templates and changes needed to make templates injection safe.
escapes but it's an int so irrelevant
escassignNilWhy bundles a common case of escassign(e, dst, src, e.stepAssign(nil, dst, src, reason))
escassignfromtag models the input-to-output assignment flow of one of a function calls arguments, where the flow is encoded in "note".
establish value for token single character literal
established connections at the passive open side
estimated/accurate position of next item
etypesign returns the signed-ness of e, for integer/pointer etypes.
evacuate one more oldbucket to make progress on growing
evalArgs formats the list of arguments into a string.
evalCall executes a function or method call.
evalField evaluates an expression like (.Field) or (.Field arg1 arg2).
evalFieldChain evaluates .X.Y.Z possibly followed by arguments.
evalInteger evaluates an integer constant for a pseudo-op.
evalOrig is the "simple" eval function from LT paper
evalPipeline returns the value acquired by evaluating a pipeline.
evaluate first argument, if present
evaluate side effects only
evaluate whether we should stop.
evaluated at statement level
evaluated in type context
evaluated in value context
evaluates compile time constants.
even in the presence of errors
even more verbose, with frame dumps The GODEBUG variables are not covered by Go's API compatibility promise.
event type, length, sequence, timestamp, stack id and two add params
every instruction leading to InstMatch must be EmptyEndText
everything else just recurs
everything happens in init funcs
everything here is legal except the ERROR line
everything is at least pointer-aligned
everything of interest is on stderr
evict copies the given entry's data into the log, so that the entry can be reused.
evict is called from add, which is called from the profiling signal handler, so it must not allocate memory or block.
evict returns true if the entry was copied to the log, false if there was no room available.
exact multiple doesn't matter
exactly halfway - round to even
exactly halfway - round to even if we truncated, a little higher than what's recorded - always round up
exactly one (named or anonymous) result associated with the first type in result signature (there may be more than one result)
exactly one token per line since the test consumes one token per segment
exactly16Bytes truncates the string if necessary so it is at most 16 bytes long, then pads the result with spaces to be exactly 16 bytes.
example from the spec
example function doc string
except terminal states
exchange sends a query on the connection and hopes for a response.
excise replaces the given instruction with a NOP and clears its operands.
exclude conflict entry
exclude files explicitly requested by the caller.
exclude files opened at startup.
exclude files w/ syntax errors (typically test cases)
exclude lines with illegal characters
exclude non-exported fields because their values cannot be accessed via reflection
exclude the length field.
excluded R9 and R10 for m and g, but not R12
exclusive or, applied to X regs for float negation.
exec a program, redirecting output
exec runs the command specified by the argument.
executable header types
execute relative long
exercise this code path
exhaustive test for small values
existingArchive reports whether the file exists and is a valid archive.
exit processes any code that needs to be generated just before returning.
exits records blocks reached by exits from this loop.
exitsyscall slow path on g0.
exp consumed - not needed anymore apply 2**exp2
exp(x) Returns the exponential of x.
expNNMontgomery calculates x**y mod m using a fixed, 4-bit window.
expNNWindowed calculates x**y mod m using a fixed, 4-bit window.
expand case-folded runes
expand multi-valued cases
expandBlock expands an input block of 32 bits, producing an output block of 48 bits.
expandKey is used by BenchmarkExpand and should call an assembly implementation if one is available.
expandKey is used by BenchmarkExpand to ensure that the asm implementation of key expansion is used for the benchmark when it is available.
expandKey is used by BenchmarkExpand.
expandPath returns the symlink-expanded form of path.
expandScanner expands a scanner.List error into all the errors in the list.
expands to net and packages in its subdirectories.
expect an error: zero divide
expect conditional jump to be taken.
expect consumes the next token and guarantees it has the required type.
expect keyword package
expect verifies that the next item has the expected type.
expectClosing is like expect but provides a better error message for the common case of a missing comma before a newline.
expectHandshakeErrorIncluding, when not empty, contains a string that must be a substring of the error resulting from the handshake.
expectOneOf consumes the next token and guarantees it has one of the required types.
expectOperandEnd verifies that the parsing state is properly at the end of an operand.
expectText is like Error but adds "got XXX" where XXX is a quoted representation of the most recent token.
expected Connection header(s)
expected build ID for generated package
expected domain of cookie
expected error value, nil or other
expected error, got one
expected errors in transition
expected host-cookie flag
expected name servers
expected sp at top of stack, to check in traceback
expected substring in first line of http response
expectedErrors collects the regular expressions of ERROR comments found in files and returns them as a map of error positions to error messages.
expectedPeerCerts contains a list of PEM blocks of expected certificates from the client.
experimental records the flags enabling experimental features.
expiresIn creates an expires attribute delta seconds from tNow.
explanation for this step in the escape-to-heap chain
explicit Content-Length of 0.
explicit content type
explicit conversion of constants
explicit conversion of string is okay
explicit conversions require non-nil interface value.
explicit type: use type for earlier parameters
explicit zero extension
explicit zero extension, but don't do that if source is a byte register (only AH can occur and it's forbidden).
explicitly dereference a C variable
explicitly load the address into R11.
explicitly qualified field
explode splits s into a slice of UTF-8 sequences, one per Unicode code point (still slices of bytes), up to a maximum of n byte slices.
expm1(x) Returns exp(x)-1, the exponential of x minus 1.
exponent of 0 is ignored
exponent overflow in *
exponent overflow in +
exponent overflow in -
exponent overflow in rounding
exponent underflow in /
export BackgroundSleep
export GoIssue6833Func
export GoStart Double return value is just for testing.
export IMPInitWithFrame
export IMPWindowResize
export access to strconv internals for tests
export data of this package was parsed
export emits the exported package features.
export exportSliceInOut
export exportSliceOut
export exportcomplex128
export exportcomplex64
export issue5548FromC
export issue8148Callback
export lockOSThreadCallback
export overrides import, for openbsd/cgo.
export testHandleLeaksCallback
export writes the exportlist for localpkg to out and returns the number of bytes written.
exportInlined enables the export of inlined function bodies and related dependencies.
exported functions for this file
exported identifiers go into package unsafe
exported name prefixed with package path
exported names are preserved so there's no need to propagate the type
exported value for testing
exportedsym reports whether a symbol will be visible to files that import our package.
exportlist grows during iteration - cannot use range
exportname needs to see the name without the prefix too.
expr Since a bare name used as an expression is an error, introduce a wrapper node where necessary to give the correct line.
expr converts the expression n to ssa, adds it to s and returns the ssa result.
expr typechecks expression e and initializes x with the expression value.
exprInfo stores information about an untyped expression.
exprInternal contains the core of type checking of expressions.
exprNode() ensures that only expression/type nodes can be assigned to an Expr.
exprOrType typechecks expression or type e and initializes x with the expression value or type.
exprPtr evaluates n to a pointer and nil-checks it.
expr_list LCOLAS LRANGE expr
expr_list LCOLAS expr_list
express concurrent concepts, such as this binary tree comparison.
expression copied into closure for variable
expression is lhs operand of a shift with delayed type-check
expression nesting level (for complit ambiguity resolution)
expression to refer to stack copy
expression value may have been rounded - update if needed
expressions (somewhat closely following the structure of exprfmt in fmt.go)
expressions case OPAREN: unreachable - unpacked by exporter case ODDDARG: unimplemented case OREGISTER: unimplemented
exprloc New in DWARF 4.
extKeyUsageOIDs contains the mapping between an ExtKeyUsage and its OID.
extend modrm r/m, sib base, or opcode reg
extend: ACWD/ACDQ/ACQO.
extendIndex extends v to a full int width.
extended precision value of PI:
extended regexp (what we support)
extension bit B (r/m field in modrm or base field in sib)
extension bit R (r field in modrm)
extension bit W (64-bit instruction width)
extension bit X (index field in sib)
extensions, if not nil, contains a list of extension data to be returned from the ServerHello.
extern runtime.cgoCheckPointer
extern runtime.cgoCheckResult
external registers allocated from here down
external tests should observe internal test exports (golang.org/issue/11977)
externalEncoding bits
extra 32-bit operations
extra argument in high bits, above low stdArgShift
extra byte Short a byte:
extra byte for version and sign bit
extra bytes for version and sign bit (1), and numerator length (4)
extra headers to write, or nil
extra room for terminating null character
extra room for terminating zero byte
extra space in case of reads slightly beyond frame
extra type information flags
extraHeader is the set of headers sometimes added by chunkWriter.writeHeader.
extraHeaders may be nil waitForContinue may be nil
extract "ordered" (No Nan present) condition from arg0
extract "unordered" (Nan present) condition from arg0
extract documentation for all package-level declarations, not just exported ones
extract hex value from parentheses.
extract least significant, base bb "digit"
extract mantissa as *big.Int - set exponent large enough so mant satisfies mant.IsInt() - get *big.Int from mant
extract part of deBruijn sequence
extract sign (there is no -0)
extractCAPS extracts capital letters from description desc.
extractContents implements the 'x' command.
extractHexAddresses extracts hex numbers from a string and returns them, together with their numeric value, in a slice.
extractParams parses s to extract function parameters.
extractSection extracts text out of string s starting after start and ending just before end.
extractSimpleChain extracts the final certificate chain from a CertSimpleChain.
f is method type, with receiver.
f is the same as g except that the expression assigned to n is inlined.
f(a,b) if there is exactly one function expr, then it is done first.
f(g()) where g has multiple return values
f(g(), h()) where g is not inlinable but h is will have the same problem.
f.space means to add a leading space instead of a "+" sign unless the sign is explicitly asked for by f.plus.
f2i is used in the rules for storing a float in AuxInt.
f6and has side effects so the OpPhi should not be converted.
f6or has side effects so the OpPhi should not be converted.
fact is a pair plus a relation for that pair.
factor factors common prefixes from the alternation list sub.
factsTable keeps track of relations between pairs of values.
failMessage creates a nicely formatted error message when there is no result to show.
failOnReadAfterErrorReader is an io.Reader wrapping r.
failSSH puts an ssh executable in the PATH that always fails.
failed at 'go help cmd'
failf prints to standard error a formatted error and usage message and returns the error.
fails (x is incorrect)
failure case in issue
failureToReadBody is a io.ReadCloser that just returns errNoBody on Read.
fake TLS so authentication won't complain
fake flag - pretend input is from stdin
fake package for field tracking
fake package for map zero value
fake package for runtime itab entries
fake package for runtime type info (headers)
fake pkg for itab entries
fake, builtin package
fakeDriver is a fake database that implements Go's driver.Driver interface, just for testing.
fakeDriverString is like driver.String, but indirects pointers like DefaultValueConverter.
fakeHash32 is a dummy Hash32 that always returns 0.
fakeLocker is a sync.Locker which does nothing.
fall back to using GOT and hope for the best (CMOV*) TODO: just needs relocation, no need to put in .dynsym
fallback to using capital letters
fallthrough (after processing)
fallthrough (before processing)
fallthrough inlined here
fallthrough to default, which is not at end.
false (default) means FieldsPerRecord is -1 These fields are copied into the Reader
false negative because s2 is PAUTO w/o PHEAP so we do not instrument it
family returns the platform-dependent address family identifier.
fast check for common ASCII case
fast path for common case
fast path: nothing to do
fast versions take key by value
fastXORBytes xors in bulk.
fastXORWords XORs multiples of 4 or 8 bytes (depending on architecture.) The arguments are assumed to be of equal length.
faster than bytes.ToUpper
fastlog2 implements a fast approximation to the base 2 log of a float64.
fatal prints an error message to standard error and exits.
faultInjectReader returns data from source, rate-limited and with the errors as written to nextc.
favoriteAddrFamily returns the appropriate address family to the given net, laddr, raddr and mode.
fcntl file locking structure and constants
fcntl64Syscall is usually SYS_FCNTL, but is overridden on 32-bit Linux systems by flock_linux_32bit.go to be SYS_FCNTL64.
fcount consumed - not needed anymore
fd is constant throughout the PollDesc lifetime.
fd to write the dump to.
fdMutex is a specialized synchronization primitive that manages lifetime of an fd and serializes access to Read, Write and Close methods on netFD.
fdMutex.state is organized as follows: 1 bit - whether netFD is closed, if set all subsequent lock operations will fail.
fdToFile retrieves the *file corresponding to a file descriptor.
fdct performs a forward DCT on an 8x8 block of coefficients, including a level shift.
featureCheck reports whether the CPU supports the SHA1 compute intermediate message digest (KIMD) function code.
featureCheck reports whether the CPU supports the SHA256 compute intermediate message digest (KIMD) function code.
featureCheck reports whether the CPU supports the SHA512 compute intermediate message digest (KIMD) function code.
feedTokens copies data in numBlock chunks from r into buf until there are at least cnt newlines in buf.
fermatInverse calculates the inverse of k in GF(P) using Fermat's method.
fetchCertIDs fetches IDs of iOS X509 certificates from apple.com.
ffffffff00000000ffffffff
ffffffff00000000ffffffffffffffff Remaining 32 windows
fib returns a function that returns successive Fibonacci numbers.
field 0 of fieldType: name
field 1 of fieldType: id
field access indices for destination type
field delimiter (set to ',' by NewReader)
field number in input
field number of the wire type
field offsets in bytes, lazily initialized
field type Offset in bytes of this field or method within its enclosing struct or interface Type.
field/method/parameter type
fieldIdx finds the index of the field referred to by the ODOT node n.
fieldInfo holds details for the xml representation of a single field.
fieldName assumes that x is the type of an anonymous field and returns the corresponding field name.
fieldName is like qualifiedName but it doesn't record the package for blank (_) or exported names.
fieldNeedsQuotes reports whether our field must be enclosed in quotes.
fieldParameters is the parsed representation of tag string from a structure field.
fieldPrefix returns the prefix that should be removed from all the field names when generating the C or Go code.
fieldValue prints a value of any type, such as a struct field.
fields are exported to make them accessible to gob
fields correspond 1:1 to fields with same (lower-case) name in File
fields returns a struct's fields or an interface's methods.
fields used by runtime.netpoll
fields used only by net package
figure out the instruction to use.
figure out which pointer this is a reference to.
file contains tests or benchmarks
file implements plugin.ObjFile using Go libraries (instead of invoking GNU binutils).
file is the real representation of *File.
file name as provided to AddFile
file name used to open source file, for error messages
file set for interpretation of Pos
file size as provided to AddFile lines and infos are protected by set.mutex
file type - mach executable
file type - mach object
file was parsed already - do not add it again to the file set otherwise the position information returned here will not match the position information collected by the parser
file, store in memory or on disk
file:line address: assembly address: assembly ...
fileExports removes unexported declarations from src in place.
fileExtSplit expects a filename and returns the name and ext (without the dot).
fileTransport implements RoundTripper for the 'file' protocol.
fileVal is in effect starting at fileStartPC up to but not including filePC, and it's the file we want.
filename for current token
filename of expected output
filename returns a filename suitable for debugging output.
filename should end with ".go"
filepath.Walk starts at dir and recurses.
files is the table indexed by a file descriptor.
files with ".S" (capital S)
fill appends up to len(p) bytes of p to *dst, such that *dst does not grow larger than w.N.
fill fills up the d.bytes.buf buffer from the underlying io.Reader.
fill in argument size, stack size
fill in cached regexps.
fill in lo and hi to refer to its 32-bit halves.
fill m with keys that have 4 "foo"s and 4 ""s.
fill reads a new chunk into the buffer.
fill stack that should not be accessed with garbage, to detect bad dereferences during copy
fillWindow will fill the current window with the supplied dictionary and calculate all hashes.
fillptrmask fills in ptrmask with 1s corresponding to the word offsets in t that hold pointers.
filter directory contents
filter exports if necessary
filter function to select the desired .go files
filter generates the sequences from gen that satisfy ok.
filter out huge argument
filterAddrList applies a filter to a list of IP addresses, yielding a list of Addr objects.
filterFailsafe is an innocuous word that is emitted in place of unsafe values by sanitizer functions.
filterFieldList removes unexported fields (field names) from the field list in place and reports whether fields were removed.
filterIdentList removes unexported names from list in place and returns the resulting list.
filterNilBlocks preserves the order of b, while filtering out nils.
filterNilValues preserves the order of v, while filtering out nils.
filterPaeth applies the Paeth filter to the cdat slice.
filterParamList applies filterType to each parameter type in fields.
filterType is called with the types of all remaining fields.
filterType strips any unexported struct fields or method types from typ in place.
final blank line after the trailers (whether present or not)
final file name element and line number: d.go:23.
final import not used checks
final ptrmask byte to read (then repeat)
final width is rounded
finalBlock is a fresh slice which contains the contents of any suffix of payload as well as the needed padding to make finalBlock a full block.
finalClose is called when the reference count of an object goes to zero.
finally write import descriptor table
find a state where "error" is a legal shift action
find all the exported symbols in package opkg and make them available in the current package
find an acceptable place
find at most n occurrences of s in src
find checks if the stack trace pcs is already present in the table.
find default type, if any
find index of last slash, if any, or else -1.
find items involving c
find last path element for archive member name
find last store in the block
find leaf subroutines strip NOPs expand RET
find leaf subroutines strip NOPs expand RET expand BECOME pseudo
find looping structure
find min and max address
find or record the block that we used to split critical edges for this argument
find some non-square n
find the best choice for lastred
find the best one to make default
find the containing object
find the last field that has pointers.
find the middle and recur
find the section where it lives.
findBodyOffset does the minimum work to verify the file has a header and returns the file body offset.
findDead walks the statement looking for dead code.
findDirectory64End tries to read the zip64 locator just before the directory end and returns the offset of the zip64 directory end if found.
findEvalSymlinksTestDirsDest searches testDirs for matching path and returns correspondent dest.
findExits uses loop depth information to find the exits from a loop.
findFile finds the location of the named file in GOROOT, GOPATH etc.
findFileLine scans one function in the binary looking for a program counter in the given file on the given line.
findFunc returns the func corresponding to the given program counter.
findFuncs finds the doc.Funcs that describes the symbol.
findFuncs parses the file and returns a slice of FuncExtent descriptors.
findFunction looks for a function in the template, and global map.
findIndVar finds induction variables in a function.
findInternal looks for the final "internal" path element in the given import path.
findLabels gathers information about the labels defined and used by stmt and about which statements break, whether a label is involved or not.
findMatchingSymbol looks for the symbol that corresponds to a set of samples, by comparing their addresses.
findPackage returns the full file name path that first matches the (perhaps partial) package path pkg.
findPath returns the (reversed) list of nodes z, ...
findRegFor finds a register we can use to make a temp copy of type typ.
findRunnableGCWorker returns the background mark worker for _p_ if it should be run.
findTypeSpec returns the ast.TypeSpec within the declaration that defines the symbol.
findTypes finds the doc.Types that describes the symbol.
findValues finds the doc.Values that describe the symbol.
findVendor looks for the last non-terminating "vendor" path element in the given import path.
findVerifiedParents attempts to find certificates in s which have signed the given certificate.
findfunctab generates a lookup table to quickly find the containing function for a pc.
findgoversion determines the Go version to use in the version string.
findinc finds ADD instructions with a constant argument which falls within the immed_12 range.
findlive returns the reachable blocks and live values in f.
findpre returns the last instruction mentioning v before r.
finds `a.exe` in the PATH regardless of dir set because LookPath returns full path in that case
finishUniverse makes the universe block visible within the current package.
finishedSum30 calculates the contents of the verify_data member of a SSLv3 Finished message given the MD5 and SHA1 hashes of a set of handshake messages.
finishsweep_m moves the previous arena to the free arena, the current arena to the previous arena, and the next arena to the current arena.
first 4 bytes hold program length
first argument already evaluated
first byte indicates low-level encoding format
first call - initialize
first case is special case
first code point after surrogate half.
first comment - text and position changed by test
first comment of a comment group
first entry - no symbol
first entry must be empty string
first entry: extended relocs
first error encountered
first external register
first few bytes of the last incomplete rune in last write
first implementation failure, print explanation
first import of id from this package
first instruction in block
first is an offset into the array where the root of the heap lies.
first is information about the first byte in a UTF-8 sequence.
first look for ready queues with more than 1 g
first must be a character class OR a fixed repeat of a character class.
first of 1024 registers
first option valid only in 32-bit mode
first permanent error
first register variable
first returns the first address which satisfies strategy, or if none do, then the first address of any kind.
first span in list, or nil if none
first term or non-term in item
first time spotted by gc in mspanfree state
first typecheck range expression (slice/map/chan), it is evaluated only once and so logically it is not part of the loop.
first use of this type as an embedded type
first write error that has occurred
first, copy kernel of state i to wsets
first, find nonterminals with gotos on c
first, jump to condition test
first, string in field to byte in field
first, use the array pempty to detect productions that can never be reduced set pempty to WHONOWS
firstComment returns the contents of the first comment in the given file, assuming there's one within the first KB.
firstError returns the first error value triggered by the input.
firstSentenceLen returns the length of the first sentence in s.
firstStackBarrierOffset is the approximate byte offset at which to place the first stack barrier from the current SP.
firstZoneUsed returns whether the first zone is used by some transition.
firstcontinuehandler will stop that search, if exceptionhandler did the same earlier.
fitsInBase256 reports whether x can be encoded into n bytes using base-256 encoding.
five letters must end in T.
fix Obj link for named types
fixGo converts the internal Name.Go field into the name we should show to users in error messages.
fixSpace rewrites runs of spaces, tabs, and newline characters into single spaces in s.
fixTransferEncoding sanitizes t.TransferEncoding, if needed.
fixed generates the single case b.
fixed size of struct, checked below
fixed to float conversion
fixedArg records the fixed arguments corresponding to the given bytecodes.
fixedBuffer is an io.ReadWriter backed by a fixed size buffer.
fixedNonceAEAD wraps an AEAD and prefixes a fixed portion of the nonce to each call.
fixedSize returns the size of dynamically encoded data in bits.
fixup token streaming state
flag 'safe' for escape analysis (no backjumps)
flag for dynimport in PE object files.
flag holds metadata about the value.
flag that curfn has defer statement
flag to turn off lookahead computations
flagNoScan is safe here, because all objects are also referenced from cases.
flagOverwrite_ssa is intended to reproduce an issue seen where a XOR was scheduled between a compare and branch, clearing flags.
flagalloc needs instructions to be scheduled.
flags based on 'from' field
flags based on 'to' field
flags based on opcode
flags for CreateToolhelp32Snapshot
flags for a rule having an action, and being reduced
flags for state generation
flags implements the driver.FlagPackage interface using the builtin flag package.
flags inside DNSRecord.Dw
flags is a bitmask of the suite* values, above.
flags placed in a separate struct for easy clearing.
flat is exclusive to this node, cum includes all descendents.
flip bit i of the key
float and complex formatting should not change the padding width for other elements.
float constants come from memory.
float infinites and NaNs
float insn offset (0 to 0x3fc, word aligned)
float multiply-add freg freg freg freg
float to fixed conversion
float to very long integer.
float32 is the set of all IEEE-754 32-bit floating-point numbers.
float32FromBits decodes an unsigned integer, treats it as a 32-bit floating-point number, and returns it.
float64 can't distinguish fhuge, fhuge_1.
float64 is needed to be nanosecond accurate for fractions of hours.
float64 is the set of all IEEE-754 64-bit floating-point numbers.
float64bits returns the IEEE 754 binary representation of f.
floatBits returns a uint64 holding the bits of a floating-point number.
floatBits returns the bits of the float64 that best approximates the extFloat passed as receiver.
floatToken returns the floating-point number starting here, no longer than swid if the width is specified.
floating conversion constant
floating point compare
floating point compare flags
floating point conditional compare
floating point load, int32 offset UGLY
floating point store, int32 offset UGLY
floating-point constant
floating-point register (64-bit)
flood flood fills symbols reachable from the markQueue symbols.
flow is the flow control window's size.
flow-analyze functions
flush prints any pending comments and whitespace occurring textually before the position of the next token tok.
flush tabwriter, if any
flushToParent writes c.output to the parent after first writing the header with the given format and arguments.
flushes profile to disk
flushes trace to disk
flushing hash table - profile is over
flushing to bytes.Buffer cannot fail
flushlit flushes any pending literal bits.
flushlog is called from evict, called from add, called from the signal handler, so it cannot allocate memory or block.
flushlog tries to flush the current log and switch to the other one.
fmt is used to format basic items such as integers or strings.
fmt.Fprint handles nil.
fmt.Fprint(p.w, v.Block.Func.Config.fe.Line(v.Line)) fmt.Fprint(p.w, ": ")
fmt.Println("ip has value ", *ip) fmt.Println("flagvar has value ", flagvar) After parsing, the arguments following the flags are available as the slice flag.Args() or individually as flag.Arg(i).
fmt.Sscan can parse the pair, so let it do the work.
fmt0x64 formats a uint64 in hexadecimal and prefixes it with 0x or not, as requested, by temporarily setting the sharp flag.
fmtB appends the string of x in the format mantissa "p" exponent with a decimal mantissa and a binary exponent, or 0" if x is zero, and returns the extended buffer.
fmtDuration returns a string representing d in the form "87.00s".
fmtFloat formats a float.
fmtFrac formats the fraction of v/10**prec (e.g., ".12345") into the tail of buf, omitting trailing zeros.
fmtInt formats v into the tail of buf.
fmtInteger formats a signed or unsigned integer.
fmtNSAsMS nicely formats ns nanoseconds as milliseconds.
fmtP appends the string of x in the format "0x." mantissa "p" exponent with a hexadecimal mantissa and a binary exponent, or "0" if x is zero, and returns the extended buffer.
fmtSelect formats the information about a single select test.
fmt_boolean formats a boolean.
fmt_bx formats a byte slice as a hexadecimal encoding of its bytes.
fmt_c formats an integer as a Unicode character.
fmt_float formats a float64.
fmt_integer formats signed and unsigned integers.
fmt_q formats a string as a double-quoted, escaped Go string constant.
fmt_qc formats an integer as a single-quoted, escaped Go character constant.
fmt_s formats a string.
fmt_sbx formats a string or byte slice as a hexadecimal encoding of its bytes.
fmt_sx formats a string as a hexadecimal encoding of its bytes.
fmtcmd formats a command in the manner of fmt.Sprintf but also:
fmtcmd replaces the name of the current directory with dot (.) but only when it is at the beginning of a space-separated token.
fn is recorded as the new m's m.mstartfn.
fn must be cleared before d is unlinked from gp.
fn needs to be static and not a heap allocated closure.
fn should return the new error to return from Read or Close.
fn used for normal method call
fn used in interface call (one-word receiver)
fncalls assigned to tempnames
fnorm normalizes mantissa m by shifting it to the left such that the msb of the most-significant word (msw) is 1.
fnv1 incorporates the list of bytes into the hash x using the FNV-1 hash function.
focusedAndNotIgnored looks up a slice of ids against a map of focused/ignored locations.
focusedTag checks a sample against focus and ignore regexps.
foldDup reports a pair of strings from the list that are equal according to strings.EqualFold.
foldExceptions returns a list of all the runes fold-equivalent to runes in class but not in class themselves.
foldFunc returns one of four different case folding equivalence functions, from most general (and slow) to fastest:
followed by 1 or more digits.
followed by detailed output for each failed package.
for /*-style comments, print line by line and let the write function take care of the proper indentation
for 64-bit multiplies, signedness doesn't matter.
for ABFPT and ABFPF only: always fill delay slot with 0 see comments in func preprocess for details.
for ASCII-only tools like DTrace (sigh)
for Accept, Accept4 or AcceptEx
for CMOVconst -- uses AX to hold constant temporary.
for Close or Closesocket
for Connect or ConnectEx
for TestHandlerBodyClose
for accumulating text to write
for all top level functions, tag the typenodes corresponding to the param nodes
for an Upper Lower sequence the deltas have to be in order c: -1 0 -1
for an Upper Lower sequence the deltas have to be in order c: 0 1 0
for an Upper Lower sequence the deltas have to be in order c: 0 1 0 d: -1 0 -1
for better error message
for bonus points, verify that escape:unescape is an identity.
for both ELF and Mach-O
for calls to nextValue
for canceling TLS handshake
for code formatting purpose.
for comparisons avoid immediates unless they can fit into a int8/uint8 this favours combined compare and branch instructions
for compatibility with other tools
for complex comparisons, we need both args to be addressable so we can pass them to the runtime.
for composite objects we have to read every address because a write might happen to any subobject.
for composite objects we have to write every address because a write might happen to any subobject.
for connected-mode sockets
for convenience (p.trace is used frequently)
for debug printing in recursions.
for debuggers, but offset not hard-coded
for debuggers, in case cgo created the thread
for debugging/tracing only
for debugging: linear search
for dependency analysis
for detecting nested loop scopes
for divide by elemsize - divMagic.mul
for divide by elemsize - divMagic.shift
for divide by elemsize - divMagic.shift2
for double-declaration checks
for each block, its primary predecessor.
for each pre-regalloc value, a list of equivalent cached values
for each predecessor of b, expand its list of live-at-end values invariant: s contains the values live at the start of b (excluding phi inputs)
for each subbucket, compute the minimum of all symbol indexes that map to that subbucket.
for error recovery, arrange that, if there is a shift on the error recovery token, `error', that the default be the error action
for example, allocate and initialize memory for escaping parameters
for files where input and output are identical
for flag parsing during cmd
for free list in Server
for global scoped hidden symbols we should insert it into symbol hash table, but mark them as hidden.
for go:cgo_export_static and go:cgo_export_dynamic Export the main function.
for go:linkname Calls the traceback function passed to SetCgoTraceback.
for go:linkname Defined in the runtime package.
for go:linkname Supply environ and __progname, because we don't link against the standard DragonFly crt0.o and the libc dynamic library needs them.
for go:linkname Supply environ and __progname, because we don't link against the standard FreeBSD crt0.o and the libc dynamic library needs them.
for go:linkname Supply environ and __progname, because we don't link against the standard NetBSD crt0.o and the libc dynamic library needs them.
for go:linkname Supply environ, __progname and __guard_local, because we don't link against the standard OpenBSD crt0.o and the libc dynamic library needs them.
for go:linkname go:cgo_import_static x_cgo_setenv go:linkname x_cgo_setenv x_cgo_setenv go:linkname _cgo_setenv runtime._cgo_setenv
for go:linkname go:linkname _iscgo runtime.iscgo
for go:linkname go:linkname os_sigpipe os.sigpipe
for go:linkname go:linkname setMaxStack runtime/debug.setMaxStack
for good error messages
for initialization cycle detection
for large buffers, avoid unnecessary extra temporary buffer space.
for linkgetline - TODO(rsc): remove
for livenessepilogue Summary sets of block effects.
for matching popdcl in caseblock
for morestack in called prologue
for non-composite objects we can read just the start address, as any write must write the first byte.
for non-composite objects we can write just the start address, as any write must write the first byte.
for now ignore interfaces small enough - print on one line (don't use identList and ignore source line breaks)
for now: default: inlining on.
for operations that need a type when rendered, put the type on the export list.
for our immediate predecessors.
for padding so we don't have to allocate all the time not synchronized because we don't care what the contents are
for possible final half-byte below
for printing export bodies
for ptrdiff_t and size_t below
for reading JSON values
for reading strings object lists
for self-verification only (redundant)
for small buffers, using Encode directly is much faster.
for sorting a pair of integers by key
for testing walk recursively descends path, calling w.
for testing, clobber stack data
for testing: whatever interrupts a sleep
for the last argument
for the same reason, set up a label scope
for threadsafe lazy initialization of offsets
for use by methods The objects that are receivers of a "String() string" method.
for verification in addmethod only
for walk to use in error messages
for writing JSON values
forEachP calls fn(p) for every P p when p reaches a GC safe point.
forShlib is the shared library that p will become part of, if any.
for_header parses the header portion of a for statement.
force US/Pacific for time zone tests
force a buffer load if empty
force a hashtable resize
force capture of w, but do not write to it yet
force dynamic linkage
force heap allocation Need to keep additional references to nodes, the stack is not all that type-safe.
force integer division
force integer division of integer operands
force later append to make copy
force means must assign concrete (non-ideal) type.
force printing of line number on first line
force re-layout the code.
force reading the trailer
force the Header to be sent, in chunking mode, not counting the length
force use of this argmap
forceCgoDNS forces the resolver configuration to use the cgo resolver and returns a fixup function to restore the old settings.
forceCgoLookupHost forces CGO to always be used, if available.
forceGoDNS forces the resolver configuration to use the pure Go resolver and returns a fixup function to restore the old settings.
forcePreemptNS is the time slice given to a G before it is preempted.
forced inclusion, method not embedded, or method embedded but original receiver type not exported
forcegcperiod is the maximum time in nanoseconds between garbage collections.
foreachField runs fn on each non-empty run of non-space bytes in x.
foreachLine runs fn on each line of x.
forget the alias names
forgetConn removes c from the set of tracked conns and decrements it from the waitgroup, unless it was previously removed.
forkAndExecInChild forks the process, calling dup onto 0..len(fd) and finally invoking exec(argv0, argvv, envv) in the child.
forkReq forks req into a shallow clone of ireq the first time it's called.
formToClass returns the DWARF 4 Class for the given form.
format and print all columns to the right of this column (we know the widths of this column and all columns to the left)
format contents of buffer
format formats the given package file originally obtained from src and adjusts the result based on the original source via sourceAdj and indentAdj.
format parses src, prints the corresponding AST, verifies the resulting src is syntactically correct, and returns the resulting src or an error if any.
format: "Service.Method"
formatBits computes the string representation of u in the given base.
formatError is returned by some operations if the data does not have the correct format for an object file.
formatNano appends a fractional second, as nanoseconds, to b and returns the result.
formatNode is a helper function for printing.
formatPAXRecord formats a single PAX record, prefixing it with the appropriate length.
formatString returns the format string argument and its index within the given printf-like call expression.
formatted source and golden must be the same
formatterTyp may be nil - be conservative and check for Format method in that case.
formatting golden must be idempotent (This is very difficult to achieve in general and for now it is only checked for files explicitly marked as such.)
formatting has changed
formerly exponential time analysis
forward declaration to exported ident
forward declaration to unexported ident
forward returns the heapBits describing n pointer-sized words ahead of h in memory.
found a different order
found a non-space char so far
found a potential match spec: "A method call x.m() is valid if the method set of (the type of) x contains m and the argument list can be assigned to the parameter list of m.
found all matches or there's no chance to find more (n and n1 can be negative)
found end of parameter list
found non-ff byte count 1 bits
found return value will indicate success, and prefix, body and suffix will contain correspondent parts of string s.
foundinitloop prints an init loop error and exits.
four letters must end in T.
four uint32: descriptor signature, crc32, compressed size, size
fp is the frame pointer (caller's stack pointer) at that program counter, or nil if unknown.
fp32 indexed by 4i store
fp32 indexed by i store
fp32 load indexed by 4*i
fp32 load indexed by i
fp64 indexed by 8i store binary ops
fp64 indexed by i store
fp64 load indexed by 8*i
fp64 load indexed by i
fprint implements Fprint and takes a nodesSizes map for setting up the printer state.
fpspill_ssa attempts to trigger a bug where phis with floating point values were stored in non-fp registers causing an error in doasm.
fptr is a pointer to a function.
fraction of CPU time used by GC
fractionalMarkTime is the nanoseconds spent in the fractional mark worker during this cycle.
fractionalMarkWorkersNeeded is the number of fractional mark workers that need to be started.
fractionalUtilizationGoal is the fraction of wall clock time that should be spent in the fractional mark worker.
frame int32 This has been removed (it was never set quite correctly anyway).
frame pointer, unused in the Go toolchain
frameBuffer returns a scratch buffer suitable for writing DATA frames.
frameWriteMsg is a request to write a frame.
frameWriteResult is the message passed from writeFrameAsync to the serve goroutine.
free is the index into bits of the next free byte.
free lists by log_2(s.npages)
free lists of given length
free: Dirty arenas that are no longer accessed and can be reused.
freeBlock returns a block to hc's free list.
freeReg frees up register r.
freeRegs frees up all registers listed in m.
freeSpan returns true if s was returned to the heap.
freeSpan updates c and s after sweeping s.
freeStackSpans frees unused stack spans at the end of GC.
freeValue frees a value.
freeindex is then adjusted so that subsequent scans begin just past the the newly discovered free object.
frees any registers holding args that are no longer live Dump any registers which will be clobbered
freezeStopWait is a large value that freezetheworld sets sched.stopwait to in order to request that all Gs permanently stop.
fresh G, so no dequeueRescan necessary
frexp10Many applies a common shift by a power of ten to a, b, c.
from another register or constant can be movl.
from fmt/fmt_test.go: comparison of padding rules with C printf
from fmt/fmt_test.go: old test/fmt_test.go
from fmt/fmt_test.go: zero padding does not apply to infinities
from here down is the walk analysis of composite literals.
from http://en.wikipedia.org/wiki/UTF-16
from http://research.swtch.com/sparse in turn, from Briggs and Torczon
from the send operation.
from utf8 package, but not importing it.
from vs to doesn't matter for registers.
from3 either C_REG or C_VCON
fromBig converts a *big.Int into a format used by this code.
fromHexChar converts a hex character into its value and a success flag.
fromID translates from ID to *Block where that is needed.
fromQuoted indicates whether this literal came from unwrapping a string from the ",string" struct tag option.
front end should handle
front end should only leave cmp to literal nil
fsysFile methods to implement fileImpl.
ftab is lookup table for function by program counter.
fudge from 250 ms above
full file name and line number: /a/b/c/d.go:23
full memory barrier between store to closing and read of rg/wg in netpollunblock
full memory barrier between store to rd and load of rg in netpollunblock
full memory barrier between store to wd and load of wg in netpollunblock
full memory barrier between stores to rd/wd and load of rg/wg in netpollunblock
full rooted directory of file.
full rooted path name.
fullName finds real name of section sh.
fun is the return type of Fun.
func (src *YCbCr) CopyToRGBA(dst *RGBA, dr, sr Rectangle) (effectiveDr, effectiveSr Rectangle)
func TestMain(m *testing.M)
func and composite literals
func declaration, or nil
func declarations cannot use iota
func f() or func (r) f()
func f(args ...int), introduced by escape analysis.
func must not have race detector annotations
func must run on system stack
func netpollready(gpp **g, pd *pollDesc, mode int32) pollDesc contains 2 binary semaphores, rg and wg, to park reader and writer goroutines respectively.
func parameters don't escape
func semacreate(mp *m) Create a semaphore for mp, if it does not already have one.
func semawakeup(mp *m) Wake up mp, which is or will soon be sleeping on its semaphore.
func should not be inlined
func should not execute on separate stack
func sym(p *T, h uintptr) uintptr
func sym(p, q *T) bool
func temperature.FToC(f float64) temperature.Celsius .
func temperature.main()
func with receiver as first argument
funcInfo stores the information required for type-checking a function.
funcLayout computes a struct type representing the layout of the function arguments and return values for the function type t.
funcLitFinder implements the ast.Visitor pattern to find the location of any function literal in a subtree.
funcMap maps command names to functions that render their inputs safe.
funcName returns the name of f, for use in error messages.
funcOutput takes two file names as arguments, a coverage profile to read as input and an output file to write ("" means to write to standard output).
funcOutputAndInput reports whether dst and src correspond to output and input parameters of the same function.
funcPC returns the entry PC of the function f.
funcStr builds a string representation of a funcType.
funcSummary prints a one-line summary for each function.
funcSym returns fn.Func.Nname.Sym if no nils are encountered along the way.
funcType represents a function type.
funcType type-checks a function or method type.
funcbody is normally called after the parser has seen the body of a function but since an interface field declaration does not have a body, we must call it now to pop the current declaration context.
funcdata, must be pointer-aligned and we're only int32-aligned.
funchdr does parameter renaming which doesn't matter if we don't have a body.
funcpctab writes to dst a pc-value table mapping the code in func to the values returned by valfunc parameterized by arg.
function already imported - read body but discard declarations
function arg structs should not be checked outside of the enclosing function.
function being tested
function body must be type-checked after global declarations (functions implemented elsewhere have no body)
function call arg reordering was picking out 1 call that didn't need to be in a temporary, but it was picking out the first call instead of the last call.
function calls have been removed.
function calls reflect.Type.Method or MethodByName
function created by reflect.MakeFunc
function declared already
function for local variables
function has inlineable body: write index and body
function in same mutually recursive group.
function literals aka closures
function name and args
function nesting level (for error handling)
function not yet imported - read body and set it
function omits save of link register (ARM)
function omits stack split prologue
function parameters (inputs)
function parameters and results
function results (outputs)
function returns results (if one, say the first, result parameter is named, all of them are named)
function scope, present for package-local signatures
function signature: parameters, results, and position of "func" keyword
function uses context register (has closure variables)
function was imported before (via another import)
function we're building
function, but not visible from Go (didn't match asmTEXT), so stop checking
functionBodies typechecks all function bodies.
functionCompleter replaces provided substring with a function name retrieved from a profile if a single match exists.
functions borrowed from pkg/math/all_test.go
functions may be recursive - no need to track dependencies
functions without a clear receiver
functype will print errors about duplicate function arguments.
fuse simplifies control flow by joining basic blocks.
fuseBlockIf handles the following cases where s0 and s1 are empty blocks.
fuseClear merges memory clear operations.
fuseCompareBranch finds comparisons followed by a branch and converts them into a compare-and-branch instruction (which avoid setting the condition code).
fuseMultiple merges memory loads and stores into load multiple and store multiple operations.
fuseOpMoves looks for moves following 2-operand operations and trys to merge them into a 3-operand operation.
futexsleep doesn't handle EINTR or other signals, so spurious wakeups may happen.
futexsleep(uint32 *addr, uint32 val) futexwakeup(uint32 *addr)
futexwakeup(addr *uint32, cnt uint32) If any procs are sleeping on addr, wake up at most cnt.
future notesleep will return immediately.
g and f should be the same (rounding by SetPrec after SetInt64 using default precision should be the same as rounding by SetInt64 after setting the precision)
g conversion and zero suppression
g is a reference to the data that is being encoded.
g0 stack won't make sense for user (and is not necessary unwindable).
g_ssa is the same as f_ssa, but with a bit of pointer arithmetic for added insanity.
garbage collection data
garbage collection symbols
gates readers one at a time
gates writers one at a time
gather function declarations
gather struct declarations
gbit16 reads a 16-bit number in little-endian order from b and returns it with the remaining slice of b.
gbit32 reads a 32-bit number in little-endian order from b and returns it with the remaining slice of b.
gbit64 reads a 64-bit number in little-endian order from b and returns it with the remaining slice of b.
gbit8 reads an 8-bit number from b and returns it with the remaining slice of b.
gc      Also known as cmd/compile.
gc and ssa both use -1/0/+1 for likeliness
gc doesn't separate between embedded interfaces and methods declared explicitly with an interface
gc error messages continue onto additional lines with leading tabs.
gc only checks duplicates for integer, floating-point and string values, so only create Go values for these types.
gc runs the compiler in a specific directory on a set of files and returns the name of the generated output file.
gc used to evaluate g() before f().
gc used to let this go through as true.
gc used to overflow a counter when a variable was mentioned 256 times, and generate stack corruption.
gc used to recurse infinitely when dowidth is applied to a broken recursive type again.
gc used to say this was a syntax error
gc uses fewer than 1024 bits, so allow it to print the overflow error for the -1 case.
gcAssistAlloc performs GC work to make gp's assist debt positive.
gcAssistBytes is this G's GC assist credit in terms of bytes allocated.
gcAssistTimeSlack is the nanoseconds of mutator assist time that can accumulate on a P before updating gcController.assistTime.
gcBgMarkPrepare sets up state for background marking.
gcBgMarkStartWorkers prepares background mark worker goroutines.
gcBitsArenas.current becomes gcBitsArenas.previous where the span's gcAllocBits live until all the spans have been swept during this GC cycle.
gcBitsArenas.next becomes the gcBitsArenas.current where the GC will mark objects and after each span is swept these bits will be used to allocate objects.
gcBitsHeader // side step recursive type bug (issue 14620) by including fields by hand.
gcBlackenEnabled is 1 if mutator assists and background mark workers are allowed to blacken objects.
gcBlackenEnabled must be false to prevent new assists from going to sleep after this point.
gcBlackenPromptly indicates that optimizations that may hide work from the global work queue should be disabled.
gcController implements the GC pacing controller that determines when to trigger concurrent garbage collection and how much marking work to do in mutator assists and background marking.
gcCreditSlack is the amount of scan work credit that can can accumulate locally before updating gcController.scanWork and, optionally, gcController.bgScanCredit.
gcDrain scans roots and objects in work buffers, blackening grey objects until all roots and work buffers have been drained.
gcDrainBlock means neither gcDrainUntilPreempt or gcDrainNoBlock.
gcDrainN blackens grey objects until it has performed roughly scanWork units of scan work or the G is preempted.
gcDumpObject dumps the contents of obj for debugging and marks the field at byte offset off in obj.
gcFlushBgCredit flushes scanWork units of background scan work credit.
gcFlushGCWork disposes the gcWork caches of all Ps.
gcGoalUtilization is the goal CPU utilization for background marking as a fraction of GOMAXPROCS.
gcInstallStackBarrier installs a stack barrier over the return PC of frame.
gcLockStackBarriers synchronizes with tracebacks of gp's stack during sigprof for installation or removal of stack barriers.
gcMark runs the mark (or, for concurrent GC, mark termination) STW is in effect at this point.
gcMarkDone transitions the GC from mark 1 to mark 2 and from mark 2 to mark termination.
gcMarkRootCheck checks that all roots have been scanned.
gcMarkRootPrepare queues root scanning jobs (stacks, globals, and some miscellany) and initializes scanning-related state.
gcMarkWorkAvailable returns true if executing a mark worker on p is potentially useful.
gcMarkWorkerDedicatedMode indicates that the P of a mark worker is dedicated to running that mark worker.
gcMarkWorkerFractionalMode indicates that a P is currently running the "fractional" mark worker.
gcMarkWorkerIdleMode indicates that a P is running the mark worker because it has nothing else to do.
gcMarkWorkerMode represents the mode that a concurrent mark worker should operate in.
gcMaxStackBarriers returns the maximum number of stack barriers that can be installed in a stack of stackSize bytes.
gcMode indicates how concurrent a GC cycle should be.
gcOverAssistBytes determines how many extra allocation bytes of assist credit a GC assist builds up when an assist happens.
gcPrintStkbars prints the stack barriers of gp for debugging.
gcRemoveStackBarrier removes a single stack barrier.
gcRemoveStackBarriers removes all stack barriers installed in gp's stack.
gcResetMarkState resets global state prior to marking (concurrent or STW) and resets the stack scan state of all Gs.
gcShouldStart returns true if the exit condition for the _GCoff phase has been met.
gcTryRemoveAllStackBarriers tries to remove stack barriers from all Gs in gps.
gcUnwindBarriers marks all stack barriers up the frame containing sp as hit and removes them.
gcWakeAllAssists wakes all currently blocked assists.
gcargs and gclocals are filled in with pointer maps for the frame.
gcbits returns the GC type info for x, for testing.
gcc on s390x does this
gcc runs the gcc C compiler to create an object from a single C file.
gcc's DWARF generator outputs a single DotDotDotType parameter for function pointers that specify no parameters (e.g. void (*__cgo_0)()).
gcc-4.5 and beyond require explicit "-pthread" flag for multithreading with pthread library.
gccArchArgs returns arguments to pass to gcc based on the architecture.
gccBaseCmd returns the start of the compiler command line.
gccCmd returns a gcc command line prefix defaultCC is defined in zdefaultcc.go, written by cmd/dist.
gccCmd returns the gcc command line to use for compiling the input.
gccDebug runs gcc -gdwarf-2 over the C program stdin and returns the corresponding DWARF data and, if present, debug data block.
gccErrors runs gcc over the C program stdin and returns the errors that gcc prints.
gccExportHeaderEpilog goes at the end of the generated header file.
gccMachine returns the gcc -m flag to use, either "-m32", "-m64" or "-marm".
gccSupportsFlag checks to see if the compiler supports a flag.
gccgo   The gccgo front end, part of the GCC compiler suite.
gccgo crashed compiling this file.
gccgo crashed compiling this.
gccgo does not yet do escape analysis.
gccgo failed to compile this.
gccgo failed to issue the first error below.
gccgo gave an invalid error ("floating point constant truncated to integer") compiling this.
gccgo needs explicit linking with all package dependencies, and all LDFLAGS from cgo dependencies.
gccgo standard library is "fake" too.
gccgoExportFileProlog is written to the _cgo_export.c file when using gccgo.
gccld runs the gcc linker to create an executable from a set of object files.
gcdata stores the GC type data for the garbage collector.
gcenable is called after the bulk of the runtime initialization, just before we're about to start letting user code run.
gcimporter creates abstract methods of named interfaces using the interface type (not the named type) as the receiver.
gcm represents a Galois Counter Mode with a specific key.
gcmAble is an interface implemented by ciphers that have a specific optimized implementation of GCM, like crypto/aes.
gcmAble is implemented by cipher.Blocks that can provide an optimized implementation of GCM through the AEAD interface.
gcmInc32 treats the final four bytes of counterBlock as a big-endian value and increments it.
gcmarkBits becomes the allocBits.
gcmarknewobject marks a newly allocated object black.
gcprog should not include anything for any field after the last field that contains pointer data
gcw is this P's GC work buffer cache.
gcworkbuffree(c.gcworkbuf)
gcworkbufs are not being modified by either the GC or the write barrier code.
gdesc is a private part of GDesc that is required only during analysis.
gen1 has multiple old strings of variable length.
gen2 has multiple old strings with no pairwise common prefix.
gen3 has multiple old strings with an overall common prefix.
genLine writes to buf a predictable but non-trivial line of text of length n, including the terminal newline and an occasional carriage return.
genManyPred creates an array of blocks where 1/3rd have a successor of the first block, 1/3rd the last block, and the remaining third are plain.
genMatch returns true if the match can fail.
genMaxPred maximizes the size of the 'exit' predecessor list.
genMaxPredValue is identical to genMaxPred but contains an additional value.
gen_as_init attempts to emit static data for n and reports whether it succeeded.
geneq generates a helper function to check equality of two values of type t.
geneq is only called for types that have equality but cannot be handled by the standard algorithms, so t must be either an array or a struct.
general purpose function to perform DES block permutations
general-purpose register (64-bit)
generate .tbss section (except for OpenBSD where it's not supported) for dynamic internal linker or external linking, so that various binutils could correctly calculate PT_TLS size.
generate Block* declarations
generate DWARF v2 debugging symbols
generate Op* declarations
generate OpInfo table
generate a comparison TODO(kaib): one of the args can actually be a small constant.
generate a constant shift arm encodes a shift by 32 as 0, thus asking for 0 shift is illegal.
generate a context-sensitive call tree
generate a register shift
generate a rewrite in n2 for the method call (p.f)(...) goes to (f)(p,...)
generate all reachable methods
generate all uint64 values x where x has at most n bits set in the low w and call f(x) for each.
generate all uint64 values x, y where x has at most n1 bits set in the low w1 and y has at most n2 bits set in the low w2 and call f(x, y) for each.
generate an addressable node in res, containing the value of n.
generate an alg table specific to this type
generate array index into res.
generate block kind string method
generate bounds error with ptr dynamic
generate bounds error with ptr fixed
generate branch n1, n2 are registers
generate code for print
generate code to compute address of n, a reference to a (perhaps nested) field inside an array or struct.
generate code to start new proc running call n.
generate code to test condition
generate comparison of nl, nr, both 64-bit.
generate declaration.
generate discard of value
generate floating-point operation.
generate go func value.
generate import strings for imported packages
generate list of if statements, binary search for constant sequences
generate nil pointer check for better error
generate one instruction: as f, r, t r must be register, if not nil
generate one instruction: as f, t
generate op string method
generate operands in "8-bit" registers.
generate our functions to be tested
generate permuted order
generate runs the generation directives for a single file.
generate stable output
generate tail call: adjust pointer receiver and jump to embedded method.
generate the closure of state i
generate the test data
generateDominatorMap uses dominatorsSimple to obtain a reference dominator tree for testing faster algorithms.
generateSVGProfile generates pprof-like profile stored in prof and writes in to w.
generated by a 16-bit constant, optionally inverted and/or shifted by multiple of 16
generated by compiler for trampolin routines - not exported
generated by genzabbrs.go from http://unicode.org/cldr/data/common/supplemental/windowsZones.xml
generated code and compiler memory footprint is better without it.
generated from gen/*Ops.go
generated with: openssl genrsa -aes128 -passout pass:asdf -out server.orig.key 128
generates incorrect code
generates phi for cap
generates phi for len
generates phi for ptr
generating wrapper from *T to T.
generic single channel send/recv If block is not nil, then the protocol will not sleep but return if it could not complete.
genericReplacer is the fully generic algorithm.
genhash is only called for types that have equality but cannot be handled by the standard algorithms, so t must be either an array or a struct.
genlegacy compiles Curfn using the legacy non-SSA code generator.
genssa appends entries to ptxt for each instruction in f.
gentab records how to generate some trivial files.
gentext generates assembly to append the local moduledata to the global moduledata linked list at initialization time.
gentraceback assumes that goexit terminates the stack.
get a fresh cleared gcmarkBits in preparation for next GC
get a list of open fds, excluding stdin,stdout and stderr that need to be closed in the child.
get allocates an ID and returns it.
get associated methods
get closure pointer from dedicated register Indexing operations
get comment ready for use
get comments ready for use
get dequeues a pointer for the garbage collector to trace, blocking if necessary to ensure all pointers from all queues and caches have been retrieved.
get filename and line number, if any
get goroot, goarch, goos add goroot to the end of the libdir list.
get identifiers so defined
get invisibles properly backslashed
get is like Get, but key must already be in CanonicalHeaderKey form.
get normalized mantissa
get per-file instructions
get receiver type for this particular method.
get returns 0 if there are no pointers remaining.
get returns a list of desired registers for value vid.
get returns a machine to use for matching re.
get returns the known possible relations between v and w.
get returns the value for key k, or -1 if k does not appear in the map.
get rid of any previous writes
get the expected error output (no clone)
get the number of literals
get the number of offsets
get verifies that the next item has the expected type and returns it.
get, and look up, a type name (union member name)
get2 returns the little-endian 16-bit value in b.
get4 returns the little-endian 32-bit value in b.
getAbbrs finds timezone abbreviations (standard and daylight saving time) for location l.
getBase returns the numeric base represented by the verb and its digit string.
getBaseType returns the Gob type describing the given reflect.Type's base type.
getBranch returns the range restrictions added by p when reaching b.
getCertificate returns the best certificate for the given ClientHelloInfo, defaulting to the first element of c.Certificates.
getConn dials and creates a new persistConn to the target as specified in the connectMethod.
getConstant checks that addr represents a plain constant and returns its value.
getConstantPseudo checks that addr represents a plain constant and returns its value.
getDecEnginePtr cached engine for ut.base instead of ut.user so we passed a *map and then tried to reuse its engine to decode the inner map.
getDecEnginePtr returns the engine for the specified type.
getEncEngine returns the engine to compile the type.
getEsc gets a possibly-escaped character from chunk, for a character class.
getField gets the i'th field of the struct value.
getFile assumes that each filename occurs at most once
getFunctionSource collects the sources of a function from a source file and annotates it with the samples in fns.
getIdleConnCh returns a channel to receive and return idle persistent connection for the given connectMethod.
getIgnoreEnginePtr returns the engine for the specified type when the value is to be discarded.
getImmediate checks that addr represents an immediate constant and returns its value.
getInfo retrieves a specified type of information about an access token.
getLength decodes the next uint and makes sure it is a possible size for a data item that follows, which means it must fit in a non-negative int and fit in the buffer.
getMaxCount returns the maximum number of iterations to run for a given Config.
getMissingFunctionSource creates a dummy function body to point to the source file and annotates it with the samples in asm.
getNat returns a nat of len n.
getNode returns the ast.CommentGroup associated with n, if any.
getPkg returns the package for a given id.
getPkg returns the package for a given path.
getRand returns the *rand.Rand to use for a given Config.
getRegister checks that addr represents a register and returns its value.
getShellName returns the name that begins the string and the number of bytes consumed to extract it.
getStderr returns standard error of the testgo run as a string.
getStdout returns standard output of the testgo run as a string.
getString does not extracts a string from symbol string table (as getString doco says).
getString extracts a string from an ELF string table.
getString extracts a string from symbol string table.
getSymbols returns a slice of Symbols from parsing the symbol table with the given type, along with the associated string table.
getTestDeps is for download (part of "go get") and indicates that test dependencies should be fetched too.
getType returns the Gob type describing the given reflect.Type.
getTypeInfo returns the typeInfo structure with details necessary for marshalling and unmarshalling typ.
getUniversalType returns the tag for PrintableString when it sees a string, so if we see a different string type on the wire, we change the universal type to match.
getargp returns the location where the caller writes outgoing function call arguments.
getattr moves the desired one to the front so frequently searched ones are found faster.
getcallerpc returns the program counter (PC) of its caller's caller.
getcallersp returns the stack pointer (SP) of its caller's caller.
getempty pops an empty work buffer off the work.empty list, allocating new buffers if none are available.
getentropy(2) returns a maximum of 256 bytes per call
getentropy(2)'s syscall number, from /usr/src/sys/kern/syscalls.master
getfull acts as a barrier for work.nproc helpers.
getg returns the pointer to the current g.
getmac output looks like:
gets is an address-and-interface-mentioning way of implementing structure assignment.
gets is an address-mentioning way of implementing structure assignment.
gfortran runs the gfortran Fortran compiler to create an object from a single Fortran file.
gfortranCmd returns a gfortran command line prefix.
gins is called by the front end.
git will ask for a username and password when we run go get -d -f -u.
give Copy a chance to break things
give each tmp a different name so that there a chance to registerizer them
give ourselves 8 bytes so as to avoid surprises.
give the goroutine above time to block
give the queued finalizers, if any, a chance to run
give up res, which we don't need yet.
give us a big address space
given an offset v and a class c (see above) return the offset value to use in the instruction, scaled if necessary
glibc lacking an nsswitch.conf, per http://www.gnu.org/software/libc/manual/html_node/Notes-on-NSS-Configuration-File.html
glob searches for files matching pattern in the directory dir and appends them to matches.
global descriptor table register
global extended header
global trace buffer, used when running without a p
global work available
globalCT is the size in bytes of the global color table.
globalOptionsHandler responds to "OPTIONS *" requests.
globals to ensure optimizations don't collapse our switch statements
gmvc tries to move f to t using a mvc instruction.
gnuArg returns the GNU syntax for the argument x from the instruction inst.
gnuVersion adds Library and Version information to sym, which came from offset i of the symbol table.
gnuVersionInit parses the GNU version tables for use by calls to gnuVersion.
go DNS resolution forced
go Left (Left must be call)
go ahead and sign extend to save doing it later
go build -o testcover
go code on the system stack can't defer
go doc -cmd cmd/doc Show package docs and exported symbols within the doc command.
go doc Foo Show documentation for Foo in the current package.
go doc cmd/doc Show package docs for the doc command.
go doc json Shorthand for encoding/json.
go doc json.Number (or go doc json.number) Show documentation and method summary for json.Number.
go doc json.Number.Int64 (or go doc json.number.int64) Show documentation for json.Number's Int64 method.
go doc template.new Show documentation for html/template's New function.
go f(x) - f and x escape
go get foo.io (not foo.io/subdir) was not working consistently.
go never generates a branch to a GPR read p.To
go parser benchmark based on go/parser/performance_test.go
go run ./testdata/main.go ./testdata/test.go
go run genzabbrs.go -output zoneinfo_abbrs_windows.go
go run makeisprint.go -output isprint.go
go to that label (we pretend "label:" is preceded by "goto label")
go tool objdump binary start end
go tool pprof binary profile
go tool pprof http://localhost:6060/debug/pprof/block
go tool pprof http://localhost:6060/debug/pprof/heap
go tool pprof http://localhost:6060/debug/pprof/profile
go vet should complain about this line.
go wide to dodge unsigned
go-specific code shared across loaders (5l, 6l, 8l).
go.itab is accessed only by the compiler and runtime (assume safe)
go.tools/ssa/interp can't handle unsafe.Pointer.
go.tools/ssa/interp cannot support unsafe.Pointer.
go.tools/ssa/interp still has: - some lesser bugs in recover() - incomplete support for reflection
go/scanner returns a legal string literal
go12Funcs returns a slice of Funcs derived from the Go 1.2 pcln table.
go12LineToPC maps a (file, line) pair to a program counter for the Go 1.2 pcln table.
go12MapFiles adds to m a key for every file in the Go 1.2 LineTable.
go12PCToFile maps program counter to file name for the Go 1.2 pcln table.
go12PCToLine maps program counter to line number for the Go 1.2 pcln table.
go12init initializes the Go 1.2 metadata if t is a Go 1.2 symbol table.
go:binary-only-package
go:cgo_dynamic_linker "path"`)
go:cgo_export_dynamic __guard_local __guard_local We override pthread_create to support PT_TLS.
go:cgo_export_dynamic environ environ go:cgo_export_dynamic __progname __progname This is normally marked as hidden and placed in the .openbsd.randomdata section.
go:cgo_export_dynamic pthread_create pthread_create
go:cgo_export_static _cgo_reginit
go:cgo_export_static _cgo_topofstack go:cgo_export_dynamic _cgo_topofstack
go:cgo_export_static crosscall2 go:cgo_export_dynamic crosscall2 Panic.
go:cgo_export_static main Filled in by runtime/cgo when linked into binary.
go:cgo_export_static main.main go:cgo_export_dynamic main.main
go:cgo_import_dynamic _ _ "libsendfile.so" go:cgo_import_dynamic _ _ "libsocket.so" maxSendfileSize is the largest chunk size we ask the kernel to copy at a time.
go:cgo_import_dynamic libc_Getpgid getpgid "libc.so" go:cgo_import_dynamic libc_Getpgrp getpgrp "libc.so" go:linkname libc_Getpgid libc_Getpgid go:linkname libc_Getpgrp libc_Getpgrp
go:cgo_import_static local`)
go:cgo_import_static x_cgo_callers go:linkname x_cgo_callers x_cgo_callers go:linkname _cgo_callers _cgo_callers
go:cgo_import_static x_cgo_free go:linkname x_cgo_free x_cgo_free go:linkname _cgo_free _cgo_free
go:cgo_import_static x_cgo_init go:linkname x_cgo_init x_cgo_init go:linkname _cgo_init _cgo_init
go:cgo_import_static x_cgo_malloc go:linkname x_cgo_malloc x_cgo_malloc go:linkname _cgo_malloc _cgo_malloc
go:cgo_import_static x_cgo_mmap go:linkname x_cgo_mmap x_cgo_mmap go:linkname _cgo_mmap _cgo_mmap
go:cgo_import_static x_cgo_notify_runtime_init_done go:linkname x_cgo_notify_runtime_init_done x_cgo_notify_runtime_init_done go:linkname _cgo_notify_runtime_init_done _cgo_notify_runtime_init_done
go:cgo_import_static x_cgo_panicmem go:linkname x_cgo_panicmem x_cgo_panicmem
go:cgo_import_static x_cgo_set_context_function go:linkname x_cgo_set_context_function x_cgo_set_context_function go:linkname _cgo_set_context_function _cgo_set_context_function
go:cgo_import_static x_cgo_sys_thread_create go:linkname x_cgo_sys_thread_create x_cgo_sys_thread_create go:linkname _cgo_sys_thread_create _cgo_sys_thread_create
go:cgo_import_static x_cgo_thread_start go:linkname x_cgo_thread_start x_cgo_thread_start go:linkname _cgo_thread_start _cgo_thread_start
go:cgo_import_static x_cgo_unsetenv go:linkname x_cgo_unsetenv x_cgo_unsetenv go:linkname _cgo_unsetenv runtime._cgo_unsetenv
go:cgo_ldflag "arg"`)
go:generate -command run echo Now is the time go:generate run for all good men
go:generate -command xxx args...
go:generate -command yacc go tool yacc
go:generate ./mkalldocs.sh
go:generate bundle -o h2_bundle.go -prefix http2 golang.org/x/net/http2 Package http2 implements the HTTP/2 protocol.
go:generate command argument...
go:generate go run ../../../syscall/mksyscall_windows.go -output zsyscall_windows.go -systemdll syscall_windows.go
go:generate go run decgen.go -output dec_helpers.go
go:generate go run encgen.go -output enc_helpers.go
go:generate go run gen.go -full -output md5block.go Package md5 implements the MD5 hash algorithm as defined in RFC 1321.
go:generate go run gen.go -output palette.go Package palette provides standard color palettes.
go:generate go run gen.go Package imageutil contains code shared by image-related packages.
go:generate go run gengoos.go
go:generate go run genzabbrs.go -output zoneinfo_abbrs_windows.go TODO(rsc): Fall back to copy of zoneinfo files.
go:generate go run makeisprint.go -output isprint.go
go:generate go run mkbuiltin.go
go:generate go run mksyscall_windows.go -systemdll -output zsyscall_windows.go syscall_windows.go security_windows.go
go:generate go run root_darwin_arm_gen.go -output root_darwin_armx.go
go:generate go run wincallback.go go:generate go run mkduff.go go:generate go run mkfastlog2table.go
go:linkname __tsan_acquire __tsan_acquire
go:linkname __tsan_finalizer_goroutine __tsan_finalizer_goroutine
go:linkname __tsan_fini __tsan_fini
go:linkname __tsan_free __tsan_free
go:linkname __tsan_go_end __tsan_go_end
go:linkname __tsan_go_ignore_sync_begin __tsan_go_ignore_sync_begin
go:linkname __tsan_go_ignore_sync_end __tsan_go_ignore_sync_end
go:linkname __tsan_go_start __tsan_go_start
go:linkname __tsan_init __tsan_init
go:linkname __tsan_malloc __tsan_malloc
go:linkname __tsan_map_shadow __tsan_map_shadow
go:linkname __tsan_proc_create __tsan_proc_create
go:linkname __tsan_proc_destroy __tsan_proc_destroy
go:linkname __tsan_release __tsan_release
go:linkname __tsan_release_merge __tsan_release_merge
go:linkname _cgoCheckPointer runtime.cgoCheckPointer
go:linkname _cgoCheckResult runtime.cgoCheckResult
go:linkname _cgo_mmap _cgo_mmap
go:linkname _cgo_panic _cgo_panic go:cgo_export_static _cgo_panic go:cgo_export_dynamic _cgo_panic go:nosplit go:norace
go:linkname _cgo_runtime_cgocall runtime.cgocall
go:linkname _cgo_runtime_cgocallback runtime.cgocallback
go:linkname _cgo_runtime_cmalloc runtime.cmalloc
go:linkname _cgo_runtime_gobytes runtime.gobytes
go:linkname _cgo_runtime_gostring runtime.gostring
go:linkname _cgo_runtime_gostringn runtime.gostringn
go:linkname _environ environ go:linkname _progname __progname
go:linkname _environ environ go:linkname _progname __progname go:cgo_export_dynamic environ go:cgo_export_dynamic __progname
go:linkname _environ environ go:linkname _progname __progname go:linkname _guard_local __guard_local
go:linkname _runtime_cgo_panic_internal runtime._cgo_panic_internal
go:linkname bytes_Compare bytes.Compare
go:linkname compileCallback syscall.compileCallback
go:linkname localname linkname")
go:linkname lockedOSThread runtime.lockedOSThread extern runtime_lockedOSThread
go:linkname main_init main.init
go:linkname main_main main.main
go:linkname net_runtimeNano net.runtimeNano
go:linkname net_runtime_Semacquire net.runtime_Semacquire
go:linkname net_runtime_Semrelease net.runtime_Semrelease
go:linkname net_runtime_pollClose net.runtime_pollClose
go:linkname net_runtime_pollOpen net.runtime_pollOpen
go:linkname net_runtime_pollReset net.runtime_pollReset
go:linkname net_runtime_pollServerInit net.runtime_pollServerInit
go:linkname net_runtime_pollSetDeadline net.runtime_pollSetDeadline
go:linkname net_runtime_pollUnblock net.runtime_pollUnblock
go:linkname net_runtime_pollWait net.runtime_pollWait
go:linkname net_runtime_pollWaitCanceled net.runtime_pollWaitCanceled
go:linkname notifyListAdd sync.runtime_notifyListAdd
go:linkname notifyListCheck sync.runtime_notifyListCheck
go:linkname notifyListNotifyAll sync.runtime_notifyListNotifyAll
go:linkname notifyListNotifyOne sync.runtime_notifyListNotifyOne
go:linkname notifyListWait sync.runtime_notifyListWait
go:linkname os_beforeExit os.runtime_beforeExit
go:linkname os_runtime_args os.runtime_args
go:linkname os_sigpipe os.sigpipe
go:linkname readGCStats runtime/debug.readGCStats
go:linkname reflect_addReflectOff reflect.addReflectOff
go:linkname reflect_chancap reflect.chancap
go:linkname reflect_chanclose reflect.chanclose
go:linkname reflect_chanlen reflect.chanlen
go:linkname reflect_chanrecv reflect.chanrecv
go:linkname reflect_chansend reflect.chansend
go:linkname reflect_gcbits reflect.gcbits
go:linkname reflect_ifaceE2I reflect.ifaceE2I
go:linkname reflect_ismapkey reflect.ismapkey
go:linkname reflect_makechan reflect.makechan
go:linkname reflect_mapaccess reflect.mapaccess
go:linkname reflect_mapassign reflect.mapassign
go:linkname reflect_mapdelete reflect.mapdelete
go:linkname reflect_mapiterinit reflect.mapiterinit
go:linkname reflect_mapiterkey reflect.mapiterkey
go:linkname reflect_mapiternext reflect.mapiternext
go:linkname reflect_maplen reflect.maplen
go:linkname reflect_memclr reflect.memclr
go:linkname reflect_memmove reflect.memmove
go:linkname reflect_resolveNameOff reflect.resolveNameOff
go:linkname reflect_resolveTextOff reflect.resolveTextOff
go:linkname reflect_resolveTypeOff reflect.resolveTypeOff
go:linkname reflect_rselect reflect.rselect
go:linkname reflect_typedmemmove reflect.typedmemmove
go:linkname reflect_typedmemmovepartial reflect.typedmemmovepartial
go:linkname reflect_typedslicecopy reflect.typedslicecopy
go:linkname reflect_typelinks reflect.typelinks
go:linkname reflect_unsafe_New reflect.unsafe_New
go:linkname reflect_unsafe_NewArray reflect.unsafe_NewArray
go:linkname runtime_debug_WriteHeapDump runtime/debug.WriteHeapDump
go:linkname runtime_debug_freeOSMemory runtime/debug.freeOSMemory
go:linkname runtime_getm_for_test runtime.getm
go:linkname runtime_init runtime.init
go:linkname runtime_pprof_runtime_cyclesPerSecond runtime/pprof.runtime_cyclesPerSecond
go:linkname setGCPercent runtime/debug.setGCPercent
go:linkname setMaxThreads runtime/debug.setMaxThreads
go:linkname setPanicOnFault runtime/debug.setPanicOnFault
go:linkname setTraceback runtime/debug.SetTraceback
go:linkname signal_disable os/signal.signal_disable
go:linkname signal_enable os/signal.signal_enable
go:linkname signal_ignore os/signal.signal_ignore
go:linkname signal_recv os/signal.signal_recv
go:linkname startTimer time.startTimer
go:linkname stopTimer time.stopTimer
go:linkname sync_atomic_CompareAndSwapPointer sync/atomic.CompareAndSwapPointer go:nosplit
go:linkname sync_atomic_CompareAndSwapUintptr sync/atomic.CompareAndSwapUintptr
go:linkname sync_atomic_StorePointer sync/atomic.StorePointer go:nosplit
go:linkname sync_atomic_StoreUintptr sync/atomic.StoreUintptr
go:linkname sync_atomic_SwapPointer sync/atomic.SwapPointer go:nosplit
go:linkname sync_atomic_SwapUintptr sync/atomic.SwapUintptr
go:linkname sync_atomic_runtime_procPin sync/atomic.runtime_procPin go:nosplit
go:linkname sync_atomic_runtime_procUnpin sync/atomic.runtime_procUnpin go:nosplit
go:linkname sync_runtime_Semacquire sync.runtime_Semacquire
go:linkname sync_runtime_Semrelease sync.runtime_Semrelease
go:linkname sync_runtime_canSpin sync.runtime_canSpin go:nosplit
go:linkname sync_runtime_doSpin sync.runtime_doSpin go:nosplit
go:linkname sync_runtime_procPin sync.runtime_procPin go:nosplit
go:linkname sync_runtime_procUnpin sync.runtime_procUnpin go:nosplit
go:linkname sync_runtime_registerPoolCleanup sync.runtime_registerPoolCleanup
go:linkname syscall_Syscall syscall.Syscall go:nosplit
go:linkname syscall_Syscall12 syscall.Syscall12 go:nosplit
go:linkname syscall_Syscall15 syscall.Syscall15 go:nosplit
go:linkname syscall_Syscall6 syscall.Syscall6 go:nosplit
go:linkname syscall_Syscall9 syscall.Syscall9 go:nosplit
go:linkname syscall_getprocaddress syscall.getprocaddress go:nosplit
go:linkname syscall_loadlibrary syscall.loadlibrary go:nosplit
go:linkname syscall_loadsystemlibrary syscall.loadsystemlibrary go:nosplit
go:linkname syscall_runtime_AfterFork syscall.runtime_AfterFork go:nosplit
go:linkname syscall_runtime_BeforeFork syscall.runtime_BeforeFork go:nosplit
go:linkname syscall_runtime_envs syscall.runtime_envs
go:linkname syscall_setenv_c syscall.setenv_c
go:linkname syscall_unsetenv_c syscall.unsetenv_c
go:linkname timeSleep time.Sleep
go:linkname time_now time.now
go:linkname time_runtimeNano time.runtimeNano
go:noescape IndexByte returns the index of the first instance of c in s, or -1 if c is not present in s.
go:noescape with external func implementations")
go:noinline go:nosplit
go:nosplit Gosched yields the processor, allowing other goroutines to run.
go:nosplit LockOSThread wires the calling goroutine to its current operating system thread.
go:nosplit RaceDisable disables handling of race events in the current goroutine.
go:nosplit RaceEnable re-enables handling of race events in the current goroutine.
go:nosplit The //go:nosplit directive specifies that the next function declared in the file must not include a stack overflow check.
go:nosplit UnlockOSThread unwires the calling goroutine from its fixed operating system thread.
go:nosplit go:noinline
go:nosplit go:norace go:nowritebarrierrec
go:nosplit go:nowritebarrier
go:nosplit go:nowritebarrierrec
go:nowritebarrier We might not be holding a p in this code.
go:nowritebarrier go:nosplit
go:nowritebarrier go:systemstack
go:nowritebarrierc go:nosplit
go:xxx function annotations
goCmd invokes the go tool with the installsuffix set up by TestMain.
goDebugNetDNS parses the value of the GODEBUG "netdns" value.
goDebugString returns the value of the named GODEBUG key.
goFilesPackage creates a package for building a collection of Go files (typically named on the command line).
goFilesPackage is going to assign this to TestGoFiles.
goLookupCNAME is the native Go implementation of LookupCNAME.
goLookupHost is the native Go implementation of LookupHost.
goLookupIP is the native Go implementation of LookupIP.
goLookupPTR is the native Go implementation of LookupAddr.
goLookupPort is the native Go implementation of LookupPort.
goTag matches go release tags such as go1 and go1.2.3.
goTimeout runs f, failing t if f takes more than ns to complete.
goTools is a map of Go program import path to install target directory.
goVal returns the Go value for val, or nil.
goal of the action: the created package or executable Execution state.
goarch makes sense but is not exposed in debug/goobj's API, and we don't need it yet for any users of internal/objfile.
gobDecodeOpFor returns the op for a type that is known to implement GobDecoder.
gobEncodeOpFor returns the op for a type that is known to implement GobEncoder.
gobuf arg to morestack
godefs returns the output for -godefs mode.
godefsFields rewrites field names for use in Go or C definitions.
goexit continuation on g0.
goexit is the return stub at the top of every goroutine call stack.
gofiles + IgnoredGoFiles, absolute paths
gofmt returns a string representation of the expression.
gofmt returns the gofmt-formatted string for an AST node.
gofmtFlags looks for a comment of the form
going back to cgo call
golang.org/issue/10433 (path beginning with //)
golang.org/issue/10500.
golang.org/issue/11208
golang.org/issue/11264
golang.org/issue/11905
golang.org/issue/12023
golang.org/issue/12200 (colon with empty port)
golang.org/issue/12225 The test is that this compiles at all.
golang.org/issue/12358
golang.org/issue/12686.
golang.org/issue/12798
golang.org/issue/13264 The test is that this compiles at all.
golang.org/issue/14002
golang.org/issue/14391: also check DefaultTransport
golang.org/issue/3652.
golang.org/issue/3672 -- Client can't close HTTP stream Calling Close on a Response.Body used to just read until EOF.
golang.org/issue/3692
golang.org/issue/3734
golang.org/issue/4477
golang.org/issue/4531: Transport leaks goroutines when request.ContentLength is explicitly short
golang.org/issue/4622
golang.org/issue/4645.
golang.org/issue/4741 -- setting only a write timeout that triggers shouldn't cause a handler to block forever on reads (next HTTP request) that will never happen.
golang.org/issue/4767: don't special-case multipart/byteranges responses
golang.org/issue/4859
golang.org/issue/4860 variant 1
golang.org/issue/4860 variant 2
golang.org/issue/5046
golang.org/issue/5283: don't release the Rows' connection in Close before calling Stmt.Close.
golang.org/issue/5290
golang.org/issue/5323
golang.org/issue/5684
golang.org/issue/5718
golang.org/issue/6128.
golang.org/issue/6232.
golang.org/issue/6298.
golang.org/issue/6506.
golang.org/issue/6556
golang.org/issue/6612 Test new scheme for deciding whether C.name is an expression, type, constant.
golang.org/issue/6857
golang.org/issue/7063
golang.org/issue/7196
golang.org/issue/7198
golang.org/issue/7569
golang.org/issue/7672.
golang.org/issue/7750: request fails when server replies with a short gzip body
golang.org/issue/7856
golang.org/issue/8261
golang.org/issue/8345
golang.org/issue/8534 -- the Server shouldn't reuse a connection for keep-alive after it's seen any Write error (e.g. a timeout) on that net.Conn.
golang.org/issue/8582
golang.org/issue/8923
golang.org/issue/9224.
golang.org/issue/9357.
golden files always use / in filenames - canonicalize them
golden symbol table data generated by testdata/getgoldsym.c
goodArgNum records whether the most recent reordering directive was valid.
goodFunc reports whether the function or method has the right result signature.
goodName reports whether the function name is a valid identifier.
googleLeafWithInvalidHash is the same as googleLeaf, but the signature algorithm in the certificate contains a nonsense OID.
gopath returns the list of Go path directories.
goroutine running during fatal signal
goroutine that called ReadTrace, or nil
goroutine that runs finalizers
goroutine with scheduling stack
goroutine, threadcreate
goroutine-specific getwd
got first MetaHeadersFrame (actual headers)
got optional second MetaHeadersFrame (trailers)
got the initial SETTINGS frame after the preface
goto across declaration after inner scope not okay
goto across declaration in inner scope okay
goto across declaration in reverse okay
goto across declaration not okay
goto after declaration okay
goto backward into inner block still not okay
goto backward into outer block okay
goto before declaration okay
goto hard for "convert to cvt type first".
goto into inner block not okay
goto into outer block okay
goto not okay even if code path is dead
goto on c is possible
goto rdst for "destination must be register".
goto without label used to panic
gotoTarget returns the labeled statement in the current or an enclosing block with the given label name, or nil.
gotraceback returns the current traceback settings.
gp and deadline are logically local variables, but they are written as parameters so that the stack space they require is charged to the caller.
gp hit all of the stack barriers (or there were none).
gp is the only assist in the queue.
gp may have added itself to the rescan list between when GC started and now.
gp must be stopped, but the world need not be.
gp must be the calling user gorountine.
gp's stack barriers must be locked.
gp.gcscanvalid must not be true when we are running.
grab snapshot of bucket state
grabProfile fetches and symbolizes a profile.
grammar rule information
graph summarizes a performance profile into a format that is suitable for visualization.
gratuitous no-op to force addressing
grayToY stores the 8x8 region of m whose top-left corner is p in yBlock.
grepBoth looks for a regular expression in the test run's standard output or stand error and fails, logging msg, if it is not found.
grepBothNot looks for a regular expression in the test run's standard output or stand error and fails, logging msg, if it is found.
grepCountBoth returns the number of times a regexp is seen in both standard output and standard error.
grepStderr looks for a regular expression in the test run's standard error and fails, logging msg, if it is not found.
grepStderrNot looks for a regular expression in the test run's standard error and fails, logging msg, if it is found.
grepStdout looks for a regular expression in the test run's standard output and fails, logging msg, if it is not found.
grepStdoutNot looks for a regular expression in the test run's standard output and fails, logging msg, if it is found.
group of parenthesized declarations
grow allocates a new empty span from the heap and initializes it for c's size class.
grow grows the buffer to guarantee space for n more bytes.
grow grows the slice s so that it can hold extra more values, allocating more capacity if needed.
growSpan expands the span for the object to contain the instance represented by the identifier.
grows one byte per char
growslice handles slice growth during append.
gset restricts goroutines that are included in the resulting trace.
gstring reads a string from b, prefixed with a 16-bit length in little-endian order.
gtype describes a group of goroutines grouped by start PC.
guarantee alignment so that compiler can use a 32 or 64-bit load
guarantee always same sequence
guarantee we have  something in common with GobTest*
guaranteed not to fault
guaranteed to be non-nil
guaranteedDereference returns the number of dereferences applied to a pointer before addresses are taken/generated.
guard against "declared and not used"
guard against side effects of shuffling fds below.
guard against xrealwd returning the directory without the trailing /
guard stateLog and connID
guarded by printlock/printunlock.
guards 3 following fields
guards Close and Read
guards Close and Write
guards calling (*Config).serverInit mutex protects sessionTicketKeys
guards close of dying
guards closeNotifierCh
guards closed and conns
guards closed and list
guards compressor and decompressor maps
guards following 3 maps
guards following 4 fields
guards following fields
guards following, and calls to Read and Close
guards init of confVal via initConfVal
guards init of resolverConfig ch is used as a semaphore that only allows one lookup at a time to recheck resolv.conf.
guards init of staleRuntimeErr
guards initialization of TLSNextProto in Serve
guards lastChecked and modTime
guards output and failed
guessKinds tricks gcc into revealing the kind of each name xxx for the references C.xxx in the Go input.
gvardef inserts a VARDEF for n into the instruction stream.
gxx runs the g++ C++ compiler to create an object from a single C++ file.
gxxCmd returns a g++ command line prefix defaultCXX is defined in zdefaultcc.go, written by cmd/dist.
gzipReader wraps a response body so it can lazily call gzip.NewReader on the first call to Read
h and f should be the same (repeated rounding should be idempotent)
h must describe the initial word of the object.
h must not describe the second word of the object.
h.forward(1) is equivalent to h.next(), just slower.
h.nCodes is the total number of codes.
h12Compare is a test that compares HTTP/1 and HTTP/2 behavior against each other.
h_spans is accessed concurrently without synchronization from other threads.
hack to make B.NE etc.
half word size in bits
half-digit size in bits
halfword insn offset (-0xff to 0xff)
handle -0, -Inf correctly
handle Content-Range header.
handle SignatureAndHashAlgorithm
handle case where type is missing
handle external functions and ELF section symbols
handle is accessed atomically on Windows
handle reference to __IMPORT/__pointers.
handle the cases in order
handleRenegotiation processes a HelloRequest handshake message.
handleTLSProtocol09 implements the HTTP/0.9 protocol over TLS, for the TestNextProtoUpgrade test.
handled by ParseMultipartForm (which is calling us, or should be) TODO(bradfitz): there are too many possible orders to call too many functions here.
handled directly during cgen
handled directly during gen.
handler accessed handlerHeader via Header
handler is the main implementation of Handler.
handler to invoke, http.DefaultServeMux if nil
handler's Request.Trailer
handlerHeader is copied into cw.header at WriteHeader time, and privately mutated thereafter.
handlerHeader is the Header that Handlers get access to, which may be retained and mutated even after WriteHeader.
handlerPanicRST is the message sent from handler goroutines when the handler panics.
handoffp must start an M in any situation where findrunnable would return a G to run on _p_.
handshake data waiting to be read bytesSent counts the number of bytes of application data that have been sent.
handshakes counts the number of handshakes performed on the connection so far.
hang forever, until killed
happens before typecheck
happens for some external ARM relocs
hard case: c is backslash
hard tabs - do not discard column
hard with instrumented code
harden against HTTP request smuggling.
has 1 empty fixed-huffman block
has 1 non-empty fixed huffman block
has 1 non-empty fixed huffman block but corrupt checksum
has 1 non-empty fixed huffman block but corrupt size
has 1 non-empty fixed huffman block not enough header
has 1 non-empty fixed huffman block then garbage
has Point with X, Y, used
has Point with Z, used
has a fixed huffman block with some length-distance pairs
has dynamic huffman blocks
has entry point, Version5 EABI
has entry point, Version5 EABI, hard-float ABI
has escaped operators and real operators
has meta but no operator
hasAsm reports whether the AES-128, AES-192 and AES-256 cipher message (KM) function codes are supported.
hasBasicType reports whether x's type is a types.Basic with the given kind.
hasBreak reports if s is or contains a break statement referring to the label-ed statement or implicit-ly the closest outer breakable statement.
hasDotSuffix reports whether s ends in "."+suffix.
hasExportedName reports whether list contains any exported names.
hasFilePathPrefix reports whether the filesystem path s begins with the elements in prefix.
hasFuncLiteral reports the existence and position of the first func literal in the node, if any.
hasFunction reports if a function name exists in the Tree's maps.
hasGoFiles reports whether dir contains any files with names ending in .go.
hasHMUL64 reports whether the architecture supports 64-bit signed and unsigned high multiplication (OHMUL).
hasInitializer reports whether the declared object has an initialization expression or function body.
hasMeta reports whether path contains any of the magic characters recognized by Match.
hasMethod reports whether the type contains a method with the given name.
hasNil reports whether a type includes the nil value.
hasNonWhitespace reports whether s (assumed to be ASCII) contains at least one byte of non-whitespace.
hasPathPrefix reports whether the path s begins with the elements in prefix.
hasPointer is used by needsPointerCheck.
hasPointers reports whether the given object has any pointers.
hasPort reports whether host contains a port number.
hasPrefix reports whether any of the space-separated words in the text s begins with any of the given prefixes.
hasRROTC64 reports whether the architecture supports 64-bit rotate through carry instructions (ORROTC).
hasSideEffects reports whether evaluation of e has side effects.
hasSideEffects returns whether the expression x has any side effects.
hasSignatureAndHash indicates whether this message includes a list of signature and hash functions.
hasSubdir calls ctxt.HasSubdir (if not nil) or else uses the local file system to answer the question.
hasSubdir reports whether dir is a subdirectory of (possibly multiple levels below) root.
hasToken reports whether token appears with v, ASCII case-insensitive, with space or comma boundaries.
hasUnsafePointer returns whether the Go type t uses unsafe.Pointer.
hasVectorFacility reports whether the machine has the z/Architecture vector facility installed and enabled.
hasemptycvars returns true iff closure func_ has an empty list of captured vars.
hash of a type switch
hash should not depend on alignment.
hash should not depend on values outside key.
hash4 returns a hash representation of the first 4 bytes of the supplied slice.
hashForClientCertificate returns a digest, hash function, and TLS 1.2 hash id suitable for signing by a TLS client certificate.
hashForServerKeyExchange hashes the given slices and returns their digest and the identifier of the hash function used.
hashMatch is always overwritten when used.
hashMatch must be able to contain hashes for the maximum match length.
hashStr returns the hash and the appropriate multiplicative factor for use in Rabin-Karp algorithm.
hashStrRev returns the hash of the reverse of sep and the appropriate multiplicative factor for use in Rabin-Karp algorithm.
hashToInt converts a hash value to an integer.
hashed is the result of hashing the input message using the given hash function and sig is the signature.
haspointers updates Type.Haspointers as a side effect, so exercise this function on all inputs so that reflect.DeepEqual doesn't produce false positives.
have 1 bit in bottom of dist, need nb more.
have a port but match
have already complained about n being undefined
have both meta package and a non-meta one
have reports whether the remaining tokens (including the current one) contain the specified token.
have symbol turn MOVL of GOT entry into LEAL of symbol itself
have symbol turn MOVQ of GOT entry into LEAQ of symbol itself
have to allocate heap copy for escaped variables.
have to guess sizes from next symbol.
haveSSE41/haveSSE42/haveCLMUL are defined in crc_amd64.s and use CPUID to test for SSE 4.1, 4.2 and CLMUL support.
haveSSE42 is defined in crc_amd64p32.s and uses CPUID to test for SSE 4.2 support.
having split any large blocks now process the remaining (small) block iteratively
hcode is a huffman code with a bit code and bit length.
head and tail are different but adjacent, so do this in one call.
head returns the next item that would be removed by shift.
header for the empty record
header for the first record
header for the second
header is written out to w.conn.buf below.
header parses a combination of if, switch, and for statement headers:
header, palette and trailer are parts of a valid 2x1 GIF image.
headerFields, bg, aspect (10)
headerFileInfo implements os.FileInfo.
headerValuesContainsToken reports whether any string in values contains the provided token, ASCII case-insensitively.
header_length (*), filled in at end.
heap address, register-based, int16 displacement
heap address, register-based, int32 displacement
heap index Timer wakes up at when, and then at when+period, ...
heapBits provides access to the bitmap bits for a single heap word.
heapBitsForAddr returns the heapBits for the address addr.
heapBitsForObject returns the base address for the heap object containing the address p, the heapBits for base, the object's span, and of the index of the object in s.
heapBitsForSpan returns the heapBits for the span base address base.
heapBitsSetType requires that allocSize is a multiple of 4 words, so that the relevant bitmap bytes are not shared with surrounding objects and need not be accessed with atomic instructions.
heapBitsSetTypeGCProg implements heapBitsSetType using a GC program.
heapBitsSetTypeNoScan marks x as noscan by setting the first word of x in the heap bitmap to scalar/dead.
heapGoal is the goal memstats.heap_live for when this cycle ends.
heap_marked is the number of bytes marked by the previous GC.
heap_reachable is an estimate of the reachable heap bytes at the end of the previous GC.
heap_scan and heap_live were updated.
heap_scan is the number of bytes of "scannable" heap.
heapminimum is the minimum heap size at which to trigger GC.
heapmoves generates code to handle migrating heap-escaped parameters between the stack and the heap.
heaps should already be clear
heapz profiles are a sampling of the memory allocations requests in a program.
heapz v2 profiles rely on a poisson process to determine which samples to collect, based on the desired average collection rate R.
held exclusively during close, for read otherwise.
held if there are pending writers
hello runs a hello exchange if needed.
hello world, the web server
helloworld.go is package main
helo sends the HELO greeting to the server.
help implements the 'help' command.
helper starts in jsCtxRegexp and ends in jsCtxDivOp.
helpers for shape errors
helps for eyeballing linearity
here, the assembly has failed.
hexByte returns the next hex-encoded (two-character) byte from the input.
hexCases generates the cases written in hexadecimal in the encoded string.
hexDigit returns the value of the hexadecimal digit.
hexString returns the space-delimited hexpair-encoded string.
hexadecimal digits are 4 bits each
hexadecimal mantissa and exponent
hget http://codereview.appspot.com/rss/mine/rsc
hi is the code implied by the next code emission.
hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres
hide bytes.Buffer's WriteString
hide the specific symbols.
high (kernel) addresses or else malformed.
high 16 bits of symbol value
high dummy three bits: 100
high dummy three bits: 101 Extra byte:
high dummy three bits: 111
high mul: AMUL/AIMUL for unsigned/signed (OMUL uses AIMUL for both).
higher score comes later.
highest value for second byte.
hijackedv is whether this connection has been hijacked by a Handler with the Hijacker interface.
hintCert contains a possible authority certificate that was rejected because of the error in hintErr.
hintErr contains an error that may be helpful in determining why an authority wasn't found.
histSize reports the total amount of historical data in the dictionary.
histogram accumulates a histogram of b in h.
hit an error, scanner.err.
hl and hd are the Huffman states for the lit/length values and the distance values, respectively.
holding an AfterFunc to close it
holding long error message compare lengths
holds current server configuration Create initial config value and store into config.
hook to simulate broken connections
hook to simulate connection failures
hopefully this will work for SameFile
host Set-Cookie header was received from
host may be a host name, an IPv4 or an IPv6 address.
hostArchive reads an archive file holding host objects and links in required objects.
hostLookupCgo means defer to cgo.
hostLookupOrder determines which strategy to use to resolve hostname.
hostLookupOrder specifies the order of LookupHost lookup strategies.
hostPortHandler writes back the client's "host:port".
hostlinkArchArgs returns arguments to pass to the external linker based on the architecture.
hostname is used by PlainAuth to validate the TLS certificate.
hostname of the IP address addr suitable for rDNS (PTR) record lookup or an error if it fails to parse the IP address.
hostnameInSNI converts name into an approriate hostname for SNI.
hostobjCopy creates a copy of the object files in hostobj in a temporary directory.
hosts contains known host entries.
how long to sleep on accept failure
how many bits key has
how many cycles in succession we had not wokeup somebody
how many digits are left to write.
how many pointer indirections to reach the value in the struct
how often to log status to stdout
how often to poll each URL
htabs - do not discard column
html Returns the escaped HTML equivalent of the textual representation of its arguments.
html writer, for debugging
htmlEscaper escapes for inclusion in HTML text.
htmlGen generates an HTML coverage report with the provided filename, source code, and tokens, and writes it to the given Writer.
htmlNameFilter accepts valid parts of an HTML attribute or tag name or a known-safe HTML attribute.
htmlNospaceEscaper escapes for inclusion in unquoted attribute values.
htmlNospaceReplacementTable contains the runes that need to be escaped inside an unquoted attribute value.
htmlOutput reads the profile data from profile and generates an HTML coverage report, writing it to outfile.
htmlReplacementTable contains the runes that need to be escaped inside a quoted attribute value or in a text node.
htmlReplacer returns s with runes replaced according to replacementTable and when badRunes is true, certain bad runes are allowed through unescaped.
http.Handle("/", http.FileServer(http.Dir("/tmp")))
http.HandleFunc("/save/", saveHandler)
http2 client preface:
http2 doesn't do a header flush so buffers all 11 bytes and then adds its own Content-Length.
http2 further says: "Similarly, HTTP/2 allows header field values that are not valid.
http2 test: TestServer_Response_Automatic100Continue
http2's count is in a slightly different unit and includes 32 bytes per pair.
http://blogs.technet.com/b/pki/archive/2010/09/30/sha2-and-windows.aspx
http://code.google.com/p/double-conversion/
http://code.google.com/p/inferno-os/source/browse/libkern/vlrt-arm.c
http://code.google.com/p/inferno-os/source/browse/utils/5c/5.out.h
http://code.google.com/p/inferno-os/source/browse/utils/5c/list.c
http://code.google.com/p/inferno-os/source/browse/utils/5c/peep.c
http://code.google.com/p/inferno-os/source/browse/utils/5c/reg.c
http://code.google.com/p/inferno-os/source/browse/utils/5c/swt.c
http://code.google.com/p/inferno-os/source/browse/utils/5c/txt.c
http://code.google.com/p/inferno-os/source/browse/utils/5l/asm.c
http://code.google.com/p/inferno-os/source/browse/utils/5l/obj.c
http://code.google.com/p/inferno-os/source/browse/utils/5l/span.c
http://code.google.com/p/inferno-os/source/browse/utils/6c/6.out.h
http://code.google.com/p/inferno-os/source/browse/utils/6c/gc.h
http://code.google.com/p/inferno-os/source/browse/utils/6c/list.c
http://code.google.com/p/inferno-os/source/browse/utils/6c/peep.c
http://code.google.com/p/inferno-os/source/browse/utils/6c/reg.c
http://code.google.com/p/inferno-os/source/browse/utils/6c/txt.c
http://code.google.com/p/inferno-os/source/browse/utils/6l/asm.c
http://code.google.com/p/inferno-os/source/browse/utils/6l/l.h
http://code.google.com/p/inferno-os/source/browse/utils/6l/obj.c
http://code.google.com/p/inferno-os/source/browse/utils/6l/obj.c http://code.google.com/p/inferno-os/source/browse/utils/6l/span.c
http://code.google.com/p/inferno-os/source/browse/utils/6l/pass.c
http://code.google.com/p/inferno-os/source/browse/utils/6l/span.c
http://code.google.com/p/inferno-os/source/browse/utils/8c/txt.c
http://code.google.com/p/inferno-os/source/browse/utils/8l/asm.c
http://code.google.com/p/inferno-os/source/browse/utils/8l/l.h
http://code.google.com/p/inferno-os/source/browse/utils/8l/obj.c
http://code.google.com/p/inferno-os/source/browse/utils/include/ar.h
http://en.wikipedia.org/wiki/Peano_axioms This program demonstrates that Go's automatic stack management can handle heavily recursive computations.
http://en.wikipedia.org/wiki/Peg_solitaire
http://goog-perftools.sourceforge.net/doc/tcmalloc.html The main allocator works in runs of pages.
http://networkpx.blogspot.com/2009/09/about-lcdyldinfoonly-command.html has details about what we're avoiding.
http://primes.utm.edu/lists/small/small3.html
http://standards.iso.org/ittf/PubliclyAvailableStandards/ISO_IEC_13818-4_2004_Conformance_Testing/Video/verifier/mpeg2decode_960109.tar.gz
http://support.microsoft.com/kb/263823
http://www.csrc.nist.gov/publications/fips/fips197/fips-197.pdf http://csrc.nist.gov/archive/aes/rijndael/Rijndael-ammended.pdf
http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man5/resolv.conf.5 "If the lookup keyword is not used in the system's resolv.conf file then the assumed order is 'bind file'"
http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html
httpBlock serves blocking pprof-like profile (time spent blocked on synchronization primitives).
httpClient is the default HTTP client, but a variable so it can be changed by tests, without modifying http.DefaultClient.
httpGET returns the data from an HTTP GET request for the given URL.
httpGoroutine serves list of goroutines in a particular group.
httpGoroutines serves list of goroutine groups.
httpIO serves IO pprof-like profile (time spent in IO wait).
httpJsonTrace serves json trace, requested from within templTrace HTML.
httpMain serves the starting page.
httpRange specifies the byte range to be sent to the client.
httpSched serves scheduler latency pprof-like profile (time between a goroutine become runnable and actually scheduled for execution).
httpSyscall serves syscall pprof-like profile (time spent blocked in syscalls).
httpTraceViewerHTML serves static part of trace-viewer.
https to http doesn't send a referer:
https://android.googlesource.com/platform/system/core/+/master/liblog/logd_write.c
https://blog.golang.org/2011/06/profiling-go-programs.html
https://code.google.com/p/ken-cc/source/browse/
https://code.google.com/p/ken-cc/source/browse/src/cmd/7c/7.out.h
https://code.google.com/p/smhasher/ This code is a port of some of the Smhasher tests to Go.
https://github.com/felixge/node-http-perf/blob/master/fixtures/get.http
https://github.com/golang/go/issues/13905
https://golang.org/issue/11292
https://golang.org/issue/12098
https://golang.org/issue/12782
https://golang.org/issue/12996
https://golang.org/issue/15125
https://golang.org/issue/158
https://golang.org/issue/201
https://golang.org/issue/2601
https://golang.org/issue/2603
https://golang.org/issue/2603 Skip this additional part of the test for now.
https://golang.org/issue/2718
https://golang.org/issue/2795
https://golang.org/issue/3001
https://golang.org/issue/3119
https://golang.org/issue/3351
https://golang.org/issue/3392
https://golang.org/issue/3486
https://golang.org/issue/3546
https://golang.org/issue/370
https://golang.org/issue/3955
https://golang.org/issue/4126
https://golang.org/issue/4303
https://golang.org/issue/4365
https://golang.org/issue/4477
https://golang.org/issue/589
https://golang.org/issue/5955 Note that this does not test the "request too large" exit path from the http server.
https://golang.org/issue/5980
https://golang.org/issue/5982
https://golang.org/issue/638
https://golang.org/issue/662
https://golang.org/issue/6836
https://golang.org/issue/6849.
https://golang.org/issue/7118
https://golang.org/issue/749
https://golang.org/issue/799
https://golang.org/issue/800
https://golang.org/issue/806 triggered out of registers on 8g
https://golang.org/issue/807
https://golang.org/issue/808
https://golang.org/issue/843
https://golang.org/issue/846
https://golang.org/issue/88
https://golang.org/issue/91
https://golang.org/issue/915
https://golang.org/issue/920
https://golang.org/issue/9554
https://golang.org/issue/990
https://golang.org/issues/11476
https://golang.org/s/go11func.)
https://www.cyberz.org/projects/SVGPan/SVGPan.js
httpsOrHTTP returns the body of either the importPath's https resource or, if unavailable, the http resource.
huffOffset is a static offset encoder used for huffman only encoding.
huffman is a Huffman decoder, specified in section C.
huffmanCode contains a symbol, its code and code length.
huffmanCodes is used to provide an interface for sorting.
huffmanDecode decodes v to buf.
huffmanLUT is a compiled look-up table representation of a huffmanSpec.
huffmanSpec specifies a Huffman encoding.
huffmanSymbolLengthPair contains a symbol and its code length.
huffmanSymbolLengthPair is used to provide an interface for sorting.
i is in register n1, extend to 32 bits.
i is shadowed here, so its value should be unchanged.
i isn't one of the types above
i,j,k may be nil, in which case they are set to their default value.
i.(T) TODO(rsc): The Isfat is for consistency with componentgen and orderexpr.
i.M is a wrapper, and i.M panics.
i.e., quickSort(data, a, mlo)
i.e., quickSort(data, mhi, b)
i2f is used in rules for converting from an AuxInt to a float.
i2f32 is used in rules for converting from an AuxInt to a float32.
iOS does not support unix, unixgram.
icast casts a signed int to the size in s
id identifies a package, usually by a canonical package path like "encoding/json" but possibly by a non-canonical import path like "./json".
idAlloc provides an allocator for unique integers.
idct performs a 2-D Inverse Discrete Cosine Transformation.
ideal const mixes with anything but otherwise must match.
ideal mixed with non-ideal
idealConstant is called to return the value of a number in a context where we don't know the type.
idealkind returns a constant kind like consttype but for an arbitrary "ideal" (untyped constant) expression.
ident is a package name
ident type-checks identifier e and initializes x with the value or type of e.
identCount returns the number of identifiers found in f.
identical runes, different targets
identical runes, identical targets
identifiers beginning with non-ASCII digits were incorrectly accepted.
identifiers must be declared elsewhere
identify run of constants
idents is an iterator that returns all idents in f via the result channel.
idiomaticRedecl reports whether this declaration spec can be ignored for the purposes of shadowing, that is, that any redeclarations it contains are deliberate.
idiomaticShortRedecl reports whether this short declaration can be ignored for the purposes of shadowing, that is, that any redeclarations it contains are deliberate.
idle m's waiting for work
idleMarkTime is the nanoseconds spent in idle marking during this cycle.
ieeeCLMUL is defined in crc_amd64.s and uses the PCLMULQDQ instruction as well as SSE 4.1.
ieeeTable8 is the slicing8Table for IEEE
iet returns 'T' if t is a concrete type, 'I' if t is an interface type, and 'E' if t is an empty interface type.
if *np is a call, and fn is a function with an inlinable body, substitute *np with an OINLCALL.
if 1, run sched.safePointFn at next safe point
if Ldate or Ltime is set, use UTC rather than the local time zone
if ModR/M is memory reference, Mem form
if TabIndent is set, use tabs to pad leading empty cells
if a goroutine uses notetsleep to wake up early, it must wait to call noteclear until it can be sure that no other goroutine is calling notewakeup.
if a load/store instruction takes more than 1 word to implement, then we need to separate the instruction into two: 1.
if a profiling signal came in while we had prof locked, it would deadlock.
if any block in this loop or any loop it contains is a BlockCall or BlockDefer
if any cases don't terminate, the select isn't okay anymore
if any procedure is large enough to generate a large SBRA branch, then generate extra passes putting branches around jmps to fix.
if at least 2 points are equal to pivot, assume skewed distribution
if both are addressable, move
if both are not addressable, use a temporary.
if both arguments are constants, the result is a constant
if bss sym defined multiple times, take type from any one def
if buf is nil, one is allocated.
if decodingNull is true, indirect stops at the last pointer so it can be set to nil.
if di is "full", add it to the result
if element type had no pointers
if error was declared locally, don't treat it as exported field anymore
if exec is non-zero, marks the file as executable.
if exporting, DCLCONST should just be removed as its usage has already been replaced with literals
if f is not in the set, add it
if filter isn't empty, only cookies of that name are returned
if func param, need separate temporary to hold heap pointer.
if function bodies are not checked, packages' uses are likely missing - don't check
if high bits are set, zero value.
if it contains pointers, needs to be zeroed on function entry
if it doesn't output any message, it means the config argument is correct, but the config value itself doesn't exist
if it encounters an Unmarshaler, indirect stops and returns that.
if it has GC work, start it straight away
if it has a dfnum, we've already visited it
if it has local work, start it straight away
if its a byte instruction that has unaddressable registers, try to exchange registers and reissue the instruction with the operands renamed.
if label is defined, emit jump to it.
if loop is not nil Clear any final uses.
if n is constant, rewrite as OLITERAL node.
if n is sudoaddable generate addr and move
if n still depends on other nodes, we have a cycle
if name involves a fn call precompute the address of the fn
if name is empty, filename is unknown.
if necessary, reallocate allocate double what's needed, for future growth.
if nil, cancel the operation
if nil, the system roots are used
if no default or some case doesn't terminate, switch is no longer okay
if non-nil, *d's pointed value must be equal to *wantptr
if non-nil, a free initialWindowSize buffer for getRequestBodyBuf Owned by the writeFrameAsync goroutine:
if non-nil, func to call when EOF is Read
if non-nil, overrides dialTCP.
if non-nil, ptr that is to be set/cleared in RecPtr/ClearPtr state
if non-nil, send value to it on close
if non-nil, statement to Close on close
if non-nil, the GoAwayFrame we received
if non-nil, the bytes.Buffer to append written data to
if non-nil, this error is returned for all operations
if non-nil, where to read the data descriptor
if non-nil, which keys of h to write.
if non-zero, cgoCallers in use temporarily
if on, error is fatal
if pi starts sorted group
if pi starts unsorted group
if pointer receiver but non-pointer t and this is not an embedded pointer inside a struct, method does not apply.
if pointer receiver in method, the method does not exist for value types.
if pool is not multiple of 16 bytes, add an alignment marker
if possible, since we know arg is 0, use 0(arg), which will be shorter to encode than plain 0.
if possible, truncate file when opened.
if precision was the shortest possible, use precision 6 for this decision.
if prefix and next are non-zero, there is one child in next.
if present, rhs must be a receive operation
if range of type cannot exceed static array bound, disable bounds check.
if reader closed, error to give writes
if regexp is a literal just use Lookup and convert its result into match pairs
if result is not addressable directly but n is, compute its address and then store via the address.
if selected, remove selections from all of them otherwise, attempt to add
if set with ScanComments, comments become white space
if set, a linebreak implies a semicolon
if set, error is "soft"
if set, package contains a dot import
if set, parse tracing can be enabled with -x parse_import parses the export data of a package that is imported.
if set, print debugging information about export data
if set, record out.Line for the next token in *linePtr The list of all source comments, in order of appearance.
if set, the parser is parsing a rhs expression Ordinary identifier scopes
if set, the variable is an anonymous struct field, and name is the type name
if set, there was a pointer indirection on the path to this field
if set, typ appears multiple times at this depth
if set, type "error" was declared locally
if set, use new export format
if sgp participates in a select and is already signaled, ignore it
if signal.Notify doesn't take it, exit loudly
if signal.Notify doesn't take it, exit quietly
if so, use the name we've already defined.
if table is non-zero, it defines all the children.
if that is appropriate for their element types.)
if the Transport's DisableKeepAlives is set, all requests should send Connection: close.
if the argument is a constant, the result is a constant
if the array ends with a sorted group
if the closing ")" is on a separate line from the last parameter, print an additional "," and line break
if the evaluation of *np would be affected by the assignments in all up to but not including the ith assignment, copy into a temporary during *early and replace *np with that temp.
if the input ended in newlines, the input must tokenize the same with or without those newlines
if the instruction used more than 4 bytes, then it must have used a very large offset to update R13, so we need to additionally mask R13.
if the key is of interface type, the type is also significant when checking for duplicates
if the mantissa is zero, the number is zero - stop now
if the name matches a generic op, returns "Op" plus the specified name.
if the node has associated documentation, include that commentgroup in the range (the comment list is sorted in the order of the comment appearance in the source code)
if the object doesn't exist yet, create and insert it
if the signal is from the kernel, panic
if the signal isn't explicitly requested, don't monitor it
if the string is an invalid path, return whatever we have
if the target is R0 then this is a required NOP
if the test is buggy, we'll race on this variable.
if the variable has a type (ntype) then typechecking will not look at defn, so it is okay (and desirable, so that the conversion below happens).
if there are comments before the next item, intersperse them
if there are no aliases, the canonical name is the input name
if there are no comments, use node comments
if there are no type definitions going on, it's safe to try to resolve the method types for the interfaces we just read.
if there are pending gotos, resolve them all to the current pc.
if there is a comment in the declaration, it is not considered empty
if there's a background worker, make it runnable and put it on the global queue so it can clean itself up
if they overlap, disable both
if this assignment is the definition of a var on the left side, fill in the var's type.
if this fails, we will die later
if this is a tmpname (PAUTO), it was tagged by tmpname as not escaping.
if this is not the last unindent, apply it as it is (likely) belonging to the last construct (e.g., a multi-line expression list) and is not part of closing a block
if this is too slow, could sort these first and then do one loop.
if this not the first argument for the block, then we need to remove the corresponding elements from the block predecessors and phi args
if traceback is on a systemstack, resume trace at g that called into it
if true then the name constraints are marked critical.
if true then the next two fields are valid.
if true, *d must be *int64(nil)
if true, need to indirect before calling.
if true, struct, union, class is declared but not defined
if true, then this is not the first use of this block
if utyp is invalid, an error was reported before
if valid, identifiers are looked up as if at position pos (used by Eval) debugging
if wb is true, need to emit write barriers.
if we are copying forward on the stack and the src and dst overlap, then reverse direction
if we don't do instruction scheduling, simply add NOP after each branch instruction.
if we don't have a proper string, be conservative and return whatever we have
if we had a list of identifiers, it must be followed by a type
if we have a valid index, check for duplicate entries
if we just replaced arg in f(arg()) or return arg with an inlined call and arg returns multiple values, glue as list
if we need a line break, keep exactly one but remember if we dropped any formfeeds
if we read a very large, very long number, just be sure to move the decimal point by a lot (say, 100000).
if we return anything, r will be it.
if we're not on g0 or there's a no curg, then this is a regular call.
if we're the last chunk, make sure we exhausted the name
if we're the last chunk, make sure we've exhausted the name otherwise we'll give a false result even if we could still match using the star
if writer closed, error to give reads
if x is a parenthesized expression (p.X), update p.X
if zero, the current time is used KeyUsage specifies which Extended Key Usage values are acceptable.
if zero, this index is not a valid code point.
if-else chain missing final else is not okay, even if the conditions cover every possible case.
ifaceIndir reports whether t is stored indirectly in an interface value.
ifaceNumAsFloat64/ifaceNumAsNumber are used to test unmarshaling with and without UseNumber
ifaceType returns the value for the word containing the type.
igen will need an addressable node.
ignore - error reported before
ignore //go:binary-only-package comments in _test.go files
ignore //go:binary-only-package comments in non-Go sources
ignore BOM at file beginning
ignore any blanks before a comment
ignore any horizontal whitespace before line breaks
ignore argument tag (e.g. "noescape")
ignore automatically inserted semicolon
ignore compiler-specific import data complete interfaces
ignore div-0 case (not invertable)
ignore during relocsym
ignore empty statements (was issue 3466)
ignore entries added to grow table
ignore err from close, it makes sense to continue anyway
ignore error - we know it is getting killed
ignore error, if we are not allowed to access this key
ignore errors - they will be found later
ignore everything before first _
ignore file if it belongs to a different package (error has already been reported)
ignore files under -root
ignore first value by assigning to blank identifier
ignore frame for panic+recover matching
ignore ignores the next n bytes.
ignore indices leading to overlapping matches
ignore possible timeout errors
ignore pseudo-package that exists only for documentation
ignore race detection events
ignore skips over the pending input before this point.
ignore the new declaration
ignore these and try again
ignore trailing whitespace
ignore wasteful range request
ignore zone name, just offset
ignoreArray discards the data for an array value with no destination.
ignoreArrayHelper does the work for discarding arrays and slices.
ignoreGobDecoder discards the data for a GobDecoder value with no destination.
ignoreInterface discards the data for an interface value with no destination.
ignoreMap discards the data for a map value with no destination.
ignoreSingle discards the data for a top-level non-struct value with no destination.
ignoreSlice skips over the data for a slice value with no destination.
ignoreStruct discards the data for a struct with no destination.
ignoreTwoUints discards a uint value with no destination.
ignoreUint discards a uint value with no destination.
ignoreUint8Array skips over the data for a byte slice value with no destination.
ignored (receive only)
ignored - no idea what these mean
ignored because doesn't match Path
ignored because invalid
ignored by code generation, do not instrument.
ignoring block assignments used to cause "live at entry to f9: x" issue 7205
ignoring block returns used to cause "live at entry to f8: x, y".
ignoring errors, for errorKludge
illegal character, cause an error
illegal composite literals: parentheses not allowed around literal type
illegal octal int or float
illegal, replacement rune substituted
imag(complexT) floatT real(complexT) floatT convert or check untyped argument
image.reader (matching bufio.Reader)
imaginary component is 0
imethod represents a method on an interface type
imethods returns the methods of the interface type t, sorted by name.
immediate moves to memory have a 12-bit unsigned displacement
immediate read error (caller doesn't see rest of b)
immutable pointer to captured variable
immutable until Close
immutable within a request:
impatientInsecureHTTPClient is used in -insecure mode, when we're connecting to https servers that might not be there or might be using self-signed certificates.
implementation of new builtin
implemented as 2 pointers
implemented as pointer
implemented in ../runtime
implemented in package runtime
implemented in package runtime Readlink returns the destination of the named symbolic link.
implemented in package runtime, to add time header on playground
implemented in runtime
implemented in runtime MapOf returns the map type with the given key and element types.
implements float arithmetic
implements integer arithmetic Mpint represents an integer constant.
implements reports whether the type V implements the interface type T.
implementsInterface reports whether the type implements the gobEncoder/gobDecoder interface.
implicit interface conversion in assignment during return
implicit interface conversion in multi-assignment during return
implicit is still not
implicitly dereference a C variable
implicitly dereference a Go variable
implies Nowritebarrier
implies generated data executed exactly once and not subject to races.
import "go/internal/gccgoimporter"
import "go/internal/gcimporter"
import ( "archive/zip" "bytes" "io" "io/ioutil" "log" )
import ( "io" "net/http" "log" )
import ( "log" "net/http" )
import go/internal/gcimporter which imports go/types partially
import golang.org/x/crypto/md4
import golang.org/x/crypto/ripemd160
import golang.org/x/crypto/sha3
import into my name space
import line written in export data
import must succeed (test for issue at hand)
import path denoting this package
import path of package ("" if unknown)
import path of package in dir
import paths used by this package
import syntax from package header
import test file whether executed or not
import with given name
importDir is just an error-catching wrapper for build.ImportDir.
importPath returns the unquoted import path of s, or "" if the path is not properly quoted.
importPathToPrefix returns the prefix that will be used in the final symbol table for the given import path.
importPaths returns the import paths to use for the given command line.
importPathsNoDotExpansion returns the import paths to use for the given command line, but it does no ...
importSpec returns the import spec if f imports path, or nil otherwise.
importType returns the type denoted by the qualified identifier path.name, and adds the respective package to the imports map as a side effect.
import_package parses the header of an imported package as exported in textual format from another package.
important for building libraries: if there is an array.6 in the array.a library, want to find all of array.a, not just array.6.
important that this response has a body.
importconst declares symbol s as an imported constant with type t and value n.
imported functions and methods with inlinable bodies
imported functions may refer to unsafe as long as the package was marked safe during import (already checked).
imported package name (_test or _xtest)
imported via local path (./ or ../)
imports are handled individually
imports from GoFiles, CgoFiles
imports from TestGoFiles
imports from XTestGoFiles
imports from XTestGoFiles Unexported fields are not part of the public API.
imports reports whether f imports path.
importsym declares symbol s as an imported object representable by op.
importvar declares symbol s as an imported variable with type t.
impossible PC offset returns number of words that the fp instruction is occupying, 0 if next instruction isn't float.
impossible nodes: only appear in backend.
in 100-nanosecond intervals
in CPU ticks SetBlockProfileRate controls the fraction of goroutine blocking events that are reported in the blocking profile.
in T.field find missing fields that will give shortest unique addressing.
in a correct AST, package-level function names are all different - no need to check for conflicts
in a dot-import, the dot represents the package
in a mutually recursive group we lose track of the return values
in a normal goroutine
in a register, we'll use that source for the merge.
in all other cases, keep inspecting
in and out contains the nodes immediately reaching or reached by this nodes.
in asm_*.s go:noescape
in case 2*n wasn't enough
in case NumInput panics
in case any Reads come along
in case io.Copy stopped due to write error
in case n.Type is named.
in case not otherwise used
in case not otherwise used") Main rewrite routine is a switch on v.Op.
in case of early return Now we will do a bunch of things for which we verify stacks later.
in case of rerr or werr
in case offset is huge
in case test was run repeatedly
in case that hasn't been done yet
in case the tool wants to re-exec itself, e.g. cmd/dist
in checks that every point in f is in g.
in debug mode, report error
in escapes to heap (address of param taken and returned)
in memclr_*.s go:noescape
in memmove_*.s go:noescape
in order of appearance
in order of appearance position encoding
in package runtime Getuid returns the numeric user id of the caller.
in package runtime setenv_c and unsetenv_c are provided by the runtime but are no-ops if cgo isn't loaded.
in pollcache, protected by pollcache.lock The lock protects pollOpen, pollSetDeadline, pollUnblock and deadlineimpl operations.
in quotes, no special action
in runtime/cgo/gcc_darwin_arm.go
in sys_windows_386.s and sys_windows_amd64.s
in sys_windows_386.s and sys_windows_amd64.s:
in that case, check comparability of the concrete type.
in that case, do not call typecheck back, or it will cycle.
in the processed file within the first 20 lines, if any.
in the spirit of the built-in copy function for 1-dimensional slices, that also allowed a CopyFromRGBA method if needed.
in those situations, calling defercheckwidth() stops width calculations until resumecheckwidth() is called, at which point all the checkwidths that were deferred are executed.
in unquoted attr", "...
in which the evaluation of a is side-effect-free.
in-flight addConnIfNeede calls
inCategory returns a list of all the runes in the category.
inScript returns a list of all the runes in the script.
inSourceOrder implements the sort.Sort interface.
inc returns the level l + 1, representing the effect of an indirect (*) operation.
inc+ind can only be reached through the branch that enters the loop.
incCounter increments a four byte, big-endian counter.
incHi increments e.hi and checks for both overflow and running out of unused codes.
incSeq increments the sequence number.
include base indentation
include directories: look in source dir, then -I directories.
include frames for internal runtime functions.
include tells parser.ParseDir which files to include.
includeArgs returns the -I or -L directory list for access to the results of the list of actions.
include_directories  (empty)
includes extension and not exact file name match
includes receiver Run all argument assignments.
includes reg, op, etc
includes shallow copies of maps, but okay
includes the tag and length
includesNonTest indicates whether the vet is applied to non-test targets.
including negative, for historical reasons
incompleteBlockPEM contains ciphertext that is not a multiple of the block size.
incompletely recovered error ...
incorrect AST - print error message
incorrect number of slashes
incorrectly placed VARDEF annotations can cause missing liveness annotations.
increase for non-term or term
increase for productions     prodptr
increase for states          statemem
increase for working sets    wsets
incref adds a reference to fd.
incref adds a reference to mu.
increfAndClose sets the state of mu to closed.
increment count of blocks in this loop that have been processed
increment last choice sequence
increment locks to ensure that the goroutine is not preempted in the middle of sweep thus leaving the span in an inconsistent state for next GC
increment or decrement
increment, a constant
incremented for each new type we build
incremented on every scheduler call
incremented on every system call
incrementing counter in Add and locking wg's mutex
indent is the initial indentation for tracing output.
indentList reports whether an expression list would look better if it were indented wholesale (starting with the very first element, rather than starting at the first line break).
indentation for tracing
indentation used for tracing output Comments
indentation, leading and trailing space
index Returns the result of indexing its first argument by the following arguments.
index and index-1 are already inserted.
index at which type was previously seen
index can be used along with span information to generate the address of the object in the heap.
index checks an index expression for validity.
index for Type.Method
index into statemem to the descriptions of the states
index is used to hide the sort.Interface
index of Group 2 prefix in src and inst.Prefix
index of Group 3 prefix in src and inst.Prefix
index of Group 4 prefix in src and inst.Prefix
index of LOCK prefix in src and inst.Prefix
index of REP/REPN prefix in src and inst.Prefix
index of beginning of 'in' arguments
index of first defined token
index of first instruction
index of function with inlineable body
index of last expression that was followed by a linebreak
index of lowest stack barrier not hit
index of start instruction
index of start of PC-relative address in instruction encoding
index returns an ast.BasicLit representing the number of counters present.
index returns the result of indexing its first argument by the following arguments.
index sequence for Type.FieldByIndex
index to the stored goto table temporary vector, indexable by states, terms, or ntokens
index: the offset of the first zero byte.
indexShortStr returns the index of the first instance of c in s, or -1 if c is not present in s.
indexTagEnd finds the index of a special tag end in a case insensitive way, or returns -1
indexTokens indexes a slice of tokens, and updates literalFreq and offsetFreq, and generates literalEncoding and offsetEncoding.
indexes bz2.buf, the output buffer.
indexlit implements typechecking of untyped values as array/slice indexes.
indicate binary format
indicate blank identifier
indicate column break
indicate non-blank identifier
indicate section break
indicate textual format
indices into Symtab.Syms
indirect off a register used for storing/loading arguments/returns to/from callees
indirect operations via larger selects
indirect operations via select
indirect returns the item at the end of indirection, and a bool to indicate if it's nil.
indirect returns the value, after dereferencing as many times as necessary to reach the base type (or nil).
indirect table for .got
indirect table for .plt
indirect through enginePtr to delay evaluation for recursive structs
indirect through enginePtr to delay evaluation for recursive structs.
indirect through info to delay evaluation for recursive structs
indirect walks down v allocating pointers as needed, until it gets to a non-pointer.
indirect, mutable word - make a copy
indirectToJSONMarshaler returns the value, after dereferencing as many times as necessary to reach the base type (or nil) or an implementation of json.Marshal.
indirectToStringerOrError returns the value, after dereferencing as many times as necessary to reach the base type (or nil) or an implementation of fmt.Stringer or error,
indirections to a large receiver.
indirections to the receiver.
individual assignments
induction, and maximum
inexe is the path to the executable with no DWARF.
infiniteReader satisfies Read requests as if the contents of buf loop indefinitely.
information about the current arg
informational relocation - no work to do
inheap reports whether b is a pointer into a (potentially dead) heap object.
inhibit inlining of their argument
init expression, or nil
init exprs "inherited"
init functions must have a body
init guarantees that t has a valid common structure.
init initializes conf and is only called via conf.initOnce.
init initializes dictDecoder to have a sliding window dictionary of the given size.
init initializes r to read package p from f.
init marks all initial symbols as reachable.
init() functions cannot be referred to and there may be more than one - don't put them in the pkgScope
init1 walks the AST starting at n, and accumulates in out the list of definitions needing init code in dependency order.
initCheckmarkSpan initializes a span for being checkmarked.
initFileMap initializes the map from file name to file number.
initFiles initializes the files-specific portion of checker.
initGenType is a bitmap indicating the types of generation that will occur for a static value.
initNPNRequest is an HTTP handler that initializes certain uninitialized fields in its *Request.
initOrder computes the Info.InitOrder for package variables.
initSpan initializes the heap bitmap for a span.
initUniverse initializes the universe block.
initfix computes initialization order for a list l of top-level declarations and outputs the corresponding list of statements to include in the init() function body.
initial '/' already consumed
initial (trivial) permutation
initial length of fileEntries Current line number program state machine registers
initial length, must be multiple of pointer size
initial scope capacity
initial sorting by first byte of suffix
initial values for the standard logger
initialComments returns the prefix of content containing only whitespace and line comments.
initialHeapLive is the value of memstats.heap_live at the beginning of this GC cycle.
initialize all variables
initialize and read productions
initialize cached result
initialize each to a different value
initialize expression/key size: a zero value indicates expr/key doesn't fit on a single line
initialize ggreed table
initialize lazily to be sure that all elements have been initialized before
initialize lhs variable
initialize of not completely specified
initialize one character look-ahead
initialize p.comments lazily
initialize source buffer (the first call to next() will fill it by calling src.Read)
initialize source position
initialize the group lookup table this becomes the inverse of the suffix array when all groups are sorted
initialize to a non-zero value so that issues with parsing 0 are detected
initialize token text buffer (required for first call to next()).
initialize with vsyscall fallbacks
initialized elsewhere
initialized in tracebackinit
initialized lazily insert attempts to insert an object obj into objset s.
initializer already emitted, if any
initializers must match
initializing assignment
initially fill the sets
initlist contains a cycle of identifiers referring to each other.
inlined, p.i.2 moved to heap
inlnode recurses over the tree to find inlineable calls, which will be turned into OINLCALLs by mkinlcall.
inner func is referring to var in outer func.
inner loop breaks this one every time
innermost header reachable from this block IF any successor s of b is in a loop headed by h AND h dominates b THEN b is in the loop headed by h.
innermost panic - offset known to liblink
inplace MUST be set to false if the slice can be SSA'd.
input - literal divisor
input abstracts different representations of the input text.
input args need no code
input bits, at top of b
input for both - width
input token name, slop for runes and 0
input, results rounded to prec bits
inputBytes scans a byte slice.
inputReader scans a RuneReader.
inputString scans a string.
insane number of indirections
insert a semicolon before next newline public state - ok to modify
insert code to contain ambiguously live variables so that garbage collector only sees initialized values when it looks for pointers.
insert code to zero ambiguously live variables so that the garbage collector only sees initialized values when it looks for pointers.
insert function can be used to update the data without further synchronization
insert implicit * if needed for fixed array
insert inserts e after at, increments l.len, and returns e.
insert n into reg slot of p
insert new temporaries from order at head of outer list.
insert records a new label declaration for the current block.
insert type equality check into each case block
inside escape - terminate it even if incomplete
inside text bracketed by tabwriter.Escapes
inst.Arg is the match.
inst.Out is the match - non-greedy
instPrefix returns an Inst describing just one prefix byte.
install error handler
install is the action for installing a single package or executable.
install target would be subdir of GOBIN
installed file for this package (may be executable)
installed maps from a dir name (as given to install) to a chan closed when the dir's package is installed.
instead we emit the things that the body needs and each use must redo the inlining.
instead, MOV into register first.
instruction buffer for x86
instruction class, spaces
instruction format variations
instruction scheduling
instruction set, spaces
instruction,  From,   Reg,    From3,  To, type, param
insure tmp variables have uniq names
int access(const char *, int) go:noescape
int connect(int, const struct sockaddr*, socklen_t)
int determines number of callback parameters
int is a signed integer type that is at least 32 bits in size.
int returns the signed int at the input point, as an int (not int64).
int socket(int, int, int)
int128s are in SSE registers
int16 is the set of all signed 16-bit integers.
int32 alias, but has name "rune"
int32 is the set of all signed 32-bit integers.
int64 decodes and returns the next integer, which must be present.
int64 division is lowered into _divv() call on 386, which does not fit into nosplit functions.
int64 is a subset type, but not int32
int64 is the set of all signed 64-bit integers.
int64 to smaller integers
int8 is the set of all signed 8-bit integers.
intDataSize returns the size of the data required to represent the data when encoded.
intFromArg gets the argNumth element of a.
intLiteral returns an ast.BasicLit representing the integer value.
intSize is either 32 or 64.
integer (e is a hex digit)
integer copy and truncate
integer divide by zero in golang.org sandbox 0 on windows/amd64
integer divide by zero in golang.org sandbox crash on windows/amd64
integer formatting should not alter padding for other elements.
integer part of x/(Pi/4), as float
integer part of x/(Pi/4), as float map zeros to origin
integer part of x/(Pi/4), as integer for tests on the phase angle
integer up-conversions
integer, padded with zeros as needed
integer, padded with zeros as needed.
integer, same width, same sign
integers before, after decimal point
intentionally write the same LDFLAGS differently to test correct handling of LDFLAGS.
interactive displays a prompt and reads commands for profile manipulation/visualization.
interesting because it's a non-constant but ideal value and we used to incorrectly attach a constant Val to the Node.
interface TODO(gri) fix this
interface belongs to a point-to-point link
interface comparisons (issue 7207)
interface conversion causes nodes to be put on init list
interface conversions
interface index to its name
interface information is listed like:
interface is a loopback interface
interface method declarations have no "func" keyword
interface name to its index
interface supports broadcast access capability
interface supports multicast access capability
interface table is first word of interface value
interface to back end
interface type assertions  x.(T)
interface used to hold *gc.Node.
interfaceDecode decodes the next interface value from the stream and returns it.
interfaceEncode encodes the interface value into the encoder.
interfaceEqual protects against panics from doing equality tests on two interfaces with non-comparable underlying types.
interfaceFor returns the AST interface denoted by obj, or nil.
interfaceMulticastAddrTable returns addresses for a specific interface.
interfaceType represents an interface type.
interfaces don't have associated methods
interfaces involving the two
interlaceScan defines the ordering for a pass of the interlace algorithm.
interlaceScan defines the placement and size of a pass for Adam7 interlacing.
interlacing defines Adam7 interlacing, with 7 passes of reduced images.
interlacing represents the set of scans in an interlaced GIF image.
interlock with Close below
intermediary representation of an inlined call.
internal bucket structure
internal compiler error (6g and gccgo)
internal compiler error even though assignment compatible
internal recv, possibly non-blocking (nb).
internal send, possibly non-blocking.
internal struct type representing a hash bucket
internal struct type representing hash iterator state
internal struct type representing the Hmap (map header object)
internal type representing a hash bucket
internal type representing a hmap
internetAddrList resolves addr, which may be a literal IP address or a DNS name, and returns a list of internet protocol family addresses.
interpret ./ and ../ imports relative to this prefix
interpret relative to current directory
interrupt descriptor table register
interrupted is closed, if go process is interrupted.
intersect finds the closest dominator of both b and c.
intersperse extra newlines if present in the source and if they don't cause extra semicolons (don't do this in flush as it will cause extra newlines at the end of a file)
intra-bucket offset to start from during iteration (should be big enough to hold bucketCnt-1)
intrinsicCall1 converts a call to a recognized 1-arg intrinsic into the intrinsic
intrinsicFirstArg extracts arg from n.List and eval
introduce 2 errors: chmod top-level directories to 0
introduced in at least 2.6.11
invalid AST - ignore (will be handled later)
invalid UTF-8 is coerced to valid UTF-8.
invalid anonymous field
invalid dwarf, gdb will complain.
invalid for this operation
invalid index terminates list for self-verification only (redundant)
invalid instruction (return)
invalid recursive types are detected via path
invalid reflect.Value doesn't crash.
invalid surrogate sequence
invalid type (package contains errors)
invalidNodeValue is an invalid index which marks a leaf node in the tree.
invalidate current timers Reset current timers.
invalidate is called by Framer.ReadFrame to make this frame's buffers as being invalid, since the subsequent frame will reuse them.
invalidate lhs and use rhs
invalidate token position
invariant: live contains the values live at the start of b (excluding phi inputs)
invariants we depend on.
invent a closing brace/bracket to get it out.
invent a name so that we can refer to it in the trampoline
inverseBWT implements the inverse Burrows-Wheeler transform as described in http://www.hpl.hp.com/techreports/Compaq-DEC/SRC-RR-124.pdf, section 4.2.
invokeMacro pushes onto the input Stack a Slice that holds the macro definition with the actual parameters substituted for the formals.
involves only a HMUL node
io.EOF is also an error in this case
io.EOF is returned at the end of the input.
io.Writer and io.Closer should not be used concurrently.
ioSrv executes net IO requests.
ios-deploy invokes lldb to give us a shell session with the app.
iota is a predeclared identifier representing the untyped integer ordinal number of the current const specification in a (usually parenthesized) const declaration.
ioutil.TempDir might return "non-canonical" name.
ipAddrsEface returns an empty interface slice of addrs.
ipEmptyString is like ip.String except that it returns an empty string when ip is unset.
ipv4only reports whether the kernel supports IPv4 addressing mode and addr is an IPv4 address.
ipv6IfIndex is a substitute for ifIndex
ipv6LinkLocalUnicastAddr returns an IPv6 link-local unicast address on the given network interface for tests.
ipv6only reports whether the kernel supports IPv6 addressing mode and addr is an IPv6 address except IPv4-mapped IPv6 address.
irregular instructions
is Ordinal TODO add dynimport ordinal support.
is a named or unnamed boolean type
is before nonterminal
is j the most frequent
is not permitted if f() is multi-valued
is or was a part of an actual ss.
is the Euler constant, which is very close to 0.5.
is the argument variadic
is the variable captured by a closure
is the variable captured by value or by reference
is the variable ever assigned to
is there an explicit init function
is usually at the end of a path.
is16 reports whether r is in the sorted slice of 16-bit ranges.
is32 reports whether r is in the sorted slice of 32-bit ranges.
is32Bit reports whether n can be represented as a signed 32 bit integer.
is63bit reports whether x can be represented using 63 bits.
isAbsPath calls ctxt.IsAbsPath (if not nil) or else filepath.IsAbs.
isAlphaNum reports whether the byte is an ASCII letter, number, or underscore
isAlphaNumeric reports whether r is an alphabetic, digit, or underscore.
isAncestor reports whether x is a strict ancestor of y.
isAncestorEq reports whether x is an ancestor of or equal to y.
isAtext reports whether r is an RFC 5322 atext character.
isBadCipher reports whether the cipher is blacklisted by the HTTP/2 spec.
isBlank reports whether n is the blank identifier.
isBlock returns true if this op is a block opcode.
isBoolFlag reports whether v is a bool flag.
isBroken reports whether this connection is in a known broken state.
isBuildID determines if the profile may contain a build ID, by checking that it is a string of hex digits.
isCSSNmchar reports whether rune is allowed anywhere in a CSS identifier.
isCSSSpace reports whether b is a CSS space char as defined in wc.
isCall reports whether t is a call to pkg.name.
isCanceled reports whether this connection was closed due to CancelRequest.
isCheckmarked reports whether the heap bits have the checkmarked bit set.
isClosedConnError reports whether err is an error from use of a closed network connection.
isCommutative returns true if the order of input operands does not affect the result.
isCondJmp records the conditional jumps.
isConst returns true if a refers to a constant (integer or floating point, not string currently).
isCookieDomainName returns whether s is a valid domain name or a valid domain name with a leading dot '.'.
isDir calls ctxt.IsDir (if not nil) or else uses os.Stat.
isDirectIface reports whether t is stored directly in an interface value.
isDriveLetter returns true if path is Windows drive letter (like "c:").
isEmptyString reports whether n is an empty string literal.
isEndOfLine reports whether r is an end-of-line character.
isExactFloat32 reoprts whether v has an AuxInt that can be exactly represented as a float32.
isExported reports whether name is an exported Go symbol (that is, whether it begins with an upper-case letter).
isExported reports whether the name is an exported identifier.
isExported reports whether this is an exported - upper case - name.
isExportedField reports whether a struct field is exported.
isExportedRuntime reports whether name is an exported runtime function.
isFPR returns true if a is a floating point register (FPR).
isFile determines whether path is a file by trying to open it.
isFinalBoundary reports whether line is the final boundary line indicating that all parts are over.
isFinite reports whether f represents a finite rational value.
isFormattedPrint records the formatted-print functions.
isFunctionValue reports whether the expression is a function as opposed to a function call.
isGPR returns true if a is a general purpose register (GPR).
isGenericIntConst returns whether v is a generic integer constant.
isGitRepo reports whether the working directory is inside a Git repository.
isGo12 reports whether this is a Go 1.2 (or later) symbol table.
isGraphic lists the graphic runes not matched by IsPrint.
isH2Upgrade reports whether r represents the http2 "client preface" magic string.
isHeaderOnlyType checks if the given type flag is of the type that has no data section even if a size is specified.
isHex reports whether b is a hexadecimal character (0-9A-Fa-f).
isHex reports whether the given character is a hex digit.
isIP reports whether host is an IP address.
isIPv4 returns true if the Addr contains an IPv4 address.
isIdentifier checks that the name is valid Go identifier, and logs and exits if it is not.
isInGraphicList reports whether the rune is in the isGraphic list.
isInTag return whether s occurs solely inside an HTML tag.
isJSIdentPart reports whether the given rune is a JS identifier part.
isLiteralType reports whether x is a legal composite literal type.
isLoad returns true if p is a move from memory to a register.
isLoop records the loop operators.
isLoopSpillCandidate indicates whether the spill for v satisfies preliminary spill-sinking conditions just after the last block of loop has been processed.
isMacro reports whether p is a package dependency macro (uppercase name).
isMarked reports whether mark bit m is set.
isMetaPackage checks if name is a reserved package name that expands to multiple packages
isMove returns true if p is a move.
isMultibyte reports whether r is a multi-byte UTF-8 character as supported by RFC 6532
isNaN is a copy of math.IsNaN to avoid a dependency on the math package.
isName reports whether n is an identifier with the given name.
isName reports whether s is a valid C identifier
isNew returns if the path is newer than the time stamp used by touch.
isNil reports whether the provided expression is the built-in nil identifier.
isNil reports whether x is the nil value.
isNonNegative returns true if v is known to be non-negative.
isNonNegative returns true is v is known to be greater or equal to zero.
isOWS reports whether b is an optional whitespace byte, as defined by RFC 7230 section 3.2.3.
isPkgDot reports whether t is the expression "pkg.name" where pkg is an imported identifier.
isPointer reports whether the heap bits describe a pointer word.
isPowerOfTwo reports whether n is a power of 2.
isPrefix reports whether text is the name of an instruction prefix.
isPrefix will be false when returning the last fragment of the line.
isPrint records the unformatted-print functions.
isPrintable reports whether the given b is in the ASN.1 PrintableString set.
isPtrPkgDot reports whether f is the expression "*pkg.name" where pkg is an imported identifier.
isQtext reports whether r is an RFC 5322 qtext character.
isRedundant determines if an edge can be removed without impacting connectivity of the whole graph.
isReg returns true if a is a general purpose or floating point register (GPR or FPR).
isRegisteredTestName reports whether a test named testName has already been registered.
isReused reports whether this connection is in a known broken state.
isSSAIntrinsic1 returns true if n is a call to a recognized 1-arg intrinsic that can be handled by the SSA backend.
isSafeUintptr reports whether x - already known to be a uintptr - is safe to convert to unsafe.Pointer.
isSamePtr reports whether p1 and p2 point to the same address.
isSent reports whether this struct field is to be transmitted.
isSeparator reports whether the rune could mark a word boundary.
isSpace reports whether b is an ASCII space character.
isSpace reports whether r is a space character.
isSpace reports whether the byte is a space character.
isSpace reports whether the character is a Unicode white space character.
isStale and computeBuildID
isStale reports whether package p needs to be rebuilt, along with the reason why.
isStale reports whether pkg is stale, and why
isStaticCompositeLiteral reports whether n is a compile-time constant.
isStore returns true if p is a move from a register to memory.
isStringer returns true if the provided declaration is a "String() string" method, an implementation of fmt.Stringer.
isStructUnionClass reports whether the type described by the Go syntax x is a struct, union, or class with a tag.
isSymNameOffset checks symbol name if it is encoded as offset into string table.
isSystemGoroutine reports whether the goroutine g must be omitted in stack dumps and deadlock detector.
isTSpecial reports whether rune is in 'tspecials' as defined by RFC 1521 and RFC 2045.
isTerminating reports if s is a terminating statement.
isTest tells whether name looks like a test (or benchmark, according to prefix).
isTest tells whether name looks like a test, example, or benchmark.
isTestFile reports whether the source file is a set of tests and should therefore be excluded from coverage analysis.
isTestFunc tells whether fn has the type of a testing function.
isToken reports whether s is a 'token' as defined by RFC 1521 and RFC 2045.
isTokenChar reports whether rune is in 'token' as defined by RFC 1521 and RFC 2045.
isTokenTable is a copy of net/http/lex.go's isTokenTable.
isTopName reports whether n is a top-level unresolved identifier with the given name.
isType returns whether the expression is definitely a type.
isTypeName reports whether x is a (qualified) TypeName.
isUNC reports whether path is a UNC path.
isUpper reports whether the name starts with an upper case letter.
isValid performs validity checks on the c.
isValidDirective reports whether dir is a valid directive text, meaning angle brackets are matched, ignoring comments and strings.
isValidNumber reports whether s is a valid JSON number literal.
isVariable reports whether s is a single Go alphanumeric identifier.
isVchar reports whether r is an RFC 5322 VCHAR character.
isWSP here should actually be isFWS, but we don't support folding yet.
isWSP reports whether r is a WSP (white space).
isWildcard reports whether the address is a wildcard address.
isZero reports whether the value is the zero of its type.
isZero returns true if a is either the constant 0 or the register REGZERO.
isZeroValue guesses whether the string represents the zero value for a flag.
isZip64 reports whether the file size exceeds the 32 bit limit
isabs reports whether p is an absolute path.
iscgo is set to true by the runtime/cgo package
iscomptype reports whether type t is a composite literal type or a pointer to one.
isdir reports whether p names an existing directory.
isextern reports whether s describes an external symbol that must avoid pc-relative addressing.
isfile reports whether p names an existing file.
isnanu returns whether ix represents a NaN floating point number.
isnil reports whether n represents the universal untyped zero value "nil".
isolate all left sides
isolate low-order bit
ispaddedfield reports whether the i'th field of struct type t is followed by padding.
ispcdisp reports whether v is a valid PC-relative displacement.
isreflexive reports whether t has a reflexive equality operator.
issue 10253: cmd/7g: bad codegen, probably regopt related
issue 10253: cmd/gc: incorrect escape analysis of closures Partial call x.foo was not promoted to heap.
issue 1192 - detail in error
issue 12413: invalid variable name x in type switch: code would fail to compile if the variable used in the short variable declaration was previously declared as a constant.
issue 13365: confusing error message (array vs slice)
issue 13635: used to output error about C.unsignedchar.
issue 1474 important: no newline on end of next line.
issue 1662 iota inside var
issue 1908 unreasonable width used to be internal fatal error
issue 1979 used to get internal compiler error too
issue 2086 was calling makeclosure twice on the closure
issue 2089 - internal compiler error
issue 2337 The program deadlocked.
issue 2672 was trying binary search with an interface type
issue 4066: return values not being spilled eagerly enough
issue 4264: reject int division by const 0
issue 4352: Recvfrom failed with "address family not supported by protocol family" if zero-length buffer provided
issue 4785: used to fail to compile
issue 5056: escape analysis not applied to wrapper functions
issue 5089: gc allows methods on non-locals if symbol already exists
issue 5162: bad array equality when multiple comparisons happen in the same expression.
issue 5172: spurious warn about type conversion on broken type inside go and defer
issue 5358: incorrect error message when using f(g()) form on ...
issue 5515: miscompilation doing inlining in generated method wrapper
issue 5609: overflow when calculating array size
issue 5753: bad typecheck info causes escape analysis to not run on method thunks.
issue 5773 Check that annotations take effect regardless of whether they are before or after the use in the source code.
issue 5809: 6g and 8g attempted to constant propagate indexed LEA
issue 5820: register clobber when clearfat and 64 bit arithmetic is interleaved.
issue 6269: name collision on method names for function local types.
issue 7150: array index out of bounds error off by one
issue 7313: for loop init should not be treated as "in loop"
issue 7346 : internal error "doasm" error due to checknil of a nil literal.
issue 7366: generates a temporary with ideal type during comparison of small structs.
issue 7690 - Stack and other routines did not back up initial PC into CALL instruction, instead reporting line number of next instruction, which might be on a different line.
issue 7931: bad handling of slice of array
issue 8142: lost 'addrtaken' bit on inlined variables.
issue 8507 used to call algtype on invalid recursive type and get into infinite recursion
issue 8761 used to confuse code generator into using temporary before initialization.
it breaks the usual C archive model, but this is Go, not C.
it doesn't matter if it's not the exact number.
it is a drive letter, like C:
it is called by the initialization before main is run.
it is important to generate code like:
it is necessary to defer the calculation of the struct width until after T has been initialized to be a pointer to that struct.
it is no harm to put it here
it is unlikely to have this character in the filename
it might also help in the traceback.
it must end in a letter or digit:
it omits the decimal point too when the fraction is 0.
it should always be known, but if not, be conservative and keep the current loop depth.
it skips e.g. stores to ...
it updates d.off to point past the decoded value.
it's a colas, so must not re-use an oldname
it's unused but must be non-nil, otherwise crashes
itab field doesn't need a write barrier (even though it is a pointer).
itab field is treated as a scalar.
itable and data words of an empty-interface value.
itable of interface value
itable word of an interface value.
item represents a token or text string returned from the scanner.
itemType identifies the type of lex items.
iterate through bytes, placing index into the correct spot in sa
iterate through declarations - they are sorted in decreasing xoffset order.
iteration order changed.
iteration over encoded pcdata tables.
itoaDiv formats val/(10**dec) into buf.
jarKey returns the key to use for a jar.
jarTest encapsulates the following actions on a jar: 1.
jmpdefer modifies SP/LR/PC non-atomically.
jmptoset returns ASETxx for AJxx.
join concatenates parameters ps into a string with sep separator.
join is the inverse of split.
join joins the two contexts of a branch template node.
joinFunc is the inverse of splitFunc.
joinNonEmpty is like join, but it assumes that the first element is non-empty.
joinPath calls ctxt.JoinPath (if not nil) or else filepath.Join.
joinUnambiguously prints the slice, quoting where necessary to make the output unambiguous.
jpeg.writer (matching bufio.Writer)
js Returns the escaped JavaScript equivalent of the textual representation of its arguments.
jsCtx determines whether a '/' starts a regular expression literal or a division operator.
jsCtxDivOp occurs where a '/' would start a division operator.
jsCtxRegexp occurs where a '/' would start a regexp literal.
jsCtxUnknown occurs where a '/' is ambiguous due to context joining.
jsRegexpEscaper behaves like jsStrEscaper but escapes regular expression specials so the result is treated literally when included in a regular expression literal.
jsValEscaper escapes its inputs to a JS Expression (section 11.14) that has neither side-effects nor free variables outside (NaN, Infinity).
json_test.go decodes this during init.
just a few regular cases - general rounding is tested elsewhere
just a test of fakedb itself
just an ordinary function
just check to make sure regalloc and stackalloc did it right
just do generic traversal
just finished array value
just finished non-last object value
just finished object key (string)
just for test case printing unsafe.Pointer For testing printf-like functions from external package.
just for the p.typ call
just kicking the tires: a valid arithmetic expression
just processed last block of loop, if it is an inner loop.
just to complicate things
just try to compile all tests, but no need to run
k defaults to cap(x) Only need to load it if we're recalculating cap or doing a full update.
keep 0-length string live until here
keep a reference to the connection so it can be used to create a TLS connection later
keep a reference to the filename to allow to overwrite it later if we detect that we can use ustar longnames instead of pax
keep around for debugging
keep at top to ensure alignment on 32-bit systems.
keep base pointer of slice
keep empty slice alive until here
keep in sync with ../cmd/compile/internal/gc/reflect.go
keep method with empty method signature
keep nil untyped - see comment for interfaces, above
keep optimizer from registerizing
keep original v unchanged
keep overwriting this till it is visited.
keep small from being a leaf function, which might make it not do any stack check at all.
keep the connection between web-server and responder open after request
keep track of the instances for reporting unused
keep_parens so we can report error below
keeps overflow buckets alive
key and out contain the semi-weak key pair
key and value temporaries
key is metaImportsForPrefix's importPrefix
key must be addressable
key must be non-empty
key produces the corresponding ciphertext
key produces the original plaintext
key returns the value of the underlying data, for comparison as a map key.
key temporary for map access using array literal key.
key temporary for mapaccess using array literal key.
key temporary for mapaccess.
key temporary for two-result map access using array literal key.
key used by PutIdleTestConn
key, if not nil, contains either a *rsa.PrivateKey or ecdsa.PrivateKey which is the private key for the reference server.
key:value expressions are handled in composite literals
keyFor returns the AuxInt portion of a  key structure uniquely identifying a zero arg value for the supported ops.
keyName is an opaque byte string that serves to identify the session ticket key.
keyPEM is the same as rsaKeyPEM, but declares itself as just "PRIVATE KEY", not "RSA PRIVATE KEY".
keyed by database (e.g. "hosts")
keyed by hash calculated in FuncOf
keyed by hash calculated in StructOf
keysByCount sorts keys with higher counts first, breaking ties by key string order.
keysFromMasterSecret generates the connection keys from the master secret, given the lengths of the MAC key, cipher key and IV, as defined in RFC 2246, section 6.3.
keyval is a list of key, value pairs.
keyword token (BREAK, CONTINUE, GOTO, FALLTHROUGH)
keywords are longer than one letter - avoid lookup otherwise
kind of switch statement (switchKind*)
kludgy: typecheckok means we're past parsing.
known flags are all ASCII
known to be a byte pointer
known to be zero for the type
knownOpcodeLengths gives the opcode lengths (in varint arguments) of known standard opcodes.
ks is the key schedule, the length of which depends on the size of the AES key.
l is an lv and rt is the type of an rv return 1 if this implies a function call evaluating the lv or a function call in the conversion of the types
l is non-nil interface containing nil pointer
l.write will add leading newline if required
l2 is allowed to be a string.
l2 should not change because e is not an element of l2
label contiguous same-letter groups with the same group number
label definition Node (OLABEL) Label use Node (OGOTO, OBREAK, OCONTINUE).
label may be declared later - add branch to forward jumps
label returns the label associated with sym, creating it if necessary.
label scope for current function
labeled statement to which this block belongs, or nil
labeled statements put labels on a separate line, but here we only care about the start line of the actual statement without label - correct line for each label
labels and labeled control flow nodes (OFOR, OSWITCH, OSELECT) in f
labels checks correct label use in body.
large (non-SSAable) array
large (non-SSAable) struct
large constants - consumes too much memory
large data set in the test
large numbers of strings are passed to the runtime as a slice.
large receiver, so basic wrapper in i.M()
large shift gets 2 shifts by width-1
larger than any legal digit val
larger than any source line
largest Prog.pc in live range
largest denormal special denormal cases (see issues 14553, 14651)
largest duration that can be represented by int64 in nanoseconds
largest supported exponent
largest ullman on left.
last P emitted an event for this goroutine
last ValueSpec with type or init exprs seen
last arg is the variadic one.
last argument is of the form x...
last buffered line - we don't have a newline, so just write any outstanding buffered data
last code point before surrogate half.
last declaration for diagnostic
last dir heading printed
last entry - remove list from map
last error message encountered
last error position encountered
last error that occurred writing
last fncall assigned to stack
last frame write wasn't a flush
last gc (in absolute time)
last goroutine running on P
last instruction in block
last is the index of the last character in the pattern.
last is the most recently seen code, or decoderInvalidCode.
last is whether this criteria is the last in the list.
last line comment Next token
last line contains more comment text - assume it is aligned like the other lines and include in prefix computation
last line only contains closing
last ptrmask byte read
last read operation, so that Unread* can work correctly.
last register variable for 7g only
last register variable for 9g only
last rune in space is 3 bytes
last span's next field, or first if none
last synchronization position
last time resolv.conf was checked
last time routing information was fetched
last token printed (token.ILLEGAL if it's whitespace)
lastComment returns the last comment inside the provided block.
lastHeaderStream is non-zero if the last frame was an unfinished HEADERS/CONTINUATION.
lastMethod is the method of the most recent request on this connection, if any.
lastNumClosed is copied from db.numClosed when Stmt is created without tx and closed connections in css are removed.
lastPrefix is the shift, and (last-i) is len(suffix).
lastcontinuehandler is reached, because runtime cannot handle current exception.
lastcontinuehandler will print crash info and exit.
lateSpillUse notes a late (after stack allocation) use of the spill of value with ID vid.
launch is run by the doBench function as a separate goroutine.
launch launches the benchmark function.
launch test goroutines
launch with `go run arithBoundaryGen.go` a file called arithBoundary_ssa.go will be written into the parent directory containing the tests
launch with `go run arithConstGen.go` a file called arithConst_ssa.go will be written into the parent directory containing the tests
launchpadVCS solves the ambiguity for "lp.net/project/foo".
lay out the code, emitting code and data relocations.
layout orders basic blocks in f with the goal of minimizing control flow instructions.
lazily filled when Trailers() is called
lazily initialized if/when needed
lazily initialized in (*parser).syntax_error
lazily-initialized gzip reader
lazyInit lazily initializes a zero List value.
lbz, stz, rlwm(r/r), lhz, lha, stz, and x variants
ld -r could generate multiple section symbols for the same section but with different values, we have to take that into account
ld r11,8(r11) Jump to the dynamic resolver
ld runs the linker to create an executable starting at mainpkg.
ld64 for arm seems to want the symbol table to contain offset into the section rather than pseudo virtual address that contains the section load address.
ldShared runs the linker to create a shared library containing the pkgs built by toplevelactions
ldobj loads an input object.
leading // without scheme should create an authority
leading // without scheme, with userinfo, path, and query
leading zeros, but leave room for a NUL.
leadingRegexp returns the leading regexp that re begins with.
leadingString returns the leading literal string that re begins with.
leads to the type/values matrix below.
leaking y to heap is intended
leave alone for back end
leave constants to enable dead code elimination (issue 9608)
leave in heap but adjust next time to fire
leave non-pointers where F's return values go
leave on during development
leave pc/sp for cpu profiler
leave unfinished goroutines hanging
left action delimiter
left and right contain indexes into the nodes slice of the tree.
leftPad returns a new slice of length size.
leftTrimLength returns the length of the spaces at the beginning of the string.
leftover decoded output
legal - scope of parameter named t1 starts in body of f4.
legal according to spec
legal because of special conversion exception for pointers
legal composite literals
legal: 1.0 has type int
legendDetailLabels generates labels common to graph and text visualization.
legendLabels generates labels exclusive to graph visualization.
len Returns the integer length of its argument.
len must match assmebly
len of string or slice
len returns the number of items in the cache.
len should not be a keyword - this doesn't compile
len0 IDAT xxx crc0 len1 IDAT yy crc1 len2 IEND crc2 then this reader presents xxxyy.
length (excludes itself)
length is family (uint16), name, NUL.
length is stored in the first word for map/chan
length is the number of codes in the tree.
length minus signature (uint32) and length fields (uint64)
length of PC-relative address in instruction encoding
length of a board row (+1 for newline) The board must be surrounded by 2 illegal fields in each direction so that move() doesn't need to check the board boundaries.
length of data after header
length of encoded instruction in bytes
length of last line in characters (for correct column reporting)
length of the longest common prefix
length/capacity of a nil map/chan is zero
lengths defining Huffman codes
less confusing than end of input
let all workers proceed
let big start running
let cancelation propagate
let goroutines block on channel
let more goroutines enter Do
let normal conversion code handle it
let race detector avoid nil checks
let scan determine the base
let select put its sudog's into the cache
let signal.Notify have signal, even if from kernel
let the compiler think f escapes
let the foo response finish so we can use its connection for /bar
let workers race to remove root
let's call the next three EX, FX and GX
lex creates a new scanner for the input string.
lexChar scans a character constant.
lexComment scans a comment.
lexField scans a field: .Alphanumeric.
lexIdentifier scans an alphanumeric.
lexInsideAction scans the elements inside action delimiters.
lexLeftDelim scans the left delimiter, which is known to be present, possibly with a trim marker.
lexNumber scans a number: decimal, octal, hex, float, or imaginary.
lexQuote scans a quoted string.
lexRawQuote scans a raw quoted string.
lexRightDelim scans the right delimiter, which is known to be present, possibly with a trim marker.
lexSpace scans a run of space characters.
lexer holds the state of the scanner.
lexinit initializes known symbols and the basic types.
lexlineno is the line number _after_ the most recently read rune.
lgdt, sgdt, lidt, sidt
lhs identifier or nil
lhs must be single receive operation
lhs of a short variable declaration
lhs of a short variable declaration but doesn't enter scope until later: caller must call p.shortVarDecl(p.makeIdentList(list)) at appropriate time.
lhs of n:1 variable declarations, or nil
lhs variable is implicitly declared in each cause clause
libc wouldn't have found a hit on this anyway.
libc's resolver might then fail too, but at least it wasn't our fault.
libdepBase.so just links against the lib containing the runtime.
libgcc on ARM might be compiled as thumb code, but our 5l can't handle that, so we have to disable this test on arm.
liblink reorders the instruction stream as it sees fit.
libmingw32 and libmingwex have some inter-dependencies, so must use linker groups.
libopcodes interprets 660f801122 as taking a rel16 but truncating the address at 16 bits.
libresolv continues to the next server when it receives an invalid referral response.
like above, but add PATH in attempt to break the test
like above, but adding `.` in front of executable should still be OK
like above, but make sure .exe is tried even for commands with slash
like above, but use "a" instead of "a.exe" for command
like above, but with PATH added in attempt to break it
like close, but must not split stack, for forkx.
like exit, but must not split stack, for forkx.
like global - lower precedence
like src0, but also imports go/importer
like src1 but with different import order (used to fail with this issue)
like staticassign but we are copying an already initialized value r.
like value, but operand may be used in a comma,ok expression
likeliness of if statement
likely to make a new stack for f0, because the call to f1 puts 3000 bytes in our frame.
likely to make a new stack for f1, because 3000 bytes were used by f0 and we need 3000 more for the call to f2.
limit cname resolving to 10 in case of a infinite CNAME loop
limit on entry to sym
limit open file descriptors
limit run time for short tests
limits writing from Handler to client
line at which this type was declared, implicitly or explicitly
line comment 1 This comment is associated with the foo variable.
line comment 2  This comment is associated with the main function.
line comment F2 lead comment
line corresponding to cachedPos
line fixedbugs/bug305.go:20
line information for Imports Test information
line information for TestImports
line information for XTestImports
line number for current token
line number for this rule statistics collection variables
line number in file at Lineno
line number of first write barrier
line number of first write barrier.
line number, starting at 1
line path/to/file:linenumber The //line directive specifies that the source line that follows should be recorded as having come from the given file path and line number.
lineAt returns the line in text starting at offset offs.
lineNumber reports which line we're on, based on the position of the previous item returned by nextItem.
linearMax is the maximum size table for linear search for non-Latin1 rune.
lineno is the line number at the start of the most recently lexed token.
lineptr, loclistptr, macptr, rangelistptr
lineptr, loclistptr, macptr, rangelistptr New in DWARF 4, but clang can generate them with -gdwarf-2.
lines are broken using newlines so comments remain aligned unless forceFF is set or there are multiple expressions on the same line in which case formfeed is used
lines contains the offset of the first character for each line (the first entry is always 0)
lines joins the arguments together as complete lines.
linesFrom returns the number of output lines between the current output line and the line argument, ignoring any pending (not yet emitted) whitespace or comments.
link name saved and restored by dcopy
link to earlier panic
linked list of free stacks
linked list of special records sorted by offset.
linked list of uses of a value in nondecreasing dist order
linux header does not have sa_restorer field, but it is used in setsig().
list  An array of the literals with non-zero frequencies and their associated frequencies.
list index of matching message, if any we expect one of the messages in list to match the error at pos
list inlines a list of nodes.
list is optionally terminated by a comma
list of FwdRef values.
list of PPARAMOUT (return) variables.
list of all blocks NOTE: Layout known to queuefinalizer.
list of all comments in the source file
list of column widths in runes - re-used during formatting
list of corresponding method signatures
list of embedded types
list of field declarations
list of files in the order added to the set
list of finalizers that are to be executed
list of free stacks, avoids overloading freelist freeindex is the slot index between 0 and nelems at which to begin scanning for the next free object in this span.
list of functions to type-check
list of gcc output files
list of generated statements
list of implicitly declared lhs variables
list of imports Label scope (maintained by open/close LabelScope)
list of imports Label scopes (maintained by open/close LabelScope)
list of interfaces containing anonymous field "error"
list of nodes that depend on this node
list of panic calls by function name and line number.
list of passes for the compiler
list of possible non-escaping nodes, for printing
list of scope descriptors of the form kind:varlist
list of send waiters lock protects all fields in hchan, as well as several fields in sudogs blocked on this channel.
list of spans with a free object, ie a nonempty free list
list of spans with no free objects (or cached in an mcache)
list of symbol names and versions referred to by this pack
list of types this type embeds (for extra methods)
list of uses in this block
list spans multiple lines
list whose nodes contain no data (the nodes are the data).
list.Element.Value type is of *persistConn
listEntry prints to standard output a line describing the entry.
listStdPkgs returns the same list of packages as "go list std".
listTools prints a list of the available tools in the tools directory.
lit adds a single literal bit to w.
litWidth is the width in bits of literal codes.
literal pushes a literal regexp for the rune r on the stack and returns that regexp.
literal string annotation
literalInterface is like literal but returns an interface value.
literalStore decodes a literal stored in item into v.
live is the output of stackalloc.
live values at the end of each block.
liveAfterCurrentInstruction reports whether v is live after the current instruction is completed.
liveValues returns the live values in f.
livein and liveout are dead here and used as temporaries.
liveness tests with inlining ENABLED see also live.go.
liveness tests with inlining disabled.
lldb tries to be clever with terminals.
lo end of next class to add
load 16 bytes from arg0+auxint+aux.
load 2 bytes from arg0+2*arg1+auxint+aux.
load 2 bytes from arg0+arg1+auxint+aux.
load 2 bytes from arg0+auxint+aux.
load 4 bytes from arg0+4*arg1+auxint+aux.
load 4 bytes from arg0+arg1+auxint+aux.
load 4 bytes from arg0+auxint+aux.
load 8 bytes from arg0+8*arg1+auxint+aux.
load 8 bytes from arg0+arg1+auxint+aux.
load 8 bytes from arg0+auxint+aux.
load a a literal value into dr
load a byte from arg0+arg1+auxint+aux.
load addend from image
load address relative long
load all the object files from the archive now.
load args into DX:AX and EX:GX.
load args into bh:bl and bh:bl.
load byte from arg0+auxint+aux.
load current value of the data structure
load from arg0 + auxInt + aux.
load from same address, should be zero
load full pointer, trash heap
load indirect table for __pointers fetch symbol number
load it as a regular file
load long effective stack address (load int32 offset and add)
load multiple sets a range of registers
load pipelining push any load from memory as early as possible to give it time to complete before use.
load populates p using information from bp, err, which should be the result of calling build.Context.Import.
load r11 from pc-relative address.
load section list into memory.
load shift value into register.
load string table for symbols into memory.
load symbol address (plus offset)
load text and data segments into memory.
load the value we just stored to avoid having to spill it
load unsigned/long constants (TO DO: check)
load value into DX:AX.
load-acquire, synchronize with consumers
load-acquire, synchronize with other consumers
load-acquire, synchronize with the producer
load-consume Try to steal one element from other procs.
load/store register (extended register)
load/store register (unscaled immediate) C3.3.12
load/store register (unsigned immediate) C3.3.13 these produce 64-bit values (when there's an option)
load/store regn is cpureg, regm is 8bit offset
load/store/move 64-bit values, including 32-bit literals with/without sign-extension
loadBlock preps us to read a message of the length specified next in the input.
loadByType returns the load instruction of the given type.
loadDWARF parses the DWARF debug information generated by gcc to learn the details of the constants, variables, and types being referred to as C.xxx.
loadImport scans the directory named by path, which must be an import path, but possibly a local import path (an absolute file system path or one beginning with ./ or ../).
loadPackage inferred the canonical ImportPath from arg.
loadPackage is like loadImport but is used for command-line arguments, not for paths found in import statements.
loadPipelining pushes any load from memory as early as possible.
loadTestFuncs returns the testFuncs describing the tests that will be run.
load_addr - recorded vaddr
load_g_cx, below, always inserts the 1-instruction sequence.
loading every object will also make it possible to load foreign objects not referenced by __.PKGDEF.
loads from same address cannot pass.
loadsys loads the definitions for the low-level runtime and unsafe functions, so that the compiler can generate calls to them, but does not make the names "runtime" or "unsafe" visible as packages.
loc returns a formatted representation of the position.
loc specifies the Location that should be used to determine the minute, hour, month, day, and year that correspond to this Time.
locabs is a combination of the Zone and abs methods, extracting both return values from a single zone lookup.
local cache of acquired iterations
local channels for each goroutine
local descriptor table register
local error wrapper so we can distinguish errors we want to return as errors from genuine panics (which we don't want to return as errors)
local function - already handled by frontend
local imports have no installed path
local imports should be canonicalized already.
local name overrides imported package name
local names and hidden global names are unique and should only be referenced by their index, not name, so we don't bother to add them into the hash table
localError wraps locally caught errors so we can distinguish them from genuine panics which we don't want to return as errors.
localLoc is separate so that initLocal can initialize it even if a client has changed Local.
localRedirect gives a Moved Permanently response.
localTmp returns a local temporary directory not on NFS.
localhostKey is the private key for localhostCert.
location of next record in buf.
location overwritten by stack barrier PC
lock adds a reference to mu and locks mu.
lock all the channels involved in the select
lock for accessing hash
lock for special record allocators.
lock is a file lock to serialize iOS runs.
lock-free list of empty blocks workbuf
lock-free list of full blocks workbuf
lockPath returns a typePath describing the location of a lock value contained in typ.
lockextra locks the extra list and returns the list head.
locking/lifetime of sysfd + serialize access to Read and Write methods
log generates the output.
log is variadic user-defined Println-like function.
log(x + sqrt(1 + x*x))
log2 computes the binary logarithm of x, rounded up to the next integer.
log2 computes the integer binary logarithm of x.
log2 returns the logarithm base 2 of n.
logPassStat writes a string key and int value as a warning in a tab-separated format easily handled by spreadsheets or awk.
logState prints a state map.
logWritesConn is a net.Conn that logs each Write call to writes and then proxies to w.
log_10(2) adjust m for truncated (integer) decimal exponent e
logb returns the binary exponent of x.
loggingConn is used for debugging.
logical (unsigned) right shift
logical immediate, logical shifted register
logical, literal not cc (or/xor)
long displacement load
long displacement store
long key, try not to do more comparisons than necessary
long set of matches (longer than startSize)
long strings, same length, differ in first few and last few bytes.
longForm shows by example how the reference time would be represented in the desired layout.
longest data component among the key's values, in bytes
look ahead to distinguish IDENTIFIER from IDENTCOLON
look at value of indexed/named elements
look for a matching attached method
look for a matching field and collect embedded types
look for a matching method TODO(gri) t.allMethods is sorted - use binary search
look for another character to set the stride
look for constant expression
look for directoryEndSignature in the last 1k, then in the last 65k
look for duplicate types (quadratic algorithm, but type switches tend to be reasonably small)
look for duplicate types for a given value (quadratic algorithm, but these lists tend to be very short)
look for duplicate values
look for expression predicates
look for expression type
look for go/types package
look for go/types.Object type
look for matching scope description
look for start of range
look for the expected function in the stack
look for the next file in an archive.
look through exception table
look twice - once without lock, once with.
lookExtensions finds windows executable by its dir and path.
lookdot0 returns the number of fields or methods named s associated with Type t.
looking for extensions only
lookingForIndex: 1 iff we are still looking for the 0x01 index: the offset of the first 0x01 byte invalid: 1 iff we saw a non-zero byte before the 0x01.
lookingForIndex: 1 iff we are still looking for the zero.
looks like a correct receiver declaration
lookup entries from /etc/hosts
lookup finds the symbol name containing addr.
lookup go/types.Object.Pkg method
lookup returns information about the time zone in use at an instant in time expressed as seconds since January 1, 1970 00:00:00 UTC.
lookupAll returns a slice into the matching region of the index.
lookupAndEscapeTemplate guarantees that the template with the given name is escaped, or returns an error if it cannot be.
lookupFirstZone returns the index of the time zone to use for times before the first transition time, or when there are no transition times.
lookupIPContext looks up a hostname with a context.
lookupIPMerge wraps lookupIP, but makes sure that for any given host, only one lookup is in-flight at a time.
lookupIPReturn turns the return values from singleflight.Do into the return values from LookupIP.
lookupMethod returns the index of and method with matching package and name, or (-1, nil).
lookupName returns information about the time zone with the given name (such as "EST") at the given pseudo-Unix time (what the given time of day would be in UTC).
lookupProtocol looks up IP protocol name and returns correspondent protocol number.
lookupProtocol looks up IP protocol name and returns the corresponding protocol number.
lookupProtocol looks up IP protocol name in /etc/protocols and returns correspondent protocol number.
lookupStaticAddr looks up the hosts for the given address from /etc/hosts.
lookupStaticHost looks up the addresses for the given host from /etc/hosts.
lookupSymbol is used to retrieve the symbol (Extern, Arg or Auto) used for a particular node.
lookupTLSHash looks up the corresponding crypto.Hash for a given TLS hash identifier.
lookupType returns the base type with the given name.
lookupVarOutgoing finds the variable's value at the end of block b.
lookupXMLName returns the fieldInfo for typ's XMLName field in case it exists and has a valid xml field tag, otherwise it returns nil.
loop as long as we keep finding empty nonterminals
loop because first call needs two reads: one to get data and a second to look for an error.
loop breaks every time
loop containing this loop By default, children exits, and depth are not initialized.
loop execution count (applied in popt.go)
loop itself is assumed to not be that loop.
loop will add one more
loop will i++ Record file names
loop_body parses if and for statement bodies.
loopbackInterface returns an available logical network interface for loopback tests.
loopbce performs loop based bounds check elimination.
loops nested directly within this loop.
lose track of assign of dereference
lose track of assign to dereference
lose track of dereference
lose track of dereference lose track of key and value
lost packets before giving up on server
lost ticks that need to be logged Active recent stack traces.
lostProfileData is a no-op function used in profiles to mark the number of profiling stack traces that were discarded due to slow data writers.
low 16 bits of symbol value
low 3 bits hold the bit index
low32 returns the least significant 32 bits of z.
low64 returns the least significant 64 bits of z.
lower half-digit mask
lowerASCII returns the ASCII lowercase version of b.
lowerASCIIBytes makes x ASCII lowercase in-place.
lowered to assignments
lowered to ordinary for loop
lowest address in frame
lowest id number granted to user
lowest value for second byte.
lruSessionCache is a ClientSessionCache implementation that uses an LRU caching strategy.
lstat is overridden in tests.
luckily these are small.
lut is the look-up table for the next lutSize bits in the bit-stream.
lutSize is the log-2 size of the Huffman decoder's look-up table.
lzwEncode returns an LZW encoding (with 2-bit literals) of in.
m escapes into the return value, but the caller of mapiterinit doesn't let the return value escape.
m is blocked on a note
m is executing a write barrier
m is locked in vlop_arm.s, so g.m cannot change during this function call, so caching it in a local variable is safe.
m is not accessible from outside this package.
m is out of work and is actively looking for work
m is the maximum color value returned by image.Color.RGBA.
m represents which cases are possible because of previous relations.
m.procid is a uint64, but lwp_start writes an int32.
m.procid is a uint64, but tfork writes an int32.
m.procid is a uint64, but thr_new writes a uint32 on 32-bit systems.
m.softfloat is set during software floating point.
mCentral_CacheSpan conservatively counted unallocated slots in heap_live.
mHeap_Alloc will also sweep npages, so this only pays the debt down to npage pages.
mHeap_MapBits is called each time arena_used is extended.
mHeap_MapSpans makes sure that the spans are mapped up to the new value of arena_used.
mSpanList heads a linked list of spans.
macSHA1 returns a macFunction for the given protocol version.
mach-o only uses scattered relocation on 32-bit platforms
mach_header_64 has one extra uint32.
mach_semrelease must be completely nosplit, because it is called from Go code.
machine size and rounding alignment is dictated around the size of a pointer, set in betypeinit (see ../amd64/galign.go).
machine-independent optimization
machoCombineDwarf merges dwarf info generated by dsymutil into a macho executable.
machoUpdateDwarfHeader updates the DWARF segment load command.
machoUpdateSegment updates the load command for a moved segment.
macro: move byte with sign extension
macroDefinition returns the list of formals and the tokens of the definition.
macroName returns the name for the macro being referenced.
macros for getting associativity and precedence levels
macros for setting associativity and precedence levels
madvise will round this to any physical page covered* by this range, so an unaligned madvise will release more memory than intended.
magic number for signed division see hacker's delight chapter 10
magic number for unsigned division see hacker's delight chapter 10
main runs sort.Sort(byDate(fixes)) before applying fixes.
main runs sort.Sort(byName(fixes)) before printing list of fixes.
main takes care of OS-specific startup and dispatches to xmain.
main.Implementation.private() same here - should be and is legal
main.go refers to this definition.
main_init_done is a signal used by cgocallbackg that initialization has been completed.
major number of character or block device
major version of Windows Vista is 6
make 2*rate not overflow
make Go funcs (closures) for calling hash and equal from Go
make a copy of the result
make a new off the books
make a table of firsts of nonterminals
make a table of which nonterminals can match the empty string
make an array type corresponding the number of elements we have
make an initial pass identifying any non-nil values
make an rr of that type and re-unpack.
make and initialize static array
make argument positive
make argument positive but save the sign
make assignment of fncall to tempname
make both sides addable in ullman order
make c1 and c2 ready for communication
make cellw the smallest multiple of b.tabwidth
make compiler check that gomaxprocs is an int32
make constant the right side (it usually is anyway).
make copy so we can add locally
make dynimport JMP table for PE object files.
make equality closure
make error tolerance a fraction of b, not a.
make extra sure all workers are blocked
make fake type to check later to trigger channel argument check.
make fake type to check later to trigger function argument computation.
make filename relative to current directory
make it a complex literal
make it a nonterminal
make it differ only by last element
make it heap allocated
make list of methods for t, generating code if necessary.
make modulus result positive
make new auto *array (3 declare)
make nextSample not overflow.
make node early so we get the right line number
make non-nil: we have seen the empty package list
make pd ready, newly runnable goroutines (if any) are returned in rg/wg May run during STW, so write barriers are not allowed.
make pointer so it will be tracked
make q into p but load/store from 0(R11)
make q into p but load/store from 0(R13)
make relative path absolute
make repetition operators default to non-greedy
make simplest on right
make slice out of heap (6)
make space for sign bit
make sure "stupid" exponents don't stall the machine
make sure Equal returns false for minimally different strings.
make sure REP has room for 2 more bytes, so that padding will not be inserted before the next instruction.
make sure TESTENV gets set to "", not deleted
make sure a response is sent
make sure a target is another Alt
make sure a traceback happens with jmpdefer on the stack
make sure all indirectly imported packages have names
make sure b is heap allocated ...
make sure bad sequences fail
make sure different values are different.
make sure error mentions that name is unexported, not just "name not found".
make sure formatted output is syntactically correct
make sure goroutine A gets queued first on c goroutine B
make sure goroutine B gets queued on c before continuing
make sure it is never used
make sure last exists
make sure missing bytes fail
make sure old bucket arrays don't get GCd while an iterator is still using them.
make sure padding can double for both zerosize and alignment
make sure recursive type declarations terminate determine underlying type of named
make sure tag strings are not part of element type
make sure test is run
make sure that _obj directory exists, so that we can write all the output files there.
make sure that channel operations still work when we are blocked on a channel send and we shrink the stack.
make sure that everything n depends on is initialized.
make sure the child lock is conflicting with the parent lock
make sure the match ends here
make sure there is at least one line break if the previous comment was a line comment
make sure there is at least one separator
make sure there were no token-internal errors reported by scanner
make sure these numbers are odd
make sure we actually got a square root
make sure we add padding for structs with trailing zero-sized fields
make sure we didn't miss one
make sure we don't get into an infinite loop with phi values.
make sure we don't lose the last line comment
make sure we don't pad a zero-sized thing
make sure we evacuate the oldbucket corresponding to the bucket we're about to use
make sure we found the "other" one
make sure we get the EOF the second time
make sure we get the correct error code if open fails.
make sure we have a configuration
make sure we have a finalizer goroutine
make sure we have a line break
make sure we have an info struct
make sure we must prepare the stmt first
make sure we're done sweeping
make sure whole word is being compared, not just a single byte.
make sure x has a valid state in case of bailout (was issue 5770)
make sure x+x does not overflow
make table of which productions yield a given nonterminal
make target directory
make the action appear in the original rule
make the list of pointers for the closure call.
make the order Upper Lower
make the result channel buffered because we don't want to depend on channel queueing semantics that might possibly change in the future.
make the substitution
make this bigger for a larger (and slower) test
make undefined symbols nonfatal
make unix tests work on windows
make use of condition ...
make use of package "testing" (but don't refer to T)
make(List) (before type checking converts to one of the following)
make(T, n) make(T, n, m) (no argument evaluated yet)
make(Type, Left) (type is chan)
make(Type, Left) (type is map)
make(Type, Left, Right) (type is slice)
makeCmdLine builds a command line out of args by escaping "special" characters and joining the arguments with spaces.
makeComplex returns a Value of type t equal to v (possibly truncated to complex64), where t is a complex64 or complex128 type.
makeFloat returns a Value of type t equal to v (possibly truncated to float32), where t is a float32 or float64 type.
makeFuncImpl contains a stack map for use by the runtime
makeFuncImpl is the closure value implementing the function returned by MakeFunc.
makeFuncStub is an assembly function that is the code half of the function returned from MakeFunc.
makeImg allocates and initializes the destination image.
makeInt returns a Value of type t equal to bits (possibly truncated), where t is a signed or unsigned int type.
makeOnePass creates a onepass Prog, if possible.
makeOnePass is recursive to the size of the Prog.
makeSig makes a signature for the given argument and result types.
makeSlice allocates a slice of size n.
makeSwap expects fptr to be a pointer to a nil function.
makeTable returns the Table constructed from the specified polynomial.
makeTable8 returns slicing8Table constructed from the specified polynomial.
makeTempdir makes a temporary directory for a run of testgo.
makeValAndOff encodes a ValAndOff into an int64 suitable for storing in an AuxInt field.
makeaddable returns a node whose memory location is the same as n, but which is addressable in the Go language sense.
makes frame about 1KB
malg returns status as Gidle, change to Gsyscall before adding to allg where GC will see it.
mangle produces an identifier that includes a suffix that distinguishes it from template names mangled with different contexts.
mangleName does name mangling to translate names from the original Go source files to the names used in the final Go files generated by cgo.
mantissa ASCII digits, big-endian
mantissa length in words for desired precision
mantissa length in words for desired result precision + 1 (at least one extra bit so we get the rounding bit after the division)
mantissa size (excluding implicit msb)
manually add //line info on lines l1, l2
manually compute wanted filename and line
many freebsd/arm machines are too slow to run the full set of external tests.
many kinds of blocks, all invalid to jump into or among, but valid to jump out of if
many linux/arm machines are too slow to run the full set of external tests.
manysub_ssa is designed to tickle bugs that depend on register pressure or unfriendly operand ordering in registers (and at least once it succeeded in this).
map and chan have len in the first int-sized word.
map element (value) type
map field name to type
map from Go name to Name
map from LocalSlot to set of Values that we want to store in that slot.
map from remote ID to local description
map from value ID to bool indicating if value is known to be non-nil in the current dominator path being walked.
map from value id back to eqclass id
map import dir to list of relevant tags
map iterator should die on end of range loop
map method name to comma-separated return types (should start with "func ")
map of expressions without final type
map of position strings to lists of error message patterns
map of seen case values to positions and types
map of seen types to positions
map of supported extensions
map request id to method name
map tagKey to package
map that handlers manipulate to set headers
map zeros and singularities to origin
mapErr maps from the context errors to the historical internal net error values.
mapType represents a map type.
map_ssa.go tests map operations.
mapaccess always returns a non-nil pointer
mapaccess2* returns a typed bool, but due to spec changes, the boolean result of i.(T) is now untyped so we make it the same type as the variable on the lhs.
mapping maps from key bytes to a dense index for trieNode.table.
mappingTable contains the mechanisms for symbolization of a profile.
maps from phi arg ID to the new block created for that argument
maps mem values to the next live memory value
maps must be sent so we know their lengths and key/value types.
maps stack traces to unique ids Dictionary for traceEvString.
maps type names to associated methods
maps what we learn when the positive branch is taken.
mark all code reachable from firstp as alive
mark appends a symbol to the mark queue for flood filling.
mark as removed (see dequeueSudog)
mark ax live during cgen
mark bit for traversals
mark if this digest is SHA-224
mark instruction as done and continue layout at target of jump
mark it as an isolated sorted group
mark nodes using a different value each time
mark nonterminals which derive the empty string also, look for nonterminals which don't derive any token strings
mark processed EOF with len+1
mark respective subtrees manually
mark returns the length of the variable stack.
mark some functions that are only referenced after linker code editing
mark the symbol so it is not reexported
mark top of stack before any variables in the body are pushed.
mark top-level method symbols so that expand1 doesn't consider them.
mark value live across unknown assembly call
markBits provides access to the mark bit for an object in the heap.
markBitsForSpan returns the markBits for the span base address base.
markBroken marks a connection as broken (so it's not reused).
markDoneSema protects transitions from mark 1 to mark 2 and from mark 2 to mark termination.
markMethod marks a method as reachable.
markMoves marks any MOVXconst ops that need to avoid clobbering flags.
markReused marks this connection as having been successfully used for a request and response.
markStartTime is the absolute start time in nanoseconds that assists and background mark workers started.
markdcl records the start of a new block scope for declarations.
marker emits a marker byte and position information which makes it easy for a reader to detect if it is "out of sync".
marking is complete so we can turn the write barrier off
marking is done, turn off wb.
markroot scans the i'th root.
markrootDone indicates that roots have been marked at least once during the current GC cycle.
markrootFreeGStacks frees stacks of dead Gs.
markrootSpans marks roots for one shard of work.spans.
markrootSpans uses work.spans, so make sure it is up to date.
marks the file as applicable only on Windows and Linux.
marks variables that escape the local frame.
markwb is the mark-phase write barrier, the only barrier we have.
marshalInterface marshals a Marshaler interface value.
marshalSANs marshals a list of addresses into a the contents of an X.509 SubjectAlternativeName extension.
marshalTextInterface marshals a TextMarshaler interface value.
marshalValue writes one or more XML elements representing val.
mask of registers currently in use
mask the width of the link table
masks could be done using rlnm etc.
masterFromPreMasterSecret generates the master secret from the pre-master secret.
match all files in archive
match arguments except final variadic (unless the call is dotted itself)
match arm.C_PBIT, so Prog.String know how to print it
match arm.C_WBIT, so Prog.String know how to print it
match because NO_PROXY includes "foobar.com"
match cmd/compile (not prescribed by spec)
match each right given left
match reports whether pattern matches val, recording wildcard submatches in m.
match reports whether s1 and s2 match ignoring case.
match reports whether the entry matches the argument list.
match reports whether the name is one of:
match reports whether the user's symbol matches the program's.
match returns the MIME type of the data, or "" if unknown.
match returns the matching representation (same type) with the smallest complexity for two values x and y.
match runs the machine over the input starting at pos.
match varargcount arguments with variadic parameters.
match: (ADDL x (NEGL y)) cond: result: (SUBL x y)
match: (ADDQ x (ADDQ x y)) cond: result: (LEAQ2 y x)
match: (ADDQ x (ADDQ y x)) cond: result: (LEAQ2 y x)
match: (ADDQ x (ADDQ y y)) cond: result: (LEAQ2 x y)
match: (ADDQ x (NEGQ y)) cond: result: (SUBQ x y)
match: (ANDL x x) cond: result: x
match: (ANDQ x x) cond: result: x
match: (Add16  x y) cond: result: (ADDL  x y)
match: (Add32  x y) cond: result: (ADDL  x y)
match: (Add32 x y) cond: result: (ADD x y)
match: (Add32F x y) cond: result: (ADDSS x y)
match: (Add64  x y) cond: result: (ADDQ  x y)
match: (Add64F x y) cond: result: (ADDSD x y)
match: (Add8   x y) cond: result: (ADDL  x y)
match: (AddPtr x y) cond: result: (ADDQ  x y)
match: (And16 (And16 x y) x) cond: result: (And16 x y)
match: (And16 (And16 x y) y) cond: result: (And16 x y)
match: (And16 x (And16 x y)) cond: result: (And16 x y)
match: (And16 x (And16 y x)) cond: result: (And16 x y)
match: (And16 x x) cond: result: x
match: (And16 x y) cond: result: (ANDL x y)
match: (And32 (And32 x y) x) cond: result: (And32 x y)
match: (And32 (And32 x y) y) cond: result: (And32 x y)
match: (And32 x (And32 x y)) cond: result: (And32 x y)
match: (And32 x (And32 y x)) cond: result: (And32 x y)
match: (And32 x x) cond: result: x
match: (And32 x y) cond: result: (ANDL x y)
match: (And64 (And64 x y) x) cond: result: (And64 x y)
match: (And64 (And64 x y) y) cond: result: (And64 x y)
match: (And64 x (And64 x y)) cond: result: (And64 x y)
match: (And64 x (And64 y x)) cond: result: (And64 x y)
match: (And64 x x) cond: result: x
match: (And64 x y) cond: result: (ANDQ x y)
match: (And8  (And8  x y) x) cond: result: (And8  x y)
match: (And8  (And8  x y) y) cond: result: (And8  x y)
match: (And8  x (And8  x y)) cond: result: (And8  x y)
match: (And8  x (And8  y x)) cond: result: (And8  x y)
match: (And8  x x) cond: result: x
match: (And8  x y) cond: result: (ANDL x y)
match: (AndB x y) cond: result: (ANDL x y)
match: (Avg64u x y) cond: result: (AVGQU x y)
match: (Bswap32 x) cond: result: (BSWAPL x)
match: (Bswap64 x) cond: result: (BSWAPQ x)
match: (CMOVLEQconst x (FlagGT_UGT)) cond: result: x
match: (CMOVLEQconst x (FlagGT_ULT)) cond: result: x
match: (CMOVLEQconst x (FlagLT_UGT)) cond: result: x
match: (CMOVLEQconst x (FlagLT_ULT)) cond: result: x
match: (CMOVQEQconst x (FlagGT_UGT)) cond: result: x
match: (CMOVQEQconst x (FlagGT_ULT)) cond: result: x
match: (CMOVQEQconst x (FlagLT_UGT)) cond: result: x
match: (CMOVQEQconst x (FlagLT_ULT)) cond: result: x
match: (CMOVWEQconst x (FlagGT_UGT)) cond: result: x
match: (CMOVWEQconst x (FlagGT_ULT)) cond: result: x
match: (CMOVWEQconst x (FlagLT_UGT)) cond: result: x
match: (CMOVWEQconst x (FlagLT_ULT)) cond: result: x
match: (Check (NilCheck (GetG _) _) next) cond: result: (Plain nil next)
match: (Com16 (Com16 x)) cond: result: x
match: (Com16 x) cond: result: (NOTL x)
match: (Com32 (Com32 x)) cond: result: x
match: (Com32 x) cond: result: (NOTL x)
match: (Com64 (Com64 x)) cond: result: x
match: (Com64 x) cond: result: (NOTQ x)
match: (Com8  (Com8  x)) cond: result: x
match: (Com8  x) cond: result: (NOTL x)
match: (ComplexImag (ComplexMake _ imag )) cond: result: imag
match: (ComplexReal (ComplexMake real _  )) cond: result: real
match: (Convert (Add64 (Convert ptr mem) off) mem) cond: result: (Add64 ptr off)
match: (Convert (Add64 off (Convert ptr mem)) mem) cond: result: (Add64 ptr off)
match: (Convert (Convert ptr mem) mem) cond: result: ptr
match: (Cvt32Fto32 x) cond: result: (CVTTSS2SL x)
match: (Cvt32Fto64 x) cond: result: (CVTTSS2SQ x)
match: (Cvt32Fto64F x) cond: result: (CVTSS2SD x)
match: (Cvt32to32F x) cond: result: (CVTSL2SS x)
match: (Cvt32to64F x) cond: result: (CVTSL2SD x)
match: (Cvt64Fto32 x) cond: result: (CVTTSD2SL x)
match: (Cvt64Fto32F x) cond: result: (CVTSD2SS x)
match: (Cvt64Fto64 x) cond: result: (CVTTSD2SQ x)
match: (Cvt64to32F x) cond: result: (CVTSQ2SS x)
match: (Cvt64to64F x) cond: result: (CVTSQ2SD x)
match: (Div16  x y) cond: result: (DIVW  x y)
match: (Div16u x y) cond: result: (DIVWU x y)
match: (Div32  x y) cond: result: (DIVL  x y)
match: (Div32F x y) cond: result: (DIVSS x y)
match: (Div32u x y) cond: result: (DIVLU x y)
match: (Div64  x y) cond: result: (DIVQ  x y)
match: (Div64F x y) cond: result: (DIVSD x y)
match: (Div64u x y) cond: result: (DIVQU x y)
match: (Div8   x y) cond: result: (DIVW  (SignExt8to16 x) (SignExt8to16 y))
match: (Div8u  x y) cond: result: (DIVWU (ZeroExt8to16 x) (ZeroExt8to16 y))
match: (EQ (FlagEQ) yes no) cond: result: (First nil yes no)
match: (EQ (FlagGT_UGT) yes no) cond: result: (First nil no yes)
match: (EQ (FlagGT_ULT) yes no) cond: result: (First nil no yes)
match: (EQ (FlagLT_UGT) yes no) cond: result: (First nil no yes)
match: (EQ (FlagLT_ULT) yes no) cond: result: (First nil no yes)
match: (EQ (InvertFlags cmp) yes no) cond: result: (EQ cmp yes no)
match: (Eq16  x y) cond: result: (SETEQ (CMPW x y))
match: (Eq32  x y) cond: result: (SETEQ (CMPL x y))
match: (Eq32F x y) cond: result: (SETEQF (UCOMISS x y))
match: (Eq64  x y) cond: result: (SETEQ (CMPQ x y))
match: (Eq64F x y) cond: result: (SETEQF (UCOMISD x y))
match: (Eq8   x y) cond: result: (SETEQ (CMPB x y))
match: (EqB   x y) cond: result: (SETEQ (CMPB x y))
match: (EqInter x y) cond: result: (EqPtr  (ITab x) (ITab y))
match: (EqPtr (ConstNil) p) cond: result: (Not (IsNonNil p))
match: (EqPtr p (ConstNil)) cond: result: (Not (IsNonNil p))
match: (EqPtr x y) cond: result: (SETEQ (CMPQ x y))
match: (EqSlice x y) cond: result: (EqPtr  (SlicePtr x) (SlicePtr y))
match: (GE (FlagEQ) yes no) cond: result: (First nil yes no)
match: (GE (FlagGT_UGT) yes no) cond: result: (First nil yes no)
match: (GE (FlagGT_ULT) yes no) cond: result: (First nil yes no)
match: (GE (FlagLT_UGT) yes no) cond: result: (First nil no yes)
match: (GE (FlagLT_ULT) yes no) cond: result: (First nil no yes)
match: (GE (InvertFlags cmp) yes no) cond: result: (LE cmp yes no)
match: (GT (FlagEQ) yes no) cond: result: (First nil no yes)
match: (GT (FlagGT_UGT) yes no) cond: result: (First nil yes no)
match: (GT (FlagGT_ULT) yes no) cond: result: (First nil yes no)
match: (GT (FlagLT_UGT) yes no) cond: result: (First nil no yes)
match: (GT (FlagLT_ULT) yes no) cond: result: (First nil no yes)
match: (GT (InvertFlags cmp) yes no) cond: result: (LT cmp yes no)
match: (Geq16  x y) cond: result: (SETGE (CMPW x y))
match: (Geq16U x y) cond: result: (SETAE (CMPW x y))
match: (Geq32  x y) cond: result: (SETGE (CMPL x y))
match: (Geq32F x y) cond: result: (SETGEF (UCOMISS x y))
match: (Geq32U x y) cond: result: (SETAE (CMPL x y))
match: (Geq64  x y) cond: result: (SETGE (CMPQ x y))
match: (Geq64F x y) cond: result: (SETGEF (UCOMISD x y))
match: (Geq64U x y) cond: result: (SETAE (CMPQ x y))
match: (Geq8   x y) cond: result: (SETGE (CMPB x y))
match: (Geq8U  x y) cond: result: (SETAE (CMPB x y))
match: (GetClosurePtr) cond: result: (LoweredGetClosurePtr)
match: (GetG mem) cond: result: (LoweredGetG mem)
match: (Greater16  x y) cond: result: (SETG (CMPW x y))
match: (Greater16U x y) cond: result: (SETA (CMPW x y))
match: (Greater32  x y) cond: result: (SETG (CMPL x y))
match: (Greater32F x y) cond: result: (SETGF (UCOMISS x y))
match: (Greater32U x y) cond: result: (SETA (CMPL x y))
match: (Greater64  x y) cond: result: (SETG (CMPQ x y))
match: (Greater64F x y) cond: result: (SETGF (UCOMISD x y))
match: (Greater64U x y) cond: result: (SETA (CMPQ x y))
match: (Greater8   x y) cond: result: (SETG (CMPB x y))
match: (Greater8U  x y) cond: result: (SETA (CMPB x y))
match: (Hmul16  x y) cond: result: (HMULW  x y)
match: (Hmul16u x y) cond: result: (HMULWU x y)
match: (Hmul32  x y) cond: result: (HMULL  x y)
match: (Hmul32u x y) cond: result: (HMULLU x y)
match: (Hmul64  x y) cond: result: (HMULQ  x y)
match: (Hmul64u x y) cond: result: (HMULQU x y)
match: (Hmul8   x y) cond: result: (HMULB  x y)
match: (Hmul8u  x y) cond: result: (HMULBU x y)
match: (IData (IMake _ data)) cond: result: data
match: (ITab (IMake itab _)) cond: result: itab
match: (ITab (Load ptr mem)) cond: result: (MOVQload ptr mem)
match: (If (LessThan cc) yes no) cond: result: (LT cc yes no)
match: (If (Not cond) yes no) cond: result: (If cond no yes)
match: (If (SETA  cmp) yes no) cond: result: (UGT cmp yes no)
match: (If (SETAE cmp) yes no) cond: result: (UGE cmp yes no)
match: (If (SETB  cmp) yes no) cond: result: (ULT cmp yes no)
match: (If (SETBE cmp) yes no) cond: result: (ULE cmp yes no)
match: (If (SETEQ cmp) yes no) cond: result: (EQ  cmp yes no)
match: (If (SETEQF cmp) yes no) cond: result: (EQF  cmp yes no)
match: (If (SETG  cmp) yes no) cond: result: (GT  cmp yes no)
match: (If (SETGE cmp) yes no) cond: result: (GE  cmp yes no)
match: (If (SETGEF cmp) yes no) cond: result: (UGE  cmp yes no)
match: (If (SETGF  cmp) yes no) cond: result: (UGT  cmp yes no)
match: (If (SETL  cmp) yes no) cond: result: (LT  cmp yes no)
match: (If (SETLE cmp) yes no) cond: result: (LE  cmp yes no)
match: (If (SETNE cmp) yes no) cond: result: (NE  cmp yes no)
match: (If (SETNEF cmp) yes no) cond: result: (NEF  cmp yes no)
match: (If cond yes no) cond: result: (NE (TESTB cond cond) yes no)
match: (IsInBounds idx len) cond: result: (SETB (CMPQ idx len))
match: (IsNonNil p) cond: result: (SETNE (TESTQ p p))
match: (IsSliceInBounds idx len) cond: result: (SETBE (CMPQ idx len))
match: (LE (FlagEQ) yes no) cond: result: (First nil yes no)
match: (LE (FlagGT_UGT) yes no) cond: result: (First nil no yes)
match: (LE (FlagGT_ULT) yes no) cond: result: (First nil no yes)
match: (LE (FlagLT_UGT) yes no) cond: result: (First nil yes no)
match: (LE (FlagLT_ULT) yes no) cond: result: (First nil yes no)
match: (LE (InvertFlags cmp) yes no) cond: result: (GE cmp yes no)
match: (LT (FlagEQ) yes no) cond: result: (First nil no yes)
match: (LT (FlagGT_UGT) yes no) cond: result: (First nil no yes)
match: (LT (FlagGT_ULT) yes no) cond: result: (First nil no yes)
match: (LT (FlagLT_UGT) yes no) cond: result: (First nil yes no)
match: (LT (FlagLT_ULT) yes no) cond: result: (First nil yes no)
match: (LT (InvertFlags cmp) yes no) cond: result: (GT cmp yes no)
match: (Leq16  x y) cond: result: (SETLE (CMPW x y))
match: (Leq16U x y) cond: result: (SETBE (CMPW x y))
match: (Leq32  x y) cond: result: (SETLE (CMPL x y))
match: (Leq32F x y) cond: result: (SETGEF (UCOMISS y x))
match: (Leq32U x y) cond: result: (SETBE (CMPL x y))
match: (Leq64  x y) cond: result: (SETLE (CMPQ x y))
match: (Leq64F x y) cond: result: (SETGEF (UCOMISD y x))
match: (Leq64U x y) cond: result: (SETBE (CMPQ x y))
match: (Leq8   x y) cond: result: (SETLE (CMPB x y))
match: (Leq8U  x y) cond: result: (SETBE (CMPB x y))
match: (Less16  x y) cond: result: (SETL (CMPW x y))
match: (Less16U x y) cond: result: (SETB (CMPW x y))
match: (Less32  x y) cond: result: (SETL (CMPL x y))
match: (Less32 x y) cond: result: (LessThan (CMP x y))
match: (Less32F x y) cond: result: (SETGF (UCOMISS y x))
match: (Less32U x y) cond: result: (SETB (CMPL x y))
match: (Less64  x y) cond: result: (SETL (CMPQ x y))
match: (Less64F x y) cond: result: (SETGF (UCOMISD y x))
match: (Less64U x y) cond: result: (SETB (CMPQ x y))
match: (Less8   x y) cond: result: (SETL (CMPB x y))
match: (Less8U  x y) cond: result: (SETB (CMPB x y))
match: (Mod16  x y) cond: result: (MODW  x y)
match: (Mod16u x y) cond: result: (MODWU x y)
match: (Mod32  x y) cond: result: (MODL  x y)
match: (Mod32u x y) cond: result: (MODLU x y)
match: (Mod64  x y) cond: result: (MODQ  x y)
match: (Mod64u x y) cond: result: (MODQU x y)
match: (Mod8   x y) cond: result: (MODW  (SignExt8to16 x) (SignExt8to16 y))
match: (Mod8u  x y) cond: result: (MODWU (ZeroExt8to16 x) (ZeroExt8to16 y))
match: (Mul16  x y) cond: result: (MULL  x y)
match: (Mul32  x y) cond: result: (MULL  x y)
match: (Mul32F x y) cond: result: (MULSS x y)
match: (Mul64  x y) cond: result: (MULQ  x y)
match: (Mul64F x y) cond: result: (MULSD x y)
match: (Mul8   x y) cond: result: (MULL  x y)
match: (NE (FlagEQ) yes no) cond: result: (First nil no yes)
match: (NE (FlagGT_UGT) yes no) cond: result: (First nil yes no)
match: (NE (FlagGT_ULT) yes no) cond: result: (First nil yes no)
match: (NE (FlagLT_UGT) yes no) cond: result: (First nil yes no)
match: (NE (FlagLT_ULT) yes no) cond: result: (First nil yes no)
match: (NE (InvertFlags cmp) yes no) cond: result: (NE cmp yes no)
match: (NE (TESTB (SETA  cmp) (SETA  cmp)) yes no) cond: result: (UGT cmp yes no)
match: (NE (TESTB (SETAE cmp) (SETAE cmp)) yes no) cond: result: (UGE cmp yes no)
match: (NE (TESTB (SETB  cmp) (SETB  cmp)) yes no) cond: result: (ULT cmp yes no)
match: (NE (TESTB (SETBE cmp) (SETBE cmp)) yes no) cond: result: (ULE cmp yes no)
match: (NE (TESTB (SETEQ cmp) (SETEQ cmp)) yes no) cond: result: (EQ  cmp yes no)
match: (NE (TESTB (SETEQF cmp) (SETEQF cmp)) yes no) cond: result: (EQF  cmp yes no)
match: (NE (TESTB (SETG  cmp) (SETG  cmp)) yes no) cond: result: (GT  cmp yes no)
match: (NE (TESTB (SETGE cmp) (SETGE cmp)) yes no) cond: result: (GE  cmp yes no)
match: (NE (TESTB (SETGEF cmp) (SETGEF cmp)) yes no) cond: result: (UGE  cmp yes no)
match: (NE (TESTB (SETGF  cmp) (SETGF  cmp)) yes no) cond: result: (UGT  cmp yes no)
match: (NE (TESTB (SETL  cmp) (SETL  cmp)) yes no) cond: result: (LT  cmp yes no)
match: (NE (TESTB (SETLE cmp) (SETLE cmp)) yes no) cond: result: (LE  cmp yes no)
match: (NE (TESTB (SETNE cmp) (SETNE cmp)) yes no) cond: result: (NE  cmp yes no)
match: (NE (TESTB (SETNEF cmp) (SETNEF cmp)) yes no) cond: result: (NEF  cmp yes no)
match: (Neg16  x) cond: result: (NEGL x)
match: (Neg16 (Sub16 x y)) cond: result: (Sub16 y x)
match: (Neg32  x) cond: result: (NEGL x)
match: (Neg32 (Sub32 x y)) cond: result: (Sub32 y x)
match: (Neg64  x) cond: result: (NEGQ x)
match: (Neg64 (Sub64 x y)) cond: result: (Sub64 y x)
match: (Neg8   x) cond: result: (NEGL x)
match: (Neg8  (Sub8  x y)) cond: result: (Sub8  y x)
match: (Neq16  x y) cond: result: (SETNE (CMPW x y))
match: (Neq32  x y) cond: result: (SETNE (CMPL x y))
match: (Neq32F x y) cond: result: (SETNEF (UCOMISS x y))
match: (Neq64  x y) cond: result: (SETNE (CMPQ x y))
match: (Neq64F x y) cond: result: (SETNEF (UCOMISD x y))
match: (Neq8   x y) cond: result: (SETNE (CMPB x y))
match: (NeqB   x y) cond: result: (SETNE (CMPB x y))
match: (NeqInter x y) cond: result: (NeqPtr (ITab x) (ITab y))
match: (NeqPtr (ConstNil) p) cond: result: (IsNonNil p)
match: (NeqPtr p (ConstNil)) cond: result: (IsNonNil p)
match: (NeqPtr x y) cond: result: (SETNE (CMPQ x y))
match: (NeqSlice x y) cond: result: (NeqPtr (SlicePtr x) (SlicePtr y))
match: (NilCheck ptr mem) cond: result: (LoweredNilCheck ptr mem)
match: (ORL x x) cond: result: x
match: (ORQ x x) cond: result: x
match: (Or16 (Or16 x y) x) cond: result: (Or16 x y)
match: (Or16 (Or16 x y) y) cond: result: (Or16 x y)
match: (Or16 x (Or16 x y)) cond: result: (Or16 x y)
match: (Or16 x (Or16 y x)) cond: result: (Or16 x y)
match: (Or16 x x) cond: result: x
match: (Or16 x y) cond: result: (ORL x y)
match: (Or32 (Or32 x y) x) cond: result: (Or32 x y)
match: (Or32 (Or32 x y) y) cond: result: (Or32 x y)
match: (Or32 x (Or32 x y)) cond: result: (Or32 x y)
match: (Or32 x (Or32 y x)) cond: result: (Or32 x y)
match: (Or32 x x) cond: result: x
match: (Or32 x y) cond: result: (ORL x y)
match: (Or64 (Or64 x y) x) cond: result: (Or64 x y)
match: (Or64 (Or64 x y) y) cond: result: (Or64 x y)
match: (Or64 x (Or64 x y)) cond: result: (Or64 x y)
match: (Or64 x (Or64 y x)) cond: result: (Or64 x y)
match: (Or64 x x) cond: result: x
match: (Or64 x y) cond: result: (ORQ x y)
match: (Or8  (Or8  x y) x) cond: result: (Or8  x y)
match: (Or8  (Or8  x y) y) cond: result: (Or8  x y)
match: (Or8  x (Or8  x y)) cond: result: (Or8  x y)
match: (Or8  x (Or8  y x)) cond: result: (Or8  x y)
match: (Or8  x x) cond: result: x
match: (Or8  x y) cond: result: (ORL x y)
match: (OrB x y) cond: result: (ORL x y)
match: (SETA (InvertFlags x)) cond: result: (SETB x)
match: (SETAE (InvertFlags x)) cond: result: (SETBE x)
match: (SETB (InvertFlags x)) cond: result: (SETA x)
match: (SETBE (InvertFlags x)) cond: result: (SETAE x)
match: (SETEQ (InvertFlags x)) cond: result: (SETEQ x)
match: (SETG (InvertFlags x)) cond: result: (SETL x)
match: (SETGE (InvertFlags x)) cond: result: (SETLE x)
match: (SETL (InvertFlags x)) cond: result: (SETG x)
match: (SETLE (InvertFlags x)) cond: result: (SETGE x)
match: (SETNE (InvertFlags x)) cond: result: (SETNE x)
match: (SignExt16to32 x) cond: result: (MOVWQSX x)
match: (SignExt16to64 x) cond: result: (MOVWQSX x)
match: (SignExt32to64 x) cond: result: (MOVLQSX x)
match: (SignExt8to16  x) cond: result: (MOVBQSX x)
match: (SignExt8to32  x) cond: result: (MOVBQSX x)
match: (SignExt8to64  x) cond: result: (MOVBQSX x)
match: (SliceCap (SliceMake _ _ (SliceCap x))) cond: result: (SliceCap x)
match: (SliceCap (SliceMake _ _ (SliceLen x))) cond: result: (SliceLen x)
match: (SliceCap (SliceMake _ _ cap)) cond: result: cap
match: (SliceLen (SliceMake _ (SliceLen x) _)) cond: result: (SliceLen x)
match: (SliceLen (SliceMake _ len _)) cond: result: len
match: (SlicePtr (SliceMake (SlicePtr x) _ _)) cond: result: (SlicePtr x)
match: (SlicePtr (SliceMake ptr _ _ )) cond: result: ptr
match: (Sqrt x) cond: result: (SQRTSD x)
match: (Store _ (StructMake0) mem) cond: result: mem
match: (StringLen (StringMake _ len)) cond: result: len
match: (StringPtr (StringMake ptr _)) cond: result: ptr
match: (StructSelect (StructMake1 x)) cond: result: x
match: (Sub16  x y) cond: result: (SUBL  x y)
match: (Sub16 (Add16 x y) x) cond: result: y
match: (Sub16 (Add16 x y) y) cond: result: x
match: (Sub32  x y) cond: result: (SUBL  x y)
match: (Sub32 (Add32 x y) x) cond: result: y
match: (Sub32 (Add32 x y) y) cond: result: x
match: (Sub32F x y) cond: result: (SUBSS x y)
match: (Sub64  x y) cond: result: (SUBQ  x y)
match: (Sub64 (Add64 x y) x) cond: result: y
match: (Sub64 (Add64 x y) y) cond: result: x
match: (Sub64F x y) cond: result: (SUBSD x y)
match: (Sub8   x y) cond: result: (SUBL  x y)
match: (Sub8  (Add8  x y) x) cond: result: y
match: (Sub8  (Add8  x y) y) cond: result: x
match: (SubPtr x y) cond: result: (SUBQ  x y)
match: (Trunc16to8  x) cond: result: x
match: (Trunc32to16 x) cond: result: x
match: (Trunc32to8  x) cond: result: x
match: (Trunc64to16 x) cond: result: x
match: (Trunc64to32 x) cond: result: x
match: (Trunc64to8  x) cond: result: x
match: (UGE (FlagEQ) yes no) cond: result: (First nil yes no)
match: (UGE (FlagGT_UGT) yes no) cond: result: (First nil yes no)
match: (UGE (FlagGT_ULT) yes no) cond: result: (First nil no yes)
match: (UGE (FlagLT_UGT) yes no) cond: result: (First nil yes no)
match: (UGE (FlagLT_ULT) yes no) cond: result: (First nil no yes)
match: (UGE (InvertFlags cmp) yes no) cond: result: (ULE cmp yes no)
match: (UGT (FlagEQ) yes no) cond: result: (First nil no yes)
match: (UGT (FlagGT_UGT) yes no) cond: result: (First nil yes no)
match: (UGT (FlagGT_ULT) yes no) cond: result: (First nil no yes)
match: (UGT (FlagLT_UGT) yes no) cond: result: (First nil yes no)
match: (UGT (FlagLT_ULT) yes no) cond: result: (First nil no yes)
match: (UGT (InvertFlags cmp) yes no) cond: result: (ULT cmp yes no)
match: (ULE (FlagEQ) yes no) cond: result: (First nil yes no)
match: (ULE (FlagGT_UGT) yes no) cond: result: (First nil no yes)
match: (ULE (FlagGT_ULT) yes no) cond: result: (First nil yes no)
match: (ULE (FlagLT_UGT) yes no) cond: result: (First nil no yes)
match: (ULE (FlagLT_ULT) yes no) cond: result: (First nil yes no)
match: (ULE (InvertFlags cmp) yes no) cond: result: (UGE cmp yes no)
match: (ULT (FlagEQ) yes no) cond: result: (First nil no yes)
match: (ULT (FlagGT_UGT) yes no) cond: result: (First nil no yes)
match: (ULT (FlagGT_ULT) yes no) cond: result: (First nil yes no)
match: (ULT (FlagLT_UGT) yes no) cond: result: (First nil no yes)
match: (ULT (FlagLT_ULT) yes no) cond: result: (First nil yes no)
match: (ULT (InvertFlags cmp) yes no) cond: result: (UGT cmp yes no)
match: (Xor16 (Xor16 x y) x) cond: result: y
match: (Xor16 (Xor16 x y) y) cond: result: x
match: (Xor16 x (Xor16 x y)) cond: result: y
match: (Xor16 x (Xor16 y x)) cond: result: y
match: (Xor16 x y) cond: result: (XORL x y)
match: (Xor32 (Xor32 x y) x) cond: result: y
match: (Xor32 (Xor32 x y) y) cond: result: x
match: (Xor32 x (Xor32 x y)) cond: result: y
match: (Xor32 x (Xor32 y x)) cond: result: y
match: (Xor32 x y) cond: result: (XORL x y)
match: (Xor64 (Xor64 x y) x) cond: result: y
match: (Xor64 (Xor64 x y) y) cond: result: x
match: (Xor64 x (Xor64 x y)) cond: result: y
match: (Xor64 x (Xor64 y x)) cond: result: y
match: (Xor64 x y) cond: result: (XORQ x y)
match: (Xor8  (Xor8  x y) x) cond: result: y
match: (Xor8  (Xor8  x y) y) cond: result: x
match: (Xor8  x (Xor8  x y)) cond: result: y
match: (Xor8  x (Xor8  y x)) cond: result: y
match: (Xor8  x y) cond: result: (XORL x y)
match: (ZeroExt16to32 x) cond: result: (MOVWQZX x)
match: (ZeroExt16to64 x) cond: result: (MOVWQZX x)
match: (ZeroExt32to64 x) cond: result: (MOVLQZX x)
match: (ZeroExt8to16  x) cond: result: (MOVBQZX x)
match: (ZeroExt8to32  x) cond: result: (MOVBQZX x)
match: (ZeroExt8to64  x) cond: result: (MOVBQZX x)
matchArgType reports an error if printf verb t is not appropriate for operand arg.
matchArgTypeInternal is the internal version of matchArgType.
matchChunk checks whether chunk matches the beginning of s.
matchFile determines whether the file with the given name in the given directory should be included in the package being constructed.
matchGoImport returns the metaImport from imports matching importPath.
matchLen returns the length of the longest prefix shared by x and y.
matchLen returns the number of matching bytes in a and b up to length 'max'.
matchPattern(pattern)(name) reports whether name matches pattern.
matchStructArgType reports whether all the elements of the struct match the expected type.
matchToken is flate's equivalent of Snappy's emitCopy.
matched pair (at least in upper/lower).
matched runes, for OpLiteral, OpCharClass
matcher sanitizes, uniques, and filters names of subtests and subbenchmarks.
matches Runes interpreted as range pair list
matches Runes sequence
matches alternation of Subs
matches any character
matches any character except newline
matches concatenation of Subs
matches empty string at beginning of line
matches empty string at beginning of text
matches empty string at end of line
matches empty string at end of text
matches x as well as x's subdirectories.
matchesName returns whether the function name or file in the location matches the regular expression.
matchfield reports whether the field (x,y,z) matches this build.
matching popdcl in caseblock
materialize all statistics
materialize denominator
materialize numerator
matmult is O(N**3) but testing expects O(b.N), so we need to take cube root of b.N
max across all systems
max depth of stack to record in bucket
max is nil if n is a simple slice expression.
max length of Huffman code
max length of string to search with bitstate
max size of prefix or suffix
max value of ss.count.
maxBadConnRetries is the number of maximum retries if the driver returns driver.ErrBadConn to signal a broken connection before forcing a new connection to be opened.
maxBitStateLen returns the maximum length of a string to search with the backtracker using prog.
maxBits  The maximum number of bits to use for any literal.
maxCodeLength is the maximum (inclusive) number of bits in a Huffman code.
maxContentLen is how much content can be encoded, ignoring the header and 2-byte footer.
maxElems is a lookup table containing the maximum capacity for a slice.
maxFrameSize is the maximum size of a DATA frame we'll write.
maxInt64 is the effective "infinite" value for the Server and Transport's byte-limiting readers.
maxLifetime was changed or db was closed.
maxNCodes is the maximum (inclusive) number of codes in a Huffman tree.
maxParallel is a copy of the parallel flag.
maxPayloadSizeForWrite returns the maximum TLS payload size to use for the next application data record.
maxPostHandlerReadBytes is the max number of Request.Body bytes not consumed by a handler that the server will read from the client in order to keep a connection alive.
maxPtrmaskBytes is the maximum length of a GC ptrmask bitmap, which holds 1-bit entries describing where pointers are in a given type.
maxSendfileSize is the largest chunk size we ask the kernel to copy at a time.
maxSize may go up to this, inclusive
maxSize will be truncated to maxSizeLimit
maxSizeLimit is the maximum table size this encoder supports.
maxSliceCap returns the maximum capacity for a slice.
maxTests is an upper bound on the total number of tests.
maxdomorder returns a value to allow a maximal dominator first sort.
maximum Latin-1 value.
maximum Version in any SymID in Syms
maximum amount of time a connection may be reused
maximum ciphertext payload length
maximum duration before timing out read of the request
maximum duration before timing out write of the response
maximum handshake we support (protocol max is 16 MB)
maximum n for literal n bit code A Writer is an encoder for GC programs.
maximum number of bytes of a UTF-8 encoded Unicode character.
maximum number of elements.
maximum number of jobs to run at once
maximum number of m's allowed (or die)
maximum number of windows callbacks allowed
maximum offset into a array
maximum plaintext payload length
maximum spread of any entry
maximum transmission unit
may be 0 spec: "For a variable x of any type: unsafe.Alignof(x) is at least 1."
may or may not be specified
may return error types nil, or ConnectionError.
maybe call to reflect.Value.Pointer or reflect.Value.UnsafeAddr.
maybe conversion of uintptr to unsafe.Pointer
maybe the max size should move from Decoder to dynamicTable and add should return an ok bool if there was enough space.
maybeConcat implements incremental concatenation of literal runes into string nodes.
maybeConcat reports whether r was pushed.
maybeNextUnit advances to the next unit if this one is finished.
maybeOpenNewConnctions has already executed db.numOpen++ before it sent on db.openerCh.
maybePIC adds -fPIC to the list of arguments if needed.
mayberemovefile removes a file only if it is a regular file When running as a user with sufficient privileges, we may delete even device files, for example, which is not intended.
mbits.setMarked() // Avoid extra call overhead with manual inlining.
mcaches are allocated from non-GC'd memory, so any heap pointers must be specially handled.
mcall can only be called from g stacks (not g0, not gsignal).
mcall returns to the original goroutine g later, when g has been rescheduled.
mcall should not return
mcall switches from the g to the g0 stack and invokes fn(g), where g is the goroutine that made the call.
md5SHA1Hash implements TLS 1.0's hybrid hash function which consists of the concatenation of an MD5 and SHA1 hash.
measureKaratsuba returns the time to run a Karatsuba-relevant benchmark given Karatsuba threshold th.
memBucket or blockBucket
memBytes records the size of the memory pointed at by a memory argument of the given form.
memclr clears n bytes starting at ptr.
memhash_varlen is defined in assembly because it needs access to the closure.
memmove copies n bytes from "from" to "to".
memory allocation routines
memory arg needs no code
memory image of symbol
memory input to the function.
memory profile buckets
memory values can never cse
memrun finds runs of struct fields for which memory-only algs are appropriate.
merely to satisfy error messages in tests
merge adjacent constants in the argument list.
merge from i1 up to but not including i2
merge imported scope with file scope
merge merges another desired state x into d.
merge var with this one
merge with previous range
merge with range we already have
mergeEnvLists merges the two environment lists such that variables with the same name in "in" replace those in "out".
mergePAX merges well known headers according to PAX standard.
mergePassInto merges a single pass into a full sized image.
mergePoint finds a block among a's blocks which dominates b and is itself dominated by all of a's blocks.
mergeRuneSets merges two non-intersecting runesets, and returns the merged result, and a NextIp array.
mergeSym merges two symbolic offsets.
mess with the fifo-ish nature of range
methcmp sorts by symbol, then by package path for unexported symbols.
method (e.g. foo.String())
method call with a receiver.
method set up to the current depth, allocated lazily
method type (without receiver)
method: print receiver
methodDoc prints the docs for matches of symbol.method.
methodName returns the name of the calling method, assumed to be two stack frames above.
methodReceiver returns information about the receiver described by v.
methodValue contains a stack map for use by the runtime
methodValueCall is an assembly function that is the code half of the function returned from makeMethodValue.
methodbyname sorts types by symbol name.
methodref holds the relocations from a receiver type symbol to its method.
methods (for functions, these fields have the respective zero value)
methods always belong to the same package as the base type object
methods are handled by emitIfaceType
methods called as functions
methods declared for this type (not the method set of this type)
methods declared in reached interfaces
methods of *sync.Mutex
methods of reached types
methods on File will return this error when the receiver is nil
methods returns the methods of the non-interface type t, sorted by name.
methods will be printed along with their type nodes for T.Method expressions
methods with blank _ names cannot be found - don't keep them
methodsig is a fully qualified typed method signature, like "Visit(type.go/ast.Node) (type.go/ast.Visitor)".
mheap_ must NOT be locked.
microsec implies time
might as well cache it now
might as well put the pid here
might be OTYPE or OLITERAL
might be part of a floating point move (or might not, but no harm in simulating one instruction too many).
might be part of a large offset address calculation (or might not, but again no harm done).
might be printed form or hex
might fail with SIGILL
might not have executed if statement
min returns the minimum of two integers.
min, max for OpRepeat
minFoldRune returns the minimum rune fold-equivalent to r.
minSize is the minimum table size set by SetMaxDynamicTableSize after the previous Header Table Size Update.
minimal read size bigger than io.Reader stream
minimum and maximum runes involved in folding.
minimum and maximum values
minimum entry index is always 0
minimum function size
minimum number of arguments
minimum number of cases for binary search An exprSwitch walks an expression switch.
minimum possible exponent
minimum size for a function
minimum tophash for a normal filled cell.
minimum, and next value
minimum_instruction_length
minit on C thread called sigaltstack
minor number of character or block device
mips64x doesn't support cgo internal linking either (golang.org/issue/14449)
mirrors the `tt' array in the bzip2 source and contains the P array in the upper 24 bits.
missing closing brace
missing entries - package names are collected in the Uses map - identifiers being declared are collected in the Defs map
missing size and second half of tag, but Extra is best-effort parsing
missing symtab is okay
missing tag and len, but Extra is best-effort parsing
missingKeyAction defines how to respond to indexing a map with a key that is not present.
missingkey: Control the behavior during execution if a map is indexed with a key that is not present in the map.
mkAbs returns an absolute path corresponding to evaluating f in the directory dir.
mkType inserts the "type " prefix.
mkdir makes the named directory.
mkdir(2) itself won't handle the sticky bit on *BSD and Solaris
mkduff generates duff_*.s.
mkpost is run after cgo -godefs by mkall.sh.
mktag returns the string representation for an escape analysis tag.
mkzbootstrap writes cmd/internal/obj/zbootstrap.go:
mkzcgo writes zcgo.go for go/build package:
mkzdefaultcc writes zdefaultcc.go:
mkzversion writes zversion.go:
mmap calls the mmap system call.
mod is the largest prime that is less than 65536.
modInverse returns ia, the inverse of a in the multiplicative group of prime order n.
modSqrtTonelliShanks uses the Tonelli-Shanks algorithm to find the square root of a quadratic residue modulo any prime.
mode enables some options to control symbolization.
modify the tree with missing type names.
modtime is the modification time of the resource to be served, or IsZero().
moduledata records information about the layout of the executable image.
more 64-bit operations
more bytes than rr.Hdr.Rdlength said there would be
more fields might be present here.
more incorrectly placed VARDEF.
more than 9 digits after decimal point, see https://golang.org/issue/6617
more than one receiver
more than one type name - do not associate with any type
more useful string for debugging than fmt's struct printer
morePointers returns true if this word and all remaining words in this object are scalars.
morestack looks like it calls functions, but it switches the stack pointer first.
morestack wrote sched.ctxt on its way in here, without a write barrier.
most comments are less than 10 lines
most of the work is to generate data statements for the constant part of the composite literal.
most recently used at end
most value and branch strings are 2-3 characters long
mov addr reg (including relocation)
mov mem reg (no relocation)
mov reg addr (including relocation)
mov reg mem (no relocation)
mov/movb/movbu R,L(R)
mov/movb/movbu R,O(R)
mov/movb/movbu R,addr
movZero generates a register indirect move with a 0 immediate and keeps track of bytes left and next offset
movb is simulated by the linker when a register other than ax, bx, cx, dx is used, so rewrite to other instructions when possible.
movb/movbu/movh/movhu R,R
move TODO: enable duffcopy for larger copies.
move all of b'c values to c.
move all runnable goroutines to the global queue
move function calls out, to make reorder3's job easier.
move it to the end and shrink e.
move n last words to front
move or arithmetic into partial register.
move spills to a better (outside of loop) block.
move src and dest to the end of block if necessary
move unread bytes to beginning of buffer
move values closer to their uses
moveOrCopyFile is like 'mv src dst' or 'cp src dst'.
moveToFrontDecoder implements a move-to-front list.
movfw freg,freg - truncate float-to-fix
movfw freg,reg - truncate float-to-fix
movw tlsvar,R, initial exec
movw tlsvar,R, local exec
movwf freg,freg - fix-to-float
movwf reg,freg - fix-to-float
mp returns the memRecord associated with the memProfile bucket b.
mprotect, randexec, emutramp disabled
mr is r translated into mask's coordinate space.
msDosTimeToTime converts an MS-DOS date and time into a time.Time.
msb32 returns the 32 most significant bits of x.
msb64 returns the 64 most significant bits of x.
msg is *Request or *Response.
mtime returns the modification time of the file p.
mtime sets ip.Mtime to the current time.
mtime, uid, gid are all zero so repeated builds produce identical output.
mtlf r0 Compute the .plt array index from the entry point address.
mu guards hijackedv, use of bufr, (*response).closeNotifyCh.
mu locks the remaining fields.
mul sets y to y*H, where H is the GCM key, fixed during NewGCMWithNonceSize.
mulBytes returns x*y via grade school multiplication.
mulDenom sets z to the denominator product x*y (by taking into account that 0 values for x or y must be interpreted as 1) and returns z.
multi is used by the test.
multi-line element count
multiExpr is like expr but the result may be a multi-value.
multiSorter implements the Sort interface, sorting the changes within.
multiline no new variables
multipartByReader is a sentinel value.
multiple entry type switch or default
multiple equal bit numbers
multiple or named result(s)
multivalue function returns are ok
must appear within the error
must be Unix time to make sense to user
must be at least 768 so we can read color table
must be before defer Defer unlock so that runtime.Goexit during init does the unlock too.
must be called with db.mu lock held
must be called with v.mu held.
must be done with signal
must be pointer so it gets adjusted during stack copy
must be same size as its table colname + coltype
must be simple ASCII letter (not 'S' or 'K')
must be the last code output by the encoder for an image".
must buffer because tests are running in parallel, and otherwise the output will get mixed.
must build - not up to date
must check literal pool here in case p generates many instructions
must explicitly exclude android for linux
must gives a fatal error if err is not nil.
must happen before processing of switch body, so before recursion.
must have another identifier.
must have exactly one receiver
must keep separate from OMAKE for importer
must match domacholink below
must match previous variable
must match value in ../cmd/compile/internal/gc/walk.go
must not contain any CR's
must not have pointers
must not have race detector calls inserted
must return, not loop
must start with "package"
must stop, either because it is the leading slash or it is a leading ../../..
must update if the calls to l.Printf / l.Print below move
mustBe panics if f's kind is not expected.
mustBeAssignable panics if f records that the value is not assignable, which is to say that either it was obtained using an unexported field or it is not addressable.
mustBeExported panics if f records that the value was obtained using an unexported field.
mustBeNil checks the error and, if present, reports it and exits.
mustCIDR calls ParseCIDR and panics on any error, or if the network is not IPv6.
mustFind is like Find but panics if search fails.
mustLoad is like Load but panics if search fails.
mustNotExist fails if path exists.
mustParseURL parses s to an URL and panics on error.
mustReadRune turns io.EOF into a panic(io.ErrUnexpectedEOF).
mutateHeaderFunc is an optional func to modify extra headers on each outbound request before it's written.
mutex_sleeping means that there is presumably at least one sleeping thread.
mutualCipherSuite returns a cipherSuite given a list of supported ciphersuites and the id requested by the peer.
mutualProtocol finds the mutual Next Protocol Negotiation or ALPN protocol given list of possible protocols and a list of the preference order.
mutualVersion returns the protocol version to use given the advertised version of the peer.
mux receives the values from sender and forwards them onto another channel.
mxx and myy are the number of MCUs (Minimum Coded Units) in the image.
myStringReader implements Read but not ReadRune, allowing us to test our readRune wrapper type that creates something that can read runes given only Read().
mygetgrgid_r is a wrapper around getgrgid_r to to avoid using gid_t because C.gid_t(gid) for unknown reasons doesn't work on linux.
mygetpwnam_r is a wrapper around getpwnam_r to avoid passing a size_t to getpwnam_r, because for unknown reasons passing a size_t to getpwnam_r doesn't work on Solaris.
mygetpwuid_r is a wrapper around getpwuid_r to to avoid using uid_t because C.uid_t(uid) for unknown reasons doesn't work on linux.
mysleep returns the absolute start time in ms.
n bytes of s are valid
n can be directly represented in the read-only data section.
n is call to interface method.
n is length of comment
n is power of two, can mask
n is the bit length of limit.
n is the node for the interface expression.
n is the number of DATA bytes we're allowed to send.
n must always be between 1 and 8.
n must be a defer or go node that has already been walked.
n must be a power of 2.
n must be a power of two.
n must be a slice expression.
n must be a valid index for x.mant.
n must be an ONAME (or an ODOT sequence with an ONAME base).
n must be an boolean constant.
n must be an integer constant.
n must be an integer or rune constant.
n must not be negative.
n relocations - ignore
n.List has no meaning anymore, clear it to avoid erroneous processing by racewalk.
n.Op is one of OEQ, ONE, OLT, OGT, OLE, OGE
n.Right is the expression being ranged over.
n.Sym is a field/method name, not a variable.
n1 is a register, and cgen_norm frees it.
n1 might be a 64-bit constant, even on 32-bit architectures, but it will be represented in 32 bits.
nSwitchLabel is the number of switch labels generated.
nUnreadable is the number of bytes to back up i after overshooting.
nacl couldn't do this before.
nacl doesn't have external network access.
nacl fake time support - time in nanoseconds since 1970
nacl was previous failing to reuse an address.
naclFile is the fileImpl implementation for a Native Client file descriptor.
name as it appears on command line
name generator for static temps
name is '/'-separated, not filepath.Separator.
name is a freeform string identifying the test and the file in which the expected results will be stored.
name is an encoded type name with optional extra data.
name is empty for embedded fields
name is the (expected) name of the package.
name must be a parameter name
name of binary to invoke command
name of header file entry
name of imported package
name of init function
name of ith field of the struct
name of macro that should not be expanded
name of the item being exemplified
name of the template represented by the tree.
name of the top-level template during parsing, for error messages.
name prefix for identifiers, default yy
name temporary executable for first go file
name that can be used to refer to type
name used in Go referring to package C
name used in generated Go
name will be updated once we know it.
nameList returns a list of names for sequential DNS queries.
nameOf returns the function (foo) or method name (foo.bar) for the given function declaration.
nameSpace is the data structure shared by all templates in an association.
named exe for Windows, but harmless elsewhere
named fields are separated with a blank from the field type
named types and equal underlying types
named types from other files are defined only by those files
named types that we have seen already, allocated lazily
namedAuto returns a new AUTO variable with the given name and type.
namei translates a file system path name into an inode.
names and types newname is used before declared oldname is used after declared
names of symbol (many if symbol was dedup'ed)
nanotime when tracing was started
nanotime when tracing was stopped
nanotime() is a poor approximation of CPU ticks that is enough for the profiler.
nanotime() of last STW debug.gctrace heap sizes for this cycle.
nanotime() of last change to gomaxprocs
nanotime() of phase start
nat value to be converted
native_client/src/trusted/service_runtime/include/bits/mman.h.
native_client/src/trusted/service_runtime/include/bits/stat.h
native_client/src/trusted/service_runtime/include/sys/dirent.h
native_client/src/trusted/service_runtime/include/sys/errno.h The errors are mainly copied from Linux.
native_client/src/trusted/service_runtime/include/sys/fcntl.h
native_client/src/trusted/service_runtime/include/sys/stat.h native_client/src/trusted/service_runtime/include/machine/_types.h
nb it's the key not the value
nb unmodified: we just loaded 8 bits, and the next iteration will consume 8 bits, leaving us with the same nb the next time we're here.
ncap is the number of captures.
necessary to trigger the deadlock
need "pack op archive" at least.
need at least tag and size
need hour, minute, second
need month, day, year
need post part of split
need the exact location of the oldname when its relative to determine if its a directory
need to align DWORDs on 8-byte boundary.
need to iterate over f.Blocks without range, as we might need to split critical edges on newly constructed blocks
need to send a 100-continue
need twice as many entries as we use, for the nonexistence check
needKeyUpdate reports whether map overwrites require the key to be copied.
needed for array size
needed for binary.ReadVarint in rawInt64
needed for re-marshaling tests
needkeyupdate reports whether map updates with t as a key need the key to be updated.
needm is called when a cgo callback happens on a thread without an m (a thread not created by Go).
needs extra instruction
needs only sizeof uint64, but must align the stack
needs surrogate sequence
needs to be done before compile...
needs to be zeroed before allocation
needsPointerCheck returns whether the type t needs a pointer check.
needsSniff reports whether a Content-Type still needs to be sniffed.
needsSniff returns true with an empty response.
negateClass overwrites r and returns r's negation.
negative length indicates unnamed parameters
negative power of 2, like -16
negative zero is a good test because: 1) 0 and -0 are equal, yet have distinct representations.
negotiated next protocol (from Config.NextProtos)
negotiated protocol was advertised by server
neither a method call nor a qualified ident
nested-mime is the body part of a multipart/mixed email with boundary e89a8ff1c1e83553e304be640612
nestedCall calls into C, back into Go, and finally to f.
nestedCall calls into Windows, back into Go, and finally to f.
nesting depth of ( ) exprs
net records the state of the network.
net/http uses HTTP/1.1 for requests, so write requests manually
netGo and netCgo contain the state of the build tags used to build this binary, and whether cgo is available.
net_op must be the same as beginning of net.operation.
netbsdMStart is the function call that starts executing a newly created thread.
netsh does not output netmask for ipv6, so ignore ipv6 mask
never asked this before: start with 0.
never generates a from3
never read with high bit set
never set so cannot happen
new block should be ok.
new block used to remove critical edge
new data is significantly smaller or larger then existing buffers - allocate new ones
new is the implementation of New, without the lock.
new name: p.T or *p.T
new package-level const decl
new package-level var decl
new type being defined with name s.
new(T) (no argument evaluated yet)
newAddr returns a new(Addr) initialized to x.
newAllocBits is used to provide newly initialized spans allocation bits.
newAllocBits returns a pointer to 8 byte aligned bytes to be used for this span's alloc bits.
newArena allocates and zeroes a gcBits arena.
newBitReader returns a new bitReader reading from r.
newBitState returns a new bitState for the given prog, or notBacktrack if the size of the prog exceeds the maximum size that the backtracker will be run for.
newBlock allocates a new Block of the given kind and places it at the end of f.Blocks.
newBlock allocates a new block, from hc's free list if possible.
newBucket allocates a bucket with the given type and number of stack entries.
newCancelCtx returns an initialized cancelCtx.
newCipher calls the newCipherGeneric function directly.
newCipherGeneric creates and returns a new cipher.Block implemented in pure Go.
newCondAddrEncoder returns an encoder that checks whether its value CanAddr and delegates to canAddrEnc if so, else to elseEnc.
newCounter creates a new counter expression of the appropriate form.
newEntry creates an entry from a http.Cookie c.
newEscaper creates a blank escaper for the given set.
newFD adds impl to the file descriptor table, returning the new file descriptor.
newFile returns a new File with the given file handle and name.
newFn parses string s and return created function Fn.
newFsys creates a new file system.
newGraph summarizes performance data from a profile into a graph.
newHuffmanTree builds a Huffman tree from a slice containing the code lengths of each symbol.
newIdentCmd produces a command containing a single identifier node.
newInode creates a new inode.
newLiteral returns a new OpLiteral Regexp with the given flags
newMTFDecoder creates a move-to-front decoder with an explicit initial list of symbols.
newMTFDecoderWithRange creates a move-to-front decoder with an initial symbol list of 0...n-1.
newMapping creates a mappingTable for a profile.
newMarkBits calls newArena when needed
newMarkBits returns a pointer to 8 byte aligned bytes to be used for a span's mark bits.
newPackage returns a new Package that will invoke gcc with the additional arguments specified in args.
newPeekReader returns a peekReader that wraps r.
newPkgDot returns an ast.Expr referring to "pkg.name" at position pos.
newPrinter allocates a new pp struct or grabs a cached one.
newRawAttributes converts AttributeTypeAndValueSETs from a template CertificateRequest's Attributes into tbsCertificateRequest RawAttributes.
newReader returns a new pseudorandom generator that seeds itself by reading from entropy.
newScanState allocates a new ss struct or grab a cached one.
newSparseFileReader creates a new sparseFileReader, but validates all of the sparse entries before doing so.
newSparseMap returns a sparseMap that can map integers between 0 and n-1 to int32s.
newSparseSet returns a sparse set that can store at least up to n integers.
newSparseSet returns a sparseSet that can represent integers between 0 and n-1
newSparseTree creates a sparseTree from a block-to-parent map (array indexed by Block.ID)
newStack allocates a new stack of size n.
newTestJar creates an empty Jar with testPSL as the public suffix list.
newTypeEncoder constructs an encoderFunc for a type.
newTypeObject allocates a gobType for the reflection type rt.
newValue allocates a new Value with the given fields and places it at the end of b.Values.
newValue0 adds a new value with no arguments to the current block.
newValue0A adds a new value with no arguments and an aux value to the current block.
newValue0I adds a new value with no arguments and an auxint value to the current block.
newValue1 adds a new value with one argument to the current block.
newValue1A adds a new value with one argument and an aux value to the current block.
newValue1I adds a new value with one argument and an auxint value to the current block.
newValue2 adds a new value with two arguments to the current block.
newValue2I adds a new value with two arguments and an auxint value to the current block.
newValue3 adds a new value with three arguments to the current block.
newValue3I adds a new value with three arguments and an auxint value to the current block.
new_name_list ntype oliteral
newarray allocates an array of n elements of type typ.
newextram allocates an m and puts it on the extra list.
newfuncname generates a new name node for a function or method.
newlines affect the current state (p.impliedSemi) and not the state after printing arg (impliedSemi) because comments can be interspersed before the arg in this case
newlines guarantees there are n newlines at the end of the buffer.
newname returns a new ONAME Node associated with symbol s.
newosproc0 is a version of newosproc that can be called before the runtime is initialized.
newparser returns a new parser ready to parse from src.
newprocs will be processed by startTheWorld
newstack is doing a scan for us right now.
next MAC algorithm used to save allocating a new buffer for each MAC.
next character (or 0, if at EOF)
next encryption state
next float32 - too large
next float64 - too large
next four new in Dwarf v3
next free action table position
next gc (in heap_live time)
next heap bitmap byte to write
next in simple case folding orbit
next instruction in function code
next is the index just after the end of the memory run.
next is the queue of directories to examine in the next pass.
next item is on the same line as the comment (which must be a /*-style comment): separate with a blank instead of a tab
next m waiting for lock
next points to first jump in stride
next range: start looking where this range ends
next reads and returns the next Unicode character.
next reports unexpected BOMs - don't repeat
next returns the heapBits describing the next pointer-sized word in memory.
next returns the index in text of the first occurrence of the pattern.
next returns the next rune in the input.
next returns the next token.
next span in list, or nil if none
next token must be a semicolon
next value of the counter (big endian)
next write offset in arr
next: Holds information to be used in the next GC cycle.
nextBarrierPC returns the original return PC of the next stack barrier.
nextByte is like peekByte but advances beyond the returned byte.
nextCond gives the setting for the empty-width flags after c.
nextCount records the number of times an embedded type has been encountered and considered for queueing in the 'next' slice.
nextEmit is where in src the next emitLiteral should start from.
nextFree returns the next free object from the cached span if one is available.
nextFreeFast returns the next free object if one is quickly available.
nextFreeIndex returns the index of the next free object in s at or after s.freeindex.
nextItem returns the next item from the input.
nextLine is a wrapper around bufio.Reader.ReadString.
nextMarkBitArenaEpoch establishes a new epoch for the arenas holding the mark bits.
nextNonSpace returns the next non-space token.
nextPairFreq isn't valid until we generate two more values in the level below
nextProtoOnce guards initialization of TLSNextProto and h2transport (via onceSetNextProtoDefaults)
nextSample returns the next sampling point for heap profiling.
nextSampleNoFP is similar to nextSample, but uses older, simpler code to avoid floating point.
nextSeqNum is the next sequence number assigned to a new cookie created SetCookies.
nextStdChunk finds the first occurrence of a std string in layout and returns the text before, the std string, and the text after.
nextToken gets the next token delimited by a newline.
nextValue splits data after the next whole JSON value, returning that value and the bytes that follow it as separate slices.
nf: no flags clobbered
nil - nothing of the above.
nil cases do not compete
nil channel is never ready
nil channel select tests already handle select on nil channel
nil entry means already declared position encoding
nil except for some tests
nil for Go 1.2 and later binaries
nil for no proxy, else full proxy URL
nil for non-stream frames.
nil for objects in the Universe scope and labels
nil if declaration hasn't been seen yet
nil if not scheme https
nil if the entry is a file
nil is a predeclared identifier representing the zero value for a pointer, channel, func, interface, map, or slice type.
nil it out and handle it separately before putting it back.
nil map appears empty
nil means use the outer typ variable instead
nil on its own has no type ...
nil only for specialized impls readLoop goroutine fields:
nil pointer special case
nil slice Constant-like things
nil slice is just a 0-element slice.
nil unless directory being read
nil until received by rch
nil until received from c
nil, ast.BadExpr, ast.KeyValueExpr
nil, err value, or string substring
nilCheck generates nil pointer checking code.
nilRegisterNumber is the register number function for architectures that do not accept the R(N) notation.
nilcheck pass will remove the nil checks and log them appropriately, so don't mess with them here.
nilcheckelim eliminates unnecessary nil checks.
nilcheckelim generates sequences of plain basic blocks
nilcheckelim relies on opt to rewrite user nil checks
nilwalkfwd walked forward forever on the instruction loop following the dereference.
ninit logically runs at a different loopdepth than the rest of the for loop.
nlen already initialized
nlen is length of suffix
nlo returns the number of leading ones.
nlz returns the number of leading zeros in x.
nlz returns the number of leading zeros.
nlz64 returns the number of leading zeros in x.
nm code (T for text, D for data, and so on)
nname was set by caninl when lazily typechecking inlined bodies, some re-exported ones may not have been typechecked yet.
no *.go files, not an error
no 0-element slices can be read from or written to
no A records, a few AAAA records
no CRs in raw string literals
no Chroot or changed UID/GID), double-check existence of the directory we want to chdir into.
no MAC address for loopback interfaces
no added Go-specific commands
no alternative URL in words list, use match instead
no argument names on function signature, and no "noescape"/"nosplit" tags
no blank after line break
no char read yet, not EOF initialize public fields
no comment text on the first line: reduce prefix by up to 3 blanks or a tab if present - this keeps comment text indented relative to the /* and */'s if it was indented in the first place
no comment was written - we should never reach here since intersperseComments should not be called in that case
no comments so no need for comma position
no decimal exponent contribution
no dedicated zero register
no defaultlit for left the outer context gives the type
no doc associated with the spec, use the declaration doc, if any
no element must have a key
no embedded interfaces
no embedded interfaces with gc compiler
no errors, decimal point
no escape allowed on windows.
no existing block, so allocate a new block to place on the edge
no explicit action, LHS has value
no explicit type: use type of next parameter
no extra indentation in multi-line lists
no floating point in note handlers on Plan 9
no indentation added inside raw strings
no indentation removed inside raw strings comments
no inlining in this test, so just checking that non-inlined works.
no leading http://server
no leading slash on path should prepend slash on String() call
no local work, check that there are no spinning/idle M's, otherwise our help is not required
no match - record new forward jump
no matching tag found.
no more characters in this run
no more pointers in this object
no name or blank name - ignore the type
no name, but permanently undefined
no need for a finalizer anymore
no need for a temporary
no need to deal with runes
no need to emit a potentially confusing error
no need to look for a header outside the file
no need to queue, key is already bad
no need to re-import if the package was imported completely before
no need to try to resolve again
no need to use nat.scan for exponent digits since we only care about int64 values - the from-scratch scan is easy enough and faster
no new fds can be created while we hold the ForkLock for writing.
no ordering requirements
no parenthesis needed
no partial digit remaining, just advance
no point in reading to EOF.
no point receiving if write-side broken or closed
no point sending if read-side closed or broken
no records, non-existent domain
no records, transport timeout
no registers to speak of
no running goroutines
no semicolons required
no sender available: block on this channel.
no solution found for this board
no space in host name please
no split stack, so no use of m or g
no static check is required if T is an interface spec: "If T is an interface type, x.(T) asserts that the dynamic type of x implements the interface T."
no successors, control value generates a panic transient block state used for dead code removal
no successors, control value is memory result
no successors, jumps to b.Aux.(*gc.Sym)
no suitable comment found
no test source available - create one from scratch
no trailer and closing the connection next.
no type docs for anonymous types
no write barrier here
no, left, right, binary assoc.
no-op (empty statement)
noDialClientConnPool is an implementation of http2.ClientConnPool which never dials.
noDialH2RoundTripper is a RoundTripper which only tries to complete the request if there's already has a cached connection to the host.
noEOF converts io.EOF to io.ErrUnexpectedEOF.
noVCSSuffix checks that the repository name does not end in .foo for any version control system foo.
no_proxy ".foo.com" matches "bar.foo.com" or "foo.com"
no_proxy "foo.com" matches "bar.foo.com"
nodarg does something that depends on the value of fp (this was previously completely undocumented).
node 0 is the root of the tree.
node for the concrete type of the variable being switched on
node for the expression being switched on
node for the hash of the type of the variable being switched on
node index in list of nodes
node is an entry on a profiling report.
node n depends on node d
node n, which was returned by typedcl0 is being declared to have uncompiled type t.
node was simplified - stop walk (there are no subnodes to simplify)
nodeList returns the list of nodes of the AST n in source order.
nodeMap maps from a node info struct to a node.
nodeSize determines the size of n in chars after formatting.
nodeSize invokes the printer, which may invoke nodeSize recursively.
nodeSorter is a mechanism used to allow a report to be sorted in different ways.
nodes are prioritized by number of incoming dependencies (1st key) and source order (2nd key)
nodes contains all the non-leaf nodes in the tree.
nodes for method calls.
nodes is an ordered collection of graph nodes.
nodes with .Opt initialized
nodesPerSymbol classifies nodes into a group of symbols.
nodpc is the PC of the caller as extracted by getcallerpc.
noescape hides a pointer from escape analysis.
noescape is inlined and currently compiles down to a single xor instruction.
noescape is the identity function but escape analysis doesn't think the output depends on the input.
non fncalls and tempnames assigned to stack
non nil once DLL is loaded
non-PC-specific runtime support data
non-authority with path
non-blocking - returns list of goroutines
non-blocking netpoll returns list of goroutines linked by schedlink.
non-constant conversion
non-constant shift - lhs must be an integer
non-constant shift expressions
non-constant shift with constant lhs
non-escaping closures passed to function call should die on return
non-escaping partial functions passed to function call should die on return
non-escaping temp to use, if any.
non-interface comparisons
non-meta packages only.
non-method call to method
non-nil (Response or Request) value means read trailer
non-nil for Goexit during panic.
non-nil if expecting DATA frames
non-nil if http2 wired up TODO: tunable on max per-host TCP dials in flight (Issue 13957)
non-nil if we have a HTTP entity message body
non-nil means closed.
non-nil only if closed is true
non-nil to flag presence
non-nil version of ConnPool
non-nil when data is buffered
non-standard back door
non-standard but still sent by libcurl and rejected by e.g. google
non-standard stack size - free it.
non-zero if handler set a Content-Length header
nonDeadline and noCancel are just zero values for readability with functions taking too many parameters.
nonEmptyInterface is the header for a interface value with methods.
nonZeroRandomBytes fills the given slice with non-zero random octets.
nonceSize contains the expected size of the nonce, in bytes.
nonnilptr returns the Value, if any, that is non-nil due to b being the successor block of an OpIsNonNil or OpNilCheck block for the value and having a single predecessor.
nonzero means new prec.
nop, sometimes overwritten by ld r2, 24(r1) when dynamic linking
nor_ssa calculates NOR(a, b).
normBase retruns the last element of path.
normVolumeName is like VolumeName, but makes drive letter upper case.
normal call but no return
normal call of c function pointer
normal case -- make a slice of all remaining arguments and pass it to the ddd parameter.
normal case, not tripping over unsigned 64
normal return or early exit
normal string,"quoted-field"
normalise program output
normalize (remove leading 0's)
normalize denominator
normalize file mentions in error itself
normalize mantissa and determine initial exponent contributions
nosplit because it is used during write barriers and must not be preempted.
nosplit for use in linux startup sysargs go:nosplit
not Go 1.2 until proven otherwise
not Returns the boolean negation of its single argument.
not a GobEncoder - should give us errors
not a Plan 9 a.out file
not a constant but used in exported function bodies
not a loopback address
not a special composit literal assignment
not a write to the variable
not actually needed - REGSP is assumed if no reg is provided
not all comments on the same line
not allowed to clobber flags
not an exported field
not an int64Val and thus not exact
not called on 32-bit systems.
not called on 64-bit systems.
not cancelable with CancelRequest
not counting goroutines for leakage in -short mode
not dynamic, so no libraries
not enough bits for fractional mantissa
not enough bytes: read some more, but first save away token text if any
not enough data in buffer
not enough space anywhere
not enough space at end
not exact, because it's hard to check for the stack register in portable code.
not exit 2: succeeded at 'go help cmd'.
not exit 2: succeeded at 'go help'.
not generated anymore, but delete the file if we see it
not halfway - digit tells all
not halfway - digit tells all (x.mant has no trailing zeros)
not in Header map anyway
not in a package-level init expression
not in cache, lock and retry
not known to be empty
not legal according to spec
not match as a part of barbaz.com
not match as a part of foobar.com
not match as prefix as address
not match as suffix of address
not match because NO_PROXY have a '.'
not necessarily safe to reuse
not ok to fail first instruction
not reached if body of request isn't closed
not really worth being thorough
not relevant for s390x
not returns the Boolean negation of its argument.
not splitting the stack will overflow.
not strictly needed for the test
not supported on Plan 9 Link creates newname as a hard link to the oldname file.
not sure why this barfs
not the first group - add separator
not the last entry - swap in last element and shorten list by 1
not the last line - write newline
not the same as locally declared T1
not touched by escflood
not used by gc (only appears in packages with errors)
not used frequently enough to cache entire token.Position
not yet: "slice: reuse cap" "slice: omit check for 2nd index"
not yet: "slice: reuse len" "slice: omit check for 2nd index"
notSpace is the default scanning function used in Token.
note lack of an exit block
note multiple colons.
note that the handbook often misleadingly shows 66/f2/f3 in `opcode'.
note that we still have a timing side-channel in the MAC check, below.
note that we've consumed some bytes
note this is the runtime representation of the compilers arrays.
note: REGMIN, not FREGMIN
note: SetUnhandledExceptionFilter handler won't be called, if debugging.
note: b is correct (expected) value, a is actual value.
note: orderexpr knows this cutoff too.
note: strace gets confused if we use CLONE_PTRACE here.
note: wrong for array of pointers, corrected below
noteBodies returns a list of note body strings given a list of notes.
noteUnusedDriverStatement notes that si is no longer used and should be closed whenever possible (when c is next not in use), unless c is already closed.
notesleep/notetsleep are generally called on g0, notetsleepg is similar to notetsleep but is called on user g.
notest is the action for testing a package with no test files.
notetsleep is like notesleep but wakes up after a given number of nanoseconds even if the event has not yet happened.
nothing available in cached bits grab the next 8 bytes and try again.
nothing more to write
nothing to do - no exec
nothing to do but read the data.
nothing to do for now
nothing to do if x is not an identifier or the blank identifier
nothing to do w/o a legal declaration
nothing to do, the relocation will be laid out in pereloc1
nothing to read - good
nothing to run, just make sure this compiles
nothing to run, just make sure this compiles.
nothing wrong with lit
notification already pending
notify is the ticket number of the next waiter to be notified.
notifyList is a ticket-based notification list used to implement sync.Cond.
notifyListAdd adds the caller to a notify list such that it can receive notifications.
notifyListNotifyAll notifies all entries in the list.
notifyListNotifyOne notifies one entry in the list.
notifyListWait waits for a notification.
now a no-op, unlike in test6.
now an rvalue not an lvalue
now consider the desired symbol.
now give these stack frames to cgo callbacks
now is the current time and is compared to c.Expires to determine deletion of c.
now legal according to spec
now loop over productions derived from c
now ready for import comment, a // or /* */ comment beginning and ending on the current line.
now that gc is done, kick off finalizer thread if needed
now that right is done, typecheck the left just to get it over with.
now that runtime is initialized, GC is okay
now the map is not empty and range triggers an event should work without this (as in other tests) so it is suspicious if this test passes and others don't
now the other direction, byte in field to string in field
now total number of bits to copy If the number of bits being repeated is small, load them into a register and use that register for the entire loop instead of repeatedly reading from memory.
now we know debuglock is held and holding up mp.locks for us.
now, compute the pempty array, to see which nonterminals derive the empty string set pempty to WHOKNOWS
now, find a place for the elements from p to q, inclusive
now, find amem place for it
now, go through and put gotos into tystate
now, go through the loop, closing each item
now, look at productions, marking nonterminals which derive something
now, look at the nonterminals, to see if they are all OK
now, output nonterminal actions
now, prepare to put the shift actions into the amem array
now, reflect transitivity
now, the main state generation loop first pass generates all of the states later passes fix up lookahead could be sped up a lot by remembering results of the first pass rather than recomputing
nowritebarrier is only advisory here.
nr is nil when assigning a zero value.
nr is the array being converted to a slice
nsec specifies a non-negative nanosecond offset within the second named by Seconds.
nslookup stderr output contains also debug information such as "Non-authoritative answer" and it doesn't return the correct errcode
nssConf represents the state of the machine's /etc/nsswitch.conf file.
nssCriterion is the parsed structure of one of the criteria in brackets after an NSS source name.
nto returns the number of trailing ones.
nto should be the the number of bits we've shifted on, with an extra bit at iter 32
ntz returns the number of trailing zeros.
nudge returns the context that would result from following empty string transitions from the input context.
num is 0 (and isnum is false) if no number present.
num returns the maximum ID ever returned + 1.
num+ptr is technically okay but still flagged: write ptr+num instead.
numBytes returns the number of bytes left to read in the current file's entry in the tar archive, or 0 if there is no current file.
numBytes returns the number of bytes left to read in the file's data in the tar archive.
numBytes returns the number of bytes left to read in the sparse file's sparse-encoded data in the tar archive.
numClosed is an atomic counter which represents a total number of closed connections.
numCodes is 19, so nclen is always valid.
numEntries is trusted after this since a potential attacker must have committed resources proportional to what this library used.
numEntries is trusted now.
numFileEntries is the length of fileEntries.
numLiterals      The number of literals in literalEncoding numOffsets       The number of offsets in offsetEncoding litenc, offenc   The literal and offset encoder to use
numLiterals  The number of literals specified in codegen numOffsets   The number of offsets specified in codegen numCodegens  The number of codegens used in codegen
numMRTests is the number of Miller-Rabin primality tests that we perform.
numPrepares assumes that db has exactly 1 idle conn and returns its count of calls to Prepare
numRenegotiations is the number of times that the connection will be renegotiated.
numWaiting is the number tests waiting to be run in parallel.
numWrites is the number of writes that have been done.
number of InstCapture insts in re
number of MOV/ADD blocks
number of Poller goroutines to launch
number of Word-size binary values treat as a monolithic block
number of Write calls in current implementation
number of arguments written to inst
number of arguments, if -1, then this operation has a variable number of arguments
number of arm exception taken
number of bitmaps, to fill in later
number of bits in b at next read
number of bits in each bitmap
number of bits in vector
number of bits that led to the output of sym
number of bytes allocated, freed
number of bytes at argp
number of bytes cleared by each MOV instruction
number of bytes encoded in b
number of bytes encoded in b The output buffer b is initialized on demand, the first time a character differs.
number of bytes in buf
number of bytes in the current line
number of bytes of the format string consumed.
number of bytes per line
number of bytes read so far
number of bytes that can be generated
number of bytes written in body
number of bytes, total
number of callback parameters
number of calls to syncXXX without progress Non-syntactic parser control
number of capturing groups seen
number of cgo calls currently in progress
number of cgo calls in total
number of characters for the three classes of number padding
number of clears per block
number of codes in Huffman meta-code
number of data bytes described by one heap bitmap byte all mark/pointer bits in a byte
number of departing readers
number of deps yet to complete
number of digits before and after decimal point
number of digits of fractional second
number of digits used
number of dots in name to trigger absolute lookup
number of entries of preRLE used.
number of entries this disk
number of entries total
number of entries w/ unique type
number of errors assigned token type values
number of errors encountered
number of expected fields per record
number of files processed
number of filtered entries
number of final STOSQ instructions
number of floating point registers
number of frees Main allocation heap statistics.
number of frees Statistics about malloc heap.
number of garbage collections
number of general purpose registers
number of general registers
number of hashes added
number of idle m's waiting for work
number of indirections to reach the base type
number of initializers must match
number of inodes created
number of iterations in the previous run
number of last reduction of a state
number of locked m's waiting for work
number of m's that have been created
number of mantissa words
number of markroot jobs
number of new variables
number of newlines between source text
number of nodes this node depends on
number of non-import declarations in the file
number of object in the span.
number of objects allocated, freed
number of packages processed
number of pages in span
number of pages released to the os
number of parameters that have a name and type
number of pending readers
number of pointer lookups
number of pointers followed
number of productions
number of scopes must match
number of signals in sigtable array
number of sockets accept failed
number of sockets accepted
number of sockets close failed
number of sockets closed
number of sockets connect failed
number of sockets connected
number of sockets listen failed
number of sockets listened
number of sockets open failed
number of sockets opened
number of swaps allowed
number of the disk with the start of the central directory
number of the disk with the start of the zip64 end of central directory
number of times move is called move tests if there is a peg at position pos that can jump over another peg in direction dir.
number of tiny allocs not counted in other stats The rest is not accessed on every malloc.
number of types defined
number of unprocessed bits in w convert less-significant words (include leading zeros)
number of unread bytes for current file entry
number of unwritten bytes for current file entry
number of valid bits in *endp
number of words to process
numberBlock assigns entry and exit numbers for b and b's children in an in-order walk from a gappy sequence, where n is the first number not yet assigned or reserved.
numberBlock returns the smallest number not yet assigned or reserved (i.e., the exit number of the last block visited, plus two, because last.exit+1 is a reserved value.)
numerator, denominator
numeric conversion : error msg
o must be a slicing op.
obj can handle this OS for all architectures.
obj is the start of an object with mark mbits.
obj must be one of lhs
obj must not contain any non-nil pointers.
obj must point to the beginning of a heap object.
obj package to import for this arch.
obj should be start of allocation, and so must be at least pointer-aligned.
obj.Parent.Parent is the surrounding scope.
objDecl type-checks the declaration of obj in its respective (file) context.
objReader reads Go object files.
objSym represents a symbol identified from a binary.
objTool implements plugin.ObjTool using Go libraries (instead of invoking GNU binutils).
objWriter writes Go object files.
objdump is fully cross platform: it can handle binaries from any known operating system and architecture.
objdumpManualTests holds test cases that will be run by TestObjdumpARMManual.
objdumpManualTests holds test cases that will be run by TestObjdumpManual.
object denoted by x.f
object file containing symbol
object id (see Id below) String returns a human-readable string of the object.
object is still live: keep special record
object pointers and token positions always match
object represented by this node
objects defined in Universe scope have no package
ocomma parses an optional comma.
octant modulo 2Pi radians (360 degrees)
octant modulo 2Pi radians (360 degrees) reflect in x axis
odd but those are the rules.
odd exp, double x to make it even
of most recently read character
of type *OptionalHeader32 or *OptionalHeader64
of uncompressed string
off in f where Mach-O begins
off is the current offset in the DWARF line section.
off is the offset to the beginning of the pc-value table, and entry is the start PC for the corresponding function.
off1 is end of header off2 is end of rr
offset code word extra bits.
offset from header to first aux
offset from this aux to next
offset from this header to next
offset from top of text section
offset in f where ELF begins
offset in input file (for debugging and error reporting)
offset includes 4-byte length at beginning of table
offset into .debug_str
offset into indirect symbol table
offset into symbol for funcdata pointer
offset known to liblink
offset known to runtime/cgo
offset of Entry in DWARF info
offset of _type in runtime.itab
offset of fun field in runtime.itab
offset of hash in runtime._type
offset of ith field of the struct
offset of return values.
offset of start of central directory with respect to the starting disk number
offset of start of central directory with respect to the starting disk number zip64 end of central directory locator
offset of string from beginning of load
offset plus indirect of a register, such as 8(SP).
offset returns the current buffer offset.
offset returns the current offset.
offset to *_rtype in previous module
offset to array of reflect.method values
offset to write into suffix
offset too large, add to register instead.
offset translates a token position into a 0-indexed byte offset.
offset will fit in floating-point load/store
offset within struct, in bytes
offset within the production
offset, starting at 0
offsetToUnit returns the index of the unit containing offset off.
offsetof returns the offset of the field specified via the index sequence relative to typ.
oidInAttributeTypeAndValue returns whether a type with the given OID exists in atv.
oidNotInExtensions returns whether an extension with the given oid exists in extensions.
ok - all fields have values
ok - not same type, but both pointers, one or the other is unnamed, and same element type, so assignable.
ok - not specified in RFC 3986 but left alone by modern browsers
ok - p.From will be a reg or a constant
ok - percent encoded, will decode
ok - satisfies empty interface
ok Something that looks like an error interface but isn't, such as the (*T).Error method in the testing package.
ok TODO(rsc): 64-bit mode not tested, probably not working.
ok implicit is still not
ok indicates whether the command exited successfully.
ok to access fset concurrently
ok to continue even if check.arguments reported errors
ok to continue in presence of error
ok to continue with error
ok to continue, but the variable initialization order will be incorrect at this point since it assumes no cycle errors
ok to filter these methods early because any conflicting method will be filtered here, too - thus, removing these methods early will not lead to the false removal of possible conflicts
ok to remain fraction
ok, constant is untyped
ok, not an error method.
ok: maybe someone wants to see the pointer
ok: maybe someone wants to see the type Bug: used to recur forever.
okPrintfArg compares the formatState to the arguments actually present, reporting any discrepancies it can discern.
okVerb verifies that the verb is present in the list, setting s.err appropriately if not.
old form, whole register
old name: p.T or *p.T
old stacks are mapped noaccess to detect use after free
oldname returns the Node that declares symbol s in the current scope.
omit unsafe etc and actions for other shared libraries
on 386, rewrite scattered 4/1 relocation and some scattered 2/1 relocation into the pseudo-pc-relative reference that it is.
on OCALLxxx, list of dummy return values
on PPARAM it means something different.
on Principles of Prog.
on arm, lock in the div/mod helpers too
on failure, panic by calling panicdottype
on stack but not sure exactly where
on stack, write barrier not needed after all
on success, leaves usable address in a.
on success, return idata field
on windows, if the file is Open, start cannot access it.
onExitFlushLoop is a callback set by tests to detect the state of the flushLoop() goroutine.
once done, all operations fail with ErrTxDone.
once notewakeup has been called, the notesleep will return.
once the dust settles, try to move some code to libmach, so that other linkers and ar can share.
onceSetNextProtoDefaults configures HTTP/2, if the user hasn't configured otherwise.
onceSetNextProtoDefaults initializes TLSNextProto.
one M is currently running
one Range for each iteration
one case -- reuse OCASE node
one digit before and number of digits after decimal point
one element, for deterministic output
one method needed by Interface, missing from Concrete
one of httptest's Server cert names
one of pidle/prunning/...
one of the cases must be true from the above.
one of the function calls happens after assigning to b.
one of the subbenchmarks does not have bytes set.
one per case (in order of appearance)
one send per goroutine
one step newton iteration to 53 bits with error less than 0.667ulps
oneBitCount is indexed by byte and produces the number of 1 bits in that byte.
oneLineFunc prints a function declaration as a single line.
oneLineTypeDecl prints a type declaration as a single line.
oneLineValueGenDecl prints a var or const declaration as a single line.
onePassCopy creates a copy of the original Prog, as we'll be modifying it
onechar lexes a single character within a rune or interpreted string literal, handling escape sequences as necessary.
onepass program or nil
onepass regexp is anchored
onepass runs the machine over the input starting at pos.
only GC when we ask for GC
only Responders are implemented.
only allowed pointer arithmetic is ptr +/- num.
only amd64 needs PCREL PE/COFF's PC32 relocation uses the address after the relocated bytes as the base.
only apply rename if this import is present
only catch the first 4 KB
only compare 16 bits here Return the readDirectoryHeader error if we read the wrong number of directory entries.
only compute table when recursive conversion is enabled and x is large
only define these in testing environment
only diagnose the direct caller.
only evaluate arguments that have not been evaluated before
only expect 1, but leave space for 2
only final two reads should be short - 1 byte, then 0
only first BOM is ignored
only for error returns or panics
only for void*, no DW_AT_type attr to please gdb 6.
only instructions, code, symbol stubs
only interesting case is where .
only logical shifted register
only look at first error
only name(s) and type
only on 32-bit systems
only on systems when ADD does not update carry flag
only on systems without RROTC instruction
only one syntax error per line
only print declarations
only print line break if we are not at the beginning of the output (i.e., we are not printing only a partial program)
only print statements
only relevant flag is FoldCase
only report an error if we have valid types (otherwise we had an error reported elsewhere already)
only report error if it's a new one
only report error if we don't have one already
only report one error, ok to continue
only retain string if needed
only return unique addresses
only safe if there are no jumps to JMPs anymore.
only safe when uintptr is 32-bit.
only safe when uintptr is 64-bit.
only single output block
only supports 32-bit and 64-bit rotates
only top-level methods are embedded
only true once detached from streams map
only true once detacted from streams map
only use for logging written writes
only used for printing
only windows/386 requires stdcall decoration
only windows/386 requires underscore prefix on external symbols
op for OASOP, etype for OTYPE, exclam for export, 6g saved reg, ChanDir for OTCHAN
op holds the operation we are doing (prtx).
op pushes a regexp with the given op onto the stack and returns that regexp.
op returns i.Op but merges all the Rune special cases into InstRune
opName converts from an op name specified in a rule file to an Op enum.
opaque unnamed struct - should not be possible
opcode is load instruction
opcodeCounts checks that the number of opcodes listed in m agree with the number of opcodes that appear in the function.
opcodeMap returns a map from opcode to the number of times that opcode appears in the function.
open enough connections
open file.go: no such file or directory
open for synchronous I/O.
open opens or creates a file with the given name, open mode, and permission mode bits.
open the file read-only.
open the file read-write.
open the file write-only.
open(2) itself won't handle the sticky bit on *BSD and Solaris
openFile calls ctxt.OpenFile (if not nil) or else os.Open.
openWord writes the beginning of an encoded-word into buf.
opening and closing brace are on different lines - don't make it a one-liner
opensslInputEvent enumerates possible inputs that can be sent to an `openssl s_client` process.
opensslOutputSink is an io.Writer that receives the stdout and stderr from an `openssl` process and sends a value to handshakeComplete when it sees a log message from a completed server handshake.
opensslRenegotiate causes OpenSSL to request a renegotiation of the connection.
opensslSendBanner causes OpenSSL to send the contents of opensslSentinel on the connection.
operand is a built-in function
operand is a computed value
operand is a map index expression (acts like a variable on lhs, commaok on rhs of an assignment)
operand is an addressable variable
operand mode (width in bits) decoded ModR/M fields
operand parses a general operand and stores the result in *a.
operand represents no value (result of a function call w/o result)
operand size override
operand: term .Field* An operand is a space-separated component of a command, a term possibly followed by field accesses.
operands may have canceled each other out
operating system type
operation contains superset of data necessary to perform all async IO.
operations that can cope with a 32-bit immediate TODO(mundaym): logical operations can work on high bits
operator-based operations
opform returns the form (D_FORM or DS_FORM) of an instruction.
oprules contains a list of rules for each block and opcode
ops that we will be generating tests for
opset() aliases optab ranges for similar instructions, to reduce the number of optabs in the array.
opshift gives the shift to use when saving the next opcode byte into inst.Opcode.
optFlags parses an interactive option setting and returns an updated flags object.
optimistically assume no rounding is needed special case
optimization - can do block copy
optimization for common case: odd/even test of x
optimization: exploit aggregated extra bits in macro blocks
optimization: one-case select: single op.
optimization: two-case select but one is default: single non-blocking op.
optimization: zero-case select
optimize for power of 2 sized objects.
optional TLS config, used by ListenAndServeTLS MaxHeaderBytes controls the maximum number of bytes the server will read parsing the request header's keys and values, including the request line.
optional alt Close func used if io.EOF not seen
optional arguments to pass to child process
optional attributes omitted.
optional code to run in Read before error
optional exponent moves decimal point.
optional log for errors or nil to use log.Print
optional, defaults to in
optional, modified time in format "mm-dd-yy hh:mm:ss" Information describing expected zip file content.
optoas returns the Axxx equivalent of Oxxx for type t
or Returns the boolean OR of its arguments by returning the first non-empty argument or the last argument, that is, "or x y" behaves as "if x then x else y".
or _, which are likely to be editor temporary files.
or computes the Boolean OR of its arguments, returning the first true argument it encounters, or the last argument.
or nil if unreachable
or'd with c_IS* constants later
or, given an instruction f, to iterate over all the predecessors, which is f.P1 and this list:
ord classifies x and returns:
order it, and then make a copy if we need one.
order should have rewritten multi-value function calls with explicit OAS2FUNC nodes.
order should make sure we only see OAS(node, OAPPEND), which we handle above.
order, write, bits, nBits and width are the state for converting a code stream into a byte stream.
order1005 merges a set of per-P event batches into a single, consistent stream.
order1007 merges a set of per-P event batches into a single, consistent stream.
ordered in register allocation order
ordered list of all available highlight colors
ordered list of all available outline colors
ordered list of explicitly declared methods
ordered list of explicitly embedded types
ordered list of methods declared with or embedded in this interface (TODO(gri): replace with mset)
orderexpr has made sure that x is safe (but possibly expensive) and i, j, k are cheap.
orderexpr made sure key and val are addressable.
orderexpr made sure key is addressable.
orderexpr rewrote OADDSTR to have a list of strings.
orderstmt allocated the iterator for us.
orderstmt arranged for a copy of the array/slice variable if needed.
orderstmt arranged for a copy of the channel variable.
orderstmt arranged for a copy of the string variable.
orderstmt made sure key is addressable.
orderstmt made sure x is addressable.
origPC is the PC for this Prog (no padding is taken into account).
original file, line 1 again
original form, for printing, and tracking copies of ONAMEs func
original package for .
original receiver "T" or "*T"
original request, not to be mutated
original source code order
original type (type literal or predefined type)
originally an unnamed result
originally the blank identifier _
os.Remove refuses to remove files with read-only flag set.
os/user doesn't cache LookupId lookups, and lacks group lookup functions.
os_beforeExit is called from os.Exit(0).
osemi parses an optional semicolon.
osinit not called yet, so ncpu not set: must use getncpu directly.
osrc and odst both on stack, and at least one is in an unknown position.
other - index we refer to this by
other 64 (could subdivide further)
other constants, like big integers or floating point constants, require a mov into a register, so those might as well go on the left, so we can reuse that register for the computation.
other formats on Stringable items
other system allocations Garbage collector statistics.
other tokens followed any opening token
otherContext is a Context that's not one of the types defined in context.go.
otherwise assume a function instead
otherwise assume two blanks
otherwise gen won't emit the allocations for heapallocs
otherwise give recorded answer
otherwise handle and return.
otherwise ignore the method TODO(gri): There may be exported methods of non-exported types that can be called because of exported values (consts, vars, or function results) of that type.
otherwise must make temp variables
otherwise restore the real _StackGuard, we've spoiled it in entersyscall/entersyscallblock
otherwise there might not be anything mapped at the address that might be accidentally dereferenced below.
otherwise we have a type literal
otherwise we might optimize away part of a variable but not all of it.
otherwise we spend all our time allocating memory to hold the formatted output.
otherwise, associate comment with current node
otherwise, estimate body size
otherwise, ignore null for primitives/string
otherwise, it's been set and will be verified in setBoolFlag
otherwise, not something the GC knows about.
otherwise, print the inits as separate statements
otherwise, reference to older data
otherwise, remember string and write its negative length and bytes
otherwise, return the double-quoted path
otherwise, test all Go files under *root
otherwise, write any leftover whitespace
our SETTINGS_MAX_CONCURRENT_STREAMS advertised the client
our conn-level flow control quota (cs.flow is per stream)
our signal handler is registered
our work is done here - no symbols means nothing can refer to this file
out parameters will be assigned to implicitly upon return.
out params are in a loopdepth between the sink and all local variables
outer PPARAMREF in nested closure
outer func for closure
outer shift can't be removed
outerinner records that outer contains inner
outexe is the path where the combined executable should be saved.
output - multiplier magic multiplier for unsigned literal divisors
output arg from paramstoheap
output copies the entry to the specified writer.
output file has recorded an import of "fmt"
output for both - shift
output for both - unexpected failure magic multiplier for signed literal divisors
output is allowed to be unordered.
output is the temporary output buffer.
output state i temp1 has the actions, lastred the default
output the final production
output the gotos for nonterminal c
output the gotos for the nontermninals
output the stuff for state i
output the summary on y.output
output: This is the package comment.
outside methodset (*T).f method exists, but value of type T is not addressable
over multiple calls to Read, time.Durations are slept, strings are read.
overflow check sentinel
overflow in rounding inf
overflow is the code at which hi overflows the code width.
overflow word must be last
overlap ar interval end
overlap at interval begin
overridden by Embed0a's Level1a with json tag
override 'new' keyword
override declaration in unsafe.go for Pointer.
overrides build.PkgDir
overwrite existing value
overwrite the original slice
overwrites first entry
overwritten by next call, but useful in calls to gins.
overwrote Panic struct with Timer struct
p goes here, but already used it elsewhere.
p has type PS, and PS has no methods.
p is a call instruction.
p is assumed to start maskOffset bytes into the data covered by the bitmap in bits.
p is not in last file - search all files
p is not part of a shared library.
p is not written by writeHeader, but is the first chunk of the body that will be written.
p is part of a shared library.
p is the immediate dominator of b.
p may be nil, in which case it only checks the global sources of work.
p must be a Pos value in f or NoPos.
p must be a Pos value in s or NoPos.
p must be in the predecessor list of b.
p points into the heap, but possibly to the middle of an object.
p.Implementation.private()
p.To only indirectly uses v
p.To.Type was set to TYPE_BRANCH above, but that makes checkaddr in ../pass.go complain, so set it back to TYPE_MEM here, until p2 itself gets passed to progedit.
p.argp is the argument pointer of that topmost deferred function call.
p.name must be a type name (or nil in case of syntax error)
p.out must match the //line comment
p1 is (implicitly or not) part of this shared library.
p1 is explicitly part of a different shared library.
p224Contract converts a FieldElement to its unique, minimal form.
p224P is the order of the field, represented as a p224FieldElement.
p224ToAffine converts from Jacobian to affine form.
p224ToBig returns in as a big.Int.
p224ZeroModP31 is 0 mod p where bit 31 is set in all limbs so that we can subtract smaller amounts without underflow.
p224ZeroModP63 is 0 mod p where bit 63 is set in all limbs.
p2562P is the twice prime modulus as a field element.
p256GetBit returns the bit'th bit of scalar.
p256GetScalar endian-swaps the big-endian scalar value from in and writes it to out.
p256One is the number 1 as a field element.
p256P is the prime modulus as a field element.
p256PointToAffine converts a Jacobian point to an affine point.
p256Precomputed contains precomputed values to aid the calculation of scalar multiples of the base point, G.
p256ToBig returns a *big.Int containing the value of in.
pHash implements the P_hash function, as defined in RFC 4346, section 5.
pack runs the archive packer in a specific directory to create an archive from a set of object files.
pack state i from temp1 into amem
pack twice, once to find end of header and again to find end of packet.
packEface converts v to the empty interface.
package all the arguments that match a ...
package being compiled
package being imported
package cannot be recompiled Source files
package documentation string
package documentation, if any
package export block should be first
package found in Go root
package global mapping of imported package ids to package objects
package id of imported package
package information (initialized by NewChecker, valid for the life-time of checker)
package init priority data
package install root directory ("" if unknown)
package local object name
package name, e.g. "sys"
package names must match
package path of imported package
package scope (this file only)
package scope across all files
package source root directory ("" if unknown)
package sys contains system- and configuration- and architecture-specific constants used by the runtime.
package unsafe is not in the imports map - handle explicitly
package unsafe is not in the packages maps - handle explicitly
package unsafe: "any pointer or value of underlying type uintptr can be converted into a unsafe.Pointer"
package was compiled with -u option - ignore
package was imported completely and without errors
package was not found
package-level declaration whose init expression/function body is checked
package-qualified function (e.g. fmt.Errorf)
packageCache is a lookup cache for loadPackage, so that if we look up a package multiple times we return the same pointer each time.
packageClause prints the package clause.
packageDoc prints the docs for the package (package doc plus one-liners of the rest).
packageList returns the list of packages in the dag rooted at roots as visited in a depth-first post-order traversal.
packageObjects typechecks all package objects in objList, but not function bodies.
packages already imported
packages imported by this package
packages returns the packages named by the command line arguments 'args'.
packagesAndErrors is like 'packages' but returns a Package for every argument, even the ones that cannot be loaded at all.
packagesForBuild exits if the packages cannot be loaded.
packagesForBuild is like 'packages' but fails if any of the packages or their dependencies have errors (cannot be built).
packedAttribute returns host compiler struct attribute that will be used to match gc's struct layout.
pad call deferreturn to start at 32-byte boundary so that subtracting 5 in jmpdefer will jump back to that boundary and rerun the call.
pad call to end at 32-byte boundary
pad everything to avoid crossing 32-byte boundary
pad on the left with spaces
pad pads the code sequence with pops.
pad with zeros unless precision also specified
padToBlockSize calculates the needed padding block, if any, for a payload.
padding is done with non-tab characters
padding is done with tabs
paeth implements the Paeth filter function, as per the PNG specification.
pairedParensPrefixLen returns the length of the longest prefix of s containing paired parentheses.
palette.Plan9 is used in place of a nil Quantizer.
palettesEqual reports whether two color.Palette values are equal, ignoring any trailing opaque-black palette entries.
panic (instead of crash) on unexpected fault address
panic is inaccessible
panic is useless here
panic that is running defer
panic with a runtime.Error if err is not an error
panic("corrupt") // useful for debugging
panicOnError is enable when testing to abort execution on the first error and turn it into a recoverable panic.
panicking is set by catchPanic to avoid infinite panic, recover, panic, ...
panics if not okay to call
parallel runs the test in parallel by calling t.Parallel.
parallelSleep returns the absolute difference between the start time of the two sleeps.
param parses and returns a function parameter list entry which may be a parameter name and type pair (name, typ), a single type (nil, typ), or a single name (name, nil).
parameters are always 'used'
params and autos are always on the stack
paramsResults is like recvsParamsResults, but omits receiver parameters.
paramstoheap returns code to allocate memory for heap-escaped parameters and to copy non-result prameters' values from the stack.
parens will be inserted.
parent and children should all be finished.
parent has already been canceled
parent in inclusion stack
parent is never canceled
parent should not be finished.
parentCancelCtx follows a chain of parent references until it finds a cancelCtx.
parentheses must not be stripped if there are any unparenthesized composite literals starting with a type name
parentheses protect enclosed composite literals
parentheses undo one level of depth
parenthesized expression
park continuation on g0.
parse a quoted-string
parse and type-check file
parse comments and add them to AST
parse files and collect parser errors
parse floating-point number
parse mantissa before decimal point or exponent
parse may be called concurrently
parse method name, signature, and possibly inlined body
parse parses a URL from a string in one of two contexts.
parse parses src, which was read from the named file, as a Go source file, declaration, or statement list.
parse pretty printed original (//line comments must be interpreted even w/o parser.ParseComments set)
parse returns the matching part of the rule, additional conditions, and the result.
parse the certificate if this isn't the leaf node, or if chain.Leaf was nil
parseAcceptError parses nestedErr and reports whether it is a valid error value from Accept functions.
parseAdditionalSections parses any additional sections in the profile, ignoring any unrecognized sections.
parseAddress parses a single RFC 5322 address at the start of p.
parseArchive parses a Unix archive of Go object files.
parseArgNumber returns the value of the bracketed number, minus 1 (explicit argument numbers are one-indexed but we want zero-indexed).
parseArmAttributes in ldelf.go reads that information and updates this field as appropriate.
parseBase128Int parses a base-128 encoded int from the given offset in the given byte slice.
parseBasicAuth parses an HTTP Basic Authentication string.
parseBigInt treats the given bytes as a big-endian, signed integer and returns the result.
parseBitString parses an ASN.1 bit string from the given byte slice and returns it.
parseBool parses a string as a boolean value.
parseCPU parses a profilez legacy profile and returns a newly populated Profile.
parseCPUSamples parses a collection of profilez samples from a profile.
parseCSRExtensions parses the attributes from a CSR and extracts any requested extensions.
parseClass parses a character class at the beginning of s and pushes it onto the parse stack.
parseClassChar parses a character class character at the beginning of s and returns it.
parseCloseError parses nestedErr and reports whether it is a valid error value from Close functions.
parseCommonError parses nestedErr and reports whether it is a valid error value from miscellaneous functions.
parseContention parses a contentionz profile and returns a newly populated Profile.
parseContentionSample parses a single row from a contention profile into a new Sample.
parseDialError parses nestedErr and reports whether it is a valid error value from Dial, Listen functions.
parseECPrivateKey parses an ASN.1 Elliptic Curve Private Key Structure.
parseEscape parses an escape sequence at the beginning of s and returns the rune.
parseExportedName is like parseQualifiedName, but the package id is resolved to an imported *types.Package.
parseExportedName is like parseQualifiedName, but the package path is resolved to an imported *types.Package.
parseExpr parses s as an expression.
parseField is the main parsing function.
parseField parses the next field in the record.
parseFiles is the helper for the method and function.
parseFlags accepts any printf flags.
parseFlags sets the profile and counterStmt globals and performs validations.
parseGMT parses a GMT time zone.
parseGeneralizedTime parses the GeneralizedTime from the given byte slice and returns the resulting time.
parseGlob is the implementation of the function and method ParseGlob.
parseGoCount parses a Go count profile (e.g., threadcreate or goroutine) and returns a new Profile.
parseHeap parses a heapz legacy or a growthz profile and returns a newly populated Profile.
parseHeapSample parses a single row from a heap profile into a new Sample.
parseHex parses the hexadecimal byte dump in hex, appending the parsed bytes to raw and returning the updated slice.
parseHexAddresses parses hex numbers from a string and returns them in a slice.
parseHost parses host as an authority without user information.
parseIPv6 parses s as a literal IPv6 address described in RFC 4291 and RFC 5952.
parseIndex scans an index expression.
parseInt found too big a number
parseInt parses a decimal integer.
parseInt treats the given bytes as a big-endian, signed integer and returns the result.
parseInt64 treats the given bytes as a big-endian, signed integer and returns the result.
parseLexer is a local version of parse that lets us pass in the lexer instead of building it.
parseLinkLayerAddr parses b as a datalink socket address in conventional BSD kernel form.
parseMetaGoImports returns meta imports from the HTML in r.
parseNetworkLayerAddr parses b as an internet socket address in conventional BSD kernel form.
parseNum scans a width or precision (or *).
parseNumeric parses the input as being encoded in either base-256 or octal.
parseObject parses a single Go object file.
parseObjectIdentifier parses an OBJECT IDENTIFIER from the given bytes and returns it.
parseOne parses one flag.
parseOperand may return an expression or a raw type (incl.
parseOptions parses the options into report.Options Returns a function to postprocess the report after generation.
parsePAX parses PAX headers.
parsePAXRecord parses the input PAX record string into a key-value pair.
parsePackage turns the build package we found into a parsed package we can then use to generate documentation.
parsePort parses service as a decimal interger and returns the corresponding value as port.
parsePrecision scans for a precision.
parseRange parses a Range header string as per RFC 2616.
parseRawAttributes Unmarshals RawAttributes intos AttributeTypeAndValueSETs.
parseReadError parses nestedErr and reports whether it is a valid error value from Read functions.
parseRecord reads and parses a single csv record from r.
parseRequestLine parses "GET /foo HTTP/1.1" into its three parts.
parseRightParen handles a ) in the input.
parseScale converts a decimal string into a valid scale factor.
parseSequenceOf is used for SEQUENCE OF and SET OF values.
parseSimpleStmt returned a right-hand side that is a single unary expression of the form "range x"
parseSockaddrInet parses b as an internet socket address.
parseSockaddrLink parses b as a datalink socket address.
parseString parses bytes as a NUL-terminated C-style string.
parseSymbol breaks str apart into a symbol and method.
parseSymbol is used to analyze the symbol itself.
parseTag splits a struct field's json tag into its name and comma-separated options.
parseTagAndLength should not be called without at least a single byte to read.
parseTagFilterRange returns a function to checks if a value is contained on the range described by a string.
parseThread parses a Threadz profile and returns a new Profile.
parseThreadSample parses a symbolized or unsymbolized stack trace.
parseTimeZone parses a time zone string and returns its length.
parseVarType accepts any type (including parenthesized ones) even though the syntax does not permit them here: we accept them all for more robust parsing and complain afterwards
parseWord skips any leading spaces or comments in data and then parses the beginning of data as an identifier or keyword, returning that word and what remains after the word.
parseWriteError parses nestedErr and reports whether it is a valid error value from Write functions.
parse_file parses a single Go source file.
parsed resolv.conf structure used in lookups
parsedTime is the struct representing a parsed time value.
parsenum converts ASCII to integer.
parser for yacc output
parser parses the exports inside a gc compiler-produced object/archive file and populates its scope with the results.
parser.go:hidden_fndcl
parser.go:hidden_funarg
parser.go:hidden_import interfaces don't have associated methods
parser.go:hidden_importsym
parser.go:hidden_interfacedcl
parser.go:hidden_interfacedcl_list
parser.go:hidden_pkgtype
parser.go:hidden_structdcl
parser.go:hidden_structdcl_list
parser.go:ohidden_funarg_list
parser.go:sym,hidden_importsym
parser_test.go decodes this during init.
parsetag decodes an escape analysis tag and returns the esc value.
parsing object key (before colon)
parsing object value (after colon)
parsing stops after import declarations
parsing stops after package clause
parsing them isn't exported, though.
part of the token text was saved in tokBuf: save the rest in tokBuf as well and return its content
part one of issue 4124.
part two of issue 4124.
partReader implements io.Reader by reading raw bytes directly from the wrapped *Part, without doing any Transfer-Encoding decoding.
partial write may have occurred
partialDeadline returns the deadline to use for a single address, when multiple addresses are pending.
partition can grow in the loop.
partition divides an address list into two categories, using a strategy function to assign a boolean label to each address.
partitionValues returns a list of equivalence classes, each being a sorted by ID list of *Values.
pass 1 - look for something already waiting
pass 1 build aux data structure allocate pcs find use and set of variables
pass 1: resolve jump to jump, mark all code as dead.
pass 2 - enqueue on all chans
pass 2 find looping structure
pass 2: mark all reachable code alive
pass 3 - dequeue from unsuccessful chans otherwise they stack up on quiet channels record the successful case, if any.
pass 3 iterate propagating usage back until flow graph is complete
pass 3: delete dead code (mostly JMPs).
pass 4 iterate propagating register/variable synchrony forward until graph is complete
pass 4.5 move register pseudo-variables into regu.
pass 4: elide JMP to next instruction.
pass 5 isolate regions calculate costs (paint1)
pass 6 determine used registers (paint2) replace code (paint3)
pass 7 peep-hole on basic block
pass matching runes back through these no-ops.
pass performs some debugging.
pass reports own "stats" (e.g., branches removed)
pass-specific ad-hoc option, perhaps useful in development
passFDChild is the child process used by TestPassFD.
passed parameter on wakeup
passed to 6.out, adding a "test." prefix to the name if necessary: -v becomes -test.v.
passes to recursive case, seems likely a no-op
path in import comment on package statement
path is full (rooted) path name.
path name element (the current directory).
path name element (the parent directory) along with the non-..
path returns the absolute pathname to file with the temporary directory.
path to the CGI executable
path with hex escaping
path without leading /, so no parsing
path.Clean will discard the ./ but not the ../.
pathMatch implements "path-match" according to RFC 6265 section 5.1.4.
paths indexed by PCFile
pattern begins with ./ or ../.
pattern for import path
pattern is the glob pattern used to find all the template files.
pattern is the string that we are searching for in the text.
pattern would cause us to hit 2**256, but that causes problems when multiplying as terms end up one bit short of a limb which would require much bit-shifting to correct.
patterns that can be expanded.
pause end times history, most recent first
pause history, most recent first
pbit16 copies the 16-bit number v to b in little-endian order and returns the remaining slice of b.
pbit32 copies the 32-bit number v to b in little-endian order and returns the remaining slice of b.
pbit64 copies the 64-bit number v to b in little-endian order and returns the remaining slice of b.
pbit8 copies the 8-bit number v to b and returns the remaining slice of b.
pc for last rune in prefix
pc is in a hole in the table.
pc of go statement that created this goroutine
pc of goroutine function
pciterinit goes up to the end of the function, but DWARF expects us to stop just before the end.
pcln does not make sense for Go object files, because each symbol has its own individual pcln table, so there is no global space of addresses to map.
pclntab initializes the pclntab symbol with runtime function and file name information.
pcrel and pcrelw match instructions using relative addressing mode.
pcrel matches instructions using relative addressing mode.
pct-encoded (and used in IPv6 zones)
pctopcdata computes the pcdata value in effect at p.
pctospadj computes the sp adjustment in effect.
pcvalue reports the value associated with the target pc.
pdReady, pdWait, G waiting for read or nil
pdReady, pdWait, G waiting for write or nil
pedanticReadAll works like ioutil.ReadAll but additionally verifies that r obeys the documented io.Reader contract.
peek at the input rune to see which branch of the Alt to take
peek doesn't affect the position
peek is only called when using the Token API.
peek reports whether the next character is in the ok string, without consuming it.
peek returns as many bytes as possible from the unread portion of the stream, up to the length of b.
peek returns but does not consume the next rune in the input.
peek returns but does not consume the next token.
peekBufferIsEmptyPart reports whether the provided peek-ahead buffer represents an empty part.
peekBufferSeparatorIndex returns the index of mr.nlDashBoundary in peek and whether it is a real boundary (and not a prefix of an unrelated separator).
peekByte returns the next byte from the input reader but does not advance beyond it.
peekLine peek the top of the line number stack.
peekNonSpace returns but does not consume the next non-space token.
peemitreloc emits relocation entries for go.o in external linking.
peep allocates new ones.
peer is connected-mode
peer's conn-level flow control
peimporteddlls returns the gcc command line argument to link all imported DLLs.
pemCRLPrefix is the magic string that indicates that we have a PEM encoded CRL.
pemStart begins with a newline.
pemType is the type of a PEM encoded CRL.
per RFC 7540 section 8.1.2.2: Connection-Specific Header Fields.
per-P to avoid mutex Per-P GC state
percent-encoded+unreserved zone identifier
percentCovered returns, as a percentage, the fraction of the statements in the profile covered by the test run.
percentage computes the percentage of total of a value, and encodes it as a string.
perelocsect relocates symbols from first in section sect, and returns the total number of relocations emitted.
perform a depth first walk of the dominee tree
perform a long multiplication.
perform conversion from n to res
perform delayed checks
perform full-width multiplication.
perhaps not the most logical place for these tests.
period (microseconds)
permission and mode bits
permit but should be ignored by ParseDir
permit trace for types, e.g.: new(trace(T))
permitted as expected
permuteInitialBlock is equivalent to the permutation defined by finalPermutation.
permuteInitialBlock is equivalent to the permutation defined by initialPermutation.
persistConn wraps a connection, usually a persistent one (but may be used for non-keep-alive requests as well)
phielim eliminates redundant phi values from f.
phiopt eliminates boolean Phis based on the previous if.
phis whose arguments are all non-nil are non-nil
pi is first position of first group
pi launches n goroutines to compute an approximation of pi.
pick a random key, hash it
pick off before type-checking arguments
pick off easy formats
pick off float/complex opcodes
pick off just the opcodes that can be constant evaluated.
pick up enough leading digits to cover first shift
pick up unreachable code
pickReg picks an arbitrary register from the register mask.
pin pins the current goroutine to P, disables preemption and returns poolLocal pool for the P.
ping for scheme to use to download repo
ping pings to determine scheme to use.
pipe is a goroutine-safe io.Reader/io.Writer pair.
pipe uses nil to mean not available
pipe2 was added in 2.6.27 and our minimum requirement is 2.6.23, so it might not be implemented.
pk-1 is last position of unsorted group
pkcs10Attribute reflects the Attribute structure from section 4.1 of https://tools.ietf.org/html/rfc2986.
pkg.Fatalf is like log.Fatalf, but panics so it can be recovered in the main do function, so it doesn't cause an exit.
pkgDeps defines the expected dependencies between packages in the Go source tree.
pkgFilenames returns the list of package filenames for the given directory.
pkgImports is the set of packages already imported by any package file seen so far.
pkgName returns the package name (last element) of an import path.
pkgpath builds an appropriate path for a temporary package file.
pkgtype returns the named type declared by symbol s.
pkixPublicKey reflects a PKIX public key structure.
place to store reference to the generating instruction
placeholder for number of relocation + 1
placeholder for q1's jump target
placeholder not passed to user ParseError describes a problem parsing a time string.
plain call: use direct c function pointer - more efficient
plain error - we don't care about current token
plainError represents a runtime error described a string without the prefix "runtime error: " after invoking errorString.Error().
plan9ManualTests holds test cases that will be run by TestPlan9Manual32 and TestPlan9Manual64.
planetSorter joins a By function and a slice of Planets to be sorted.
play simulates a Pig game and returns the winner (0 or 1).
playExample synthesizes a new *ast.File based on the provided file with the provided function body as the body of main.
playExampleFile takes a whole file example and synthesizes a new *ast.File such that the example is function main in package main.
please forgive us for abuse of limited broadcast address
please note that ctime is not a valid pax header.
plen is length of prefix
plenty long enough for all current users
plenty of a safety margin, even for very slow machines test running past time out
point first branch down here if appropriate
pointer bitmap: 1 is pointer, 0 is scalar (or uninitialized)
pointer element (pointed at) type
pointer in a string or slice
pointer in first slot
pointer in first slot (BitsPointer)
pointer in second slot
pointer is the first word of string or slice.
pointer of complex128
pointer receiver, so no wrapper in i.M()
pointer returns the underlying pointer represented by v.
pointer to C function
pointer to C function Update the C environment if cgo is loaded.
pointer to function arguments
pointer to received bool (recv2)
pointer to somewhere else in msg.
pointer to tls errno these are here because they are too large to be on the stack of low-level NOSPLIT functions.
pointer to unresolved gotos
pointer type or unary "*" expression
pointer/addressable receiver required
pointers to descriptions of productions
pointers to interfaces
pointers to specific parts of the module
pointers to struct pointers
pointers to type tags token information
pointers with specified base
points at case statement
points at stack-allocated data.
points to an array of dataqsiz elements
policyQualifiers omitted
poll network if not polled for more than 10ms
polls for ready network connections returns list of goroutines that become runnable
pool of available defer structs of different sizes (see panic.go)
pool of available threads
pool of empty queues for reuse.
poolCleanup won't be called while we are pinned.
pop a reachable value
pop from tail of local queue
pop function type off stack
pop pops all nodes that appear lexically before pos (i.e., whose lexical extent has ended before or at pos).
pop pops the variable stack up to the mark.
pop removes an arbitrary element from the set.
pop/ldm with no registers (undefined).
popLine pops the top of the line number stack.
popParseState pops a parse state (already obtained) off the stack and updates s.step accordingly.
popVars trims the variable list to the specified length
popWriter pops the innermost writer.
popdcl pops the innermost block scope and restores all symbol declarations to their previous state.
popl instruction for Sun ABI GD sequence
popl instruction for Sun ABI LD sequence
populate typList with predeclared "known" types
populate type map with predeclared "known" types
populateResponse is a ResponseWriter that populates the *Response in res, and writes its body to a pipe connected to the response body.
populated before peerReset is closed
pos gives the current position in the input.
pos is the comment position, next the position of the item after all pending comments, prev is the previous comment in a group of comments (or nil), and tok is the next token.
pos returns the position of the expression corresponding to x.
position immediately after the token at position prev
position of "/" starting the comment
position of "case" or "default" keyword
position of "defer" keyword
position of "for" keyword
position of "func" keyword (token.NoPos if there is no "func")
position of "go" keyword
position of "if" keyword
position of "interface" keyword
position of "map" keyword
position of "package" keyword
position of "return" keyword
position of "select" keyword
position of "struct" keyword
position of "switch" keyword
position of '(', if any
position of ')', if any
position of closing parenthesis/brace, if any
position of decimal point
position of ellipsis in p
position of error (if present, file:line:col)
position of first character belonging to the node
position of first character immediately after the node
position of initial '/'
position of last non-comment, non-semicolon token
position of most recent item returned by nextItem
position of object identifier in declaration
position of opening parenthesis/brace, if any
position range of bad declaration
position range of bad expression
position range of bad statement
position range of the comment containing the marker
position values can be printed nicely if we have a file set
position where we next look for a match
positions after calling Next
positions after calling Scan
positions are relative to fset
positions are relative to fset Parse the file containing this very example but stop after processing the imports.
positions of unused dot-imported packages for each file scope
positive integer that starts at one, zero is never used
possible multiply into DX:AX Instruction updates whichever of from/to is type D_OREG.
possibly a line directive
possibly a one-line struct/interface
possibly an html tag/entity
possibly nil (see declInfo.lhs field comment)
possibly read-only data, like malloc(0).
possibly result of an n-valued function call or comma,ok value
postDecode takes the unexported fields populated by decode (with suffix X) and populates the corresponding exported fields.
postProcessTrace does inter-event verification and information restoration.
postProcessTrace runs after us and ensures that we leave the trace in a consistent state.
postorder computes a postorder traversal ordering for the basic blocks in f.
postprocessing to run on report
potential shift/reduce conflict
pow5 sets z to 5**n and returns z.
pp does not implement J.
pp does not implement error.
pp is used to store a printer's state and is reused with sync.Pool to avoid allocations.
pprof binary header format.
pprof commands with parameters
pprof commands without parameters
pprof expects this behavior when checking for addr2line
pragmaFields does not recognize escaped quotes.
pragmaFields is similar to strings.FieldsFunc(s, isSpace) but does not split when inside double quoted regions and always splits before the start and after the end of a double quoted region.
pre-allocate space for type declaration paths so that the underlying array is reused
pre-regalloc value it should contain
pre-regalloc value needed in this register
pre/post-indexed load (unscaled, signed 9-bit offset)
pre/post-indexed load/store register pair (unscaled, signed 10-bit quad-aligned offset)
pre/post-indexed store (unscaled, signed 9-bit offset)
preEncode populates the unexported fields to be used by encode (with suffix X) from the corresponding exported fields.
pread reads len(b) bytes from the File starting at byte offset off.
preallocate about 2mb for hash of non static symbols
preallocate roughly 5 bytes per instruction
prec must be large enough to hold all numbers from 0 to n
precedence levels for the productions
precision of fractional part
precision of integer part
precision of normal float
precomputed dominator tree
precomputed immediate dominators
pred is a template function that returns the predecessor of a natural number for testing recursive templates.
predIdx returns the index where p appears in the predecessor list of b.
predecessors collects all the predecessors to node n, excluding edge e.
predecessors of this instruction: p1,
predeclare temporary variables and the boolean var
predeclared object - nothing to do for now
predefine installs the macros set by the -D flag on the command line.
predefine strings we need for section headers
predefined name like uint8
predict not taken (conditional branch only)
predict taken (conditional branch only) Size attributes.
prediction hinted form, hint ignored
preempted g does scan for gc
prefer not to exit loops
prefer to complain about 'into block' over declarations, so scan backward to find most recent block or else dcl.
prefer to stay in loop, not exit to outer.
prefix decoding information
prefix is ignored: either irrelevant or overridden by a later prefix
prefix is implied by instruction text
prefix is not counted
prefix is the difference in keys between this trie node and the next.
prefix is the entire regexp
prefix makes entire instruction invalid (bad LOCK) Memory segment overrides.
prefix of stack containing pointers
prefix this description applies to
prefix to write at beginning of each line
prefix, or "" for none
prefix, which parts of the linker (like the DWARF generator) know means the symbol is not decodable.
prefixByte maps instruction prefix text to actual prefix byte values.
prefixDirectory places the directory name on the beginning of each name in the list.
prefixSuffixSaver is an io.Writer which retains the first N bytes and the last N bytes written to it.
prefixToSegment returns the segment register corresponding to a particular segment prefix.
prepare for rewrite below
prepare slice for remaining values
prepareArg checks if value can be used as an argument of type argType, and converts an invalid value to appropriate zero if possible.
prepareCipherSpec sets the encryption and MAC states that a subsequent changeCipherSpec will use.
prepend high-order zeros
preprocess Go source files with the coverage tool in this mode
preprocess does any required filtering/sorting according to the report options.
preprocess does filtering and aggregation of a profile based on the requested options.
prepwrite prepares to write data of size siz into s at offset off.
present mantissa length in words
presentInMap checks map printing using substrings so we don't depend on the print order.
preserve compatibility byte
preserve insertSemi info
preserve is set only when called from MCentral_CacheSpan above, the span must be in the empty list.
preserve x, create local copy for use by convertWords
presumably a qualified identifier
pretend this is an *ast.ParenExpr and do nothing.
pretty-print original
prettyName determines the printable name to be used for a node.
prettyPath returns a version of the package path that is suitable for an error message.
prevent coalescing with s
prevent copyenv in Getenv/Setenv
prevent data race on bcmdbuf
prevent duplicate export printing
prevent fuse from eliminating this block
prevent infinite recursion (shouldn't happen anyway)
prevent mlookup from finding this span
prevent sniffing path
prevent stack allocation, otherwise p is rematerializeable
prevents false-sharing between full/empty and nproc/nwait
previous bucket array of half the size, non-nil only when growing
previous character was not EOF
previous clear is already clearing this region
previous node group (enclosing nodes of "importance")
previous sets of relations known lower and upper bounds on individual values.
previous span's next field, or list head's first field if none
previous value is this one's final arg.
previous: Information being used during the last GC cycle.
prf10 implements the TLS 1.0 pseudo-random function, as defined in RFC 2246, section 5.
prf12 implements the TLS 1.2 pseudo-random function, as defined in RFC 5246, section 5.
prf30 implements the SSL 3.0 pseudo-random function, as defined in www.mozilla.org/projects/security/pki/nss/ssl/draft302.txt section 6.
prime for escflood later
primeRK is the prime base used in Rabin-Karp algorithm.
print a terminating comma if the next token is on a new line
print a trace of parsed productions
print all list elements
print before panic, as panic may get lost due to conflicting panic (all goroutines asleep) elsewhere, since we might not unlock the mutex in freeConn here.
print dump of GC programs
print empty select statement w/o comments on one line
print explicit interface methods and embedded types
print flattened interface (useful to compare against gc-generated interfaces)
print information about append compilation
print information about closure compilation
print information about nil checks
print information about slice compilation
print information about type assertion inlining
print information about write barriers
print out empty productions in closure
print outstanding comments
print phis first since all value cycles contain a phi
print prints a list of "items" (roughly corresponding to syntactic tokens, but also including whitespace and formatting information).
print rest of values in dependency order
print strings in quotes
print symbol with Vargen number or not as desired
print the output for the states
print unprinted lines until end
printAssembly prints an annotated assembly listing.
printBuiltin prints a value not of a fundamental type, that is, one whose type is known to gobs at bootstrap time.
printCallgrind prints a graph for a profile on callgrind format.
printContents implements the 'p' command.
printCountProfile prints a countProfile at the specified debug level.
printDOT prints an annotated callgraph in DOT format.
printFunctionClosing prints the end of a function in a weblist report.
printFunctionHeader prints a function header for a weblist report.
printFunctionSourceLine prints a source line and the corresponding assembly.
printHeader prints the page header for a weblist report.
printMethodDoc prints the docs for matches of symbol.method.
printOneCgoTraceback prints the traceback of a single cgo caller.
printPageClosing prints the end of the page in a weblist report.
printSource prints an annotated source listing, include all functions with samples that match the regexp rpt.options.symbol.
printStackRecord prints the function + source line information for a single stack trace.
printTags collects all tags referenced in the profile and prints them in a sorted table.
printTest is the action for printing a test result.
printText prints a flat text report for a profile.
printTree prints a tree-based report in text form.
printValue writes the textual representation of the value to the output of the template.
printVerbs identifies which flags are known to printf for each verb.
printWebSource prints an annotated source listing, include all functions with samples that match the regexp rpt.options.symbol.
printWireType prints the contents of a wireType.
printableValue returns the, possibly indirected, interface value inside v that is best for a call to formatted printer.
printed form, then hex
printf is a convenience wrapper that takes care of print errors.
printf is used by the test so we must declare it.
printfArgType encodes the types of expressions a printf verb accepts.
println("Point.Dist", p.x, p.y, scale)
println("fast:", tfast, "slow:", tslow, "speedup:", speedup, "want:", want) println("not fast enough") os.Exit(1)
println("lit", n, dst)
println("start", started)
println("wait", ended)
println(name, ExprString(e))
prints "context deadline exceeded"
prints (in some order):
prints as word but we want to record bytes
printsp test goprintf
priority of init function, see InitData.Priority
private interface for the runtime
probably a type check problem
probably a type error already.
probably can't happen
probably zeroed but perhaps supplied externally and of unknown value
probablyPrime performs n Miller-Rabin tests to check whether x is prime.
probe the scanner with a space to determine whether we will get scanEnd on the next character.
probeIPv6Stack probes both basic IPv6 capability and IPv6 IPv4- mapping capability which is controlled by IPV6_V6ONLY socket option and/or kernel state "net.inet6.ip6.v6only".
probeIPv6Stack returns two boolean values.
process comments before current node
process current directory
process files in sorted order
process forward jumps to p
process generates code to move all the values to the right destination locations.
process has been successfully waited on, non zero if true
process remaining data
process type switch as declaration.
process will be killed here
processBench runs bench b for the configured CPU counts and prints the results.
processCertsFromClient takes a chain of client certificates either from a Certificates message or from a sessionState and verifies them.
processDHT processes a Define Huffman Table marker, and initializes a huffman struct from its contents.
processDest generates code to put value vid into location loc.
processFrameFromReader processes the serve loop's read from readFrameCh from the frame-reading goroutine.
processFrameFromReader returns whether the connection should be kept open.
processLog verifies whether the given ThreadSanitizer's log contains a race report, checks this information against the name of the testcase and returns the result of this comparison.
processOutput prepares the output of runOut to be output to the console.
processSignals setups signal handler.
processed at each use, to prevent Addr coming before the decl.
product of primes prior to this (inc p and q).
productTable contains pre-computed multiples of the binary-field element used in GHASH.
productTable contains the first sixteen powers of the key, H.
production can be derived
production number for sorting
profile all outstanding allocations
profile needs to keep binary around
profiles records all registered profiles.
profilez samples are a repeated sequence of stack frames of the form: 1st word -- The number of times this stack was encountered.
profiling bucket hash table
prog.From is no address.
prog.To is no address.
progMachine returns a new machine running the prog p.
progSize is the size of the memory described by the program.
progToPointerMask returns the 1-bit pointer mask output by the GC program prog.
progbits returns the length of the bit stream encoded by the program p.
program counter at caller aka link register
program counter where execution can continue, or 0 if not
program counter within fn
program defined information
program listing, with individual effects listed
program scheduling priority functions and constants
progress counter for evacuation (buckets less than this have been evacuated) If both key and value do not contain pointers and are inline, then we mark bucket type as containing no pointers.
promoteUndeclaredTrailers permits http.Handlers to set trailers after the header has already been flushed.
propagate carry if necessary
propagateCancel arranges for child to be canceled when parent is.
protected by mheap.lock
protects Write + Flush
protects creation of encoder
protects following fields
protects from stale timers and ready notifications
protects parseFuncs and execFuncs
protects remaining fields
protects seq, pending
protects the file set
protects the following fields
protects the following members
protects the following variables
protects the rest of the fields
protects the serviceMap
protocols contains minimal mappings between internet protocol names and numbers for platforms that don't have a complete list of protocol numbers.
prove reliese on common-subexpression elimination for maximum benefits.
prove removes redundant BlockIf controls that can be inferred in a straight line.
provide better error message if SetFloat failed because f was too large
provide current spec with an explicit type
provide valid constant value under all circumstances
proxyAuth returns the Proxy-Authorization header to set on requests, if applicable.
pseudo header field errors
pseudo-package used for map zero values
pseudo-package, for scoping
pseudo-packages used in symbol tables
pseudo-single (20-bit) precision x
pseudo-symbols to mark locations of type, string, and go string data.
pseudo-types for frame layout
pseudo-types for import/export
pseudo-types for literals
pseudo-uses from beyond end of block
pseudoUnix returns the pseudo-Unix time (seconds since Jan 1 1970 *LOCAL TIME*) denoted by the system date+time d in the given year.
pseudocall parses call-like statements that can be preceded by 'defer' and 'go'.
pstring copies the string s to b, prepending it with a 16-bit length in little-endian order, and returning the remaining slice of b..
psuedo-use by control value
ptr being checked for nil/non-nil
ptr distance from old to new stack (newbase - oldbase)
ptr ptr INT ptr ptr ptr ptr INT ptr ptr ptr ptr INT ptr ptr ptr ptr INT ptr ptr ptr ptr INT ptr ptr ptr ptr INT ptr ptr ptr ptr INT ptr ptr ptr ptr INT ptr ptr
ptr returns the *gclink form of p.
ptr that is non-nil due to this blocks pred
ptr to closure to run (if dynamic)
ptr to data (SendDir) or ptr to receive buffer (RecvDir)
ptr to target code (if dynamic)
ptr to this structure
ptrMap is the cache for PtrTo.
ptrRecv reports whether the receiver is of the form *T.
ptrSize and regSize are defined in stubs.go.
ptrTest is the tests without the boilerplate.
ptrType represents a pointer type.
ptrmask bits already loaded
ptrmask for an allocation containing a single pointer.
ptrmask is assumed to fit at least typeptrdata(t)/Widthptr bits.
ptrmask is sized to describe only typ.ptrdata, but we record it as describing typ.size bytes, since all the high bits are zero.
public key for client auth, if any
publicationBarrier is for when those aren't an option, such as in the implementation of the memory manager.
publicationBarrier performs a store/store barrier (a "publication" or "export" barrier).
publish before recursive calls
punt on weird glibc escape
purge cache stats to prevent overflow
push adds parent elements to the stack and writes open tags.
push function type on stack
push onto head of global queue
push pops all nodes that appear lexically before n and then pushes n on the stack.
push pushes (pc, pos, arg) onto the job stack if it should be visited.
push pushes a new variable on the stack.
push pushes the regexp re onto the parse stack and returns the regexp.
push-down stack of variable values.
push/stmdb with no registers (undefined).
pushLine pushes a line number on the line number stack.
pushParseState pushes a new parse state p onto the parse stack.
pushWriter adds a writer to the encoder.
pushdcl pushes the current declaration for symbol s (if any) so that it can be shadowed by a new declaration within a nested block scope.
pushl instruction for Sun ABI GD sequence
pushl instruction for Sun ABI LD sequence
put EXPORT Address Table
put EXPORT Name Pointer Table
put EXPORT Ordinal Table
put IMAGE_EXPORT_DIRECTORY
put a state and value onto the stack
put constants not loadable by LOAD IMMEDIATE into memory
put dynamics into array (5)
put enqueues a pointer for the garbage collector to trace.
put everything into static array
put in dynamic entries one-at-a-time
put list back in processing order
put normal arg assignment on list with fncall replaced by tempname
put on allg for garbage collector
put out names of states.
put out names of tokens
put out non-literal terminals
put out other arrays, copy the parsers
put out the proper tag
put out the proper tag...
put out token translation tables table 1 has 0-256
put quotes on the value
put returns a machine to the re's machine cache.
put returns a unique id for the stack trace pcs and caches it in the table, if it sees the trace for the first time.
put simplest on right - we'll generate into left and then adjust it using the computation of right.
put these items into the closure is the item there
put these sections early in the list
put those lines in a pre block
putConn adds a connection to the db's free pool.
putConnHook is a hook for testing.
putFast does a put and returns true if it can be done quickly otherwise it returns false and the caller needs to call put.
putempty puts a workbuf onto the work.empty list.
putfull accepts partially full buffers so the GC can avoid competing with the mutators for ownership of partially full buffers.
putfull puts the workbuf on the work.full list for the GC.
pwd returns the current directory.
pwrite writes len(b) bytes to the File starting at byte offset off.
qDecode decodes a Q encoded string.
qEncode encodes s using Q encoding and writes it to buf.
qc has already complained.
qualified identifiers
qualified name, which may contain periods
qualifiers A QualType represents a type that has the C/C++ "const", "restrict", or "volatile" qualifier.
qualify non-exported names (used on structs, not on funarg)
quant is the scaled quantization tables, in zig-zag order.
quantErrorCurr and quantErrorNext are the Floyd-Steinberg quantization errors that have been propagated to the pixels in the current and next rows.
query contains one test of the cookies returned from Jar.Cookies.
query ending in question mark (Issue 14573)
query with hex escaping: NOT parsed
queryConn executes a query on the given connection.
queue check for map until all the types are done settling.
queue of full buffers
queue ourselves on the global channel
queue resolution of method type for later.
queueRescan adds gp to the stack rescan list and clears gp.gcscanvalid.
quick test: only check first value of slices
quiet expected TLS handshake error "remote error: bad certificate"
quotToFloat32 returns the non-negative float32 value nearest to the quotient a/b, using round-to-even in halfway cases.
quotToFloat64 returns the non-negative float64 value nearest to the quotient a/b, using round-to-even in halfway cases.
quoteChar formats c as a quoted character literal
quoteString renders a string as an RFC 5322 quoted-string.
quoted causes primitive fields to be encoded inside JSON strings.
quoted string (includes quotes)
quotedString returns the double- or back-quoted string represented by the next input characters.
r is a move with a destination register
r is adjusted according to the branch taken.
r is bufr's read source.
r is either a reader directly reading from mr, or it's a wrapper around such a reader, decoding the Content-Transfer-Encoding
r must be strictly between f0 and f1, the floats bracketing f.
r will now be overwritten by the caller.
r.Eq(s) should be equivalent to every point in r being in s, and every point in s being in r.
r.PostForm should also be populated.
r.column will point to the start of this rune, not the end of this rune.
r0 (the argument, not the register) is the MOV at the end of the above sequences.
r1 updated by back end
rZipBytes returns the bytes of a recursive zip file, without putting it on disk and triggering certain virus scanners.
race detector uses this location for synchronization Also prevents us from pointing beyond the allocation (see issue 9401).
race is ok - s.last is only a cache
racecall allows calling an arbitrary function f from C race runtime with up to 4 uintptr arguments.
raceenabled: don't need to check ep, as it is always on the stack or is new memory allocated by reflect.
raceinit must be the first call to race detector.
raisebadsignal is called when a signal is received on a non-Go thread, and the Go program does not want to handle it (that is, the program has not called os/signal.Notify for the signal).
ranGoBench and benchMatches are the same, but are only used in -race mode.
ranGoTest and stdMatches are state closed over by the stdlib testing func in registerStdTest below.
randFloat32 generates a random float taking the full range of a float32.
randFloat64 generates a random float taking the full range of a float64.
randInt64 returns a random integer taking half the range of an int64.
randomNumber provides better seeding of fastrand1.
randomOrder/randomEnum are helper types for randomized work stealing.
randomish but deterministic data
randomish but deterministic data.
randomly generated test cases
range_stmt - handled by pexpr
rangesMIMESize returns the number of bytes it takes to encode the provided ranges as a multipart response.
ratec controls the max number of tests running at a time.
ratec limits the number of tests running concurrently.
rathole to pass opcode
ratioString takes a list of integer values and returns a string that lists each value and its percentage of the sum of all values.
raw input, right off the wire
raw quoted string (includes quotes)
raw values with whitespace
rawByte is the bottleneck interface for reading from p.in.
rawByte is the bottleneck interface to write to p.out.
rawByte should only be used by low-level decoders.
rawByte should only be used by low-level encoders.
rawEvent is a helper type used during parsing.
rawExpr typechecks expression e and initializes x with the expression value or type.
rawInt64 should only be used by low-level decoders
rawInt64 should only be used by low-level encoders
rawbyteslice allocates a new byte slice.
rawruneslice allocates a new rune slice.
rawstring allocates storage for a new string.
rcdataEscaper escapes for inclusion in an RCDATA element body.
rcvr - U method - M func (t T)(), a TFIELD type struct newnam - the eventual mangled name of this function
rdBuf is used by readString and readSymName as scratch for reading strings.
re is in fact the imaginary component.
re-enable to have the names in the binary.
re-panic if not ErrNaN
re-panics if it's not a localError
re-start the variable generation number we want to use small numbers for the return variables, so let them have the chunk starting at 1.
re-use existing buffers
re.Rune will not grow any more.
reachable is a map from block ID to whether the block is reachable.
reachableBlocks returns the reachable blocks in f.
reached a new unvisited node.
read a chunk to decide between utf-8 text and binary
read a digit, write a digit
read ahead until a newline, EOF, or non-comment token is found
read and discard compiler-specific info
read and interpret syntax that looks like line parse.y:15 as a discontinuity in sequential line numbers.
read and parse load commands
read and switch on instruction /r value
read associated methods
read at end of closed channel
read back zip file and check that we get to the end of it
read buffer w/o the size
read character after "/*"
read character after "//"
read character after '/'
read character after '`'
read character after quote
read data with no buffer
read data with short buffer
read error once empty.
read header into struct
read inconsistent h and t
read inlineable functions bodies
read input from standard input
read low-level encoding format
read objects of phase 1 only (see cmd/compiler/internal/gc/bexport.go)
read of x does not race with...
read of x races with...
read p.From, read p.Reg, write p.To
read p.From, read p.To
read p.From, write p.To
read reads exactly len(b) bytes from the input file.
read reads up to len(b) bytes from the File.
read reglist, read/rar
read rules put into prdptr array in the format target followed by id's of terminals and non-terminals followed by -nprod
read section string table and translate names
read should ignore blank fields in b2
read specifies how to decode bytes into codes.
read the ELF file header to determine the endianness without using the debug/elf package.
read underlying type parser.go:hidden_type
read until have enough.
read until white space or newline
read, read, write, write
read-only ELF, Mach-O sections
read-only after Compile
read-only executable ELF, Mach-O sections
read-write protects the following fields
read/rar, write reglist
readAll reads from r until an error or EOF and returns the data it read from the internal buffer allocated with a specified capacity.
readArmap reads the archive symbol map.
readBlock reads a bzip2 block.
readBuildID reads the build ID from an archive or binary.
readByte reads and returns a byte from the input file.
readByte reads the next byte from the input, saves it in buf, and returns it.
readByte returns the next byte from the input, which may be left over from a previous read if the UTF-8 was ill-formed.
readByte returns the next byte, whether buffered or not buffered.
readByteStuffedByte is like readByte but is for byte-stuffed Huffman data.
readClientHello reads a ClientHello message from the client and decides whether we will perform session resumption.
readColorTable overwrites the contents of d.tmp, but that's OK.
readCommand prompts for and reads the next command.
readComments is like ioutil.ReadAll, except that it only reads the leading block of comments in the file.
readConsole reads utf16 characters from console File, encodes them into utf8 and stores them in buffer b.
readCookies parses all "Cookie" values from the header h and returns the successfully parsed Cookies.
readData reads a data reference from the input file.
readDir calls ctxt.ReadDir (if not nil) or else ioutil.ReadDir.
readDirNames reads the directory named by dirname and returns a sorted list of directory entries.
readDirectory64End reads the zip64 directory end and updates the directory end with the zip64 directory end values.
readDirectoryHeader attempts to read a directory header from r.
readFile adds the AST for a source file to the reader.
readFile reads and returns the content of the named file.
readFileEntry reads a file entry from either the header or a DW_LNE_define_file extended opcode and adds it to r.fileEntries.
readFloat reads a decimal mantissa and exponent from a float string representation.
readFlush returns a slice of the historical buffer that is ready to be emitted to the user.
readFrames is the loop that reads incoming frames.
readFromUntil reads from r into b until b contains at least n bytes or else returns an error.
readFull reads exactly len(p) bytes into p.
readFunc processes a func or method declaration.
readGCStats fills in the pause and end times histories (up to maxPause entries) and then three more: Unix ns time of last GC, number of GC, and total pause time in nanoseconds.
readGNUSparseMap0x1 reads the sparse map as stored in GNU's PAX sparse format version 0.1.
readGNUSparseMap1x0 reads the sparse map as stored in GNU's PAX sparse format version 1.0.
readHandshake reads the next handshake message from the record layer.
readHeader reads the GZIP header according to section 2.3.1.
readHeader reads the line number program header from r.buf and sets all of the header fields in r.
readHeader reads the next block header and assumes that the underlying reader is already aligned to a block boundary.
readHexByte returns the byte from its quoted-printable representation.
readHole reads a sparse hole ending at endOffset.
readIdent reads an identifier from the input.
readImagePass reads a single image pass, sized according to the pass number.
readImport reads an import clause - optional identifier followed by quoted string - from the input.
readImports is like ioutil.ReadAll, except that it expects a Go file as input and stops reading the input once the imports have completed.
readInt reads a zigzag varint from the input file.
readInt reads an int x from r using buf to buffer the read and returns x.
readKeyword reads the given keyword from the input.
readLSB returns the next code for "Least Significant Bits first" data.
readLock adds a reference to fd and locks fd for reading.
readLoop runs in its own goroutine and reads and dispatches frames.
readMSB returns the next code for "Most Significant Bits first" data.
readMessage reads the next nbytes bytes from the input.
readMetaFrame returns 0 or more CONTINUATION frames from fr and merge them into into the provided hf and returns a MetaHeadersFrame with the decoded hpack values.
readMetadata reads and parses the metadata for the next entry in the archive.
readMore should be called once the consumer no longer needs or retains f.
readNote collects a single note from a sequence of comments.
readNotes extracts notes from comments.
readOldGNUSparseMap reads the sparse map as stored in the old GNU sparse format.
readPkgdef extracts the __.PKGDEF data from a Go object file.
readPreface reads the ClientPreface greeting from the peer or returns an error on timeout or an invalid greeting.
readProtocols loads contents of /etc/protocols into protocols map for quick access.
readRawGoBuildID finds the raw build ID stored in text segment data.
readRecord reads the next TLS record from the connection and updates the record layer state.
readResponse reads an HTTP response (or two, in the case of "Expect: 100-continue") from the server.
readRune is a structure to enable reading UTF-8 encoded code points from an io.Reader.
readSeekerFromReader converts an io.Reader into an io.ReadSeeker.
readSetCookies parses all "Set-Cookie" values from the header h and returns the successfully parsed Cookies.
readSlice is like ReadBytes but returns a reference to internal buffer data.
readString decodes an hpack string from p.
readString reads a NUL-terminated string from z.r.
readString reads a length-delimited string from the input file.
readString reads a quoted string literal from the input.
readSymID reads a SymID from the input file.
readSymName reads a symbol name, replacing all "".
readTrace does wire-format parsing and verification.
readType processes a type declaration.
readType reads a type from r at off of name.
readUnlock removes a reference from fd and unlocks fd for reading.
readVal reads unsigned base-128 value from r.
readValue processes a const or var declaration.
readValue reads a JSON value into dec.buf.
readVarInt reads an unsigned variable length integer off the beginning of p.
readdirnames returns the names of files inside the directory represented by dirfd.
reader for current file entry
reader provided by the client
reader will get this error
readfile returns the content of the named file.
reading data in middle of line
reading offset (position after current character)
reading position (srcBuf index)
readonly, non-executable
readpkglist returns the list of packages that were built into the shared library at shlibpath.
readvarint reads a varint from p, returning the value and the remainder of p.
readvarint reads a varint from p.
readvarint reads, removes, and returns a varint from *pp.
real is defined as what xgetwd returns in that directory.
real package for import .
real package, referred to by generated runtime calls
really ../vendor/strings
really CACHE instruction
really must just have source
receive at least one normal byte
receive operations may appear in statement context
receiveExtend is the composition of RECEIVE and EXTEND, specified in section F.2.2.1.
receiver of methods for the service
receiver type after method declaration
receiver type, or nil if none
receiving from a closed channel never blocks
receiving from a non-ready channel always blocks
reclaim from above, for this failure path
recommended initial size
reconstruct suffix array from inverse
reconstructBlock dequantizes, performs the inverse DCT and stores the block to the image.
record all referenced packages as imports
record anonymous fields (they may contribute methods) (some fields may have been recorded already when filtering exports, but that's ok)
record field tracking references
record old End, because the default is to compute it using the length of imp.Path.Value.
record only if first comment of a group
record path to dynamic linker
record the effects of that bit flip
record the init order for variables with initializers only
record the pointer as being nil checked
recordAnonymousField registers fieldType as the type of an anonymous field in the parent type.
recordDef already called
recordIfExit checks sl (the loop containing b) to see if it is outside of loop l, and if so, records b as an exit block from l and returns true.
recordLine records the output line number for the next non-whitespace token in *linePtr.
recordObject already called
recordSizeBoostThreshold is the number of bytes of application data sent after which the TLS record size will be increased to the maximum.
recordSizes should contain a series of records smaller than tcpMSSEstimate followed by some larger than maxPlaintext.
recordVarDecl records them for the given position.
recorded as live on entry" errors from the liveness code.
recordingConn is a net.Conn that records the traffic that passes through it.
records whether a struct-field type has a GCProg
records whether at least one struct-field is a pointer
recover is the handler that turns panics into returns from the top level of Parse.
recover must look back two frames to find the panic.
recreate comments list
recurCount tests that erroneous String routine doesn't cause fatal recursion.
recurse over n, doing init1 everywhere.
recurse to follow one path.
recursive function or group of mutually recursive functions.
recursively, all preds with a greater rpo number are in the loop
recv a close signal (a zero value)
recv parameter list present (may be empty) spec: "The receiver is specified via an extra parameter section preceding the method name.
recv processes a receive operation on a full channel c.
recv unlocks c with unlockf.
recvMessage reads the next count-delimited item from the input.
recvString returns a string representation of recv of the form "T", "*T", or "BADRECV" (if not a proper receiver type).
recvType loads the definition of a type.
recver gets a steam of values from the four mux's and checks for duplicates.
recvsParamsResults stores the accessor functions for a function Type's receiver, parameters, and result parameters, in that order.
redeclare emits a diagnostic about symbol s being redeclared somewhere.
redeclared object must be a variable
redirect .../index.html to .../ can't use Redirect() because that would make the path absolute, which would be a problem running under StripPrefix
redirect if the directory name doesn't end in a slash
redirect output through a tabwriter if necessary
redirect output through a trimmer to eliminate trailing whitespace (Input to a tabwriter must be untrimmed since trailing tabs provide formatting information.
redirect to canonical path: / at end of directory url r.URL.Path always begins with /
redirections for trees
reduce dependency count of all dependent nodes and update priority queue
reduce the number of multiplications by reducing k
reduce two minuses to one
reduce/reduce conflict
reentersyscall is the entry point used by cgo callbacks, where explicitly saved SP and PC are restored.
refBase and refOff optionally give the base address of the object in which the pointer p was found and the byte offset at which it was found.
refahead/refbehind are the regopt variables whose current value may be used in the following/preceding instructions up to a CALL (or the value is clobbered).
reference New in DWARF 4.
reference to a DIE in the .info section
reference to a chan type whose elements need a width check
reference to a func type whose elements need a width check
reference to a slice type for ...
reference to c function pointer (not go func value)
reference to imported package
reference to other entry
reference to relocatable address
reference within the compilation unit
reference: pecoff_v8.docx Page 24.
referenceTypeBuiltin generates code for the len/cap builtins for maps and channels.
refererForURL returns a referer without any authentication info or an empty string if lastReq scheme is https and newReq scheme is http.
refersTo reports whether n is a reference to the same object as x.
refillaCache takes 8 bytes s.allocBits starting at whichByte and negates them so that ctz (count trailing zeros) instructions can be used.
refine decodes a successive approximation refinement block, as specified in section G.1.2.
refineNonZeroes refines non-zero entries of b in zig-zag order.
reflect wants nil for a missing element
reflect.SliceHeader and reflect.StringHeader are okay, but only if they are pointing at a real slice or string.
reflect.Value handled specially in Go 1.5, making it possible to see inside non-exported fields (which cannot be accessed with Interface()).
reflect.Value.Call, .Method, or reflect.Method.Func
reflect.interfaceType
reflectOffs holds type offsets defined at run time by the reflect package.
reflect_addReflectOff adds a pointer to the reflection offset lookup map.
reflect_resolveNameOff resolves a name offset from a base pointer.
reflect_resolveTextOff resolves an function pointer offset from a base type.
reflect_resolveTypeOff resolves an *rtype offset from a base type.
reflectcall calls fn with a copy of the n argument bytes pointed at by arg.
reflectcall did not panic.
reformat to get printing right
reg, reg Register pair for ARM.
regalloc needs flags to be allocated first.
regalloc performs register allocation on f.
regalloc requires all the values in a block to be scheduled
regalloc requires the removal of all critical edges
regardless of the values of H_1 and V_1".
regd, regm are 4bit variables
regd, regm, regn are 4bit variables
regexp contains no counted repetition
regexp to extract tags from list
regexpPrecederKeywords is a set of reserved JS keywords that can precede a regular expression in JS source.
register dr is one of the special ones (AX, CX, DI, SI, etc.).
register input "file"
register number is ARM-specific.
register offset (including register extended)
register or stack slot
register parses a full register reference where there is no symbol present (as in 4(R0) or R(10) but not sym(SB)) including forms involving multiple registers such as R1:R2.
register variables allocated from here to REGMAX
register/register, and shifted
registerHTTPSProtocol calls Transport.RegisterProtocol but convering panics into errors.
registerIndirect parses the general form of a register indirection.
registerReference parses a register given either the name, R10, or a parenthesized form, SPR(10).
registerShift parses an ARM shifted register reference and returns the encoded representation.
registers currently holding something
registers holding final target
registers holding the only copy of a value
registers implicitly set by this instruction
registers implicitly used by this instruction
registers that contain values which can't be kicked out
registers used by addressing mode
regopt variables written by this instruction.
regs is in priority order, so iterate in reverse order.
regular argument (sexpr or variable)
regular for statement
regular type assertion
regular types are passed by reference to avoid C vararg calls orderexpr arranged for n.Left to be a temporary for all the conversions it could see.
reimburseSweepCredit records that unusableBytes bytes of a just-allocated span are not available for object allocation.
relPaths returns a copy of paths with absolute paths made relative to the current directory if they would be shorter.
rela size before current entry rela
related: address of variable should have depth of variable, not of loop
relation represents the set of possible relations between pairs of variables (v, w).
relative execution priority
relative offset of the zip64 end of central directory record
relative to address after the relocated chunk
relative to section offset, not symbol
relative to the current path
relative to the current path (+ going upwards)
relax the constraint and fix call sites.
release all writers (they will panic)
release cond2 after select has gotten to run
release lock while getting caller info - it's expensive.
releaseConn set below
releases the current release is compatible with
reloadPackage is like loadPackage but makes sure not to use the package cache.
relocByOff sorts relocations by their offsets.
relocation for extern or static symbols (address taking)
relocation for extern or static symbols (loads and stores)
relocation offset from start of instruction
relocation operations
relocation section - no addends
relocation section with addends
relocations to apply to Data
rels is a relocations section in RELA format.
rely on runtime to instrument copy.
rely on typecheck having complained before
remainder, result not exact
remapLocationIDs ensures there is a location for each address referenced by a sample, and remaps the samples to point to the new location ids.
remapMappingIDs matches location addresses with existing mappings and updates them appropriately.
remember arguments that have been evaluated already
remember corresponding assignment for other tools
remember initial exportlist length
remember location after first ptr, since that's how many bytes we consumed.
remember that this variable references the given value
remember the corresponding declaration for redeclaration errors and global variable resolution/typechecking phase
remember when we've first observed the G blocked needed only to output in traceback
remoteAddr is rwc.RemoteAddr().String().
remove and return element Len() - 1.
remove any blocks orphaned during opt
remove clobbered values
remove critical edges
remove empty declarations such as "const ()", etc
remove function names retrieved previously
remove gc-specific parameter numbering
remove generated dead code to avoid doing pointless work during opt
remove leading TrimPath from recorded file names
remove object dir to keep the amount of garbage down in a large build.
remove parens, then split
remove parens, then split Find op record
remove parens, then split check match of control value
remove records whether the jar should delete this cookie, as it has already expired with respect to now.
remove removes e from its list, decrements l.len, and returns e.
remove removes pc from cl.
remove removes the desired registers for vid and returns them.
remove runtimegen files.
remove scope ID if present
remove terminating null
remove trailing */ of multi-line comment
remove trailing blank from prefix so stars remain aligned
remove trailing blank, if any
remove types w/o declaration or which are not visible
remove vsp from b.Values
removeChild removes a context from its parent.
removeChunkExtension removes any chunk-extension from p.
removeClosedStmtLocked removes closed conns in s.css.
removeDep notes that x no longer depends on dep.
removeEmptyPort strips the empty port in ":port" to "" as mandated by RFC 3986 Section 6.2.3.
removeErrorField removes anonymous fields named "error" from an interface.
removeFile tries to remove file f, if error other than file doesn't exist occurs, it will report the error.
removeFutile removes all constituents of futile wakeups (block, unblock, start).
removeIdleConn marks pconn as dead.
removeLeadingDuplicates remove leading duplicate in environments.
removeLeadingRegexp removes the leading regexp in re.
removeLeadingString removes the first n leading runes from the beginning of re.
removeLoadHitStores trys to remove loads that take place immediately after a store to the same location.
removeNodes removes nodes from a report, optionally bridging connections between in/out edges and spreading out their weights proportionally.
removeOneCPU removes one (any) cpu from affinity mask.
removeOneCPU should have decreased child cpu count by 1
removePadding returns an unpadded slice, in constant time, which is a prefix of the input.
removePaddingSSL30 is a replacement for removePadding in the case that the protocol version is SSLv3.
removePred removes the predecessor p from b's predecessor list.
removeRedundantEdges removes residual edges if the destination can be reached through another path.
removeWhitespace returns a copy of its input with all spaces, tab and newline characters removed.
removeZone removes IPv6 zone identifier from host.
removesBoundsChecks remove IsInBounds and IsSliceInBounds based on the induction variables.
renameTop renames all references to the top-level name old.
renameTop will also rewrite the imported package name.
renegotiationExpectedToFail, if not zero, is the number of the renegotiation attempt that is expected to fail.
reordered records whether the format string used argument reordering.
repeat expecting denormal
repeat replaces the top stack element with itself repeated according to op, min, max.
repeat returns an updated 'after' and an error, if any.
repeat rewrites until we find no more rewrites
repeat(elemSize/ptrSize, count-1)
repeatIsValid reports whether the repetition re is valid.
repeatReader reads content count times, then EOFs.
repeated directoryEndSignatures
replace any invisibles with blanks
replace arg0 w/ constant if Z not set
replace arg0 w/ constant if Z set
replace b with d in c's successor list.
replace one line error message with all lines (full message)
replace w/ t.Fatal eventually
replaceReqCanceler replaces an existing cancel function.
replacer is the interface that a replacement algorithm needs to implement.
reply header has been (logically) written
repo is the repository URL, including scheme
repoRoot represents a version control system, a repo, and a root of where to put it on disk.
repoRootForImportDynamic finds a *repoRoot for a custom domain that's not statically known by repoRootForImportPathStatic.
repoRootForImportPath analyzes importPath to determine the version control system, and code repository to use.
repoRootFromVCSPaths attempts to map importPath to a repoRoot using the mappings defined in vcsPaths.
report all errors (not just the first 10 on different lines)
report at start of record
report declaration errors
report error at line of ':' token
report exported methods with unexported receiver base type
report format to generate
report mem stats to run pass
report only first error
report time to run pass
reportCycle reports an error for the cycle starting at i.
reported indicates whether an error has already been reported for this label
reports errors to parser.Errorf
reports whether the name starts with a capital letter
repository to use (expand with match of re)
representable checks that a constant operand is representable in the given basic type.
representableConst reports whether x can be represented as value of the given basic type and for the configuration provided (only needed for int/uint sizes).
represents a dnsConfig returned by parsing a nonexistent resolv.conf
represents possible synchronization in C code Pointer checking for cgo code.
req is either the original request, or a modified fork
request for this response
request holds the state for an in-progress request.
requestBodyLimitHit is set by requestTooLarge when maxBytesReader hits its max size.
requestBodyRemains reports whether future calls to Read on rc might yield more data.
requestTooLarge is called by maxBytesReader when too much input has been read from the client.
request_test.go contains the start of this, in TestParseMultipartFormOrder and others.
required for x86 SSE instructions, if we want to use them
required prefix in unanchored matches
required to merge OpSB values
requires 4.5 - File uses ZIP64 format extensions
requires cc.mu be held.
requires cc.wmu be held
requires memory intermediate
requires p.mu be held.
requires p.mu is held.
requires register destination
requires register intermediate
requires register source
requires special handling of field names
res is string, elem size is 1 (byte)
res maps a key of the form "line number: node type" to the associated comments' text.
res_0: Add DT_PPC64_GLINK .dynamic entry, which points to 32 bytes before the first symbol resolver stub.
rescan is a list of G's that need to be rescanned during mark termination.
reseed after generating 1MB
reserve makes sure that block contains a capacity of at least n bytes.
reserve n for entry-1, assign n+1 to entry
reserve n for exit-1, assign n+1 to exit
reserve n+1 for entry+1, n+2 is next free number
reserve n+1 for exit+1, n+2 is next free number, returned.
reserved - purpose unknown
reserved for SP We need to preserve the C ABI TLS pointer because sigtramp may happen during C code and needs to access the g.
reserved for runtime, duffcopy
reserved for runtime, duffzero and duffcopy
reserved range for application
reserved range for processor
reset allocation index to start of span.
reset is used by tests
reset position to the beginning of the comment
reset prepares the scanner for use.
reset resets the state of the backtracker.
reset scanner state to where it was upon calling findLineEnd
reset the Once to trigger the race
reset to original type
reset token text position
resetFileStamps makes "everything" (bin, src, pkg from GOPATH and the test-specific parts of GOROOT) appear old.
resetReadOnlyFlagAll resets windows read-only flag set on path and any children it contains.
resetState resets r.state to its default values
residual edges connect nodes that were connected through a separate node, which has been removed from the report.
residual marks new bridge edges as residual (dotted).
resize resizes block to be n bytes, growing if necessary.
resolve ONONAME to definition, if any.
resolve and type-check package AST
resolve global identifiers within the same file
resolve matching forward jumps and remove them from fwdJumps
resolve will check s.Def again once all input source has been processed.
resolveFwdRef modifies v to be the variable's value at the start of its block.
resolveNameOff resolves a name offset from a base pointer.
resolveOrder computes the order in which package-level objects must be type-checked.
resolvePath applies special path segments from refs and applies them to base, per RFC 3986.
resolveReflectText adds a function pointer to the reflection lookup map in the runtime.
resolveReflectType adds a *rtype to the reflection lookup map in the runtime.
resolveReflectType adds a name to the reflection lookup map in the runtime.
resolveTextOff resolves an function pointer offset from a base type.
resolveTypeOff resolves an *rtype offset from a base type.
resolver configuration lines
resolverAddrList resolves addr using hint and returns a list of addresses.
respect existing tabs - important for proper formatting of commented structs
response implements http.ResponseWriter.
responseAndError is how the goroutine reading from an HTTP/1 server communicates with the goroutine doing the RoundTrip.
responseWriter is the http.ResponseWriter implementation.
rest of exp and mantissa (cd-efgh)
restore restores known relation to the state just before the previous checkpoint.
restore rounding mode
restore signal mask from m.sigmask and unblock essential signals
restore the preemption request in Case we've cleared it in newstack
restore the preemption request in case we've cleared it in newstack
restored to zero value
result is assignable if n is.
result is constant - no need to record signature
result is same as 1st argument
result is same as 2nd argument
result may not be assignable.
result of an n-valued function call
result of the writeFrame call
result will be like "prw-rw-rw"
results in the fields
resume same panic if it's not a bailout
retSparseSet returns a sparse set to the config's cache of sparse sets to be reused by f.newSparseSet.
retake P's blocked in syscalls and preempt long running G's
retrieve the autobind address
retryWithBuffer repeatedly calls f(), increasing the size of the buffer each time, until f succeeds, fails with a non-ERANGE error, or the buffer exceeds a reasonable limit.
return 0 on failure, 1 on success.
return 1 if 2 arrays are equal return 0 if not equal
return 1 if v only used (and substitute), 2 if read-alter-rewrite 3 if set 4 if set and used 0 otherwise (not touched)
return Axxx for Oxxx on type t.
return a copy of slice.
return a pointer to the name of symbol i
return address for mach ipc
return comments as COMMENT tokens
return constant i node.
return correctly abs(-0)
return f() where f() is multiple values.
return followed by a slash returns the regexp literal or the slash starts a regexp literal in an expression statement that is dead code.
return function type, receiver as first argument (or not).
return has results or result parameters are unnamed
return power of 2 of the constant operand.
return ref to closure var, not original
return side effect-free n, appending side effects to init.
return side-effect free and cheap n, appending side effects to init.
return the ODCLTYPE node to use.
return the bufio Writer's cached write error
return the size in bytes
return the unsigned type for a signed integer type.
return to other function
return value is whether this request is now complete.
return values handled below.
return0 is a stub used to return 0 from deferproc.
returnInt returns an int
return_address_register
returns *gc.Sym Auto returns a Node for an auto variable of the given type.
returns Prog* to patch to panic call.
returns T if input is not a signed integer type.
returns an error (but does not crash)
returns both key and value.
returns errNeedMore if there isn't enough data available.
returns in extern-declaration context.
returns only results applicable to name and resolves CNAME entries
returns the last CNAME in chain
returns the number of bytes generated.
returns the serialized index size
returns true if IO is ready, or false if timedout or closed waitio - wait only for completed IO, ignore errors
returnsfromheap returns code to copy values for heap-escaped parameters back to the stack.
reusable priority queue
reuse and extend existing table of divisors or create new table as appropriate
reuse old table for this conversion
reuse original default case
reuse original for first sunk spill, saves tracking down and renaming uses
reuse reg pointer for mark/sweep state.
reusePackage reuses package p to satisfy the import at the top of the import stack stk.
reused for reading strings object lists, in order of deserialization
reverse direction of arg0 Pseudo-ops
reverse during load to do the first 32 bits of rotate
reverse is the predecessor from which the truth value comes.
reverse post ordering
reverse post-order number (also index in cfg)
reverseBits reverses the order of the bits of 4-bit number in i.
reverseaddr returns the in-addr.arpa.
revise updates the assist ratio during the GC cycle to account for improved estimates.
revisit - okay for now
rewind over slash in ".../internal"
rewind over slash in ".../vendor"
rewind to output whole file
rewrite ...T parameter
rewrite 64-bit div and mod into function calls on 32-bit architectures.
rewrite complex div into function call.
rewrite name to use .
rewrite phi ops to match the new predecessor list
rewrite rewrites a subname to having only printable characters and no white space.
rewrite section names if they start with /
rewrite so that's the fall-through case.
rewriteCall rewrites one call to add pointer checks.
rewriteCalls rewrites all calls that pass pointers to check that they follow the rules for passing pointers between Go and C.
rewriteImport rewrites any import of path oldPath to path newPath.
rewriteRef rewrites all the C.xxx references in f.AST to refer to the Go equivalents, now that we have figured out the meaning of all the xxx.
rewrites one or more common Prog constructs that enable some otherwise non-onepass Progs to be onepass.
rex byte if present (or 0)
rfc1423Algo holds a method for enciphering a PEM block.
rfc1423Algos holds a slice of the possible ways to encrypt a PEM block.
rgb returns an rgb value for the specified coverage value between 0 (no coverage) and 10 (max coverage).
rgbaToYCbCr is a specialized version of toYCbCr for image.RGBA images.
rgz is a gzip quine that uncompresses to itself.
rhs is expected to be a multi-valued expression
rhs is range expression (any short variable declaration was handled by parseSimpleStat above)
rhs must be a constant
rhs must be an integer value
rhs must be of the form: expr.(type) and expr must be an interface
rhs must be single receive operation
rhs must be within reasonable bounds
rhs of RecvStmt, or nil
right action delimiter
right must be unsigned.
right now all we need is the name list.
right rotate through carry (Count will always be 1)
right rotate-carry: ARCR.
right-shifting by five) gives the number of bytes to move ahead for each iteration.
rightTrimLength returns the length of the spaces at the end of the string.
rleBuffer is a run-length-encoded byte buffer.
rm -f pkg.a Copyright 2012 The Go Authors.
rmworkdir deletes the work directory.
roll returns the (result, turnIsOver) outcome of simulating a die roll.
roll-your-own relocation .plt index
room for the "halt sled"
root URI prefix of handler or empty for "/" Dir specifies the CGI executable's working directory.
root is the import path corresponding to the root of the repository
root of Go tree where this package lives
root scan work available
rootBlockBytes is the number of bytes to scan per data or BSS root.
rootBlockSpans is the number of spans to scan per span root.
rooted suffixes to append to local name
rotate halves of permuted key according to the rotation schedule
rotate the 5 highest bits to the right.
rough count of number of instructions
round according to extra bit
round accurate z for a variety of precisions and modes and compare against result of x / y.
round if result is inexact
round n up to a multiple of a.
round returns the Float value corresponding to x after rounding x to prec bits according to mode.
round robin among servers
round rounds z according to z.mode to z.prec bits and sets z.acc accordingly.
round sets x to (at most) n mantissa digits by rounding it to the nearest even value with n (or fever) mantissa digits.
round up to microsecond
round x up to a power of 2.
roundDown10 rounds a number down to the nearest power of 10.
roundRobin simulates a series of games between every pair of strategies.
rounded up to smallest denormal
rounded up to smallest normal
rounds needed for AES128
row determined by 1st and 6th bit column is middle four bits
row, starting with row 0.
row, starting with row 1.
row, starting with row 2.
row, starting with row 4.
rsaKeyAgreement implements the standard TLS key agreement where the client encrypts the pre-master secret to the server's public key.
rselect runs a select.
rstAvoidanceDelay is the amount of time we sleep after closing the write side of a TCP connection before closing the entire socket.
rsym and roff specify the relocation for the address.
rt_metrics on amd64 is simply doubled
rtcall issues a call to the given runtime function fn with the listed args.
rtype is the common implementation of most values.
rule about untyped constants - already converted by defaultlit.
run Copyright 2009 The Go Authors.
run Copyright 2010 The Go Authors.
run Copyright 2011 The Go Authors.
run Copyright 2013 The Go Authors.
run Copyright 2014 The Go Authors.
run Copyright 2015 The Go Authors.
run Copyright 2016 The Go Authors.
run all test with 4 buffser sizes
run all tests with specified buffer size
run as `go run copyGen.go`.
run as `go run zeroGen.go`.
run executes the benchmark in a separate goroutine, including all of its subbenchmarks.
run in its own goroutine.
run it through an interface
run of spaces separating arguments
run of upper-case letters too long.
run or done result from applying the call
run pending test commands, in parallel, emitting headers as appropriate.
run runs a command and calls t.Errorf if it fails.
run runs the command argv, feeding in stdin on standard input.
run runs the command given by cmdline in the directory dir.
run runs the command line cmd in dir.
run runs the command line cmd in the given directory.
run runs the docs tests found in this directory.
run runs the generators in the current file.
run runs the jarTest.
run runs the state machine for the lexer.
run runs the test go command, and expects it to succeed.
run the quote tests too, backward
run times the benchmark function in a separate goroutine.
run1 is the generalized implementation of run and runOutput.
run1 must have been called on b.
run1 runs the first iteration of benchFunc.
runFail runs the test go command, and expects it to fail.
runGCProg returns the number of 1- or 2-bit entries written to memory.
runGcc runs the gcc command line args with stdin on standard input.
runGit runs a git command, and expects it to succeed.
runN runs a single benchmark for the specified number of iterations.
runOut runs the command given by cmdline in the directory dir.
runOutput is like run but returns the output of the command.
runProgram is the action for running a binary that has already been compiled.
runSafePointFn may stack split if run on this stack
runSafePointFn runs the safe point function, if any, for this P.
runSelect runs a single select test.
runStdin is like run, but connects Stdin.
runTest is the action for running a test binary.
runTests assures that the package and its dependencies is built with instrumentation enabled and returns the output of 'go test' which includes possible data race reports from ThreadSanitizer.
runTests runs tests in parallel, but respecting the order they were enqueued on the toRun channel.
runVerboseOnly is like run but only generates error output to standard error in verbose mode.
rune is an alias for int32 and is equivalent to int32 in all ways.
runeScanner implements the Scanner interface for TestScanStateCount.
runeSlice exists to permit sorting the case-folded rune sets.
runes are signed, so convert to unsigned for range check.
runes consumed so far.
runes returns v's underlying value.
runetochar converts r to bytes and writes the result to str.
rungatec controls the max number of runoutput tests executed in parallel as they can each consume a lot of memory.
runnext, if non-nil, is a runnable G that was ready'd by the current G and should be run next instead of what's in runq if there's time remaining in the running G's time slice.
running is the number of tests currently running in parallel.
runningGoroutines returns a list of remaining goroutines.
runqempty returns true if _p_ has no Gs on its local run queue.
runqput tries to put g on the local runnable queue.
runtime (and common sense) expects alignment to be a power of two.
runtime compiles with a special gc flag to emit additional reflect type data.
runtime interface and reflection data structures
runtime offsetof(Array,array) - same for String
runtime offsetof(Array,cap)
runtime offsetof(Array,nel) - same for String
runtime sizeof(Array) note this is the runtime representation of the compilers strings.
runtime sizeof(String)
runtime.MemStats sometimes reports more allocations than the benchmark is responsible for.
runtime.UnlockOSThread() is deliberately omitted
runtime.callbackasm is just a series of CALL instructions (each is 5 bytes long), and we want callback to arrive at correspondent call instruction instead of start of runtime.callbackasm.
runtime.cgocall (below) locks g to m, calls entersyscall so as not to block other goroutines or the garbage collector, and then calls runtime.asmcgocall(_cgo_Cfunc_f, frame).
runtime.deferreturn modifies its return address to return back to the CALL, not to the subsequent instruction.
runtime.getg() (read g pointer)
runtime.getg() (read g pointer).
runtime.getg() is not a real function and so does not get a funcsym.
runtime.intstring used to convert int64 to rune without checking for truncation.
runtime.racesymbolizethunk is called from gcc-compiled C code running on the operating system thread stack.
runtime.tlsg is used for external linking on platforms that do not define a variable to hold g in assembly (currently only intel).
runtime.uncommontype Type.commonType.kind
runtimeInitTime is the nanotime() at which the runtime started.
runtimeNano returns the current value of the runtime clock in nanoseconds.
runtime_AfterFork will undo this in parent process, but not in child.
runtime_canSpin returns true is spinning makes sense at the moment.
runtime_doSpin does active spinning.
runtime_pollWait will check for timeout/cancel before waiting.
rwc is the underlying network connection.
s can be given as a fraction "a/b" or as a floating-point number optionally followed by an exponent.
s guaranteed to be an *ast.ValueSpec by readValue
s must be a floating-point number of the same format as accepted by Parse, with base argument 0.
s must be on a busy list (h.busy or h.busylarge) or unlinked.
s will be encoded in Huffman codes only when it produces strictly shorter byte string.
s will now have a free stack
s.baseMask is 0, elemsize is a power of two, so shift by s.divShift
s.tokEnd is set by Scan()
s0 and s1 are equal with b if the corresponding block is missing (2nd, 3rd and 4th case in the figure).
s1 is initialized to 1, s2 to zero.
s390x (ELF64) hash table entries are 8 bytes
s3a collect unresolved identifiers
sLimit is when to stop looking for offset/length copies.
safe to copy interface values
safe to copy this pointer
safePos returns a valid file position for a given position: If pos is valid to begin with, safePos returns pos.
safepointFn should be called on each P at the next GC safepoint if p.runSafePointFn is set.
salt is a random sequence of bytes whose length will be later used to verify the signature.
same as AllErrors, for backward-compatibility
same as above, but evacuated to second half of larger table.
same as above, but representing the most simple possible request and handler.
same as closed, but guarded by db.mu, for removeClosedStmtLocked
same as foo121 but check across import
same const identifier declared twice should not be accepted
same contents, different string
same file, decreasing line number
same int as k1, different type
same key length as "foo"
same pair was compared before
same reports whether n1 and n2 are the same register or constant.
same special cases as Sin
same type as k2, different int
same windowed exponent, but with Montgomery multiplications
sameId reports whether obj.Id() and Id(pkg, name) are the same.
sameStackMem returns true if a and b are both memory operands and address the same location which must reside on the stack.
sample operands above require 2 bits to represent mantissa set binary precision to 2 to round them to integer values
sampleFormat returns a function to extract values out of a profile.Sample, and the type/units of those values.
sampled errors, at most cap
sanity check some often mis-used options
save a copy of the export data
save current ax and dx if they are live and not the destination
save current iota value in const declarations
save elsewhere and store on the eventual n.Right.
save for error message
save original z2:z0 (ok to use upper half of z since we're done recursing)
save phi ops for later
save the original node for bounds checking elision.
save/restore current context and setup function context (and use 0 indentation at function start)
save/restore current context and setup object context
save/restore current p.commentInfo (p.nextComment() modifies it)
saveError saves the first err it is called with, for reporting at the end of the unmarshal.
saved state does not include the state of phi ops in the block.
savedCode is the accumulated code at the end of the most recent Write call.
sb is ASCII and t is not.
sbit must be 0 or 1 and summarizes any "sticky bit" information one might have before calling round.
scalar floating point
scalar values with the (unused by fmt) 'a' verb.
scale b to avoid spurious overflow
scale scales the 16x16 region represented by the 4 src blocks to the 8x8 dst block.
scaleDenom computes x*f.
scaleHeapSample adjusts the data from a heapz Sample to account for its probability of appearing in the collected data.
scaleHeapSample unsamples heap allocations.
scaled 12-bit unsigned displacement store
scaled register offset
scan is like Parse but reads the longest possible prefix representing a valid floating point number from an io.ByteScanner rather than a string.
scan is passed in for use by checkValid to avoid an allocation.
scan is passed in for use by nextValue to avoid an allocation.
scan scans the archive and executes the specified action on each entry.
scan scans the number corresponding to the longest possible prefix from r representing an unsigned number in a given conversion base.
scan sets z to the integer value corresponding to the longest possible prefix read from r representing a signed integer number in a given conversion base.
scanBasePrefix reports whether the integer begins with a 0 or 0x, and returns the base, digit string, and whether a zero was found.
scanBool returns the value of the boolean represented by the next token.
scanChunk gets the next segment of pattern, which is a non-star string possibly preceded by a star.
scanEnd is delayed one byte.
scanError represents an error generated by the scanning software.
scanEscape parses an escape sequence where rune is the accepted escaped quote.
scanExponent scans the longest possible prefix of r representing a decimal ('e', 'E') or binary ('p') exponent, if any.
scanInt returns the value of the integer represented by the next token, checking for overflow.
scanInts performs the same scanning task as RecursiveInt.Scan but without recurring through scanner, so we can compare performance more directly.
scanNum advances through a decimal number if present.
scanNumber returns the numerical string with specified digits starting here.
scanOne scans a single value, deriving the scanner from the type of the argument.
scanRune returns the next rune value in the input.
scanUint returns the value of the unsigned integer represented by the next token, checking for overflow.
scanWork is the total scan work performed this cycle.
scanblock scans b as scanobject would, but using an explicit pointer bitmap instead of the heap bitmap.
scang blocks until gp's stack has been scanned.
scang must be done on the system stack in case we're trying to scan our own stack.
scannerMode returns the scanner mode bits given the parser's mode bits.
scanning mode scanning state
scanobject scans the object starting at b, adding pointers to gcw.
scatterbrained relocation
scavenge heap once in a while
sched.pidle will not change because we hold sched.lock.
scheduleFrameWrite tickles the frame writing scheduler.
scope descriptions must match
scope in which this object is declared
scope lookup errors are silently dropped if package is fake (internal use only)
scope of file containing this declaration
scopePos returns the start position of the scope of this Object
scpSyntaxRe matches the SCP-like addresses used by Git to access repositories by SSH.
scratch buffer for traceback
scratch register used in the assembler and linker
scratch space for computing dominators
scratch space for decoding uints.
scratch sparse sets to be re-used.
scribble non-zero values on stack
sctsBase64 contains data from `openssl s_client -serverinfo 18 -connect ritter.vg:443`
sealNonce and openNonce are buffers where the larger nonce will be constructed.
searchTable searches f in both stable and dynamic header tables.
sec gives the number of seconds elapsed since January 1, year 1 00:00:00 UTC.
second argument in consecutive pair not printed
second half of dance.
second marks end of exports / beginning of local data
second pass - look for smaller to add with.
second time shouldn't increase footprint by much
seconds, nanoseconds, bytes, etc
sect should be a macho.Section32 or macho.Section64 as appropriate.
section C3.2.6 Unconditional branch (immediate)
section offset of byte following program
section offset of line number program
section where symbol is defined
section with nonlazy symbol pointers
sectionData gets the data for s, checks its size, and applies any applicable relations.
secureRenegotiation is true if the server echoed the secure renegotiation extension.
securityMode specifies whether a function should make network calls using insecure transports (eg, plain text HTTP).
sed RE above assumes that (reason) is the last parenthesized phrase in the line, and that none of the reasons contains any parentheses
see "Hacker's Delight", section 2-12 (overflow detection)
see ../../cmd/internal/gc/reflect.go
see ../arm/asm.go:/machoreloc1
see ../runtime/iface.go:/Itab
see accept in fd_unix.go
see accept in fd_windows.go
see cmd/internal/ld/data.go for details.
see comment above eofc declaration
see comment for corresponding code in decoder.value()
see comment for unary expressions
see comment in List.Remove about initialization of l
see comment in entersyscall
see comment in race_test.go
see comments in syncStmt
see constant declarations
see golang.org/issue/10775
see golang.org/issue/12806
see golang.org/issue/5349
see golang.org/issue/5349 Placeholders for socket system calls.
see golang.org/issue/6232
see golang.org/issue/6646
see golang.org/issue/8044
see golang.org/issue/8916
see golang.org/issue/8996
see golang.org/issue/9252
see golang.org/issues/15204
see http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/arch/powerpc/include/uapi/asm/ucontext.h
see http://www.agner.org/optimize/optimizing_assembly.pdf for discussion.
see https://golang.org/issue/5200.
see if there is a conflicting declaration in altScope
see if we need to round up
see issue 8774: this code used to trigger an infinite recursion
see p.param use of TDDDFIELD
see parser.new_dotname
see pre-clobber comment below
see unsafeCheckPointerName
seek relative to the current offset
seek relative to the end
seek relative to the origin of the file
seek to OriginalFirstThunk
seg should be a macho.Segment32 or macho.Segment64 as appropriate.
segment for entire file
segment for zero page
segment prefixes consumed by Mem formatting
select an argument based on which predecessor block we came from
select different from switch.
select send to direct recv
select send to select recv
select should not get confused if it sees itself
select statements may introduce flakiness: whether this test contains a race depends on the scheduling (some may argue that the code contains this race by definition)
select temps should disappear in the case bodies
selectClientCertSignatureAlgorithm returns a signatureAndHash to sign a client's CertificateVerify with, or an error if none can be found.
selectTag returns the closest matching tag for a given version.
selectWatch and the selectWatcher are a watchdog mechanism for running Select.
selected denormalized values that were handled incorrectly in the past
selectgo does not return.
selectgo implements the select statement.
selectgoImpl returns scase.pc and scase.so for the select case which fired.
selectorExpr handles an *ast.SelectorExpr node and returns whether x spans multiple lines.
selects with closed channels behave like ordinary operations
selects with default cases don't block
selects with non-ready non-nil channels always block
selects with only nil channels always block
selects with ready channels don't block
self move check TODO(mundaym): use sized math and extend to MOVB, MOVWZ etc.
selv is no longer alive after use.
semaphore for parking on locks
semaphore for readers to wait for completing writers
semaphore for writers to wait for completing readers
semawakeup can be called on signal stack.
send a response if we actually managed to read a header.
send at least one normal byte
send but do not block for it
send empty record to close the stream
send error code on pipe
send error string on pipe
send headers and some body
send issues an HTTP request.
send on closed channel
send processes a send operation on an empty channel c.
send unlocks c with unlockf.
sendActualType sends the requested type, without further investigation, unless it's been sent before.
sendAlert sends a TLS alert message.
sendFile copies the contents of r to c using the TransmitFile system call to minimize copies.
sendFile copies the contents of r to c using the sendfile system call to minimize copies.
sendType sends the type info to the other side, if necessary.
sendTypeDescriptor makes sure the remote side knows about this type.
sendTypeId sends the id, which must have already been defined.
sender sends a counter to one of four different channels.
sending to a closed channel panics.
sending to an async channel with free buffer space never blocks
sending/receiving from a nil channel blocks
sending/receiving from a nil channel inside a select is never selected
sends/recvs on a channel
separating "," if needed
separator if needed (linebreak or blank)
separator is an empty //-style comment that is interspersed between different comment groups when they are concatenated into a single group
seqNum is a sequence number so that Cookies returns cookies in a deterministic order, even for cookies that have equal Path length and equal Creation time.
seqinc is a stub for cases when event increments g sequence, but since we don't know current seq we also don't know next seq.
sequence number chosen by client
sequence number in flow graph
sequence number when tracing was started
serialiseAndParse generates a self-signed certificate from template and returns a parsed version of it.
serve returns a handler that sends a response with the given code.
serveContent will check modification time
server addresses (in host:port form) to use
server has told us to stop
server is the server on which the connection arrived.
server name requested by client, if any (server side only)
server subtype file data
serverHandler delegates to either the server's Handler or DefaultServeMux and also handles "OPTIONS *" requests.
serverHandshake performs a TLS handshake as a server.
serverHandshakeState contains details of a server handshake in progress.
serverName contains the server name indicated by the client, if any.
serverPort contains the port that OpenSSL will listen on.
serverSum returns the contents of the verify_data member of a server's Finished message.
serverTest represents a test of the TLS server handshake against a reference implementation.
services contains minimal mappings between services names and port numbers for platforms that don't have a complete list of port numbers (some Solaris distros).
sessionState contains the information that is serialized into a session ticket in order to later resume a connection.
sessionTicketKeys contains zero or more ticket keys.
set MSDOS attributes too, as the original zip does.
set a to the union of a and b return 1 if b is not a subset of a, 0 otherwise
set auto to point at new temp or heap (3 assign)
set before calling colasdefn for correct error line
set before readerDone is closed
set by call to mywhatsys()
set by cmd/link on arm systems
set by eagain.go on unix systems hideAgainReader masks EAGAIN reads from /dev/urandom.
set by race.go A Header represents the key-value pairs in an HTTP header.
set by the writeHeader method:
set changes the contents of location loc to hold the given value and its cached representative.
set correct import context (since p.typ() may be called while importing the body of an inlined function)
set creates the corresponding Func for f and adds it to mset.
set elements 0 through n-1 to c
set even for macros, to avoid loop on cycle Upper-case names are macro-expanded.
set fake sentinel position to infinity so that all comments get processed before the sentinel
set finalizer on string contents of y
set function scope extent
set if FindFirstFile returns ERROR_FILE_NOT_FOUND
set if Val overflowed compiler limit (sticky)
set if a value is out of range
set if an expression contains a function call or channel receive operation
set if execution of f panicked with ErrNaN protect execution of f
set if syntax indicates default type rune
set if the label was used
set if the package was used
set if the variable was used
set if there was any pointer indirection on the path
set immediate operand M3 to 5 for rounding toward zero (required by Go spec) M4 is reserved and must be 0
set in init() after builtins are established
set instruction opcode
set key to something random
set non-nil when conn is closed, before closech is closed
set of all labels in this body
set of true bools The finalCloser interface is used by (*DB).addDep and related dependency reference counting.
set on request and updated after response from handler if there's a "Connection: keep-alive" response header and a Content-Length.
set receiver TODO(gri) Ideally, we should use a named type here instead of typ, for less verbose printing of interface method signatures.
set request canceler to some non-nil function so we can detect whether it was cleared between now and when we enter roundTrip
set round to zero mode during conversion
set search path to given servers
set search path to just this domain
set sets the code and length of an hcode.
set sets the type of n to typ.
set that as the selection
set the 'correct' answer
set the gpp semaphore to WAIT
set to false by lookup_stubs.go's init
set to nil by the first cancel call
set to non-nil by the first cancel call
set to relative directory to root (also chopped root directory)
set to true in gcphasework
set token position (this is a slightly optimized version of the code in Pos())
set true in cgo_stub.go for build tag "netgo" (or no cgo)
set true in conf_netcgo.go for build tag "netcgo"
set true when the handler exits Buffers for Date and Content-Length
set up addend for eventual relocation via outer symbol.
set up comment reader r
set up domain for labels
set up expected position
set up for continue/break in body
set up labels and jumps
set up nodes representing fp constants
set up out list on this call node with dummy auto ONAMES in the current (calling) function.
set up the Request (re-used for all tests)
set up the pkgScope here (as opposed to in parseFile) because there are other parser entry points (ParseExpr, etc.)
set up to k bits at index i and greater
set up with empty interface
set when we are waiting for trace reader to finish after setting enabled to false
set while building a type
setBoolFlag sets the addressed boolean to the value.
setBytes interprets buf as the bytes of a big-endian unsigned integer, sets z to that value, and returns z.
setCheckmarked sets the checkmarked bit.
setCipherSuite sets a cipherSuite with the given id as the serverHandshakeState suite if that cipher suite is acceptable to use.
setConnState calls the net/http ConnState hook for this connection, if configured.
setConst sets x to the untyped constant for literal lit.
setCookies is like SetCookies but takes the current time as parameter.
setDefaultValue is used to install a default value, from a tag string, into a Value.
setEnv sets the extra environment variables used when executing a single go:generate command.
setErr records the first error encountered.
setExit sets the value for os.Exit when it is called, later.
setGranularityToggle manages the set of granularity options.
setIntFlag sets the addressed integer to the value.
setMain scans Mapping entries and guesses which entry is main because legacy profiles don't obey the convention of putting main first.
setMarked sets the marked bit in the markbits, atomically.
setMarkedNonAtomic sets the marked bit in the markbits, non-atomically.
setMimeTypes is used by initMime's non-test path, and by tests.
setNextBarrierPC sets the return PC of the next stack barrier.
setOffsets sets the offsets of s for the given sizes if necessary.
setOp parses the operation string (first argument).
setOrder sets the order number of the object.
setOrig records that c's original value is the same as v's original value.
setParallel marks t as a parallel test if we're in short mode (all.bash), but as a serial test otherwise.
setParent sets the parent scope of the object.
setPseudoRegister sets the NAME field of addr for a pseudo-register reference such as (SB).
setRequestCancel sets the Cancel field of req, if deadline is non-zero.
setRunes sets v's underlying value.
setScopePos sets the start position of the scope for this Object.
setShorthand installs a new shorthand as defined by a -command directive.
setStrictFakeConnClose sets the t to Errorf on when fakeConn.Close fails to close.
setTrueCount record how many flags are explicitly set to true.
setVar overwrites the top-nth variable on the stack.
setenv sets an environment variable to use when running the test go command.
setextld sets the appropriate linker flags for the specified compiler.
setup for binary operators
setup initializes the edge state for shuffling.
setup parses the bzip2 header.
setup sets up the tree for the initial build.
sg has already been dequeued by the G that woke us up.
sg must already be dequeued from c.
sghi is the highest sudog.elem on the stack.
sh and PT_DYNAMIC for .dynamic section
sh_info holds section index.
sha1Hash calculates a SHA1 hash over the given byte slices.
shadows declaration at testdata/atomic.go:16" Re-declaration assigns a new value.
shadows declaration at testdata/shadow.go:13"
shadows declaration at testdata/shadow.go:14"
share sig handler table
shared between all worker goroutines iteration counter
shared by all handlers, like net/http
shared library initializer
shift at most ntz bits
shift count does not tell us operand size
shift is base b digit size in bits
shift mantissa as needed
shift offset between successive bitPointer or bitMarked entries
shift remaining entries down
shift the window by windowSize
shift, error, or accept
shifts as operands in non-arithmetic operations and as arguments
shifts in comparisons w/ typed operands
shifts in comparisons w/ untyped operands
short displacement load
short key, doing lots of comparisons is ok
short-circuit the heavy-weight gofmt check
shortPath returns an absolute or relative name for path, whatever is shorter.
shortcut common case of //-style comments
shortcuts for commonly used basic types
shorterThan reports whether sp is shorter than t.
shortest path from package named on command line to this one
shortfile overrides longfile everything at once:
shortprop eliminates redundant zero/sign extensions.
should 8g use 387 FP instructions instead of sse2.
should allow at most 2 sizes
should be able to get the last value via Nbrecv
should be able to get the last value via Nbrecv2
should be able to get the last value via Recv
should be able to get the last value via Recv2
should be already, but just in case
should be evaluated only after c and x on previous line
should be in-flight with preface anyway
should be legal to take len() of a constant
should be no error if also will run
should be no-op, leaving for mustRecover to find
should be ok These keys can be computed at compile time but they are not constants as defined by the spec, so they do not trigger compile-time errors about duplicate key values.
should be possible since we know the type, and don't ever use the receiver
should be true already but just in case.
should be unchanged from last time
should be unreachable
should be up to date already but just in case
should crash (uses arraytoslice runtime routine)
should fail, there's at least 1 goroutine
should fault and panic before foo is called
should find a.exe in current directory
should get back to original
should have been filled in
should have been handled by haspointers check above
should have been recorded already
should have been resolved by typechecking case OCLOSURE: unimplemented - handled by default case case OCOMPLIT: unimplemented - handled by default case
should make p leak always
should never be called
should never be called directly.
should never happen - all variables are preset
should never happen, but don't crash
should never happen, but not panicking helps with debugging
should not appear in AST by now
should not find a.exe in p, because LookPath(`a.exe`) will fail
should not happen but handle anyway
should not happen, but avoid a crash if it does
should not happen, but be conservative
should not interpolate the definition of Bar again
should not reach here
should only get here for heap vars or paramref
should only get here with names in this func.
should only happen with nacl
should only write len
should overwrite +0 entry
should overwrite -0.0 entry
should panic with a description pointing at the reader, not at itself.
should panic, then call mustRecover 7, which stops the panic.
should q-encode even for invalid utf-8.
should run successfully: Exec does not call Query
should run successfully: Query does not call Exec
should see inside OAS only
should toggle the transport out of idle mode
shouldBacktrack reports whether the program is too long for the backtracker to run.
shouldEscape is not quite compliant with the RFC, so we check the sub-delims ourselves and let shouldEscape handle the others.
shouldIndex reports whether f should be indexed.
shouldReuseConnection reports whether the underlying TCP connection can be reused.
shouldRoundUp reports if x should be rounded up if shortened to n digits.
shouldSend determines whether e's cookie qualifies to be included in a request to host/path.
shouldSendReqContentLength reports whether the http2.Transport should send a "content-length" request header.
shouldTest looks for build tags in a source file and returns whether the file should be used according to the tags.
shouldVisit reports whether the combination of (pc, pos) has not been visited yet.
shouldbuild reports whether we should build this file.
shouldn't happen, but be conservative and don't panic
shouldn't happen, but be safe
show all embedded methods, not just the ones of invisible (unexported) anonymous fields
show full import stack
show output as it is generated
show passing test output (after buffering) with -v flag.
showInternals reports whether we should show the internals of a package as opposed to just the package docs.
showOutput rewrites mentions of dir with a relative path to dir when the relative path is shorter.
showcmd prints the given command to standard output for the implementation of -n or -x.
shrinks one byte per char
shrinkstack depends on this.
shuffle vspnew to the beginning of its block
shuffleByWeight shuffles SRV records by weight using the algorithm described in RFC 2782.
siftup moved to top: new earliest deadline.
sigIdle means that there are no new pending signals and signal_recv is not blocked.
sigReceiving means that signal_recv is blocked on sig.Note and there are no new pending signals.
sigSending means that sig.mask *may* contain new pending signals, signal_recv can't be blocked in this state.
sigcontext must be aligned to 16-byte
sigmask represents a general signal mask compatible with the GOOS specific sigset types: the signal numbered x is represented by bit x-1 to match the representation expected by sigprocmask.
sign bit clear (positive)
sign bit set (negative)
sign doesn't really matter but copy anyway
sign extend arg0 from int16 to int64
sign extend arg0 from int32 to int64
sign extend arg0 from int8 to int64
sign of product xd*yd
sign of year, -1 indicates the year is not present in the format
sign was added prematurely - remove it again
sign-extended to high 32 bits
signal already in queue
signal background mark worker has started
signal one connection is in flight
signal that indicates server stopped
signalTrace is the signal to send to make a Go program crash with a stack trace.
signal_recv is called by the Go program to receive a newly queued signal.
signature is a valid signature of message from the public key.
signature parses a function signature and returns an OTFUNC node.
signatureAndHash mirrors the TLS 1.2, SignatureAndHashAlgorithm struct.
signed certificate timestamps from server
signed divide and mod: do unsigned and adjust signs.
signed division, rest of the check for -1 case
signed guys change sign
signed integer to float
significand + biased exponent
signingParamsForPublicKey returns the parameters to use for signing with priv.
sigsend is called by the signal handler to queue a new signal.
sigtable should describe what to do for all the possible signals.
silence error about next statement
silence future warnings in this block
silence set and not used
similar to a slice arraylit and its args.
similarly, during import processing structs may be used before their definition.
simple argument server
simple heap sort, to guarantee n log n time and constant stack footprint.
simple list of variables
simple number, including imaginary
simple values with the 'v' verb
simpleFold returns the minimum rune equivalent to r under Unicode-defined simple case folding.
simpleJoin builds a file name from the directory and path.
simpleLetterEqualFold is a specialization of bytes.EqualFold for use when s is all ASCII letters (no underscores, etc) and also doesn't contain 'k', 'K', 's', or 'S'.
simpleReader is a strings.Reader that implements only Read, not ReadRune.
simple_stmt may return missing_stmt if labelOk is set.
simplify x if the element is a composite literal and its literal type matches the outer literal's element type exactly, the inner literal type may be omitted
simplify1 implements Simplify for the unary OpStar, OpPlus, and OpQuest operators.
simplify1 is factored out of Simplify because the implementation for other operators generates these unary expressions.
simplifyBlock simplifies block known the restrictions in ft.
simplifyComplex pulls out any other types that are represented by the complex number.
simplifyOps looks for side-effect free ops that can be removed or replaced with moves.
simulate a broken connection on the first try
simulate a shift of "error"
sinPi(x) is a helper function for negative x
since the blocks are assorted in ascending order by entry number once we know that we don't dominate a block we can't dominate any 'later' block
since we are writing a data descriptor crc32,
since we skip funchdr below
since we skip the funcbody below
sinec bit 33 is set, nlz can be no greater than 31
single entry type switch
single string replacer
single unnamed result
single-byte string, possibly not UTF-8
single-instruction alignment
single-instruction no-ops of various lengths.
single-quoted must be single character
single-valued expressions of untyped constants
singleElementMask returns the single element mask bits required for the given instruction.
singleStringReplacer is the implementation that's used when there is only one string to replace (and that string has more than one byte).
size class 19: 320 byte objects, 25 per page, 1 page alloc at a time
size encoded in closure
size in bytes of argument frame: inputs and outputs
size in bytes of local variable frame
size is the length in bytes of the memory included in the run.
size is the number of bytes to copy.
size of all arguments
size of arguments at 0(SP)
size of bucket hash table
size of corresponding data
size of export section without enclosing markers
size of initialized data
size of instructions in a single block
size of load/store for overlap computation
size of lookahead sets
size of memory prefix holding all pointers
size of pc/line number table
size of pc/sp offset table
size of single ADD instruction
size of single MOV instruction w/ offset
size of single STOSQ instruction
size of the central directory
size of the circular queue
size of the hash output (32 or 64 bits)
size of the instruction in bytes (x86 only)
size of the key's longest value name, in Unicode characters, not including the terminating zero byte
size of the key's subkey with the longest name, in Unicode characters, not including the terminating zero byte
size of the local array New optionally specifies a function to generate a value when Get would otherwise return nil.
size of uninitialized data
size of value of this type, in bytes
size on 32bit platforms
size on 64bit platforms
size returns the width of the given move.
size the size of the region described by prog, in bytes.
size too large or we don't have good layout information
sizedValue returns an arbitrary value of the given type.
sizeof reflect.method in program
sizeof_C_MStats is what C thinks about size of Go struct.
skip "-framework X" on Darwin
skip "-lc" or "-l somelib"
skip 2, use only odd primes
skip R_*_NONE relocation
skip comparing equal args
skip dir size, version and version needed (uint64 + 2x uint16)
skip disk number start and internal file attr (2x uint16)
skip final .M TODO(mdempsky): Remove dependency on dotlist.
skip fun method pointers at runtime the itab will contain pointers to types, other itabs and method functions.
skip import descriptor table (will write it later)
skip indicates assignments (at the top level) that can be avoided.
skip leading space characters
skip link/bad/unused fields
skip non-struct composite literals
skip only applies to Go frames.
skip over argv, envp to get to auxv
skip over comments skipcom is called after reading a '/'
skip over disk number and first disk number (2x uint16)
skip over most of the header
skip over sorted group
skip reads runes up to and including the rune delim or until error.
skip removes the given prefix from value, treating runs of space characters as equivalent.
skip reserved word in header
skip skips n bytes in the input.
skip skips the entry without reading it.
skip the default case
skip the extend reloc entry
skip the first two bytes, and parse the remaining 8 as a uint64
skip the path lookup for these prefixes
skip unreachable predecessor not in original, but we're using existing pred instead of building one.
skip whitelisted types
skipCSSSpace returns a suffix of c, skipping over a single space.
skipContents implements the first part of the 'r' command.
skipError describes why a test was skipped.
skipIfNotELF skips the test if we are not running on an ELF system.
skipLWSPChar returns b with leading spaces and tabs removed.
skipNop follows any no-op or capturing instructions and returns the resulting pc.
skipSpace skips R over all spaces and returns the number of bytes skipped.
skipSpace skips spaces and maybe newlines.
skipSpace skips the leading space and tab characters.
skipSpaceOrComment returns data with any leading spaces or comments removed.
skipSpecialPlatforms causes the test to be skipped for platforms where builders (build.golang.org) don't have access to compiled packages for import.
skipStdinCopyError optionally specifies a function which reports whether the provided the stdin copy error should be ignored.
skipUnread skips any unread bytes in the existing file entry, as well as any alignment padding.
skipelem splits path into the first element and the remainder.
skipped start disk number and internal attributes (2x uint16)
sl is negated length of sorted groups
sl is not nil, and is deeper than l it's possible for this to be a goto into an irreducible loop made from gotos.
sleep and wakeup on one-time events.
sleep sleeps for one tick, where a tick is a conservative estimate of how long it takes for a file modification to get a different mtime.
sleepUntil sleeps until the specified time.
slice is applied to ONAME dereference
sliceBoundsCheck generates slice bounds checking code.
sliceEncoder just wraps an arrayEncoder, checking to make sure the value isn't nil.
sliceForAppend takes a slice and a requested number of bytes.
sliceHeader is a safe version of SliceHeader used within this package.
sliceType represents a slice type.
slices passed to function call should die on return, so that the temporaries do not stack and do not cause ambiguously live variables.
slices with other formats
slicing8Table is array of 8 Tables
slot is the destination (dst) in go code ptr is the value that goes into the slot (src) in the go code
slowFDCT performs the 8*8 2-dimensional forward discrete cosine transform:
slowFilterPaeth is a slow but simple implementation of func filterPaeth.
slowIDCT performs the 8*8 2-dimensional inverse discrete cosine transform:
slowPaeth is a slow but simple implementation of the Paeth function.
slowReader is a reader that returns only a few bytes at a time, to test the incremental reads in Scanner.Scan.
slowTestConn is a net.Conn that provides a means to simulate parts of a request being received piecemeal.
small (SSAable) array
small (SSAable) struct
small numbers of strings use direct runtime helpers.
small will notice that it needs a stack split and will catch the overflow.
small, but the standard limit One more check: make sure server name is just an IP address.
smallPrimes is a list of small, prime numbers that allows us to rapidly exclude some fraction of composite candidates when searching for a random prime.
smallRat reports whether x would lead to "reasonably"-sized fraction if converted to a *big.Rat.
smaller args comes later
smallest Prog.pc in live range
smallest supported exponent
snapshot of handlerHeader at WriteHeader time
so big switch will choose a simple mov constants can't move directly to memory.
so big switch will choose a simple mov some constants can't move directly to memory.
so it can't be closed again no need for a finalizer anymore
so right hand side happens before anything on left hand side.
so stmtlabel can find the label
so test the default branch both before and after the send.
so there can be no more results
so this is cleaner and shorter and less complicated.
so we can express smallestFloat64
sockaddr returns the address converted into a syscall sockaddr type that implements syscall.Sockaddr interface.
socket returns a network file descriptor that is ready for asynchronous I/O using the network poller.
soft hyphen, unique category, not printable.
solitaire board game.
some Linux use this instead of ENOSYS
some constants can't move directly to memory.
some custom tests for DES
some custom tests for TripleDES
some data symbols (e.g. masks) end up in the .text section, and they normally expect larger alignment requirement than the default text section alignment.
some error that is not io.EOF
some files are intentionally malformed
some invalid UTF-8 too
some keywords followed by a newline imply a semicolon
some kind of conditional branch.
some mingw don't implement __packed__ correctly.
some mingw libs depend on this symbol, for example, FindPESectionByName
some other goroutine won the race and created it
some statements allow for an init, but at most one, but we may have an arbitrary number added, eg by typecheck and inlining.
some tests use this to manage raw tcp connections for later inspection
someTimeout is used just to test that net.Conn implementations don't explode when their SetFooDeadline methods are called.
something in the middle
sort and compile constants
sort by constant value to enable binary search
sort by line:col, in effect
sort by type (for switches on interface)
sort by value and diagnose duplicate cases
sort everything else in source order
sort for deterministic zcgo.go file
sort interface types topologically by dependencies, and in source order if there are no dependencies
sort methods for reproducible export format TODO(gri) Determine if they are already sorted in which case we can drop this step.
sort non-constants last
sort package files before reading them so that the result does not depend on map iteration order
sort reorders MX records as specified in RFC 5321.
sort reorders SRV records as specified in RFC 2782.
sort reorders the entries in a report based on the specified ordering criteria.
sort the cases by Hchan address to get the locking order.
sort.Sort(byInterval(list))
sortBy is a helper function for sorting
sortComments sorts the list of comment groups in source order.
sortFlags returns the flags as a slice in lexicographical sorted order.
sortKeys sorts (if it can) the slice of reflect.Values, which is a slice of map keys.
sorted in ascending order
sorted list of constants of (mostly) this type
sorted list of functions returning this type
sorted list of methods (including embedded ones) of this type
sorted list of variables of (mostly) this type
sortedEdges return a slice of the edges in the map, sorted for visualization.
sortedKeyValues returns h's keys sorted in the returned kvs slice.
sortingName returns the name to use when sorting d into place.
sorts last state,and sees if it equals earlier ones.
source address is only specified if the socket is unconnected
source and destination following are used if they're non-zero
source end (srcBuf index) Source position
source file containing opcode code generation.
source interval of comment group at current index
source is not a valid Go source file - satisfy ParseFile API and return a valid (but) empty ast.File
source/dest is really address
sourceCoordinates returns the lowest and highest line numbers from a set of assembly statements.
sp is the stack pointer at that program counter.
sp must be the last, because once async cpu profiler finds all three values to be non-zero, it will use them
sp of child, or 0 if bottom of stack
space (bytes) required for encoding
space for a semicolon and blank
space is a copy of the unicode.White_Space ranges, to avoid depending on package unicode.
spaces in hosts are disallowed but escaped spaces in IPv6 scope IDs are grudgingly OK.
spaces in keys not allowed
spacing required for findfunctab
span offset of object
spanOf returns the span of p.
spans to allocate from
spec: "A missing switch expression is equivalent to the boolean value true."
spec: "A package-scope or file-scope identifier with name init may only be declared to be a function with this (func()) signature."
spec: "An embedded type must be specified as a type name T or as a pointer to a non-interface type name *T, and T itself may not be a pointer type."
spec: "As an exception to the addressability requirement x may also be a composite literal."
spec: "As with all method sets, in an interface type, each method must have a unique non-blank name."
spec: "Comparison operators compare two operands and yield an untyped boolean value."
spec: "Each left-hand side operand must be addressable, a map index expression, or the blank identifier.
spec: "For a base type, the non-blank names of methods bound to it must be unique."
spec: "For a variable x of struct type: unsafe.Alignof(x) is the largest of the values unsafe.Alignof(x.f) for each field f of x, but at least 1."
spec: "For untyped string operands the result is a non-constant value of type string."
spec: "If the base type is a struct type, the non-blank method and field names must be distinct."
spec: "If the left operand of a non-constant shift expression is an untyped constant, the type of the constant is what it would be if the shift expression were replaced by its left operand alone.".
spec: "If there is a label, it must be that of an enclosing "for" statement, and that is the one whose execution advances."
spec: "If there is a label, it must be that of an enclosing "for", "switch", or "select" statement, and that is the one whose execution terminates."
spec: "In any comparison, the first operand must be assignable to the type of the second operand, or vice versa."
spec: "It is illegal (...) to directly import a package without referring to any of its exported identifiers.
spec: "It is illegal to define a label that is never used."
spec: "The TypeSwitchGuard may include a short variable declaration.
spec: "The blank identifier, represented by the underscore character _, may be used in a declaration like any other identifier but the declaration does not introduce a new binding."
spec: "The init statement may be a short variable declaration, but the post statement must not."
spec: "The receiver type must be of the form T or *T where T is a type name." (ignore invalid types - error was reported before)
spec: "The right operand in a shift expression must have unsigned integer type or be an untyped constant that can be converted to unsigned integer type."
spec: "The scope of a type identifier declared inside a function begins at the identifier in the TypeSpec and ends at the end of the innermost containing block."
spec: "Two identifiers are different if they are spelled differently, or if they appear in different packages and are not exported.
spec: "With the exception of specific built-in functions, function and method calls and receive operations can appear in statement context.
spec: "Within a struct, non-blank field names must be unique."
specNode() ensures that only spec nodes can be assigned to a Spec.
special case "go test -h"
special case (look for runtime below): when compiling package runtime, emit the type structures for int, float, etc.
special case -- only if we are assigning a single ddd argument to a ddd parameter then it is passed through unencapsulated
special case for a receive where we throw away the value received.
special case for importC.src
special case for nice help message.
special case for ssa for now
special case worth making fast
special case: 0 has exponent 0
special case: doesn't need an arg
special case: inline struct and array (not slice) literals
special case: remember that error is declared locally
special case: zero can be dropped entirely
special cases - different from quoted strings
special cases for constants.
special cases of mod/div by a constant
special enough to just evaluate
special handling in checkFiles
special handling of field names
special look-ahead for ".field" so we don't break l.backup().
special processor register
special return in disguise
special ssa-package-only types
specialTagEndMarkers maps element types to the character sequence that case-insensitively signals the end of the special tag body.
specific case from issue 14553
specific section header types
specifiedExtensions contains all the extensions that we found specified via template.Attributes.
specifies, for the remainder of this source file only, that the string xxx represents the command identified by the arguments.
spilled copy of the Value
splicebefore modifies p.opt Propagate liveness information
split body up into regions.
split breaks the line into words, evaluating quoted strings and evaluating environment variables.
split comment into `import`, `"pkg"`
split delimits the first 2 fields
split input edges coming from multi-output blocks.
split into high / low
split larger blocks recursively
split q into the two digit number (q'*bbb + r) to form independent subblocks
split reads a single demand channel and replicates its output onto two, which may be read at different rates.
split returns a slice of all subexpressions in e that are connected by op.
split splits string s at the first occurrence of s.
split text into cells
splitBlock splits a block after the first n bytes, returning a block with those n bytes and a block with the remainder.
splitCommand splits the command line input into tokens separated by spaces.
splitError splits an error's error message into a position string and the actual error message.
splitPathList calls ctxt.SplitPathList (if not nil) or else filepath.SplitList.
splitUSTARPath splits a path according to USTAR prefix and suffix rules.
splitWord closes the current encoded-word and opens a new one.
splitfields replaces the vector v with the result of splitting the input p into non-empty fields containing no spaces.
splitting doesn't necessarily remove the critical edge, since we're iterating over len(f.Blocks) above, this forces the new blocks to be re-examined.
splitting occasionally leads to a phi having a single argument (occurs with -N)
sprint_depchain prints a dependency chain of nodes into fmt.
sprintf is defined in both ntdll and msvcrt, Normally we want the one in the msvcrt.
spurious extra instrumentation of the initial interface value.
sq contains the stream-specific queues, keyed by stream ID.
sqDiff returns the squared-difference of x and y, shifted by 2 so that adding four of those won't overflow a uint32.
sqrt(arg0), float64 only Data movement, max argument length for Phi is indefinite so just pick a really large number
sqrt(float64), on systems that have hw support
squirrel away old r value
sr is r translated into src's coordinate space.
src and dst are both complex types.
src and dst are both integer or floating point types.
src and dst are unnamed pointer types and their base types have identical underlying types.
src and dst have identical underlying types and either src or dst is not a named type or both are empty interface types.
src and dst have identical underlying types.
src can be assigned to dst.
src doesn't add anything.
src is a bidirectional channel value, dst is a channel type, src and dst have identical element types, and either src or dst is not a named type.
src is a pointer or uintptr and dst is unsafe.Pointer.
src is expected to be a syntactically correct Go source file, or a list of Go declarations or statements.
src is simpler, so either literal or char class
src is slice operation
src is the input for which we create the AST that we are going to manipulate.
src is the input for which we want to inspect the AST.
src is the input for which we want to print the AST.
src is the input that we want to tokenize.
src is the predeclared identifier nil and dst is a nillable type.
src is unsafe.Pointer and dst is a pointer or uintptr.
src must be in the regular heap.
src temporary for channel send
src type is identical to dst.
srcDir is the directory used by the Importer to look up packages.
srcref: src file referring to package objref: object file referring to package file: object file, e.g., /home/rsc/go/pkg/container/vector.a pkg: package import path, e.g. container/vector
srcsAddrs tries to UDP-connect to each address to see if it has a route.
ss is the internal implementation of ScanState.
ssa.CompilerType is smaller than any other type
ssa.CompilerType is smaller than gc.Type bare pointer equality is easy.
ssaExport exports a bunch of compiler services for the ssa backend.
ssaRegToReg maps ssa register numbers to obj register numbers.
ssaStmt converts the statement n to SSA and adds it to s.
ssaStmtList converts the statement n to SSA and adds it to s.
ssave holds the parts of ss that need to be saved and restored on recursive scans.
ssl30MAC implements the SSLv3 MAC function, as defined in www.mozilla.org/projects/security/pki/nss/ssl/draft302.txt section 5.2.3.1
st may be nil for conn-level
stack barriers, from low to high (see top of mstkbar.go)
stack bitmap for args - offset known to runtime
stack frames allocated from the small object lists or the page heap can avoid zeroing altogether.
stack has not been scanned
stack new state and value
stack of empty buffers
stack of parsed expressions
stack of temporary variables
stack of unresolved labels
stack offset cannot be large
stack pointer at caller aka frame pointer
stack returns slice of PCs.
stack size for current frame
stack that created this thread.
stack trace (can be empty)
stack trace will indicate whether it was de or encryption
stack walk handling of panic stack was confused about what was legal.
stack will explain where
stack-based phi Spills will be inserted in all the predecessors below.
stack-like worklist of unscanned values Starting set: all control values of reachable blocks are live.
stackBarrier has incremented stkbarPos.
stackBarrier has not incremented stkbarPos.
stackBarrier records that the stack has been unwound past a certain point.
stackGuardMultiplier returns a multiplier to apply to the default stack guard size.
stackalloc allocates storage in the stack frame for all Values that did not get a register.
stackbase is the top of the stack and is equal to stk.
stackcacherefill/stackcacherelease implement a global pool of stack segments.
stackguard0 is the stack pointer compared in the Go stack growth prologue.
stackguard1 is the stack pointer compared in the C stack growth prologue.
stage for writing counts
standard VFP instruction space
standard timezone offset
standard version takes key by reference orderexpr made sure key is addressable.
standard version takes key by reference.
standardCriteria reports all specified criteria have the default status actions.
standardStatusAction reports whether c is equivalent to not specifying the criterion at all.
stapled OCSP response
stapled OCSP response from server, if any TLSUnique contains the "tls-unique" channel binding value (see RFC 5929, section 3).
start a new Prog list.
start a new data bundle
start address of text writeInst writes the generated byte sequences to a new file starting at offset start.
start after opening /*
start at 1, NUL character is not allowed
start collecting token text
start doubling the sleep after 1ms...
start extended opcode
start forcegc helper goroutine
start goroutines, send on errc
start includes 4 bytes of string table length
start is the opening tag of the element.
start of a run of ValueSpecs with non-nil Values
start of directory skipped size of comment (always zero)
start of escaped sequence
start of unread data in buf
start position of this item
start symbol state information
start the finalizer goroutine exactly once
start virtual address
start with 20us sleep...
start with a clean slate (check.Files may be called multiple times)
start/end of heap for race_amd64.s
startAlarm starts an alarm if requested.
startBlock sets the current block we're generating code in to b.
startBrowser tries to open the URL in a browser and reports whether it succeeds.
startCleanerLocked starts connectionCleaner if needed.
startCycle resets the GC controller's state and computes estimates for a new GC cycle.
startFile writes the archive entry header.
startFrameWrite starts a goroutine to write wm (in a separate goroutine since that might block on the network), and updates the serve goroutine's state about the world, updated from info in wm.
startGofmt connects output to a gofmt process if -output is set.
startParse initializes the parser, using the lexer.
startRange starts a new range with the given top of stack.
startSema protects the transition from "off" to mark or mark termination.
startSigHandlers start signal handlers.
startTheWorld undoes the effects of stopTheWorld.
startTime, endTime determine part of the trace that we are interested in.
startTimer adds t to the timer heap.
startcmp sorts TempVars by start, then id, then symbol name.
started write goroutine but haven't heard back on wroteFrameCh
starting at i, find the first index at which s is not a prefix
startm's caller incremented nmspinning.
startsWithLowerCase reports whether the string has a lower-case letter at the beginning.
startup_random_data holds random bytes initialized at startup.
stataddr sets nam to the static address of n and reports whether it succeeeded.
state and fileIndex are the statement machine state at offset off.
state describes a high-level HTML parser state.
state for backtracker, allocated lazily
state for writing objects
state represents the state of an execution.
state0 is the state after reading `0` during a number.
state1 is the state after reading a non-zero integer during a number, such as after reading `1` or `100` but not `0`.
stateAfterName occurs after an attr name has ended but before any equals sign.
stateAttr occurs inside an HTML attribute whose content is text.
stateAttrName occurs inside an attribute name.
stateBeforeValue occurs after the equals sign but before the value.
stateBeginValue is the state at the beginning of the input.
stateCSSBlockCmt occurs inside a CSS /* block comment */.
stateCSSDqStr occurs inside a CSS double quoted string.
stateCSSDqURL occurs inside a CSS double quoted url("...").
stateCSSLineCmt occurs inside a CSS // line comment.
stateCSSSqStr occurs inside a CSS single quoted string.
stateCSSSqURL occurs inside a CSS single quoted url('...').
stateCSSURL occurs inside a CSS unquoted url(...).
stateDot is the state after reading the integer and decimal point in a number, such as after reading `1.`.
stateDot0 is the state after reading the integer, decimal point, and subsequent digits of a number, such as after reading `3.14`.
stateE is the state after reading the mantissa and e in a number, such as after reading `314e` or `0.314e`.
stateE0 is the state after reading the mantissa, e, optional sign, and at least one digit of the exponent in a number, such as after reading `314e-2` or `0.314e+1` or `3.14e0`.
stateESign is the state after reading the mantissa, e, and sign in a number, such as after reading `314e-` or `0.314e+`.
stateError is an infectious error state outside any valid HTML/CSS/JS construct.
stateF is the state after reading `f`.
stateFa is the state after reading `fa`.
stateFal is the state after reading `fal`.
stateFals is the state after reading `fals`.
stateFn represents the state of the scanner as a function that returns the next state.
stateInString is the state after reading `"`.
stateJS occurs inside an event handler or script element.
stateJSBlockCmt occurs inside a JavaScript /* block comment */.
stateJSDqStr occurs inside a JavaScript double quoted string.
stateJSLineCmt occurs inside a JavaScript // line comment.
stateJSRegexp occurs inside a JavaScript regexp literal.
stateJSSqStr occurs inside a JavaScript single quoted string.
stateN is the state after reading `n`.
stateNeg is the state after reading `-` during a number.
stateNu is the state after reading `nu`.
stateNul is the state after reading `nul`.
stateRedo helps implement the scanner's 1-byte undo.
stateT is the state after reading `t`.
stateTag occurs before an HTML attribute or the end of a tag.
stateText is parsed character data.
stateTr is the state after reading `tr`.
stateTransition returns goroutine state (sequence and status) when the event becomes ready for merging (init) and the goroutine state after the event (next).
stateTru is the state after reading `tru`.
stateURL occurs inside an HTML attribute whose content is a URL.
statementBoundary finds the location in s that terminates the current basic block in the source.
statements cannot use iota in general (constant declarations set it explicitly)
statements must end with the same top scope as they started with
states generated by nonterminal gotos
states generated by terminal gotos
static assertion to make sure the file is being used on architecture at least with matching size of GoInt.
static base pointer (a.k.a.
static constructor needs external linking, but we don't support external linking on OS X 10.6.
static initialization
static interface type
statictmp's are read-only
status code passed to WriteHeader
status code passed to WriteHeader close connection after this reply.
status is Gwaiting or Gscanwaiting, make Grunnable and put on runq
statusLine returns a response Status-Line (RFC 2616 Section 6.1) for the given request and response status code.
statusLines is a cache of Status-Line strings, keyed by code (for HTTP/1.1) or negative code (for HTTP/1.0).
stay negative for a while
stay returns the (result, turnIsOver) outcome of staying.
stayAtK returns a strategy that rolls until thisTurn is at least k, then stays.
std r2,24(r1) Load the function pointer from the PLT.
stdFracSecond0 requires the exact number of digits as specified in the layout.
stdImporter is the importer we use to import packages.
steal ntype's argument names and leave a fresh copy in their place.
step 4 in toplas paper
step advances to the next pc, value pair in the encoded table.
step executes one step of the machine, running each of the threads on runq and appending new threads to nextq.
step processes the next opcode and updates r.state.
step2 in TOPLAS paper
step3 in TOPLAS paper
steps through the input by sequential scan lines.
steps through the output as defined by pass.
sticky returns 1 if there's a 1 bit within the i least significant bits, otherwise it returns 0.
stickyErrorReader is an io.Reader which never calls Read on its underlying Reader once an error has been seen.
stk is the stack containing sp.
stk returns the slice in b holding the stack.
stkbar records the state of a G's stack barrier.
stkdelta records the stack offset delta for a node during the compaction of the stack frame to remove unused stack slots.
stkof returns n's offset from SP if n is on the stack (either a local variable or the return value from a function call or the arguments to a function call).
stmt may return missing_stmt.
stmt typechecks statement s.
stmtContext is a bitset describing which control-flow statements are permissible.
stmtList may emit more (or fewer) than len(list) nodes.
stmtNode() ensures that only statement nodes can be assigned to a Stmt.
stop early - parameters are over
stop parsing after import declarations
stop parsing after package clause
stop-the-world GC now and STW sweep
stop-the-world GC now, concurrent sweep
stopAlarm turns off the alarm.
stopParse terminates parsing.
stopTheWorld is safe for multiple goroutines to call at the same time.
stopTheWorld must not be called from a system stack and the caller must not hold worldsema.
stopTheWorld stops all P's from executing goroutines, interrupting all goroutines at GC safe points and records reason as the reason for the stop.
stopTheWorldWithSema is the core implementation of stopTheWorld.
stopTimer removes t from the timer heap if it is there.
stops the time.Timer waiting to cancel the request
stopwait and preemption requests can be lost due to races with concurrently executing threads, so try several times
storage class: external
storage for action table
storage for information about the nonterminals
storage for saved signal mask
storage for short Rune
storage for short Sub
store 16 bytes in arg1 to arg0+auxint+aux.
store 2 bytes in arg1 to arg0+auxint+aux.
store 2 bytes in arg2 to arg0+2*arg1+auxint+aux.
store 2 bytes in arg2 to arg0+arg1+auxint+aux.
store 4 bytes in arg1 to arg0+auxint+aux.
store 4 bytes in arg2 to arg0+4*arg1+auxint+aux.
store 4 bytes in arg2 to arg0+arg1+auxint+aux.
store 4 bytes of arg1 to arg0 + auxInt + aux.
store 8 bytes in arg1 to arg0+auxint+aux.
store 8 bytes in arg2 to arg0+8*arg1+auxint+aux.
store 8 bytes in arg2 to arg0+arg1+auxint+aux.
store byte in arg1 to arg0+auxint+aux.
store byte in arg2 to arg0+arg1+auxint+aux.
store low 2 bytes of ...
store low 4 bytes of ...
store low byte of ValAndOff(AuxInt).Val() to arg0+1*arg1+ValAndOff(AuxInt).Off()+aux.
store low byte of ValAndOff(AuxInt).Val() to arg0+ValAndOff(AuxInt).Off()+aux.
store max values in the regular end record to signal that that the zip64 values should be used instead
store maxint in both 32 bit size fields (and offset later) to signal that the zip64 extra header should be used.
store ms in ns to save stack space
store multiple reads a range of registers
store new key/value at insert position
store ptr to key instead of key itself
store ptr to value instead of value itself
store-release, makes the item available for consumption
storeByType returns the store instruction of the given type.
storeHuff compresses and stores the currently added data when the d.window is full or we are at the end of the stream.
storeUse contains stores which are used by a subsequent store.
stored to avoid repeated allocation in generate
storedSize calculates the stored size, including header.
stores syscall parameters on windows
stream represents a stream.
stream should work for ordinary reader too
stream test output (no buffering) when no package has been given on the command line (implicit current directory) or when benchmarking.
streamBufferSize is the number of bytes of encrypted counter values to cache.
streamID returns the stream ID for a non-empty stream-specific queue.
streamWritableBytes returns the number of DATA bytes we could write from the given queue's stream, if this stream/queue were selected.
streamWriter abstracts out the separation of a stream into discrete records.
streaming token cases
streaming tokens with intermittent Decode()
string does not escape
string does not escape, but the buffer does
string escapes to heap
string form of address
string is 16 (minReadBufferSize) long.
string is same as slice wo the cap
string is the set of all strings of 8-bit bytes, conventionally but not necessarily representing UTF-8-encoded text.
string is too long to fit in Rune0.
string literal used in import statement, e.g. "runtime/internal/sys"
string method on pointer
string must be padded to even size
string returns a Go string found at off.
string returns the string at the input point.
string returns the string representation of the type associated with the typeId.
string table length includes itself
string(b) here doesn't allocate
stringConstantSyms holds the pair of symbols we create for a constant string.
stringConstants maps from the symbol name we use for the string contents to the pair of linker symbols for that string.
stringDataOnStack reports whether the string's data is stored on the current goroutine's stack.
stringFinder efficiently finds strings in a source text.
stringHeader is a safe version of StringHeader used within this package.
stringLiteralArg returns call's string constant argument at the index idx.
stringTable reads and returns the string table given by the specified link value.
stringWriter implements WriteString on a Writer.
stringWriter is the interface that wraps the WriteString method.
string_ssa.go tests string operations.
stringify converts its arguments to a string and the type of the content.
strings might have smaller backing stores
stringsHasPrefix is strings.HasPrefix.
stringsHasSuffix is strings.HasSuffix.
stringsHasSuffixFold reports whether s ends in suffix, ASCII-case-insensitively.
strip away pointer if it's there
strip first space - required for Example tests
strip mac off payload, b.data
stripCommonPrefix removes a common prefix from /*-style comment lines (unless no comment line is indented, all but the first line have some form of space prefix).
stripOutputComment finds and removes the "Output:" or "Unordered output:" comment from body and comments, and adjusts the body block's end position.
stripTags takes a snippet of HTML and returns only the text content.
strlit returns the value of a literal string Node as a string.
strnput writes the first n bytes of s.
struct field, interface field, or func/method argument/return value.
struct fields and tags
struct literals are local types
struct terminator is zero delta fieldnum
struct with five fields of basic type
struct with four fields of basic type
structFieldInfo builds and returns a fieldInfo for f.
structType represents a struct type.
structType starts with an embedded CommonType, which appears as a regular structure here too.
structs must be sent so we know their fields.
structs of 1 direct iface type can be direct
structs with _ fields
structs, functions, and methods.
structure declarations
stub for future fd.pd.Init(fd)
sub would not name some other directory instead of this one.
subexpressions, if any
subject to tiny alloc
subprop returns true if it modified any instructions.
subscribe the fd to the port such that port_getn will return one event.
subsequent noteclear must be called only after previous notesleep has returned, e.g. it's disallowed to call noteclear straight after notewakeup.
subst returns a copy of pattern with values from m substituted in place of wildcards and pos used as the position of tokens from the pattern.
substAny walks t, replacing instances of "any" with successive elements removed from types.
substArgTypes substitutes the given list of types for successive occurrences of the "any" placeholder in the type syntax expression n.Type.
substr must be surrounded by a string boundary or commas.
subtract leading Family, Len
subtract1 is typically used when traversing the pointer tables referred to by hbits which are arranged in reverse order.
subtract1 returns the byte pointer p-1.
subtractb is typically used when traversing the pointer tables referred to by hbits which are arranged in reverse order.
subtractb returns the byte pointer p-n.
successful interleave
successors of this instruction (at most two: s1 and s2).
such a node is a loop head.
sudog represents a g in a wait list, such as for sending/receiving on a channel.
sudogs are allocated from a special pool.
sudogs can point in to the stack.
suffice to return exp(x)-1
suffix to add to backend URL
suffix to add to frontend's request URL
suffix to use in the name of the install dir
suffixValue is the maximum-copy-started-suffix-level applied to a sink.
suitableMethods returns suitable Rpc methods of typ, it will report error using log if reportErr is true.
suiteDefaultOff indicates that this cipher suite is not included by default.
suiteECDH indicates that the cipher suite involves elliptic curve Diffie-Hellman.
suiteECDSA indicates that the cipher suite involves an ECDSA signature and therefore may only be selected when the server's certificate is ECDSA.
suiteSHA384 indicates that the cipher suite uses SHA384 as the handshake hash.
suiteTLS12 indicates that the cipher suite should only be advertised and accepted when using TLS 1.2.
sumNodes adds the flat and sum values on a report.
supersedes ' ' when both specified
support code to update test: set genMap to true to generate res map
support for package-local error type declarations
support for parser error handling
support gfortran out of the box and let others pass the correct link options via CGO_LDFLAGS
supported auth mechanisms
supportedSignatureAlgorithms contains the signature and hash algorithms that the code advertises as supported in a TLS 1.2 ClientHello and in a TLS 1.2 CertificateRequest.
supportsCloseOnExec reports whether the platform supports the O_CLOEXEC flag.
supportsDynlink reports whether or not the code generator for the given architecture supports the -shared and -dynlink flags.
supportsIPv4 reports whether the platform supports IPv4 networking functionality.
supportsIPv4map reports whether the platform supports mapping an IPv4 address inside an IPv6 address at transport layer protocols.
supportsIPv6 reports whether the platform supports IPv6 networking functionality.
supportsVistaIP reports whether the platform implements new IP stack and ABIs supported on Windows Vista and above.
supposing the closure captures an int i and a string s and has one float64 argument and no results, the generated code looks like:
suppress hash and eq algorithm generation
suppress indent in empty object/array
surrogate max decodes to (RuneError, 1)
surrogate min decodes to (RuneError, 1)
sw is an expression switch.
sw.smu must be held before call.
swap in and out to exercise copy-up and copy-down
swap is the implementation passed to MakeFunc.
swap nodes to fit CMPGT, CMPGE instructions and reverse relation
swap nodes to fit SGT instruction
swap operand order for CLC so that it matches CMP
sweep generation, see comment in mspan
sweepMinHeapDistance is a lower bound on the heap distance (in bytes) reserved for concurrent sweeping between GC cycles.
sweepgen was updated (+2) during non-checkmark GC pass
swept spans are at the end of the list
switch on 64-bit processor mode
switch on address size
switch on implicit bool converted to interface was broken: see issue 3980
switch on instruction byte value
switch on interface with constant cases differing by type.
switch on memory vs register argument
switch on nil-only comparison types
switch on operand size
switch on presence of instruction prefix
switch to system stack and remove finalizer
switch_stmt parses both expression and type switch statements.
symalign returns the required alignment for the given symbol s.
symbol 0 is the null symbol.
symbol containing name, for named types
symbol for Go type information
symbol for this object file (ppc64)
symbol hash table section
symbol identifier (name and version)
symbol version, incremented each time a file is loaded.
symbolDoc prints the docs for symbol.
symbolName returns the symbol name, or an error string if none if available.
symbolReference parses a symbol that is known not to be a register.
symbolic: exact value doesn't matter
symbolize attaches func/file/line info to stack traces.
symbolize attempts to symbolize profile p.
symbols alone, because other parts of the linker manipulates them.
symbols defined by this package
symbols for PEXTERN, PAUTO and PPARAMOUT variables so they can be reused.
symbols in file, sorted by address
symbols to flood fill in next pass
symbolsFromBinaries examines the binaries listed on the profile that have associated samples, and identifies symbols matching rx.
symbolz returns the corresponding symbolz source for a profile URL.
symname is the name of the symbol used to define the string data and must be unique per linked object.
syms receives the symbolz query (hex addresses separated by '+') and returns the symbolz output in a string.
symtab.go also contains a copy of these constants.
sync.Mutex is cooperative, so we are conservative with spinning.
syncDecl advances to the next declaration.
syncStmt advances to the next statement.
syncadjustsudogs adjusts gp's sudogs and copies the part of gp's stack they refer to while synchronizing with concurrent channel operations.
synchronize with other potential writers
syntaxError records a syntax error, but only if an I/O error has not already been recorded.
synthesized external test package
synthesizemaptypes is way too closely married to runtime/hashmap.c
sys   ptrace(request int, pid int, addr uintptr, data uintptr) (err error)
sys.go or unsafe.go during compiler build
sysAlloc allocates the next n bytes from the heap arena.
sysAlloc obtains a large chunk of zeroed memory from the operating system, typically on the order of a hundred kilobytes or a megabyte.
sysAlloc returns nil on failure.
sysLinger is the real system call structure.
sysMmap calls the mmap system call.
sysReserve doesn't actually reserve the full amount requested on 64-bit systems, because of problems with ulimit.
sysReserve has already allocated all heap memory, but has not adjusted stats.
sysReserveHigh reserves space somewhere high in the address space.
sysStat, if non-nil, populates h from system-dependent fields of fi.
sys_cmpstring(s1, s2) :: 0
sys_umtx_sleep will return EWOULDBLOCK (EAGAIN) when the timeout expires or EBUSY if the mutex value does not match.
sysargs filled in startupRandomData, but that pointer may not be word aligned, so we must treat it as a byte array.
syscall.Syscall(SYS_READ, uintptr(fd), uintptr(unsafe.Pointer(p)), uintptr(n))
syscall.WriteConsole seems to fail, if given large buffer.
syscallMode returns the syscall-specific mode bits from Go's portable mode bits.
sysnb pipe() (fd1 int, fd2 int, err error)
sysnb pipe() (r int, w int, err error)
systemConf returns the machine's network configuration.
systemVerify is like Verify, except that it uses CryptoAPI calls to build certificate chains and verify them.
systemstack runs fn on a system stack.
t * Ln2Hi is exact here
t - 1970 is returned by Unix and Nanosecond.
t - u is negative out of range
t - u is positive out of range
t is a slice, ptr to array, or string type.
t is the Go version of a C type, so we don't need to handle every case.
t is the parent struct type, and start is the field index at which to start the run.
t is the type being assigned.
t may not be registered anymore and may have a bogus i (typically 0, if generated by Go).
t.Errorf("expected error inserting nil name with Exec")
t.idleMu must be held.
t0 satisfies I0 and p0.I
t1 satisfies I1 and p1.I
t1, if non-nil, is the standard library Transport using this transport.
t1.M should not appear as method in a Tx type.
t2.M should not appear as method in a Tx type.
t: sticky Mask for the type bits.
tAfterName is the context transition function for stateAfterName.
tAttr is the context transition function for the attribute state.
tAttrName is the context transition function for stateAttrName.
tBeforeValue is the context transition function for stateBeforeValue.
tBlockCmt is the context transition function for /*comment*/ states.
tCSS is the context transition function for the CSS state.
tCSSStr is the context transition function for the CSS string and URL states.
tComplex will be added during type.init().
tError is the context transition function for the error state.
tHTMLCmt is the context transition function for stateHTMLCmt.
tJS is the context transition function for the JS state.
tJSDelimited is the context transition function for the JS string and regexp states.
tLineCmt is the context transition function for //comment states.
tNow is the synthetic current time used as now during testing.
tSpecialTagEnd is the context transition function for raw text and RCDATA element states.
tTag is the context transition function for the tag state.
tText is the context transition function for the text state.
tURL is the context transition function for the URL state.
tab indents itself when printed.
tab padding enforces left-alignment
table 2 has PRIVATE-PRIVATE+256
table 3 has everything else
table for opening devices
table is a lookup table indexed by the next byte in the key, after remapping that byte through genericReplacer.mapping to create a dense index.
table is the hash table from 20-bit keys to 12-bit values.
table will store precomputed powers of x.
tableOfContents implements the 't' command.
tableSize is 4x that.
tableSize is the size of a trie node's lookup table.
tableSizeUpdate indicates whether "Header Table Size Update" is required.
tabs have no width - can't do any padding
tabulate which pc and func data we have.
tag values must match the constants in cmd/compile/internal/gc/go.go
tagKey returns the tag-based key to use in the pkgCache.
tagOptions is the string following a comma in a struct field's "json" tag, or the empty string.
tagSync syncs the repo in dir to the named tag, which either is a tag returned by tags or is v.tagDefault.
tags provide additional information about subsets of a sample.
tags represent sample annotations
tags returns the list of available tags for the repo in dir.
tags that can influence file selection in this directory
tags/xxx matches a git tag named xxx origin/xxx matches a git branch named xxx on the default remote repository
take actual exponent into account
take dwvar out from the top of the list
take returns the most important frame to write and removes it from the scheduler.
take state i, close it, and do gotos
take the 6 bits on the right
takes precedence over URL.Host
takes the address of i only.
takes up to 64 seconds
talk about "case" rather than "type" because of nil case
tar only supports second precision.
target endpoint for client
target is executable, not just package
target operating system
target symbol (if static)
target2 of unmarshaling
targetpc and off together are the key of this cache entry.
tcpKeepAliveListener sets TCP keep-alive timeouts on accepted connections.
tcpMSSEstimate is a conservative estimate of the TCP maximum segment size (MSS).
tear down continue/break
tell linker not to write DWARF information
tell plive.go that we never reach here
tell rest of panic not to try to malloc
temp allocated during order.go for dddarg
temp holding heap address of param
tempDir adds a temporary directory for a run of testgo.
tempFile adds a temporary file for a run of testgo.
tempFile creates a temp file containing contents and returns its path.
template returns the named template given a mangled template name.
template with same name already exists
templateFile defines the contents of a template to be stored in a file, for testing.
temporaries for return values.
temporarily borrow p for mallocs in this function
temporary char class work space
temporary introduced by orderexpr.
temporary storage for lookahead computations working set information
temporary storage, indexed by terms + ntokens or states
tentatively okay - read to make sure
term: literal (number, string, nil, boolean) function (identifier) .
terminalReadFrameError reports whether err is an unrecoverable error from ReadFrame and no other frames should be read.
terminate file_names.
terminating comma needs a line break to look good
terminating value delta
test -i should work like build -i (golang.org/issue/11988)
test 0 case explicitly
test 2 adjacent instructions and find out if inserted instructions are desired to prevent stalls.
test EvalSymlinks where parameter is relative path
test EvalSymlinks(".")
test Go files provided via -files, if any
test a few random elements per prime
test a larger buffer with different sizes and alignments
test a non-nil httptrace.ClientTrace but with all hooks set to zero.
test a small index across all page offsets
test an automatic struct
test and fix up large shifts
test basic rounding behavior (exhaustive rounding testing is done elsewhere)
test bit 1 since original mantissa was shifted by 1 Now we can figure out the minimum number of digits required.
test builds the test in the given file.
test case for issue 7131
test case for issue 8822
test case from issue 13273
test case from spec section on package initialization
test cases for issue 13907
test cert is self-signed
test constant evaluations
test construction directly
test data for write tests
test early exit (after one Euclidean iteration) in binaryGCD
test entirely positive ranges
test existence with tuple check failed lookups yield a false value for the boolean.
test expected to fail
test expected to succeed
test finished within allotted time margin
test folder should work
test for shift being 0
test holds the state of a test.
test in c code, after callback
test in c code, before callback
test in go code, after return from cgo
test in go code, during callback
test invalid base explicitly
test inverse property
test is expected to fail
test large and surrogate-half runes.
test non-canonical names
test nonexistence with tuple check failed lookups yield a false value for the boolean.
test overrides the build -v flag
test proc stop/start events
test range on nil map
test range over channels
test read of each file
test returns the index of the lowest set bit in a 256-bit vector.
test runs implementsTests too
test simultaneous reads
test special cases in Index() for short strings
test stack growth at chan op
test stack growth at goroutine creation
test stack growth at map op
test that ResponseWriter implements io.stringWriter.
test that a multiWriter.WriteString calls results in at most 1 allocation, even if multiple targets don't support WriteString.
test that it begins with the correct prefix
test that range evaluates the index and value expressions exactly once per iteration.
test that range over array only evaluates the expression after "range" once.
test that range over map only evaluates the expression after "range" once.
test that range over slice only evaluates the expression after "range" once.
test that range over string only evaluates the expression after "range" once.
test that the Server doesn't filter out Expect headers.
test that this doesn't block forever.
test that we can reparse the host names we accept.
test that we capture by ref here q++ must on a different decldepth than q declaration
test that we capture by ref here, i is mutated on every interation
test to see if two instructions can be interchanged without changing semantics
test variable evaluations
test we don't hang here forever.
test with imported and not used
test with specified _test.go should work too
test without splitting
test("bigptr", bigptr)
test("intptr", intptr)
test("smallptr", smallptr)
test-and-set spin lock for write
test/recover4.go is only built for Linux and Darwin.
test1 and test2 are the same except that in the interface J the entries are swapped.
test1f will panic without its own defer.
test2 and test3 are the same except that in test3 the interface J is declared outside the function.
test64BitConstAdd tests that rewrite rules don't fold 64 bit constants into add instructions.
test64BitConstMult tests that rewrite rules don't fold 64 bit constants into multiply instructions.
testAEAD implements the cipher.AEAD interface.
testArithConstShift tests that right shift by large constants preserve the sign of the input.
testBasic runs the given test function with cases all using opcode as the initial opcode bytes.
testBlock implements the cipher.Block interface and any *Able interfaces that need to be tested.
testBlock tests a block against its references, or regenerate the references, if "-update" flag is set.
testBlockMode implements the cipher.BlockMode interface.
testBlocks are the first 10 pre-IDCT blocks from ../testdata/video-001.jpeg.
testCloseConn is a net.Conn tracked by a testConnSet.
testComment verifies that f can be parsed again after printing it with its first comment set to comment at any possible source offset.
testConn.Close will not push into the channel if it's full.
testConnSet tracks a set of TCP connections and whether they've been closed.
testContext holds all fields that are common to all tests.
testCreate creates an archive in the specified directory.
testDeadStorePanic_ssa ensures that we don't optimize away stores that could be read by after recover().
testEncryptOAEPData contains a subset of the vectors from RSA's "Test vectors for RSA-OAEP".
testError is meant to be used as a deferred function to turn a panic(gobError) into a plain test.Error call.
testExtDis tests a set of byte sequences against an external disassembler.
testFile tests that compressing and then decompressing the given file with the given options yields equivalent bytes to the original file.
testFlag sees if argument i is a known flag and returns its definition, value, and whether it consumed an extra word.
testFlagDefn is the set of flags we process.
testFlagSpec defines a flag we know about.
testFlags processes the command line, grabbing -x and -c, rewriting known flags to have "test" before them, and reading the command line for the 6.out.
testGIF is a simple GIF that we can modify to test different scenarios.
testGetenv gives us a controlled set of variables for testing Expand.
testGoroutineParallelism2(t, false, false)
testHandlerBodyConsumer represents a function injected into a test handler to vary work done on a request Body.
testInterface can be asserted to check that a type originates from this test group.
testLargeConst tests a situation where larger than 32 bit consts were passed to ADDL causing an invalid instruction error.
testLoadStoreOrder tests for reordering of stores/loads.
testPSL implements PublicSuffixList with just two rules: "co.uk" and the default rule "*".
testPrefix runs the given test function for all many prefix possibilities followed by all possible 1-byte sequences.
testRegallocCVSpill tests that regalloc spills a value whose last use is the current value.
testStream implements the cipher.Stream interface.
testUnixAddr uses ioutil.TempFile to get a name that is unique.
testWriterEOF tests if the written block contains an EOF marker.
testableAddress reports whether address of network is testable on the current platform configuration.
testableListenArgs reports whether arguments are testable on the current platform configuration.
testableNetwork reports whether network is testable on the current platform configuration.
testdata shouldn't be used
testdataCases generates the test cases recorded in testdata/decode.txt.
tester executes cmdtest.
testgo sets up for a test that runs testgo.
testing commands with no slash, like `a.exe`
testing that everything works when the terminating statement is first.
testing that this read isn't racy
testing that this write isn't racy
testing.Coverage is not in the main distribution.
tests commands, like `a.exe`, with c.Dir set
tests for structured map element updates
tests of invalid UTF-8
tests overflow of max-min
tests scoping of cases
tests successful calls to ReadResponse, and inspects the returned Response.
tests that Conn.Read returns (non-zero, io.EOF) instead of (non-zero, nil) when a Close (alertCloseNotify) is sitting right behind the application data in the buffer.
tests that Len is affected by reads, but Size is not.
tests that Transport doesn't retain a pointer to the provided request.
tests that persistent goroutine connections shut down when no longer desired.
tests that putting an idle conn after a call to CloseIdleConns does return it
tests that result var is in scope for redeclaration
tests that we don't ignore errors from our underlying reader
testvalues returns a list of all test values for this type.
text does not make sense for Go object files, because each function has a separate section.
textual data doesn't have B
textual export format
tflag is documented in reflect/type.go.
tflag is used by an rtype to signal what extra type information is available in the memory directly following the rtype value.
tflag values must be kept in sync with copies in: cmd/compile/internal/gc/reflect.go cmd/link/internal/ld/decodesym.go reflect/type.go
tflag values must be kept in sync with copies in: cmd/compile/internal/gc/reflect.go cmd/link/internal/ld/decodesym.go reflect/type.go runtime/type.go
tflag values must be kept in sync with copies in: cmd/compile/internal/gc/reflect.go cmd/link/internal/ld/decodesym.go runtime/type.go
tflagExtraStar means the name in the str field has an extraneous '*' prefix.
tflagUncommon means that there is a pointer, *uncommonType, just beyond the outer type structure.
that created the Stmt
that is, it records that the index'th word in the object memory is a pointer.
that it will also satisfy immrot
that lists the conditions under which a file should be included in the package.
that the argument sequence is strictly increasing.
the "error" Rune or "Unicode replacement character"
the "options attempts 3" line
the 'time' binary is available
the -1 is because we might have only matched pemEnd without the leading newline if the PEM block was empty.
the -I or -L argument to use when importing this package
the 0x80 bit means read another byte.
the EXPLICIT or IMPLICIT tag (maybe nil).
the HTTP response code from WriteHeader
the HTTP response headers
the Orig field never changes
the URL in the Cookies call
the `C' array for the inverse BWT.
the actual copying of the hash table data is done incrementally by growWork() and evacuate().
the added production rises or falls as the start symbol ...
the allocated size of the circular queue
the argument must be of complex type
the argument types must be of floating-point type
the arguments of fn are in a perilous state.
the array/slice object is a single, resolved identifier
the b and c are in distinct columns (the b column is not contiguous all the way).
the base type after all indirections
the body of the main function
the border is ...158079 borderline - okay
the cached result doesn't record which interface function was missing, so try adding the itab again, which will throw an error.
the calling function, not the called one
the canonical name of the curve
the closure must be big enough to be combined
the color table, also known as a palette
the comment is the first item to be printed - don't write any whitespace
the common case in Go is that we need to load all the objects, and then we throw away the individual symbols that are unused.
the compiler was confused by the padding.
the conditions can be complex and these are currently little used
the constant of the curve equation
the contract with the driver.Next(...) interface is that it can return slices into read-only temporary memory that's only valid until the next Scan/Close.
the conversion happens in the OAS instead.
the cost of zeroing when reusing a small object is charged to the mutator, not the garbage collector.
the current p has no shift on "error", pop stack
the current rule will become rule number nprod+1 enter null production for action
the cursor, spelled '.'
the data elements pointed to by a SudoG structure might be in the stack.
the dc.db's Mutex is held.
the ddd parameter must be last
the decimal number was truncated.
the definition of n may refer to this assignment as its definition, in which case it will call typecheckas.
the endpoints of this edge in the escape-to-heap chain.
the entry basic block
the error from the hello
the error is an import cycle
the error is so large it could modify which digit to write, abort.
the error that Opening this file should return
the expected list of cookies (order matters)
the exponent was really too large.
the failing function (ParseBool, ParseInt, ParseUint, ParseFloat)
the field after split must only be one byte
the file is not a valid zip64-file
the file needs a zip64 header.
the file server's unique identification for the file
the first .plt entry requires 3 .plt.got entries
the first BOM is ignored
the first and 2nd result should be identical
the first block we encounter should have the ATEXT so at no point should pos ever be less than zero.
the first linebreak is always a formfeed since this section must not depend on any previous formatting
the first symbol entry is reserved
the following are adjustable according to memory size
the following relations exist:
the form X.(type) is only allowed in type switch expressions
the frame write is done (successfully or not)
the function being tested
the function setsSP for more about this.
the function type has already been checked (we're in the function body) so the param already has a valid xoffset.
the high expression is a function call with a single argument
the illegal token literal indicates what kind of semicolon literal to expect
the inaccessible subtrees were marked manually
the incoming interface always refers to a pointer.
the incorrect answer is "5"
the index must be of integer type
the index of the zone that goes into effect at that time
the index starts 1-ordered
the initial PC, SP are from a trap, not a return PC from a call
the integral part is already large, trim the last digits.
the interface data word becomes the receiver word
the intermediate package .a file created during the action
the large rune tests again, this time using constants instead of a variable.
the large rune tests yet again, with a slice.
the last byte processed by Write
the last byte value seen.
the last chance for the goroutines above to block
the last defined register
the last field number read.
the last field number written.
the last message isn't base64 because it isn't a challenge
the latter may be nil.
the len argument is the array/slice object
the lengths, in bytes, of the key material needed for each component.
the linker treats REP and STOSQ as different instructions but in fact the REP is a prefix on the STOSQ.
the linker will resolve them nicely, but they make the code longer and more difficult to follow during debugging.
the list is linked through the normal jump target field to avoid a second list.
the list of LHS names to put in vararg.
the loop holds invariant: v.IsValid()
the matrices are small enough, compute directly
the maximum possible padding length The length of the padded data is public, so we can use an if here
the method must belong to go/types
the minimum code length
the missing terms are
the name to use in HELO/EHLO
the next lexing function to enter
the next line of input comes from parse.y:15
the next token starts now - record its line number if requested
the next tree index to use
the number has actually reached zero.
the number of active instructions
the number of arugments, -1 if variable length
the number of bytes known to remain in the input
the number of copies of lastByte to output.
the number of decimal digits of integer.
the number of nonterminals
the number of repeats of lastByte seen.
the number of unread bits in a.
the only way to trigger the errors
the order is dest, a/s, b/imm for both arithmetic and logical operations
the order of the base point
the order of the underlying field
the other bits are set or not according to the intended use.
the package name is the directory name within its parent.
the package this action works on
the padding makes sure that the MCentrals are spaced CacheLineSize bytes apart, so that each MCentral.lock gets its own cache line.
the panic caused by this error used to not unlock a lock.
the panic was aborted
the path is not a symlink or junction but another type of reparse point
the point at infinity).
the pointer inside xs points to y.
the power of ten by which f was scaled.
the predeclared (possibly parenthesized) panic() function is terminating
the product x*y can be obtained with 3 products z2, z1, z0 instead of 4:
the queue is not full, now the put above must succeed
the race is on b buffer
the range operator is only allowed at the top of a for statement
the read from ch has timed out
the reason the conversion failed (ErrRange, ErrSyntax)
the receiver type becomes the type of the first function argument of the method expression's function type
the receiver type must be a type name
the recorded type for the built-in must match the wanted signature
the required alignment of this type, in bytes
the rest is scanning goroutine stacks
the rest of the bits are the number of goroutines in Conn.Write.
the resulting compiler will default to generating linux/ppc64 object files.
the returned first element contains no slashes, and the returned remainder does not begin with a slash.
the right node of an eface may contain function calls that uses res as an argument, so it's important that it is done first
the runtime.GOOS, to ease testing
the rwc, the net.Conn.
the set of registers holding a Value (usually just one)
the shared library that contains this package (only set when -linkshared)
the size of the underlying field
the slice argument to a variadic call
the slice node is the first in the list
the span could have been moved elsewhere
the span is being sweept by background sweeper, skip
the span is being swept by background sweeper, skip
the span is still empty after sweep it is already in the empty list, so just retry
the state of the previous character
the statement has no implicit block around it.
the string being scanned
the string tag to use when marshaling.
the successive argument numbers that are consumed, adjusted to refer to actual arg in call
the target name is needed for cgo.
the temporary work directory (ends in filepath.Separator)
the test only tests what we intend to test if dummy starts in the first 256 MB of memory.
the time in the local time zone: 01:23:23
the time tag to use when marshaling.
the timer tick we cancel the dial at
the type of the file (syscall.QTDIR for example)
the type the user handed us
the types expressions are calculated.
the uncertainty scales as we multiply by ten.
the untyped nil constant, easiest to treat as a keyword
the unused return is to test finalizers with return values
the user's original Request.Cancel, if any
the value of 'remain' is valid
the value reported here is undefined.
the value should be gone now regardless
the value should have been discarded.
the very first comment package p
the very last comment
the whole string value that caused the error
the worry is that if p0.T and p1.T have the same hash, the binary search will handle one of them incorrectly.
the writer handles noting errors
theHuffmanLUT are compiled representations of theHuffmanSpec.
theHuffmanSpec is the Huffman encoding specifications.
then change all the entries to negative zero
then deliver from Read with EOF on last chunk
then link as if the last file is the main package and run it
then should keep processing ordinary defers earlier than that one before returning.
then the generated test will call TestMain(m) instead of running the tests directly.
then the liveness analysis will not preserve the new value of x, because the VARDEF appears to have "overwritten" it.
then, exactly one thread can call notesleep and exactly one thread can call notewakeup (once).
there are fewer than 256 tokens
there cannot be later use of an earlier lvalue.
there is a type defined
there is no lwau, only lwaux
there is no state on the stack with an error shift ...
there is no way in Go code to define unsafe.Pointer so we have to supply it.
there may be an iterator using buckets
there may be an iterator using oldbuckets
there should be exactly one Ctrl entry.
there should be no expected errors left
there should be no unread characters left
there was an error reading the request
there was an unused arg before 1.7
there was neither a mantissa digit nor the octal prefix 0
there wasn't a finalizer to remove
there's an extra byte that bytes left behind - make sure trailing byte works
there's only one peg left
therefore ft is float32 or float64, and tt is unsigned integer
therefore tt is float32 or float64, and ft is also unsigned
these are all the same string
these are approx the same as the corresponding adddot routines except that they expect to be called with unique tasks and they return the actual methods.
these are not okay, because there is no comparison on slices or maps.
these are the only valid types
these comparisons are okay because string compare is okay and the others are comparisons where the types differ.
these conversions will be done at compile time.
these fields must be read in that order (see URL above)
these instructions can either use 3 register form or have an immediate but not both
these must be declared before the "goto Error" statements
these should be ignored:
these should include the smallest and largest values, along with any other values that might cause issues.
these strings are already in the reflect tables, so no space cost to use them here.
these two registers are declared in runtime.h
these used to fail because the runtime functions that get called to implement them expected string, not T.
these uses of nil pointers would crash but should type check
they are not as small as the load commands, but we'll need the memory anyway for the symbol images, so we might as well use one large chunk.
they are not as small as the section lists, but we'll need the memory anyway for the symbol images, so we might as well use one large chunk.
they gave us an empty list, so just take the first cert from c.config.Certificates
they have to be in at least one package, and runtime is always loaded implicitly, so this is as good as any.
they interfere with this test
third, following something characters.
this accidentally worked in Go 1.4 and below, so keep it working
this actually isn't likely, but code layout is better like this: no JMP needed after the call.
this can only happen if the conversion was already done once using the , ok form and we have a cached negative result.
this case could only happen if the provided source uses cgo while cgo is disabled.
this causes a runtime crash
this code is only run for the very first character
this data will have to be split into two records
this does not compile
this doesn't but it should (semicolons are not needed at the end of a statement list)
this doesn't but should
this doesn't work: bug219.go:16: syntax error near if
this fails on 6g too.
this generates a new name node for a name being declared.
this gives us sequential file access and keeps us from needing to come back later to pick up more objects.
this goroutine is explicitly resumed by sysmon
this happens only in extended basic blocks that exceed 4k.
this has to be a pointer so that gc scans it
this is a bit of a mess
this is a generic (arch-independent) opcode
this is a new nilcheck so add a ClearPtr node to clear the ptr from the map of nil checks once we traverse back up the tree
this is a register base
this is a satisfied destination
this is accepted by 6g
this is for hardware fifo's and the like
this is going to send a dummy byte
this is not accepted by 6g (but should be)
this is not only a optimization but also a requirement in the spec.
this is spaced funny so that the compiler will print a different line number for each len call if it decides there are type errors.
this is spaced funny so that the compiler will print a different line number for each len call when it decides there are type errors.
this is the expected line
this is the golden data, we can return it.
this is the queue of directories to examine in this pass.
this is unlike (*response).wroteHeader, which tells only whether it was logically written.
this is used only to produce more helpful error messages.
this item contributes to the goto
this item must get closed
this makes it work, because fn stays off heap
this many extra measurements after we got both thresholds
this may be a private repository.
this number is included in heap_inuse above
this op is rematerializeable
this operation is commutative (e.g. addition)
this package is a library (even if named "main")
this package or a dependency has an error
this rewrite is used by both the general code and the next optimization.
this same stackparam logic is in addrescapes in typecheck.go.
this seems to do the wrong thing
this should be a legal call
this should be inlinable
this should be possible even though p is nil: we still know the type
this should never happen
this should never happen for our test cases
this should stop running goroutines
this should tell the scheduler to not start any new goroutines
this should work: "foo" is assignment-compatible with I1
this should work: *T2 is assignment-compatible with I2
this should work: 17 is assignment-compatible with I1
this should work: false is assignment compatible with B
this should work: false is assignment-compatible with I1
this test checks that the defer func on the next line actually runs.
this used to be missing the fact that s is live during the call to g13 (because it is needed for the call to h13).
this version is for limbo write out the optimized parser
this was a bug: encoding a GobEncoder by value before a GobEncoder pointer would cause duplicate type definitions to be sent.
this works as expected
thisTurn score is added to the player's score, and the players' roles swap.
thread handle these are here because they are too large to be on the stack of low-level NOSPLIT functions.
thread pointer is at 0x7000 offset from the start of TLS data area
thread together a daisy chain to read the elements in sequence
thread-local storage (for x86 extern register)
three-token lookahead for parser.
through a reachable interface type 3.
throw away any declarations
throw away top-level name left over from previous import .
throw away top-level package name leftover from previous file.
thus, the left side of production i does too
ticketKey is the internal representation of a session ticket key.
ticketKeyFromBytes converts from the external representation of a session ticket key to a ticketKey.
ticketKeyNameLen is the number of bytes of identifier that is prepended to an encrypted session ticket in order to identify the key used to encrypt it.
ticketSupported is set in a resumption handshake if the ticket from the client was encrypted with an old session ticket key and thus a refreshed ticket should be sent.
tighten moves Values closer to the Blocks in which they are used.
tighten should happen before lowering to avoid splitting naturally paired instructions such as CMP/SET
tighten will be most effective when as many values have been removed as possible
time it last become idle
time of last collection
time of resolv.conf modification
time.Time's Stringer method is useful without any format.
time.now is implemented in assembly.
timeSleep puts the current goroutine to sleep for at least ns nanoseconds.
timeToMsDosTime converts a time.Time to an MS-DOS date and time.
timeout or interrupted
timeout over deadline
timestamp in nanoseconds
tiny is a heap pointer.
tiny points to the beginning of the current tiny block, or nil if there is no current tiny block.
tiny receiver, so basic wrapper in i.M()
title case is upper case for ASCII
tls.Config.ServerName (non-empty, set to "example.com") takes precedence over "some-other-host.tld" which previously incorrectly took precedence.
tls10MAC implements the TLS 1.0 MAC function.
tlsHost returns the host name to match against the peer's TLS certificate.
tlsState is the TLS connection state when using TLS.
tmp contains 64-bit words with the same 29,28,29-bit positions as an field element.
tmpDir creates a temporary directory and returns its name.
tmpVar returns temp variable name that will be used to represent p during syscall.
tmpl executes the given template text on data, writing the result to w.
to account for RUNA and RUNB symbols
to allow following GC to actually run
to avoid being wrapped by a bufio.Writer
to avoid deadlocks during recursive lock locks
to be consumed before more of br
to be patched to panicindex.
to bin dir inside package root (default)
to check that we receive a non-nil map.
to clear high bits of CX
to close at end of request, if DATA frames didn't
to close later Try to cause a race: Both the Transport and the proxy handler's Server will try to read/close req.Body (aka req2.Body)
to distinguish from other Stringers
to fill any marshal cache in the message
to generate its output.
to hold the shift type in CX
to is not a package-level object
to make it unique within a package and also uncallable, the name, normally "pkg.init", is altered to "pkg.init.1".
to make the CaseRanges text shorter If the Delta field of a CaseRange is UpperLower, it means this CaseRange represents a sequence of the form (say) Upper Lower Upper Lower.
to maps the rune using the specified case mapping.
to prevent unkeyed literals.
to protect against cycles
to simplify access to cbs.ctxt in sys_windows_*.s
to test that server.go doesn't use this value.
to the body reader, which might recycle us
to the roundTrip function
to verify readCookies doesn't mutate its input
to verify readSetCookies doesn't mutate its input
to verify we see 0, not empty.
to verify we see 50, not empty or 3.
to: tdeq r0, arg NOTE: this needs special runtime support to make SIGTRAP recoverable.
toASCII converts a domain or domain label to its ASCII form.
toClone must be the same as uncloned.
toEnglishName searches the registry for an English name of a time zone whose zone names are stdname and dstname and returns the English name.
toHTTPError returns a non-specific HTTP error message and status code for a given non-nil error value.
toInt turns an encoded uint64 into an int, according to the marshaling rules.
toLower returns a lower-case version of in.
toLowerCaseASCII returns a lower-case version of in.
toOutputDir returns the file name relocated, if required, to outputDir.
toRun is the channel of tests to run.
toType converts from a *rtype to a Type that can be returned to the client of package reflect.
toYCbCr converts the 8x8 region of m whose top-left corner is p to its YCbCr values.
todo go func(*g, unsafe.pointer) bool
todo: handle this case
token corresponding to the equality test that should not be used with this operator
token corresponding to this operator
token literal Non-syntactic parser control
token must be all lowercase.
token returns the next space-delimited string from the input.
token text head that is not in srcBuf anymore
token text tail end (srcBuf index) One character look-ahead
token.ADD ok below, operation is never considered
token.IMPORT  *ImportSpec token.CONST   *ValueSpec token.TYPE    *TypeSpec token.VAR     *ValueSpec
token.INT, token.FLOAT, token.IMAG, token.CHAR, or token.STRING
token.Pos values are global offsets, we can compare them directly
tokenEqual reports whether t1 and t2 are equal, ASCII case-insensitively.
token_test.go verifies the token ordering this function relies on
tokens start in unicode 'private use'
tokens that may start a top-level expression
tokens that may start an expression
tolerate extra CRLF(s) before Request-Line on subsequent requests on a conn Issue 10876.
too big for 8 octal digits
too big, shouldn't happen
too big, write to disk and flush buffer
too hard, just leave alone
too many statements - don't make it a one-liner
tooLarge reports whether the magnitude of the integer is too large to be used as a formatting width or precision.
toolVerify checks that the command line args writes the same output file if run using newTool instead.
top bit is set if last input parameter is ...
top context (Ecall, Eproc, etc)
top of local variables
top of stack for this range
top two bits of length must be clear
top-level root of the tree.
top-most scope for lookups
total STW time this cycle
total bytes consumed, updated by decoder.Decode
total data in the queue
total duration of the previous run
total number of allocated objects Low-level fixed-size structure allocator statistics.
total number of allocated objects Statistics about allocation of low-level fixed-size structures.
total number of disks
total number of entries in the central directory
total number of entries in the central directory on this disk
total number of iterations to execute (b.N)
total pause for all collections
total size of memory block for defer with arg size sz
total size of stacks in list
touch makes path newer than the "old" time stamp used by resetFileStamps.
touched by escflood, moved to heap
touched by escflood, value leaves scope
towards bottom of block
tr must be lower case.
tr.r represents in which case the positive branch is taken.
trace event sequencer
trace is global tracing context.
trace is only available in test mode - no need to record signature
trace(x, y, z, ...) dumps the positions, expressions, and values of its arguments.
trace.Start failed, so no writes yet.
trace.enabled is already reset, so can call traceable functions.
trace.enabled is set afterwards once we have emitted all preliminary events.
traceAcquireBuffer returns trace buffer to use and, if necessary, locks it.
traceAlloc is a non-thread-safe region allocator.
traceAllocBlock is a block in traceAlloc.
traceAllocBlock is allocated from non-GC'd memory, so it must not contain heap pointers.
traceAppend appends v to buf in little-endian-base-128 encoding.
traceBuf is per-P tracing buffer.
traceBufHeader is per-P tracing buffer.
traceBufPtr is a *traceBuf that is not traced by the garbage collector and doesn't have write barriers.
traceBufs are not allocated from the GC'd heap, so this is safe, and are often manipulated in contexts where write barriers are not allowed, so this is necessary.
traceEvent writes a single event to trace buffer, flushing the buffer if necessary.
traceFlush puts buf onto stack of full buffers and returns an empty buffer.
traceFullDequeue dequeues from queue of full buffers.
traceFullQueue queues buf into queue of full buffers.
traceGoSysBlock for this syscall was already emitted, but here we effectively retake the p from the new syscall running on the same p.
traceProcFree frees trace buffer associated with pp.
traceReader returns the trace reader that should be woken up, if any.
traceReleaseBuffer releases a buffer previously acquired with traceAcquireBuffer.
traceStack is a single stack in traceStackTable.
traceStackTable maps stack traces (arrays of PC's) to unique uint32 ids.
traceback already printed
tracebackCgoContext handles tracing back a cgo context value, from the context argument to setCgoTraceback, for the gentraceback function.
tracef is like fmt.Printf but it rewrites the format string to take care of indentation.
tracing support TODO(gri) remove this once we switch to binary export format
trackLastConnListener tracks the last net.Conn that was accepted.
tracking for lockosthread
tracks the line numbers at which forward types are first used as map keys
tracksym returns the symbol for tracking use of field/method f, assumed to be a member of struct/interface type t.
trailer: two zero blocks
trailers are the headers to be sent after the handler finishes writing the body.
trailing empty statements are "invisible" to fallthrough analysis
trailing empty statements are permitted - skip them
trailing fractional zeros in 'e' form will be trimmed.
trailingZeroBits returns the number of consecutive least significant zero bits of x.
trampolines, call stubs, etc.
transfer stats from cache to global
transformclosure already did all preparation work.
transformclosure is called in a separate phase after escape analysis.
transition time pairs
transition time, in seconds since 1970 GMT
transitionFunc is the array of context transition functions for text nodes.
transitive inlining might be nice to do this before exporting the body, but can't emit the body with inlining expanded.
translate C to runtime/cgo
transportDefaultConnFlow is how many connection-level flow control tokens we give the server at start-up, past the default 64k.
transportDefaultStreamFlow is how many stream-level flow control tokens we announce to the peer, and how many bytes we buffer per stream.
transportDefaultStreamMinRefresh is the minimum number of bytes we'll send a stream-level WINDOW_UPDATE for at a time.
transportRequest is a wrapper around a *Request that adds optional extra headers to write.
transportResponseBody is the concrete type of Transport.RoundTrip's Response.Body.
trash b, just in case
traverse subdirectories, but don't walk into testdata
treat a pointer to one arg as a pointer to them all
treat pattern as literal string
treat recv.meth as a value with recv in it, only happens in ODEFER and OPROC iface.method already leaks iface in esccall, no need to put in extra ODOTINTER edge here
treat types as local inside test packages with _test name suffix
treats this as a factored import.
treeCanMatchPattern(pattern)(name) reports whether name or children of name can possibly match pattern.
treecopy recursively copies n, with the exception of ONAME, OLITERAL, OTYPE, and non-iota ONONAME leaves.
treq gets modified by roundTrip, so we need to recreate for each retry.
tri generates the trinomial 2**(n*2) - 2**n - 1, which is always 3 mod 4 and 7 mod 8, so that 2 is always a quadratic residue.
triState implements flag.Value, flag.Getter, and flag.boolFlag.
trieNode is a node in a lookup trie for prioritized key/value pairs.
tried all extensions in PATHEXT, but none matches
tried each possible move
tried records the location of unsuccessful package lookups
tries is the initial number of iterations.
trigger GC which will shrink the stack of the sender.
trigger a panic if position is out-of-range
trigger heap sample after allocating this many bytes
trigger nil deref early
trigger shrinkage to test stack copy.
triggerRatio is the heap growth ratio at which the garbage collection cycle should start.
triggers standard matcher
trim leading zero bytes since Bytes() won't return them (was issue 12231)
trim needs regalloc to be done first.
trim removes blocks with no code in them.
trim returns s with leading and trailing spaces and tabs removed.
trim trailing zeros from number.
trim trims the directory prefix from the path, paying attention to the path separator.
trim updates the XML context to match the longest common prefix of the stack and the given parents.
trimComments drops all but the //go: comments, some of which are semantically important.
trimOWS returns x with all optional whitespace removes from the beginning and end.
trimOutput shortens the output from a benchmark, which can be very long.
trimPath cleans up a path by removing prefixes that are commonly found on profiles.
trimRight returns s with trailing whitespace removed.
trimSpace removes trailing spaces from b and returns the corresponding string.
trimSpace returns x without any leading or trailing ASCII whitespace.
trimSpace trims leading and trailing space from s, returning a subslice of s.
trimUnexportedElems modifies spec in place to elide unexported fields from structs and methods from interfaces (unless the unexported flag is set).
trimUnexportedFields returns the field list trimmed of unexported fields.
trimmer is implemented as a state machine.
true and false are the two untyped boolean values.
true if (source) fields are missing in the Fields list
true if (source) methods are missing in the Methods list
true if 3-index slice (2 colons present)
true if all cells in this column are empty and "soft"
true if the comment group contains newlines
true if the embedded type is a pointer associated declarations
true if the last parameter's type is of the form ...T (or string, for append built-in only)
true if this type is a struct
true if this type is embedded
true if used in shuffling, after ordinary uses
true if we have parsed the bzip2 header.
true if we need to update key on an overwrite
true iff an APPLICATION tag is in use.
true iff an EXPLICIT tag is in use.
true iff the field is OPTIONAL
true iff this should be encoded as a SET
true iff this should be omitted if empty when marshaling.
trunc truncates a value to the range of the given type.
truncate 64 bit integer
truncate precision for non-ideal float.
truncate truncates the string to the specified precision, if present.
truncated reports a truncated instruction.
truncated to size of archiveHeader
try again in the same state
try dot, -L "libdir", and then goroot.
try each board position
try fast algorithm when the number of digits is reasonable.
try replacing labels in the name with wildcards until we get a match.
try rounding down a little
try rounding up a little
try some large lengths
try to get different pointer
try to overflow exponent
try to resolve the identifier
try to retake all P's in Psyscall status
try to start the browser
try to use a ustar header when only the name is too long
tryBacktrack runs a backtracking search starting at pos.
tryDupCloexec indicates whether F_DUPFD_CLOEXEC should be used.
tryGet dequeues a pointer for the garbage collector to trace.
tryGetFast dequeues a pointer for the garbage collector to trace if one is readily available.
tryPutIdleConn adds pconn to the list of idle persistent connections awaiting a new request.
tryPutIdleConn does not close pconn.
tryUpdate tries to update conf with the named resolv.conf file.
tryWriteCopy tries to copy a string at a given (distance, length) to the output.
try_ntype is like ntype but it returns nil if there was no type instead of reporting an error.
trygetfull tries to get a full or partially empty workbuffer.
tuple types are never named - no need for underlying type below
turn CALL(type, arg) into CONV(arg) w/ type
turn MOVL of GOT entry into LEAL of symbol address, relative to GOT.
turn MOVQ of GOT entry into LEAQ of symbol itself
turn PUSHL of GOT entry into PUSHL of symbol itself.
turn a parsed function declaration into a type
turn off bit to end loop early
turn on for detailed type resolution traces
turn the variadic args into a slice.
turn uint64 op into float64 op
two errors on the same line
two extra lines here ...
two live temps during print(p): the copy of ptrarr and the internal iterator pointer.
two or more grouped const/var declarations: determine if the type column must be kept
two outer shifts should be removed
two queues for runq, nextq
two relocations: R_AARCH64_ADR_PREL_PG_HI21 and R_AARCH64_ADD_ABS_LO12_NC
two witnesses, need a phi value
typ holds the type of the value represented by a Value.
typ is the element type of the slice.
typ must be a valid constant type.
typ returns a new Type of the specified kind.
typ.size is the number of words in the object, and typ.ptrdata is the number of words in the prefix of the object that contains pointers.
typArray returns a new fixed-length array Type.
typChan returns a new chan Type with direction dir.
typChanArgs returns a new TCHANARGS type for channel type c.
typDDDField returns a new TDDDFIELD type for slice type s.
typExprInternal drives type checking of types.
typFuncArgs returns a new TFUNCARGS type for func type f.
typMap returns a new map Type with key type k and element (aka value) type v.
typPtr returns a new pointer type pointing to t.
typSlice returns a new slice Type.
typcheck produced values, this part can declare new vars and so it must be typechecked before body, because body can contain a closure that captures the vars.
type ( A B B *C C A )
type N_EXT, external symbol
type T in a parameter sequence: a, b, c T
type algorithms - known to compiler
type assertion failed
type assertion succeeded
type check assignment.
type check function definition
type check the whole tree of an expression.
type declarations cannot use iota
type for TDDDFIELD type t.
type in composite literal
type is broken or missing, most likely a method call on a broken type we will warn about the broken type elsewhere.
type is invalid predeclared types
type isn't really byte, it's code in runtime
type name doesn't match, but we may have matching consts, vars, factories or methods
type not found - add one without declaration
type of Go value it could not be assigned to
type of _defer struct
type of first argument of fn
type of ith field of the struct
type of ptr to object
type restriction, handled above
type returned by pkg.Fatalf.
type signature of the function.
type stored in interface word
type switch - declare variable
type switch variables have no ODCL.
type temperature.Celsius float64 .
type used in runtime prototypes for runtime type (*byte)
type width only includes back to first field's offset
type-checked ASTs may contain cycles - use ptrmap to keep track of objects that have been printed already and print the respective line number instead
type:eface::tab:iface
typeAlg is also copied/used in reflect/type.go.
typeFields returns a list of fields that JSON should recognize for the given type.
typeId returns the type id at the input point.
typeInfo holds details for the xml representation of a type.
typeLock must be held.
typeName returns the string to use to generate a type.
typeOKForCgoCall returns true if the type of arg is OK to pass to a C function using cgo.
typeOrNil type-checks the type expression (or nil value) e and returns the typ of e, or nil.
typeReader is used to read from either the info section or the types section.
typeString returns a human-readable description of the type identified by remoteId.
typeSummary prints a one-line summary for each type, followed by its constructors.
typeUnitReader is a typeReader for a tagTypeUnit.
typecheck and collect typechecker errors
typecheck has overwritten OIND by OTYPE with pointer type.
typecheck package files
typecheck type checks node n.
typecheck type checks the AST f assuming the information in cfg.
typecheck typechecks the given package files.
typecheck will insert a PTRLIT node under CONVNOP, tag it with escape analysis result.
typecheckaste was used here but there wasn't enough information further down the call chain to know if we were testing a method receiver for unexported fields.
typecheckinl on local function
typecheckswitch typechecks a switch statement.
typed entries are sufficiently frequent
typedmemmove copies a value of type t to dst from src.
typedmemmove will call heapBitsBulkBarrier, but the target bytes are not in the heap, so that will not help.
typedmemmovepartial is like typedmemmove but assumes that dst and src point off bytes into the value and only copies size bytes.
typedslicecopy copies a slice of elemType values from src to dst, returning the number of elements copied.
typedslicecopy is instrumented in runtime.
typehash computes a hash value for type t to use in type switch statements.
typelinks is implemented in package runtime.
typelinksinit scans the types from extra modules and builds the moduledata typemap used to de-duplicate type pointers.
typeof returns the type of the given name, which may be of the form "x" or "p.X".
typeone generates an AST that jumps to the case body if the variable is of type t.
typeptrdata returns the length in bytes of the prefix of t containing pointer data.
types (OIND is with exprs)
types are handled individually
types for untyped values
types may be parenthesized: (some type)
types of channel must match ../../../../reflect/type.go:/ChanDir
types of interface methods consist of signatures only
types that depend on other type declarations (src in TestTypes)
types that don't depend on any other type declarations
types used in sigcontext
typesByString returns the subslice of typelinks() whose elements have the given string representation.
typesEqual reports whether two types are equal.
typically it is run in the object directory.
u guaranteed to fit into a uintptr
u is an alias for uIn or v - cannot reuse
u is now integer hours Stop at hours because days can be different lengths.
u is now integer minutes
u is now integer seconds
uaddOvf returns true if unsigned a+b would overflow.
ucast casts an unsigned int to the size in s
uevar: upward exposed variables (used before set in block) varkill: killed variables (set in block) avarinit: addrtaken variables set or used (proof of initialization)
uexpr may have returned a parenthesized composite literal (see comment in operand) - remove parentheses if any
uid found with the marker
uint is an unsigned integer type that is at least 32 bits in size.
uint returns the unsigned int at the input point, as a uint (not uint64).
uint16 is the set of all unsigned 16-bit integers.
uint32 is the set of all unsigned 32-bit integers.
uint64 is the set of all unsigned 64-bit integers.
uint64 returns and decodes the next unsigned integer, which must be present.
uint8 Handled separately.
uint8 alias, but has name "byte"
uint8 is the set of all unsigned 8-bit integers.
uint8 slices are encoded as an unsigned count followed by the raw bytes.
uintptr is an integer type that is large enough to hold the bit pattern of any pointer.
uintptr returns the pointer-sized value encoded at b.
unadjusted position info must remain unchanged
unbalanced returns true if there aren't the same number of ( and ) in the string.
unblock pending reader and writer
unblock reader on errors Read this once, before loop starts.
unblock the writeloop of the first Post
uncommon case: large int encoded as float
uncommon case: large x - use float encoding (powers of 2 will be encoded efficiently with exponent)
uncommon case: not ASCII
uncommon case: not ASCII or not enough bytes
uncommonType is present only for types with names or methods (if T is a named type, the uncommonTypes for T and *T have methods).
uncompressed size append a zip64 extra block to Extra
uncondCases generates unconditional instructions.
unconditional branch can happen in the middle of floating point if the linker decides it is time to lay down a sequence of instruction stream constants.
undef "An instruction consisting entirely of binary 0s is guaranteed always to be an illegal instruction."
undef (for debugging)
undefined instruction
under the assumption that sub is already simple, and without first allocating that structure.
underlying HTTP/1 response body framing
underlying Response.Body
underlying buffer for traceBufHeader.buf
underlying data source (can return nil)
underlying implementation
underlying wire-format reader for the trailer
undo causes the scanner to return scanCode from the next state transition.
unescaped :// in query should not create a scheme
unevaluated index arguments load computes src into targ, but if src refers to the len or cap of n.Left, load copies those from xlen, xcap, loading xlen if needed.
unexpected complains about the token and terminates processing.
unexported field to disallow conversions
unfortunate compromise
unfortunate condition, and we don't have efficient means to wait
unicodeTable returns the unicode.RangeTable identified by name and the table of additional fold-equivalent code points.
unimplemented, to test dead code elimination Test dead code elimination in if statements
unindent if we indented
uninstallTestHooks runs just before a run of benchmarks.
uninterlace rearranges the pixels in m to account for interlaced input.
uniq returns a sorted slice containing the unique elements of list.
unique creates a unique name for the given parent and subname by affixing it with one ore more counts, if necessary.
unique id from server
unique name for ONAME within a function.
unique name for OTYPE/ONAME
unique tables found so far Consider bit vectors in turn.
unique type to prevent assignment.
unit_length (*), filled in at end.
unit_length (*), will be filled in later.
unix and unixgram: choose an address if none given
unixIsEAGAIN reports whether err is a syscall.EAGAIN wrapped in a PathError.
unixSyslog opens a connection to the syslog daemon running on the local machine using a Unix domain socket.
unlabeled break and continue statement tracking
unless otherwise directed.
unless we have a hex number, parse fractional part or exponent, if any
unlike slicerunetostring, no race because strings are immutable.
unlock removes a reference from mu and unlocks mu.
unlockf must not access this G's stack, as it may be moved between the call to gopark and the call to unlockf.
unmarshal expects to be given the handshake header, but serverHelloLen doesn't include it.
unmarshal interface test
unmarshalAttr unmarshals a single XML attribute into val.
unmarshalInterface unmarshals a single XML element into val.
unmarshalPath walks down an XML structure looking for wanted paths, and calls unmarshal on them.
unmarshalTextInterface unmarshals a single XML element into val.
unmatchedLines returns the lines in the location that do not match the regular expression.
unmove reverts a previously executed valid move.
unordered set of all basic blocks (note: not indexable by ID)
unpack *CommentedNode, if any
unpack just the header, to find the rr type and length
unpack returns the filename and line and column number for a file offset.
unpack takes a getter get and a number of operands n.
unpackEface converts the empty interface i to a Value.
unparen case ODDDARG: unimplemented - handled by default case case OREGISTER: unimplemented - handled by default case
unparen returns e with any enclosing parentheses stripped.
unquote converts a quoted JSON string literal s into an actual string t.
unquote returns the unquoted string.
unread and read again
unread bytes in chunk
unreadByteStuffedByte undoes the most recent readByteStuffedByte call, giving a byte of data back from d.bits to d.bytes.
unreadDataSizeLocked returns the number of bytes of unread input.
unresolved identifiers
unresolved identifiers in this file
unsafe is a fake package.
unsafe.Alignof(x T) uintptr
unsafe.Offsetof(x T) uintptr, where x must be a selector (no argument evaluated yet)
unsafe.Pointer is treated like a regular pointer
unsafe.Pointer or *byte
unsafe.Sizeof(uintptr(0)) but an ideal const
unsafe.Sizeof(uintptr(0)) but an ideal const Value is the reflection interface to a Go value.
unsafe.Sizeof(uintreg(0)) but an ideal const
unsafe.Sizeof(x T) uintptr
unsafeCheckPointerName is given the Go version of a C type.
unsafeCheckPointerNameIndex returns the name to use for a _cgoCheckPointer variant based on the index in the CgoChecks slice.
unsafenmagic rewrites calls to package unsafe's functions into constants.
unscaled 9-bit signed
unscaled 9-bit signed displacement store
unscaledQuant are the unscaled quantization tables in zig-zag order.
unscaledQuantInNaturalOrder are the unscaled quantization tables in natural (not zig-zag) order, as specified in section K.1.
unsetenv removes an environment variable.
unshadow cmdfile in next directory
unsigned divide and mod using shift and subtract.
unsigned guys invert their bits
unsigned integer to float
unsupported size/dbl combination
until all suffixes are one big sorted group The suffixes are h-ordered, make them 2*h-ordered
until proven otherwise
until typecheck is complete, do nothing.
untype returns the "pseudo" untyped type for a Ctype (import/export use only).
unused but just in case
unusedImports checks for unused imports.
unwrap the custom error in case we return it
unzig maps from the zig-zag ordering to the natural ordering.
up with the same arguments
upcomingHeaderNewlines returns an approximation of the number of newlines that will be in this header.
update COFF file header and section table
update data directory
update directory values from the zip64 extra block.
update emits a field number and updates the state to record its value for delta encoding.
update extends y with more polynomial terms from data.
update golden file if necessary
update golden files if necessary
update length to include MAC and any block padding needed.
update modifies the priority and value of an Item in the queue.
update operands of x if necessary
update previous node group if we see an "important" node
update scanner position
update signature, but keep recv that was set up before
update stats, sweep lists
update t so we don't lose t's underlying array
update the group numberings after all new groups are determined
update the production information
update type of ODCLFUNC
update updates the set of relations between v and w in domain d restricting it to r.
updateAndDeleteTests contains jarTests which must be performed on the same Jar.
updateAutoComplete enhances autocompletion with information that can be retrieved from the profile
updateBlocks extends y with more polynomial terms from blocks, based on Horner's rule.
updateCRC updates the crc value to incorporate the data in b.
updateCastagnoli calculates the checksum of p using genericCastagnoli to align the data appropriately for vectorCastagnoli.
updateExprType updates the type of x to typ and invokes itself recursively for the operands of x, depending on expression kind.
updateExprVal updates the value of x to val.
updateFile updates r.state.File after r.fileIndex has changed or r.fileEntries has changed.
updateIEEE calculates the checksum of p using genericIEEE to align the data appropriately for vectorIEEE.
updateKeys updates the sorted list of keys in v.keys.
updateRestrictions updates restrictions from the immediate dominating block (p) using r.
updateSlicingBy8 updates CRC using Slicing-by-8
url.Parse treats "hostname" as the Scheme.
urlEscaper normalizes URL content so it can be embedded in a quote-delimited string or parenthesis delimited url(...).
urlEscaper produces an output that can be embedded in a URL query.
urlFilter returns its input unless it contains an unsafe protocol in which case it defangs the entire URL.
urlPart identifies a part in an RFC 3986 hierarchical URL to allow different encoding strategies.
urlPartUnknown occurs due to joining of contexts both before and after the query separator.
urlProcessor normalizes (when norm is true) or escapes its input to produce a valid hierarchical or opaque URL part.
usage calls the Usage method for the flag set if one is specified, or the appropriate default usage function otherwise.
usage is a replacement usage function for the flags package.
usage: defer p.trace(msg)()
use "false" so test will fail if custom unmarshaler is not called
use GetFileType to check pipe, pipe can't do seek
use GetSystemInfo if GetProcessAffinityMask fails
use MOVDU to adjust R1 when saving R31, if autosize is small
use SetUnhandledExceptionFilter for windows-386 or if VectoredContinueHandler is unavailable.
use TEST-NET-3 block, see RFC 5737
use a pointer to avoid relocation of external symbol in __TEXT make linker happy
use a temp slice to hint to the compiler that a single bounds check suffices
use about n KB of stack
use about n KB of stack and call f
use an objset to check for name conflicts
use ast.File comments, if any
use basic multiplication if the numbers are small
use contents of index.html for directory, if present
use decimal format for error messages determine sign
use expect() error handling
use expect() for error handling
use files regardless of +build lines, file names
use formfeed since we dropped one before
use incoming x only for first argument
use ioutil.TempFile to get a name that is unique
use is a no-op, but the compiler cannot see that it is.
use list, chained through Flow.data
use local storage for small strings
use lots of stack, briefly.
use named receiver type if available (for better error messages)
use negative length to indicate unnamed parameters (look at the first parameter only since either all names are present or all are absent)
use negative offsets as IDs to aid debugging
use new position only if old position was valid in the first place
use one Euclidean iteration to ensure that u and v are approx.
use pax header instead of binary numeric header
use pc-relative addressing
use position of expression following the comma as comma position for correct comment placement
use position of expression following the comma as comma position for correct comment placement, but only if the expression is on the same line
use position of parameter following the comma as comma position for correct comma placement, but only if the next parameter is on the same line
use position of value following the comma as comma position for correct comment placement
use quoted string with different quotation marks
use register version of arguments
use short branches first time through
use some stack memory to trigger split stack check
use spaces instead of tabs for alignment
use tabs for indentation independent of UseSpaces
use temporary so that mapassign1 can have addressable key, val.
use the correct value of iota
use the imported package instead
use the labels to silence compiler errors
use the package name as package path
use the variadic parameter slice's element type
use the wrong file set
use type-checks each argument.
use unnecessary SS prefix to keep instruction same length.
useGetter is like use, but takes a getter instead of a list of expressions.
useProxy reports whether requests to addr should use a proxy, according to the NO_PROXY or no_proxy environment variable.
useSyscallwd determines whether to use the return value of syscall.Getwd based on its error.
useVFPv1 tries to execute one VFPv1 instruction on ARM.
useVFPv3 tries to execute one VFPv3 instruction on ARM.
useVar returns a node for a variable reference.
useVendor means that loadImport should do vendor expansion (provided the vendoring experiment is enabled).
used as a mark in fifo
used because Embed0a's Level1b is renamed
used because Embed0a's Level1c is ignored
used by CREATE, INSERT, SELECT (selected columns)
used by SELECT (all placeholders)
used by sigaction second argument
used by sigprof handler
used during zeroing of the stack - not reserved
used for decoding integers while parsing messages
used for determining whether an index is after the last slash.
used for interpolation in a text template
used for prioritization.
used if d is of type *bool
used if non-empty, else the windows command line is built by escaping the arguments passed to StartProcess
used if non-nil Serve accepts incoming connections on the Listener l, creating a new service goroutine for each.
used in flood to record path
used in initLogdWrite but defined here to avoid heap allocation.
used in prevent to snip cycles.
used only by writers read function can be used to read the data without further synchronization
used only inside ReadRune
used only to delimit the keywords
used reports whether the label has a use (OGOTO, OBREAK, or OCONTINUE node).
used to compile the hardest side first to minimize registers.
used to crash on Linux
used to crash the compiler
used to fail in goroutine leak check
used to fail to compile
used to fail with errors about internal packages
used to get invalid recursive type
used to implement SameFile
used to implement windows pread/pwrite only for console io
used to panic because 6g didn't generate the code to fill in the ...
used to panic on second call
used to prevent duplicate error messages
used to show up here instead
used to verify funcs are on serve()
used to wait for ReadTrace completion
used to work around an issue with the mod symbol being interpreted as part of a format string
used with O_CREATE, file must not exist
usedOldKey is true if the ticket from which this session came from was encrypted with an older key and thus should be refreshed.
useful for name and linkname fields.
usemethod check interface method calls for uses of reflect.Type.Method.
user has called Close
user has requested to close all idle conns
user has subtest with this name.
userType returns, and saves, the information associated with user-provided type rt.
userTypeInfo of (*wireType)
userTypeInfo stores the information associated with a type the user has handed to the package.
username and password information
uses MST as its time zone
uses X0 as a temporary
usesCgo reports whether the package needs to run cgo
usesSwig reports whether the package needs to run SWIG.
using TLS, with valid certificate for Name
using chunked transfer encoding for reply body
usually *tls.Conn, except specialized impls
usually addrescapes runs after widstruct, in which case we could drop this, but function closure functions are the exception.
ut.base lapped slowpoke recursive pointer type.
utf-8, iso-8859-1 and us-ascii charsets are handled by default.
v and w are equivalent.
v can be nil, to mean the zero value.
v has already been converted to appropriate form for t.
v is a method receiver.
v is known to be a channel.
v is the corresponding value.
v is used in exactly one block, and it is not b.
v may contain mixed cased.
v must be a FwdRef op.
v must be used by the current instruction.
v references only itself.
v represents fixed register, not Go variable
v starts life spilled
v's definition is within loop.
v's next use is farther in the future than any value we've seen so far.
v's spill is not (YET) used.
v.Kind() must be Ptr, Map, Chan, Func, or UnsafePointer
v.Type returns the actual type of the method value.
v.Uint returns a uint64.
v.mu must be held for reads.
v.typ describes the receiver, not the method type.
val is the value of this cached pcvalue entry.
val should exist, but be conservative and check
valid //line filename:line comment
valid after NewReader or Reader.Reset
valid after done is closed
valid dnsQuestion.qclass
valid dnsQuestion.qtype only
valid dnsRR_Header.Rrtype and dnsQuestion.qtype
valid or error already reported
valid pstate field values, and value to use in instruction
valid reports whether the value is valid and a non-nil pointer.
valid surrogate sequence
valid until readMore is called
validCookieDomain returns whether v is a valid cookie domain-value.
validEncodedPath reports whether s is a valid encoded path.
validHeaderFieldByte reports whether b is a valid byte in a header field name.
validHeaderFieldName reports whether v is a valid header field name (key).
validHeaderFieldValue reports whether v is a valid header field value.
validImmediate checks that addr represents an immediate constant.
validNPN reports whether the proto is not a blacklisted Next Protocol Negotiation protocol.
validOff reports whether the offset can be used as an argument to makeValAndOff.
validSymbol checks that addr represents a valid name for a pseudo-op.
validType returns, and saves, the information associated with user-provided type rt.
validVal reports whether the value can be used as an argument to makeValAndOff.
validValAndOff reports whether we can fit the value and offset into a ValAndOff value.
validate, if not nil, is a function that will be called with the ConnectionState of the resulting connection.
validateRegex checks if a string is a valid regular expression.
validateStructTag parses the struct tag and returns an error if it is not in the canonical format, which is a space-separated list of key:"value" settings.
validateType guarantees that the value is valid and assignable to the type.
valname returns the name of n as can be used as part of a variable name.
vals are the decoded values, sorted by their encoding.
value auxint different
value cannot be inlined in interface data.
value for p.impliedSemi after this arg record previous opening token, if any
value good in all signed types (-4)
value good in all types (10)
value good in u8 and up (175)
value if this name is iota
value interface methods.
value is aux.(string)
value is math.Float64frombits(uint64(auxint))
value is math.Float64frombits(uint64(auxint)) and is exactly prepresentable as float 32
value is the new string that replaces that pattern when it's found.
value is the next arg
value is the value of the trie node's key/value pair.
value is used instead of arg for reflect values.
value may be non-ascii
value obtained by indirect of parameter escapes to heap
value of an input number
value of pos after calling writeString
value overwritten at savedLRPtr
value receiver, direct field of A
value receiver, indirect field of A
value returns v's field value corresponding to finfo.
value to send (for send)
value, store as string in memory
valueOrDot formats a value according to a report, intercepting zero values.
valueQuoted is like value but decodes a quoted string literal or literal null into an interface value.
valueString takes a string, not a pointer.
valueSummary prints a one-line summary for each set of values and constants.
valueToString returns a textual representation of the reflection value val.
values associated to this node.
values to generate tests.
var Left (declares Left of type Left.Type) Used during parsing but don't last.
var c temperature.Celsius .
var decl w/o init expr
var declarations cannot use iota
var fn *str // this makes it work, because fn stays off heap
var fn func() // this makes it work, because fn stays off heap
var freezing temperature.Celsius .
var or const names in declaration order
var, const or func name
varValue returns the value of the named variable.
vararg of selected bool
variable already has a definition.
variable assignments in the current block (map from variable symbol to ssa value) Node is the unique identifier (an ONAME Node) for the variable.
variable is alive thearch-specific registers
variable name conventions: ohv1, hv1, hv2: hidden (old) val 1, 2 ha, hit: hidden aggregate, iterator hn, hp: hidden len, pointer hb: hidden bool a, v1, v2: not hidden aggregate, val 1, 2
variable reference at beginning of closure function
variable returns the value of a variable at the current location.
variable-size, fn-specific data here
variables created by coverage analysis
variables defined at the moment.
variables to make ExamplePlainAuth compile, without adding unnecessary noise there.
variables under consideration
variables with address taken
variadic call mallocs + writes to
variant of ONAME for on-stack copy of a parameter or return value that escapes.
variant2as returns the instruction as with the given variant (V_*) flags.
varint appends v to buf in little-endian-base-128 encoding.
varint emits the varint encoding of x.
various decimal exponent formats
various other stuff following a valid expression
vars passed through parameters
vary operand precision (only ok as long as a, b can be represented correctly)
varying lengths forces generic
vcsByCmd returns the version control system for the given command name (hg, git, svn, bzr).
vcsBzr describes how to use Bazaar.
vcsFromDir inspects dir and its parents to determine the version control system and code repository to use.
vcsGit describes how to use Git.
vcsHg describes how to use Mercurial.
vcsList lists the known version control systems
vcsPathsAfterDynamic gives additional vcsPaths entries to try after the dynamic HTML check.
vcsSvn describes how to use Subversion.
vector instructions VRX store
vector of nonterminals nontrivially deriving e random stuff picked out from between functions
vector of pointers to productions yielding each nonterminal
vector register (128-bit)
vector with the precedence of the terminals nonterminal information
vectorizedCastagnoli implements CRC32 using vector instructions.
vectorizedIEEE implements CRC32 using vector instructions.
vendored returns the vendor-resolved version of imports, which should be p.TestImports or p.XTestImports, NOT p.Imports.
vendoredImportPath returns the expanded path or, if no expansion is found, the original.
vendoredImportPath returns the expansion of path when it appears in parent.
verbose tells whether the 'v' option was specified.
verbs apply to the extracted value too.
verified chains built from PeerCertificates
verifiedChains contains the certificate chains that we built, as opposed to the ones presented by the server.
verifies that sendfile is being used on Linux
verify 0x40 and 0x60 aren't case-equivalent
verify b2 has type int
verify checks the expected counts against the actual.
verify consistency of test case
verify errors returned by the parser
verify h2 allows capital keys
verify ok at type-check time
verify positions for all offsets
verify that Float format matches strconv format
verify that Getppid() from the forked process reports our process id
verify that all (in range) are assignable as ints
verify that all are assignable as floats
verify that all identifiers have correct line information
verify that copying from an empty reader always has the same results, regardless of the presence of a WriteTo method.
verify that no comments got lost
verify that objects in package and file scopes have different names
verify that we can read the copied export data back in (use empty package map to avoid collisions)
verify validity of lines table
verifyPSS verifies a PSS signature with the given salt length.
verifyPanic is a special check for the known counter that should be after the panic call in testPanic.
version control system to use (expand with match of re)
version has been negotiated
version needed to extract
version number for given Path
version string offset
very correct association of comments
very large conditional branches
very likely to be inside dummy, but should panic
very long strings, string concatenation
vet tells whether to report errors for the named check, a flag name.
vfpCases generates VFP instructions.
vfunc takes a *V and a V
virtual address of instruction
virtual address of last byte in sym (Start+size-1)
virtual address of symbol
virtual line number where this entry takes effect
visitBottomUp invokes analyze on the ODCLFUNC nodes listed in list.
visited records the structs that have been considered already.
vkey is a type used to uniquely identify a zero arg value.
volumeNameLen returns length of the leading volume name on Windows.
vop returns the opcode, element size and condition setting for the given (possibly extended) mnemonic.
vout1 represents the in value converted to the in type.
vout2 represents the in value converted to the out type.
vout3 represents a new value of the out type, set to vout2.
w doesn't use a store - can't be a memory op.
w is not equivalent to v.
w is the buffered io.Writer to write the request to.
w is the writer that compressed bytes are written to.
w is the writer to write to.
w was created with NewWriter
w was created with NewWriterDict
w.Import(name) will return nil
w.suffix is full now if p is non-empty.
wait before giving up on a query, including retries
wait for 100us, then try to re-preempt in case of any races
wait for all test goroutines to complete
wait for all workers to begin running
wait for body of request to be closed or all goroutines to block
wait for outstanding tests to finish
wait for remaining P's to stop voluntarily
wait for someone to wake us up
wait for tester goroutine to stop
wait is either MUTEX_LOCKED or MUTEX_SLEEPING depending on whether there is a thread sleeping on this mutex.
wait is the ticket number of the next waiter.
waitCondition reports whether fn eventually returned true, checking immediately and then every checkEvery amount, until waitFor has elapsed, at which point it returns false.
waitForContinue returns the function to block until any response, timeout or connection close.
waitlink is only accessed by g.
wake cleaner up when lifetime is shortened.
wake each goroutine up, forcing it to dequeue and then enqueue on the global channel.
wake up A, it dequeues itself from c.
wake up next reader too
wake up next writer too
wakeup sequence (subject for removal)
walk backward, emit pcdata and populate the maps
walk children (the order of the cases matches the order of the corresponding node types in ast.go)
walk generates an AST implementing sw.
walk generates an AST that implements sw, where sw is a type switch.
walk has ensured the node has moved to a location where side effects are safe.
walk past runtime frames
walk rewrites ODOTTYPE/OAS2DOTTYPE into runtime calls except for this case.
walk the whole tree of the body of an expression or simple statement.
walk to previous store
walk traverses the AST x, calling visit(y) for each node y in the tree but also with a pointer to each ast.Expr, ast.Stmt, and *ast.BlockStmt, in a bottom-up traversal.
walk walks the AST x, calling visit(f, x, context) for each node.
walk walks the trees in GOROOT and GOPATH.
walk will fill in correct type
walkBeforeAfter is like walk but calls before(x) before traversing x's children and after(x) afterward.
walkCases generates an AST implementing the cases in cc.
walkDir recursively walks the tree looking for Go packages.
walkFile walks the file's tree.
walkIfOrWith walks an 'if' or 'with' node.
walkLinks(".", ...) always returns "." on unix.
walkdiv rewrites division by a constant as less expensive operations.
walkexpr and walkstmt combined walks the tree and adds calls to the instrumentation code to top-level (statement) nodes' init
walkmul rewrites integer multiplication by powers of two as shifts.
walks half as fast as ut.base
walkswitch walks a switch statement.
want comments look for //gofmt comment
want runRx to match (true) or not match (false)
want to avoid unaligned access, so have to use smaller operations for less aligned types.
wantArchive fails if path is not an archive.
wantErr can be nil, an error value to match exactly, or type string to match a substring.
wantExecutable fails with msg if path is not executable.
wantLoadLibraryEx reports whether we expect LoadLibraryEx to work for tests.
wantNotStale fails with msg if pkg is stale.
wantRange maps from a PC to the ranges of the compilation unit containing that PC.
wantStale fails with msg if pkg is not stale.
wantStr is whether s will be used.
wanted error from Request.Write
warn at most once Don't warn about packages being rebuilt because of things like coverage analysis.
warnf formats the error to standard error, adding program identification and a newline, but does not exit.
warnings are not errors
was "cannot take the address of 1"
was "internal compiler error: overflow: float64 integer constant"
was completely ignored in the format, meaning the first two cases would succeed, but the next four would not.
was f2 before shuffle
was rejected by compiler: see issue 4781
was syntax error: unexpected comma
was used by old C compilers
was: "unexpected newline"
was: const initializer must be constant
was: integer overflow
way too small, negative
wbuf is empty at this point.
wbuf1 and wbuf2 are the primary and secondary work buffers.
wbuf1 is always the buffer we're currently pushing to and popping from and wbuf2 is the buffer that will be discarded next.
we almost always want the original, except in export mode for literals this saves the importer some work, and avoids us having to redo some special casing for package unsafe
we already progressed, no need to advance
we always have at least one element
we are already at the end of the labeled statement - no need to advance
we are expecting the following errors (collect these after parsing a file so that it is found in the file set)
we are looking for 500 out of 1000 events here because lots of log messages are lost in buffers (kernel and/or bufio)
we are not interested in the concurrency aspects of select, just testing that the right calls happen.
we can just ignore this, because we are targeting ARM V5+ anyway
we can only reach here if there was no p which would imply that there were no nodes
we can't export these yet.
we can't have a matching field or interface method
we can't have a matching interface method
we can't print these yet.
we care that the println lines have no live variables and therefore no output.
we check that this is deleted
we clone them just so we're able to corrupt them on close.
we consume the pipe character but leave the right delim to terminate the action.
we could try again if p has become a 2-operand op but in testing nothing extra was extracted
we don't care about .last - it's just a cache
we don't care about the map element value
we don't care what temps are printed on the lines with output.
we don't check variables
we don't have a better rhs expression to use here
we don't need to worry about checking because we will only look at entries known to be there...
we don't registerize globals, so there are no removed repeated nil checks.
we don't registerize globals, so there are no removed.* nil checks.
we don't switch to 32-bit arithmetic if it can change how the carry bit is set (and the carry bit is needed).
we don't switch to 64-bit arithmetic if it can change how the carry bit is set (and the carry bit is needed).
we don't use dynimport when using gccgo.
we don't want a write-vs-write race so there is no array b here
we found the "desired" square root
we get out of sync on syntax errors, so don't be pedantic.
we got a line break instead
we have a match - eliminate this error
we have a move that reads from our destination reg, check if any future instructions also read from the reg
we have a nonempty span that does not require sweeping, allocate from it
we have a nontrivially empty nonterminal
we have a string, compare type string
we have a type, check identity
we have an empty span that requires sweeping, sweep it and see if we can free some space in it
we have at least 2 copies of arg0.
we have encountered an invalid character, so there is no valid scheme
we have found amem spot
we have found an acceptable k
we have some disagreement
we have two choices, and don't know what to do.
we know they have adjacent values
we leave with the flag clear
we must have a sym for LNAME
we must unset GOROOT_FINAL before tests, because runtime/debug requires correct access to source code, so if we have GOROOT_FINAL in effect, at least runtime/debug test will fail.
we need a nil + A dynamic reloc
we need the opt here to rewrite the user nilcheck
we need to compensate that by removing the instruction's address from addend.
we need to schedule a GOAWAY frame write
we need to use -pie for Linux/ARM to get accurate imported sym
we only care about errors.
we only reach here if s.insertSemi was set in the first place and exited early from s.skipWhitespace()
we only use a once, so no copy needed.
we process one argument per non-trivial format
we say apsr, libopcodes says CPSR.
we should never see a bad import path
we should never see an empty package name
we should not be able to return successfully w/o a return statement
we should not reach here (correct ASTs don't have empty ast.CommentGroup nodes), but be conservative and try again
we tried to turn off warnings on the command line, but one never knows.
we triggered a retry, test was successful
we use EABI on both linux/arm and freebsd/arm.
we use one algorithm table for all AMEM types of a given size
we will write a data descriptor
we'll have complained about this method anyway, suppress spurious messages.
we'll unwind it when we learn the pc of the label in the OLABEL case above.)
we're adding a selection find first available color
we're in lock-down mode for next release
we've failed to parse using the first BEGIN line and now will try again, using the second BEGIN line.
we've started to or sent GOAWAY
well within range of f64
werr is set to the first write error to rwc.
wg counts the number of outstanding HTTP requests on this server.
what the client is allowed to POST/etc to us
what the user would see in an error message.
what was written (or attempted)
what would happen on 64-bit machine, to keep stream in sync
when C owns the process, simply exit'ing the process on fatal errors and panics is surprising.
when a stream is idle, it's deleted from the map.
when a type's width should be known, we call checkwidth to compute it.
when is a helper function for setting the 'when' field of a runtimeTimer.
when laid out, the instruction order must always be o1, o2.
when lazily typechecking inlined bodies, some re-exported ones may not have been typechecked yet.
when set runtime traces events
when the first reference to the literal pool threatens to go out of range of a 12-bit PC-relative offset, drop the pool now, and branch round it.
when the first reference to the literal pool threatens to go out of range of a 1Mb PC-relative offset drop the pool now, and branch round it.
when we wrote the last event
where code is a three-digit status code.
where func is the function, val is the current value, p is the instruction being considered, and arg can be used to further parameterize valfunc.
where imported definition was found
where pseudo-ops start Equal returns true if x and y have identical structure.
where the arguments start in the frame
where the types T and U are such that u.M() is valid and calls the T.M method.
where to copy the eventual value to
where to record end instruction
where to return ourselves to
where to send the data
whether Close has been called
whether Close should stop early
whether Entry is followed by children
whether ReadTrace has emitted trace footer
whether ReadTrace has emitted trace header
whether a match was found
whether any patterns contain hostnames
whether calls to emit are enabled
whether cgo can be used
whether conn has had successful request/response and is being reused.
whether handler should read the body (if false, sends StatusUnauthorized)
whether newline counts as white space
whether newline terminates scan
whether response contains A, AAAA-record
whether the Client is using TLS
whether the action failed
whether the binary numeric field extension was used
whether the package is marked as safe
whether the test requires the expensive check
whether the test should fail
whether the value is wrapped in a string to be decoded first
whether this conn was broken due a CancelRequest
whether this connection was a session resumption
whether this panic is over
whether this struct represents function parameters
whether to run f even if dependencies fail Generated files, directories.
whether we can run go or ./testgo
whether we can run the race detector
whether we can use cgo
whether we need a write barrier for a cgo check
whether we need a write barrier for current GC phase
whether we've said HELO/EHLO
which carries the following notice:
which includes a body
which types we've already sent
which we need to correct when copying them down.
while need more leading zeros
while the array contains values
whiteWhitespace writes the first n whitespace entries.
whitespace sequences are short
wid and prec are always positive.
width in bits of literal codes
width of last rune read from input
wildcards only match valid (non-nil) expressions.
will be __nl_symbol_ptr
will be __symbol_stub
will be converted to OCASE right will point to next case done in casebody()
will be converted to OFALL
will be defined later.
will be fixed to change variable type as suitable.
will be input to thread 1
will be io.EOF on closeNotify
will be length of prog
will be rejected earlier too Without stuff before onion/local, they're fine to use DNS.
will deal with those.
will disappear or have an error
will unlock it on the next iteration
window index where current tokens start
windows doesn't work, because Windows exception handling delivers signals based on the current PC, and that current PC doesn't go into the Go runtime.
windows never sets executable bit
windows returns DNS_INFO_NO_RECORDS if there are no CNAME-s
windowsInaccuracy is to ignore such errors.
with a maximum length of 4
with all the branches out of the way, it is now time to transmogrify this node itself unless inhibited by the switch at the top of this function.
with alphanum zone identifier
with link-layer address
with more work we could leave cross-function code references to be relocated too, and then perhaps we'd be able to parallelize the span loop above.
with percent-encoded+unreserved zone identifier
withLock runs while holding lk.
within a type they sort by size, so the .* symbols just defined above will be first.
within the ByteSize bytes at ByteOffset
within the first maxLines lines of the given file, and returns the flags string, if any.
without SO_PASSCRED set on the socket, ReadMsgUnix will return zero oob bytes
without first finding the check, so this one is unchecked.
without framepointer, gdb cannot backtrace our non-standard stack frames on RISC architectures.
without link-layer address
word 2166AA4A: libopcodes says cmn but no evidence for that.
word C100543E: libopcodes says tst, but no evidence for that.
word C3203CE8: libopcodes says teq, but no evidence for that.
word D14C552E: libopcodes says cmp but no evidence for that.
word E70AEEEF: libopcodes says str but no evidence for that.
word F410FDA1: libopcodes says PLDW but the manual is clear that PLDW is F5/F7, not F4.
word F650FE14: libopcodes says PLI but the manual is clear that PLI has 0x10 clear
word F7D0FB17: libopcodes says PLDW but the manual is clear that PLDW has 0x10 clear
word tlsvar, initial exec
word tlsvar, local exec
word-sized value receiver, so no wrapper in i.M()
work barrier reached or tryGet failed.
work maintains the DFS stack.
work.nproc can change right after we increment work.ndone
work: turn it into the corresponding conditional
workbuf factory routines.
workbufs never live on the heap, so write barriers are unnecessary.
worldsema must be held over startTheWorldWithSema to ensure gomaxprocs cannot change while worldsema is held.
worst case host, still round trips
worst case path, still round trips
worst-case scenario: no literal prefix
would deadlock here before the fix due to lock taken before the segfault.
wrap body in external function that begins by reading closure parameters.
wrap if line is too long
wrap installs the connection state-tracking hook to know which connections are idle.
wrapped around, found min
wrapper around io.ReaderCloser which on first read, sends an HTTP/1.1 100 Continue header
wrapper: contained type is a ...
wrappers generated by genwrapper need to update the .this pointer in place.
wrappers where T is anonymous (struct or interface) can be duplicated.
writable, non-executable
write COFF string table
write COFF symbol table
write COFF symbol table record
write FirstThunks (allocated in .data section)
write OriginalFirstThunks
write a //line comment if necessary
write barrier for storing y in x's underlying array
write central directory
write comment lines, separated by formfeed, without a line break after the last line
write compiler-specific flags
write count copies of text to s
write data that will be linkedit section
write extra digits that still fit
write generates and writes a syslog formatted string.
write in a nested closure
write indentation use "hard" htabs - indentation columns must not be discarded by the tabwriter
write index Pick up a digit, put down a digit.
write index into output
write inlineable function bodies
write is the interface value that does the writing, once the writeScheduler (below) has decided to select this frame to write.
write limits text encoded in quoted-printable to 76 characters per line.
write operation wait server
write optimizer summary
write out error comment
write p and see if we can probe only some fields
write pointer Pick up enough leading digits to cover first shift.
write printer result via tabwriter/trimmer to output
write the states and the tables
write to goroutine-local buffer if diverting output, or else standard error.
write to this to force timeouts
write underlying type
write using Fibonacci slice sizes
write writes len(b) bytes to the File.
writeBlock will write a block of tokens with the smallest encoding.
writeBlock writes a block of pixel data using the given quantization table, returning the post-quantized DC value of the DCT-transformed block.
writeBlock writes the current blocking profile to w.
writeBlockDynamic encodes a block using a dynamic Huffman table.
writeBlockHuff encodes a block of bytes as either Huffman encoded literals or uncompressed bytes if the results only gains very little from compression.
writeBuf writes the Reader's buffer to the writer.
writeByte writes a single byte to the dictionary.
writeByte writes ch n times to p.output and updates p.pos.
writeBytes writes a length-prefixed byte slice to z.w.
writeChunk is also responsible (on the first chunk) for sending the HEADER response.
writeChunk writes chunks from the bufio.Writer.
writeCommentPrefix writes the whitespace before a comment.
writeCommentSuffix writes a line break after a comment if indicated and processes any leftover indentation information.
writeConsole writes bufLen bytes from buf to the console File.
writeConsole writes len(b) bytes to the console File.
writeConsoleUTF16 is the dedicated windows calls that correctly prints to the console regardless of the current code page.
writeContext is the interface needed by the various frame writer types below.
writeCopy copies a string at a given (dist, length) to the output.
writeDHT writes the Define Huffman Table marker.
writeDQT writes the Define Quantization Table marker.
writeDataFromHandler writes DATA response frames from a handler on the given stream.
writeDefs creates output files to be compiled by gc and gcc.
writeELF32 writes an ELF32 header to the file, describing a text segment that starts at start and extends for size bytes.
writeELF64 writes an ELF64 header to the file, describing a text segment that starts at start and extends for size bytes.
writeError is the wrapper type used internally when Execute has an error writing to its output.
writeExportHeader writes out the start of the _cgo_export.h file.
writeFrame schedules a frame to write and sends it if there's nothing already being written.
writeFrameAsync runs in its own goroutine and writes a single frame and then reports when it's done.
writeFrameFromHandler sends wm to sc.wantWriteFrameCh, but aborts if the connection has gone away.
writeFramer is implemented by any type that is used to write frames.
writeGoroutine writes the current runtime GoroutineProfile to w.
writeHeader finalizes the header sent to the client and writes it to cw.res.conn.bufw.
writeHeader writes a header if it was not written yet and detects Content-Type if needed.
writeHeader writes the ZLIB header.
writeHeap writes the current runtime heap profile to w.
writeIDMappings writes the user namespace User ID or Group ID mappings to the specified path.
writeInt writes an int x to w using buf to buffer the write.
writeLSB writes the code c for "Least Significant Bits first" data.
writeLock adds a reference to fd and locks fd for writing.
writeLogdHeader populates the header and returns the length of the payload.
writeMSB writes the code c for "Most Significant Bits first" data.
writeMark advances the writer pointer by cnt.
writeMarkerHeader writes the header for a marker with the given length.
writeMessage sends the data item preceded by a unsigned count of its length.
writeOutput creates stubs for a specific source file to be compiled by gc
writePESymTableRecords writes all COFF symbol table records.
writePadding generates n bytes of padding.
writePaxHeader writes an extended pax header to the archive.
writeQString encodes s using Q encoding and writes it to buf.
writeRecord writes a TLS record with the given type and payload to the connection and updates the record layer state.
writeRecord writes and sends a single record.
writeRecordLocked writes a TLS record with the given type and payload to the connection and updates the record layer state.
writeRegexp writes the Perl syntax for the regular expression re to b.
writeResHeaders is a request to write a HEADERS and 0+ CONTINUATION frames for HTTP response headers or trailers from a server handler.
writeSOF0 writes the Start Of Frame (Baseline) marker.
writeSOS writes the StartOfScan marker.
writeScheduler tracks pending frames to write, priorities, and decides the next one to use.
writeSetgroups writes to /proc/PID/setgroups "deny" if enable is false and "allow" if enable is true.
writeSlice returns a slice of the available buffer to write data to.
writeStart writes the given start element.
writeString writes a UTF-8 string s in GZIP's format to z.w.
writeString writes the string s to p.output and updates p.pos, p.out, and p.last.
writeTestmain writes _testmain.go.
writeTestmain writes the _testmain.go file for t to the file named out.
writeThreadCreate writes the current runtime ThreadCreateProfile to w.
writeTokens writes a slice of tokens to the output.
writeUidGidMappings writes User ID and Group ID mappings for user namespaces for a process and it is called from the parent process.
writeUnlock removes a reference from fd and unlocks fd for writing.
writefile writes b to the named file, creating it if needed.
writer is a buffered writer.
writer() returns the innermost writer the encoder is using
writerOnly hides an io.Writer value's optional ReadFrom method from io.Copy.
writes code to ftable
writes pack binary to dir
writing data in middle of line
written at first call to Write, Flush, or Close
written by serverConn.readFrames
wrote at offset past where hello, world was.
wroteFrame is called on the serve goroutine with the result of whatever happened on writeFrameAsync.
wroteHeader tells whether the header's been written to "the wire" (or rather: w.conn.buf).
wroteRequest is a check before recycling a connection that the previous write (from writeLoop above) happened and was successful.
ws is printed before the first line break.
x and mant may be the same in which case x is set to its mantissa value.
x and y are in pixel space, and u and v are in transform space.
x and y are uint64s with at most 2 bits set.
x and y must have a non-empty mantissa and valid exponent.
x and y should be invalid now, but be conservative and check below
x cannot be set to y - ignore this rewrite
x does not fit into int64
x fits on a single line
x implicitly declared
x is a bidirectional channel value, T is a channel type, x's type V and T have identical element types, and at least one of V or T is not a named type
x is a multi-line element
x is an argument mainly so that we can return its address.
x is an expression, not a statement, so the only side effect is a function call.
x is an untyped value representable by a value of type T TODO(gri) This is borrowing from checker.convertUntyped and checker.representable.
x is automatically set to 64bit precision
x is considered a comptype
x is not a square mod p
x is not changed even if z and x are the same.
x is not starting on the same line as the previous one ended
x is now a spilled value and a restore must appear before its first use.
x is now in primary range
x is syntax, not an expression.
x must be an Int or an Unknown.
x must be normalized.
x should be invalid now, but be conservative and check
x's type T and V must  have identical underlying types.
x's type is identical to T
x*0 is 0 (and side effects of x).
x.(type) expressions are handled explicitly in type switches
x.(type) has type of x.
x.Arrow and x.Pos() are the same
x.M does not panic if x is a nil pointer and M is a method with a pointer receiver.
x.M panics if x is an interface type and is nil, or if x.M expands to (*x).M where x is nil, or if x.M expands to x.y.z.w.M where something along the evaluation of x.y.z.w is nil.
x.expr may not be set if x is invalid
x.f is a method expression
x.f is a method selector
x.f is a struct field selector
x.mode is set to invalid if the assignment failed.
x.typ is typed spec: "If a left-hand side is the blank identifier, any typed or non-constant value except for the predeclared identifier nil may be assigned to it."
x.typ remains unchanged
x1 has type B, not ideal bool
x2 has type B, not ideal bool
x86-64 has 48-bit virtual addresses.
x86_64 kernel requires it.
xCC (affect CR field 0 flags)
xCondByte is the only conditional with a fall through, so that it can be used to pick off special cases before an xCondSlash.
xGob, xBinary or xText
xGob, xBinary, or xText
xV (affect SO and OV flags)
xatexit schedules the exit-handler f to be run when the program exits.
xattr bar should always appear before others
xedManualTests holds test cases that will be run by TestXedManual32 and TestXedManual64.
xexit exits the process with return code n.
xgetwd might return a path with symlinks fully resolved, and if there happens to be symlinks in goroot, then the hasprefix test will never succeed.
xgetwd returns the current directory.
xinit handles initialization of the various global state, like goroot and goarch.
xmkdir creates the directory p.
xmkdirall creates the directory p and its parents, as needed.
xml.Name works in a plain field as well.
xmlanything is reserved.
xmm opcode escape + REX.W
xorBytes xors the bytes in a and b.
xorBytes xors the contents of a and b and places the resulting values into dst.
xorKeyStreamGeneric sets dst to the result of XORing src with the key stream.
xprintf prints a message to standard output.
xreaddir replaces dst with a list of the names of the files and subdirectories in dir.
xreaddir replaces dst with a list of the names of the files in dir.
xrealwd returns the 'real' name for the given path.
xremove removes the file p.
xremoveall removes the file or directory tree rooted at p.
xsamefile reports whether f1 and f2 are the same file (or dir)
xtoi2 converts the next two hex digits of s into a byte.
xworkdir creates a new temporary directory to hold object files and returns the name of that directory.
xx isn't going anywhere, so taking address of yy is ok
xx isn't going anywhere, so use of yy is ok
xxxNodeEdits are the accumulated edits to apply during commit.
y is automatically set to 53bit precision
y not a pointer, so no write barriers in this function
y will have type float64.
y1 is normalized because y is
yacc major difference is lack of stem ("y" variable)
yes, w can be pushed multiple times.
yyr2 is the number of rules for each production
z and mant may be the same in which case z's exponent is set to exp.
z cannot be zero if one of x or y is negative
z cannot be zero if only one of x or y is negative
z cannot be zero if x and y are negative
z cannot be zero if x is negative
z cannot be zero if x is negative and y is positive
z cannot be zero if x is positive
z has final length but may be incomplete
z is an alias for limit - cannot reuse
z is an alias for uIn or v - cannot reuse
z is an alias for x or y - cannot reuse
z is int - normalize denominator
z is normalized int - nothing to do
z may be an alias for y
z remains unchanged otherwise.
z's mantissa must be normalized (with the msb set) or empty.
z.SetMode(z.Mode()) is a cheap way to set z's accuracy to Exact.
z.level and z.dict left unchanged.
zForAffine returns a Jacobian Z value for the affine point (x, y).
zcse does an initial pass of common-subexpression elimination on the function for values with zero arguments to allow the more expensive cse to begin with a reduced number of values.
zero (uninitialized) value is a ready-to-use 0.0
zero are frames not associated with a specific stream.
zero block and then non-zero block
zero extend arg0 from int16 to int64
zero extend arg0 from int32 to int64
zero extend arg0 from int8 to int64
zero if not a bit field
zero if unset or invalid
zero is permissible for anonymous types
zero length lists must be the zero value or properly initialized (sentinel circle)
zero means unknown (default)
zero or multiple values
zero out all func pointers, trying to get some path to crash
zero out trailing bits in least-significant word
zero remainder to help GC
zero uint16 for the zero-length extension_data
zero value can be used in any and all positions of binary operations
zero value for token.Token must be token.ILLEGAL
zero value has precision 0
zero values must have been written for blank fields
zero was checked above, must be non-zero.
zero width instruction, just to align next instruction to 16-byte boundary
zero-byte stack adjustment.
zero-width place holder
zeroCanSend is defered from take.
zeroFill generates zero-filled strings of the specified width.
zeroReaderAt is ReaderAt that reads 0s.
zeroSource is an io.Reader that returns an unlimited number of zero bytes.
zeroVal returns the zero value for type t.
zeroaddr returns the address of a symbol with at least size bytes of zeros.
zerorange clears the stack in the given range.
zeros fill space between decimal point and digits
zeros fill space between digits and decimal point
zigStart and zigEnd are the spectral selection bounds.
zigzag maps from the natural ordering to the zig-zag ordering.
zip64 Extended Information Extra Field
zip64 end of central directory record
zopload returns the RXY op for the given load
zopril returns the RIL op for the given a
zoprr returns the RR op for the given a
zoprre returns the RRE op for the given a
zopstore returns the RXY op for the given store
zz and r are used to avoid allocating in mul and div as otherwise the arguments would alias.
