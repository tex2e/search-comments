"Indent when as deep as case" is the job of another cop, and this is one of the possible styles supported by configuration.
"Indent when as deep as case" is the job of another cop.
"State" can be anything: the controller's HTTP response, the database contents, etc.
"Substitutions in double-quoted strings" http://www.ruby-doc.org/docs/ProgrammingRuby/html/language.html
"WidgetsController::index::authenticated user::returns widgets"
"comments/comments" 'comments/comments' ('comments/comments')
"rails:generators:webrat", "webrat:generators:controller", "webrat"
"rails:test_unit", "test_unit:controller", "test_unit"
"rails:webrat", "webrat:integration", "webrat"
"test_unit:awesome", "test_unit"
"test_unit:controller", "test_unit"
' (for ruby-mode)
' ruby-mode
'And they found that many people were sleeping better.'.truncate(25, omission: '...
'And they found that many people were sleeping better.'.truncate_words(5, omission: '...
'cur_node' is a Ruby expression which evaluates to an AST node, but we don't know how expensive it is to be safe, cache the node in a temp variable and then use the temp variable as 'cur_node'
'match' is a fairly generic name, so we don't flag it unless we see a string or regexp literal on one side or the other
'sqlite3:/foo' is absolute, because that makes sense.
'text' in Russian
'wibble'.to_i will give zero, we want to make sure that we aren't marking int zero to string zero as changed.
( ) is a closed path
( should not be remove )
(Default nil, which means don't schedule the Reaper).
(Gem): An additional gem is required to use perform_later with this adapter.
(If you're not concerned about IP spoofing you can turn the +ip_spoofing_check+ option off.)
(In a later update, the original implementation of `PLANETS` has been removed.)
(Note: including the IP address of the client in the nonce would appear to offer the server the ability to limit the reuse of the nonce to the same client that originally got it.
(SET TIME ZONE does not use an equals sign like other SET variables)
(See +time_zone_options_for_select+ for more information.)
(See exec vs.
(So 'puts' is not dangerous but 'new' is.)
(So 'puts' is not dangerous but 'save' is.)
(The first one with that offset will be returned.) Returns +nil+ if no such time zone is known to the system.
(The notification may in turn trigger an email, a push notification, or just appear in the UI somewhere):
(They order records differently, so the 'first' record can be different.)
(This exists to support the use of this class with the +composed_of+ macro.)
(This is just an example.
(This is the same behavior as +parse+.) In either case, the returned TimeWithZone has the timezone of +self+.
(To convert to an actual class follow +classify+ with +constantize+.)
(You can also pass any object which responds to +call+ to the +default_scope+ macro, and it will be called when building the default scope.)
(You can use ActiveSupport::TimeZone.us_zones as a convenience for obtaining a list of the US time zones, or a Regexp to select the zones of your choice)
(continued)"
(i.e. `do_something./(pattern)./(i)`) do_something /pattern/i
(if (lvar :foo) nil (lvasgn :foo (int 1)))
(no need to include all cops here)
(send (const nil :Array) :new)
(send (const nil :Hash) :new)
(send (const nil :String) :new)
(the above is from the unit tests).
*  by changing renderer defaults, like
*  by initializing an instance of renderer by passing it a custom environment.
* +:bcc+ - Who you would like to Blind-Carbon-Copy on this email, can be a string of addresses, or an array of addresses.
* +:date+ - The date to say the email was sent on.
* +:from+ - Who the message is from * +:cc+ - Who you would like to Carbon-Copy on this email, can be a string of addresses, or an array of addresses.
* +:reply_to+ - Who to set the Reply-To header of the email to.
* +action_on_unpermitted_parameters+ - Allow to control the behavior when parameters that are not explicitly permitted are found.
* +attr_name+ - The field name that should be serialized.
* +attributes+ - This should be a hash of attributes or an array of hashes.
* +class_name_or_coder+ - Optional, a coder object, which responds to `.load` / `.dump` or a class name that the object type should be equal to.
* +counter_name+ - The name of the field that should be decremented.
* +counter_name+ - The name of the field that should be incremented.
* +counters+ - A Hash containing the names of the fields to update as keys and the amount to update the field by as values.
* +counters+ - One or more association counters to reset.
* +database_configuration+: configuration of your databases (as in +config/database.yml+).
* +db_dir+: your +db+ directory.
* +env+: current environment (like Rails.env).
* +execute+ which executes the given block on initialization and updates the latest watched files and timestamp.
* +execute_if_updated+ which just executes the block if it was updated.
* +false+ - Returns always +false+.
* +fixtures_path+: a path to fixtures directory.
* +id+ - Can be either an Integer or an Array of Integers.
* +id+ - The id of the object that should be decremented or an array of ids.
* +id+ - The id of the object that should be incremented or an array of ids.
* +id+ - The id of the object you wish to reset a counter on.
* +id+ - The id of the object you wish to update a counter on or an array of ids.
* +id+ - This should be the id or an array of ids to be updated.
* +initialize+ which expects two parameters and one block as described below.
* +migrations_paths+: a list of paths to directories with migrations.
* +permit_all_parameters+ - If it's +true+, all the parameters will be permitted by default.
* +pool+: number indicating size of connection pool (default 5) * +checkout_timeout+: number of seconds to block and wait for a connection before giving up and raising a timeout error (default 5 seconds).
* +public+: By default, HTTP responses are private, cached only on the user's web browser.
* +reaping_frequency+: frequency in seconds to periodically run the Reaper, which attempts to find and recover connections from dead threads, which can occur if a programmer forgets to close a connection at the end of a thread or a thread dies unexpectedly.
* +root+: a path to the root of the application.
* +seed_loader+: an object which will load seeds, it needs to respond to the +load_seed+ method.
* +sql+ - An SQL statement which should return a count query from the database, see the example above.
* +subject+ * +sender+ * +from+ * +to+ * +cc+ * +bcc+ * +reply-to+ * +orig-date+ * +message-id+ * +references+
* +updated_at+/+updated_on+ are not updated.
* +updates+ - A string, array, or hash representing the SET part of an SQL statement.
* +verifier_name+ - the name of the message verifier.
* :except - Apply this layout to all actions but this one.
* A Rails TimeZone object.
* A TZInfo::Timezone object.
* A flat collection (see +options_for_select+).
* A nested collection (see +grouped_options_for_select+).
* ActiveRecord::ConnectionAdapters::Mysql2Adapter.
* ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.
* ActiveRecord::ConnectionAdapters::SQLite3Adapter.
* ActiveRecordError - Generic error class and superclass of all other errors raised by Active Record.
* An associated record is deleted via record.destroy * Hence the callbacks run, and they find a belongs_to on the record with a :counter_cache options which points back at our owner.
* An identifier for a TZInfo::Timezone object (e.g., "America/New_York").
* Any other key creates standard HTML attributes for the tag.
* Any other key creates standard HTML options for the tag.
* Applies human inflection rules to the argument.
* AssociationTypeMismatch - The object assigned to the association wasn't of the type specified in the association definition.
* Autofilled timestamp columns * Fixture label interpolation * Support for YAML defaults
* Call +define_attribute_methods+ after the other methods are called.
* Call each of its methods you want to add, such as +attribute_method_suffix+ or +attribute_method_prefix+.
* Calling an attribute writer to prevent an local variable assignment
* Capitalizes the first word.
* ConnectionNotEstablished - No connection has been established.
* Create ActiveSupport::TimeWithZone instances via TimeZone's +local+, +parse+, +at+ and +now+ methods.
* Define an +attributes+ method which returns a hash with each attribute name in your model as hash key and the attribute value as hash value.
* Define the various generic +_attribute+ methods that you have declared.
* Deletes leading underscores, if any.
* DeserializationError - Error class for deserialization errors.
* Downcases all words except acronyms.
* Grouped values: This returns an ordered hash of the values and groups them.
* If +value+ is a callable object it must expect one or two arguments.
* If either of these saves fail (due to one of the objects being invalid), an ActiveRecord::RecordNotSaved exception is raised and the assignment is cancelled.
* If the argument is +nil+ an empty array is returned.
* If the argument responds to +to_ary+ the method is invoked.
* In which case, we must make sure to *not* update the counter cache, or else it will be decremented twice.
* Integer - Finds the record with this primary key.
* Integrate exceptions with exceptron * Rack::Cache needs to support streaming bodies
* It does not call +to_a+ on the argument, if the argument does not respond to +to_ary+ it returns an array with the argument as its single element.
* Lazily load TZInfo::Timezone instances only when they're needed.
* Limit the set of zones provided by TZInfo to a meaningful subset of 146 zones.
* No args - Returns +false+ if the table is empty, +true+ otherwise.
* Otherwise accepts the same options as text_field_tag.
* Otherwise, a node with +key+ as tag is created with a string representation of +value+ as text node.
* Otherwise, if the argument responds to +to_ary+ it is invoked, and its result returned.
* Otherwise, returns an array with the argument as its single element.
* Removes a "_id" suffix if present.
* Replaces underscores with spaces, if any.
* Sending a message to same object with zero arguments in presence of a method name clash with an argument or a local variable.
* SerializationError - Error class for serialization errors.
* SerializationTypeMismatch - The serialized object wasn't of the class specified as the second parameter.
* Single aggregate value: The single value is type cast to Fixnum for COUNT, Float for AVG, and the given column's type for everything else.
* Stable, autogenerated IDs * Label references for associations (belongs_to, has_one, has_many) * HABTM associations as inline lists
* StatementInvalid - The database server rejected the SQL statement.
* Support streaming from child templates, partials and so on.
* The CurrencyController inherits the layout from BankController.
* The EmployeeController uses the "employee" layout, because it set the layout to nil, resetting the parent configuration.
* The ExchangeController uses the "exchange" layout.
* The TellerController also uses the "information" layout, because the parent explicitly set it.
* The TillController does not use a layout at all.
* The adapter does not support setting the isolation level * You are joining an existing open transaction * You are creating a nested (savepoint) transaction
* The current mapper * A hash of options which the concern object may use
* The final array must not have duplicates * The order of the persisted array is to be preserved * Any changes made to attributes on objects in the memory array are to be preserved * Otherwise, attributes should have the value found in the database
* Updates all the attributes that are dirty in this object.
* Validation is skipped.
* `preload`: Advertise that this site may be included in browsers' preloaded HSTS lists.
* `subdomains`: Set to `true` to tell the browser to apply these settings to all subdomains.
* add_column * add_foreign_key * add_index * add_reference * add_timestamps * change_column * change_column_default (must supply a :from and :to option) * change_column_null * create_join_table * create_table * disable_extension * drop_join_table * drop_table (must supply a block) * enable_extension * remove_column (must supply a type) * remove_columns (must specify at least one column name or more) * remove_foreign_key (must supply a second table) * remove_index * remove_reference * remove_timestamps * rename_column * rename_index * rename_table
* flash: The flash objects currently in the session.
* http://www.postgresql.org/docs/current/static/transaction-iso.html * https://dev.mysql.com/doc/refman/5.7/en/set-transaction.html
* item1 * item2 TEXT
* session: Objects being saved in the session.
* updated_at/updated_on column is updated if that column is available.
*First:* Specify a subset of fields to be selected from the result set.
*IMPORTANT:* In order for inheritance to work for the callback queues, you must specify the callbacks before specifying the associations.
*Note*: The attributes listed are class-level attributes (accessible from both the class and instance level).
*Now* we actually need the collection so it's loaded
*Warning*: one should not catch ActiveRecord::StatementInvalid exceptions inside a transaction block.
*_action is the same as append_*_action
+:name+ passes if it is a key of +params+ whose associated value is of type +String+, +Symbol+, +NilClass+, +Numeric+, +TrueClass+, +FalseClass+, +Date+, +Time+, +DateTime+, +StringIO+, +IO+, +ActionDispatch::Http::UploadedFile+ or +Rack::Test::UploadedFile+.
+BlockValidator+ is a special +EachValidator+ which receives a block on initialization and call this block for each attribute being validated.
+Client-Ip+ and +X-Forwarded-For+ should not, generally, both be set.
+DateTime+ objects have their time set to 0:00 unless +same_time+ is true.
+DateTime+ objects have their time set to 0:00.
+DateTime+ objects have their time set to 23:59:59.
+DateTime+ objects will have a time set to 0:00.
+DateTime+ objects will have a time set to 23:59:59.
+InheritableOptions+ provides a constructor to build an +OrderedOptions+ hash inherited from another hash.
+MessageVerifier+ creates HMAC signatures using SHA1 hash algorithm by default.
+MessageVerifier+ makes it easy to generate and verify messages which are signed to prevent tampering.
+Rails.application.secrets.namespace+ returns +my_app_production+ in the production environment.
+acronym+ may be used to specify any word that contains an acronym or otherwise needs to maintain a non-standard capitalization.
+array+ (PG only) specifies that the type should be an array (see the examples below).
+assert_routing+ lets you test whether or not the route properly resolves into options.
+associations+ specifies one or more associations that you want to preload.
+attr_name+ The name of the attribute to retrieve the type for.
+attribute_missing+ is like +method_missing+, but for attributes.
+attributes+ will be passed to the class's constructor.
+camelize+ will also convert '/' to '::' which is useful for converting paths to namespaces.
+cast_type+ A symbol such as +:string+ or +:integer+, or a type object to be used for this attribute.
+cast_type+ The type object to use for this attribute.
+coder+ should be the result of previously encoding an Active Record model, using encode_with.
+column_name+ can be a single Symbol, or an Array of Symbols.
+command+ should be a method name and arguments.
+const_paths+ is a set of qualified constant names.
+constantize+ tries to find a declared constant with the name specified in the string.
+constraints+ is a hash of constraints to be applied to this route.
+default+ The default value to use when no value is provided.
+delim+ corresponds to the `typdelim` column in the pg_types table.
+false+ by default.
+false+ is blank:
+false+ is not duplicable:
+from_table+ is the table with the key column, +to_table+ contains the referenced primary key.
+hook.complete+ will be passed the value returned from +hook.run+, and will only be invoked if +run+ has previously been called.
+id_value+ will be returned unless the value is nil, in which case the database will attempt to calculate the last inserted id and return that value.
+identifier+ is a 10 character long string which is deterministically generated from the +from_table+ and +column+.
+json_escape+ doesn't automatically flag the result as HTML safe, since the raw value is unsafe to use inside HTML attributes.
+key+ can take one of three forms:
+link_to+ can also produce links with anchors or query strings:
+mail_to+ has several methods for customizing the email itself by passing special keys to +html_options+.
+mb_chars+ is a multibyte safe proxy for string methods.
+message+ is treated the same as for +add+.
+name+ The name of the attribute being defined.
+name+ The name of the methods to define attribute methods for, and the column which this will persist to.
+name+ is logged along with the executed +sql+ statement.
+new_value+ The current value, after type casting.
+new_value+ will be the current, type cast value.
+nil+ is blank:
+nil+ is not duplicable:
+nil+ is returned if none is found.
+nil+ is returned when the name is not in CamelCase or the constant (or part of it) is unknown.
+old_value+ and +new_value+ will always be type-cast.
+override: false+ will cause the native type to be used over yours if one exists.
+override: true+ will cause your type to be used instead of the native type.
+permitted+ state is kept on the duped object.
+range+ (PG only) specifies that the type should be a range (see the examples below).
+raw_old_value+ The original value, before being passed to +deserialize+.
+raw_old_value+ will be the `_before_type_cast` version of the value (likely a string).
+safe_constantize+ tries to find a declared constant with the name specified in the string.
+schema+ and +identifier+ are unquoted to prevent double quoting.
+schema+ and +identifier+ exclude surrounding quotes (regardless of whether provided in +string+) +string+ supports the range of schema/table references understood by PostgreSQL, for example:
+schema+ is nil if not specified in +string+.
+scope+ takes additional options which apply to all enclosed routes.
+secret+ must be at least as long as the cipher key size.
+selected+ may also be an array of values to be selected when using a multiple select.
+separate_class_name_and_id_with_underscore+ sets whether the method should put '_' between the name and 'id'.
+spec+ is a ConnectionSpecification object which describes database connection information (e.g. adapter, host name, username, password, etc), as well as the maximum size for this ConnectionPool.
+sql_type_metadata+ is various information about the type of the column +null+ determines if this column allows +NULL+ values.
+subtype+ is derived from the `typelem` column in the pg_types table.
+table_name+ may either be a String or a Symbol.
+titleize+ is also aliased as +titlecase+.
+titleize+ is meant for creating pretty output.
+true+ by default.
+true+ is not blank:
+true+ is not duplicable:
+try+ calls can be chained:
+try+ returns +nil+ when called on +nil+ regardless of whether it responds to the method:
+try+ will also return +nil+ if the receiver does not respond to the method:
+underscore+ will also change '::' to '/' to convert namespaces to paths.
+user_provided_default+ Whether the default value should be cast using +cast+ or +deserialize+.
+validates_each+ uses this validator.
+value+ The raw input, as provided from the database.
+value+ The raw input, as provided to the attribute setter.
- +action+: The controller action to call.
- +env+: Additional env to pass, as a Hash.
- +flash+: A hash of parameters to store in the flash.
- +format+: Request format.
- +headers+: Additional headers to pass, as a Hash.
- +method+: Request method used to send the HTTP request.
- +params+: The HTTP parameters that you want to pass.
- +params+: The hash with HTTP parameters that you want to pass.
- +path+: The URI (as a String) on which you want to perform a GET request.
- +session+: A hash of parameters to store in the session.
- However, if +:requires_new+ is set, the block will be wrapped in a database savepoint acting as a sub-transaction.
- OID is an integer representing the type.
- PostgreSQL changes the SQL spec on columns declared simply as "decimal" to something more useful: instead of being given a scale of 0, they take on the compile-time limit for precision and scale, so the following should succeed unless you have used really wacky compilation options
- SQL standard is an integer
- SQLite3 stores a float, in violation of SQL
- The block will be run without doing anything.
- Type is an OID::Type object.
- With no block, but multiple captures: captures are returned as an array.
- With no block, but one capture: the capture is returned.
- X-Forwarded-For will be a list of IPs, one per proxy, or blank - Client-Ip is propagated from the outermost proxy, or is blank - REMOTE_ADDR will be the IP that made the request to Rack
- a Hash which specifies multiple association names, as well as association names for the to-be-preloaded association objects.
- an Array which specifies multiple association names.
- define a helper method in `test_helper.rb` module FixtureFileHelpers def file_sha(path) Digest::SHA2.hexdigest(File.read(Rails.root.join('test/fixtures', path))) end end ActiveRecord::FixtureSet.context_class.include FixtureFileHelpers
- save saved
- table_name - "table.name" - schema_name.table_name - schema_name."table.name" - "schema.name".table_name - "schema.name"."table.name"
-- Allows code reuse in the methods below without polluting Module.
-- An instance of FixtureSet is normally stored in a single YAML file and possibly in a folder with the same name.
-- Defines the standard inflection rules.
-- Implementation constraint: a newly established connection returned by this method must be in the +.leased+ state.
-- Implementation detail: the connection returned by +acquire_connection+ will already be "+connection.lease+ -ed" to the current thread.
-- Must be called in a synchronize block.
-- Other characters
-- Qualified names are required to be relative because we are extending existing methods that expect constant names, ie, relative paths of length 1.
-- This class defines several callbacks:
-- This class is heavily based on faye-websocket-ruby
-- This class wraps up local storage for middlewares.
-- if owner_thread param is omitted, this must be called in synchronize block
-- this is unfortunately not concurrent
--- post test clean up end
--- post test clean up start
--exclude-limit is valid if there's a parsed or yet unparsed --auto-gen-config.
-type d).split
-type d`.split
...and Builder (RXML) templates.
...and content pages that fulfill these references _at_ rendering time:
...and send them all in one query
...but if in the "index" action, it will render:
...then each key/value pair is treated as a method 'argument' when determining where line breaks should appear.
...this will return:
...would result in ActiveRecord::Base.configurations to look like this:
.d is aligned with c
// The header part of this layout hello world // The footer part of this layout
/page/:id(/:action)(.:format)
/some/file /some/other/file
1 hour before TZ change
1 if to avoid warning
1 query to delete the existing reader (michael) 1 query to associate the new reader (david)
1 sec before midnight Jan 1 EST
1 sec before midnight Jan 2 EST
1 second before DST start
1 year ago from leap day
1 year since leap day
1) Include ActionView::Context to bring the required dependencies
1) This request passed through two proxies with incompatible IP header conventions.
11 ids with limit 3, offset 9 should give 2 results.
1AM during fall DST transition is ambiguous, it could be either DST or non-DST 1AM Mirroring Time.local behavior, this method selects the DST time
2 is for spaces on left and right of keyword
2 minutes up to 45 minutes
2 queries: one DELETE and another to update the counter cache
2) Call _prepare_context that will do the required initialization
2) The client passed one of +Client-Ip+ or +X-Forwarded-For+ (whichever the proxy servers weren't using) themselves.
24 hours up to 42 hours
26  LineLength 3   OneLineConditional -- 29  Total
2:30AM does not exist because at 2AM, time springs forward to 3AM
2AM does not exist because at 2AM, time springs forward to 3AM
2AM springs forward to 3AM
3 cops were disabled, then 2 were enabled again, so we should get 2 offenses reported.
3) Set view_context to self
30 significant digits
4 bytes means a MySQL int or Postgres integer as opposed to smallint etc.
4 significant digits, so only 1 decimal here
4.2 is defined as a module because it needs to be shared with Legacy.
45 minutes up to 90 minutes
6 selects, 6 updates
8 bits per byte with one bit for sign
90 minutes up to 24 hours
:addressed:
:api: plugin
:api: private
:api: public
:bar key isn't provided
:builder, etc, shouldn't be added to options
:call-seq: after_action(names, block)
:call-seq: append_after_action(names, block)
:call-seq: append_around_action(names, block)
:call-seq: append_before_action(names, block)
:call-seq: around_action(names, block)
:call-seq: before_action(names, block)
:call-seq: prepend_after_action(names, block)
:call-seq: prepend_around_action(names, block)
:call-seq: prepend_before_action(names, block)
:call-seq: skip_after_action(names)
:call-seq: skip_around_action(names)
:call-seq: skip_before_action(names)
:call-seq: to_s()
:call-seq: to_str()
:controller maps to your controller name :action     maps to an action with your controllers
:delete_all is called on each client since the dependent options is :destroy
:deprecated:
:doc: Execute the supplied block without interference from any concurrent loads.
:exclusively_dependent means each client is deleted directly from the database without looping through them calling destroy.
:method: after_action
:method: append_after_action
:method: append_around_action
:method: append_before_action
:method: around_action
:method: prepend_after_action
:method: prepend_around_action
:method: prepend_before_action
:method: request
:method: response
:method: skip_after_action
:method: skip_around_action
:method: skip_before_action
:move: test in AV
:move: test this in Action View
:nodoc: :stopdoc:
:nodoc: A JoinPart represents a part of a JoinDependency.
:nodoc: A valid Rack::Body (i.e. it responds to each).
:nodoc: Abstract representation of an index definition on a table.
:nodoc: ActiveRecord::Tasks::DatabaseTasks is a utility class, which encapsulates logic behind common tasks used to manage database and migrations.
:nodoc: Adds a validation method or block to the class.
:nodoc: Allows views to be streamed back to the client as they are rendered.
:nodoc: Basic url_for that can be overridden for more robust functionality.
:nodoc: Caches the method definition as a singleton method of the receiver.
:nodoc: Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive knowledge about the encoding.
:nodoc: Convert nested Hash to HashWithIndifferentAccess.
:nodoc: Converts the given object to an ActiveModel compliant one.
:nodoc: Default and i18n option namespace per class
:nodoc: Define the abstract ivar on subclasses so that we don't get uninitialized ivar warnings
:nodoc: Double assign to suppress the dreaded 'assigned but unused variable' warning
:nodoc: Establishes a connection to the database that's used by all Active Record objects
:nodoc: Establishes a connection to the database that's used by all Active Record objects.
:nodoc: First try looking for a sequence with a dependency on the given table's primary key.
:nodoc: Force an attribute to have a particular "before" value
:nodoc: Future people who read this...
:nodoc: Generates a v5 non-random UUID (Universally Unique IDentifier).
:nodoc: Implements the reader method, e.g. foo.bar for Foo.has_one :bar
:nodoc: Implements the reader method, e.g. foo.items for Foo.has_many :items
:nodoc: In order to allow the Sass generators to pick up the default Rails CSS and transform it, we leave it in a standard location for the CSS stylesheet generators to handle.
:nodoc: Methods for sending arbitrary data and for streaming files to the browser, instead of rendering.
:nodoc: No Date is blank:
:nodoc: No DateTime is ever blank:
:nodoc: No Time is blank:
:nodoc: No number is blank:
:nodoc: Normalize ::Foo, ::Object::Foo, Object::Foo, Object::Object::Foo, etc.
:nodoc: Normalizes URI path.
:nodoc: Optimize range sum to use arithmetic progression if a block is not given and we have a range of numeric values.
:nodoc: Overwrite this factory method for redis connections if you want to use a different Redis library than Redis.
:nodoc: PostgreSQL doesn't like ORDER BY when there are no GROUP BY
:nodoc: Pretty prints the result of an EXPLAIN QUERY PLAN in a way that resembles the output of the SQLite shell:
:nodoc: Pretty prints the result of an EXPLAIN in a way that resembles the output of the MySQL shell:
:nodoc: Pretty prints the result of an EXPLAIN in a way that resembles the output of the PostgreSQL shell:
:nodoc: Properly nests namespaces passed into a generator
:nodoc: Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see ActionDispatch::Routing).
:nodoc: Provides methods for converting numbers into formatted strings.
:nodoc: Provides methods to generate HTML tags programmatically when you can't use a Builder.
:nodoc: Rails does not generate anything here.
:nodoc: Represents an HTTP response generated by a controller action.
:nodoc: Returns the target association's class.
:nodoc: Returns the unique request id, which is based on either the X-Request-Id header that can be generated by a firewall, load balancer, or web server or by the RequestId middleware (which sets the action_dispatch.request_id environment variable).
:nodoc: Scopes routes to a specific controller
:nodoc: Sidekiq::Client does not support symbols as keys
:nodoc: Singleton object used to determine if an optional param wasn't specified
:nodoc: The Routing table.
:nodoc: The SQLite3 adapter works SQLite 3.6.16 or newer with the sqlite3-ruby drivers (available as gem from https://rubygems.org/gems/sqlite3).
:nodoc: The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which can reduce the amount of inline Ruby code in your views.
:nodoc: The goal of this module is to move Adapter specific column definitions to the Adapter instead of having it in the schema dumper itself.
:nodoc: The internal PostgreSQL identifier of the BYTEA data type.
:nodoc: The reflection of the association represented
:nodoc: This is like this because benchmarking justifies the strange :false stuff
:nodoc: This method is invoked when a log event occurs.
:nodoc: This module is responsible for providing `rescue_from` helpers to controllers and configuring when detailed exceptions must be shown.
:nodoc: This module provides methods for generating HTML that links views to assets such as images, JavaScripts, stylesheets, and feeds.
:nodoc: Use FixtureResolver in your tests to simulate the presence of files on the file system.
:nodoc: We don't have cache keys for this stuff yet
:nodoc: We want to exit on failure to be kind to other libraries This is only when accessing via CLI
:nodoc: We're treating `nil` as "unset", and we want the default setting to be `true`.
:nodoc: all
:nodoc: all',
:nodoc: check if we have any binary column and if they need escaping
:nodoc: create a 2D array representing the result set
:nodoc: create a subset of the hash by applying :only or :except
:nodoc: holds compiled template code
:nodoc: ignore
:nodoc: initialize cache at class definition for thread safety
:nodoc: needed for rails `rails routes`
:nodoc: semantics of condition variables guarantee that +broadcast+, +broadcast_on_biased+, +signal+ and +wait+ methods are only called while holding a lock
:nodoc:' do
:ported: compatibility
@api private
@api private This is just for debugging purpose.
@api public
@bad if condition_a action_a else if condition_b action_b else action_c end end
@bad method1(method2 arg, method3, arg)
@bad rand 1 Kernel.rand(-1) rand 1.0 rand(-1.0)
@codepoints
@davey_mcdave doesn't have any author_favorites
@eager_load
@example 'Line is too long.
@example 'LineLength'
@example Bad raise RuntimeError, 'message'
@example EnforcedStyle: assign_to_condition
@example Good if EnforcedStyle is backticks or mixed, bad if percent_x.
@example Good if EnforcedStyle is no_space, bad if space.
@example Good if EnforcedStyle is slashes or mixed, bad if percent_r.
@example If statements can contain `then` on the same line:
@example Instead of:
@example Parentheses `()` Brackets.new(:tLPAREN, :tRPAREN, 'parentheses')
@example This is considered bad practice:
@example This is interpreted as a method invocation with a regexp literal, but it could possibly be `/` method invocations.
@example `bar` definition actually produces methods in the same scope as the outer `foo` method.
@example always bad method(1, 2,)
@example bad 1 ..
@example bad 3.day.ago 1.months.ago
@example bad User.all.each
@example bad User.where(name: 'Bruce').first User.where(name: 'Bruce').take
@example bad case foo when *condition bar when baz foobar end
@example bad class SomeClass def SomeClass.class_method ...
@example bad def bake(pie: pie) pie.heat_up end
@example bad def bar foo.bar end
@example bad def set_attribute(value) ...
@example bad def test if something work end end
@example bad if a + b something end
@example bad while a .b something end
@example bad while true work end
@example good for all styles if condition statement else statement end
@example good if condition statement else the content of the else branch will be determined by Style/EmptyElse end
@example no offense Time.zone.today Time.zone.today - 1.day
@good 'abc'.strip
@good array.sort
@good class C def self.method puts 'hi' end
@good def method yield end def another yield 1, 2, 3 end
@good if condition do_x else do_y end do_z
@good method(str.match(/regex/)) return regex.match('str')
@local_tz is initialized as nil to avoid warnings when connect tries to use it
@object_cache maps configuration file paths to configuration objects so we only need to load them once.
@object_name,
@options_config stores a config that is specified in the command line.
@overload each_ancestor Yield all nodes.
@overload each_ancestor(type) Yield only nodes matching the type.
@overload each_child_node Yield all nodes.
@overload each_child_node(type) Yield only nodes matching the type.
@overload each_descendant Yield all nodes.
@overload each_descendant(type) Yield only nodes matching the type.
@overload each_node Yield all nodes.
@overload each_node(type) Yield only nodes matching the type.
@path_cache maps directories to configuration paths.
@person.try(:name)
@person.try(:spouse).try(:name)
@private Builds Ruby code which implements a pattern
@see RuboCop::Cop::Offense
@see http://rubydoc.info/gems/ast/AST/Node:initialize
@see http://rubydoc.info/gems/ast/AST/Sexp
@see http://rubydoc.info/github/whitequark/parser/Parser/Source/Range Parser::Source::Range
@watching is a stack of lists of constants being watched.
A +FormBuilder+ object is associated with a particular model object and allows you to generate fields associated with the model object.
A +LookupContext+ will use a +PathSet+ to store the paths in its context.
A +Tempfile+ object with the actual uploaded file.
A :begin node inside a :dstr node is an interpolation.
A BigDecimal would be naturally represented as a JSON number.
A Chars object accepts a string upon initialization and proxies String methods in an encoding safe manner.
A Config is associated with a YAML configuration file from which it was read.
A CookieOverflow exception is raised if you attempt to store more than 4K of data.
A FormatterSet can hold multiple formatter instances and provides transparent formatter API methods which invoke same method of each formatters.
A JoinAssociation represents an association which is joining to the base.
A JoinBase represents the Active Record which everything else is being joined onto.
A NamedRouteCollection instance is a collection of named routes, and also maintains an anonymous module that can be used to install helpers for the named routes.
A Ruby source file is defined as a file with the `.rb` extension or a file with no extension that has a ruby shebang line as its first line.
A Scope represents a context of local variable visibility.
A Set containing renderer names that correspond to available renderer procs.
A Symbol can be used to specify the type of the generated primary key column.
A Time-like class that can represent a time in any time zone.
A Unicode safe version of all the String methods are defined on this proxy class.
A Variable represents existence of a local variable.
A VariableTable manages the lifetime of all scopes and local variables in a program.
A Warning exception is different from an Offense with severity 'warning' When a Warning is raised, this means that RuboCop was unable to perform a requested operation (such as inspecting or correcting a source file) due to user error For example, a configuration value in .rubocop.yml might be malformed
A basic formatter that displays only files with offenses.
A basic formatter that displays the lines disabled inline comments.
A basic wrapper around Parser's tokens.
A block can be passed to +select+ to customize how the options tags will be rendered.
A block for changing columns in +table+.
A block node has three children: the block start, the arguments, and the expression.
A boolean toggle that allows/disallows new connections.
A braceless hash is the last parameter of a method call and will be checked as such.
A broadcasting is, as discussed elsewhere, a pubsub queue where any data placed into it is automatically sent to the clients that are connected at that time.
A cache store implementation which doesn't actually store anything.
A cache store implementation which stores data in Memcached: http://memcached.org/
A cache store implementation which stores everything into memory in the same process.
A cache store implementation which stores everything on the filesystem.
A cached lookup for table existence.
A call that tries to eager load the addressable model
A call to new_constants is always called after a call to watch_namespaces
A camelized string that contains the acronym will maintain the acronym when titleized or humanized, and will convert the acronym into a non-delimited single lowercase word when passed to +underscore+.
A case where WordArray's correction can be clobbered by AccessModifierIndentation's correction.
A case where the same cop could try to correct an offense twice in one place.
A case where two cops, EmptyLinesAroundBody and EmptyLines, try to remove the same line in autocorrect.
A chain of reflections from this one back to the owner.
A change to any of them could affect the cop output so we include them in the cache hash.
A channel object will be instantiated when the cable consumer becomes a subscriber, and then lives until the consumer disconnects.
A class emitter method is a singleton method in a class/module, where the method has the same name as a class defined in the class/module.
A class method is 'dangerous' if it is already (re)defined by Active Record, but not by any ancestors.
A class option is created when this method is invoked and you can set a hash to customize it.
A class with no predefined methods that behaves similarly to Builder's BlankSlate.
A comment',
A commissioner object is responsible for traversing the AST and invoking the specific callbacks on each cop.
A common example, /profile always shows the profile of the currently logged in user.
A common mistake -- we meant to call 'validates'
A common prefix is removed (useful for namespaced models like Music::Artist and Music::Record):
A connection pool synchronizes thread access to a limited number of database connections.
A connection was established in an ancestor process that must have subsequently forked.
A container for responses available from the current controller for requests for different mime-types sent to a particular action.
A convenience method for returning a collection of TimeZone objects for time zones in the USA.
A convenience method for returning a collection of TimeZone objects for time zones in the country specified by its ISO 3166-1 Alpha2 code.
A convenient wrapper for the zlib standard library that allows compression/decompression of strings with gzip.
A custom scrubber takes precedence over custom tags and attributes.
A declaration like
A default can also be provided.
A duck-type assistant method.
A full-length RSS example actually used on Basecamp:
A good default is the year you created the feed.
A hanging closing parenthesis means `)` preceded by a line break.
A hash is blank if it's empty:
A helper class for building the report summary text.
A helper to make it easier to test different route configurations.
A heredoc that's the last item in a literal or parameter list can not have a trailing comma.
A high-performance RabbitMQ background processing framework for Ruby.
A hook invoked every time a before callback is halted.
A hook to be overridden by association modules.
A hook which allows other frameworks to log what happened during controller process action.
A hook which allows you to clean up any time, wrongly taken into account in views, like database querying time.
A job can also be processed immediately without sending to the queue:
A lambda or a list of lambdas can be passed in and evaluated:
A list of all available normalization forms.
A list of all internal methods for a controller.
A list of all of the default view paths for this controller.
A list of extensions, to be filled in by adapters that support them.
A list of index algorithms, to be filled by adapters that support them.
A list of method names that should be considered actions.
A list of supported adapters can be found in QueueAdapters.
A local variable fixes the problem.
A lost connection can occur if a programmer forgets to checkin a connection at the end of a thread or a thread dies unexpectedly.
A low-cruft shortcut to define a concern.
A mailer model defines methods used to generate an email message.
A map of the cookies returned by the last response, and which will be sent with the next request.
A method name is 'dangerous' if it is already (re)defined by Active Record, but not by any ancestors.
A migration file name can only contain underscores (_), lowercase characters, and numbers 0-9.
A minimal implementation could be:
A minimal implementation including JSON would be:
A mixin to break up ConfigLoader
A module gets a name when it is first assigned to a constant.
A module may or may not have a name.
A module, class, symbol, or string may be provided.
A newly instantiated +Person+ object is unchanged:
A nonce might, for example, be constructed as the base 64 encoding of
A number of operations are defined so that you can search among the paths in this set and also perform operations on other +PathSet+ objects.
A pattern can also map wildcard segments (globs) to params:
A pattern can also point to a +Rack+ endpoint i.e. anything that responds to +call+:
A polymorphic association cannot have a type mismatch, by definition
A prefix before the opening brace.
A proc can also be passed, and will be called once each time a new value is needed.
A range may be used in the hash to use the SQL BETWEEN operator:
A reaper instantiated with a nil frequency will never reap the connection pool.
A reaper with nil time should never reap connections
A reference to the controller instance used by the last request.
A reference to the request instance used by the last request.
A reference to the response instance used by the last request.
A request body is not assumed to contain form-data when no Content-Type header is provided and the request_method is POST.
A request cannot produce a directory traversal using this middleware.
A resolver that loads files from the filesystem.
A return value of 0 means that the erroneous config file was not read.
A running counter of the number of requests processed.
A sample controller could look like this:
A sample metal controller might look like this:
A scaffold for concrete cops.
A scaffold for concrete forces.
A scope instance holds a scope node and variable entries.
A separate offense is registered for each problematic pair.
A server-specified data string which should be uniquely generated each time a 401 response is made.
A session store that uses MemCache to implement storage.
A session store that uses an ActiveSupport::Cache::Store to store the sessions.
A set of common cases for ActiveModel::Validations message generation that are used to generate tests to keep things DRY
A share/exclusive lock, otherwise known as a read/write lock.
A shortcut to define a toplevel concern, not within a module.
A similar thing happens with the other cases.
A simple base class that can be used along with ActiveModel::Validations::ClassMethods.validates_with
A simple hack to restore the observers and interceptors for Mail, as it does not have an unregister API yet.
A simple helper class used in parsing the accept header
A simple integration test that exercises multiple controllers:
A simple string literal.
A single entry in the routing file, such as
A single string, without additional arguments, is passed to the query constructor as an SQL fragment, and used in the where clause of the query.
A singleton ActionCable::Server instance is available via ActionCable.server.
A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify additional inflection rules.
A string is blank if it's empty or contains whitespaces only:
A string is required as a return value.
A string representing the layout can be supplied as well.
A string with the MIME type of the file.
A string with the headers of the multipart request.
A strong ETag implies exact equality: the response must match byte for byte.
A subclass of +AbstractController::Base+ may return false.
A suffix for the line after the closing brace.
A symbolic link anywhere in the cache directory tree is an indication that a symlink attack is being waged.
A thread can remove an element from the queue without waiting if and only if the number of currently available connections is strictly greater than the number of waiting threads.
A through association is nested if there would be more than one join table
A transaction acts on a single database connection.
A tricky special case where the closing brace of the interpolation risks getting confused for a hash literal brace.
A typical module looks like this:
A typical use case is to make constant name resolution deterministic for constants with the same relative name in different namespaces whose evaluation would depend on load order otherwise.
A utility method for escaping HTML entities in JSON strings.
A utility method for escaping HTML tag characters.
A utility method for escaping HTML without affecting existing escaped entities.
A valid YAML file is not necessarily a value Fixture file.
A valid ruby identifier - suitable for class, method and specially variable names
A viable multi-line element.
A weak ETag indicates semantic equivalence, not byte-for-byte equality, so they're good for caching HTML pages in browser caches.
ALL Set to "1" to force the generation of all guides.
ALL isn't a real MIME type, so we don't register it for lookup with the other concrete types.
ALTER TABLE "articles" ADD CONSTRAINT fk_rails_58ca3d3a82 FOREIGN KEY ("author_id") REFERENCES "users" ("lng_id")
ALTER TABLE "articles" ADD CONSTRAINT fk_rails_e74ce85cbc FOREIGN KEY ("author_id") REFERENCES "authors" ("id")
ALTER TABLE "articles" ADD CONSTRAINT fk_rails_e74ce85cbc FOREIGN KEY ("author_id") REFERENCES "authors" ("id") ON DELETE CASCADE
ALTER TABLE `users` ADD COLUMN age INT, ADD COLUMN birthdate DATETIME ...
AST: (begin (block (send nil :some_method (lvasgn :foo (int 1))) (args) nil) (send nil :puts (lvar :foo)))
AST: (begin (lvasgn :instance (send (const nil :Object) :new)) (sclass (lvar :instance) (begin (lvasgn :foo (int 1))
Aborts a transaction.
Abstract base class for formatter, implements all public API methods.
Abstract representation of a column definition.
Abstract subclass of AR::Base.
Abstract subclass of a concrete class which has a type column.
AbstractAdapter and related classes form the abstraction layer which makes this possible.
AbstractController::Base is a low-level API.
AbstractReflection MacroReflection AggregateReflection AssociationReflection HasManyReflection HasOneReflection BelongsToReflection HasAndBelongsToManyReflection ThroughReflection PolymorphicReflection RuntimeReflection
Accept any node type for top level scope
Accept header send with user HTTP_USER_AGENT: Sunrise/0.42j (Windows XP)
Acceptable values are strings as well as regexp.
Accepts a Date or Time object and inserts it in the proper format.
Accepts a block.
Accepts a container (hash, array, enumerable, your type) and returns a string of option tags.
Accepts a custom Rack environment to render templates in.
Accepts a hash one layer deep that contains all connection information.
Accepts a hash two layers deep, keys on the first layer represent environments such as "production".
Accepts a hash.
Accepts a logger conforming to the interface of Log4r which is then passed on to any new database connections made and which can be retrieved on both a class and instance level by calling +logger+.
Accepts a subclass of +ActionView::Helpers::FormBuilder+.
Accepts an array of conditions.
Accepts an array or string of SQL conditions and sanitizes them into a valid SQL fragment for a WHERE clause.
Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for a SET clause.
Accepts an array, or string of SQL conditions and sanitizes them into a valid SQL fragment for an ORDER clause.
Accepts only keys as strings.
Accepts options that will be made available through the +options+ reader.
Access modifiers should be surrounded by blank lines.
Access the contents of the flash.
Access the mailer instance.
Access the message attachments list.
Access the message instance.
Accessing attributes of an object that do not have fields retrieved by a select except +id+ will throw ActiveModel::MissingAttributeError:
Accessing the attribute normally would typecast the string to 0, which isn't what you want.
Account.transaction do select * from accounts where ...
Acquire a connection by one of 1) immediately removing one from the queue of available connections, 2) creating a new connection if the pool is not at capacity, 3) waiting on the queue for a connection to become available.
Acquire the ActiveSupport::Dependencies::Interlock unload lock, ensuring it will be released automatically
Action Controller sends content to the user by using one of five rendering methods.
Action Mailer allows you to send email from your application using a mailer model and views.
Action Mailer is nicely integrated with Active Job so you can generate and send emails in the background (example: outside of the request-response cycle, so the user doesn't have to wait on it):
Action Mailer provides hooks into the Mail observer and interceptor methods.
Action Mailer provides some intelligent defaults for your emails, these are usually specified in a default method inside the class definition:
Action View
Action View contexts are supplied to Action Controller to render a template.
Action View templates can be written in several ways.
Action template sets variable that's picked up by layout
ActionCable.server.broadcast "comments_for_45", author: 'DHH', content: 'Rails is just swell'
ActionCable.server.remote_connections.where(current_user: User.find(1)).disconnect
ActionController::Parameters.new(person: nil).require(:person) ActionController::ParameterMissing: param is missing or the value is empty: person
ActionController::Parameters.new.require(:person) ActionController::ParameterMissing: param is missing or the value is empty: person
ActionController::Renderer allows to render arbitrary templates without requirement of being in controller actions.
ActionController::Renderers.remove(:csv)
ActionController::TestCase will also automatically provide the following instance variables for use in the tests:
ActionController::TestCase will automatically infer the controller under test from the test class name.
ActionController::TestCase will be deprecated and moved to a gem in Rails 5.1.
ActionDispatch::ParamsParser works for all the requests having any Content-Length (like POST).
ActionDispatch::Reloader provides prepare and cleanup callbacks, intended to assist with code reloading during development.
ActionMailer::Base.preview_interceptors.delete(ActionMailer::InlinePreviewInterceptor)
ActionPack uses this to find a suitable partial to represent the object.
ActionView::Template is one of a few sources of potential encoding issues in Rails.
Actions not specified are not changed.
Activate the gem you are reporting the issue against.
Active Job has adapters for the following queueing backends:
Active Job has two built-in queue adapters intended for development and testing: +:async+ and +:inline+.
Active Job objects can be configured to work with different backend queuing frameworks.
Active Job objects can be defined by creating a class that inherits from the ActiveJob::Base class.
Active Job provides hooks during the life cycle of a job.
Active Record allows inheritance by storing the name of the class in a column that is named "type" by default.
Active Record associations can be used to describe one-to-one, one-to-many and many-to-many relationships between models.
Active Record can serialize any object in text columns using YAML.
Active Record collections delegate their representation in XML to this method.
Active Record looks at the fixture's model class, discovers the correct primary key, and generates it right before inserting the fixture into the database.
Active Record objects don't specify their attributes directly, but rather infer them from the table definition with which they're linked.
Active Record saves the ids of the records from the first query to use in the second.
Active Record supports multiple database systems.
Active Record supports optimistic locking if the +lock_version+ field is present.
Active Record takes care of building the query to avoid injection attacks, and will convert from the ruby type to the database type where needed.
Active Record uses table aliasing in the case that a table is referenced multiple times in a join.
Active Record won't persist value objects that have been changed through means other than the writer method.
Active Records accept constructor parameters either in a hash or as a block.
ActiveModel is a class to be implemented by each ORM to allow Rails to generate customized controller code.
ActiveModel::Validations A set of common cases for ActiveModel::Validations message generation that are used to generate tests to keep things DRY
ActiveRecord::AttributeMethods::BeforeTypeCast provides a way to read the value of the attributes before typecasting and deserialization.
ActiveRecord::Base.establish_connection( adapter:  "mysql2", host:     "localhost", username: "myuser", password: "mypass", database: "somedatabase" )
ActiveRecord::Base.establish_connection( adapter:  "sqlite3", database: "path/to/dbfile" )
ActiveRecord::Base.establish_connection(:production)
ActiveRecord::Base.transaction do david.withdrawal(100) mary.deposit(100) end
ActiveRecord::ExplainRegistry.queries
ActiveRecord::FixtureSet.new
ActiveRecord::LogSubscriber.attach_to :active_record
ActiveRecord::RecordNotFound is rescued within the method, and it is not reraised.
ActiveRecord::RuntimeRegistry.connection_handler
ActiveRecord::Schema is only supported by database adapters that also support migrations, the two features being very similar.
ActiveRecord::Scoping::ScopeRegistry.set_value_for(:current_scope, Board, some_new_scope)
ActiveRecord::StatementInvalid exceptions indicate that an error occurred at the database level, for example when a unique constraint is violated.
ActiveRecord::Suppressor prevents the receiver from being saved during a given block.
ActiveSupport.run_load_hooks(:active_record, ActiveRecord::Base)
ActiveSupport::Cache::MemCacheStore.new("localhost", "server-downstairs.localnetwork:8229")
ActiveSupport::Cache::Store can store any serializable Ruby object.
ActiveSupport::Deprecation.new('2.0', 'MyLibrary')
ActiveSupport::LogSubscriber is an object set to consume ActiveSupport::Notifications with the sole purpose of logging them.
ActiveSupport::Notifications.instrument('render', extra: :information) do render text: 'Foo' end
ActiveSupport::Notifications.instrument('wait') do sleep 1 end
ActiveSupport::Notifications.subscribe('process_action.action_controller', ActionController::PageRequest.new)
ActiveSupport::Notifications.unsubscribe("render")
ActiveSupport::Notifications.unsubscribe(subscriber)
ActiveSupport::Reloader.to_prepare do i18n_reloader.execute_if_updated end
ActiveSupport::SecurityUtils.secure_compare( ::Digest::SHA256.hexdigest(token), ::Digest::SHA256.hexdigest(TOKEN) ) end end end
ActiveSupport::Subscriber is an object set to consume ActiveSupport::Notifications.
Acts as tree example:
Actual changes
Actually call the method associated with the action.
Actually converts an XML document element into a data structure.
Actually, that exposure is automatically done.
Adapter used for all streams/broadcasting.
Add +element+ to the queue.
Add +records+ to this association.
Add 1 to half the number of files, so that we remove the file if there's only 1 left.
Add HTML attributes by passing an attributes hash to +options+.
Add a class collisions name to be checked on class initialization.
Add a constraint for wildcard route to make it non-greedy and match the optional format part of the route by default
Add a few more monkeys and pirates and break this into multiple files, and it gets pretty hard to keep track of what's going on.
Add a new +type+ column named +column_name+ to +table_name+.
Add a set of modules to the watch stack, remembering the initial constants.
Add a value to a multivalued header like Vary or Accept-Encoding.
Add a value to a nonexistent header
Add a value to an existing header
Add an extension to the given name based on the platform.
Add and remove callbacks tests for association collections.
Add bin/ to source control
Add bin/rails options
Add caching behavior on top of Details.
Add configured load paths to ruby load paths and remove duplicates.
Add directories that should be watched for change.
Add event subscribers for all existing methods on the class.
Add files that should be watched for change.
Add instrumentations hooks at the bottom, to ensure they instrument all the methods properly.
Add more helper methods to be used by all tests here...
Add new inflection rules using the following format.
Add new mime types for use in respond_to blocks: Mime::Type.register "text/richtext", :rtf
Add nil to a nonexistent header
Add nil to an existing header
Add one or more records to the collection by setting their foreign keys to the association's primary key.
Add the given source to +Gemfile+
Add the prefix bonus only when the Jaro distance is above this value.
Add the submit button for the given form.
Add to it the scope from this reflection (if any)
Adding a name to this array will cause it to be unloaded the next time Dependencies are cleared.
Adding an index fires a query every time to check if an index already exists or not
Adding it is quite simple, you just need to include the module in a specific controller or in +ApplicationController+ in case you want it available in your entire application:
Adding, removing, and changing attributes and their type is done directly in the database.
Additional HTML attributes for the link can be passed in +html_options+.
Additional helpers can be specified using the +helper+ class method in ActionController::Base or any controller which inherits from it.
Additional options on the input tag can be passed as a hash with +options+.
Additional options on the label tag can be passed as a hash with +options+.
Additionally users can allow additional variables via the AllowedVariables option.
Additionally validator classes may be in another namespace and still used within any class.
Additionally, it checks whether the block arguments, if any, are on the same line as the start of the block.
Additionally, polymorphic belongs_to associations can have multiple associated classes, depending on the polymorphic_type field.
Additionally, the +helper+ class method can receive and evaluate a block, making the methods defined available to the template.
Additionally, the class-level +table_name_prefix+ is prepended and the +table_name_suffix+ is appended.
Additionally, the digestor will automatically look through your template file for explicit and implicit dependencies, and include those as part of the digest.
Additionally, the source reflection and/or through reflection may be subject to polymorphism and/or STI.
Additionally, when dealing with numeric values, a query method will return false if the value is zero.
Additionally, you should take care to make sure you are not relying on the ability to decode signed cookies generated by your app in external applications or JavaScript before upgrading.
Address.includes(:addressable)
Adds +:array+ as a valid migration key
Adds +:array+ option to the default set
Adds +message+ to the error messages and used validator type to +details+ on +attribute+.
Adds a class method for retrieving and querying objects.
Adds a filter from the block provided.
Adds a foreign key.
Adds a new column to the named table.
Adds a new delivery method through the given class using the given symbol as alias and the default options supplied.
Adds a new foreign key.
Adds a new index to the table.
Adds a new key/value pair to an existing Hash.
Adds a new renderer to call within controller actions.
Adds a reference.
Adds a silencer from the block provided.
Adds an entry into +Gemfile+ for the supplied gem.
Adds an interval of time to the current object's time and returns that value as a new TimeWithZone object.
Adds another Duration or a Numeric to this Duration.
Adds comment for given table column or drops it if +comment+ is a +nil+
Adds comment for given table or drops it if +comment+ is a +nil+
Adds easy defaults to writing Atom feeds with the Builder template engine (this does not work on ERB or any other template languages).
Adds event subscribers for all new methods added to the class.
Adds fallbacks to the view paths.
Adds index options to the indexes hash, keyed by column name This is primarily used to track indexes that need to be created after the table
Adds instrumentation to several ends in ActionController::Base.
Adds methods to set and authenticate against a BCrypt password.
Adds one or more +records+ to the collection by setting their foreign keys to the association's primary key.
Adds simple access to sample files called file fixtures.
Adds support for +setup+ and +teardown+ callbacks.
Adds the ability to turn a basic fair FIFO queue into one biased to some thread.
Adds the following methods for retrieval and query:
Adds the namespace defined in the options to a pattern designed to match keys.
Adds timestamps (+created_at+ and +updated_at+) columns to +table_name+.
Adds timestamps (+created_at+ and +updated_at+) columns to the table.
Adds to the supplied attribute the supplied error message.
Adds validation and save callbacks for the association as specified by the +reflection+.
Adds, by name, a renderer or renderers to the +_renderers+ available to call within controller actions.
Adjust indentation of `lines` to match `node`
Adjust the given time to the simultaneous time in UTC.
Adjust the given time to the simultaneous time in the time zone represented by +self+.
After a request, the response in the test case doesn't have the defaults merged on top again.
After configured, whenever a "sql.active_record" notification is published, it will properly dispatch the event (ActiveSupport::Notifications::Event) to the +sql+ method.
After configured, whenever a "sql.active_record" notification is published, it will properly dispatch the event (ActiveSupport::Notifications::Event) to the sql method.
After initialization, a call to +execute_if_updated+ must execute the block only if there was really a change in the filesystem.
After loading the appropriate files, the corresponding modules are returned.
After loading the posts, find will collect the +author_id+ from each one and load all the referenced authors with one query.
After performing its main purpose (creating a new post), it initiates a redirect instead.
After quoting, the values are inserted using the same escapes as the Ruby core method +Kernel::sprintf+.
After rounding, the number of digits may have changed
After setting an option in the constructor of the SSE object, all future SSEs sent across the stream will use those options unless overridden.
After that all the processes will start getting the new value.
Alias for +middleware_stack+.
Aliased as validate.
Aliasing these off because AD::Http::Cache::Response defines them
Aliasing twice issues a warning "discarding old...".
Aligned with start of line where do is:
Aligned with start of the whole expression:
Alignment for the first element is set by IndentationWidth cop, the rest of the elements should be aligned using the AlignArray cop.
All Active Record models use this handler to determine the connection pool that they should use.
All authors with subscribers where one of the subscribers' nick is 'alterself'
All caches support auto-expiring content after a specified number of seconds.
All changes to models, including the destruction of those marked for destruction, are saved and destroyed automatically and atomically when the parent model is saved.
All classes inheriting from ActiveRecord::Base will use this connection.
All column values are automatically available through basic accessors on the Active Record object, but sometimes you want to specialize this behavior.
All commands recorded will end up being recorded reverted and in reverse order.
All database statements that happen within the block are effectively appended to the already open database transaction.
All directories in this set must also be present in +autoload_paths+.
All elements are expected to respond to +to_xml+, if any of them does not then an exception is raised.
All elements of path_parameters should use Symbol keys
All files currently loaded.
All files ever loaded.
All hooks come with switches for user interface.
All implementations may not support this method.
All initialization is done, including eager loading in production
All instance methods are expected to return a message object to be sent.
All methods are reentrant.
All mounted applications come with routing helpers to access them.
All namespaces that are eager loaded
All of the association macros can be specialized through options.
All of the identifiers applied to the connection class associated with this server.
All of the methods are built on a simple caching principle that will keep the result of the last query around unless specifically instructed not to.
All of the select-type methods share a number of common options that are as follows:
All of these objects are converted into a lambda and handled the same after this point.
All of this power shouldn't fool you into thinking that you can pull out huge amounts of data with no performance penalty just because you've reduced the number of queries.
All operations you run on the app_middleware will be replayed on the application once it is defined and the default_middlewares are created
All other asset *_path helpers delegate through this method.
All other controllers in turn inherit from +ApplicationController+.
All other controllers in turn inherit from ApplicationController.
All other options provided are forwarded to +asset_path+ call.
All other types are deserialized using GlobalID.
All other types are serialized using GlobalID.
All public instance methods of this class, including ancestors
All queries inside the block will not use the previously set scopes.
All queues can run within a single application (eg.
All request parameters, whether they come from a query string in the URL or form data submitted through a POST request are available through the params method which returns a hash.
All requests are checked except GET requests as these should be idempotent.
All stored values are automatically available through accessors on the Active Record object, but sometimes you want to specialize this behavior.
All such identifiers will automatically create a delegation method of the same name on the channel instance.
All the caching stores from ActiveSupport::Cache are available to be used as backends for Action Controller caching.
All the concrete database adapters follow the interface laid down in this class.
All the methods on the Chars proxy which normally return a string will return a Chars object.
All the needed config values are set by Rails already, so it's necessary to do it only if you want to change the defaults or when you want to use Active Record outside of Rails (in such case after configuring the database tasks, you can also use the rake tasks defined in Active Record).
All the normal String methods are also implemented on the proxy.
All the unicode whitespace
All you need to do is pass the helper as the first element in array with attributes for url:
All you need to do is to ensure that your log subscriber is added to Rails::Subscriber, as in the second line of the code above.
Allow code like `raise Ex.new(arg1, arg2)`.
Allow database path relative to Rails.root, but only if the database path is not the special path that tells sqlite to build a database only in memory.
Allows +nil+ by default if not used with +:minimum+.
Allows explicit splatting:
Allows programmers to programmatically define a schema in a portable DSL.
Allows sort on objects
Allows the use of per-connection tags against the server logger.
Allows to set defaults through app configuration:
Allows to set the name of current mailer.
Allows to specify a HAVING clause.
Allows to specify a group attribute:
Allows to specify an order attribute:
Allows us to buffer messages received from the WebSocket before the Connection has been fully initialized, and is ready to receive them.
Allows you to add attachments to an email, like so:
Allows you to add shortcut so that you don't have to refer to attribute through config.
Allows you to change a previously set where condition for a given attribute, instead of appending to that condition.
Allows you to choose which attributes should be whitelisted for mass updating and thus prevent accidentally exposing that which shouldn't be exposed.
Allows you to configure the railtie.
Allows you to consider additional controller-wide information when generating an ETag.
Allows you to make aliases for attributes, which includes getter, setter, and a predicate.
Allows you to make aliases for attributes.
Allows you to manually set or override the response body.
Allows you to measure the execution time of a block in a template and records the result to the log.
Allows you to set all the attributes by passing in a hash of attributes with keys matching the attribute names.
Allows you to specify controller-wide key prefixes for cache fragments.
Allows you to specify sensitive parameters which will be replaced from the request log by looking in the query string of the request and all sub-hashes of the params hash to filter.
Almost a duplicate from ActionController::Helpers
Also accepts an Array of attribute hashes:
Also accepts an array of possible values.
Also accepts keys as strings (for parsing from YAML for example):
Also allow options hash, so you can do:
Also an offense since previous was multi-line:
Also available through the alias j().
Also be aware that the document may be cached by proxies and browsers.
Also converts '/' to '::' which is useful for converting paths to namespaces.
Also converts downcase url encoded string to uppercase.
Also detects duplicated IDs.
Also have in mind that exceptions thrown within a transaction block will be propagated (after triggering the ROLLBACK), so you should be ready to catch those in your application code.
Also indicates there's a line break.
Also known as accessing "the reddit".
Also look at the example for config to contrast.
Also makes sure proper dependencies are required.
Also note that
Also note that +form_for+ doesn't create an exclusive scope.
Also note that the life of stale cache is extended only if it expired recently.
Also note that the model will not be destroyed unless you also specify its id in the updated hash.
Also note that this implicitly sets :discard_day to true.
Also note that this implicitly sets the day to be the first of the given month in order to not create invalid dates like 31 February.
Also note that when headers are mapped to CGI-like variables by the Rack server, both dashes and underscores are converted to underscores.
Also raised when trying to serialize an object which can't be identified with a Global ID - such as an unpersisted Active Record model.
Also removes a +type+ column if one exists.
Also renames a table's primary key sequence if the sequence name exists and matches the Active Record default.
Also test an edge case: If you have 11 results, and you set a limit of 3 and offset of 9, then you should find that there will be only 2 results, regardless of the limit.
Also you can pass a block to set up the attribute with a default value.
Also, IP address spoofing is not that hard.)
Also, brings two convenience accessors:
Also, ensure that your database connection pool size is as least as large as your worker pool size.
Also, make it output to STDERR.
Also, maps the +omap+ feature for YAML files (See http://yaml.org/type/omap.html) to support ordered items when loading from yaml.
Also, sometimes (like when porting older join table fixtures) you'll need to be able to get a hold of the identifier for a given label.
Also, this is the server instance used for broadcasting.
Also, we are not going to build a new array object per fetch.
Also, you can pass a block to set up the attribute with a default value.
Also, you can specialize this method with per-user checking of permissible attributes.
AlterTableMigrationsTest
Alternative styles are 'consistent' and 'align_braces'.
Alternative styles are 'consistent' and 'align_brackets'.
Alternatively a block can be given.
Alternatively you can use one of the other syntaxes:
Alternatively you may ask for a second parameter +request+.
Alternatively, +:reject_if+ also accepts a symbol for using methods:
Alternatively, extra spaces can be added to align the argument with something on a preceding or following line, if the AllowForAlignment config parameter is true.
Alternatively, use one of the class macros in `NodePattern::Macros` to define your own pattern-matching method.
Alternatively, you can add prefixes to your path without using a separate directory by using +scope+.
Alternatively, you can also use the STEP option if you wish to rollback last few migrations.
Alternatively, you can exert more control over the asset host by setting +asset_host+ to a proc like this:
Alternatively, you can pass a String formatted as an ISO8601 date as the values for "min" and "max."
Alternatively, you can pass a String formatted as an ISO8601 datetime as the values for "min" and "max."
Alternatively, you can pass a String formatted as an ISO8601 datetime with UTC offset as the values for "min" and "max."
Alternatively, you can pass a String formatted as an ISO8601 time as the values for "min" and "max."
Alternatively, you can pass just the model object itself (if the first argument isn't a string or symbol +fields_for+ will realize that the name has been omitted) -
Alternatively, you can require that the specified attribute does _not_ match the regular expression:
Alternatively, you can use named placeholders in the template, and pass a hash as the second element of the array.
Alternatively, you may enable auto-instantiation of the fixture data.
Alternatively:
Alters the string by removing all occurrences of the patterns.
Although DJ can have many storage backends, one of the most used is based on Active Record.
Although in the above example it looks as though this method returns an array, it actually returns a relation object and can have other query methods appended to it, such as the other methods in ActiveRecord::QueryMethods.
Although it's very un-Ruby, some people's AR-mapped tables have upper-case attributes, and when people want to alias those names to more sensible ones, everything goes *foof*.
Although the usage and purpose of +fields_for+ is similar to +form_for+'s, its method signature is slightly different.
Although this command ignores most +options+ and the block if one is given, it can be helpful to provide these in a migration's +change+ method so it can be reverted.
Although this command ignores the block if one is given, it can be helpful to provide one in a migration's +change+ method so it can be reverted.
Always expect original salary.
Always increase the heading level by 1, so we can use h1, h2 heading in the document
Always make sure we return a String in the default_internal
Always returns a hash.
Always wrap the outermost handler to invoke the user handler on the worker pool rather than blocking the event loop.
Among other things, this method is responsible for properly setting the encoding of the compiled template.
An *each* call with a block on a single line is always allowed, however.
An +attributes+ hash must be defined and should contain any attributes you need to be serialized.
An API Controller is different from a normal controller in the sense that by default it doesn't include a number of features that are usually required by browser access only: layouts and templates rendering, cookies, sessions, flash, assets, and so on.
An AbstractAdapter represents a connection to a database, and provides an abstract interface for database-specific functionality such as establishing a connection, escaping values, building the right SQL fragments for +:offset+ and +:limit+ options, etc.
An ActiveRecord::TransactionIsolationError will be raised if:
An Arel::Table for the active_record
An Array with a compile method.
An Email controller for example does not support paths, only full URLs.
An Engine with the responsibility of coordinating the whole boot process.
An Error exception is different from an Offense with severity 'error' When this exception is raised, it means that RuboCop is unable to perform a requested action (probably due to misconfiguration) and must stop immediately, rather than carrying on
An Optimized resolver for Rails' most common case.
An abstract cache store class.
An abstract class that implements a Resolver with path semantics.
An abstract definition of a column in a table.
An acronym must be specified as it will appear in a camelized string.
An action may contain only a single render or a single redirect.
An arbitrary expression is passed in and evaluated.
An arbitrary positive or negative difference can be specified.
An array is blank if it's empty:
An array may also be specified, to support testing multiple jobs.
An array may be used in the hash to use the SQL IN operator:
An array of arrays of scopes.
An array of constant names that need to be unloaded on every request.
An array of expressions can also be passed in and evaluated.
An array of qualified constant names that have been loaded.
An eager loading condition to force the eager loading model into the old join model.
An early raised exception could trigger some other handler and the array could include precisely a string whose corresponding constant has not yet been seen.
An elegant way to factor duplication out of options passed to a series of method calls.
An else branch does not, since it doesn't add a decision point.
An email was delivered.
An email was generated.
An email was received.
An empty array is returned if none are found.
An empty branch can be an `if` without an `else`, or a branch that contains only comments.
An engine can also be a rack application.
An engine is nothing more than a railtie with some initializers already set.
An entity class such as Customer can easily have two different objects that both have an address on Hyancintvej.
An equivalent way of setting up this association this would be:
An error message can be specified.
An example broadcasting for this channel looks like so:
An example of calling where query method on the relation:
An example would be Active Record log subscriber responsible for logging queries:
An example would be an Active Record subscriber responsible for collecting statistics about queries:
An expected place for this code would be +lib/constraints+.
An implementation might choose not to accept a previously used nonce or a previously used digest, in order to protect against a replay attack.
An in-memory backend suitable only for testing.
An inline comment')
An inline image has no need for an alt tag to be automatically generated from the cid:
An instance of ActiveSupport::TimeWithZone is never blank
An instance of a view class.
An instance of this class represents a set of requests and responses performed sequentially by a test process.
An instance of this configuration object is available via ActionCable.server.config, which allows you to tweak Action Cable configuration in a Rails config initializer.
An integration test spans multiple controllers and actions, tying them all together to ensure they work together as expected.
An internal class for correcting parallel assignment
An internal class for correcting parallel assignment guarded by if, unless, while, or until
An internal class for correcting parallel assignment protected by rescue
An internal class for representing a shuffle + method node analyzer.
An internal stack used to record which constants are loaded by any block.
An iteration object will automatically be made available to the template with a name of the form +partial_name_iteration+.
An object is blank if it's false, empty, or a whitespace string.
An object is present if it's not blank.
An offense represents a style violation detected by RuboCop.
An offset that is not expected, but correct if the configuration is changed.
An optional namespace can be passed to enclose key names:
An underscore string that contains the acronym will retain the acronym when passed to +camelize+, +humanize+, or +titleize+.
And a database.yml that looked like this:
And an instance method _routes.
And both aliases are set up for you.
And changes the original string:
And check that these changes are reflected in dump
And finally they can also be removed from the stack completely:
And for a new record
And in another place:
And instantiate will find the existing constant rather than trying to require firm_on_the_fly.
And it will be wrapped into a nested hash with the key name matching the controller's name.
And it's finally registered as:
And now it will look for all templates at "app/views/notifications" with name "another".
And now it will look up at:
And of course you can just create a bare object and specify the attributes after the fact:
And of course, you can put as many as you like at a time too.
And pass the bind values as the first argument of +execute+ call.
And retrieved again through the same hash:
And sometimes you need to do something in SQL not abstracted directly by migrations:
And the expected template will be used.
And the final result would be:
And the lookup is exactly the same as previously:
And then you have content pages that look like this:
And use it on initialization:
And, like this (xml-encoded):
Annotations are looked for in comments and modulus whitespace they have to start with the tag optionally followed by a colon.
Annoying hack warnings
Annoyingly, the code for prepared statements whose return value may have changed is FEATURE_NOT_SUPPORTED.
Anonymous modules aren't autoloaded.
Anonymous modules cannot follow these conventions and therefore we assume that the user wants to refer to a top-level constant.
Another case is `binding`:
Another common use case is optimistic locking handling:
Another longer example would be:
Another round of autocorrection is needed
Another round of inspection will be done, and any other offenses will be caught then, so we don't need to continue.
Any +Post+ class will work as long as its instances respond to +to_key+ and +model_name+, given that +model_name+ responds to +param_key+.
Any additional arguments will be passed to the corresponding cache store class's constructor:
Any change is instantly reflected in the Active Record objects.
Any change to the attributes on either instance will affect both instances.
Any class that includes this module will get all named routes...
Any class that inherits from ActiveModel::Validator must implement a method called +validate+ which accepts a +record+.
Any cleanup needed when channel is unsubscribed
Any collection renders will find those cached templates when attempting to read multiple templates at once.
Any fixture labeled "DEFAULTS" is safely ignored.
Any fixtures labeled "_fixture" are safely ignored.
Any further options are used as connection parameters to libpq.
Any kind of variable name.
Any libraries that use thread pools should be configured to match the maximum value specified for Puma.
Any method with a block will be treated as an XML markup tag with nested markup in the block.
Any option parameters provided will be used to re-add the foreign key in case of a migration rollback.
Any options not seen here are passed on as params with the url.
Any other file name will raise an IllegalMigrationNameError.
Any path parameter implicitly used by +url_for+ can always be overwritten like shown on the last +url_for+ calls.
Any proxy setup will put the value you want in the middle (or at the beginning) of the X-Forwarded-For list, with your proxy servers after it.
Any routing helpers can be used inside a concern.
Any subsequent condition chained to the returned relation will continue generating an empty relation and will not fire any query to the database.
Any thread holding this lock will be compiling the template needed by the threads waiting.
Any user connecting from the 192.168.* range will be able to see this resource, where as any user connecting outside of this range will be told there is no such route.
Anything *not* in this set is provided by the English library.
Anything else is blank, some user type, or some function and we can't know the value of that, so return nil.
Anything with a scope can additionally ruin our attempt at finding an inverse, so we exclude reflections with scopes.
Anything you place in the flash will be exposed to the very next action and then cleared out.
Apparently it will be changed in the future.
Append a callback after actions.
Append a callback around actions.
Append a callback before actions.
Append a path to the list of view paths for this controller.
Append rescue at the bottom to wrap as much as possible.
Appends a column or columns of a specified type.
Appends a primary key definition to the table definition.
Appends the contents for the given key.
Application configuration should go into files in config/initializers -- all .rb files in that directory are automatically loaded.
Application logic should not go into url_options.
ApplicationController.render template: '...'
ApplicationController.renderer
ApplicationController.renderer.new(method: 'post', https: true)
ApplicationController.renderer.render template: '...'
Applies inflection rules for +singularize+ and +pluralize+.
Apply charset at the beginning so all fields are properly quoted
Applying values to a relation has some side effects.
Arbitrary Ruby objects are not supported.
Arguments and blocks are forwarded to the method if invoked:
Arguments are assumed to be relative to the receiver.
Arguments can be passed as well.
Around callbacks can access the return value from the event, if it wasn't halted, from the +yield+ call.
Array of different objects
Arrays/Hashes are deserialized element by element.
Arrays/Hashes are serialized element by element.
Article.published.featured.latest_article Article.featured.titles
As a consequence changes to the database are not seen outside your connection until the operation is complete.
As a result, if a user saves their template as ISO-8859-1 (for instance, using a non-Unicode-aware text editor), and uses characters outside of the ASCII range, their users will see diamonds with question marks in them in the browser.
As a rule of thumb you can think of +camelize+ as the inverse of underscore, though there are cases where that does not hold:
As a rule of thumb you can think of +underscore+ as the inverse of camelize, though there are cases where that does not hold:
As an alternative, it is recommended to use one of the following methods.
As an engine can now be a rack endpoint, it can also have a middleware stack.
As an input to the initializer, we take a Fixnum, a String, or a Symbol.
As explained in Channel, most of the time, these broadcastings are streamed directly to the clients subscribed to the named broadcasting.
As long as the indentation of this method is consistent with that of the last one, we're fine.
As long as there's at least one comment line that isn't an annotation, it's OK.
As such, changes to `lock_optimistically`, or `locking_column` would not be picked up.
As such, changes to `time_zone_aware_attributes`, or `skip_time_zone_conversion_for_attributes` would not be picked up.
As the primaries didn't hold a share lock, as soon as the outer one was released, all the exclusive locks are free to be acquired in turn.
As this is both cryptic and usually redundant, it should be avoided.
As this is the most popular route of most Rails applications, this is beneficial.
As we are using Action View's +image_tag+ method, you can pass in any other options you want:
As we haven't started doing any real work yet, we should pretend that we never made it off the queue.
As with +belongs_to+, Active Record reflects on the fixture's model class and discovers the +has_and_belongs_to_many+ associations.
As you can pass in any header, you need to either quote the header as a string, or pass it in as an underscored symbol, so the following will work:
As you can see the integration test involves multiple controllers and exercises the entire stack from database to dispatcher.
As you see the proc takes a +source+ parameter.
As you see, the HTML reflects knowledge about the resource in several spots, like the path the form should be submitted to, or the names of the input fields.
As you see, we use the output embeddings for the render methods.
As you're unlikely to write code that can accept values of any type this is rarely a problem in practice.
Assert correct error
Assert no error
Assertion that the block should not raise an exception.
Assertion that the numeric result of evaluating an expression is not changed before and after invoking the passed in block.
Asserts a given file does not exist.
Asserts a given file exists.
Asserts a given migration does not exist.
Asserts a given migration exists.
Asserts that an expression is not truthy.
Asserts that no emails are enqueued for later delivery.
Asserts that no emails have been sent.
Asserts that no jobs have been enqueued.
Asserts that no jobs have been performed.
Asserts that the job passed in the block has been enqueued with the given arguments.
Asserts that the job passed in the block has been performed with the given arguments.
Asserts that the number of emails enqueued for later delivery matches the given number.
Asserts that the number of emails sent matches the given number.
Asserts that the number of enqueued jobs matches the given number.
Asserts that the number of performed jobs matches the given number.
Asserts that the provided options can be used to generate the provided path.
Asserts that the redirection options passed in match those of the redirect called in the latest action.
Asserts that the response is one of the following types:
Asserts that the routing of the given +path+ was handled correctly and that the parsed options (given in the +expected_options+ hash) match +path+.
Asserts the given attribute type gets a proper default value:
Asserts the given attribute type gets translated to a field type properly:
Asserts the given class method exists in the given content.
Asserts the given method exists in the given content.
Assets are stored under files, and copied to output/files as part of the generation process.
Assign any deferred nested attributes after the base attributes have been set.
Assign the rendered format to look up context.
Assigning the same value leaves the attribute unchanged:
Assignment of self.x
Assignment:
Assigns a new value to the hash:
Assigns a value to a given +key+.
Assigns the given +value+ to the +params+ hash.
Assigns the given attributes to the association.
Assigns the given attributes to the collection association.
Associating new records always saves them Thus, 1 query for the new person record, 1 query for the new join table record
Association SingularAssociation HasOneAssociation + ForeignAssociation HasOneThroughAssociation + ThroughAssociation BelongsToAssociation BelongsToPolymorphicAssociation CollectionAssociation HasManyAssociation + ForeignAssociation HasManyThroughAssociation + ThroughAssociation
Association methods are generated in a module that is included into the model class, which allows you to easily override with your own methods and call the original generated method with +super+.
Association name or counter name can be given.
Association with autosave option defines several callbacks on your model (before_save, after_create, after_update).
Assume given controller
Assumed to be an instance of +Money+ in this case.
Assumes that +str+ is a time in the time zone +self+, unless +format+ includes an explicit time zone.
Assuming the following setup:
At one time, there was a problem with the psych YAML engine under Ruby 1.9.3.
At rendering time, the content page is computed and then inserted in the layout, like this:
At the beginning, do not consider class default for content_type
At the database-level, the actions performed by these users could be interleaved in the following manner:
At the read uncommitted level, there is nothing that must not happen.
At the time of writing, the only database that supports true nested transactions that we're aware of, is MS-SQL.
At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL.
At this size, the increased overhead can be a reasonable tradeoff even if it reduces our at-a-glance perception of how things work.
Attach the subscriber to a namespace.
Attaches the stored job data to the current instance.
Attachments
Attempt to autoload the provided module name by searching for a directory matching the expected path suffix.
Attempting to change it afterwards will result in a +RuntimeError+.
Attempting to try to do either again will result in a DoubleRenderError:
Attempts to +save+ the record and clears changed attributes if successful.
Attempts to find the inverse association name automatically.
Attempts to pluralize the +singular+ word unless +count+ is 1.
Attribute hash keys that should not be assigned as normal attributes.
Attribute that keeps track of converted arrays, if any, to avoid double looping in the common use case permit + mass-assignment.
Attribute writer methods only accept one argument.
Attributes are reloaded from the database, and caches busted, in particular the associations cache and the QueryCache.
Attributes listed as readonly will be used to create a new record but update operations will ignore these fields.
Attributes marked as readonly are silently ignored if the record is being updated.
Attributes must be strings, not symbols.
Authenticate with HTTP Digest, returns true or false
Author.first.books.transaction do same effect as calling Book.transaction end
Auto-correction needs a full run.
Autoload and eager load conveniences for your library.
Autoloading recursion, also expected to be watched and discarded.
Autoloading recursion, expected to be discarded.
AutosaveAssociation is a module that takes care of automatically saving associated records when their parent is saved.
Available behaviors are:
Available behaviors:
Available callbacks are:
Available so that TimeZone instances respond like TZInfo::Timezone instances.
Available transformations are:
Avoid CORS issues when API is called from the frontend app.
Avoid column definitions in create table statements like: `title` varchar(255) DEFAULT NULL
Avoid correcting to `lambdado` by inserting whitespace if none exists before or after the lambda arguments.
Avoid error messages on console
Avoid failure on version bump
Avoid getting "symlink() function is unimplemented on this machine" on Windows.
Avoid having to pass an open file handle as the response body.
Avoid intermittent failure when another test set ConfigLoader options
Avoid introspection queries during tests.
Avoid issues with setting the default_locale by disabling available locales check while configuring.
Avoids infinite recursion.
BCrypt hash function can handle maximum 72 characters, and if we pass password of length more than 72 characters it ignores extra characters.
BOM (byte order mark) can also be seen as whitespace, it's a non-rendering character used to distinguish between little and big endian.
BUT salary has non-nil default which should be treated as not changed on cloned instance
Backburner is a beanstalkd-powered job queue that can handle a very high volume of jobs.
Backtraces often include many lines that are not relevant for the context under review.
Base class for AggregateReflection and AssociationReflection.
Base controller for these tests
Based on the above example, the subscribers of this channel will get whatever data is put into the, let's say, `comments_for_45` broadcasting as soon as it's put there.
Basic implementation of url_for to allow use helpers without routes existence
Basic mail usage without block
Basically there are two different styles:
Be aware that because the type column is an attribute on the record every new subclass will instantly be marked as dirty and the type column will be included in the list of changed attributes on the record.
Be aware that these columns use a string keyed hash and do not allow access using a symbol.
Be aware, though, that the objects will _not_ have their instance data returned to their pre-transactional state.
Be careful because this also means you're initializing a model object with only the fields that you've selected.
Be careful to sanitize the path parameter if it is coming from a web page.
Be careful when using the older argument style, as an extra literal hash is needed:
Be careful which directory is specified in your config file when using +FileStore+ because everything in that directory will be deleted.
Be careful with this method since it could affect other processes if shared cache is being used.
Be conservative and return false if we're not sure
Be conservative and return true if we're not sure
Be lazy computing stuff to have as light impact as possible to the rest of tasks.
Be sure to declare +define_attribute_method+ after you define any prefix, suffix or affix method, or they will not hook in.
Be sure to declare +define_attribute_methods+ after you define any prefix, suffix or affix methods, or they will not hook in.
Be sure to include shadowed public instance methods of this class
Be sure to look at the documentation of those specific classes for more information.
Be sure to specify the same class as the +value_method+ when specifying selected or disabled options.
Be sure to stringify the id for routes
Be warned that your attributes are not copied.
Bear in mind that GET and HEAD requests are not checked.
Because CookieStore extends Rack::Session::Abstract::Persisted, many of the options described there can be used to customize the session cookie that is generated.
Because callbacks are run in the order they are defined, associated objects may need to be explicitly saved in any user-defined +before_save+ callbacks.
Because condition-wait loop is encapsulated in the Queue class (that in turn is oblivious to ConnectionPool implementation), threads that are "stuck" there are helpless, they have no way of creating new connections and are completely reliant on us feeding available connections into the Queue.
Because of extended life of the previous cache, other processes will continue to use slightly stale data for a just a bit longer.
Because of how the rescue clauses come out of Parser, these are special and need to be tested.
Because of line breaks, we will only find the beginning.
Because of this, Active Record emulates nested transactions by using savepoints on MySQL and PostgreSQL.
Because the generated param begins with the record's +id+, it is suitable for passing to +find+.
Because they make minimal corrections relating only to their specific areas, and stay away from cleaning up extra whitespace in the process, the combined changes don't interfere with each other and the result is semantically the same as the starting point.
Because this transformation is idempotent, this helper can be applied even if +ActiveSupport.escape_html_entities_in_json+ is already true.
Because you can instantiate multiple sessions and run them side-by-side, you can also mimic (to some limited extent) multiple simultaneous users interacting with your system.
Before and After hooks
Before callbacks should also be executed as early as possible, so also include them at the bottom.
Before changes, the floating point numbers will be interpreted as table names and will cause this to run in one query
Before each constant is removed a callback is sent to its class/module if it implements +before_remove_const+.
Before processing, set the request formats in current controller formats.
Begins a transaction.
Begins the transaction (and turns off auto-committing).
Begins the transaction with the isolation level set.
Behavior module allows to determine how to display deprecation messages.
Behavior specific to functional tests
Being immune to bad configuration files in excluded directories has become important due to a bug in rubygems (https://github.com/rubygems/rubygems/issues/680) that makes installations of, for example, rubocop lack their .rubocop.yml in the root directory.
Benchmark realtime in milliseconds.
Besides providing the same configuration as Rails::Engine and Rails::Railtie, the application object has several specific configurations, for example "cache_classes", "consider_all_requests_local", "filter_parameters", "logger" and so forth.
Besides the overwritable callback methods, it's also possible to register callbacks through the use of the callback macros.
Besides, if you fetch existing records with +select+ and leave the ID out, you're on your own, this predicate will return false.
Big savings in request time and network bandwidth.
BigDecimals are duplicable:
BigDecimals need to be put in a non-normalized form and quoted.
Bit-string notation
Blocks and ignores any exception passed as argument if raised within the block.
Blog::Engine.load_seed
Book, ScaryBook and GoodBook will all use the same connection pool to "library_db" while Author, BankAccount, and any other models you create will use the default connection pool to "my_application".
Boolean for if changes are detected
Boolean types
Both 'files' and 'fuubar' start with an 'f'.
Both calls delete the affected posts all at once with a single DELETE statement.
Both correct and incorrect code has been found in relation to EnforcedStyleForEmptyBraces, but that doesn't matter.
Both express a 1-1 relationship.
Both instance and class/singleton methods are checked.
Both methods.
Both underscores and dashes have to be interpreted as if they were originally sent as dashes.
Broadcasting is how other parts of your application can send messages to a channel's subscribers.
Broadcasts logs to multiple loggers.
Browsers open a limited number of simultaneous connections to a single host.
Browsers will remember the original HSTS directive until it expires.
Build ISO 8601 Duration string for this duration.
Build a list of candidates to search for
Build a rails app
Build a stream handler by wrapping the user-provided callback with a decoder or defaulting to a JSON-decoding retransmitter.
Build an application by invoking the generator and going through the whole stack.
Build full select tag from date type and options.
Build select option HTML from date value and options.
Builder templates are a more programmatic alternative to ERB.
Builds a hash containing the flashes to keep for the next request.
Builds a prompt option tag with supplied options or from default options.
Builds and returns output string.
Builds equality condition.
Builds hidden input tag for date part and value.
Builds select tag from date type and HTML select options.
Built-in global variables are allowed by default.
But by default it is invoked with the same name as the resource generator, which is singular.
But could be a generic Queue.
But doesn't modify the original string:
But for the indented style, it doesn't come into play.
But if anything else goes wrong, this is still the best way to handle it.
But if it is +nil+ and does not respond to the delegated method, +nil+ is returned.
But if not having a profile yet is fine and should not be an error condition:
But if the app does not use the "Foo" constant we need to be careful not to trigger loading "foo.rb" ourselves.
But if you raise an ActiveRecord::Rollback exception, then the database transaction will be rolled back, without passing on the exception.
But it's in a hidden directory, so it's not read.
But sometimes the database might return columns with characters that are not allowed in normal method names (like 'my_column(omg)'.
But the Rack app can still respond to its own HEAD requests.
But there may well be off cases, like copying a commentable and its comments, where you don't want that.
But they have to be loaded (as in a real environment) to make the second generator run fail
But we also allow the "end" to be aligned with the start of the line where the "do" is, which is a style some people use in multi-line chains of blocks.
But you can also set a class-specific connection.
But you don't have to restrict yourself to static includes.
By calling +instantiate+ instead of +new+, finder methods ensure they get new instances of the appropriate class for each record.
By convention, each action also maps to particular CRUD operations in a database.
By convention, this could be done by trying to find the defined model that has the same singular name as the controller.
By default +text+ is sanitized to prevent possible XSS attacks.
By default address is equal localhost:11211.
By default after callbacks are executed no matter if callback chain was terminated or not.
By default column length +len+ equals 72 characters and indent +indent+ equal two spaces.
By default if an HTML response is expected it will render static error pages from the `/public` directory.
By default it uses Marshal to serialize the message.
By default it will create it in the same directory as the destination file.
By default nested attribute updating is turned off and you can enable it using the accepts_nested_attributes_for class method.
By default the +:id+ parameter doesn't accept dots.
By default the associated records are protected from being destroyed.
By default this behavior is an ajax submit.
By default this is +id+.
By default this is assumed to be an instance named after the attribute.
By default this is guessed to be the name of the associated class in lower-case and "_id" suffixed.
By default this is guessed to be the name of the association with a "_type" suffix.
By default this is guessed to be the name of the association with an "_id" suffix.
By default this is guessed to be the name of the polymorphic association specified on "as" option with a "_type" suffix.
By default this is guessed to be the name of this class in lower-case and "_id" suffixed.
By default this is id.
By default this will call +validates_each+ to determine validity therefore subclasses should override +validates_each+ with validation logic.
By default you will only be able to set and update attributes on the associated model.
By default, +camelize+ converts strings to UpperCamelCase.
By default, +model+ is the ActiveSupport::TimeZone constant (which can be obtained in Active Record as a value object).
By default, +test_helper.rb+ will load all of your fixtures into your test database, so this test will succeed.
By default, Active Record can guess the inverse of the association based on the name of the class.
By default, Hash literals that are arguments in a method call with parentheses, and where the opening curly brace of the hash is on the same line as the opening parenthesis of the method call, shall have their first key indented one step (two spaces) more than the position inside the opening parenthesis.
By default, Rails generates migrations that look like:
By default, Rails loads generators from your load path.
By default, Rails will compile each template to a method in order to render it.
By default, a single session is automatically created for you, but you can use this method to open multiple sessions that ought to be tested simultaneously.
By default, all controllers and views have access to a special version of url_for, that already knows what the current hostname is.
By default, array literals that are arguments in a method call with parentheses, and where the opening square bracket of the array is on the same line as the opening parenthesis of the method call, shall have their first element indented one step (two spaces) more than the position inside the opening parenthesis.
By default, associations will look for objects within the current module scope.
By default, each controller will include all helpers.
By default, if you don't specify the key in which the parameters would be wrapped to, +ParamsWrapper+ will actually try to determine if there's a model related to it or not.
By default, it will be UTF-8.
By default, it will create a button tag with type `submit`, if type is not given.
By default, it will underscore then humanize the class name.
By default, migrations will describe the actions they are taking, writing them to the console as they happen, along with benchmarks describing how long each step took.
By default, never raise an UnpermittedParameters exception if these params are present.
By default, only instances of Hash itself are extractable.
By default, only save associated objects that are new records.
By default, only save the associated object if it's a new record.
By default, save always runs validations.
By default, the +namespace+ and +name+ option will take the namespace and name of the given class respectively.
By default, the group is :default
By default, the prefix is the empty string.
By default, the suffix is the empty string.
By default, the value is "ar_internal_metadata"
By default, the value is "schema_migrations"
By default, there's no reason to avoid auto-correct.
By default, they output XHTML compliant tags.
By default, this implementation passes the key string through a method that replaces all characters that are invalid inside DOM ids, with valid ones.
By default, this makes all database statements in the nested transaction block become part of the parent transaction.
By default, this method is accessible from your controllers, views and mailers.
By default, this parameter is true.
By default, this will use the +uuid_generate_v4()+ function from the +uuid-ossp+ extension, which MUST be enabled on your database.
By default, warnings are not silenced and debugging is off.
By placing any splat expansions at the end of the list of `when` branches we will reduce the number of times that memory has to be allocated for the expansion.
By quieting the mix-in noise, we arrive at a natural, low-ceremony way to separate bite-sized concerns.
By safe assignment we mean putting parentheses around an assignment to indicate "I know I'm using an assignment as a condition.
By supplying +skip_digest:+ true to cache, the digestion of cache fragments can be manually bypassed.
By the SQL standard, numbers assigned to this field should be truncated but that's seldom respected.
CANONICAL_ACTIONS holds all actions that does not need a prefix or a path appended since they fit properly in their scope level.
CDATA sections are used to escape blocks of text containing characters which would otherwise be recognized as markup.
CLI options
COLLECTION CHECK BOXES
COLLECTION RADIO BUTTONS
COMBINING DOT ABOVE
COMBINING DOT BELOW
COMBINING OGONEK
CONFORMANCE: 1.
CREATE FULLTEXT INDEX index_developers_on_name ON developers (name) -- MySQL
CREATE INDEX by_branch_desc_party ON accounts(branch_id DESC, party_id ASC, surname)
CREATE INDEX by_name ON accounts(name(10))
CREATE INDEX by_name_surname ON accounts(name(10), surname(15))
CREATE INDEX index_developers_on_name ON developers USING btree (name) -- PostgreSQL CREATE INDEX index_developers_on_name USING btree ON developers (name) -- MySQL
CREATE INDEX suppliers_name_index ON suppliers(name)
CREATE TABLE accounts ( id int NOT NULL auto_increment, name varchar default NULL, PRIMARY KEY  (id) )
CREATE TABLE categories_suppliers ( category_id int, supplier_id int )
CREATE TABLE objects ( guid int auto_increment PRIMARY KEY, name varchar(80) )
CREATE TABLE tags ( id varchar PRIMARY KEY, label varchar )
CREATE TABLE users ( id int NOT NULL auto_increment, account_id int default NULL, name varchar default NULL, PRIMARY KEY  (id) )
CREATE UNIQUE INDEX accounts_branch_id_party_id_index ON accounts(branch_id, party_id)
CREATE UNIQUE INDEX by_branch_party ON accounts(branch_id, party_id)
CREATE UNIQUE INDEX index_accounts_on_branch_id_and_party_id ON accounts(branch_id, party_id) WHERE active
Cache entries have a value and an optional expiration time.
Cache fragments of a view if +condition+ is true
Cache fragments of a view unless +condition+ is true
Cache or yield the block.
Cache source root and add lib/generators/base/generator/templates to source paths.
Cache the proxy separately before the owner has an id or else a post-save proxy will still lack the id
Cache the template digest.
Cache the templates returned by the block
Cache v 1.1 tests
Caches can also store values in a compressed format to save space and reduce time spent sending data.
Caches that implement LocalCache will be backed by an in-memory cache for the duration of a block.
Caching results when a cop has crashed would prevent the crash in the next run, since the cop would not be called then.
CachingKeyGenerator is a wrapper around KeyGenerator which allows users to avoid re-executing the key generation process when it's called using the same salt and key_size.
Calculate the details key.
Calculates a new Time or Date that is as far in the future as this Duration represents.
Calculates a new Time or Date that is as far in the past as this Duration represents.
Calculates a sum from the elements.
Calculates the average value on a given column.
Calculates the maximum value on a given column.
Calculates the minimum value on a given column.
Calculates the sum of values on a given column.
Calculations
Call configure to load the settings from Rails.application.config.generators to Rails::Generators
Call nothing...
Call render_body if we are streaming instead of usual +render+.
Call the action.
Call the methods +up+ and +down+ of the yielded object to run a block only in one given direction.
Callback code can be contained in instance methods, procs or lambdas, or callback objects that respond to certain predetermined methods.
Callbacks allow you to trigger logic during the life cycle of a job.
Callbacks are code hooks that are run at key points in an object's life cycle.
Callbacks are generally run in the order they are defined, with the exception of callbacks defined as methods on the model, which are called last.
Callbacks are not executed.
Callbacks configured after the ones has_one sets up.
Callbacks configured before the ones has_one sets up.
Called after frameworks initialize.
Called before any initializers are run.
Called before frameworks initialize.
Called by +instantiate+ to decide which class to use for a new record instance.
Called by Rack to setup the server.
Called by _layout_for to read stored values.
Called by content_for
Called by each renderer object to set the layout contents.
Called by the cable connection when it's cut, so the channel has a chance to cleanup with callbacks.
Called by the server when a new WebSocket connection is established.
Called once a consumer has become a subscriber of the channel.
Called once a consumer has cut its cable connection.
Called when object is nested under an object that receives with_indifferent_access.
Called when running bundle, we just want to stub it so nothing to do here.
Called when running tests with spring, let through unscathed.
Calling +try+ on +nil+ always returns +nil+.
Calling +write+ or +close+ on the response stream will cause the response object to be committed.
Calling `parsed_body` on the response parses the response body as what the last request was encoded as.
Calling content_for stores a block of markup in an identifier for later use.
Calling it on a value not stored with :raw will initialize that value to zero.
Calling read() on the buffer results in a source that has an encoding of ANSII-8BIT instead of UTF-8 encoded source we were expecting
Calls included hook
Calls the action going through the entire action dispatch stack.
Calls the before and around callbacks in the order they were set, yields the block (if given one), and then runs the after callbacks in reverse order.
Calls the given block for each ancestor node from parent to root.
Calls the given block for each child node.
Calls the given block for each descendant node with depth first order.
Calls the given block for the receiver and each descendant node in depth-first order.
Can accept other relation objects.
Can also be a hash if disabled values are to be specified.
Can also be written as follows using references:
Can be a single value, array, or an object that responds to +call+.
Can be a symbol.
Can be an object that responds to +call+ or a string representing a controller's action.
Can be called multiple times, but this is probably not a good idea.
Can be much shorter if the Stale directive is implemented.
Can be overridden (i.e. in ThroughAssociation) to merge in other scopes (i.e. the through association's scope)
Can be redefined by subclasses, notably polymorphic belongs_to The record parameter is necessary to support polymorphic inverses as we must check for the association in the specific class of the record.
Can be set to +nil+ for no logging.
Can be string or symbol.
Can be used at render time, for example, with:
Can be used for cleaning up connections or marking users as offline or the like.
Can't modify options hash as it's frozen by default.
Cap primary key sequences to max(pk).
Capitalizes all the words and replaces some characters in the string to create a nicer looking title.
Capitalizes the first letter of every word, when possible.
Capitalizes the first word, turns underscores into spaces, and strips a trailing '_id' if present.
CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of a template or layout file.
Care should be taken if +text+ contains HTML tags or entities, because truncation may produce invalid HTML (such as unbalanced or incomplete tags).
Case-insensitive
CaseWhenSplat requires multiple rounds of correction to avoid "clobbering errors" from Source::Rewriter
Cast a +value+ to a type that the database understands.
Casts a value from the ruby type to a type that the database knows how to understand.
Causes the records to be loaded from the database if they have not been loaded already.
Change catchphrase.
Change created_on.
Change the name:
Change to the application's path if there is no config.ru file in current directory.
Changes '::' to '/' to convert namespaces to paths.
Changes current time to the given time by stubbing +Time.now+, +Date.today+, and +DateTime.now+ to return the time or date passed into this method.
Changes current time to the time in the future or in the past by a given time difference by stubbing +Time.now+, +Date.today+, and +DateTime.now+.
Changes the column's definition according to the new options.
Changes the comment for a column or removes it if +nil+.
Changes the comment for a table or removes it if +nil+.
Changes the default value of a table column.
Changing file ownership failed, moving on.
Channel instances are long-lived.
Characterizing when :before_add callback is called
Chars objects are perfectly interchangeable with String objects as long as no explicit class checks are made.
Charset defaults to utf8.
Check "when" body against "when" keyword indentation.
Check ActiveModel::Naming for more information.
Check ActiveRecord::Railties::ControllerRuntime for an example.
Check Rails::Application::Configuration to see them all.
Check Rails::Generators::ActiveModel for more information.
Check for `if` and `case` statements where each branch is used for assignment to the same variable when using the return of the condition can be used instead.
Check for cross-origin JavaScript responses.
Check for double render errors and set the content_type after rendering.
Check for non UTF-8 parameter values, which would cause errors later
Check for parentheses around stabby lambda arguments.
Check for suspicious argument names
Check for uses of braces or do/end around single line or multi-line blocks.
Check if a cached fragment from the location signified by +key+ exists (see +expire_fragment+ for acceptable formats).
Check if any of the entries were updated.
Check if the length of the longest line + the length of the corrected assignment is greater than the max configured line length
Check if the range between the tokens starts with a space.
Check if this is the first iteration of the partial.
Check if this is the last iteration of the partial.
Check indentation against end keyword but only if it's first on its line.
Check response freshness (Last-Modified and ETag) against request If-Modified-Since and If-None-Match conditions.
Check that a copyright notice was given in each source file.
Check that the destroy callback on Reference did not run
Check that the destroy callback on Reference ran
Check the connection back in to the connection pool
Check the polymorphism of taggings is being observed correctly (in both joins)
Check to make sure that you don't have an attribute or method with the same name.
Check whether a run created source identical to a previous run, which means that we definitely have an infinite loop.
Check whether the given class names are already taken by user application or Ruby on Rails.
Check whether the integer is evenly divisible by the argument.
Check-in a database connection back into the pool, indicating that you no longer need this connection.
Check-out a database connection from the pool, indicating that you want to use it.
Checking against variable assignments, etc, would be more difficult.
Checking if Uglifier is defined we can know if Sprockets was reached or not
Checking the fixture for named association is important here, because it's the only way we've been able to reproduce this bug
Checks for `if` expressions that do not have an `else` branch.
Checks for colon (:) not followed by some kind of space.
Checks for comma (,) not followed by some kind of space.
Checks for comma (,) preceded by space.
Checks for empty else-clauses, possibly including comments and/or an explicit `nil` depending on the EnforcedStyle.
Checks for if and unless statements that would fit on one line if written as a modifier if/unless.
Checks for if and unless statements used as modifers of other if or unless statements.
Checks for simple usages of parallel assignment.
Checks for space between a method name and a left parenthesis in defs.
Checks for space between a the name of a called method and a left parenthesis.
Checks for spaces inside ordinary round parentheses.
Checks for spaces inside range literals.
Checks for spaces inside square brackets.
Checks for uncountable plurals, and appends "_index" if the plural and singular form are the same.
Checks for uses of `do` in multi-line `while/until` statements.
Checks for uses of if with a negated condition.
Checks for uses of if/then/else/end on a single line.
Checks for uses of semicolon in if statements.
Checks for uses of the `then` keyword in multi-line if statements.
Checks for uses of while with a negated condition.
Checks for various semantic errors as stated in ISO 8601 standard.
Checks for while and until statements that would fit on one line if written as a modifier while/until.
Checks if a signed message could have been generated by signing an object with the +MessageVerifier+'s secret.
Checks if any of the authenticity tokens from the request are valid.
Checks if the action name is valid and returns false otherwise.
Checks if the controller allows forgery protection.
Checks if the entry is expired.
Checks if the inverse reflection that is returned from the +automatic_inverse_of+ method is a valid reflection.
Checks if the request originated from the same origin by looking at the Origin header.
Checks if uses of quotes match the configured preference.
Checks if we should perform parameters wrapping.
Checks that block braces have or don't have a space before the opening brace depending on configuration.
Checks that block braces have or don't have surrounding space inside them on configuration.
Checks that braces used for hash literals have or don't have surrounding space depending on configuration.
Checks that exactly one space is used between a method name and the first argument for method calls without parentheses.
Checks that operators have space around them, except for ** which should not have surrounding space.
Checks that the equals signs in parameter default assignments have or don't have surrounding space depending on configuration.
Checks the client's masked token to see if it matches the session token.
Checks the following cases:
Checks the hash for a key matching the argument passed in:
Checks the spacing around the keywords.
Checks the spacing inside and after block parameters pipes.
Checks to make sure that the arguments are not blank.
Checks to see if a column exists in a given table.
Checks to see if a column exists.
Checks to see if a foreign key exists on a table for a given foreign key definition.
Checks to see if a foreign key exists.
Checks to see if an index exists.
Checks to see if the data source +name+ exists on the database.
Checks to see if the reflection doesn't have any options that prevent us from being able to guess the inverse automatically.
Checks to see if the table +table_name+ exists on the database.
Checks to see if the view +view_name+ exists on the database.
Checks whether record is different to the current target, without loading it
Checks whether the connection to the database is still active (i.e. not stale).
Choosing which way to build a many-to-many relationship is not always simple.
Class for storing and registering the local caches.
Class level API with method missing
Class that will build the hash while the XML document is being parsed using SAX events.
Classes and ids for CSS are easy to produce:
Classes may signal their instances are not duplicable removing +dup+/+clone+ or raising exceptions from them.
Classes passed to `serialize` must have a 0 argument constructor."
Classes that include this module just implement functions to determine what is an offense and how to do auto-correction.
Classes with no body are exempt from the check and so are namespace modules - modules that have nothing in their bodies except classes, other modules, or constant definitions.
Clean the +Errors+ object if instance is duped.
Cleanup callbacks will not be called until after the response_body lambda is evaluated, ensuring that it can refer to application models and other classes before they are unloaded.
Cleanups the cache by removing expired entries.
Clear attributes and changed_attributes
Clear out internal caches for the data source +name+.
Clear the entire cache on all memcached servers.
Clear the error messages.
Clear the new record state and id of a record.
Clear the queue
Clears all dirty data: current changes and previous changes.
Clears all files and directories in destination.
Clears all of the validators and validations.
Clears out internal caches
Clears out the association cache.
Clears the cache which maps classes and re-connects connections that require reloading.
Clears the cache which maps classes.
Clears the entire cache.
Clears the prepared statements cache.
Clears the query cache.
Clears the session.
Clears up all existing helpers in this class, only keeping the helper with the same name as this class.
Clients using those libraries would get in general a wrong number and no way to recover other than manually inspecting the string with the JSON code itself.
Clients were not saved to database.
Clients were saved to database.
Clobbering caused by two cops changing in the same range is dealt with by the auto-correct loop, so there's no reason to avoid a change.
Clone and freeze the attributes hash such that associations are still accessible, even on destroyed records, but cloned models will not be frozen.
Clone the last fixture to check that it gets the next greatest id.
Close should put the adapter back in the pool
Close the WebSocket connection.
Close then reopen the connection.
Code can be specified in a block or a data string can be given.
Coerces time to a string for JSON encoding.
Collection class for all the channel subscriptions established on a given connection.
Collection class for all the connections that have been established on this specific server.
CollectionAssociation class provides common methods to the collections defined by +has_and_belongs_to_many+, +has_many+ or +has_many+ with +:through association+ option.
CollectionAssociation is an abstract class that provides common stuff to ease the implementation of association proxies that represent collections.
Collects attributes from scopes that should be applied when creating an AR instance for the particular class this is called on.
Colon follows directly after key
Column storage size in bytes.
Combine the 3 parts to generate complete route entry
Combined if and unless
Coming from web form.
Comment lines can optionally be ignored.
Commissioner class is responsible for processing the AST and delegating work to the specified cops.
Commits a transaction.
Commits the transaction (and turns on auto-committing).
Common Active Support usage in Action Controller
Common Active Support usage in Action Mailer
Common code for cops that deal with preferred methods.
Common code for indenting literal arrays and hashes.
Common exceptions
Common functionality for checking assignment nodes.
Common functionality for checking for a line break before the first element in a multi-line collection.
Common functionality for checking for spaces inside various kinds of brackets.
Common functionality for checking hash nodes.
Common functionality for checking if nodes.
Common functionality for checking if presence/absence of empty lines around some kind of body matches the configuration.
Common functionality for checking instance methods and singleton methods.
Common functionality for checking length of classes and modules.
Common functionality for checking length of code segments.
Common functionality for checking minimum body length.
Common functionality for checking modifier nodes.
Common functionality for checking multiline method calls and binary operations.
Common functionality for checking surrounding space.
Common functionality for checking the closing brace of a literal is either on the same line as the last contained elements, or a new line.
Common functionality for checking whether an AST node/token is aligned with something on a preceding or following line
Common functionality for cops checking for missing space after punctuation.
Common functionality for cops checking for space before punctuation.
Common functionality for cops checking if and unless expressions.
Common functionality for cops checking single/double quotes.
Common functionality for cops handling unused arguments.
Common functionality for cops which processes Parser's diagnostics.
Common functionality for dealing with frozen string literals.
Common functionality for finding names that are similar to a given name.
Common functionality for handling parentheses.
Common functionality for handling percent literals.
Common functionality for modifier cops.
Common functionality for safe assignment.
Common functionality for the styles where not only keys, but also values are aligned.
Common functionality related to annotation comments.
Common identifiers are current_user and current_account, but could be anything, really.
Common logic for UI texts.
Common methods and behaviors for dealing with paths.
Common methods and behaviors for dealing with remote config files.
Common methods shared by Style/TrailingCommaInArguments and Style/TrailingCommaInLiteral
Common parameters are parameters that are not in the default configuration, but are nonetheless allowed for any cop.
Compare objects before comparing counts for clear failure output.
Compare the realpath in case either of them has symlinks.
Compare this time zone to the parameter.
Compares two relations for equality.
Compatible with both Ruby's own +Logger+ and Log4r loggers.
Compile a template.
Compiles reader methods so we don't have to go through method_missing.
Complete this in-flight execution.
Compose decomposed characters to the composed form.
Composed of Time, and hash of Time with secret key from the Rails session secret generated upon creation of project.
Composite primary key is ignored.
Composites are mapped to `OID::Identity` by default.
Compresses a string using gzip.
Compute extname to append to asset path.
Computes and returns a table name according to default conventions.
Computes asset path to public directory.
Computes the path to a JavaScript asset in the public javascripts directory.
Computes the path to asset in public directory.
Computes the table name, (re)sets it internally, and returns it.
Concerns may be defined inline, using a block, or handled by another object, by passing that object as the second parameter.
Concrete subclass of AR::Base.
Concrete subclass of a concrete class but has no type column.
Concrete subclass of an abstract class.
Concrete subclasses an abstract class which has a type column.
ConditionalGet + Etag
Conditionally-defined methods are considered as always being defined, and thus access modifiers guarding such methods are not redundant.
Conditions can either be specified as a string, array, or hash representing the WHERE-part of an SQL statement.
ConfigLoader.load_file will validate config
Configuration examples (FileStore is the default):
Configuration files above the work directory shall not disturb the tests.
Configuration options:
Configure SSL options to enable HSTS with subdomains.
Configure `config.ssl_options` with `hsts: false` to disable.
Configure generators for API only applications.
Configure sensitive parameters which will be filtered from the log file.
Configure the frequency by setting "reaping_frequency" in your database yaml file.
Configure your secret key in config/secrets.yml:
Configure your session store in config/initializers/session_store.rb:
Configures the encoding, verbosity, schema search path, and time zone of the connection.
Configures two callbacks instead of a single after_save so that the model may rely on their execution order relative to its own callbacks.
Connect to the database
Connecting to the DB is done outside main synchronized section.
Connection URL.
Connection details inside of the "url" key win any merge conflicts
Connection pool allows for concurrent (outside the main +synchronize+ section) establishment of new connections.
Connection pool base class for managing Active Record database connections.
ConnectionHandler is a collection of ConnectionPool objects.
ConnectionPool is completely thread-safe, and will ensure that a connection cannot be used by two threads at the same time, as long as ConnectionPool's contract is correctly followed.
Connections can be obtained and used from a connection pool in several ways:
Connections in the pool are actually AbstractAdapter objects (or objects compatible with AbstractAdapter's interface).
Connections must be leased while holding the main pool mutex.
Connects to a PostgreSQL server and sets up the adapter depending on the connected server's characteristics.
Consequently, assert_migration accepts the same arguments has assert_file.
Consider a Member model that has one Avatar:
Consider a member that has a number of posts:
Consider for example the following code that form of post:
Consider such a scenario:
Consider the following example:
Consider the following loop for names:
Consider the following loop using the class above:
Consider the following schema:
Consider this controller:
Consider this situation:
Consider using the exec_query wrapper instead.
Constant time string comparison.
Constants like __FILE__ are handled as strings, but don't respond to begin.
Constants may only be regarded as 'new' once -- so if the block calls +new_constants_in+ again, then the constants defined within the inner call will not be reported in this one.
Constraint options:
Constraints can include the 'ignorecase' and 'extended syntax' regular expression modifiers:
Construct a piece of source code for brace layout testing.
Construct attributes for :through pointing to owner and associate.
Construct options and pass them with scope to the target class's +count+.
Construct the source code for the braces.
Constructs a call to a named RESTful route for the given record and returns the resulting URL string.
Consult the Rails Testing Guide for more.
Contains all routes for a system.
Contains all the mounted helpers across different engines and the `main_app` helper for the application.
Contains helpers that help you test passage of time.
Continuation byte, high (cp125)
Continuation byte, low (cp125)
Continuation byte, mid (cp125)
Contrast this to the following situation where the +before_destroy+ method is overridden:
Control the link options in url_for format using the +url_options+.
Controller actions are protected from Cross-Site Request Forgery (CSRF) attacks by including a token in the rendered HTML for your application.
Controllers passed in using the +:controller+ option will retain their namespace unless it is an absolute one.
Controllers should use the methods defined in ActionController::Base instead.
Controls whether a CSRF failure logs a warning.
Controls whether an action should be rendered using a layout.
Controls whether form-action/method specific CSRF tokens are used.
Controls whether request forgery protection is turned on or not.
Controls whether the Origin header is checked in addition to the CSRF token.
Convenience accessor.
Convenience for loading config/foo.yml for the current Rails env.
Convenience method for SecureRandom.uuid.
Convenience method for types which do not need separate type casting behavior for user and database inputs.
Convenience method for uuid_from_hash using Digest::MD5.
Convenience method for uuid_from_hash using Digest::SHA1.
Convenience method to get the namespace from the class name.
Convenience method to hide this generator from the available ones when running rails generator command.
Conventionally named column for counter_cache
Conventions in the generated field names allow controllers to receive form data nicely structured in +params+ with no effort on your side.
Conversation.active Conversation.archived
Convert Arel node to string
Convert XML document to hash.
Convert an XML element and merge into the hash
Convert an enumerable to a hash.
Convert an enumerable to an array based on the given key.
Convert an object into a "JSON-ready" representation composed of primitives like Hash, Array, String, Numeric, and true/false/nil.
Convert attributes array into GeneratedAttribute objects.
Convert namespaces to paths by replacing ":" for "/" and adding an extra lookup.
Convert range to a formatted string.
Convert the provided const desc to a qualified constant name (as a string).
Convert to a formatted string.
Convert to a regular hash with string keys.
Converts +self+ to a floating-point number of seconds, including fractional microseconds, since the Unix epoch.
Converts +self+ to an integer number of seconds since the Unix epoch.
Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the day (0:00)
Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the day (0:00) and then adds the specified number of seconds
Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the day (0:00) and then subtracts the specified number of seconds.
Converts Date to a Time (or DateTime if necessary) with the time portion set to the end of the day (23:59:59)
Converts Date to a Time (or DateTime if necessary) with the time portion set to the middle of the day (12:00)
Converts RuboCop objects to and from the serialization format JSON.
Converts a Date instance to a Time, where the time is set to the beginning of the day.
Converts a string to a Date value.
Converts a string to a DateTime value.
Converts a string to a Time value.
Converts a value from database input to the appropriate ruby type.
Converts an HTTP header name to an environment variable name if it is not contained within the headers hash.
Converts an arel AST to SQL
Converts an array into a string suitable for use as a URL query string, using the given +key+ as the param name.
Converts characters in the string to lowercase.
Converts characters in the string to the opposite case.
Converts characters in the string to uppercase.
Converts just the first character to uppercase.
Converts relation objects to Array.
Converts strings to UpperCamelCase.
Converts the array to a comma-separated sentence where the last element is joined by the connector word.
Converts the attributes array of an XML element into a hash.
Converts the first character to uppercase and the remainder to lowercase.
Converts the given URL to a full connection hash.
Converts the given keys to the value that the database adapter returns as a usable column name:
Converts the query parameters of the URI into a hash.
Converts to a formatted string.
Converts value to string
Cookie shouldn't be changed
Cookies can typically store 4096 bytes.
Cop already disabled on this line, so we end the current disabled range before we start a new range.
Cop name validation must be done later than option parsing, so it's not called from within Options.
Copied from default configuration
Cops interact with this force need to override some of the hook methods.
Cops track offenses and can autocorrect them on the fly.
Copy the instance variables from the current session instance into the test instance.
Copy validators on inheritance.
Copyright (c) 2004-2016 David Heinemeier Hansson
Copyright (c) 2005-2016 David Heinemeier Hansson
Copyright (c) 2010-2015 James Coglan
Copyright (c) 2012-2014 Arnau Siches
Copyright (c) 2014-2016 David Heinemeier Hansson
Copyright (c) 2015 Acme Inc.
Copyright (c) 2015-2016 Basecamp, LLC
Copyright 2015 Acme Inc.
Correct the encoding of the source as we expect UTF-8
Correcting ActiveRecord methods with this cop should be considered unsafe.
Corrector to correct conditional assignment in `case` statements.
Corrector to correct conditional assignment in `if` statements.
Corrector to correct conditional assignment in `unless` statements.
Corrector to correct conditional assignment in ternary conditions.
Corresponds to the return value of one of the calls to +option_key_method+.
Could be a CSV list and/or repeated headers that were concatenated.
Count all records using SQL.
Count should come from sql count() of treasures rather than treasures_count attribute
Count the number of authors for approved topics
Count the number of distinct authors for approved Topics
Count the records.
Counterexamples are
Crazy H4X to get this working in windows / jruby with no forking.
Create "label" locale for testing I18n label helpers
Create "submit" locale for testing I18n submit helpers
Create 'namespace' ladder namespace :foo do namespace :bar do
Create `end` ladder end end
Create a Rails::Generators::GeneratedAttribute by supplying the attribute type and, optionally, the attribute name:
Create a csv renderer:
Create a dependency tree for template named +name+.
Create a new +ParamsParser+ middleware instance.
Create a new +Rakefile+ with the provided code (either in a block or a string).
Create a new +RemoteIp+ middleware instance.
Create a new Money object with the new value instead.
Create a new PostgreSQL database.
Create a new TimeZone object with the given name and offset.
Create a new file in the lib/ directory.
Create a new initializer with the provided code (either in a block or a string).
Create a new renderer for the same controller but with a new env.
Create a new renderer for the same controller but with new defaults.
Create a new renderer instance for a specific controller class.
Create a new test request with default `env` values
Create a reference which is not linked to a job.
Create a scope and build a fixture rails app
Create a select tag and a series of contained option tags for the provided object and method.
Create a url helper allowing ordered parameters to be associated with corresponding dynamic segments, so you can do:
Create and initialize a new Session instance.
Create caching file.
Create custom PostgreSQL function to generate UUIDs to test dumping tables which columns have defaults with custom functions
Create empty file.
Create new CLI instance to avoid using cached configuration.
Create new hashes so we don't modify parent classes
Create route get 'baz/index'
Create such a table with custom function as default value generator
Create template
Create the rack app just inside after initialize callback
Creates a +model_name+ method on your object.
Creates a Cycle object whose _to_s_ method cycles through elements of an array every time it is called.
Creates a _layout method to be called by _default_layout .
Creates a check box form input tag.
Creates a class name from a plural table name like Rails does for table names to models.
Creates a field set for grouping HTML form elements.
Creates a file upload field.
Creates a foreign key name from a class name.
Creates a form that allows the user to create or update the attributes of a specific model object.
Creates a hidden form input field used to transmit data that would be lost due to HTTP's statelessness or data that should be hidden from the user.
Creates a job preconfigured with the given options.
Creates a label element.
Creates a link tag of the given +name+ using a URL created by the set of +options+ if +condition+ is true, otherwise only the name is returned.
Creates a link tag of the given +name+ using a URL created by the set of +options+ unless +condition+ is true, in which case only the name is returned.
Creates a link tag of the given +name+ using a URL created by the set of +options+ unless the current request URI is the same as the links, in which case only the name is returned (or the given block is yielded, if one exists).
Creates a mailto link tag to the specified +email_address+, which is also used as the name of the link unless +name+ is specified.
Creates a masked version of the authenticity token that varies on each request.
Creates a migration template at the given destination.
Creates a new Chars instance by wrapping _string_.
Creates a new ConnectionPool object.
Creates a new Dalli::Client instance with specified addresses and options.
Creates a new Duration from string formatted according to ISO 8601 Duration.
Creates a new MemCacheStore object, with the given memcached server addresses.
Creates a new Store object according to the given options.
Creates a new cache entry for the specified value.
Creates a new cache.
Creates a new job instance from a hash created with +serialize+
Creates a new job instance.
Creates a new join table with the name created using the lexical order of the first two arguments.
Creates a new table with the name +table_name+.
Creates a number field.
Creates a password field, a masked text field that will hide the users input behind a mask character.
Creates a range form element.
Creates a record with values matching those of the instance attributes and returns its id.
Creates a schema for the given schema name.
Creates a scope around a specific model object like form_for, but doesn't create the form tags themselves.
Creates a session hash, merging the properties of the previous session if any
Creates a text field of type "color".
Creates a text field of type "date".
Creates a text field of type "datetime".
Creates a text field of type "datetime-local".
Creates a text field of type "email".
Creates a text field of type "month".
Creates a text field of type "search".
Creates a text field of type "tel".
Creates a text field of type "time".
Creates a text field of type "url".
Creates a text field of type "week".
Creates an anchor element of the given +name+ using a URL created by the set of +options+.
Creates an entry tag for a specific record and prefills the id using class and id.
Creates an internal metadata table with columns +key+ and +value+
Creates an object (or multiple objects) and saves it to the database, if validations pass.
Creates new flash types.
Creates the hidden UTF8 enforcer tag.
Creates the name of a table like Rails does for models to table names.
Current Rails style favors RESTful routes whenever possible, so base your application on resources and use
Currently implemented by belongs_to (vanilla and polymorphic) and has_one/has_many :through associations which go through a belongs_to.
Currently it checks for code like this:
Currently this cop has advanced logic that detects unreferenced reassignments and properly handles varied cases such as branch, loop, rescue, ensure, etc.
Currently, this cop completely ignores strings with invalid encoding If it could handle them and still report an offense when appropriate, that would be even better
Currently, when an exception happens in development or production, Rails will automatically stream to the client:
Custom +disallowed_types+ can also be passed in the form of an array.
Custom headers
Custom sanitization rules can also be provided.
Customer.where(balance: Money.new(20, "USD"))
Cutoff the common prefix length to this value if it's longer than this.
DB2 is not case-sensitive
DELETE /books/1 DELETE /books/1.json
DELETE destroy
DSL methods may evaluate a block in the context of a newly created class or module Assume that if a method definition is inside any block call which we can't identify, it could be a DSL
Database is queried when +to_a+ is called on the relation.
DatabaseTasks.create_current('production')
Databases behave differently to enforce the serializability constraint.
DateTime objects have their time set to 0:00 unless +same_time+ is true.
DateTime objects have their time set to 23:59:59.
DateTime objects will have a time set to 23:59:59.
DateTimes are Dates, we document the type but avoid the redundant check.
DateTimes aren't aware of DST rules
Dates are taken as their timestamp at the beginning of the day in the application time zone.
Daylight savings
Deal with controller names on scaffold and add some helpers to deal with ActiveModel.
Deal with it later in caller.
Deallocate invalidated prepared statements outside of the transaction
Decimal units output formatting By default we will only quantify some of the exponents but the commented ones might be defined or overridden by the user.
Declare a class-level attribute whose value is inheritable by subclasses.
Declare a controller method as a helper.
Declare an enum attribute where the values map to integers in the database, but can be queried by name.
Declare that a method has been deprecated.
Declares a concern but doesn't include it
Declares a method available for all attributes with the given prefix and suffix.
Declares a method available for all attributes with the given prefix.
Declares a method available for all attributes with the given suffix.
Declares an attribute reader and writer backed by an internally-named instance variable.
Declares an attribute reader backed by an internally-named instance variable.
Declares an attribute writer backed by an internally-named instance variable.
Declares helper accessors for controller attributes.
Declaring an identification means that an attr_accessor is automatically set for that key.
Decodes WebSocket messages and dispatches them to subscribed channels.
Decodes the signed message using the +MessageVerifier+'s secret.
Decompose composed characters to the decomposed form.
Decompresses a gzipped string.
Decrement a cached value.
Decrement a numeric field by one, via a direct SQL update.
Decrement an integer value in the cache.
Decrements an already existing integer value that is stored in the cache.
Decrements an integer value in the cache.
Decrypt and verify a message.
Default concurrency setting: enabled, but safe
Default form builder for the controller
Default format used by Builder.
Default implementation used.
Default is "" (i.e. nothing).
Default is (10,0).
Default is (38,0).
Default is +Marshal+.
Default is +SHA1+.
Default is +false+.
Default is ActiveSupport::Multibyte::Unicode.default_normalization_form
Default is ActiveSupport::Multibyte::Unicode.default_normalization_form.
Default is false.
Default is no prefix.
Default is set to 5 threads for minimum and maximum, this matches the default thread size of Active Record.
Default is true.
Default pattern, loads views the same way as previous versions of rails, eg.
Default to 180 days, the low end for https://www.ssllabs.com/ssltest/ and greater than the 18-week requirement for browser preload lists.
Default to enabled, with default options.
Default to false.
Default unknown.
Default warning behaviors per Rails.env.
Defaults to "tag:localhost,2005:/posts", in this case.
Defaults to "text/html".
Defaults to '-'.
Defaults to 'application/octet-stream'.
Defaults to 'http'.
Defaults to +:integer+.
Defaults to +:random+.
Defaults to +GET+.
Defaults to +false+.
Defaults to +id+.
Defaults to +lock_version+.
Defaults to +nil+.
Defaults to +true+.
Defaults to / on the current host.
Defaults to 200.
Defaults to 3 (equivalent to millisecond precision)
Defaults to `180.days` (recommended).
Defaults to `coder: nil` which does no decoding, passes raw messages.
Defaults to `require_parentheses`.
Defaults to `true`.
Defaults to a new empty string.
Defaults to column name quoting.
Defaults to false.
Defaults to issuing a +private+ instruction, so that intermediate caches must not cache the response.
Defaults to no quoting.
Defaults to table quoting.
Defaults to the created_at attribute on the record if one such exists.
Defaults to the current URL.
Defaults to the polymorphic_url for the record.
Defaults to the root of the application.
Defaults to the updated_at attribute on the record if one such exists.
Defaults to true for development environment
Defaults to true.
Defaults values
Define a controller as abstract.
Define a method `name` in `mod` that dispatches to `send` using the given `extra` args.
Define a method which applies a pattern to an AST node
Define a method which recurses over the descendants of an AST node, checking whether any of them match the provided pattern
Define a new concern and mix it in.
Define a new model to ensure there are no caches
Define a route that only recognizes HTTP DELETE.
Define a route that only recognizes HTTP GET.
Define a route that only recognizes HTTP PATCH.
Define a route that only recognizes HTTP POST.
Define a route that only recognizes HTTP PUT.
Define a routing concern using a name.
Define file as an alias to create_file for backwards compatibility.
Define how a class is converted to Arel nodes when passed to +where+.
Define log for backwards compatibility.
Define methods on fixture.
Define sets of events in the object life cycle that support callbacks.
Define some internal variables that should not be propagated to the view.
Define the Rack API for this engine.
Define the configuration object for the engine.
Define the essentials
Define the rest of the connector
Define url_for in the singleton level so one can do: Rails.application.routes.url_helpers.url_for(args)
Defined in a method to instantiate it only if needed.
Defined on Chars
Defined on String
Defines ActiveSupport::Deprecation.
Defines a callback that will get called around the job's perform method.
Defines a callback that will get called before and after the job is enqueued.
Defines a callback that will get called right after the job is enqueued.
Defines a callback that will get called right after the job's perform method has finished.
Defines a callback that will get called right after validation happens.
Defines a callback that will get called right before the job is enqueued.
Defines a callback that will get called right before the job's perform method is executed.
Defines a callback that will get called right before validation happens.
Defines a class attribute and creates a class and instance reader methods.
Defines a class attribute and creates a class and instance writer methods to allow assignment to the attribute.
Defines a per-thread class attribute and creates a class and instance writer methods to allow assignment to the attribute.
Defines a per-thread class attribute and creates class and instance reader methods.
Defines additional Rack env configuration that is added on each call.
Defines an attribute with a type on this model.
Defines an attributes writer for the specified association(s).
Defines both class and instance accessors for class attributes.
Defines both class and instance config accessors.
Defines some test assertions to test against SQL queries.
Defines the name of the table column which will store the class name on single-table inheritance situations.
Defines the primary key field -- can be overridden in subclasses.
Defines the primary key field.
Defines the routes for this engine.
Defines the setter and getter methods for the collection_singular_ids.
Defines your model's +to_param+ method to generate "pretty" URLs using +method_name+, which can be any attribute or method that responds to +to_s+.
Defunct wrapper class kept for compatibility.
Delayed::Job (or DJ) encapsulates the common pattern of asynchronously executing longer tasks in the background.
Delegate unhandled messages to the current session instance.
Delegates to the class' ::action_methods
Delegates to the class' ::controller_path
Delegation is particularly useful with Active Record associations:
Delete an entry from the cache.
Delete caching file.
Delete empty directories in the cache.
Delete messages for +key+.
Delete the given records from the association, using one of the methods :destroy, :delete_all or :nullify (or nil, in which case a default is used).
Delete the initializers unless requested
Deletes all entries with keys matching the pattern.
Deletes all items from the cache.
Deletes all the records from the collection according to the strategy specified by the +:dependent+ option.
Deletes an entry from the cache implementation.
Deletes an entry in the cache.
Deletes and returns a key-value pair from +Parameters+ whose key is equal to key.
Deletes given key from the session.
Deletes the +records+ and removes them from this association calling +before_remove+ , +after_remove+ , +before_destroy+ and +after_destroy+ callbacks.
Deletes the +records+ supplied from the collection according to the strategy specified by the +:dependent+ option.
Deletes the record in the database and freezes this instance to reflect that no changes should be made (since they can't be persisted).
Deletes the records of the collection directly from the database ignoring the +:dependent+ option.
Deletes the row with a primary key matching the +id+ argument, using a SQL +DELETE+ statement, and returns the number of rows deleted.
Delimiter "," and separator "."
Delimiter was set to ""
Delimits thousands (e.g. 1,000,000 is a million) (always in groups of three)
Delivers an email without checking +perform_deliveries+ and +raise_delivery_errors+, so use with caution.
Delivers an email:
Depending on command line arguments, the migration template and the table name instance variables are set up.
Depending on the number of associations involved there can be arbitrarily many SQL queries made.
DeprecatedConstantProxy transforms a constant into a deprecated one.
DeprecatedInstanceVariableProxy transforms an instance variable into a deprecated one.
DeprecatedObjectProxy transforms an object into a deprecated one.
Deprecation warnings raised by gems are not affected by this setting because they happen before Rails boots up.
Derives the join table name for +first_table+ and +second_table+.
Deserializes a set of arguments.
Desperately overcommented regexp
Despite the cop's name, blocks are not considered as an extra level of nesting.
Despite this, in non-strict mode, MySQL will use an empty string as the default value of the field, if no other value is specified.
Destroy all the records from this association.
Destroy an object (or multiple objects) that has the given id.
Destroying an associated model, as part of the parent's save action, is as simple as marking it for destruction:
Destroying one of the associated models as part of the parent's save action is as simple as marking it for destruction:
Destroys the +records+ supplied and removes them from the collection.
Destructive +reverse_merge+.
Destructively converts all keys by using the block operation.
Destructively converts all keys to strings.
Destructively converts all keys to symbols, as long as they respond to +to_sym+.
Destructively converts all keys using the +block+ operations.
Destructively converts all values using the +block+ operations.
Detect offenses
Detect the subclass from the inheritance column of attrs.
Detect whether the codepoint is in a certain character class.
Determine if a record was created or destroyed in a transaction.
Determine if a transaction included an action for :create, :update, or :destroy.
Determine if the given constant has been automatically loaded.
Determine the layout for a given name, taking into account the name type.
Determine the template to be rendered using the given options.
Determine the wrapper model from the controller's name.
Determine whether the request body contains form-data by checking the request Content-Type for one of the media-types: "application/x-www-form-urlencoded" or "multipart/form-data".
Determines if a document element has text content
Determines if a hash contains a truthy _destroy key.
Determines if a record with the particular +attributes+ should be rejected by calling the reject_if Symbol or Proc (if defined).
Determines if one of the attributes passed in is the inheritance column, and if the inheritance column is attr accessible, it initializes an instance of the given subclass instead of the base class.
Determines if the primary key values should be selected from their corresponding sequence before the insert statement.
Determines the version number of the next migration.
Determines whether a value has changed for dirty checking.
Determines whether the mutable value has been modified since it was read.
Determines whether to store the full constant name including namespace when using STI.
Developers are ordered 'name DESC, id DESC'
Developing a Rails extension does _not_ require implementing a railtie, but if you need to interact with the Rails framework during or after boot, then a railtie is needed.
Different association with the same name, callbacks should be omitted here.
Direct access to partial rendering.
Direct access to template rendering.
Direct dispatch to the controller.
Disable `should_receive` and `stub`
Disable `should`
Disable available locale checks to avoid warnings running the test suite.
Disable by setting
Disable color in output.
Disable controller / rendering threads in tests.
Disable dependency loading during request cycle
Disable extra failure output after a run if output is inline.
Disable network connections
Disable the query cache within the block if Active Record is configured.
Disable the query cache within the block.
Disable the transaction wrapping this migration.
Disabling comments still apply.
Discard attr writer methods.
Discard modifier forms of if/while/until.
Discard operator methods.
Disconnect all the connections identified by `identifiers` on this server or any others via RemoteConnections.
Disconnects all connections in the pool, and clears the pool.
Disconnects from the database if already connected, and establishes a new connection with the database.
Disconnects from the database if already connected.
Discount the leap year days when calculating year distance.
Display an image Active Record in the browser:
DisplayCopNames: false inherited from config/default.yml
Displays an image which when clicked will submit the form.
Distances are reported based on the following table:
Divides the array into one or more subarrays based on a delimiting +value+ or the result of an optional block.
Do a manual insertion
Do all the stuff from other tests
Do it a few times: the resulting headers should be identical no matter how many times you send with the same options.
Do not compute the size of statically sized objects.
Do not escape templates of these mime types.
Do not halt callback chains when a callback returns false.
Do not make this inheritable, because we always want it to propagate
Do not replace association name with association foreign key if they are named the same
Do nothing by default.
Do nothing, even if we know this is dangerous.
Do something later
Do stuff...
Do the relevant stuff to insert the given record into the association collection.
Does not quote function default values for UUID columns
Does not run if +config.cache_classes+ set to false.
Does the actual rewrite and returns string corresponding to the rewritten source.
Doesn't handle time zones.
Doesn't overwrite existing ClassMethods module.
Doesn't overwrite previous class_methods definitions.
Doesn't use after_save as that would save associations added in after_create/after_update twice
Doing so will cut down the number of queries from 201 to 102.
Doing so will lead to a circular dependency and cause infinite recursion.
Don't add multiple subscribers (eg.
Don't allow synchronizing since it isn't thread safe.
Don't allow the Money object to have its amount changed after creation.
Don't attempt to autocorrect if semicolon is separating statements on the same line
Don't autocorrect if this would change the meaning of the code
Don't autocorrect where(...).first, because it can return different results from find_by.
Don't cache statements if they are not prepared
Don't cache the association - we would only be caching a subset
Don't change '/../temp/' cavalierly or you might hose something you don't want hosed
Don't check again.
Don't check if expression is on same line as "then" keyword, etc.
Don't check indentation if the line doesn't start with the body.
Don't check method calls with dot operator.
Don't check the same `end` again.
Don't check unneeded disable if --only or --except option is given, because these options override configuration.
Don't create a double backslash at the end of the line, in case there already was a backslash after the concatenation operator.
Don't create associations that have the same name as instance methods of ActiveRecord::Base.
Don't give a deprecation warning on inspect since test/unit and error logs rely on it for diagnostics.
Don't include the same location twice for one cop.
Don't infer yaks, let's not go down that road again...
Don't limit below 21, because that's the header of the testfile
Don't limit below 38, because that's the header of the testfile
Don't omit the accumulator when calling `next` in a `reduce` block.
Don't override this directly.
Don't print warnings to stderr if corrections conflict with each other
Don't validate RuboCop's own files.
Dont call routes, if there is an error on _routes call
Download a dynamically-generated tarball:
Drops a MySQL database.
Drops a PostgreSQL database.
Drops a table from the database.
Drops the database specified on the +name+ attribute and creates it again using the provided +options+.
Drops the join table specified by the given arguments.
Drops the schema for the given schema name.
Duck-types as a Date-like class.
Duck-types as a Time-like class.
Dummies to force column loads so query counts are clean.
Dummy implementation of method in ConfigurableEnforcedStyle that is called from StringHelp.
Dummy to force column loads so query counts are clean.
Dumps objects in JSON (JavaScript Object Notation).
Duplicates the value in a class.
Dups the singleton before each test, restoring the original inflections later.
Dynamic attribute-based finders are a mildly deprecated way of getting (and/or creating) objects by simple queries without turning to SQL.
E.g. interpolation might take place for where values.
EDGE Set to "1" to indicate generated guides should be marked as edge.
EOL comment',
ERB example:
ERB to the rescue:
ERB::Util can mask some helpers like textilize.
Each Rails::Application class has its own set of initializers, as defined by the Initializable module.
Each YAML fixture (ie.
Each action results in a response, which holds the headers and document to be sent to the user's browser.
Each address is either a host name, or a host-with-port string in the form of "host_name:port".
Each call to the macro adds a description of how the value objects are created from the attributes of the entity object (when the entity is initialized either as a new object or from finding an existing object) and how it can be turned back into attributes (when the entity is saved to the database).
Each class that subclasses +AbstractRenderer+ is used by the base +Renderer+ class to render a specific type of object.
Each item in the array corresponds to a table which will be part of the query for this association.
Each line in the backtrace will be mapped against this filter.
Each macro adds a number of methods to the class which are specialized according to the collection or association symbol and the options hash.
Each mapping is represented as an array where the first item is the name of the entity attribute and the second item is the name of the attribute in the value object.
Each method called in the block, with the block variable as the receiver, will have its options merged with the default +options+ hash provided.
Each method called on the block variable must take an options hash as its final argument.
Each model uses an association to describe its role in the relation.
Each of them is responsible for their own initialization.
Each of these fixtures has two unique identifiers: one for the database and one for the humans.
Each response is represented by a corresponding block if present.
Each row is an array of field values.
Each such detected template will be added to the message, as a separate part.
Each that is defined will be marked as autoloaded, and will be removed when Dependencies.clear is next called.
Each update to the record increments the +lock_version+ column and the locking facilities ensure that records instantiated twice will let the last one saved raise a +StaleObjectError+ if the first was also updated.
Each would be rendered and added as a separate part to the message, with the corresponding content type.
Eager includes of has many and habtm associations aren't necessarily sorted in the same way
Eager load the application by loading all ruby files inside eager_load paths.
Eager loading is a way to find objects of a certain class and a number of named associations.
Eager loading is supported with polymorphic associations.
Eager loads the named associations for the given Active Record record(s).
Easier to debug.
Either a class or a string can be passed in as the Interceptor.
Either a class, string or symbol can be passed in as the Interceptor.
Either a class, string or symbol can be passed in as the Observer.
Either the params and request are supplied as arguments, or just params, depending of how many arguments your block accepts.
Either the row with the given ID doesn't exist or the row didn't meet the additional restrictions.
Either via the +module+ or +class+ keyword or by an explicit assignment:
Either way, there is no way for us to determine which header is the right one after the fact.
Elements are inserted into the string in the order in which they appear.
Emails by default are sent in plain text, so a sample view for our model example might look like this:
Emails do not support relative path links.
Embed in a String to clear all previous ANSI sequences.
Empty Array
Empty array node
Empty class etc.
Empty hash node
Empty lines should make no difference.
Empty string node
Empty strings for fixnum and float columns are turned into +nil+.
Emulate AV railtie
Emulate OptionParser's behavior to make failures consistent regardless of option order.
Enable or disable mailer previews through app configuration:
Enable origin-checking CSRF mitigation.
Enable per-form CSRF tokens.
Enable the query cache within the block if Active Record is configured.
Enable the query cache within the block.
Enable warnings if this file has not been loaded before and warnings_on_first_load is set.
Enabled by default for apps that use Action View.
Enabled by default.
Enables more predictable duck-typing on String-like classes.
Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes
Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years.
Enabling nested attributes on a one-to-one association allows you to create the member and avatar in one go:
Encapsulates the common pattern of:
Encapsulates the interaction with the view flow so it returns the correct buffer on +yield+.
Encapsulates the notion of a mime type.
Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.
Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar agreement).
Enclosing modules are not considered.
Encode a "jsonified" Ruby data structure using the JSON gem
Encode the given object into a JSON string
Encodes the given token and options into an Authorization header value.
Encoding Infinity or NaN to JSON should return "null".
Encoding comments will override this setting.
Encoding regular expression modifiers are silently ignored.
Encrypt and sign a message.
Encrypts the password into the +password_digest+ attribute, only if the new password is not empty.
EnforcedStyle can be changed to get rid of the EnforcedStyle offenses.
Engine name is set by default based on class name.
Engines can have their own migrations.
Enough connections are checked in to wakeup all group1 threads, and the fact that only group1 and no group2 threads acquired a connection is enforced.
Enqueues the email to be delivered through Active Job.
Enqueues the job to be performed by the queue adapter.
Ensure STI is respected in the join
Ensure backward compatibility with Minitest 4
Ensure nested hashes are not HashWithIndiffereneAccess
Ensure original are still the same since we are reindexing view paths
Ensure proxy class responds to all methods that underlying time instance responds to.
Ensure readers methods get compiled
Ensure sensible umask.'
Ensure that it is not called if the object was never persisted (failed create), but call it after the commit of a destroyed object.
Ensure that the before filter is executed *before* self.formats is set.
Ensure the type cast value is cached
Ensure this is above your JavaScript tag:
Ensure to_prepare callbacks are not run when defined
Ensure view path cache is primed
Ensure we actually are testing a UUID
Ensure we set the output buffer to an encoding different than the default one.
Ensure, we can set connection params using the example of Generic Query Optimizer (geqo).
Ensures all the resolver information is set in the template.
Ensures the time cannot be modified by client.
Ensures with check for nil, not for a falseish target.
Ensuring that the records in the association target are updated, whether the association is loaded before or not
Entity identity is determined by object or relational unique identifiers (such as primary keys).
Entry point for the application logic.
Equivalent to +delete_all+.
Equivalent to +to_s+.
Error generated by +delegate+ when a method is called on +nil+ and +allow_nil+ option is not used.
Escape question mark if any.
Escapes binary strings for bytea input to the database.
Escapes carriage returns and single and double quotes for JavaScript segments.
Especially useful for rendering different HTML versions depending on the user agent, like an iPhone.
Essentially the inverse of +masked_authenticity_token+.
Essentially, if there are no elements, the expression can not be multiline.
Establish a new connection, the old database may be gone (db:test:prepare uses purge)
Establish dependent relationship between Person and PersonalLegacyThing
Establishes the connection to the database.
Eval the given block.
Evaluating many similar methods may use more memory as the instruction sequences are duplicated and cached (in MRI).
Event.title has limit 5, but SQLite doesn't truncate.
Event.title has limit 5, but does SQLite doesn't truncate.
Every +frequency+ seconds, the reaper will call +reap+ on +pool+.
Every Active Record database supports transactions except MySQL MyISAM.
Every database and/or database adapter has their own behavior if it drops the multi-column index when any of the indexed columns dropped by remove_column.
Every major component of Rails (Action Mailer, Action Controller, Active Record, etc.) implements a railtie.
Every time after an action is processed, this method is invoked with the payload, so you can add more information.
Every time rake runs this task is instantiated as all the rest.
Everything up to the end of the line (or closing ERB comment tag) is considered to be their text.
Example Usage:
Example calling +create+ action and sending two params:
Example for SQLite database:
Example for deleting:
Example from issue 346 of bbatsov/rubocop on github:
Example from issue 393 of bbatsov/rubocop on github:
Example from issue 447 of bbatsov/rubocop on github:
Example object structure for use with this method:
Example of a more complex migration that also needs to initialize data:
Example of a simple migration:
Example sending parameters, session and setting a flash message:
Example usage is given below:
Example usage of DatabaseTasks outside Rails could look as such:
Example usage:
Example using Active Record (which automatically includes ActiveModel::SecurePassword):
Example: To show messages with links, you will have to use sanitize helper.
Example: create_database 'charset_test', charset: 'latin1', collation: 'latin1_bin' create_database 'matt_development' create_database 'matt_development', charset: :big5
Example: drop_database 'matt_development'
Example: drop_database('sebastian_development')
Example: javascript_tag "alert('All is good')"
Example: rename_table('octopuses', 'octopi')
Examples of calling methods on the returned BatchEnumerator object:
Examples of reading:
Examples of using the default rails validators:
Examples of writing:
Except for public instance methods of Base and its ancestors
Except for root cases, where the latter is the correct one.
Except if it's one of those special `case`/`when` constructs where there's no expression after `case`.
Exception file-blaming.
Exception that can be raised to stop migrations from being rolled back.
Exceptions raised inside exception handlers are not propagated up.
Exceptions will force a ROLLBACK that returns the database to the state before the transaction began.
Exclude column attribute since MRI does not output column number.
Exclude entries from source directory
Exclude properties in .rubocop_todo.yml override default ones, as well as any custom excludes in .rubocop.yml, so in order to retain those excludes we must copy them.
Excluded files will be removed later by the caller, but as an optimization find_files removes the top level directories that are excluded in configuration in the normal way (dir/**/*).
Execute before and after filters in a sequence instead of chaining them with nested lambda calls, see: https://github.com/rails/rails/issues/18011
Execute the block given if updated.
Execute the block setting the given values and restoring old values after the block is executed.
Execute the supplied block while holding the Exclusive lock.
Execute the supplied block while holding the Share lock.
Execute this migration in the named direction
Executes +method+ within a transaction and captures its return value as a status flag.
Executes +sql+ statement in the context of this connection using +binds+ as the bind substitutes.
Executes a SELECT query and returns an array of rows.
Executes a custom SQL query against your database and returns all the results.
Executes an INSERT query and returns the new record's ID
Executes an SQL statement, returning a PGresult object on success or raising a PGError exception otherwise.
Executes delete +sql+ statement in the context of this connection using +binds+ as the bind substitutes.
Executes insert +sql+ statement in the context of this connection using +binds+ as the bind substitutes.
Executes the SQL statement in the context of this connection and returns the raw result from the connection adapter.
Executes the SQL statement in the context of this connection.
Executes the block with the collect flag enabled.
Executes the delete statement and returns the number of rows affected.
Executes the given block and updates the latest watched files and timestamp.
Executes the truncate statement.
Executes the update statement and returns the number of rows affected.
Executes update +sql+ statement in the context of this connection using +binds+ as the bind substitutes.
Expands a connection string into a hash.
Expands all paths against the root and return all unique values.
Expands key to be a consistent string value.
Expands out the +key+ argument into a key that can be used for the cache store.
Expands the "url" key that contains a URL database connection to a full connection hash and merges with the rest of the hash.
Expect original salary.
Expect temporary salary.
Expected to be a +String+.
Expects a block that takes as arguments: +association+ - name of the association +records+     - the association record(s) to be serialized +opts+        - options for the association records
Explicit multipart
Explicitly define as :date column so that returned Oracle DATE values would be typecasted to Date and not Time.
Explicitly disabling HSTS clears the existing setting from browsers by setting expiry to 0.
Expose database runtime to controller for logging.
Expose the eager_load_namespaces at "module" level for convenience.
Extend ActionDispatch middleware stack to make it aware of options allowing the following syntax in controllers:
Extends the module object with class/module and instance accessors for class/module attributes, just like the native attr* accessors for instance attributes, but does so on a per-thread basis.
Extends the module object with class/module and instance accessors for class/module attributes, just like the native attr* accessors for instance attributes.
Extensions can access relevant state using the following methods (where +items+ is the name of the association):
Extra indentation step after these.
Extra spacing only here.
Extract handler, formats and variant from path.
Extract the action name from the passed data and process it via the channel.
Extract the name of the missing constant from the exception message.
Extract the table from the insert sql.
Extracting a plain old Ruby object to encapsulate it and collaborate or delegate to the original object is often a good choice, but when there's no additional state to encapsulate or we're making DSL-style declarations about the parent class, introducing new collaborators can obfuscate rather than simplify.
Extracts an excerpt from +text+ that matches the first instance of +phrase+.
Extracts options from a set of arguments.
Extracts the first line out of the description
Extracts the nested parameter from the given +keys+ by calling +dig+ at each step.
Extracts the value from a PostgreSQL column default definition.
FIXME: Apparently JK uses this.
FIXME: Change these files to symlinks once RubyGems 2.5.0 is required.
FIXME: Change this file to a symlink once RubyGems 2.5.0 is required.
FIXME: I don't know if this is *desired* behavior, but it is *today's* behavior.
FIXME: Remove this class as well
FIXME: Remove this class, and the second argument to lookups on PG
FIXME: Remove this when the deprecation cycle on TZ aware types by default ends.
FIXME: Remove this when we better serialize attributes
FIXME: Test behavior, not implementation.
FIXME: We are avoiding to use alias because a bug on thor that make this method public and add it to the task list.
FIXME: `references` has no impact on the aliases generated for the join query.
FIXME: another integration test.
FIXME: as far as I can tell, `from` will always be an Arel::Table.
FIXME: get following tests to pass on jruby, currently skipped
FIXME: lifted from Rack-Test.
FIXME: shush Sass warning spam, not relevant to testing Railties
FIXME: stop using mocha
FIXME: this is a horrible name
FIXME: this is more of an integration test with AR::Base and the schema modifications.
FIXME: this needs to be refactored so specific database can add their own ignored SQL, or better yet, use a different notification for the queries instead examining the SQL content.
FIXME: this seems bad.
FIXME: this should probably split on +delim+ and use +subtype+ to cast the values.
FIXME: tt.eclosure is not needed for the GTG
FOR UPDATE and other lock types.
FOR UPDATE on an outer join.
FOR UPDATE or somesuch.
FROM mixins INNER JOIN mixins childrens_mixins ...
FROM posts INNER JOIN categories_posts ...
FROM posts INNER JOIN comments ON ...
FROM posts INNER JOIN comments comments_posts ON ...
FROM posts INNER JOIN comments_posts ON ...
Fails otherwise.
Failure to do this will produce undesired results.
Fake it out with a big varchar below.
Fall back to 'keyword' style if this node is not on the RHS of an assignment
Fallback cache store if Action View is used without Rails.
Fallback to config.secret_key_base if secrets.secret_key_base isn't set
Fallback to config.secret_token if secrets.secret_token isn't set
Fetches data from the cache, using the given key.
Fetches data from the cache, using the given keys.
Fetches the first/last using SQL if possible, otherwise from the target array.
Fields can be symbols or strings.
Fields may reflect a model object in two ways - how they are named (hence how submitted values appear within the +params+ hash in the controller) and what default values are shown when the form the fields appear in is first displayed.
File fixtures are represented as +Pathname+ objects.
File tree: file1 dir/.rubocop.yml dir/file2 dir/subdir/file3
FileStore implements the Strategy::LocalCache strategy which implements an in-memory cache inside of a block.
FileUpdateChecker specifies the API used by Rails to watch files and control reloading.
FileUtils.copy(actual_html_path, expected_html_path)
Files under these directories will be reloaded on each request in development mode, unless the directory also appears in autoload_once_paths.
Files with a mtime in the future are ignored.
Files with extension +.builder+, +.rb+, +.rake+, +.yml+, +.yaml+, +.ruby+, +.css+, +.js+ and +.erb+ are taken into account.
Fill in the headers with dummy data to make sure they get removed during the testing
Filter out Minitest backtrace while allowing backtrace from other libraries to be shown.
Filtering only certain sub-keys from a hash is possible by using the dot notation: 'credit_card.number'.
Filters are used to modify lines of data, while silencers are used to remove lines entirely.
Filters out directories which are descendants of others in the collection (stable).
Filters out simple method calls to similarly named private, protected or public.
Filters out the primary keys, from the attribute names, when the primary key is to be generated (e.g. the id attribute has no value).
Filters run first, then silencers.
Filters support:
Filters the primary keys and readonly attributes from the attribute names.
Finally, all the above styles can be mixed together, and the +helper+ method can be invoked with a mix of +symbols+, +strings+, +modules+ and blocks.
Finally, an object which responds to call can be supplied to redirect, allowing you to reuse common redirect routes.
Finally, assuming we have two event instances, one which has a time and one which does not, the output might look like this:
Finally, if we DON'T find a template AND the request isn't a browser page load, then we implicitly respond with 204 No Content.
Finally, it's also possible to explicitly map the relation between attribute and database integer with a hash:
Finally, the +Path+ object also provides a few helpers:
Finally, the block can take block arguments, which can be passed in by +yield+:
Finally, the options +:if+, +:unless+, +:on+, +:allow_blank+, +:allow_nil+, +:strict+ and +:message+ can be given to one specific validator, as a hash:
Finally, we add a tag to the connection-specific logger with the name of the current user to easily distinguish their messages in the log.
Finally, we can expire the cache.
Finally, when a block is given, it yields the file content:
Finally, you can indicate specific attributes of a model for which time zone conversion should not applied, for instance by setting:
Finally, you can pass true as the third argument to silence all log activity (other than the timing information) from inside the block.
Find a few candidate jobs to run (in case some immediately get locked by others).
Find a mailer preview by its underscored class name.
Find all the symbol nodes that are adjacent to literal nodes and alter the regexp so that Journey will partition them into custom routes.
Find and render a template based on the options given.
Find the fifth record.
Find the first record (or first N records if a parameter is supplied).
Find the foreign key when using queries such as: Post.where(author: author)
Find the forty-second record.
Find the fourth record.
Find the last record (or last N records if a parameter is supplied).
Find the longest line of condition.
Find the max configured line length.
Find the second record.
Find the second-to-last record.
Find the third record.
Find the third-to-last record.
Finds all Ruby source files under the current or other supplied directory.
Finds an object in the collection responding to the +id+.
Finds engine with given path.
Finds the correct table name given an Active Record object.
Finds the first record matching the specified conditions.
Finds the first record with the given attributes, or creates a record with the attributes if one is not found:
Finishes in-progress work and handles any new jobs following the executor's fallback policy (`caller_runs`).
Firebird cannot rename tables
Firm was not saved to database.
Firm was saved to database.
First case 0..1 minute
First checks if the :nodoc: comment is associated with the class/module.
First configurable block to run.
First post is with title scope
First request accesses the session
First try the password as a ha1 digest password.
First, extend ActiveModel::Callbacks from the class you are creating:
First, if we DO find a template, it's rendered.
First, include ActiveModel::Validations::Callbacks from the class you are creating:
First, it will ensure that any thrown +MissingTranslation+ messages will be rendered as inline spans that:
First, one uses the +get+, +post+, +patch+, +put+, +delete+ or +head+ method to simulate an HTTP request.
First, we declare that this connection can be identified by its current_user.
Fix a problem with IE 6.0 on opening downloaded files: If Cache-Control: no-cache is set (which Rails does by default), IE removes the file it just downloaded from its cache immediately after it displays the "open/save" dialog, which means that if you hit "open" the file isn't there anymore when the application that is called for handling the download is run, so let's workaround that
Fix duplicate node by prefix with its parent node
Fixtures that don't specify an ID get some extra features:
Flush all log_subscribers' logger.
Follow a single redirect response.
Foo::Bar::UsersController will try to find Foo::Bar::User, Foo::User and finally User.
For +has_many+ associations, the default deletion strategy is +:nullify+.
For :autocorrect level, any offense - corrected or not - is a failure.
For AJAX requests other than GETs, extract the "csrf-token" from the meta-tag and send as the  "X-CSRF-Token" HTTP header.
For API controllers, the implicit response is always 204 No Content.
For APIs, you may want to use :null_session instead.
For a generic model object, a form can be created by passing +form_for+ a string or symbol representing the object we are concerned with:
For adapters which support microsecond resolution.
For all other controllers, we use these heuristics to decide whether to render a template, raise an error for a missing template, or respond with 204 No Content:
For any custom MIME Types you've registered, you can even add your own encoders with:
For any other value of +count+ the plural will be returned.
For backwards compatibility the +partial_name_counter+ is still present and is mapped to the iteration's +index+ method.
For backwards compatibility we're overriding this behavior, but new apps will have an initializer that sets this to true, because the new behavior is preferred.
For backwards compatibility.
For blocks taking parameters, it checks that the left brace has or doesn't have trailing space depending on configuration.
For booleans
For collections rendered such:
For convenience, an instance predicate method is defined as well.
For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
For details on which formats use which options, see ActiveSupport::NumberHelper
For each argument, if it is a multi-line hash without braces, then promote the hash elements to method arguments for the purpose of determining multi-line-ness.
For each file that RuboCop scans, a comment that matches this regex must be found or an offense is reported.
For each item with a checked check box you get an extra ghost item with only that attribute, assigned to "0".
For every WebSocket the Action Cable server accepts, a Connection object will be instantiated.
For every request, the router determines the value of the +controller+ and +action+ keys.
For example
For example "private def ..."
For example +Preloader::Association+ or +Preloader::HasManyThrough+.
For example if all the addressables are either of class Person or Company then a total of 3 queries will be executed.
For example in
For example the +params+ hash in Ruby on Rails.
For example the following migration is not reversible.
For example when this middleware receives a 500 response it will render the template found in `/public/500.html`.
For example you can define the following in your locale (e.g. en.yml)
For example you can define the following in your locale (e.g. en.yml).
For example you can't dup +nil+:
For example,
For example, "rails:model" should be searched in both: "rails/model/model_generator" and "rails/model_generator".
For example, +Post.all+ may return Comments, Messages, and Emails by storing the record's subclass in a +type+ attribute.
For example, +UsersController+ will try to find if the +User+ model exists.
For example, If you wanted to create a +member+ named _joe_ and wanted to update the +posts+ at the same time, that would give an ActiveRecord::RecordNotFound error.
For example, Object.const_get('::String') raises NameError and so does qualified_const_get.
For example, Rails::Generators::ModelGenerator will return "model" as generator name.
For example, SQLite does not understand dates, so this method will convert a Date to a String.
For example, `lvar` and `send` type nodes are initially created as an `ident` type node and fixed to the appropriate type later.
For example, a +DiscussionBoard+ may cache posts_count and comments_count to avoid running an SQL query to calculate the number of posts and comments there are, each time it is displayed.
For example, a BlogPost model might return "blog_posts/blog_post".
For example, actions that could result in the rendering of different templates will use the manual rendering methods:
For example, after_commit is a good spot to put in a hook to clearing a cache since clearing it from within a transaction could trigger the cache to be regenerated before the database is updated.
For example, an extension doing any of the following would need a railtie:
For example, for PostgreSQL:
For example, given
For example, given a form builder:
For example, given that after_creates run before after_saves, if we configured instead an after_save there would be no way to fire a custom after_create callback after the child association gets created.
For example, given the following:
For example, given:
For example, here's a pattern of creating notifications when new comments are posted.
For example, if a bulleted list follows the first item is not rendered as a list item, but as a paragraph starting with a plain asterisk.
For example, if the following templates exist: * signup_notification.text.erb * signup_notification.html.erb * signup_notification.xml.builder * signup_notification.yml.erb
For example, if the user invoke the controller generator as:
For example, if we have a +User+ model with +category_ids+ field and we have the following code in our update action:
For example, if we wanted it to be +user+ instead of +account+ we'd do:
For example, if you are attempting to get the current_scope for the +Board+ model, then you would use the following code:
For example, if you replace the +current_user.to_json+ in the example above with user input instead, the browser will happily eval() that string as JavaScript.
For example, if you serve pages tailored depending on who's logged in at the moment, you may want to add the current user id to be part of the ETag to prevent unauthorized displaying of cached pages.
For example, if you try to update the index of a search engine in +after_save+ the indexer won't see the updated record.
For example, if you want to check for +uniqueness+ with +hstore+ you will need to use a custom validation to handle it.
For example, if you're posting to +UsersController+, your new +params+ hash will look like this:
For example, if you've created a savepoint, then you execute a CREATE TABLE statement, then the savepoint that was created will be automatically released.
For example, imagine the following +dashboard+ action:
For example, in
For example, in the controller you could write this:
For example, in the resource generator, the controller should be invoked with a pluralized class name.
For example, let's say you made a helper to automatically add labels to form inputs.
For example, lines like "else do_something".
For example, making sure that a teacher can only be on the schedule once per semester for a particular class.
For example, one would expect the tables "paper_boxes" and "papers" to generate a join table name of "papers_paper_boxes" because of the length of the name "paper_boxes", but it in fact generates a join table name of "paper_boxes_papers".
For example, setting the IDs of a child collection.
For example, shoulda is considered a test_framework and is an extension of test_unit.
For example, something like
For example, specifying +:books+ allows this method to preload all books for an Author.
For example, suppose a person has many projects, and each project has many tasks.
For example, suppose that two users try to post a Comment at the same time, and a Comment's title must be unique.
For example, suppose that you have 5 models, with the following hierarchy:
For example, the +NetworkResource+ model has +network_address+ and +cidr_range+ attributes that should be aggregated using the +NetAddr::CIDR+ value class (http://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR).
For example, the call above is converted to:
For example, the following association would find all events that occur on the user's birthday:
For example, the following behavior may be surprising:
For example, the following database.yml...
For example, the following demo integration test prints the body of the controller response to the console:
For example, the following would not work following the previous example:
For example, the following:
For example, the number 123.45 has a precision of 5 and a scale of 2.
For example, the previous example could be rewritten as:
For example, the tables "catalog_categories" and "catalog_products" generate a join table name of "catalog_categories_products".
For example, these two snippets have the same output:
For example, this method could generate the following:
For example, this method returns a Mysql2::Client object in case of Mysql2Adapter, and a PGconn object in case of PostgreSQLAdapter.
For example, to add a condition:
For example, webrat developers might want to have webrat available on controller generator.
For example, when RuboCop inspects 2 files, the invocation order should be like this:
For example, when there are two placeholders with only one value supplied:
For example, when you have defined `MyCustomFormatter` in `./path/to/my_custom_formatter.rb`, you would type this command:
For example, with the following models:
For example, you can also do this:
For example, you can use that when manually building SQL strings:
For example, you could do this in your controller to rollback a transaction:
For example, you may want to prefix all fragment cache keys with a global version identifier, so you can easily invalidate all caches.
For example, you might want to set some session properties before sending a GET request.
For example, you've probably had the chance to write code like this in one of your views:
For example:
For example: a.
For exploded style (default), it recommends passing the exception class and message to `raise`, rather than construct an instance of the error.
For hash conditions, you can either use the table name in the key, or use a sub-hash.
For historical reasons, the 'media' attribute will always be present and defaults to "screen", so you must explicitly set it to "all" for the stylesheet(s) to apply to all media types.
For information about how to change the default Multibyte behavior see ActiveSupport::Multibyte.
For instance if the template the collection renders is cached like:
For instance, "1 minute" is actually 30s to 1m29s.
For instance, +attributes+ and +connection+ would be bad choices for association names.
For instance, a time + 24.hours will advance exactly 24 hours, while a time + 1.day will advance 23-25 hours, depending on the day.
For instance, a time - 24.hours will go subtract exactly 24 hours, while a time - 1.day will subtract 23-25 hours, depending on the day.
For instance, an HTTP controller with a template matching the action name is considered to exist.
For instance, if we have the following template:
For instance, in order to change the routes to allow for a dot character in the +id+ parameter:
For instance, let's store all "render" events in an array:
For instance, take the following tests:
For instance, the template above using +provide+ would be:
For instance, you can figure out the name of a table from the name of a class.
For instance:
For instance: +json+ and +jsonb+ types in PostgreSQL will be converted between JSON object/array syntax and Ruby +Hash+ or +Array+ objects transparently.
For many resources, loose upgrades are sufficient: if a thread is awaiting a lock, it is not running any other code.
For more complex cases, such as conversion to or from your application domain objects, consider using the ActiveRecord::Attributes API.
For more complicated hash keys, let the parser validate the syntax.
For more details on creating custom types, see the documentation for ActiveRecord::Type::Value.
For more details on registering your types to be referenced by a symbol, see ActiveRecord::Type.register.
For more details on the issues involved see Section 4 of this document.
For more details on the whole callback system, read the documentation for ActiveSupport::Callbacks.
For more information about specifying conditions as a hash or array, see the Conditions section in the introduction to ActiveRecord::Base.
For more information about the methods defined on the Chars proxy see ActiveSupport::Multibyte::Chars.
For more information check to_i method.
For more information on locking, please see ActiveRecord::Locking.
For more information, see the documentation for the +:inverse_of+ option.
For more information, see the documentation for this option on the different specific association types.
For more on key-based expiration, see: http://signalvnoise.com/posts/3113-how-key-based-cache-expiration-works
For more see the explanation in ThroughReflection.
For namespaced routes, like +admin_post_url+:
For newer revision
For now, action_controller must always be present with rails, so let's make sure that it gets required before here.
For now, the user has to synchronize the schema manually.
For now, we assume that lists are 2 items or less.
For older versions you can use the queue_classic-later gem.
For one-to-one nested associations, if you build the new (in-memory) child object yourself before assignment, then this module will not overwrite it, e.g.:
For optimistic locking
For options, see +match+, as +mount+ uses it internally.
For options, see +match+, as +root+ uses it internally.
For other adapters you will have to parse the (database-specific) exception message to detect such a case.
For performance critical pages, selecting only the required fields can be an easy performance win (assuming you aren't using all of the fields on the model).
For performance reasons, we don't check whether to validate at runtime.
For polymorphic relationships, find the foreign key and type: PriceEstimate.where(estimate_of: treasure)
For queries selecting a subset of columns, return false for unselected columns.
For ranges with line breaks, we look a the last code line.
For redirects within the same controller, you can even call follow_redirect and the redirect will be followed, triggering another action call which can then be asserted against.
For removing objects from the session, you can either assign a single key to +nil+:
For scope names which contain spaces this approach doesn't work.
For single line ranges, this is simple.
For single-table inheritance, we check the record for a +type+ column and return the corresponding class.
For streaming, instead of rendering a given a template, we return a Body object that responds to each.
For string and array conditions, use the table name in the condition.
For testing layouts which are set automatically
For the default 'aes-256-cbc' cipher, this is 256 bits.
For the rest of this documentation, when we say "UTF-8", we mean "UTF-8 or whatever the default_internal encoding is set to".
For the simple, default case, just copy it over.
For this purpose, you can use a helper called +provide+ that does the same as +content_for+ but tells the layout to stop searching for other entries and continue rendering.
For this, you need to create a config file as follow:
For timestamps
Force a row to have a JSON "null" instead of a database NULL (this is how null values are saved on 4.1 and before)
Force a row to have a database NULL instead of a JSON "null"
Force checking
Force loading the collection from the db.
Force sprockets to be skipped when generating API only apps.
Force the request to this particular controller or specified actions to be under HTTPS protocol.
Force to clear the transaction record state.
Forces eager loading by performing a LEFT OUTER JOIN on +args+:
Forces reloading of relation.
Forcible conversion to UTF-8
Form helpers are designed to make working with resources much easier compared to using vanilla HTML.
Formats a +number+ into a phone number (US by default e.g., (555) 123-9876).
Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324).
Formats can have different variants.
Formats the bytes in +number+ into a more understandable representation (e.g., giving it 1500 yields 1.5 KB).
FormattedTimeHelper can now be included in a controller, using the +helper+ class method:
Formatting operator.
Forward all undefined methods to the wrapped string.
Forward only valid config params to PGconn.connect.
Fragment caching is used for caching various blocks within views without caching the entire action as a whole.
Fred.aaa DEPRECATION WARNING: aaa is deprecated and will be removed from Rails 5.1.
Fred.bbb DEPRECATION WARNING: bbb is deprecated and will be removed from Rails 5.1 (use zzz instead).
Fred.ddd DEPRECATION WARNING: ddd is deprecated and will be removed from MyGem next-release (use zzz instead).
Fred.eee DEPRECATION WARNING: eee is deprecated and will be removed from MyGem next-release (use zzz instead).
Freeze so changes aren't accidentally pushed
Freeze so future modifications will fail rather than do nothing mysteriously
From a user's perspective, the easiest thing to do is to save your templates as UTF-8.
From the moment you require "config/application.rb" in your app, the booting process goes like this:
Frozen string literals will be default in Ruby 3.0.
Full hash Configuration.
Full paths from the document root will be passed through.
Full usage example:
Functional tests allow you to test a single controller action per test method.
Functional tests are written as follows: 1.
Functions by instantiating a preloader class such as Preloader::HasManyThrough and call the +run+ method for each passed in class in the +records+ argument.
Functions for checking the alignment of the `end` keyword.
Furthermore, the `bar` method will be redefined every time `foo` is invoked.
Future versions of the sqlite3 adapter will return numeric
GET       /admin/posts GET       /admin/posts/new POST      /admin/posts GET       /admin/posts/1 GET       /admin/posts/1/edit PATCH/PUT /admin/posts/1 DELETE    /admin/posts/1
GET       /photos/:photo_id/comments GET       /photos/:photo_id/comments/new POST      /photos/:photo_id/comments GET       /photos/:photo_id/comments/:id GET       /photos/:photo_id/comments/:id/edit PATCH/PUT /photos/:photo_id/comments/:id DELETE    /photos/:photo_id/comments/:id
GET       /profile/new POST      /profile GET       /profile GET       /profile/edit PATCH/PUT /profile DELETE    /profile
GET /books GET /books.json
GET /books/1 GET /books/1.json
GET /books/1/edit
GET /books/new
GET new POST create
GET requests are checked for cross-origin JavaScript after rendering.
GET requests are not protected since they don't have side effects like writing to the database and don't leak sensitive information.
GET show GET edit PATCH/PUT update DELETE destroy
Gateway to RemoteConnections.
Gather up all of the SET variables...
Generally it can be any wrapper that provides +load+ and +dump+.
Generate a list of target files by expanding globbing patterns (if any).
Generate a url based on the options provided, default_url_options and the routes defined in routes.rb.
Generate default options for collection helpers, such as :checked and :disabled.
Generate new controller class.
Generate something using a generator from Rails or a plugin.
Generate the path indicated by the arguments, and return an array of the keys that were not used to generate it.
Generate the special pages like the home.
Generates a form containing a single button that submits to the URL created by the set of +options+.
Generates a signed message for the provided value.
Generates a writer method for this association.
Generates all the attribute related methods for columns in the database accessors, mutators and query methods.
Generator namespaces may be hidden for a variety of reasons.
Generators frequently change the current path using +FileUtils.cd+.
Generators names must end with "_generator.rb".
Generic Active Record exception class.
Generic data download:
Get a list of the constants that were added
Get a session from the cache.
Get headers for this response.
Get messages for +key+.
Get original file permissions
Get the "actual" source reflection if the immediate source reflection has a source reflection itself
Get the columns for a table as a hash, key is the column name value is the column object.
Get the reference for class named +name+ if one exists.
Get the reference for class named +name+.
Get the statistics from the memcached servers.
Get-and-show and do-and-redirect.
Gets a new instance of a controller object.
Gets the Rails::Html::FullSanitizer instance used by +strip_tags+.
Gets the Rails::Html::LinkSanitizer instance used by +strip_links+.
Gets the Rails::Html::WhiteListSanitizer instance used by sanitize and +sanitize_css+.
Gets the full description of the cop or nil if no description is set.
Gets the helper methods available to the controller.
Give up: we couldn't compute the klass type so we won't be able to find any associations either.
Given +path+, a filesystem path to a ruby file, return an array of constant paths which would cause Dependencies to attempt to load this file.
Given a +Foo+ module and a +Bar+ module which depends on the former, we would typically write the following:
Given a collection of Pathname objects returns the longest subpath common to all of them, or +nil+ if there is none.
Given a container where the elements respond to first and last (such as a two-element array), the "lasts" serve as option values and the "firsts" as option text.
Given a key (as described in +expire_fragment+), returns a key suitable for use in reading, writing, or expiring a cached fragment.
Given a pair +key+, +value+:
Given a set of columns and an ORDER BY clause, returns the columns for a SELECT DISTINCT.
Given an attributes hash, +instantiate+ returns a new instance of the appropriate class.
Given an ordering of datetime components, create the selection HTML and join them with their appropriate separators.
Given that the current action has been reached through `GET /users/1`:
Given that the parameters starts with `_`, the finder needs to use the same parameter name.
Given the following spec-style test:
Given this sub template rendering:
Given two users whose names are Alice and Bob, these snippets return:
Gives a record (or N records if a parameter is supplied) without any implied order.
Global: The adapter has a global number of retries.
Global: The adapter is configured that all jobs have a maximum run time.
Go down the ancestors to check if it is owned directly.
Go to https://hstspreload.appspot.com to submit your site for inclusion.
Good practice is to let the first declared status be the default.
Grab the list of namespaces that we're looking for new constants under
Gracefully stop processing jobs.
Grouped choices look like this:
Guard clause is for nodes nested within mlhs
Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy descending directly from ActiveRecord::Base.
Guesses the table name, but does not decorate it with prefix and suffix information.
Guides are taken from the output directory, from where all .html files are submitted to the validator.
Guides are taken from the source directory, and the resulting HTML goes into the output directory.
Guides generation from gems.
Guides generation in the Rails repo.
HEAD request should match `get /home` rather than the lower-precedence Rack app mounted at `/`.
HSTS protects your site on every visit *except the first visit* since it hasn't seen your HSTS header yet.
HTML escapes strings but doesn't wrap them with an ActiveSupport::SafeBuffer.
HTML is understood, but there are .xml rules in the CSS
HTML wants to know the encoding of the content you're giving them, so we need to send that along.
HTTP Strict Transport Security (HSTS): Tells the browser to remember this site as TLS-only and automatically redirect non-TLS requests.
Hack, ignore the desc calls performed by the original initializer.
Handle *_before_type_cast for method_missing.
Handle Cross-Origin Resource Sharing (CORS) in order to accept cross-origin AJAX requests.
Handle attributes
Handle child elements
Handlers are inherited.
Handlers that take one argument will be called with the exception, so that the exception can be inspected when dealing with it.
Handles `EnforcedStyle` configuration parameters.
Handles `Max` configuration parameters, especially setting them to an appropriate value with --auto-gen-config.
Handles adding and checking ignored nodes.
Handles caching of configurations and association of inspected ruby files to configurations.
Handles calculation of deltas (deviations from correct alignment) when the enforced style is 'key'.
Handles calculation of deltas when the enforced style is 'separator'.
Handles calculation of deltas when the enforced style is 'table'.
Handles default conversions: to_model, to_key, to_param, and to_partial_path.
Handles implicit rendering for a controller action that does not explicitly respond with +render+, +respond_to+, +redirect+, or +head+.
Handles templates caching.
Hangul character boundaries and properties
Happens by default on save.
Hash keys must be strings.
Hashes and Arrays can also be used as keys.
Hashes are turned into this form automatically, so the keys become "firsts" and values become lasts.
Having two cops registering offense for the line with only spaces would cause havoc in auto-correction.
Helper class necessitated by silly design of TSort prior to Ruby 2.1 Newer versions have a better API, but that doesn't help us
Helper for building query glob string based on resolver's pattern.
Helper methods defined in a fixture will not be available in other fixtures, to prevent against unwanted inter-test dependencies.
Helper module to provide common methods to ConditionalAssignment correctors
Helper module to provide common methods to classes needed for the ConditionalAssignment Cop.
Helper to define a test method using a String.
Helpers for creating and wrapping delivery behavior, used by DeliveryMethods.
Helpers for defining methods based on a pattern string
Helpers related to template lookup using the lookup context information.
Helpers take that into account:
Helpers that builds a path.
Helpers::FormOptions can be used to create common select boxes such as countries, time zones, or associated records.
Helpful when using currency formats like INR.
Hence exit code 0.
Hence exit code 1.
Hence need to put a restriction on password length.
Hence the inherited default for `if` key is ignored.
Hence the need to ignore certain predefined sqls that deal with system calls.
Hence this method.
Hence, dynamic values in fixtures are to be considered a code smell.
Here are a few examples of things that can't be derived:
Here are examples:
Here are some basic examples:
Here are some examples of render calls that Cache Digests knows how to decode:
Here is a more advanced Token example where only Atom feeds and the XML API is protected by HTTP token authentication, the regular HTML interface is protected by a session approach:
Here is an example where +on_load+ method is called to register a hook.
Here is an example which demonstrates the problem:
Here we check if the elements of a multi-line array literal are aligned.
Here we check if the keys, separators, and values of a multi-line hash literal are aligned.
Here we check if the parameters on a multi-line method call or definition are aligned.
Here we go back an indentation level again.
Here's a basic example:
Here's a quick example:
Here's an example of a channel that allows subscribers to get all new comments on a given page:
Here's an example of multiple sessions and custom DSL in an integration test
Here's an example:
Here's the format:
Here's the same action, with web-service support baked in:
Here, have a monkey fixture:
Here, the `case` node doesn't count, but each when scores one complexity point.
Hexadecimal notation
Hidden but explicitly included
Hidden subdirectories should also be excluded.
Hidden, excluded by default
Hidden, not included by wildcard
Hold configured generators fallbacks.
Hold off drawing routes until all the possible controller classes have been loaded.
Holds accessors for the registered details.
Holds all the meta-data about a :through association as it was specified in the Active Record class.
Holds all the meta-data about an aggregation as it was specified in the Active Record class.
Holds all the meta-data about an association as it was specified in the Active Record class.
Holds all the methods that are shared between MacroReflection and ThroughReflection.
Holds common methods for migrations.
Holds data about a codepoint in the Unicode database.
Holds generators configuration:
Holds static data from the Unicode database.
Holds the class which implements the request forgery protection.
Hook method defining how an attribute value should be retrieved for serialization.
Hook method defining how an attribute value should be retrieved.
Hook method that gets called by the initializer allowing verification that the arguments supplied are valid.
Hook overridden in controller to add request information with `default_url_options`.
Hooks invoked by VariableTable.
How much the prefix bonus is weighted.
How to complete the streaming when an exception occurs.
However if the +:dependent+ value is +:destroy+ then in that case the +:delete_all+ deletion strategy for the association is applied.
However it fails on Rubinius 2.2.9 due to its bug:
However the validation and callback methods are lazy and those methods get created when they are invoked for the very first time.
However you can still overwrite individual conventions, such as:
However, PostgreSQL will cast the default to the columns type, which leaves us with a default like "default NULL::character varying".
However, after insert_record has been called, the cache is cleared in order to allow multiple instances of the same record in an association.
However, currently it's unclear whether there's a way to emit this warning without syntax errors.
However, if +content_for+ is called several times, the final result would have all calls concatenated.
However, if a block has been passed, that block will be passed the key and executed in the event of a cache miss.
However, if the date component is not provided, but any other upper components are supplied, then the day of the month defaults to 1:
However, if there is a WHERE clause that spans across tables Active Record will fall back to a slightly more resource-intensive single query:
However, if we know that a certain node type (like `int`) never has child nodes, there is no reason to pay the cost of calling `super`.
However, if you supply validate: false, validations are bypassed altogether.
However, if you want to place your generators at a different location, you can specify in your railtie a block which will load them during normal generators lookup:
However, in MySQL it is advised to add a compound index for both of the columns as MySQL only uses one index per table during the lookup.
However, mailers don't have hostname information, and you still have to provide the +:host+ argument or set the default host that will be used in all mailers using the configuration option +config.action_mailer.default_url_options+.
However, most part of shoulda generators are similar to test_unit ones.
However, since MySQL doesn't support DDL transactions, creating a table will result in any created savepoints to be automatically released.
However, sometimes you want to isolate your engine from the application, especially if your engine has its own router.
However, that would break proxy farms, where requests from a single user often go through different proxies in the farm.
However, the above applies if the parent model is being updated as well.
However, the button tag does allow for richer labels such as images and emphasis, so this helper will also accept a block.
However, there are examples where this strategy doesn't make sense.
However, they are supported by Chrome, Firefox, Opera, and Safari.
However, this can change, for instance, when using nested attributes, which is called _after_ the association has been defined.
However, this does not allow for LIMIT, OFFSET and ORDER.
However, those can be customized:
However, we can't replace with each_with_object if the accumulator parameter is assigned to within the block.
However, when a layout is explicitly set, the explicitly set layout wins: * The InformationController uses the "information" layout, explicitly set.
However, when there is an error, the message is added to the password attribute instead so that the error message will make sense to the end-user.
However, you can also have multiple session instances open per test, and even extend those instances with assertions and methods to create a very powerful testing DSL that is specific for your application.
However, you need to be aware when using +class_attribute+ with mutable structures as +Array+ or +Hash+.
I *think* they were just being defensive, but I have no idea.
I don't actually think it's possible to pass a Constraints object to this constructor, but there were multiple places that kept testing children of this object.
I18n is forced to raise by default.
I18n load paths are a special case since the ones added later have higher priority.
I18n.locale to be used during the job.
ID optionally provided by adapter
IE versions 4, 5, 5.5, and 6 are all known to have a variety of quirks (especially when downloading over SSL).
IF YOU DON'T USE A PROXY, THIS MAKES YOU VULNERABLE TO IP SPOOFING.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
INNER JOIN categories ...
INNER JOIN categories_posts posts_categories_join INNER JOIN posts posts_categories INNER JOIN categories_posts categories_posts_join INNER JOIN categories categories_posts_2
INNER JOIN comments ...
INNER JOIN comments special_comments_posts
INNER JOIN comments special_comments_posts ...
INNER JOIN mixins childrens_mixins_2
INNER JOIN parents_mixins ...
IRB inspects the return value of "MyModel.allocate".
ISO8601 string examples are taken from ISO8601 gem at https://github.com/arnau/ISO8601/blob/b93d466840/spec/iso8601/duration_spec.rb published under the conditions of MIT license at https://github.com/arnau/ISO8601/blob/b93d466840/LICENSE
Ideally this would, if only for symmetry's sake with other association types
Ideally, we calculate this relative to the project root.
Identifies whether the class name of a record or class is uncountable.
If "SSL" was defined to be an acronym:
If +:only+ or +:except+ are used, convert the options into the +:if+ and +:unless+ options of ActiveSupport::Callbacks.
If +autosave+ is +false+ only new records will be returned, unless the parent is/was a new record itself.
If +candidates+ collection is not given, method returns true.
If +class_name+ is specified, the serialized object must be of that class on assignment and retrieval.
If +element+ is in the queue, remove and return it, or nil.
If +false+, the number of fractional digits (defaults to +false+).
If +file+ is the filename of a file that contains annotations this method returns a hash with a single entry that maps +file+ to an array of its annotations.
If +form+ is :local, then the time is in the system timezone.
If +full_messages+ is +true+, it will contain full messages (see +full_message+).
If +message+ is a symbol, it will be translated using the appropriate scope (see +generate_message+).
If +method_name+ is not +nil+, the mailer will be initialized according to the named method.
If +nil+ is passed as the name the value of the link itself will become the name.
If +nil+, no selection is made.
If +no_wait+ is set and the lock is not immediately available, returns +nil+ without yielding.
If +objectify_options+ is not called, then the newly created helper will not be linked back to the model.
If +prefix_partial_path_with_controller_namespace+ is true, then this method will prefix the partial paths with a namespace.
If +reload_classes_only_on_change+ is false, the class unload will have occurred after the work run, but before this callback.
If +reload_classes_only_on_change+ is true (the default), the class unload will have already occurred.
If +secrets.secret_key_base+ and +secrets.secret_token+ (deprecated) are both set, legacy cookies signed with the old key generator will be transparently upgraded.
If +selected+ is specified as a Proc, those members of the collection that return true for the anonymous function are the selected values.
If +selected+ is specified as a value or array of values, the element(s) returning a match on +value_method+ will be selected option tag(s).
If +selected+ is specified, the matching "last" or element will get the selected option-tag.
If +sources+ is a string, a single video tag will be returned.
If +sources+ is an array, a video tag with nested source tags for each source will be returned.
If +timeout+ is given, block if there is no element available, waiting up to +timeout+ seconds for an element to become available.
If +timeout+ is not given, remove and return the head the queue if the number of available elements is strictly greater than the number of threads currently waiting (that is, don't jump ahead in line).
If +true+, +as_json+ will emit a single root node named after the object's type.
If +try+ is called without arguments it yields the receiver to a given block unless it is +nil+:
If +value+ is +nil+ an attribute "nil" set to "true" is added.
If +value+ is a Hash, this will create an ActionController::Parameters object that has been instantiated with the given +value+ hash.
If :host options is set, it overwrites global +config.action_controller.asset_host+ setting.
If :ruby, the schema is dumped as an ActiveRecord::Schema file which can be loaded into any database that supports migrations.
If :sql, the schema is dumped as (potentially database- specific) SQL statements.
If :type options is set, a file extension will be appended and scoped to the corresponding public directory.
If A extends ActiveRecord::Base, A.base_class will return A.
If ActiveSupport::Dependencies is not loaded, forget about autoloading.
If AllCops:DisabledByDefault is true, it changes the Enabled params so that only cops from user configuration are enabled.
If B descends from A through some arbitrarily deep hierarchy, B.base_class will return A.
If STI is used, find the correct subclass for association reflection
If _n_ is not specified or is nil, 16 is assumed.
If `Metrics/LineLength` is enabled, we do not want to introduce an offense by auto-correcting this cop.
If `size` is greater than the size of `range`, the removed region can overrun the end of `range`.
If `verify_authenticity_token` was run (indicating that we have forgery protection enabled for this request) then also verify that we aren't serving an unauthorized cross-origin response.
If a Regexp is given, the matching portion of the string is returned.
If a String is given, that given string is returned if it occurs in the string.
If a block is given to routes, it is appended to the engine.
If a block is given, the new session is yielded to the block before being returned.
If a block is given, the new session will be yielded to the block before being returned.
If a block is passed, that block should cause the specified number of emails to be enqueued.
If a block is passed, that block should cause the specified number of emails to be sent.
If a block is passed, that block should cause the specified number of jobs to be enqueued.
If a block is passed, that block should cause the specified number of jobs to be performed.
If a block is passed, that block should not cause any emails to be sent.
If a block is passed, that block should not cause any job to be enqueued.
If a block is passed, that block should not cause any job to be performed.
If a block is provided, it should not cause any emails to be enqueued.
If a cache expires and due to heavy load several different processes will try to read data natively and then they all will try to write to cache.
If a collection is given, the layout will be rendered once for each item in the collection.
If a component extends the semantics of +response_body+ (as ActionController extends it to be anything that responds to the method each), this method needs to be overridden in order to still return a string.
If a cop is disabled in a range that begins on the same line as the end of the previous range, it means that the cop was already disabled by an earlier comment.
If a cop modifies the source and another cop undoes it producing identical source we have an infinite loop.
If a file in the process of being loaded (parent.rb) triggers the load of another file (child.rb) the stack will ensure that child.rb handles the new constants.
If a file is not found on disk, the request will be delegated to the application stack.
If a format cannot be found neither from the path, or the handler, we should return the array of formats given to the resolver.
If a hash's opening brace is on the line above the first element of the hash, then the closing brace should be on the line below the last element of the hash.
If a hash's opening brace is on the same line as the first element of the hash, then the closing brace should be on the same line as the last element of the hash.
If a key is given and caching is on always check the cache before hitting the resolver.
If a layout is not explicitly mentioned then look for a layout with the controller's name.
If a limit is supplied, returns a substring from the beginning of the string until it reaches the limit value.
If a limit is supplied, returns a substring from the end of the string until it reaches the limit value (counting backwards).
If a magic encoding comment was found, tag the String with this encoding.
If a method call's opening brace is on the same line as the first argument of the call, then the closing brace should be on the same line as the last argument of the call.
If a method definition's opening brace is on the same line as the first parameter of the definition, then the closing brace should be on the same line as the last parameter of the definition.
If a name was not explicitly given, we check if it is valid and return nil in case it isn't.
If a namespace is defined, it will be prefixed on to every key.
If a plugin developer wants a generator group to fallback to another group in case of missing generators, they can add a fallback.
If a proc, lambda, or block is given, its body is evaluated in the context of the current object.
If a range is supplied, a substring containing characters at offsets given by the range is returned.
If a reference is broken levenshtein distance is used to suggest an existing one.
If a sequence name is not explicitly set when using PostgreSQL, it will discover the sequence corresponding to your primary key for you.
If a server goes down, then MemCacheStore will ignore it until it comes back up.
If a signed cookie was tampered with by the user (or a 3rd party), nil will be returned.
If a single string, IPAddr, or Regexp object is provided, it will be used in addition to +TRUSTED_PROXIES+.
If a string literal contains hard-to-type characters which would not appear on a "normal" keyboard, then double-quotes are acceptable
If a string or symbol is passed in it will be camelized and constantized.
If a subclass changes the value then that would also change the value for parent class.
If a subclass changes the value, the parent class' value is not changed.
If a subclass does not have a layout specified, it inherits its layout using normal Ruby inheritance.
If a table is referenced only once, the standard table name is used.
If a third option is set to +true+, it also adds bold to the string.
If all connections are leased and the pool is at capacity (meaning the number of currently leased connections is greater than or equal to the size limit set), an ActiveRecord::ConnectionTimeoutError exception will be raised.
If all parts are negative - let's make a negative duration
If all parts are negative it will negate all of them and return minus as a sign.
If all the values for a given attribute are empty, the attribute will be set to +nil+.
If an alias was specified, it will be accessible from the resulting objects:
If an argument isn't given to the proc, it's evaluated in the context of the current controller anyway.
If an array is passed, then the first element of the array is treated as a template, and the remaining elements are inserted into the template to generate the condition.
If an array's opening brace is on the line above the first element of the array, then the closing brace should be on the line below the last element of the array.
If an array's opening brace is on the same line as the first element of the array, then the closing brace should be on the same line as the last element of the array.
If an associated record already exists, the method's behavior depends on the value of the update_only option.
If an associated record does not yet exist, one will be instantiated.
If an explicit :controller was given, always make :action explicit too, so that action expiry works as expected for things like
If an internationalized template is not found it will fall back on `/public/500.html`.
If an method call's opening brace is on the line above the first argument of the call, then the closing brace should be on the line below the last argument of the call.
If an method definition's opening brace is on the line above the first parameter of the definition, then the closing brace should be on the line below the last parameter of the definition.
If an order is supplied it will be respected.
If any exception happens inside the exceptions app, this middleware catches the exceptions and returns a FAILSAFE_RESPONSE.
If any of :controller, :action or :id is not found, don't pull any more keys from the recall.
If any of the +before_add+ callbacks throw an exception, the object will not be added to the collection.
If any of the path parameters has an invalid encoding then raise since it's likely to trigger errors further on.
If any of them fail ActiveRecord::RecordInvalid gets raised, and the record won't be saved.
If anything goes wrong, the database rolls back to the beginning of the sub-transaction without rolling back the parent transaction.
If anything is passed in the +html_options+ hash it will be applied to every select tag in the set.
If anything is passed in the html_options hash it will be applied to every select tag in the set.
If arel is locked this is a SELECT ...
If attribute names are passed, they are updated along with updated_at/on attributes.
If block given, loads all records and checks for one or more matches.
If block given, loads all records and checks for two or more matches.
If block is given, gem entries in block are wrapped into the source group.
If block should fire
If block should not fire
If both headers are supplied, both must match, or the request is not considered fresh.
If both models don't exist, it will then fallback to use +user+ as the key.
If braces are on separate lines, and the BlockDelimiters cop is enabled, those braces will be changed to do..end by the user or by auto-correct, so reporting space issues is not useful, and it creates auto-correct conflicts.
If brackets are on different lines and there is one item at least, then comma is needed anytime for consistent_comma.
If calling +method+ returns +nil+, no selection is made.
If certain methods do explicitly check the class, call +to_s+ before you pass chars objects to them.
If child.rb is being autoloaded, its constants will be added to autoloaded_constants.
If cond is nil, that means each when has an expression that evaluates to true or false.
If database hasn't UTF-8 character set, this test fails
If day was done first we would jump to 2010-04-01 instead.
If day was done first we would jump to 2012-03-01 instead.
If errors are present, the method should return an array of strings that are the errors for the attribute in question.
If every single IP option is in the trusted list, just return REMOTE_ADDR
If everything goes fine a COMMIT is executed once the chain has been completed.
If false, callback chains will only be halted by calling +throw :abort+.
If false, it would just be +product+.
If false, never save or destroy the associated object.
If false, never save or destroy the associated objects.
If false, removes all subdomains from the host part of the link.
If fibers are defined, we return a streaming body that renders the template piece by piece.
If found, the module is created and assigned to +into+'s constants with the name +const_name+.
If in revert and going :up, say, we want to execute :down without reverting, so
If in the "about" action, it will render...
If in your I18n locale you have:
If in your I18n locale you have: distance: centi: one: "centimeter" other: "centimeters" unit: one: "meter" other: "meters" thousand: one: "kilometer" other: "kilometers" billion: "gazillion-distance"
If invalid string is provided, it will raise +ActiveSupport::Duration::ISO8601Parser::ParsingError+.
If it cannot find a suitable inverse association name, it returns nil.
If it is a Proc, it will be invoked when each key is evaluated so that you can use application logic to invalidate keys.
If it is a numeric value it is either the hour offset, or the second offset, of the timezone to find.
If it is not possible to load the constant into from_mod, try its parent module using +const_missing+.
If it is persisted, a form for the object will route to the update action.
If it matches the current ETag, we can return a 304 Not Modified response with no body, letting the browser or proxy know that their cache is current.
If it succeeds, an array with the respective return values is returned:
If it was being `require`d, they will be discarded.
If it's a Fixnum or String, we figure out what its symbolized name.
If it's a Symbol, we figure out what its corresponding code is.
If it's a string within an interpolation, then it's not an offense for this cop.
If it's a string, it compares the file with the given string:
If it's not a string within an interpolation, then it's not an offense for this cop.
If it's not duplicable, returns +self+.
If it's not, it will execute the given block.
If it's set to `def`, the `end` shall be aligned with the `def` keyword.
If it's set to `keyword` (which is the default), the `end` shall be aligned with the start of the keyword (if, class, etc.).
If it's set to `start_of_line` (which is the default), the `end` shall be aligned with the start of the line where the `def` keyword is.
If it's set to `start_of_line`, the `end` shall be aligned with the start of the line where the matching keyword appears.
If it's set to `variable` the `end` shall be aligned with the left-hand-side of the variable assignment, if there is one.
If it's zero, we can have our table_name
If just one argument is sent, invoke say, otherwise invoke say_status.
If localization is used, the strings should be localized for the current locale.
If most of your actions use the same layout, it makes perfect sense to define a controller-wide layout as described above.
If multiple ids are provided, then the number of results obtained should be provided in the +result_size+ argument and the expected number of results should be provided in the +expected_size+ argument.
If nil is passed, current time in UTC is used.
If no +:dependent+ option is given, then it will follow the default strategy.
If no +category_ids+ are selected then we can safely assume this field will not be updated.
If no .rubocop.yml is found there, the user's home directory is checked.
If no addresses are specified, then MemCacheStore will connect to localhost port 11211 (the default memcached port).
If no aligned token was found, search for an aligned token on the nearest line with the same indentation as the checked line.
If no arguments are passed to this method, then a new ActiveSupport::Cache::MemoryStore object will be returned.
If no block is given, an `Enumerator` is returned.
If no config.beginning_of_week was specified, returns :monday.
If no content type is registered for the extension, the default type 'application/octet-stream' will be used.
If no error is present, the method should return an empty array.
If no id is found, prefix with "new_" instead.
If no layout is found, it checks if at least a layout with the given name exists across all details before raising the error.
If no layout is supplied, look for a template named the return value of this method.
If no method can handle the action, then an AbstractController::ActionNotFound error is raised.
If no options hash is passed or :update specified, the default is to render a partial and use the second parameter as the locals hash.
If no order is defined it will order by primary key.
If no route is generated the formatter will raise ActionController::UrlGenerationError
If no such connection exists checkout a connection, yield it to the block, and checkin the connection when finished.
If no time argument is passed, the current time is used as default.
If no welcome template exists, it will raise an ActionView::MissingTemplate error.
If no year is specified, it will use the current year.
If none is registered, defaults to an ActionDispatch::Routing::RouteSet.
If none of these conditions are true, and method_for_action returns nil, an AbstractController::ActionNotFound exception will be raised.
If not and you are going to need the records anyway +length+ will take one less query.
If not and you are going to need the records anyway this method will take one less query.
If not found, returns +nil+.
If not possible, probe which are the default permissions in the destination directory.
If not specified, 2005 is used (as an "I don't care" value).
If not, it means the layout exited without requiring anything from the template.
If not, the mailer will remain uninitialized (useful when you only need to invoke the "receive" method, for instance).
If nothing has been stored in the cache, there is a chance the cache directory does not yet exist Ensure delete_matched gracefully handles this case
If nothing is specified, all files will be validated, but you can check just some of them using this environment variable:
If omitted, +:before+ is assumed.
If omitted, any number of associations can be processed.
If one or more records can not be found for the requested ids, then RecordNotFound will be raised.
If our parents do not have a constant named +const_name+ then we are free to attempt to load upwards.
If passed an optional +locale+ parameter, the word will be pluralized using rules defined for that language.
If passed an optional +locale+ parameter, the word will be singularized using rules defined for that language.
If passed an optional locale, rules for other languages can be specified.
If password confirmation validation is not needed, simply leave out the value for +password_confirmation+ (i.e. don't provide a form field for it).
If protect_from_forgery is enabled on an action, this before_action flags its after_action to verify that JavaScript responses are for XHR requests, ensuring they follow the browser's same-origin policy.
If provided, prepends application path.
If set to a string, the string will be used as the option's content and the value will be empty.
If set to true, precision will mean the number of significant digits instead of the number of decimal digits (1234 with precision 2 becomes 1200, 1.23543 becomes 1.2)
If set, the zeros after the decimal separator will always be stripped (eg.: 1.200 will be 1.2)
If so, a streaming buffer *may* be passed when it start rendering.
If so, don't warn
If so, the watched and/or updated_at values are cached until the block is executed via +execute+ or +execute_if_updated+.
If so, this helper will take care of the enclosing div and xhtml namespace declaration.
If so, we don't check it because there could be good reasons why it needs to end with a certain number of newlines.
If so, we tell +attribute_missing+ to dispatch the attribute.
If something went wrong, revert the version.
If specified, an event with this name will be dispatched on the browser.
If specified, the block can also receive the application object, in case you need to access some application-specific configuration, like middleware:
If stale, the association accessor method on the owner will reload the target.
If such a comment is supplied, Rails will apply that encoding to the resulting compiled source returned by the template handler.
If that is the case, be sure to +html_escape+ or +sanitize+ any user-generated content returned by your JSON.
If the +key+ argument provided is an array, or responds to +to_a+, then each of elements in the array will be turned into parameters/keys and concatenated into a single key.
If the +phrase+ isn't found, nil is returned.
If the +source+ filename has no extension, .css will be appended (except for explicit URIs).
If the +source+ filename has no extension, .js will be appended (except for explicit URIs) Full paths from the document root will be passed through.
If the +uppercase_first_letter+ parameter is set to false, then produces lowerCamelCase.
If the :only option is specified, then only the listed job(s) will be performed.
If the :only option is specified, then only the listed job(s) will not be performed.
If the RAW_POST_DATA environment variable is already set, wrap it in a StringIO.
If the String is valid, return the encoding we found
If the `else` branch of a conditional consists solely of an `if` node, it can be combined with the `else` to become an `elsif`.
If the `else` part is actually an `elsif`, we check the `elsif` node in case it contains an `else` within, because that `else` should have the same alignment (base).
If the `verify_authenticity_token` before_action ran, verify that JavaScript responses are only served to same-origin GET requests.
If the action renders a different template, you can include its digest instead.
If the adapter cannot be found, this will default to the Redis adapter.
If the app is a Rails app, make url_helpers available on the session This makes app.url_for and app.foo_path available in the console
If the application returns a "X-Cascade" pass response, this middleware will send an empty response as result with the correct status code.
If the args is just a non-empty options hash, go to the database.
If the argument is a regexp, it will check if the regular expression matches the given file content.
If the argument is a regular hash with keys +:key+ and +"key"+ only one of the values end up in the receiver, but which one is unspecified.
If the argument is a string, it is interpreted to mean the name of the timezone to locate.
If the association has a counter cache it gets that value.
If the attachments are inline, the content type will be "multipart/related", otherwise "multipart/mixed".
If the attribute has more than one error message, yields once for each error message.
If the attribute is an association, records that are marked for destruction are not counted.
If the attribute is an association, the associated object is considered absent if it was marked for destruction.
If the beat fails, we automatically disconnect.
If the cache is cleaned up correctly, subsequent digests should return the same
If the callback chain was halted, returns +false+.
If the channel is in a namespace, then the namespaces are represented by single colon separators in the channel name.
If the class has an initializer, it must accept no arguments.
If the class method does not have a method, then send the method call to the Railtie instance.
If the client wants HTML, we just redirect them back to the person list.
If the code block is provided, then it will be run and its result returned.
If the collection has been already loaded +length+ and +size+ are equivalent.
If the collection has been already loaded +size+ and +length+ are equivalent.
If the collection has been already loaded, +length+ and +size+ are equivalent.
If the collection hasn't been loaded, it fetches the records from the database.
If the collection is empty the root element is "nil-classes" by default:
If the collection is empty the target is set to an empty array and the loaded flag is set to true as well.
If the collection is empty, the first form returns +nil+, and the second form returns an empty array.
If the collection is loaded, the method will iterate through the records to generate the timestamp, otherwise it will trigger one SQL query like:
If the connection dies while sending an SSE to the browser, then the server will receive a +Last-Event-ID+ header with value equal to +id+.
If the connection is no longer active, then this method will reconnect to the database.
If the content is not available and we're inside the layout fiber, then it will begin waiting for the given key and yield.
If the controller cannot be inferred from the test class name, you can explicitly set it with +tests+.
If the cookie was tampered with by the user (or a 3rd party), nil will be returned.
If the current I18n.config object responds to original_config, it means that it has a copy of the original I18n configuration and it's acting as proxy, which we need to skip.
If the current value of +method+ is +tag_value+ the radio button will be checked.
If the data being processed by the `case` condition is normalized in a manner that favors hitting a condition in the splat expansion, it is possible that moving the splat condition to the end will use more memory, and run slightly slower.
If the database adapter supports DDL transactions, all migrations will automatically be wrapped in a transaction.
If the database column does not exist, the +terms_of_service+ attribute is entirely virtual.
If the date part is missing then the current date is used and if the time part is missing then it is assumed to be 00:00:00.
If the day is hidden, the day should be set to the 1st so all month and year choices are valid.
If the else clause is an elsif, it will get its own on_if call so we don't need to process it here.
If the end is on its own line, there is no offense
If the error message is a string it can be empty.
If the favicon changes it is hard to get it updated.
If the fiber is still alive, it means we need something from the template, so start rendering it.
If the file does not exist, a 404 "File not Found" response will be returned.
If the file is found, has valid encoding, and has correct read permissions, the return value is a URI-escaped string representing the filename.
If the file sets the +model_class+ and current instance value is not set, it uses the file value.
If the file starts with a byte order mark (BOM), the column can be non-zero, but then we find out here if there's no space to the left of the first token.
If the first argument is not a Symbol, then it will simply be returned:
If the first is specified, the Product class will look for "productid" instead of "id" as the primary column.
If the flush parameter is true content_for replaces the blocks it is given.
If the future has made this irrelevant, feel free to delete this.
If the generator is invoked with class name Admin, it will check for the presence of "AdminDecorator".
If the given +keys+ don't exist, returns an empty hash.
If the given limit is greater than or equal to the string length, returns a copy of self.
If the header is accepted from the outside world, we sanitize it to a max of 255 chars and alphanumeric and dashes only.
If the hour and minute is passed, then sec is set to 0.
If the hour and minute is passed, then sec, usec and nsec is set to 0.
If the inheritance column value is not self or a valid subclass, raises ActiveRecord::SubclassNotFound
If the inspection loop runs for an excessively high number of iterations, this is likely happening.
If the key is a Hash, then keys will be sorted alphabetically.
If the key is not found nothing is done.
If the key is not found, returns the default value.
If the key to be added already exists and the existing value associated with key is not an Array, it will be wrapped in an Array.
If the last node is or contains a conflicting HEREDOC, we don't want to adjust the brace layout because this will result in invalid code.
If the last response was not a redirect, an exception will be raised.
If the latter is specified, the Product class will look for "product_id" instead of "id".
If the match fails, `nil` will be returned.
If the method that is chained on the do...end block is itself a method with a block, we allow it.
If the model is new, a record gets created in the database, otherwise the existing record gets updated.
If the next id was calculated in advance (as in Oracle), it should be passed in as +id_value+.
If the node is inside a block, it makes no difference if that block is an argument in a method call.
If the node matches, and no block is provided, the new method will return the captures, or `true` if there were none.
If the number of records in the set exceeds the threshold, a warning is logged.
If the object cannot be converted to YAML using +to_yaml+, +inspect+ will be called instead.
If the object does not respond to +to_partial_path+, then an +ArgumentError+ is raised.
If the object is invalid, the saving will fail and false will be returned.
If the object is not persisted, a form for that object, for instance, will route to the create action.
If the object responds to +to_partial_path+, then +to_partial_path+ will be called and will provide the path.
If the object responds to the method the call is attempted and +ArgumentError+ is still raised in case of argument mismatch.
If the optional code block is given and the key is not found, pass in the key and return the result of block.
If the optional parameter +locale+ is specified, the word will be pluralized as a word of that language.
If the optional parameter +locale+ is specified, the word will be singularized as a word of that language.
If the owner is a new record then foreign_key must be present in order to load target.
If the passed value is +true+, the methods are prefixed/suffixed with the name of the enum.
If the password file or database is compromised, the attacker would be able to use the ha1 hash to authenticate as the user at this +realm+, but would not have the user's password to try using at other sites.
If the position is negative, it is counted from the end of the string.
If the primary key is an integer, find by id coerces its arguments using +to_i+.
If the process regenerating the entry errors out, the entry will be regenerated after the specified number of seconds.
If the provided block does not run to completion, and instead raises an exception, any new constants are regarded as being only partially defined and will be removed immediately.
If the proxy class doesn't respond to a certain method, it's forwarded to the encapsulated string.
If the record is new or it has changed, returns true.
If the record no longer exists in the database ActiveRecord::RecordNotFound is raised.
If the relation is the result of a join, you may create a condition which uses any of the tables in the join.
If the request doesn't match the options provided, the request is considered stale and should be generated from scratch.
If the request wasn't encoded `as` something, it's the same as calling `body`.
If the result is true then check for the select case.
If the schema is not specified as part of +name+ then it will only find tables within the current schema search path (regardless of permissions to access tables in other schemas)
If the second parameter is left off, then Dependencies will construct a set of names that the file at +path+ may define.
If the second token is a comment, that means that a line break follows, and that the rules for space inside don't apply.
If the silencer returns +true+ for a given line, it will be excluded from the clean backtrace.
If the size of the nested attributes array exceeds the specified limit, NestedAttributes::TooManyRecords exception is raised.
If the source is not valid UTF-8, we raise an exception when the template is compiled to alert the user to the problem.
If the specified layout is a: String:: the String is the template name Symbol:: call the method specified by the symbol, which will return the template name false::  There is no layout true::   raise an ArgumentError nil::    Force default layout behavior with inheritance
If the status is true the transaction is committed, otherwise a ROLLBACK is issued.
If the subject has interpolations, you can pass them through the +interpolations+ parameter.
If the subnet mask is equal to /32, don't output it
If the table name is not prefixed with a schema, the database will take the first match from the schema search path.
If the target is +nil+ and does not respond to the delegated method a +NoMethodError+ is raised, as with any other value.
If the template engine handles encodings, we send the encoded String to the engine without further processing.
If the template was not compiled yet, it is done exactly before rendering.
If the time deltas were processed first, the following datetimes would be advanced to 2010/04/01 instead.
If the type is prefixed with a scope operator then we assume that the type_name is an absolute reference.
If the user accepts, the form is processed normally, otherwise no action is taken.
If the user accepts, the link is processed normally, otherwise no action is taken.
If the user didn't specify an encoding, and the handler handles encodings, we simply pass the String as is to the handler (with the default_external tag)
If the user has explicitly decided to NOT raise errors, pass that option to I18n.
If the user is given a way to change their locale, they will also be able to change the relative value of the currency displayed with this helper.
If the value is :schema_search_path (the default), any schemas listed in schema_search_path are dumped.
If the various assert methods are not sufficient, then you may use this object to inspect the HTTP response in detail.
If the verb is not GET or POST, which are natively supported by HTML forms, the form will be set to POST and a hidden input called _method will carry the intended verb for the server to interpret.
If there are method calls chained to the right hand side of the assignment, we let rhs be the receiver of those method calls before we check if it's an if/unless/while/until.
If there are method calls chained to the right hand side of the assignment, we let rhs be the receiver of those method calls before we check its indentation.
If there are more blocks in the chain, they will be found by subsequent calls to on_block.
If there are multiple proxies, that header may contain a list of IPs.
If there are no parentheses around the arguments, then braces and do-end have different meaning due to how they bind, so we allow either.
If there are none to keep, returns nil.
If there are other threads or processes there is a race condition between both calls and it could be the case that you end up with two similar records.
If there are parentheses around the block, check if that is being used.
If there is a trailing hash arg without explicit braces, like this:
If there is data in the cache with the given key, then that data is returned.
If there is data in the cache with the given keys, then that data is returned.
If there is no content type passed in via headers, and there are no attachments, or the message is multipart, then the default content type is used.
If there is no such data in the cache (a cache miss), then +nil+ will be returned.
If there is trailing whitespace, then that must be dealt with first.
If there will be no +:tablet+ variant declared, +:phone+ variant will be picked:
If there's no .rubocop.yml there either, the path to the default file is returned.
If these cops try to autocorrect the same file at the same time, bad things are liable to happen
If these requires were at the top of the file the constant would not be defined by the time their files were loaded.
If they are both set, it means that either:
If they do have such a constant, then this const_missing must be due to from_mod::const_name, which should not return constants from from_mod's parents.
If they want JavaScript, then it is an Ajax request and we render the JavaScript template associated with this action.
If this fails, then try it as a plain text password.
If this is a money type column and there are any currency symbols, then strip them off.
If this is an anonymous mailer, this method will return +anonymous+ instead.
If this is the case, Active Record falls back to the previously used LEFT OUTER JOIN based strategy.
If this offense is within a line range that is already being realigned by autocorrect, we report the offense without autocorrecting it.
If this option is not passed, the previous default value (if any) will be used.
If this value is `false` (the default), a ClientDisconnected exception will be raised.
If this value is `true`, calling `write` after the client disconnects will result in the written content being silently discarded.
If those elements are ActiveRecord::Base's, then this triggers the various method_missing's that we have, which significantly impacts upon performance.
If token Authorization header is present, call the login procedure with the present token and options.
If true, +to_time+ preserves the timezone offset of receiver.
If true, Active Record and Active Model callbacks returning +false+ will halt the entire callback chain and display a deprecation message.
If true, the default table name for a Product class will be +products+.
If true, use ISO 8601 format for dates and times.
If type wasn't provided, try guessing from file extension.
If using Active Record's time zone support configure the connection to return TIMESTAMP WITH ZONE types in UTC.
If using threads and workers together the concurrency of the application would be max `threads` * `workers`.
If validations for any of the associations fail, their error messages will be applied to the parent.
If value is true (default), attempting to update a record will result in an error.
If we add it to the previous example:
If we are asked to autocorrect source code read from stdin, the only reasonable place to write it is to stdout Unfortunately, we also write other information to stdout So a delimiter is needed for tools to easily identify where the autocorrected source begins
If we are inside a Rails application this method performs an exec and thus the rest of this script is not run.
If we call 'options' with it unset, we get double help banners.
If we deleted one of a person's tasks, we would probably not want the project to be deleted.
If we exhaust the search there is no executable, this could be a call to generate a new application, so restore the original cwd.
If we find one, we'll encode the String in that encoding, otherwise, we'll use the default external encoding.
If we get here a root directory is not an ascendant of path.
If we get here, it means that NoMethodError was not raised.
If we get no exception here, then either we re-connected successfully, or we never actually got disconnected.
If we got any syntax errors, return only the syntax offenses.
If we have a magic comment in the original migration, insert our comment after the first newline(end of the magic comment line) so the magic keep working.
If we replace the brace with a brace plus space (rather than just inserting a space), then any removal of the same brace will give us a clobbering error.
If we took a while to get the lock, we may have been halted in the meantime.
If we're here then we haven't found among non-private methods but found among all methods.
If you absolutely must write from within a function use +concat+.
If you are behind multiple proxy servers (like NGINX to HAProxy to Unicorn) then you should test your Rack server to make sure your data is good.
If you are having to call this function, you are likely doing something wrong.
If you are organising your models within modules you can add a prefix to the models within a namespace by defining a singleton method in the parent module called table_name_prefix which returns your chosen prefix.
If you are organising your models within modules, you can add a suffix to the models within a namespace by defining a singleton method in the parent module called table_name_suffix which returns your chosen suffix.
If you are upgrading an existing Rails 3 app, you should leave your existing secret_token in place and simply add the new secret_key_base.
If you are using Unicorn with NGINX, you may need to tweak NGINX.
If you are using XHR requests other than GET or POST and redirecting after the request then some browsers will follow the redirect using the original request method.
If you are using a mounted engine and you need to use a polymorphic_url pointing at the engine's routes, pass in the engine's route proxy as the first argument to the method.
If you are using file uploads then you will also need to set the multipart option for the form tag:
If you are using inheritance with ActiveRecord and don't want child classes to utilize the implied STI table name of the parent class, this will need to be true.
If you are using jQuery with jquery-rails this happens automatically.
If you attempt to access a field except +id+ that is not in the initialized record you'll receive:
If you call a complicated SQL query which spans multiple tables the columns specified by the SELECT will be attributes of the model, whether or not they are columns of the corresponding table.
If you care about that, then you need to explicitly drop or ignore those headers sometime before this middleware runs.
If you care to define how to move up and down in these cases, you should define the +up+ and +down+ methods as before.
If you choose to name the composition the same as the attribute's name, it will be the only way to access that attribute.
If you decide to define multiple applications, then the first application that is initialized will be set to +Rails.application+, unless you override it with a different application.
If you decide to define rake tasks, runners, or initializers in an application other than +Rails.application+, then you must run them manually.
If you discover an incorrect inflection and require it for your application or wish to define rules for languages other than English, please correct or add them yourself (explained below).
If you do not provide a +block+, it will return an Enumerator for chaining with other methods:
If you do not want to use any test framework, you can do:
If you do pass a block, you can render specific templates of your choice:
If you do this, then Mail will take the file name and work out the mime type.
If you do this, you do not need to do anything else for things to "just work".
If you do, Rails will not try to encode the String into the default_internal, passing you the unaltered bytes tagged with the assumed encoding (from default_external).
If you don't have SSL certificates for each of the asset hosts this technique allows you to avoid warnings in the client about mixed media.
If you don't have a layout, just render the thing and concatenate the final result.
If you don't have a type column defined in your table, single-table inheritance won't be triggered.
If you don't just want to parlay the broadcast unfiltered to the subscriber, you can also supply a callback that lets you alter what is sent out.
If you don't like this behavior you can provide a different directory but it must be on the same physical filesystem as the file you're trying to write.
If you don't specify a pattern then the default will be used.
If you don't specify an endpoint, routes will be used as the default endpoint.
If you don't use a proxy, because you are hosted on e.g. Heroku without SSL, any client can claim to have any IP address by setting the X-Forwarded-For header.
If you enable +ParamsWrapper+ for +:json+ format, instead of having to send JSON parameters like this:
If you feel that you need to inject dynamic values, then perhaps you should reexamine whether your application is properly testable.
If you have a layout that by default is applied to all the actions of a controller, you still have the option of rendering a given action or set of actions without a layout, or restricting a layout to only a single action or a set of actions.
If you have a nested route, such as +admin_workshop_path+ you'll have to call that explicitly (it's impossible for +url_for+ to guess that route).
If you have a stream that is related to a model, then the broadcasting used can be generated from the model and channel.
If you have an array of keys you want to limit to, you should splat them:
If you have an attribute that needs to be saved to the database as an object, and retrieved as the same object, then specify the name of that attribute using this method and it will be handled automatically.
If you have both secret_token and secret_key_base set, your cookies will be encrypted, and signed cookies generated by Rails 3 will be transparently read and encrypted to provide a smooth upgrade path.
If you have images as application resources this method may conflict with their named routes.
If you have multiple class-specific databases, the transaction will not protect interaction among them.
If you have secret_key_base set, your cookies will be encrypted.
If you hold a reference to a user record, but the name is changed while that reference is held, you may be sending stale data if you don't take precautions to avoid it.
If you look directly to the database you cannot assume that's the entire collection because new records may have been added to the target, etc.
If you modify this collection please update the API of +permit+ above.
If you need a float that big, something is wrong with you.
If you need to access the subject, from or the recipients in the view, you can do that through message object:
If you need to access this auto-generated method from other places (such as a model), then you can do that by including Rails.application.routes.url_helpers in your class:
If you need to address multiple instances of the same class in the same view, you can prefix the dom_class:
If you need to address multiple instances of the same class in the same view, you can prefix the dom_id:
If you need to create the application database on another system, you should be using db:schema:load, not running all the migrations from scratch.
If you need to disable this for any reason (e.g. development) then you can use an +:if+ or +:unless+ condition.
If you need to disconnect a given connection, you can go through the RemoteConnections.
If you need to do more complex things with a default scope, you can alternatively define it as a class method:
If you need to output JSON elsewhere in your HTML, you can just do something like this, as any unsafe characters (including quotation marks) will be automatically escaped for you:
If you need to read back a key from a dom_id in order to query for the underlying database record, you should write a helper like 'person_record_from_dom_id' that will extract the key either based on the default implementation (which just joins all key attributes with '_') or on your own overwritten version of the method.
If you need to redirect on the condition of something, then be sure to add "and return" to halt execution.
If you need to send attachments with no content, you need to create an empty view for it, or add an empty body parameter like this:
If you need to share the same extensions between many associations, you can use a named extension module.
If you need to use a MIME type which isn't supported by default, you can register your own handlers in +config/initializers/mime_types.rb+ as follows.
If you need to use dots as part of the +:id+ parameter add a constraint which overrides this restriction, e.g:
If you need to work on all current children, new and existing records, +load_target+ and the +loaded+ flag are your friends.
If you need unescaped contents, set this to false.
If you only have secret_token set, your cookies will be signed, but not encrypted.
If you override this method to handle additional cases, you may also provide a method (like _handle_method_missing) to handle the case.
If you pass a Symbol as the first argument, then a corresponding cache store class under the ActiveSupport::Cache namespace will be created.
If you pass a single Fixnum, returns a substring of one character at that position.
If you pass any additional configuration options, they will be passed to the class and available as +options+, please refer to the class version of this method for more information.
If you pass any additional configuration options, they will be passed to the class and available as +options+:
If you pass arguments to "yield" then this will be passed to the block.
If you perform a DDL operation, then any created savepoints will be automatically released.
If you preload your test database with all fixture data (probably in the rake task) and use transactional tests, then you may omit all fixtures declarations in your test cases since all the data's already there and every case rolls back its changes.
If you specify a symbol, that attribute will be updated with the current time in addition to the updated_at/on attribute.
If you try to define a set of rake tasks on the instance, these will get passed up to the rake tasks defined on the application's class.
If you use `permit` with just the key that points to the nested attributes hash, it will return an empty hash.
If you use a helper method, for example, inside a cached block and you then update that helper, you'll have to bump the cache as well.
If you use this option you need to make sure to reconnect any threads in the `on_worker_boot` block.
If you want a gem to behave as an engine, you have to specify an +Engine+ for it somewhere inside your plugin's +lib+ folder (similar to how we specify a +Railtie+):
If you want ordered fixtures, use the omap YAML type.
If you want to add conditions to your included models you'll have to explicitly reference them.
If you want to associate with a class in another module scope, this can be done by specifying the complete class name.
If you want to cache the statement without the values you can use the +bind+ method of the block parameter.
If you want to customize your source root, you should use source_root.
If you want to delete many rows quickly, without concern for their associations or callbacks, use delete_all instead.
If you want to disable color in console, do:
If you want to ensure associated objects are revalidated on every update, use +validates_associated+.
If you want to ensure your destination root is clean before running each test, you can set a setup callback:
If you want to escape all content, you should invoke the +h+ method before calling the text helper.
If you want to explicitly render only certain templates, pass a block:
If you want to expose your action to GET, use +get+ in the router:
If you want to expose your action to both GET and POST, use:
If you want to load all posts (including posts with no approved comments) then write your own LEFT OUTER JOIN query using ON
If you want to pass non-primitive types, you will have to handle that in your application.
If you want to replace any header which already exists, first set it to +nil+ in order to reset the value otherwise another field will be added for the same header.
If you want to share just a few specific helpers you can add them to application's helpers in ApplicationController:
If you want to use a different hash algorithm, you can change it by providing `:digest` key as an option while initializing the verifier:
If you want to use an inline method, such as a proc, do something like this:
If you want to use another serialization method, you can set the serializer in the options hash upon initialization:
If you want to use encoding other than Base64 then you will need to pass encoding type along with the pre-encoded content as Mail doesn't know how to decode the data:
If you want to validate that a child record is associated with a parent record, you can use the +validates_presence_of+ method and the +:inverse_of+ key as this example illustrates:
If you want your mailer to be able to process incoming messages, you'll need to implement a +receive+ method that accepts the raw email string as a parameter:
If you wish to disable this emulation you can add the following line to your application.rb file:
If you'd prefer to use numeric prefixes, you can turn timestamped migrations off by setting:
If you're not going to be using any of the options like collections or layouts, you can also use the short-hand defaults of render to render partials.
If you're not streaming a broadcasting at the very moment it sends out an update, you will not get that update, even if you connect after it has been sent.
If you're on MySQL, then do not use DDL operations in nested transactions blocks that are emulated with savepoints.
If you're running multiple Ruby on Rails server processes (which is the case if you're using mongrel_cluster or Phusion Passenger), then this means that Rails server process instances won't be able to share cache data with each other and this may not be the most appropriate cache in that scenario.
If you're using named routes, they can be easily tested using the original named routes' methods straight in the test case.
If you've set specific values, they'll be left alone.
If your JSON is being used downstream for insertion into the DOM, be aware of whether or not it is being inserted via +html()+.
If your cache is on a shared infrastructure, you can define a namespace for your cache entries.
If your code is intended for general consumption, test with multiple database backends.
If your database supports setting the isolation level for a transaction, you can set it like so:
If your environment matches this description and you cannot authenticate, try this rule in your Apache setup:
If your proxies aren't removed, pass them in via the +custom_proxies+ parameter.
If your railtie has Rake tasks, you can tell Rails to load them through the method +rake_tasks+:
If your resource has associations defined, for example, you want to add comments to the document given that the routes are set correctly:
If your tables share a common prefix, it will only appear once at the beginning.
If your template cache depends on multiple sources (try to avoid this to keep things simple), you can name all these dependencies as part of an array:
If your type has the same name as a native type for the current adapter, an exception will be raised unless you specify an +:override+ option.
If your type is only meant to be used with a specific database adapter, you can do so by passing +adapter: :postgresql+.
If your type returns an object which could be mutated, you should override this method.
IfUnlessModifier depends on the configuration of LineLength.
Ignore empty literals.
Ignore implicit literals.
Ignore it when generating English guides.
Ignore one-liners.
Ignore that the client has disconnected.
Ignored by non-text columns (+true+ by default).
Ignored columns won't have attribute accessors defined, and won't be referenced in SQL queries.
Ignores nil values
Imagine a list with two types of users:
Impersonating a connection requires a TaggedLoggerProxy'ied logger.
Implement for PostgreSQL, Oracle, ...
Implement the required interface for Rails::Generators::Migration.
Implementations that support delete_matched should call this method to translate a pattern that matches names into one that matches namespaced keys.
Implementers can decide to either raise an exception or provide a default in case the record uses a composite primary key.
Implementors should call super if they override the default implementation.
Implements a mailer preview interceptor that converts image tag src attributes that use inline cid: style urls to data: style urls so that they are visible when previewing an HTML email in a web browser.
Implements methods that allow rendering from a view context.
Implements the ActiveSupport::LogSubscriber for logging notifications when email is delivered or received.
Implements the details of eager loading of Active Record associations.
Implements the ids reader method, e.g. foo.item_ids for Foo.has_many :items
Implicit multipart
Implicit template rendering is not performed if any attachments or parts have been added to the email.
In MySQL 5.6, CLIENT_MULTI_RESULTS is enabled by default.
In MySQL 5.7.5 and up, ONLY_FULL_GROUP_BY affects handling of queries that use DISTINCT and ORDER BY.
In Rails, a resourceful route provides a mapping between HTTP verbs and URLs and controller actions.
In Rails, this is usually achieved by creating the form using +form_for+ and a number of related helper methods.
In Ruby 2, source code encoding defaults to UTF-8.
In a chain of method calls, we regard the top send node as the base for indentation of all lines following the first.
In a controller, for example:
In a few cases, the helper proxies to 'controller' or request.
In a great majority of cases, this is what is wanted.
In a multi-threaded environment they should only be set once at boot-time and never mutated at runtime.
In addition to being available in the database, the fixture's data may also be accessed by using a special dynamic method, which has the same name as the model, and accepts the name of the fixture to instantiate:
In addition to saving, it also destroys any associated records that were marked for destruction.
In addition to the basic accessors, query methods are also automatically available on the Active Record object.
In addition to these specific assertions, you also have easy access to various collections that the regular test/unit assertions can be used against.
In addition to using the standard template helpers provided, creating custom helpers to extract complicated logic or reusable functionality is strongly encouraged.
In addition you can have multiple session instances open simultaneously in a test and extend those instances with assertion methods to create a very powerful testing DSL (domain-specific language) just for your application.
In addition, both must be a regular expression or a proc or lambda, or else an exception will be raised.
In addition, default connection parameters of libpq can be set per environment variables.
In addition, it will destroy the association if it was marked for destruction.
In addition, parameters can be marked as required and flow through a predefined raise/rescue flow to end up as a 400 Bad Request with no effort.
In addition, this allows a single partial to be used to generate form inputs for both edit and create forms.
In all cases, we transcode the resulting String to the UTF-8.
In almost all cases, the sql type should only be used to change quoting behavior, when the primitive to represent the type doesn't sufficiently reflect the differences (varchar vs binary) for example.
In an autoloaded user.rb like this
In an isolated engine, the prefix will be omitted in url helpers and form fields, for convenience.
In any case the status flag is returned.
In any case, +preload_associations+ will preload the all associations records by flattening +records+.
In application.rb.
In both cases, if an offset is negative, it is counted from the end of the string.
In both cases, nil is returned if there is no match.
In both instances, valid attribute keys are determined by the column names of the associated table -- hence you can't have attributes that aren't part of the table columns.
In case of any error while parsing data ParamsParser::ParseError is raised.
In case of nil parameter it sets the charset to utf-8.
In case the layout continues yielding, we need to resume the fiber until all yields are handled.
In case we get back a String from a handler that is not in BINARY or the default_internal, encode it to the default_internal
In contrast to the CyclomaticComplexity cop, this cop considers `else` nodes as adding complexity.
In each of these cases, the named routes remain the same as if you did not use scope.
In either case the merge respects the semantics of indifferent access.
In general, an existing record may either be updated with the new set of attribute values or be replaced by a wholly new record containing those values.
In general, this means that templates will be UTF-8 inside of Rails, regardless of the original source encoding.
In general, this module should not be included on its own, as it is usually included by url_helpers (as in Rails.application.routes.url_helpers).
In invalid cases, an error from the database is thrown.
In many cases you will want to wrap the above in another helper, so you could do something like the following:
In most cases such calls can be replaced with an explicit array creation.
In most cases, fetching large number of records can be performed efficiently using the ActiveRecord::Batches methods.
In normal cases, this method returns the same name as it receives.
In offense message, we want to show the assignment LHS rather than the entire assignment
In order for both of these features to be specified independently, both an object name (represented by either a symbol or string) and the object itself can be passed to the method separately -
In order for the associations to work as expected, ensure that you store the base model for the STI models in the type column of the polymorphic association.
In order to benefit from streaming you would want to rewrite it as:
In order to change engine's priority you can use +config.railties_order+ in the main application.
In order to deploy this code, we should be able to handle any unmasked tokens that we've issued without error.
In order to do so, this module requires the host class to implement +env+ which needs to be Rack-compatible and +request+ which is either an instance of +ActionDispatch::Request+ or an object that responds to the +host+, +optional_port+, +protocol+ and +symbolized_path_parameter+ methods.
In order to find the first address that is (probably) accurate, we take the list of IPs, remove known and trusted proxies, and then take the last address left, which was presumably set by one of those proxies.
In order to override this behavior, take a look at the private method +read_attribute_for_serialization+.
In order to test those situations, it may be necessary to require another library for the duration of one spec
In order to use DatabaseTasks, a few config values need to be set.
In order to use any of the customized resolvers above in a Rails application, you just need to configure ActionController::Base.view_paths in an initializer, for example:
In order to use instantiated fixtures with preloaded data, set +self.pre_loaded_fixtures+ to true.
In order to use streaming, you will need to use a Ruby version that supports fibers (fibers are supported since version 1.9.2 of the main Ruby implementation).
In order to use these methods to access fixtured data within your testcases, you must specify one of the following in your ActiveSupport::TestCase-derived class:
In order to use this module, all you need is to implement view_renderer that returns an ActionView::Renderer object.
In order to work with ActionController, a Context must just include this module.
In other cases, it won't match any style at all
In other words, associations which could also be represented as has_and_belongs_to_many associations.
In other words, if the Jaro distance is less than this value, JaroWinkler.distance returns the raw Jaro distance.
In other words, if you want to concatenate several times to the same buffer when rendering a given template, you should use +content_for+, if not, use +provide+ to tell the layout to stop looking for more contents.
In other words, we make the request so that it operates on a single entity's person.
In particular:
In rare circumstances you might need to access the mapping directly.
In rare instances, web servers or front proxies strip authorization headers before they reach your application.
In some cases, like a single table inheritance setup, you might have a bunch of explicit dependencies.
In some cases, the code under test will happen to match an alternative style.
In some cases, you may want to provide a boolean hook.
In strict mode, column.default should be nil.
In such a situation you must decide whether to leave that migration or rename the migration in the application and rerun copying migrations.
In such actions, you want to delay queries execution as much as you can.
In such cases, all you need to do is to call refresh passing in the view object.
In such cases, you don't want to do changes in places but use setters:
In tests you can simply pass the URL or named route to +get+ or +post+.
In that case it is preferable to either use +check_box_tag+ or to use hashes instead of arrays.
In that case, +options+ and the block will be used by create_table.
In that case, +type+ and +options+ will be used by add_column.
In that case, batch processing methods allow you to work with the records in batches, thereby greatly reducing memory consumption.
In that case, it'll work just like normal subclasses with no special magic for differentiating between them or reloading the right type with find.
In that case, the join dependency for SpecialCategorizations is constructed without knowledge of the preexisting join in joins_values to categorizations (by way of the `has_many :through` for categories).
In that case, we must force an "early" commit: we're about to freeze the headers, so this is our last chance.
In the Asset example, you'd need an +attachable_id+ integer column and an +attachable_type+ string column.
In the above block, a +FormBuilder+ object is yielded as the +person_form+ variable.
In the above case, because the controller was explicitly given, but no action, the action is implied to be "index", not the recalled action of "show".
In the above example posts with no approved comments are not returned at all, because the conditions apply to the SQL statement as a whole and not just to the association.
In the above example, the configuration from the first application was used to initialize the second application.
In the authentication filter:
In the case of a belongs_to relationship, an association key can be used to specify the model if an ActiveRecord object is used as the value.
In the case of the example above, the template would be fed +ad_iteration+.
In the controller.
In the dynamically generated methods below, a call to `super` is used to continue iterating over the children of a node.
In the end it appends the regular report data in the clang style format.
In the example above +render+ is the name of the event, and the rest is called the _payload_.
In the example above, if the format is xml, it will render:
In the examples above, the object to be created or edited was represented by a symbol passed to +form_for+, and we noted that a string can also be used equivalently.
In the following example the Post model has many Comments stored within it in a NoSQL database, thus there is no primary key for comments.
In the following example, the looping on users will always be done when the three columns 'first_name', 'last_name' and 'full_name' exist, even when migrating down:
In the future, this might become an optional require.
In the last case, the following paths map to +PostsController+:
In the meantime that first process will go ahead and will write into cache the new value.
In the normal case the loop is only executed once.
In the rare case that a race condition occurs, the database will guarantee the field's uniqueness.
In the simple case, MySQL allows us to place JOINs directly into the UPDATE query.
In these cases, the variable `foo` is not explicitly referenced, but it can be considered used implicitly by the `super` or `binding`.
In these cases, you can mix ERB in with your YAML fixtures to create a bunch of fixtures for load testing, like:
In these examples, we have three implicit lookup scenarios: * The BankController uses the "bank" layout.
In this case "kind" is "before" and "name" is "save".
In this case +last_modified+ will be set by calling +maximum(:updated_at)+ on the collection (the timestamp of the most recently updated record) and the +etag+ by passing the object itself.
In this case +last_modified+ will be set by calling +updated_at+ and +etag+ by passing the object itself.
In this case Rails will simply infer the appropriate URL from the record itself.
In this case it deletes all the entries in the specified file store directory except for .keep or .gitkeep.
In this case it is usually more natural to include an association which has conditions defined on it:
In this case, if you use this:
In this case, make sure you return a String from your handler encoded in the default_internal.
In this case, there must be a +type+ column in the posts table.
In this case, you can use a singular resource to map /profile (rather than /profile/:id) to the show action.
In this case, you can use a singular resource to map /profile (rather than /profile/:id) to the show action:
In this code:
In this context +:kind+ and +:name+ have special meanings: +:kind+ refers to the kind of callback (before/after/around) and +:name+ refers to the method on which callbacks are being defined.
In this description, 'association name' shall refer to the name passed to an association creation method.
In this example archived articles are not being taken into consideration when validating uniqueness of the title attribute:
In this example, if any before validate callbacks returns +false+, any successive before and around callback is not executed.
In this example, the :iphone format will be used if it's available, otherwise it'll fallback to the :html format.
In this example, the auto-correction (changing "fail" to "raise") creates a new problem (alignment of parameters), which is also corrected automatically.
In this respect they are analogs of ActionDispatch::Callback's before and after callbacks.
In this scenario, the delete method won't actually work: it can only be used if the association on the join model is a belongs_to.
In this usage, the argument passed to the block (+format+ above) is an instance of the ActionController::MimeResponds::Collector class.
In this way the server can limit the time of the nonce's validity.
In those cases, we'll set up a simple mock
In those cases, you can resort to named bind variables instead.
In which case we should just eager load them.
In which case, define them below.
In your ERB templates, use this method to escape any unsafe content.
In your integration tests, you can do something like this:
In your router:
Include any trailing whitespace so we don't create a syntax error.
Include in a cookie jar to allow chaining, e.g. cookies.permanent.signed
Include the default authenticity_token, which is only generated when its set to nil, but we needed the true value to override the default of no authenticity_token on data-remote.
Include user ID in the path to make sure the user has write access.
Included by default
Included in the Action Pack is the Action View, which enables rendering of ERB templates.
Includes +url_for+ into the host class (e.g. an abstract controller or mailer).
Includes +url_for+ into the host class.
Includes methods for executing and performing jobs instantly.
Includes microseconds if the value is a Time responding to usec.
Includes the +perform_later+ method for job initialization.
Includes the ability to override the default queue name and prefix.
Includes the ability to override the default queue priority.
Includes the setter method for changing the active queue adapter.
Including fractionals
Including in a class uses an inheritable hash.
Including the active Rails version, Ruby version, Rack version, and so on.
Incoming messages are then routed to these channel subscriptions based on an identifier sent by the Action Cable consumer.
Increase timeout so the server doesn't disconnect us.
Increment a cached value.
Increment a numeric field by one, via a direct SQL update.
Increment an integer value in the cache.
Increment symbol counter.
Increment the current level
Increments an already existing integer value that is stored in the cache.
Increments an integer value in the cache.
Indeed it would be prettier to do this in PostgreSQLColumn.string_to_decimal but would break form input fields that call value_before_type_cast.
Indents the lines in the receiver:
Index operator.
Indexes are appended for any more successive uses of the table name.
Indicates if the model is persisted.
Indicates whether the table associated with this class exists
Individual cache implementations may support additional options.
Inflections are locale specific, and you may define rules for as many different locales as you wish.
Initialize ORM::Generators::ActiveModel to access instance methods.
Initialize a new MessageEncryptor.
Initialize an empty model object from +coder+.
Initialize cache early in the stack so railties can make use of it.
Initialize the Rails application.
Initialize the application
Initialize the application passing the given group.
Initialize the logger early in the stack in case we need to log some deprecation.
Initialized with URL configuration strings.
Initializes +attribute+ to zero if +nil+ and adds the value passed as +by+ (default is 1).
Initializes +attribute+ to zero if +nil+ and subtracts the value passed as +by+ (default is 1).
Initializes a new model with the given +params+.
Initializes and connects a PostgreSQL adapter.
Initializes new record from relation while maintaining the current scope.
Initializing Codepoint object with default values
Initializing the cache is done by passing the statement in the create block:
Initiate a manual reload
Inner class to DeprecatedClassMethods.
Inner if, case, rescue, or ensure node.
Input fields are created by calling methods defined on the form builder, which means they are able to generate the appropriate names and default values corresponding to the model attributes, as well as convenient IDs, etc.
Inputs of type "search" may be styled differently by some browsers.
Insert node hash into parent hash correctly.
Inserts new code after the given source range.
Inserts new code before the given source range.
Inserts the given fixture into the table.
Inside Application
Inside Engine
Inside any Object
Inspired by the Quiet Backtrace gem by thoughtbot.
Install a callback for the given event.
Instances may overwrite the class value in the same way:
Instances of this type are typically created and returned by methods in database adapters.
Instances of this type are typically created by methods in TableDefinition, and added to the +columns+ attribute of said TableDefinition object, in order to be used for generating a number of table creation or table changing SQL statements.
Instantiate a new mailer object.
Instantiate fixtures for every test if requested.
Instantiate the generator.
Instantiates a new column for the table.
Instantiates a new column in the table.
Instantiates objects for all attribute classes that needs more than one constructor parameter.
Instantiates the controller, then executes the action named +name+.
Instead of declaring separate routes for your +index+, +show+, +new+, +edit+, +create+, +update+ and +destroy+ actions, a resourceful route declares them in a single line of code:
Instead of editing this file, please use the migrations feature of Active Record to incrementally modify your database, and then regenerate this schema definition.
Instead of explicitly naming the location of a partial, you can also let PartialRenderer do the work and pick the proper path by checking `to_partial_path` method.
Instead of looking up the complete data each time we need it, we'll just look it up here and assign.
Instead of passing the content as an argument, you can also use a block in which case, you pass your +html_options+ as the first parameter.
Instead of passing the content as an argument, you can also use a block in which case, you pass your +options+ as the second parameter.
Instead of polluting the thread locals namespace:
Instead of writing every template out, you can use a wildcard to match any template in a directory:
Instead of:
Instead use methods +local+, +parse+, +at+ and +now+ on TimeZone instances, and +in_time_zone+ on Time and DateTime instances.
Instead, Action Cable operates through a remote-procedure call model.
Instead, a second model object is created when the create request is received.
Instead, it waits until it's called in a later stage of the execution.
Instead, use RemoteConnections for that.
Instead, use the header to tell browsers to expire HSTS immediately.
Instead, you provide the names and values manually.
Instead, you should simply use +articles_path+, like you would do with your main application.
Instrument the given block by measuring the time taken to execute it and publish it.
InstrumentationRegistry.instrumenter_for(notifier)
Instrumenters are stored in a thread local.
Integration tests have their own setup and teardown.
Interestingly, the exact same view code in the previous example can be used to edit a person.
Internal links (anchors) are checked.
Internally we use column number that start at 0, but when outputting column numbers, we want them to start at 1.
Interoperability problems can be resolved easily with a +to_s+ call.
Interpolated strings that contain more than just interpolation will call `on_dstr` for the entire string and `on_str` for the non interpolated portion of the string
Invalid uuids
Invoice::Lineitem becomes "myapp_invoice_lineitems".
Invoke a generator based on the value supplied by the user to the given option named "name".
Invoke a method on the connection asynchronously through the pool of thread workers.
Invoke hook in cops.
Invoke source_root so the default_source_root is set.
Invoke the helper using the controller name (pluralized)
Invoked after all files are inspected, or interrupted by user.
Invoked at the beginning of inspecting each files.
Invoked at the end of inspecting each files.
Invoked once before any files are inspected.
Invokes +cache_key+ if object responds to +cache_key+.
Invokes Journey::Router::Utils.normalize_path and ensure that (:locale) becomes (/:locale) instead of /(:locale).
Invokes the public method whose name goes as first argument just like +public_send+ does, except that if the receiver does not respond to it the call returns +nil+ rather than raising an exception.
IrreversibleOrderError is raised when a relation's order is too complex for +reverse_order+ to automatically reverse.
Is equivalent to:
Is the same as:
Is used as a before_save callback to check while saving a collection association whether or not the parent was a new record before saving.
It accepts a headers hash.
It accepts limit in the form of symbol, proc, or number-like object (anything that can be compared with an integer).
It accepts two parameters on initialization.
It allows setting your own resolving pattern.
It allows us to do the following:
It allows you to collect information about how you want to structure your application paths by a Hash like API.
It also allows you to update the avatar through the member:
It also checks for lines terminated with a semicolon.
It also defines the attribute methods if they have not been generated.
It also executes some bootstrap initializers (check Rails::Application::Bootstrap) and finishing initializers, after all the others are executed (check Rails::Application::Finisher).
It also finds uses of `alias :symbol` rather than `alias bareword`.
It also provides a convenient way to access source lines.
It also provides some hooks related with process_action, this allows an ORM like Active Record and/or DataMapper to plug in ActionController and show related information.
It also removes hyphens and underscores from file names and replaces them with spaces, returning a space-separated, titleized string.
It also searches for a key specific for the given object:
It also uses the more advanced +create_table+ syntax where you can specify a complete table schema in one block call.
It automatically disables coloring if coloring is disabled in the process globally or the formatter's output is not a terminal.
It basically delegates to other objects like TemplateRenderer and PartialRenderer which actually renders the template.
It basically hides everything that is usually browser related, such as assets and session migration generators, and completely disable helpers and assets so generators such as scaffold won't create them.
It becomes especially helpful when navigating through associations that may return +nil+.
It can also be used to return exceptional conditions:
It can also be used with an explicit receiver:
It can also calculate the sum without the use of a block.
It can also optionally accept the current object as an argument.
It can be asserted that no jobs of a specific kind are enqueued:
It can be helpful to provide these in a migration's +change+ method so it can be reverted.
It can be invoked via the guides:generate rake task within the guides directory.
It can be set to any of the normalizations in NORMALIZATION_FORMS.
It can be used in to load engines' seeds, e.g.:
It can be used to derive a number of keys for various purposes from a given secret.
It can be used to retrieve all kinds of naming-related information (See ActiveModel::Name for more information).
It can be useful if you have a rack application that you would like to wrap with +Engine+ and provide with some of the +Engine+'s features.
It can be useful to access the class that is using that validator when there are prerequisites such as an +attr_accessor+ being present.
It can contain other characters, e.g. a unary plus, but it must start with space.
It can either represent a real HTTP response (i.e. one that is meant to be sent back to the web browser) or a TestResponse (i.e. one that is generated from integration tests).
It can enforce either the use of the class hash rocket syntax or the use of the newer Ruby 1.9 syntax (when applicable).
It can not use cached results.
It can only be called with dot notation.
It can optionally accept single-line methods with no body.
It checks for code like this:
It checks if the action name is valid and returns false otherwise.
It clears the validators that are created with an invocation of +validates_with+ and the callbacks that are set by an invocation of +validate+.
It creates and returns an instance of the ActiveSupport::Multibyte::Chars class which encapsulates the original string.
It differs for namespaced models regarding whether it's inside isolated engine.
It does not instantiate the involved models and it does not trigger Active Record callbacks or validations.
It does not report offenses for built-in global variables.
It does not require Rails but will integrate tightly with it to make background processing dead simple.
It does not save the parent either.
It does this by checking various headers that could contain the address, and then picking the last-set address that is not on the list of trusted IPs.
It does three jobs to enforce secure HTTP requests:
It doesn't count.
It doesn't expose that information directly, so we must hard-code its size:
It doesn't mean you won't have such features if you need them: they're all available for you to include in your application, they're just not part of the default API controller stack.
It doesn't really matter how you do it, but the md5 of the template file must change.
It either runs on a separate or forked process, or on a different thread.
It generates at least one SQL +DELETE+ query per record (or possibly more, to enforce your callbacks).
It has predicate methods for every node type, like this:
It honors the +:dependent+ option.
It includes model name introspections, conversions, translations and validations.
It is 'on' per default.
It is a `send` type.
It is also good to know what is the bare minimum to get Rails booted up.
It is also possible for a cop to keep adding indefinitely to a file, making it bigger and bigger.
It is also possible the combination of additional connection overhead (DNS, SSL) and the overall browser connection limits may result in this solution being slower.
It is also possible to assign a flash message as part of the redirection.
It is also possible to limit the uniqueness constraint to a set of records matching certain conditions.
It is also possible to supply a custom prefix.
It is also possible to supply a custom value:
It is also possible, however, to pass a model object itself to +form_for+.
It is an object with defined null behavior and always returns an empty array of records without querying the database.
It is configurable to enforce one of the styles for both single line and multiline lambdas as well.
It is dramatically faster than the alternatives.
It is easier to do a sanity check here than require the caller to be clever.
It is healthy to consider this edge case because with mtimes in the future reloading is not triggered.
It is heavily inspired by delayed_job and Resque.
It is important that we do not eat more than one newline because formatting may be wrong otherwise.
It is important to keep this file as light as possible the goal for tests that require this is to test booting up rails from an empty state, so anything added here could hide potential failures
It is important we are consistent with how we generate this so that exclusive locking works across migrator versions
It is impossible to properly test read uncommitted.
It is inherited by JoinBase and JoinAssociation.
It is initialized with a block that, when called, starts rendering the template.
It is internal to Rails and can change anytime.
It is no longer enough to wrap it in +synchronize+ because some pool's actions are allowed to be performed outside of the main +synchronize+ block.
It is not applied while updating a record.
It is not used in the Rails internals.
It is one of the easiest ways to prevent the dreaded N+1 problem in which fetching 100 posts that each need to display their author triggers 101 database queries.
It is possible that BracesAroundHashParameters will remove the braces while this cop inserts spaces.
It is possible to specify includes and excludes using the config file, so you can include other Ruby files like Rakefiles and gemspecs.
It is recommended not to use the same verifier for different things, so you can get different verifiers passing the +verifier_name+ argument.
It is recommended that this string be base64 or hexadecimal data.
It is recommended that you provide any options used when creating the foreign key so that the migration can be reverted properly.
It is recommended that you use `sanitize` instead of this method.
It is recommended that your type objects inherit from an existing type, or from ActiveRecord::Type::Value
It is similar to render, except that it does not set the +response_body+ and it should be guaranteed to always return a string.
It is still possible to override that by passing the "value" option.
It is up to you to ensure that the values are semantically meaningful.
It is used for keeping separate connection pools for Active Record models that connect to different databases.
It is your responsibility to ensure that the string contains no malicious content.
It just provides methods to repack Parser's diagnostics/errors into RuboCop's offenses.
It just pushes events to all registered log subscribers.
It lets us return the response code and headers back up the rack stack, and still process the body in parallel with sending data to the client
It mainly supports the methods on Numeric.
It makes sense to turn off this check on sites aimed at non-IP clients (like WAP devices), or behind proxies that set headers in an incorrect or confusing way (like AWS ELB).
It makes the table object available to a block that can then add/remove columns, indexes or foreign keys to it.
It may be larger in the future.
It may be: - a Symbol or a String which specifies a single association name.
It only accepts type objects, and will do its work immediately instead of waiting for the schema to load.
It optionally takes a deprecator as the last argument.
It provides a method to capture blocks into variables through capture and a way to capture a block of markup for use in a layout through content_for.
It provides access to parent nodes and an object-oriented way to traverse an AST with the power of `Enumerable`.
It provides an interface for protecting attributes from end-user assignment.
It provides two options that controls the top-level behavior of new instances:
It purposely does not inherit from Response, because it doesn't need it.
It raises a NameError when the name is not in CamelCase or is not initialized.
It reads legacy cookies signed with the old dummy key generator and encrypts and re-saves them using the new key generator to provide a smooth upgrade path.
It reads legacy cookies signed with the old dummy key generator and signs and re-saves them using the new key generator to provide a smooth upgrade path.
It relies on the fact that partials should follow the naming convention of being prefixed with an underscore -- as to separate them from regular templates that could be rendered on their own.
It reports the default value as null.
It requires the ORDER BY columns in the select list for distinct queries, and requires that the ORDER BY include the distinct column.
It requires you to give a physical path on initialization.
It returns a new value object instead of changing its own values.
It returns an object that can be used to query the database repeatedly.
It returns nil when the name is not in CamelCase or is not initialized.
It seems to be fixed on the current master (0a92c3c).
It should be extended to handle methods whose body is if/else or a case expression with a default branch.
It should look like an integer, or a comma-delimited list of integers, or an Arel SQL literal.
It should never be called on user input.
It should not matter as we are using +HashWithIndifferentAccess+ internally.
It shows how all migrations have two methods +up+ and +down+ that describes the transformations required to implement or remove the migration.
It simply does a direct SQL update for the record with the given ID, altering the given hash of counters by the amount given by the corresponding value:
It takes an instance of a class, a method on that class and an instance variable.
It takes an object, a deprecation message and optionally a deprecator.
It takes either a column name, or the name of a belongs_to association.
It takes raw data from the request and puts it through the parser that is picked based on Content-Type header.
It takes the names of an old (deprecated) constant and of a new constant (both in string form) and optionally a deprecator.
It tests more completely than either unit or functional tests do, exercising the entire stack, from the dispatcher to the database.
It warns only when satisfies all of these: `return` doesn't have return value, the block is preceded by a method chain, the block has arguments, and the method which receives the block is not `define_method`.
It will affect the priority of loading views, helpers, assets and all the other files related to engine or application.
It will also handle cases in which there are more threads than connections: if all connections have been checked out, and a thread tries to checkout a connection anyway, then ConnectionPool will wait until some other thread has checked in a connection.
It will also invoke the db:schema:dump task, which will update your db/schema.rb file to match the structure of your database.
It will also set the Content-Type, Content-Disposition, Content-Transfer-Encoding and encode the contents of the attachment in Base64.
It will be aware when to stop rendering the layout because it needs to search something in the template and vice-versa.
It will be called as is, there will be no database agnostic conversions performed.
It will be inserted into HTML with no additional escaping performed.
It will be merged with ActionController::Renderer.defaults
It will be treated as String."
It will be treated as String." To take full advantage of composite types, we suggest you register your own +OID::Type+.
It will include all of the helpers from engine's directory.
It will include tests that tell you whether your object is fully compliant, or if not, which aspects of the API are not implemented.
It will override the type of existing attributes if needed.
It will register a separate offense for each misaligned *when*.
It will still allow passing just a message, or the construction of an error with more than one argument.
It will use the given +user_content_type+, or multipart if the mail message has any attachments.
It works basically as a command recorder, saving each command to be applied after initialization over the default middleware stack, so you can add, swap, or remove any middleware in Rails.
It works for both inline:
It works like this:
It's a solution to the common problem of adding a field to make a new feature work in your local database, but being unsure of how to push that change to other developers and to the production server.
It's a syntax error.
It's a way to redirect incoming requests to controllers and actions.
It's a wildcard match that we use for `respond_to` negotiation internals.
It's also a good idea to add indexes to each of those columns to speed up the joins process.
It's also important to treat the value objects as immutable.
It's also possible to construct multi-dimensional parameter hashes by specifying keys using brackets, such as:
It's also possible to delegate a method to the class by using +:class+:
It's also possible to pass a String instead of an options hash, which generates an anchor element that uses the value of the String as the href for the link.
It's also possible to specify the instance to be used:
It's automatically configured.
It's common to have resources that are logically children of other resources:
It's definitely a bug.
It's difficult to imagine that anybody would want empty lines around a method body, so we don't make it configurable.
It's even possible to call these dynamic finder methods on relations and named scopes.
It's extremely important to run the syntax check in a clean environment - otherwise it will be extremely slow.
It's implemented as a cop in that it inherits from the Cop base class and calls add_offense.
It's impossible for a method call without parentheses to have a trailing comma.
It's initially stuck on the outer share lock, but as soon as that's released, it can run -- regardless of whether those threads hold share locks.
It's intended that +method+ returns an integer and if that integer is above zero, then the checkbox is checked.
It's just a guess.
It's just an alternative to if/elsif/elsif...
It's like a simple key/value store baked into your record when you don't care about being able to query that store outside the context of a single record.
It's much better to swap that:
It's not a mistake."
It's not possible to derive all render calls like that, though.
It's not possible to halt the validate callback chain.
It's possible to set the fixture's model class directly in the YAML file.
It's possible to stack callbacks by passing them as an array.
It's pretty safe to assume that these calls are not missed by anyone reading code.
It's purely an online queue, though.
It's still possible to use both the stand-alone FormHelper methods and methods from FormTagHelper.
It's strange if interpolation syntax appears inside a static string, but we can't be sure if it's a mistake or not.
It's strongly recommended that you check this file into your version control system.
It's the extra spaces between the keys and values in a hash, since those are handled by the Style/AlignHash cop.
It's the same as Thor default except that the Generator at the end of the class is removed.
It's up to subclasses to implement the stale_state method if relevant.
It's used as the default entry point for generate, destroy and update commands.
It's used by the Rack process that starts the Action Cable server, but is also used by the user to reach the RemoteConnections object, which is used for finding and disconnecting connections across all servers.
It's usually too much work to keep it all synchronized -- something databases already excel at.
It's well-suited for dev/test since it doesn't need an external infrastructure, but it's a poor fit for production since it drops pending jobs on restart.
Iterates through each error key, value pair in the error messages hash.
Its results are tested comprehensively in the inflector test cases.
JRuby will return the value before typecast as string
JSON or Ruby code block errors
JSON, YAML, Marshal are supported out of the box.
JSON.dump will fail if the offense message contains text which is not valid UTF-8
Job Identifier
Job arguments
Job: Any class inheriting from the adapter may set the priority on the job object relative to other jobs.
Job: The number of retries can be set per instance of the job class.
Job: The timeout can be set for each instance of the job class.
Join models are directly deleted.
Joins that are also marked for preloading.
Just 1, 2 is not valid Ruby.
Just change it from its default "localhost" setting.
Just cut off the first part.
Just discard the source if we have a virtual path.
Just in case the error was caused by another process deleting the file first.
Just provide the polymorphic target type and Active Record will take care of the rest.
Just remember: They'll be gone by the time the next action has been performed.
Just reopening it, not defining it
Just run the capify command in root
Keep a duplicate pool so we do not bother others
Keep hooks configuration that are used on prepare_for_invocation.
Keep in mind that all session-oriented requests should be CSRF protected, including JavaScript and HTML requests.
Keep in mind that database adapters handle certain serialization tasks for you.
Keep it for indexing materialized views
Keep our eyes peeled.
Keep track of the state of the source.
Keeps all information about view path and builds virtual path.
Keeps either the entire current flash or a specific flash entry available for the next action:
Keeps the number's precision if nil.
Keeps track of table aliases for ActiveRecord::Associations::JoinDependency
KeyGenerator is a simple wrapper around OpenSSL's implementation of PBKDF2.
Keying them by klass alone would lead to memory leaks in development mode as all previous instances of the class would stay in memory.
Keys are Rails TimeZone names, values are TZInfo identifiers.
Keys are always translated into Strings and are case sensitive.
Keys must be strings.
LATIN CAPITAL LETTER D
LITERAL_REGEX takes all that into account.)
Last argument can specify options: - :direction (default is :up) - :revert (default is false)
Last configurable block to run.
Lastly, if the client wants XML, we render the created person as XML, but with a twist: we also include the person's company in the rendered XML, so you get something like this:
Lastly, simple content can be passed as a parameter:
Layers additional behavior on Time.at so that ActiveSupport::TimeWithZone and DateTime instances can be used when called with a single argument
Layouts are basically just regular templates, but the name of this template needs not be specified statically.
Layouts have access to variables specified in the content pages and vice versa.
Layouts reverse the common pattern of including shared headers and footers in many templates to isolate changes in repeated setups.
Lazy load the Unicode database so it's only loaded when it's actually used
Lean on the protect_from_forgery declaration to mark which actions are due for same-origin request verification.
Leaving the hash off gives the wrong link:
Leaving the response body blank.
Left side bracket has to be able to match multiple types (e.g. :tLBRACK and :tLBRACK2)
Let ActiveSupport::ProxyObject at least raise exceptions.
Let Mail do the delivery actions
Let's break out some more monkeys and pirates.
Let's explain with a full-stack example:
Let's first just optimize it for retrieving the author:
Let's look at some examples using the +simple_format+ method:
Let's look at the code below:
Let's make our predicate matchers read better
Let's make the HABTM fixture go away.
Let's say that you want to create a form pointing to one of the engine's routes.
Let's suppose you are creating a generator that needs to invoke the controller generator from test unit.
Let's take for example this non-persisted object.
Let's use labels instead of IDs:
Lets create a model so we have something to play with
Lets you selectively disable calls to `touch` for the duration of a block.
Like +form_for+, it yields a FormBuilder object associated with a particular model object to a block, and within the block allows methods to be called on the builder to generate fields associated with the model object.
Like +merge+ but the other way around: Merges the receiver into the argument and returns a new hash with indifferent access as result:
Like +titleize+, this is meant for creating pretty output.
Like Action Controller, each mailer class has a corresponding view directory in which each method of the class looks for a template with its name.
Like the Active Record methods, the callback chain is aborted as soon as one of the methods throws +:abort+.
Limit also can be specified as a Proc or a Symbol pointing to a method that should return a number.
Limits the byte size of the string to a number of bytes without breaking characters.
List all validators that are being used to validate a specific attribute.
List all validators that are being used to validate the model using +validates_with+ method.
List of HTTP request methods from the following RFCs: Hypertext Transfer Protocol -- HTTP/1.1 (http://www.ietf.org/rfc/rfc2616.txt) HTTP Extensions for Distributed Authoring -- WEBDAV (http://www.ietf.org/rfc/rfc2518.txt) Versioning Extensions to WebDAV (http://www.ietf.org/rfc/rfc3253.txt) Ordered Collections Protocol (WebDAV) (http://www.ietf.org/rfc/rfc3648.txt) Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol (http://www.ietf.org/rfc/rfc3744.txt) Web Distributed Authoring and Versioning (WebDAV) SEARCH (http://www.ietf.org/rfc/rfc5323.txt) Calendar Extensions to WebDAV (http://www.ietf.org/rfc/rfc4791.txt) PATCH Method for HTTP (http://www.ietf.org/rfc/rfc5789.txt)
Lists the valid migration options
Load Rails Rakefile extensions
Load Rails generators and invoke the registered hooks.
Load Rails runner and invoke the registered hooks.
Load Rake, railties tasks and invoke the registered hooks.
Load actionpack sqlite3 tables
Load app env
Load bcrypt gem only when has_secure_password is used.
Load console and invoke the registered hooks.
Load data from db/seeds.rb file.
Load fixtures for every test.
Load fixtures from the engine
Load fixtures once and begin transaction.
Load routes.rb if it hasn't been loaded.
Load schema information so we don't query below
Load securerandom only when has_secure_token is used.
Load the configs so the require()s are done for custom cops
Load the constant named +const_name+ which is missing from +from_mod+.
Load the file at the provided path.
Load the message, which calls the mailer method.
Load the new sid to be written with the response
Loading listen triggers warnings.
Loading nested relationships is possible using a Hash:
Loads all the given data into +records+ for a singular +association+.
Loads all the given data into +records+ for the +association+.
Loads and returns the entire raw configuration of database from values stored in `config/database.yml`.
Loads the ORM::Generators::ActiveModel class.
Loads the Unicode database and returns all the internal objects of UnicodeDatabase.
Loads the fixtures from the YAML file at +path+.
Localization can also be based purely on the translation of the attribute-name (if you are using ActiveRecord):
Locate a specific time zone object.
Locate the connection of the nearest super class.
Lock a file for a block so only one process can modify it at a time.
Lock this job for this worker.
Locking a record reloads it.
Locking::Pessimistic provides support for row-level locking using SELECT ...
Log subscriber also has some helpers to deal with logging and automatically flushes all logs when the request finishes (via action_dispatch.callback notification) in a Rails environment.
Log tags (+taggers+) can be an Array containing: methods that the +request+ object responds to, objects that respond to +to_s+ or Proc objects that accept an instance of the +request+ object.
Logs a "PostsControllerTest: test name" heading before each test to make test.log easier to search and follow along with.
Long-lived channels (and connections) also mean you're responsible for ensuring that the data is fresh.
Look at last expression of contents if there are parentheses around condition.
Look for and parse json strings that look like ISO 8601 times.
Look for more specific XML-based types and sort them ahead of app/xml
Look inside parentheses around the condition, if any.
Look into those before using this.
Look up the timezone based on the identifier (unless we've been passed a TZInfo::Timezone)
Looks up month names by number (1-based):
Loop body nodes need to be scanned first.
Loop prevention for validation of associations
Loop through the requirements AST
Looping through a collection of records from the database (using the +all+ method, for example) is very inefficient since it will try to instantiate all the objects at once.
Looping through a collection of records from the database (using the Scoping::Named::ClassMethods.all method, for example) is very inefficient since it will try to instantiate all the objects at once.
Loops can be said to have an exit condition, so they add one.
MIT License
MRI 2.0 accepts this case, but I have no idea why it does so and there's no convincing reason to conform to this behavior, so RuboCop does not mimic MRI in this case.
MRI and JRuby return slightly different error messages.
MacroReflection class has info for AggregateReflection and AssociationReflection classes.
Mail will actually use the +:return_path+ in preference to the +:sender+ in preference to the +:from+ field for the 'envelope from' value.
Main body of rescue is always run:
Main render entry point shared by Action View and Action Controller.
Make ConfigLoader reload the default configuration so that its absolute Exclude paths will point into this example's work directory.
Make a very basic app, without creating the whole directory structure.
Make class option aware of Rails::Generators.options and Rails::Generators.aliases.
Make list points stand on their own line
Make named_routes available in the module singleton as well, so one can do: Rails.application.routes.url_helpers.posts_path
Make sure IntegrationTest does not try to delegate these methods to the session object.
Make sure a file path's directories exist.
Make sure all headers are set before calling write or close on your stream.
Make sure an exception is raised if the format is not valid Fixture format.
Make sure file name doesn't exceed file system limits.
Make sure no circular dependency error
Make sure squish returns what we expect:
Make sure that counter incrementing doesn't cause problems
Make sure that each fixture gets its own rendering context so that fixtures are independent.
Make sure that the resulting String to be eval'd is in the encoding of the code
Make sure that you declare the database column used for the serialized store as a text, so there's plenty of room.
Make sure the lock version column gets updated when counters are updated.
Make sure the pool marks the connection in use
Make sure the second save gets the after_create callback called.
Make sure the source is in the encoding of the returned code
Make sure to expand all symlinks in the path first.
Make sure to include them.
Make sure to specify the correct server location in each of your environment config files:
Make sure to use a Proc instead of a lambda, since a Proc allows missing parameters and sets them to nil.
Make sure we are operating on the actual object which is in the association's proxy_target array (either by finding it, or adding it if not found) Take into account that the proxy_target may have changed due to callbacks
Make sure we're not deleting everything
Make sure your actions are thread safe, and this shouldn't be a problem (don't share state across threads, etc).
Make the string respond to read
Make upwards search for .rubocop.yml files stop at this directory.
Makes all the (instance) methods in the helper module available to templates rendered through this controller.
Makes an underscored, lowercase form from the expression in the string.
Makes backticks behave (somewhat more) similarly on all platforms.
Makes it dead easy to do HTTP Basic, Digest and Token authentication.
Makes it dead easy to do HTTP Token authentication.
Makes it easy to check whether a token is one of the brackets.
Makes it possible for the RemoteConnection to disconnect a specific connection.
Makes it seem like the nested associations are just regular associations.
Makes the +new+ method public.
Makes the adapter execute EXPLAIN for the tuples of queries and bindings.
Makes the controller a Rack endpoint that runs the action in the given +env+'s +action_dispatch.request.path_parameters+ key.
Manually update the 'name' attribute in the DB directly
Map ActiveRecords param names to PGs.
Maps asset types to public directory.
Maps logical Rails types to MySQL-specific data types.
Maps logical Rails types to PostgreSQL-specific data types.
Mark a key as being a connection identifier index that can then be used to find the specific connection again later.
Mark all assignments which are referenced in the same loop as referenced by ignoring AST order since they would be referenced in next iteration.
Mark for removal entries that were kept, and delete unkept ones.
Mark the given constant as unloadable.
Mark the matching character as already used
Mark the provided constant name for unloading.
Mark these as private so we don't leak encoding-specific constructs
Markdown generates headers with IDs computed from titles.
Marks a string as trusted safe.
Marks the entire flash or a single flash entry to be discarded by the end of the current action:
Marks this record as read only.
Marks this record to be destroyed as part of the parent's save transaction.
Marshaling an association shouldn't make it unusable by wiping its reflection.
Mary and Bob both have posts in misc, but they are the only ones.
Match literal regex characters, not including anchors, character classes, alternatives, groups, repetitions, references, etc
Match the class name against the given regexp.
Matches a url pattern to one or more routes.
May be overridden to add instrumentation, logging, specialized error handling, or other forms of handler decoration.
May be overridden to change the default stream handling behavior which decodes JSON and transmits to client.
Maybe it got loaded while we were waiting for our lock:
Meant to be used as a sanity check when you are about to assign an associated record.
Meant to be used by ConnectionPool with which it shares a Monitor.
MemCacheStore implements the Strategy::LocalCache strategy which implements an in-memory cache inside of a block.
MemCacheStore is currently the most popular cache store for large production websites.
Memcache keys are binaries.
MemoryStore is thread-safe.
Merge all the texts of an element into the hash
Merges the caller into +other_hash+.
Merges the default options with ones specific to a method call.
Merges the given configuration with the default one.
Message.all.to_xml(skip_types: true)
MessageEncryptor is a simple way to encrypt values which get stored somewhere you don't trust.
Method call with dot on a string literal.
Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from given values.
Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from number of seconds since the Unix epoch.
Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from parsed string.
Method name arg
Method references and callback objects are the recommended approaches, inline methods using a proc are sometimes appropriate (such as for creating mix-ins), and inline eval methods are deprecated.
Methods are not duplicable:
Methods are provided for phone numbers, currency, percentage, precision, positional notation, file size and pretty printing.
Methods can be delegated to instance variables, class variables, or constants by providing them as a symbols:
Methods defined on the FormBuilder are used to generate fields bound to this model.
Methods used by multiple fixtures should be defined in a module that is included in ActiveRecord::FixtureSet.context_class.
Methods which would normally return a String object now return a Chars object so methods can be chained.
Methods will be added for retrieval and query for a single associated object, for which this object holds an id:
Middleware class can be inserted as a Rack handler to be local cache for the duration of request.
Middleware like session, flash, cookies can be added back manually.
MiddlewareStackProxy is a proxy for the Rails middleware stack that allows you to configure middlewares in your application.
Middlewares can also be completely swapped out and replaced with others:
Middlewares that need to manipulate the body won't work with streaming.
Might want a shorter timeout depending on whether the request is a PATCH, PUT, or POST, and if the client is a browser or web service.
MigrationProxy is used to defer loading of the actual migration classes until they are needed
Migrations are currently supported in MySQL, PostgreSQL, SQLite, SQL Server, and Oracle (all supported databases except DB2).
Migrations can manage the evolution of a schema used by several physical databases.
Mime::Type.register "image/jpg", :jpg
Mime::Type.unregister(:mobile)
Mimic Active Record notifications
Minitest `stub` expects the method to be defined.
Minitest passes through Interrupt, catch it manually.
Missing routes keys may be filled in from the current request's parameters (e.g. +:controller+, +:action+, +:id+ and any other parameters that are placed in the path).
Mix this module into your controller, and all actions in that controller will be able to stream data to the client as it's written.
Mixing any of Y, M, D with W is invalid.
Mixing in this module allows you to define the events in the object's life cycle that will support callbacks (via +ClassMethods.define_callbacks+), set the instance methods, procs, or callback objects to be called (via +ClassMethods.set_callback+), and run the installed callbacks at the appropriate times (via +run_callbacks+).
Mobile Safari looks for a different link tag, pointing to an image that will be used if you add the page to the home screen of an iOS device.
Mock out two ORMs
Models uploaded files.
Modifier nodes have special indentation and will be checked by the AccessModifierIndentation cop.
Modifiers should be indented as deep as method definitions, or as deep as the class/module keyword, depending on configuration.
Modifies the amount of an already existing integer value that is stored in the cache.
Modify the template digest
Module includes this module.
Module:: No further processing
Modules get a plain hash.
Monkey patch subscriber to test that only one subscriber per method is added.
More details here https://github.com/whitequark/parser/issues/283
More information can be found in Arguments.
More lazy-loading to keep load time down.
More than one error can be added to the same +attribute+.
Moreover, it gracefully handles module dependencies.
Most actions are variations on these themes.
Most commonly, the streamed broadcast is sent straight to the subscriber on the client-side.
Most commonly, you might group a number of administrative controllers under an +admin+ namespace.
Most databases don't support true nested transactions.
Most hash keys can be matched against a simple regex.
Most jQuery plugins do this.
Most libraries, however, parse non-integer JSON numbers directly as floats.
Most methods expect a +number+ argument, and will return it unchanged if can't be converted into a valid number.
Most notably, the instance methods provided by SchemaStatements are very useful.
Most objects are cloneable, but not all.
Most of the methods in the adapter are useful during migrations.
Most of the queries here are happening in the controller.
Most of the tests mess with the validations of Topic, so lets repair it all the time.
Most of the time it returns a +nil+ match.
Most recently modified file first.
Most template dependencies can be derived from calls to render in the template itself.
Most text helpers by default sanitize the given content, but do not escape it.
Most useful for unit and functional testing.
Mount a Rack-based application to be used within the application.
Mounts a regular expression, returned as a string to ease interpolation, that will match part by part the given constant.
Multipart messages can also be used implicitly because Action Mailer will automatically detect and use multipart templates, where each template is named after the name of the action, followed by the content type.
Multiple delegates to the same target are allowed:
Multiple joins:
Must be a :redirect response.
Must be a string
Must be called within synchronize
Must be done if the transaction block raises an exception or returns false.
Must come after Rack::MethodOverride to properly log overridden methods
Must only be called by the thread that called start_exclusive (and currently holds the lock).
Must repeat the setup because AV::TestCase is a duplication of AC::TestCase
Must return the MySQL error number from the exception, if the exception has an error number.
Must try to match prefixes/suffixes first, or else the matcher with no prefix/suffix will match every time.
Must uniq since instantiating with inner joins will get dupes
MyEngine::Engine.load_seed
MyEngine::Engine.routes.draw do resources :articles end
MyJob.new(*args).perform_now
MyJob.perform_now("mike")
MySQL 5.7 and Oracle do not allow to create duplicate indexes on the same columns
MySQL can't roll back ddl changes
MySQL cannot have defaults on text/blob columns.
MySQL does not allow default values for blobs.
MySQL doesn't allow defaults on TEXT or BLOB columns.
MySQL doesn't support DDL transactions.
MySQL forbids defaults on blob and text columns
MySQL is too stupid to create a temporary table for use subquery, so we have to give it some prompting in the form of a subsubquery.
MySQL returns "SUM(DISTINCT(credit_limit))" as the column name unless an alias is provided.
MySQL uses an implicit default 0 rather than NULL unless in strict mode.
Mysql floats are precision 0..24, Mysql doubles are precision 25..53
Mysql gem compatibility
Mysql2Adapter doesn't have to free a result after using it, but we use this method to write stuff in an abstract way without concerning ourselves about whether it needs to be explicitly freed or not.
N/A: The adapter does not run in a separate process, and therefore doesn't support retries.
N/A: The adapter does not support queueing, and therefore sorting them.
N/A: The adapter does not support queueing.
N/A: This adapter does not run in a separate process, and therefore timeout is unsupported.
NFKC is considered the best normalization form for passing strings to databases and validations.
NOTE - for now, we're only supporting inverse setting from belongs_to back onto has_one associations.
NOTE - not sure that we can actually cope with inverses here
NOTE - the following 4 tables are used by models that have :inverse_of options on the associations
NOTE - these tests might not be meaningful, ripped as they were from the parental_control plugin which would guess the inverse rather than look for an explicit configuration option.
NOTE that scopes defined with a string as a name worked on their own but when called on another scope the other scope was completely replaced
NOTE: "size" is reserved in Oracle
NOTE: Discarded selects will default to 1.
NOTE: Due to backwards compatibility concerns, the collection can't be one of hashes.
NOTE: Each nesting level will merge inherited defaults in addition to their own.
NOTE: If you are going to iterate through each record, you should call each_record on the yielded BatchEnumerator:
NOTE: It's not possible to set the order.
NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag.
NOTE: The default validations with the exception of +uniqueness+ will work.
NOTE: The returned records may not be in the same order as the ids you provide since database rows are unordered.
NOTE: This approach has been deprecated for end-user code in favor of thread_mattr_accessor and friends.
NOTE: This check is performed only if +password_confirmation+ is not +nil+.
NOTE: This method is deprecated.
NOTE: This validation will not fail if the association hasn't been assigned.
NOTE: This validation will not fail while using it with an association if the latter was assigned but not valid.
NOTE: With Ruby 2.4+ the default for +to_time+ changed from converting to the local system time, to preserving the offset of the receiver.
NOTE: You can't set the limit either, that's used to control the batch sizes.
NOTE: queue_classic supports job scheduling since version 3.1.
NOTE: rack-test v0.5 doesn't build a default uri correctly Make sure requested path is always a full uri
NOTE: the JoinDependency constructed here needs to know about any joins already present in `self`, so pass them in
NOTE: this test seems to fail (changeset 1958) only on certain platforms, like OSX, and FreeBSD 5.4.
Name of gem where method is deprecated
NameError is raised when the name is not in CamelCase or the constant is unknown.
Namespace and key will be delimited with a colon.
Necessary to get rerun-snippts working.
Necessary to load A::B for the test
Need to remove unnecessary encoding comment
Need to scan rhs before assignment so that we can mark previous assignments as referenced if rhs has referencing to the variable itself like:
Need to write coverage result under different name
Needed for unary op.
Needed only for testing.
Needed when counting objects with the ObjectSpace
Nest FirmOnTheFly in Firm where Dependencies will see it.
Nest FirmOnTheFly in the test case where Dependencies won't see it.
Nested HATBM
Nested NoMethodError is a different name from the delegation
Nested NoMethodError is the same name as the delegation
Nested attribute writers are normal setter methods named after an association.
Nested attributes allow you to save attributes on associated records through the parent.
Nested attributes for an associated collection can also be passed in the form of a hash of hashes instead of an array of hashes:
Nested classes are given table names prefixed by the singular form of the parent's table name.
Nested classes are prefixed with singular parent table name.
Nested elements yield an +AtomBuilder+ instance.
Nested hash conditions with different keys
Nested hash conditions with same keys
Nested joins:
Nested resources and/or namespaces are also supported, as illustrated in the example:
Nested transactions don't commit until all parent transactions commit, particularly, the fixtures transaction which is begun in setup and rolled back in teardown.
Never blocks.
Never trust parameters from the scary internet, only allow the white list through.
New comment creates a new Notification.
New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes but not yet saved (pass a hash with key names matching the associated table column names).
New record - no changes.
New rules are added at the top.
New values can be assigned to the value object using either another +NetAddr::CIDR+ object, a string or an array.
Ni-ho-nn-go in UTF-8, means Japanese.
Nil values can be cached.
No + to space in URI escaping, only for query params.
No .rubocop.yml file in dir2 means that the paths from default.yml are interpreted as relative to the current directory, so they don't match.
No EnforcedStyle can allow both alignments:
No counter_cache option given
No currency conversion is performed.
No default.
No defaults are needed because Resolver guarantees that the arguments are present and normalized.
No generators
No lexical context is taken into account:
No more than one of the separator in a row.
No namespace found.
No need to deprecate.
No need to handle exception.
No offense if line break inside.
No offense registered for this.
No point in executing the counter update since we're going to destroy the parent anyway
No problem.
No rails cops include app/views by default.
No such attribute would be set for objects of the Message class in that example.
No-one needs Floats that big.
No: Does not allow the priority of jobs to be configured.
No: The adapter will run jobs at the next opportunity and cannot use perform_later.
No: The job is run in the same process.
Nobody should be using it directly, and subclasses (like ActionController::Base) are expected to provide their own +render+ method, since rendering means different things depending on the context.
Nobody should call this method except in Rails internals.
Noisy syntax.
Non related references which are caught in the above scan would be skipped here.
Non-nil checks are allowed if they are the final nodes of predicate.
Non-optimized url helper
Non-reachable constants may be passed if some of the parents were autoloaded and already removed.
Normal ActiveRecord::Base classes are entity objects.
Normal association
Normal hash conditions
Normal use:
Normalization is required because MySQL JSON data format includes the space between the elements.
Normalization of DEVANAGARI LETTER QA breaks when composition exclusion isn't used correctly
Normalize args and options.
Normalize arguments by catching blocks and setting them on :update.
Normalize both text and status options.
Normalize options.
Normalize the list of new constants, and add them to the list we will return
Normalizes +controller_class+ before using.
Normalizes the arguments and passes it on to find_templates.
Normally they should be aligned with an if/unless/while/until/begin/def keyword, but there are special cases when they should follow the same rules as the alignment of end.
Normally we've already committed by now, but it's possible (e.g., if the controller action tries to read back its own response) to get here before that.
Normally when you create controllers, helpers and models inside an engine, they are treated as if they were created inside the application itself.
Normally you'd also just keep domain objects, like Active Records, in there.
Normally, +user_path+ will construct a path with the user object's 'id' in it:
Normally, when you namespace your controllers, you also need to namespace the related routes.
Not a one-liner, so this is an offense.
Not aligned according to `indent` or `outdent` style:
Not all cases can reliably checked, due to Ruby's dynamic types, so we consider only cases when the first argument is an array literal or the second is a string literal.
Not all migrations change the schema.
Not all records have the same class, so group then preload group on the reflection itself so that if various subclass share the same association then we do not split them unnecessarily
Not all web servers support streaming out-of-the-box.
Not corrected
Not defined
Not good enough, but we can't do much about it since there is no specific error for frozen objects.
Not this cop's job to fix end.
Note about replacing already defined headers:
Note also that destroying a record preserves its ID in the model instance, so deleted models are still comparable.
Note an object is not required to implement all APIs in order to work with Action Pack.
Note that +:controller+, +:action+ and +:id+ are interpreted as url query parameters and thus available through +params+ in an action.
Note that +touch+ must be used on a persisted object, or else an ActiveRecordError will be thrown.
Note that Active Record can detect in-place modifications automatically.
Note that Active Record models will automatically detect their primary key.
Note that Interest and Man have the :inverse_of option set
Note that Rails default validators can be overridden inside specific classes by creating custom validator classes in their place such as PresenceValidator.
Note that Rails::Application inherits from Rails::Engine, which inherits from Rails::Railtie and the +new+ method on Rails::Railtie is private
Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.
Note that because +delete_all+ removes records by directly running an SQL query into the database, the +updated_at+ column of the object is not changed.
Note that building your own string from user input may expose your application to injection attacks if not done properly.
Note that content_for concatenates (default) the blocks it is given for a particular identifier in order.
Note that declaring a header multiple times will add many fields of the same name.
Note that fields_for will automatically generate a hidden field to store the ID of the record.
Note that if some blank-like object were initially passed into the query method, then this method will not raise an error.
Note that if the target has not been loaded, it is not considered stale.
Note that if the user has JavaScript disabled, the request will fall back to using GET.
Note that if you are really concerned about your application security, you might consider using +config.force_ssl+ in your config file instead.
Note that if you are working on a guide generation will by default process only that one, so ONLY is rarely used nowadays.
Note that if you do not specify the +:inverse_of+ option, then Active Record will try to automatically guess the inverse association based on heuristics.
Note that if you return a path without a leading slash then the url is prefixed with the current SCRIPT_NAME environment variable.
Note that if you use +permit+ in a key that points to a hash, it won't allow all the hash.
Note that it also means that associations marked for destruction won't be destroyed directly.
Note that it always returns +true+ with boolean attributes.
Note that it handles both ASCII and Unicode whitespace.
Note that keys are treated differently than HashWithIndifferentAccess, meaning that string and symbol keys will not match.
Note that magic comments must be at the first line(except sh-bang).
Note that marking a constant for unloading need only be done once.
Note that meanwhile the class Pet is not reloaded, simulating a class that is present in a plugin.
Note that new records are different from any other record by definition, unless the other record is the receiver itself.
Note that now there can be more than one router in your application, and it's better to avoid passing requests through many routers.
Note that partials are not supported to be rendered with streaming, so in such cases, we just wrap them in an array.
Note that passing custom disallowed types will override the default types, which are Symbol and YAML.
Note that setting the UUID primary key default value to +nil+ will require you to assure that you always provide a UUID value before saving a record (as primary keys cannot be +nil+).
Note that some of its interface is available directly.
Note that some of the migrations may be skipped if a migration with the same name already exists in application.
Note that the +:limit+ option is only applicable to one-to-many associations.
Note that the +do end+ syntax for the redirect block wouldn't work, as Ruby would pass the block to +get+ instead of +redirect+.
Note that the association_scope is merged into the target_scope only when the scope method is called.
Note that the md5 is taken of the entire template file, not just what's within the cache do/end call.
Note that the model is _not_ yet removed from the database:
Note that the model will _not_ be destroyed until the parent is saved.
Note that the proc is evaluated right at the start of the mail message generation, so if you set something in the default hash using a proc, and then set the same thing inside of your mailer method, it will get overwritten by the mailer method.
Note that the redirects are followed until the response is not a redirect--this means you may run into an infinite loop if your redirect loops back to itself.
Note that the request method is not verified.
Note that the request parameter might not be supplied, e.g. when the assets are precompiled via a Rake task.
Note that the return value of validation methods is not relevant.
Note that the status code must be a 3xx HTTP code, or redirection will not occur.
Note that the usec for the time passed will be set to 0 to prevent rounding errors with external services, like MySQL (which will round instead of floor, leading to off-by-one-second errors).
Note that the validator is initialized only once for the whole application life cycle, and not on each validation run.
Note that these are implemented as callbacks, and Rails executes callbacks in order.
Note that these methods do not strictly require +Post+ to be a subclass of ActiveRecord::Base.
Note that this conversion makes some assumptions about the duration of some periods, e.g. months are always 30 days and years are 365.25 days:
Note that this is a "shallow" copy as it copies the object's attributes only, not its associations.
Note that this is a naive implementation because we could have strings and symbols which represent the same association, but that aren't matched by this.
Note that this is an external HTTP-level redirection which will cause the browser to make a second request (a GET to the show action), and not some internal re-routing which calls both "create" and then "show" within one request.
Note that this is currently not recommended since it breaks caching.
Note that this is not just a usage suggestion.
Note that this is simply 'syntactic sugar' for defining an actual class method:
Note that this method actually runs the queries, since the results of some are needed by the next ones when eager loading is going on.
Note that this method removes records from the database ignoring the +:dependent+ option.
Note that this operation instantly fires update SQL without waiting for the save or update call on the parent object, unless the parent object is a new record.
Note that this returns a string and not a class.
Note that this schema.rb definition is the authoritative source for your database schema.
Note that this tolerance only matters if the exception was given as a string, otherwise a NameError will be raised by the interpreter itself when rescue_from CONSTANT is executed.
Note that this will clear anything that is being used to validate the model for both the +validates_with+ and +validate+ methods.
Note that this will unsubscribe all subscriptions with the given name:
Note that unlike reorder, we're only unscoping the named conditions -- not the entire where statement.
Note that using conditions like this can have unintended consequences.
Note that we are including a 30-second boundary around the interval we want to test.
Note that we don't actually need to serialize the jobs since we're performing them in-process, but we do so anyway for parity with other adapters and deployment environments.
Note that when an array is used, the implicit mapping from the values to database integers is derived from the order the values appear in the array.
Note that when options are passed in, you must call +objectify_options+ in order for the model object to get correctly passed to the method.
Note that you can define your own XML parameter parser which would allow you to describe multiple entities in a single request (i.e., by wrapping them all in a single root node), but if you just go with the flow and accept Rails' defaults, life will be much easier.
Note that you can't use HAVING without also specifying a GROUP clause.
Note that, if you try to get errors of an attribute which has no errors associated with it, this method will instantiate an empty error list for it and +keys+ will return an array of error keys which includes this attribute.
Note the filename is not stored.
Note the subtle difference between the two: +assert_routing+ tests that a URL fits options while +assert_recognizes+ tests that a URL breaks into parameters properly.
Note this method does not imply the records are actually removed from the database, that depends precisely on +delete_records+.
Note, all the attributes for all the cases are kept in the same table.
Note, however, the extra bit at the top of that action:
Note, with using explicit self you can only send messages with public or protected scope, you cannot send private messages this way.
Note: +:id+ is always present.
Note: Acronyms that are passed to +pluralize+ will no longer be recognized, since the acronym will not occur as a delimited unit in the pluralized result.
Note: Although it is often much faster than the alternative, destroy, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.
Note: Fixtures are unordered.
Note: How end-of-line comments are associated with code changed in parser-2.2.0.4.
Note: If the day is not included as an option but the month is, the day will be set to the 1st to ensure that all month choices are valid.
Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once.
Note: It is possible for this value to match multiple options as you might have the same option in multiple groups.
Note: Joining, eager loading and preloading of these associations is not fully possible.
Note: MySQL doesn't yet support index order (it accepts the syntax but ignores it).
Note: No Lint/UselessAssignment offense.
Note: Partial indexes are only supported for PostgreSQL and SQLite 3.8.0+.
Note: Regexp expiration is only supported on caches that can iterate over all keys (unlike memcached).
Note: SQLite doesn't support index length.
Note: SSEs are not currently supported by IE.
Note: The new instance will share a link to the same attributes as the original class.
Note: The old instance's sti column value will be changed too, as both objects share the same set of attributes.
Note: The path passed to `--require` is directly passed to `Kernel.require`.
Note: The precision is the total number of significant digits and the scale is the number of digits that can be stored following the decimal point.
Note: This assertion is simply a shortcut for:
Note: This is purely a browser performance optimization and is not meant for server load balancing.
Note: Updating a large number of records will run an UPDATE query for each record, which may cause a performance issue.
Note: You can also use Rails' i18n functionality for this.
Note: `raise_error` refers to us re-raising the error in this method.
Note: depending on your database connector, the result returned by this method may be manually memory managed.
Note: klass will always be valid because when there's a NameError from calling +klass+, +reflection+ will already be set to false.
Note: only supported by MySQL.
Note: only supported by PostgreSQL and MySQL
Note: these next two are kinda odd because they are essentially just testing that the query cache works as it should, but they are here for legacy reasons as they was previously a separate cache on association proxies, and these show that that is not necessary.
Note: this does not capture all cases, for example it would be crazy to try to properly support stale-checking for nested associations.
Note: when using +controller+, the route is simply named after the method you call on the block parameter rather than map.
Nothing is said about existing indentation that mixes spaces and tabs, so there is nothing to test.
Nothing we can do if we are in a transaction because all commands will raise InFailedSQLTransaction
Nothing will be appended to the errors object.
Notice that "rails:generators:test_unit" could be loaded as well, what Rails looks for is the first and last parts of the namespace.
Notice that "rails:generators:webrat" could be loaded as well, what Rails looks for is the first and last parts of the namespace.
Notice that :stream only works with templates.
Notice that events get sent even if an error occurs in the passed-in block.
Notice that for fixnum and float columns empty strings are converted to +nil+.
Notice that no +:id+ parameter was provided to the first +url_for+ call and the helper used the one from the route's path.
Notice that the first argument is the method to be dispatched which is *not* necessarily the same as the action name.
Notice that we use a bang in this instrumentation because you don't want to consume this in production.
Notice that when you add a path using +add+, the path object created already contains the path with the same path value given to +add+.
Notice the 97.18 as a float is greater than 97.18 as a BigDecimal due to floating point precision
Notice this method raises an error if the template to be refreshed does not have a virtual path set (true just for inline templates).
Notice this method takes into consideration the default root path.
Notifications ships with a queue implementation that consumes and publishes events to all log subscribers.
Notifier.welcome(User.first).deliver_later Notifier.welcome(User.first).deliver_later(wait: 1.hour) Notifier.welcome(User.first).deliver_later(wait_until: 10.hours.from_now)
Notifier.welcome(User.first).deliver_now
Now all you have to do is change that timestamp when the helper method changes.
Now it _is_ removed from the database:
Now it's possible to access attributes from the database through the value objects instead.
Now reload, and verify that it gets the DB version, and not the querycache version
Now routes such as +/posts/1+ will no longer be valid, but +/posts/1.1+ will be.
Now update the timestamp.
Now use the Rails insertion
Now verify it's identical to a JSON round trip.
Now we are going to change the template, but it won't change the returned template since the timestamp is the same.
Now we are going to change the template, but it won't change the returned template since we will hit the cache.
Now we will change back the locale and it will still pick the old template.
Now when a new request for the index action is processed, the layout will vary depending on whether the person accessing is logged in or not.
Now when you run:
Now yield to the code that is to define new constants.
Now you can have different transliterations for each locale:
Now you can mount your engine in application's routes just like that:
Now, +Engine+ will get only requests that were not handled by +Application+.
Now, every time something is concatenated to the buffer, it is not appended to an array, but streamed straight to the client.
Now, let's try a file with an extension, really a dot (.)
Now, validate that the source we got back from the template handler is valid in the default_internal.
Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
Number.create(i: 0) rescue ActiveRecord::StatementInvalid ...which we ignore.
Number.transaction do Number.create(i: 0) begin This will raise a unique constraint error...
Numbers are not duplicable:
Numeric types
Numeric values are treated as seconds.
OK let's get our test on
ON DELETE RESTRICT is the default on MySQL
ONLY Use ONLY if you want to generate only one or a set of guides.
ONLY Use ONLY if you want to validate only one or a set of guides.
OPTIMIZE: For faster testing
OPTIMIZE: Makes these specs faster.
Object identifier types
Object includes this module.
Objects of AggregateReflection and AssociationReflection are returned by the Reflection::ClassMethods.
Obtain a row lock on this record.
Obtains the path to where the object's partial is located.
Obtains the specified cache store class, given the name of the +store+.
Obtains the value for a given +scope_type+ and +model+.
Of course, the most common way of specifying a layout is still just as a plain template name:
Of course, you can also query them directly if the scopes don't fit your needs:
Offense occurs in 2 files, limit is 1, so no Exclude.
Offenses are displayed at compact form - just the location of the problem and the associated message.
Offenses are signaled only on assignment to class variables to reduced the number of offenses that would be reported.
Often this can be simplified by passing just the name of the model object to +fields_for+ -
On JRuby and Rubinius, there's a risk that we hang in tokenize() if we don't set the all errors as fatal flag.
On Ruby 2.0+ keyword arguments can optionally be excluded from the total count.
On any platform we don't want a .rubocop.yml file in the temporary directory to affect the outcome of rspec.
On by default.
On initialization, the ActiveModel accepts the instance name that will receive the calls:
On machines without Unix-domain sockets, the default is to connect to localhost.
On shared hosts, Apache sometimes doesn't pass authentication headers to FCGI instances.
On some database systems, such as PostgreSQL, database errors inside a transaction cause the entire transaction to become unusable until it's restarted from the beginning.
On subsequent requests, the If-None-Match header is set to the cached ETag.
On the other hand
On the other hand it could be that the target has side-effects, whereas conceptually, from the user point of view, the delegator should be doing one call.
On the other hand, we want to monitor the performance of our real database queries, not the performance of the access to the query cache.
Once Subclass assigns a value then the value assigned by Subclass would be returned.
Once a mailer action and template are defined, you can deliver your message or defer its creation and delivery for later:
Once our chunk of behavior starts pushing the scroll-to-understand-it boundary, we give in and move it to a separate file.
Once rendering the template is done, sets its content in the :layout key.
Once the variable is captured by a block, we have no idea when, where and how many times the block would be invoked and it means we cannot track the usage of the variable.
One by one, each engine sets up its load paths, routes and runs its config/initializers/* files.
One can additionally pass a hash as an argument to unscope specific +:where+ values.
One can generate the same path as the above example by using the following code:
One can specify multiple memcached servers, and MemCacheStore will load balance between all available servers.
One exception is the ActiveRecord::Rollback exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.
One layer deep hash of connection values.
One query for columns (delete_me table) One query for primary key (delete_me table) One query to do the bulk change
One query for updating name and second query for updating pirate_id
One query for updating name, not triggering query for updating pirate_id
One reason is that editors, such as Emacs, expect this.
One reason you may wish to call this method explicitly is between queries that ask the database to randomize results.
One recommendation is to simply be explicit in a comment, like:
One should restart the entire transaction if an ActiveRecord::StatementInvalid occurred.
One way to change these is to specify `always_permitted_parameters` in your config.
One way to use this is to pass an array to layout and treat it as an enumerable.
One workaround is to begin a transaction on each class whose models you alter:
One-liner, no newline needed.
Only 'GET' and 'HEAD' requests will result in a file being returned.
Only allow a trusted parameter "white list" through.
Only block scope allows referencing outer scope variables.
Only check method calls with dot operator
Only files with annotations are included.
Only goes :through once, but the through_reflection is a has_and_belongs_to_many, so this is a nested through association
Only ifs without else are considered.
Only integers
Only loads a smaller set of middleware suitable for API only apps.
Only makes sense for number-based attributes.
Only one constraint option can be used at a time apart from +:minimum+ and +:maximum+ that can be combined together:
Only one def, so rule about empty line *between* defs does not apply.
Only permitted scalars pass the filter.
Only public methods are added as subscribers, and only if a notifier has been set up.
Only public methods on actual controllers are callable actions
Only rules for English are provided.
Only test this if the underlying Time.at raises a TypeError
Only the eyebrow fanciers club has a sponsored_member
Only the function calls are affected by EnforcedStyle setting.
Only the middleware method should construct them.
Only use it if the name cannot be inferred from the association.
Opaque based on digest of secret key
Open a new session instance.
Opposite to register_template_handler.
Optimistic locking allows multiple users to access the same record for edits, and assumes a minimum of conflicts with the data.
Optimistic locking will also check for stale data when objects are destroyed.
Optimization for the common case where path begins with the base dir.
Optimization to quickly decide if the given file is hidden (on the top level) and can not be matched by any pattern.
Optionally accepts a namespace, and all keys will be scoped within that namespace.
Optionally raises an exception if the layout could not be found.
Optionally removes a +type+ column.
Options are passed to the underlying cache implementation.
Options are provided for phone numbers, currency, percentage, precision, positional notation, file size and pretty printing.
Options can be passed in the last argument.
Options may also be used by concerns defined in a block by accepting a block parameter.
Options must be taken because of https://bugs.ruby-lang.org/issues/10856
Options supported are +:compress+, +:compress_threshold+, and +:expires_in+.
Or a collection to be used:
Or a string containing an i18n scope where to find this hash.
Or equivalently, if +TenderloveMigration+ is defined as in the documentation for Migration:
Or even multiple scope parameters.
Or even to render a special view:
Or if the format is json:
Or similarly:
Or with a block where self points to the current record to be validated:
Or you may provide a custom delivery method object e.g. +MyOwnDeliveryMethodClass+.
Or, an implementation might choose to use one-time nonces or digests for POST, PUT, or PATCH requests and a time-stamp for GET requests.
Or, progressively roll out the cache invalidation using a computed value:
Or, using a callable object, you might implement something more specific to your application, which would be out of place in your routes file.
Oracle DATE columns are datetime columns and Oracle adapter returns Time value
Oracle UPDATE does not support ORDER BY
Oracle adapter cannot have specified index name larger than 30 characters Oracle adapter is shortening index name when just column list is given
Oracle adapter returns count() as Fixnum or Float
Oracle adapter returns floating point value 636.0 after SUM
Oracle adapter truncates alias to 30 characters
Oracle adapter uses prefetched primary key values from sequence and passes them to connection adapter insert method
Oracle barfs on this because the join includes unqualified and conflicting column names
Oracle does not allow double quotes in table and column names at all therefore quoting removes them
Oracle does not have a TIME datatype.
Oracle does not support boolean expressions in SELECT
Oracle doesn't differentiate between date/time
Oracle enhanced adapter allows to define Date attributes in model class (see topic.rb)
Oracle has some funky default handling, so it requires a bit of extra testing.
Oracle identifier length is limited to 30 bytes or less, `polymorphic` renamed `poly`
Oracle needs primary key value from sequence
Oracle saves empty string as NULL
Oracle saves empty string as NULL therefore :message changed to one space
Oracle sometimes sorts differently if WHERE condition is changed
Oracle supports precision up to 38 and it identifies decimals with scale 0 as integers
Oracle/SQLServer supports precision up to 38
Order by added as otherwise Oracle tests were failing because of different order of results
Order is the same as that returned by +columns+.
Ordered by desc offense count
Ordinal returns the suffix used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
Originally this expression was:
Orphan in Foo::ClassMethods, not Bar::ClassMethods.
Other array literals shall have their first element indented one step more than the start of the line where the opening square bracket is.
Other classes we mess with will be dealt with in the specific tests
Other data types need to be serialized.
Other hash literals shall have their first key indented one step more than the start of the line where the opening curly brace is.
Other indentation shall be the same regardless of EnforcedStyle.
Other methods, such as `select`, will convert the association to an array and then run the block on the array.
Other namespaces can be added to the root element:
Other options will be handled by the specific cache store implementation.
Other options:
Other preferred methods appearing in the default config (e.g., map over collect) are kept.
Other proxy services set the Client-Ip header instead, so we check that too.
Other variant:
Others remove columns when they migrate up instead of down:
Otherwise +size+ is more efficient.
Otherwise SerializationTypeMismatch will be raised.
Otherwise a new record will be instantiated and used to replace the existing one.
Otherwise fall back to double quotes
Otherwise it returns an empty array.
Otherwise it returns an empty hash.
Otherwise it's difficult to distinguish between space missing to the left and to the right of the brace in autocorrect.
Otherwise keep moving upwards in search of an executable.
Otherwise overridden in Railtie to use Rails.cache.
Otherwise returns +nil+.
Otherwise returns the result of the block, +nil+ if no callbacks have been set, or +true+ if callbacks have been set but no block is given.
Otherwise the cache would see the same SQL query and repeatedly return the same result each time, silently undermining the randomness you were expecting.
Otherwise the root element is "objects":
Otherwise the string contains just line and text.
Otherwise we may get mismatched pathnames when loading config files later on.
Otherwise, +false+.
Otherwise, +nil+ is returned.
Otherwise, +to_param+ method will be called.
Otherwise, February 31st or February 29th, 2011 can be selected, which are invalid.
Otherwise, an exception will be raised.
Otherwise, fall back to the Active Support legacy format.
Otherwise, false is returned.
Otherwise, go to the database only if none of the following are true: * target already loaded * owner is new record * target contains new or changed record(s)
Otherwise, if the String is valid in the encoding, encode immediately to default_internal.
Otherwise, in addition to the in-place modification the method returns +self+ for convenience.
Otherwise, it always hits the resolver but if the key is present, check if the resolver is fresher before returning it.
Otherwise, it returns the current time.
Otherwise, it will yield all descendants which match.
Otherwise, raise an exception
Otherwise, return nil.
Otherwise, returns the result of the block.
Otherwise, returns true after the lock has been acquired.
Otherwise, serialization bugs may creep in undetected.
Otherwise, since the String is invalid in the encoding specified, raise an exception
Otherwise, tell I18n to raise an exception, which we rescue further in this method.
Otherwise, the +to_param+ method will be called.
Otherwise, the case node gets 0.8 complexity points and each when gets 0.2.
Otherwise, the default will be +nil+.
Otherwise, the extra cop will affect other specs.
Otherwise, the key +:name+ is filtered out.
Otherwise, the method re-raises the first exception found:
Otherwise, the redirect is performed on the location header.
Otherwise, the supplied block is called for each key for which there was no data, and the result will be written to the cache and returned.
Otherwise, this method does nothing.
Otherwise, transaction will raise exceptions when it tries to release the already-automatically-released savepoints:
Otherwise, two corrections can interfere with each other, resulting in corrupted code.
Otherwise, we need to use an alias
Otherwise, we pass the invalid name forward so the underlying router engine treats it and raises an exception.
Otherwise, workers may oversubscribe the db connection pool and block while they wait for other workers to release their connections.
Otherwise, you might trigger the loading of a child before the parent has registered the callbacks and they won't be inherited.
Output: saving...
Outputs a deprecation warning message
Overridden by the MySQL adapter for supporting index lengths
Overridden in adapters that require something beyond a simple insert (eg.
Override AbstractController::Base's process_action to run the process_action callbacks around the normal behavior.
Override Rack's GET method to support indifferent access
Override Rack's POST method to support indifferent access
Override in subclasses
Override locale to return a symbol instead of array.
Override methods to perform custom processing.
Override negative format if format options are given
Override the default form builder for all views rendered by this controller and any of its descendants.
Override this in a subclass to modify the behavior around processing an action.
Override this method if you want to customize when detailed exceptions must be shown.
Override this method if you wish to change how action methods are called, not to add additional behavior around it.
Override this method in a helper to customize the tag.
Override this method in a module to change the default behavior.
Override this method in subclasses should you need to retrieve the value for a given attribute differently:
Override this method in subclasses with the validation logic, adding errors to the records +errors+ array where necessary.
Override this method in subclasses with validation logic, adding errors to the records +errors+ array where necessary.
Override this method in your controller if you want to change paths prefixes for finding views.
Override to provide your own.
Override to return the quoted table name for assignment.
Overrides the default inspect method with a human readable one, e.g., "Mon, 21 Feb 2005"
Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances
Overriding inspect to be more human readable, especially in the console.
Overwrite files that already exist"
Overwrite get to send SessionSecret in env hash
Overwrite if you use another logger in your log subscriber.
Overwrite if you want custom lookup.
Overwrite modules_for_helpers to accept :all as argument, which loads all helpers in helpers_path.
Overwrite original file with temp file
Overwrite process to setup I18n proxy.
Overwrite render_to_string because body can now be set to a rack body.
Overwrite run validations to include callbacks.
Overwrite the default class equality method to provide support for association proxies.
Overwrite this factory method for EventMachine Redis connections if you want to use a different Redis connection library than EM::Hiredis.
Overwrite this factory method for Redis connections if you want to use a different Redis connection library than Redis.
Overwrite with false.
Overwrites _layout_for in the context object so it supports the case a block is passed to a partial.
Overwriting will negate any effect of the +primary_key_prefix_type+ setting, though.
Owes great inspiration to test runner trailblazers like RSpec, minitest-reporters, maxitest and others.
PATCH/PUT /books/1 PATCH/PUT /books/1.json
PATCH/PUT update
POST /books POST /books.json
POST create
POST create PATCH/PUT update
PRECONDITION: make sure ordering results in different results
Parameters after the first one are checked by Style/AlignParameters, not by this cop.
Parameters: * +grouped_options+ - Accepts a nested array or hash of strings.
Params wrapper should come before instrumentation so they are properly showed in logs
Parentheses around the arguments would solve the problem, but we let the user add those manually.
Parenthesize corrected expression if changing to modifier-if form would change the meaning of the parent expression (due to the low operator precedence of modifier-if)
Parse an XML Document string or IO into a simple hash using Java's jdom.
Parse an XML Document string or IO into a simple hash using libxml / nokogiri.
Parse an XML Document string or IO into a simple hash using libxml.
Parse an XML Document string or IO into a simple hash.
Parser knows whether the foo is a variable or method invocation.
Parser token "text" may be a Fixnum
Parser will produce str nodes for constants such as __FILE__.
Parses +str+ according to +format+ and returns an ActiveSupport::TimeWithZone.
Parses a JSON string (JavaScript Object Notation) into a hash.
Parses a string formatted according to ISO 8601 Duration into the hash.
Parses number which can be a float with either comma or period.
Parses the token and options out of the token authorization header.
Part of any hash containing the :layout key
Part of any hash containing the :partial key
PartialRenderer - Used for rendering partials TemplateRenderer - Used for rendering other types of templates StreamingTemplateRenderer - Used for streaming
Partials can have their own layouts applied to them.
Parts are summarized (as they can become repetitive due to addition, etc).
Parts with different signs are exists in PostgreSQL interval datatype.
Pass `coder: ActiveSupport::JSON` to decode messages as JSON before passing to the callback.
Pass `wait: false` to continue.
Pass a block if you want to show extra content when the text is truncated.
Pass a hash in the second argument (+path+) to specify the request method.
Pass a method name or lambda argument or provide a block to call.
Pass an ActiveRecord::Relation object instead."
Pass an SQL locking clause to append the end of the SELECT statement or pass true for "FOR UPDATE" (the default, an exclusive row lock).
Pass either a constant +value+, or a block which computes a value each time a cache key is generated.
Pass in +name+ to reset a named cycle.
Pass in the instance of the object that is using the errors object.
Pass seed guaranteeing failure.
Passes each element of +candidates+ collection to ArrayInquirer collection.
Passes if evaluated code in the yielded block raises no exception.
Passes the record off to the class or classes specified and allows them to add errors based on more complex conditions.
Passing +true+ will forcibly tidy all bytes, assuming that the string's encoding is entirely CP1252 or ISO-8859-1.
Passing a block is required when `force` is true so this always results in a cache write.
Passing a hash containing +:from+ and +:to+ will make this change reversible in migration:
Passing a record (like an Active Record) instead of a hash as the options parameter will trigger the named route for that record.
Passing a template handler in the template name is deprecated.
Passing attributes for an associated collection in the form of a hash of hashes can be used with hashes generated from HTTP/HTML parameters, where there may be no natural way to submit an array of hashes.
Passing in an array of attributes to group by is also supported.
Paths in other config files are relative to the current directory.
Paths specified in .rubocop.yml and .rubocop_todo.yml files are relative to the directory where that file is.
Pattern has to be a valid glob string, and it allows you to use the following variables:
Payloads consist of a hash whose contents are arbitrary and generally depend on the event.
Payment.order("created_on").find_by_amount(50)
People should not use this class.
Perform the work in the supplied block as an execution.
Perform unauthenticated request to retrieve digest parameters to use on subsequent request
Performs a DELETE request with the given parameters.
Performs a DELETE request, following any subsequent redirect.
Performs a GET request with the given parameters.
Performs a GET request, following any subsequent redirect.
Performs a HEAD request with the given parameters.
Performs a PATCH request with the given parameters.
Performs a PATCH request, following any subsequent redirect.
Performs a POST request with the given parameters.
Performs a POST request, following any subsequent redirect.
Performs a PUT request with the given parameters.
Performs a PUT request, following any subsequent redirect.
Performs a destructive squish.
Performs a joins on +args+.
Performs a left outer joins on +args+:
Performs a request using the specified method, following any subsequent redirect.
Performs an XMLHttpRequest request with the given parameters, mirroring an AJAX request made from JavaScript.
Performs canonical decomposition on all the characters.
Performs composition on all the characters.
Performs parameters wrapping upon the request.
Performs the actual request.
Performs the actual template rendering.
Performs the job immediately.
Performs validation on the supplied record.
Periodically performs a task on the channel, like updating an online user counter, polling a backend for new status messages, sending regular "heartbeat" messages, or doing some internal work and giving progress updates.
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
Person.find(5).cache_key(:updated_at, :last_reviewed_at)
Person.find_by(name: 'Spartacus', rating: 4) returns the first item or nil.
Person.find_or_create_by(name: 'Spartacus', rating: 4) returns the first item or creates it and returns it.
Person.find_or_initialize_by(name: 'Spartacus', rating: 4) returns the first item or returns a new instance (requires you call .save to persist against the database).
Person.pluck(:name)
Person.sum("2 * age")
Person.undefine_attribute_methods
Person.where(age: 0..18).destroy_all
Person.where(name: 'Spartacus', rating: 4) returns a chainable list (which can be empty).
Person.where(name: 'Spartacus', rating: 4).ids returns an Array of ids.
Person.where(name: 'Spartacus', rating: 4).pluck(:field1, :field2) returns an Array of the required fields.
Person.where(name: 'Spartacus', rating: 4).select("field1, field2, field3") returns a chainable list of instances with only the mentioned fields.
Pick an asset host for this source.
Pick the frameworks you want:
Place `when` conditions that use splat at the end of the list of `when` branches.
Placing your callbacks after associations is usually a good practice.
Plan your deployment accordingly: 5 servers each running 5 Puma workers each running an 8-thread worker pool means at least 200 database connections.
Please also note that +try+ is defined on +Object+.
Please check unscoped if you want to remove all previous scopes (including the default_scope) during the execution of a block.
Please choose another application name."
Please choose another plugin name."
Please consult the class method documentation for more information on creating your own validator.
Please do resolve them, if any, so guides are valid XHTML.
Please give a name which does not contain a namespace starting with numeric characters."
Please give a name which does not start with numbers."
Please note *this method is not atomic*, it runs first a SELECT, and if there are no results an INSERT is attempted.
Please note that Topic 1 is the only not approved so if it were among the first 3 it would raise an ActiveRecord::RecordNotFound
Please note that YAML must be consistently indented using spaces.
Please note that callbacks are executed in the order they were defined in model.
Please note that if you specify a :domain when setting a cookie, you must also specify the domain when deleting the cookie:
Please note that no validation is performed and only the +after_touch+, +after_commit+ and +after_rollback+ callbacks are executed.
Please note that sanitizing user-provided text does not guarantee that the resulting markup is valid or even well-formed.
Please note that these options *are not thread-safe*.
Please note that with touching no validation is performed and only the +after_touch+, +after_commit+ and +after_rollback+ callbacks are executed.
Please note the fourth argument does not set a column's default.
Please refer to the documentation of the base helper for details.
Please renumber your migrations to resolve the conflict."
Please use ActionDispatch::IntegrationTest going forward.
Please use only for reading.
Please use that approach instead.
Pluck all the ID's for the relation using the table's primary key
Pluck returns an Array of attribute values type-casted to match the plucked column names, if they can be deduced.
Plucking an SQL fragment returns String values by default.
Plugin can run without Rails loaded, check before filtering.
Plugins and extensions can override this method to point to custom assets or generate digested paths or query strings.
Pointless condition to force single-query loading
Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active Record model instance.
Polymorphic associations on models are not restricted on what types of models they can be associated with.
Populate +coder+ with attributes about this record that should be serialized.
Populate the HTTP method lookup cache
Possible authenticity tokens sent in the request.
Possible callbacks are: +before_add+, +after_add+, +before_remove+ and +after_remove+.
Possible output:
Possible values are +:random+, +:parallel+, +:alpha+, +:sorted+.
Possible values are +GET+, +POST+, +PATCH+, +PUT+, +DELETE+, +HEAD+.
Possibly following a method call chain
Post condition loops
Post.includes(:approved_comments)
Post.transaction(isolation: :serializable) do ...
Post.where(published: true).joins(:comments).merge( Comment.where(spam: false) ) Performs a single join query with both where conditions.
PostgreSQL changes the default order if no order clause is used
PostgreSQL does not use type strings for lookup
PostgreSQL doesn't support limits on binary (bytea) columns.
PostgreSQL doesn't support limits on text columns.
PostgreSQL protests SELECT ...
PostgreSQL requires the ORDER BY columns in the select list for distinct queries, and requires that the ORDER BY include the distinct column.
PostgreSQL, MySQL, and Oracle overrides this for custom DISTINCT syntax - they require the order columns appear in the SELECT.
PostgreSQL-specific extensions to column definitions in a table.
Postgres does not preserve insignificant whitespaces when round-tripping jsonb columns.
Precision inherited and significant was set
Preemptively iterates through all stored keys and removes the ones which have expired.
Prefix multi and heredoc with this.
Prefixes a key with the namespace.
Prefixes are enough:
Prepare callbacks are run before each request, and cleanup callbacks after each request.
Prepare class invocation to search on Rails namespace if a previous added hook is being used.
Prepare the statement if it hasn't been prepared, return the statement key.
Prepares the context by setting the appropriate instance variables.
Prepend a callback after actions.
Prepend a callback around actions.
Prepend a callback before actions.
Prepend a hidden field to make sure something will be sent back to the server if all radio buttons are unchecked.
Prepend a path to the list of view paths for this controller.
Prepend the command, so Rake knows how to run it.
Prepend this callback to have autoloaded constants cleared before any other possible reloading, in case they need to autoload fresh constants.
Prepending an underscore to mark an unused parameter is allowed, so we remove any leading underscores before comparing.
Preserve the timezone of the receiver when calling to `to_time`.
Pretty prints (formats and approximates) a number in a way it is more readable by humans (eg.: 1200000000 becomes "1.2 Billion").
Prevent CSRF attacks by raising an exception.
Primarily used by the grapheme cluster support.
Print generator's options and usage"
Prints a list of generators.
Prints all annotations with tag +tag+ under the root directories +app+, +config+, +db+, +lib+, and +test+ (recursively).
Prints the mapping from filenames to annotations in +results+ ordered by filename.
Priority that the job will have (lower is more priority).
Private methods are included in the search only if the optional second parameter evaluates to +true+.
Private utility method.
Private, for the test suite.
Problem solved.
Process controller specific options, as status, content-type and location.
Process extra options.
Process the rendered format.
ProcessPhotoJob.perform_later(photo)
ProcessPhotoJob.perform_now(photo)
ProcessPhotoJob.set(wait_until: Date.tomorrow.noon).perform_later(photo)
ProcessedSource contains objects which are generated by Parser and other information such as disabled lines for cops.
Procs will be evaluated by merge:
Procs::   A proc to call with the object.
Provide separate templates for each format and variant:
Provide some controller to run the tests on.
Provide support for raw values in the local cache strategy.
Provide your own forgery protection strategy instead.
Provided strictly for compatibility and can be removed in Rails 5.1.
Provided that the directory was loaded from a reloadable base path, it is added to the set of constants that are to be unloaded.
Provides a +delegate+ class method to easily expose contained objects' public methods as your own.
Provides a basic serialization to a serializable_hash for your objects.
Provides a custom rake task.
Provides a full validation framework to your objects.
Provides a list of emails that have been delivered by Mail::TestMailer
Provides a modified +Hash+ that you can include in your object for handling error messages and interacting with Action View helpers.
Provides a number of methods for creating form tags that don't rely on an Active Record object assigned to the template like FormHelper does.
Provides a number of methods for turning different kinds of containers into a set of option tags.
Provides a proxy to access helpers methods from outside the view.
Provides a set of methods for making it easier to debug Rails objects.
Provides a store of all the enqueued jobs with the TestAdapter so you can check them.
Provides a store of all the performed jobs with the TestAdapter so you can check them.
Provides a way to track changes in your object in the same way as Active Record does.
Provides access to the request's HTTP headers from the environment.
Provides access to the request's HTTP headers, for example:
Provides access to the underlying database driver for this adapter.
Provides an interface for any class to have +before_validation+ and +after_validation+ callbacks.
Provides an interface for any class to have Active Record like callbacks.
Provides behavior for enqueuing and retrying jobs.
Provides callbacks to be executed before and after dispatching the request.
Provides functionality for caching rubocop runs.
Provides functionality so that Rails can output logs from Action View.
Provides general behavior that will be included into every Active Job object that inherits from ActiveJob::Base.
Provides helper methods for ActionMailer::Base that can be used for easily formatting messages, accessing mailer or message instances, and the attachments list.
Provides helper methods for testing Active Job
Provides integration between your object and the Rails internationalization (i18n) framework.
Provides methods for traversing an AST.
Provides options for converting numbers into formatted strings.
Provides precise Date calculations for years, months, and days.
Provides some helpers to deal with testing log subscribers by setting up notifications.
Providing a custom Loofah::Scrubber:
Providing a custom Rails::Html scrubber:
Providing custom whitelisted tags and attributes:
Proxy to to_param if the object will respond to it.
Public instance methods of a controller would normally be considered action methods, so methods declared on abstract classes are being removed.
Public method visibility by default
Push a job onto the queue.
Pushes the given Rack middleware and its arguments to the bottom of the middleware stack.
Put Rails as the first plugin minitest initializes so other plugins can override or replace our default reporter setup.
Put gem configuration first so local configuration overrides it.
Put the new handler at the end because the list is read in reverse.
Qu is a Ruby library for queuing and processing background jobs.
Qu was created to overcome some shortcomings in the existing queuing libraries.
Que is a high-performance alternative to DelayedJob or QueueClassic that improves the reliability of your application by protecting your jobs with the same ACID guarantees as the rest of your data.
Que is a queue for Ruby and PostgreSQL that manages jobs using advisory locks.
Queries are collected asynchronously by the subscriber and returned.
Queries the database and returns the results in an Array-like object
Queries the primary key value.
Query if the following named route was already defined.
Query implementation notes: - format_type includes the column size constraint, e.g. varchar(50) - ::regclass is a function that gives the id for a table name
Query methods allow you to test whether an attribute value is present.
Querying logic can instead be passed to the `count` call.
Queue in which the job will reside.
Queue: The adapter can set the priority for job queues, when setting a queue with Active Job this will be respected.
Queue: The timeout is set for all jobs on the queue.
Quite straightforward.
Quite strange, but legal ruby.
Quote "type" if it's a reserved word for the current connection.
Quote date/time values for use in SQL input.
Quoted types
Quotes column names for use in SQL queries.
Quotes schema names for use in SQL queries.
Quotes strings for use in SQL input.
Quotes the column name.
Quotes the table name.
RAILS_ENV needs to be set before config/application is required
REMOTE_ADDR will be correct if the request is made directly against the Ruby process, on e.g. Heroku.
ROUTES TODO: These assertions should really work in an integration context
Rack doesn't handle multipart/mixed for us.
Rack::Sendfile will usually intercept the response and uses the path directly, so there is no reason to open the file.
Rails 5.0 introduced this config option so that apps made with earlier versions of Rails are not affected when upgrading.
Rails components cherry pick from Active Support as needed, but there are a few features that are used for sure in some way or another and it is not worth putting individual requires absolutely everywhere.
Rails dups objects in a few critical spots where they are not that arbitrary.
Rails finds namespaces similar to thor, it only adds one rule:
Rails own autoload, eager_load, etc.
Rails starts with the layout, and the template is rendered later, when its +yield+ is reached.
Rails uses the alias internally, and plugin authors are encouraged to do so.
Rails will hand you the template source as the default_internal (generally UTF-8), raising an exception for the user before sending the template to you if it could not determine the original encoding.
Rails, Sinatra, etc.) process.
Rails.application.config.session_store :cookie_store, expire_after: 14.days
Rails.application.config.session_store :cookie_store, key: '_your_app_session'
Rails.application.routes.draw do Pattern 1 tells some request to go to one place Pattern 2 tell them to go to another ...
Rails::Application is responsible for executing all railties and engines initializers.
Rails::Generators::ControllerGenerator.hook_for :webrat, type: :boolean
Railties can access a config object which contains configuration shared by all railties and the application:
Raise AbstractController::ActionNotFound.
Raise ClientDisconnected, which is a RuntimeError (not an IOError), because that's more appropriate for something beyond the developer's control.
Raise Rack::Utils::InvalidParameterError for consistency with Rack.
Raise an error if the class_option :orm was not defined.
Raised if you set the key for a Hash something else than a string or a symbol.
Raised on attempt to save stale record.
Raised on attempt to update record that is instantiated as read only.
Raised when Active Record cannot find a record by given id or set of ids.
Raised when Active Record cannot find database adapter specified in +config/database.yml+ or programmatically.
Raised when Postgres returns 'cached plan must not change result type' and we cannot retry gracefully (e.g. inside a transaction)
Raised when a connection could not be obtained within the connection acquisition timeout period: because max connections in pool are in use.
Raised when a given database does not exist.
Raised when a non-existing controller action is triggered.
Raised when a primary key is needed, but not specified in the schema or model.
Raised when a record cannot be inserted because it would violate a uniqueness constraint.
Raised when a record cannot be inserted or updated because a value too long for a column type.
Raised when a record cannot be inserted or updated because it references a non-existent record.
Raised when a relation cannot be mutated because it's already loaded.
Raised when a required parameter is missing.
Raised when a validation cannot be corrected by end users and are considered exceptional.
Raised when adapter not specified on connection (or configuration file +config/database.yml+ misses adapter field).
Raised when an attribute is not defined.
Raised when an exception is raised during job arguments deserialization.
Raised when an object assigned to an association has an incorrect type.
Raised when an unsupported argument type is set as a job argument.
Raised when argument +number+ param given to the helpers is invalid and the option :raise is set to  +true+.
Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active Record instance methods).
Raised when attribute values are out of range.
Raised when forbidden attributes are used for mass assignment.
Raised when raw data from the request cannot be parsed by the parser defined for request's content mime type.
Raised when storing more than 4K of session data.
Raised when unknown attributes are supplied via mass assignment.
Raised when unserialized object's type mismatches one specified for serializable field.
Raises +ArgumentError+ if +fixture_name+ can't be found.
Raises +InvalidSignature+ if the message was not signed with the same secret or was not Base64-encoded.
Raises ActiveRecord::AssociationTypeMismatch unless +record+ is of the kind of the class of the associated objects.
Raises TooManyRecords error if the attributes_collection is larger than the limit.
Raises an +ArgumentError+ for invalid time zones.
Raises an error when the store class cannot be found.
Raises an exception if a validation error occurs.
Raises an exception if referenced class does not exist.
Raises any error raised while decoding the signed message.
Raises error if length of new index name is greater than allowed limit.
Raises if the wrong reflection name is used to set the Edge belongs_to
Raises: - ActiveRecord::ConnectionTimeoutError if +timeout+ is given and no element becomes available within +timeout+ seconds,
Raises: - ActiveRecord::ConnectionTimeoutError if a connection could not be acquired
Raises: - ActiveRecord::ConnectionTimeoutError no connection can be obtained from the pool.
Range datatypes weren't introduced until PostgreSQL 9.2
Rather, the entire AST must be copied any time any part of it is changed.
Rather, you just call the method you defined on the class itself.
Raw rendering of a template to a string.
Raw source checksum for tracking infinite loops.
Re-order codepoints so the string becomes canonical.
Read an entry from the cache.
Read cookie using POST request without CSRF token
Read more about optimistic locking in ActiveRecord::Locking module documentation.
Read more about writing ERB and Builder templates in ActionView::Base.
Read more: http://www.martinfowler.com/eaaCatalog/singleTableInheritance.html
Read more: https://github.com/cyu/rack-cors Rails.application.config.middleware.insert_before 0, Rack::Cors do allow do origins 'example.com'
Read on for an introduction.
Read session using POST request without CSRF token
Read the request body by parsing params.
Reading a cookie does not get the cookie object itself back, just the value it holds.
Reads a cached fragment from the location signified by +key+ (see +expire_fragment+ for acceptable formats).
Reads an entry from the cache implementation.
Reads multiple values at once from the cache.
Reads multiple values from the cache using a single call to the servers for all keys.
Reads the given file at the source root and prints it in the console.
Reason is the ActiveRecord::Rollback exception in the nested block does not issue a ROLLBACK.
Reason is twofold: On one hand doing less calls is in general better.
Receives a hash returned from +serialize+
Receives a namespace, arguments and the behavior to invoke the generator.
Receives a raw email, parses it into an email object, decodes it, instantiates a new mailer, and passes the email object to the mailer object's +receive+ method.
Receives an array of mimes and return the first user sent mime that matches the order array.
Receives namespaces in an array and tries to find matching generators in the load path.
Recognizes the route for a given path.
Reconstructed a path with all sensitive GET parameters replaced.
Record +command+.
Record destruction so we can test whether firm.clients.clear has is calling client.destroy, deleting from the database, or setting foreign keys to NULL.
Record history *after* loading so first load gets warnings.
Record is stale when it's being saved in another query after instantiation, for example, when two users edit the same wiki page and one starts editing and saves the page before the other.
Record that we've seen this file *before* loading it to avoid an infinite loop with mutual dependencies.
RecordIdentifier encapsulates methods used by various ActionView helpers to associate records with DOM elements.
Records are instantiated and it invokes +before_remove+, +after_remove+ , +before_destroy+ and +after_destroy+ callbacks.
Records are not instantiated and callbacks will not be fired.
Records are separated by a blank line for your viewing pleasure.
Records loaded through joins with piggy-back attributes will be marked as read only since they cannot be saved.
Records that are passed in are serialized/deserialized using Global ID.
Records the association that is being destroyed and destroying this record in the process.
Recover lost connections for the pool.
Recursively fill out the rest of the array from the through reflection
Redirect any path to another path:
Redirect the existing request to use the HTTPS protocol.
Redirect url doesn't care that it wasn't a :redirect response.
Redirects are used to move from one action to another.
Redirects the browser to the page that issued the request (the referrer) if possible, otherwise redirects to the provided default fallback location.
Redirects the browser to the target specified in +options+.
Reference: http://www.limited-entropy.com/padding-oracle-attacks.
Refresh the cached action_methods when a new action_method is added.
Regardless of this setting, the Reaper will be invoked before every blocking wait.
Regexp filtering copied from Minitest.
Regional_Indicator X Regional_Indicator
Register a record with the current transaction so that its after_commit and after_rollback callbacks can be called.
Register an Interceptor which will be called before mail is previewed.
Register an Interceptor which will be called before mail is sent.
Register an Observer which will be notified when mail is delivered.
Register an object that knows how to handle template files with the given extensions.
Register an object to be invoked during both the +run+ and +complete+ steps.
Register danish language for testing
Register one or more Interceptors which will be called before mail is previewed.
Register one or more Interceptors which will be called before mail is sent.
Register one or more Observers which will be notified when mail is delivered.
Registers a callback to be executed after bundle and spring binstubs have run.
Registers an alias that's not used on mime type lookup, but can be referenced directly.
Regression test for 21c75e5
Regression test, see GH issue 2671
Regression, see https://github.com/rails/rails/issues/16468.
Regular output functions like print or puts won't work with ERB templates.
Relative exclude paths in .rubocop.yml files are relative to that file, but in configuration files with other names they will be relative to whatever file inherits from them.
Relative paths are idiomatic, use absolute paths only when needed.
Release old working directory.',
Release the unload lock if it has been previously obtained
Relies on Active Support, so we have to lazy load to postpone definition until AS has been loaded
Relinquish the exclusive lock.
Reload and register danish language for testing
Reload application routes regardless if they changed or not.
Reload edges table from fixtures as otherwise repeated test was failing
Reload helpers
Reload the class Owner, simulating auto-reloading of model classes in a development environment.
Reloading is commonly used in test suites to test something is actually written to the database, or when some action modifies the corresponding row in the database but not the object in memory:
Reloads the collection from the database.
Reloads the record from the database.
Reloads the record to obtain the requested lock.
Rely on OpenSSL for the initialization vector
Remember that this is a global setting for all Active Records.
Remember to call `super` if you want to recursively process descendant nodes.
Remember, usually you'll run many Action Cable servers, so you can't use this collection as a full list of all of the connections established against your application.
Remove a connection from the connection pool.
Remove a previously added hook.
Remove a session from the cache.
Remove all elements from the queue.
Remove all of the comments and blank lines from the routes file
Remove all set callbacks for the given event.
Remove and return the head the queue if the number of available elements is strictly greater than the number of threads currently waiting.
Remove any ASC/DESC modifiers
Remove changes information for the provided attributes.
Remove content node if it is blank
Remove content node if it is blank and there are child tags
Remove first to avoid it.
Remove leading slashes from controllers
Remove leading/trailing separator.
Remove nils from the params hash
Remove old files so that the cache doesn't grow too big.
Remove partially loaded constants.
Remove string values that aren't constants or subclasses of AR
Remove the assignment from lines that contain the offending assignment because after correcting, this will not be on the line anymore.
Remove the color from output.
Remove the connection for this class.
Remove the constants that have been autoloaded, and those that have been marked for unloading.
Remove the file path from the loaded list.
Remove the first blank element in case of '::ClassName' notation.
Remove the handlers from calculation to improve performance since the user cannot modify it explicitly.
Remove the head of the queue.
Removes +records+ from this association calling +before_remove+ and +after_remove+ callbacks.
Removes `size` characters from the beginning of the given range.
Removes `size` characters prior to the source range.
Removes a reference.
Removes all filters, but leaves in the silencers.
Removes all records from the association without calling callbacks on the associated records.
Removes all silencers, but leaves in the filters.
Removes all the previously dynamically defined methods from the class.
Removes an unwanted relation that is already defined on a chain of relations.
Removes and returns the head of the queue if possible, or nil.
Removes and returns the key/value pairs matching the given keys.
Removes and returns the last element in the array if it's a hash, otherwise returns a blank hash.
Removes any condition from the query other than the one(s) specified in +onlies+.
Removes current changes and makes them accessible through +previous_changes+.
Removes fragments from the cache.
Removes from the query the condition(s) specified in +skips+.
Removes items that the block evaluates to true and returns self.
Removes the column from the table definition.
Removes the column(s) from the table definition.
Removes the cookie on the client machine by setting the value to an empty string and the expiration date in the past.
Removes the foreign key named +special_fk_name+ on the +accounts+ table.
Removes the foreign key on +accounts.branch_id+.
Removes the foreign key on +accounts.owner_id+.
Removes the given columns from the table definition.
Removes the given foreign key from the table.
Removes the given index from the table.
Removes the given keys from hash and returns it.
Removes the index named +by_branch_party+ in the +accounts+ table.
Removes the index on +branch_id+ and +party_id+ in the +accounts+ table if exactly one such index exists.
Removes the index on +branch_id+ in the +accounts+ table if exactly one such index exists.
Removes the module part from the constant expression in the string.
Removes the module part from the expression in the string.
Removes the named method, if it exists.
Removes the named singleton method, if it exists.
Removes the namespaces and get the generator name.
Removes the reference(s).
Removes the rightmost segment from the constant expression in the string.
Removes the source range.
Removes the specified key from the hash.
Removes the timestamp columns (+created_at+ and +updated_at+) from the table definition.
Removes the timestamp columns (+created_at+ and +updated_at+) from the table.
Removing a line break between a comment and the closing parenthesis would cause a syntax error, so we only remove the braces in that case.
Rename :minute and :second to :min and :sec
Rename the +index_people_on_last_name+ index to +index_users_on_last_name+:
Renames a column in a table.
Renames a column.
Renames a table.
Renames an index of a table.
Renames an index.
Renames the given index on the table.
Render a head response, but don't touch default headers
Render a template.
Render but returns a valid Rack body.
Render output including the HTTP Digest authentication header
Render the templates and blocks
Rendering :json or :xml with :stream won't work.
Renders the given template.
Repair all fixture connections so other tests won't break.
Repeated calls to the cache for the same key will hit the in-memory cache for faster access.
Replace accented chars with their ASCII equivalents.
Replace progress reporter for colors.
Replace this collection with +other_array+.
Replace with any object that responds to +sanitize+.
Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.
Replaces any existing order defined on the relation with the specified order.
Replaces current hash with non +nil+ values.
Replaces special characters in a string so that it may be used as part of a 'pretty' URL.
Replaces the code of the source range `range` with `content`.
Replaces the contents of this hash with other_hash.
Replaces the existing method definition, if there is one, with the passed block as its body.
Replaces the hash with only the given keys.
Replaces this collection with +other_array+.
Replaces underscores with dashes in the string.
Report class name as 'Time' to thwart type checking.
Report offense only if changing case doesn't change semantics, i.e., if the string would become dynamic or has special characters.
Reports the approximate distance in time between two Time, Date or DateTime objects or integers as seconds.
Represents an SQL table in an abstract way for updating a table.
Represents the schema of an SQL table in an abstract way.
Requests can opt-out of redirection with `exclude`:
Requests that set If-None-Match header may return a 304 Not Modified response if it matches the ETag exactly.
Requests to routes can be constrained based on specific criteria:
Require `belongs_to` associations by default.
Require all the stubs and models
Require database.
Require the gems listed in Gemfile, including any gems you've limited to :test, :development, or :production.
Requires and returns a hash of all of the channel class constants, which are keyed by name.
Requires supporting files with custom matchers and macros, etc, in ./support/ and its subdirectories.
Reschedules the job to be re-executed.
Rescuable module adds support for easier exception handling.
Rescue exceptions raised in controller actions.
Reset cache to make finds on the new table work
Reset columns/indexes cache as we're changing the table
Reset hash and Assign the new session id
Reset original acronym set
Reset the changes:
Reset the column used for optimistic locking back to the +lock_version+ default.
Reset the current session.
Reset the state of this connection, directing the DBMS to clear transactions and other connection-related server-side state.
Reset to old state
Resets a cycle so that it starts from the first element the next time it is called.
Resets all the cached information about columns, which will cause them to be reloaded on the next request.
Resets one or more counter caches to their correct value using an SQL count query.
Resets the instance.
Resets the sequence of a table's primary key to the maximum value.
Resolve enums
Resolves a constant from a minitest spec name.
Resource routing allows you to quickly declare all of the common routes for a given resourceful controller.
Resources can also be nested infinitely by using this block syntax:
Respect object when object is false
Respect the order on `reflection_scope` if it exists, else use the natural order.
Respond to also allows you to specify a common block for different formats by using +any+:
Respond to variants in the action just like you respond to formats:
Response headers start out with the defaults
Responsible for routing incoming commands that arrive on the connection to the proper channel.
Resque (pronounced like "rescue") is a Redis-backed library for creating background jobs, placing those jobs on multiple queues, and processing them later.
Restore all previous data of the provided attributes.
Restore an offense object loaded from a JSON file.
Restore available locales check so it will take place from now on.
Restore prefix/suffix to its previous values
Restore the new record state and id of a record that was previously saved by a call to save_record_state.
Restore view_paths to previous value
Restricted byte
Retrieve the connection associated with the current thread, or call checkout to obtain one if necessary.
Retrieve the constants that were present under the namespace when watch_namespaces was originally called
Return a basic hash of statistics for the connection keyed with `identifier`, `started_at`, and `subscriptions`.
Return a bind param hash with format as binary.
Return a hash of the options given at invocation, minus the ones that have no effect on which offenses and disabled line ranges are found, and thus don't affect caching.
Return a recursive merge of two hashes.
Return a single connection identifier that combines the value of all the registered identifiers into a single gid.
Return a source buffer that has a UTF-8 encoded source.
Return an array of railties respecting the order they're loaded and the order specified by the +railties_order+ config.
Return if a TimeZone instance, or wrap in a TimeZone instance if a TZInfo::Timezone
Return pair of duration's parts and whole duration sign.
Return true if a valid version is not provided.
Return true if we got the lock, otherwise false
Return true if we released the lock, otherwise false
Returned hash keys are strings:
Returning +nil+ will cause authentication to fail.
Returns 'https://' if this is an SSL request and 'http://' otherwise.
Returns +false+ by default.
Returns +false+ if STI type condition needs to be applied.
Returns +false+ otherwise.
Returns +nil+ for invalid time zones.
Returns +nil+ if any intermediate step is +nil+.
Returns +nil+ if no token is found.
Returns +nil+ if the message is not Base64-encoded.
Returns +nil+ if the message was not signed with the same secret.
Returns +nil+ if there are no key attributes.
Returns +nil+ if there's no row.
Returns +self+ if the password is correct, otherwise +false+.
Returns +self+ so method calls may be chained.
Returns +self+, so several appends may be chained together.
Returns +self+.
Returns +text+ transformed into HTML using simple formatting rules.
Returns +text+ wrapped at +len+ columns and indented +indent+ spaces.
Returns +true+ if +attribute+ is an attribute method and table exists, +false+ otherwise.
Returns +true+ if +attribute+ is an attribute method, +false+ otherwise.
Returns +true+ if +other+ is also a Duration instance, which has the same parts as this one.
Returns +true+ if +other+ is equal to current object.
Returns +true+ if +self+ and +other_aggregation+ have the same +name+ attribute, +active_record+ attribute, and +other_aggregation+ has an options hash assigned to it.
Returns +true+ if +self+ is a +belongs_to+ reflection.
Returns +true+ if +self+ is a +has_one+ reflection.
Returns +true+ if Active Record is connected.
Returns +true+ if _obj_ responds to the given method.
Returns +true+ if an entry is deleted.
Returns +true+ if an error on the attribute with the given message is present, +false+ otherwise.
Returns +true+ if any of the attributes have unsaved changes, +false+ otherwise.
Returns +true+ if attr_name is changed, +false+ otherwise.
Returns +true+ if attr_name were changed before the model was saved, +false+ otherwise.
Returns +true+ if errors were added, +false+ otherwise.
Returns +true+ if no errors are found, +false+ otherwise.
Returns +true+ if no errors are found, raises +ValidationError+ otherwise.
Returns +true+ if string has utf_8 encoding.
Returns +true+ if the +macro+ is either +has_many+ or +has_and_belongs_to_many+, +false+ otherwise.
Returns +true+ if the association has been loaded, otherwise +false+.
Returns +true+ if the attributes hash has been frozen.
Returns +true+ if the cache contains an entry for the given key.
Returns +true+ if the class name and +other+ are equal, otherwise +false+.
Returns +true+ if the class name and +other+ have the same length and content, otherwise +false+.
Returns +true+ if the collection does not include the object.
Returns +true+ if the collection is empty.
Returns +true+ if the collection is not empty.
Returns +true+ if the constant was not previously marked for unloading, +false+ otherwise.
Returns +true+ if the enumerable has more than 1 element.
Returns +true+ if the error messages include an error for the given key +attribute+, +false+ otherwise.
Returns +true+ if the given +record+ is present in the collection.
Returns +true+ if the given attribute is in the attributes hash, otherwise +false+.
Returns +true+ if the parameter is permitted, +false+ otherwise.
Returns +true+ if the record could be saved.
Returns +true+ if the record is read only.
Returns +true+ if the session is mimicking a secure HTTPS request.
Returns +true+ if the two arrays contain the same number of elements and if each element is equal to the corresponding element in the +other+ array, otherwise returns +false+.
Returns +true+ if there is no match, otherwise +false+.
Returns +true+ if this does not need STI type condition.
Returns +true+ when it's in the specified character class and +false+ otherwise.
Returns +true+ when the connection adapter supports prepared statement caching, otherwise returns +false+
Returns +true+ when the proxy class can handle the string.
Returns 62.
Returns ActiveRecord::RecordNotFound error if the object cannot be found.
Returns Content-Type of rendered content :api: public
Returns DateTime with local offset for given year if format is local else offset is zero.
Returns Integer and Arel::Nodes::SqlLiteral limits as is.
Returns Monday of this week assuming that week starts on Monday.
Returns String.
Returns Sunday of this week assuming that week starts on Monday.
Returns `-1`, `0` or `+1` if this offense is less than, equal to, or greater than `other`.
Returns a +ActiveRecord::ConnectionAdapters::NullColumn+ if the named attribute does not exist.
Returns a +Pathname+ to the fixture file named +fixture_name+.
Returns a +String+ with the last requested path including their params.
Returns a +string+ identifying the path associated with the object.
Returns a CDATA section with the given +content+.
Returns a ColumnDefinition for the column with name +name+.
Returns a Duration instance matching the number of days provided.
Returns a Duration instance matching the number of fortnights provided.
Returns a Duration instance matching the number of hours provided.
Returns a Duration instance matching the number of minutes provided.
Returns a Duration instance matching the number of weeks provided.
Returns a Hash containing a collection of pairs when the key is the node name and the value is its content
Returns a Hash of attributes with their error messages.
Returns a Hash of instance variables and their values, as defined by the user in the test case, which are then assigned to the view being rendered.
Returns a Hash of name of the reflection as the key and an AssociationReflection as the value.
Returns a Hash of the Arel::Attributes and attribute values that have been typecasted for use in an Arel insert/update method.
Returns a Hash that can be used as the JSON representation for this object.
Returns a JavaScript tag with the +content+ inside.
Returns a Pathname object of the current rails project, otherwise it returns nil if there is no project:
Returns a Pathname object of the public folder of the current rails project, otherwise it returns nil if there is no project:
Returns a Rack endpoint for the given action name.
Returns a Range representing the whole day of the current time.
Returns a Range representing the whole month of the current date/time.
Returns a Range representing the whole quarter of the current date/time.
Returns a Range representing the whole week of the current date/time.
Returns a Range representing the whole year of the current date/time.
Returns a String, which Action Pack uses for constructing a URL to this object.
Returns a Time.utc() instance.
Returns a TimeZone instance matching the time zone provided.
Returns a TimeZone instance with the given name, or +nil+ if no such TimeZone instance exists.
Returns a cache key that can be used to identify the records fetched by this query.
Returns a cache key that can be used to identify this record.
Returns a chainable relation with zero records.
Returns a checkbox tag tailored for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a class containing the logic needed to load preload the data and attach it to a relation.
Returns a comment stored in database for given table
Returns a consistent, platform-independent identifier for +label+.
Returns a copy of the Array without the specified elements.
Returns a copy of the enumerable without the specified elements.
Returns a deep copy of array.
Returns a deep copy of hash.
Returns a deep copy of object if it's duplicable.
Returns a derived key suitable for use.
Returns a file upload input tag tailored for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a formatted string of the offset from UTC, or an alternative string if the time zone is already UTC.
Returns a formatted string ready to be logged.
Returns a full message for a given attribute.
Returns a hash containing  the given keys.
Returns a hash containing the removed key/value pairs.
Returns a hash mapping the names provided to the values found.
Returns a hash of all the attributes with their names as keys and the values of the attributes as values.
Returns a hash of attributes before typecasting and deserialization.
Returns a hash of attributes that were changed before the model was saved.
Returns a hash of mappings from the abstract data types to the native database types.
Returns a hash of parameters with all sensitive data replaced.
Returns a hash of request.env with all sensitive data replaced.
Returns a hash of rows to be inserted.
Returns a hash of the given methods with their names as keys and returned values as values.
Returns a hash of where conditions.
Returns a hash representing the model.
Returns a hash that includes everything except given keys.
Returns a hash that maps filenames under +dir+ (recursively) to arrays with their annotations.
Returns a hash that maps filenames under +dirs+ (recursively) to arrays with their annotations.
Returns a hash where the keys are column names and the values are default values when instantiating the Active Record object for this table.
Returns a hash with database connection information.
Returns a hash with non +nil+ values.
Returns a hash with the data for each of the names.
Returns a hash with the defined local variables.
Returns a hash with the job data that can safely be passed to the queueing adapter.
Returns a hidden input tag tailored for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a jar that'll automatically encrypt cookie values before sending them to the client and will decrypt them for read.
Returns a jar that'll automatically generate a signed representation of cookie value and verify it when reading from the cookie again.
Returns a jar that'll automatically set the assigned cookies to have an expiration date 20 years from now.
Returns a label tag tailored for labelling an input field for a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a link tag for a favicon managed by the asset pipeline.
Returns a link tag that browsers and feed readers can use to auto-detect an RSS or Atom feed.
Returns a list of character lists.
Returns a list of helper names in a given path.
Returns a list of modules, normalized from the acceptable kinds of helpers with the following behavior:
Returns a message verifier object.
Returns a module with all the helpers defined for the engine.
Returns a new ActiveModel::Name instance.
Returns a new Date representing the date 1 day after today (i.e. tomorrow's date).
Returns a new Date representing the date 1 day ago (i.e. yesterday's date).
Returns a new Date where one or more of the elements have been changed according to the +options+ parameter.
Returns a new DateTime representing the end of the day (23:59:59).
Returns a new DateTime representing the end of the hour (hh:59:59).
Returns a new DateTime representing the end of the minute (hh:mm:59).
Returns a new DateTime representing the middle of the day (12:00)
Returns a new DateTime representing the start of the day (0:00).
Returns a new DateTime representing the start of the hour (hh:00:00).
Returns a new DateTime representing the start of the minute (hh:mm:00).
Returns a new DateTime representing the time a number of seconds ago.
Returns a new DateTime representing the time a number of seconds since the instance time.
Returns a new DateTime where one or more of the elements have been changed according to the +options+ parameter.
Returns a new Time representing the end of the day, 23:59:59.999999
Returns a new Time representing the end of the hour, x:59:59.999999
Returns a new Time representing the end of the minute, x:xx:59.999999
Returns a new Time representing the middle of the day (12:00)
Returns a new Time representing the start of the day (0:00)
Returns a new Time representing the start of the hour (x:00)
Returns a new Time representing the start of the minute (x:xx:00)
Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around the Numeric extension
Returns a new Time representing the time a number of seconds since the instance time
Returns a new Time where one or more of the elements have been changed according to the +options+ parameter.
Returns a new TimeWithZone object that represents the difference between the current object's time and the +other+ time.
Returns a new array of objects from the collection.
Returns a new date/time at the beginning of the year.
Returns a new date/time at the end of the quarter.
Returns a new date/time at the start of the month.
Returns a new date/time at the start of the quarter.
Returns a new date/time representing the end of the month.
Returns a new date/time representing the end of the year.
Returns a new date/time representing the end of this week on the given day.
Returns a new date/time representing the given day in the next week.
Returns a new date/time representing the given day in the previous week.
Returns a new date/time representing the next day.
Returns a new date/time representing the next weekday.
Returns a new date/time representing the previous day.
Returns a new date/time representing the previous weekday.
Returns a new date/time representing the start of this week on the given day.
Returns a new date/time representing tomorrow.
Returns a new date/time representing yesterday.
Returns a new date/time the specified number of days ago.
Returns a new date/time the specified number of days in the future.
Returns a new date/time the specified number of months ago.
Returns a new date/time the specified number of months in the future.
Returns a new date/time the specified number of weeks ago.
Returns a new date/time the specified number of weeks in the future.
Returns a new date/time the specified number of years ago.
Returns a new date/time the specified number of years in the future.
Returns a new hash where the parameters of the given config hash have been replaced by parameters returned by the given block.
Returns a new hash with +self+ and +other_hash+ merged recursively.
Returns a new hash with all keys converted by the block operation.
Returns a new hash with all keys converted to strings.
Returns a new hash with all keys converted to symbols, as long as they respond to +to_sym+.
Returns a new hash with all keys converted using the +block+ operation.
Returns a new hash with the results of running +block+ once for every value.
Returns a new object of the collection type that has been instantiated with +attributes+ and linked to this object, but have not yet been saved.
Returns a new object of the collection type that has been instantiated with attributes, linked to this object and that has already been saved (if it passes the validations).
Returns a new relation expressing WHERE + NOT condition according to the conditions in the arguments.
Returns a new relation, which is the logical union of this relation and the one passed as an argument.
Returns a new relation, which is the result of filtering the current relation according to the conditions in the arguments.
Returns a new string with all occurrences of the patterns removed.
Returns a new validator instance.
Returns a new, unsaved instance of the associated class.
Returns a parameter for the given +key+.
Returns a quoted version of the primary key name, used to construct SQL statements.
Returns a quoted version of the table name, used to construct SQL statements.
Returns a radio button tag for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a record hash with the column names as keys and column values as values.
Returns a renderer instance (inherited from ActionController::Renderer) for the controller.
Returns a representation of the annotation that looks like this:
Returns a response that has no content (merely headers).
Returns a scope for the model without the previously set scopes.
Returns a select tag with options for each of the days 1 through 31 with the current day selected.
Returns a select tag with options for each of the five years on each side of the current, which is selected.
Returns a select tag with options for each of the hours 0 through 23 with the current hour selected.
Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected.
Returns a select tag with options for each of the months January through December with the current month selected.
Returns a select tag with options for each of the seconds 0 through 59 with the current second selected.
Returns a serialized hash of your object.
Returns a set of HTML select-tags (one for hour and minute).
Returns a set of HTML select-tags (one for year, month, and day) pre-selected with the +date+.
Returns a set of HTML select-tags (one for year, month, day, hour, minute, and second) pre-selected with the +datetime+.
Returns a set of NFA states reachable from some NFA state +s+ in set +t+ on nil-transitions alone.
Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing a specified time-based attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing a specified datetime-based attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a shallow copy of the hash.
Returns a single value from a record
Returns a string containing an XML representation of its receiver:
Returns a string like 'Post(id:integer, title:string, body:text)'
Returns a string of option tags for pretty much any time zone in the world.
Returns a string of option tags that have been compiled by iterating over the +collection+ and assigning the result of a call to the +value_method+ as the option value and the +text_method+ as the option text.
Returns a string of the object's date and time in the ISO 8601 standard format.
Returns a string of the object's date and time in the RFC 2822 standard format.
Returns a string of the object's date and time in the format used by HTTP requests.
Returns a string of the object's date and time.
Returns a string of the object's date, time, zone and offset from UTC.
Returns a string representation of the key attribute(s) that is suitable for use in an HTML DOM id.
Returns a string representation of the receiver suitable for use as a URL query string:
Returns a string suitable for an HTML image tag alt attribute.
Returns a string that represents the array in XML by invoking +to_xml+ on each element.
Returns a string which represents the time in used time zone as DateTime defined by XML Schema:
Returns a struct representing the matching attribute method.
Returns a stylesheet link tag for the sources specified as arguments.
Returns a subquery for the given key using the join information.
Returns a substring from the beginning of the string to the given position.
Returns a substring from the given position to the end of the string.
Returns a table's primary key and belonging sequence.
Returns a text_field of type "color".
Returns a text_field of type "date".
Returns a text_field of type "datetime".
Returns a text_field of type "datetime-local".
Returns a text_field of type "email".
Returns a text_field of type "month".
Returns a text_field of type "tel".
Returns a text_field of type "time".
Returns a text_field of type "url".
Returns a text_field of type "week".
Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns a textual representation of this time zone.
Returns adapter for specified name.
Returns all expanded paths but only if they exist in the filesystem.
Returns all mailer preview classes.
Returns all message keys.
Returns all message values.
Returns all of the available email previews.
Returns all rails groups for loading based on:
Returns all registered helpers paths.
Returns all the full error messages for a given attribute in an array.
Returns all the full error messages in an array.
Returns all the identifiers that were applied to this connection.
Returns all the parents of this module according to its name, ordered from nested outwards.
Returns an "action-cable-url" meta tag with the value of the URL specified in your configuration.
Returns an ActionDispatch::Request instance that represents the current request.
Returns an ActionDispatch::Response that represents the current response.
Returns an ActiveModel::Name object for module.
Returns an ActiveRecord::Relation scope object.
Returns an ActiveRecord::Result instance.
Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented by +self+.
Returns an Array of all key attributes if any of the attributes is set, whether or not the object is persisted.
Returns an HTML audio tag for the +source+.
Returns an HTML block tag of type +name+ surrounding the +content+.
Returns an HTML image tag for the +source+.
Returns an HTML script tag for each of the +sources+ provided.
Returns an HTML time tag for the given date or time.
Returns an HTML video tag for the +sources+.
Returns an array of +Column+ objects for the table specified by +table_name+.
Returns an array of AggregateReflection objects for all the aggregations in the class.
Returns an array of AssociationReflection objects for all the associations in the class.
Returns an array of Column objects for the table specified by +table_name+.
Returns an array of ColumnDefinition objects for the columns of the table.
Returns an array of all TimeZone objects.
Returns an array of all the attributes that have been specified as readonly.
Returns an array of ancestor nodes.
Returns an array of arrays containing the field values.
Returns an array of callback objects that form the before_save chain.
Returns an array of child nodes.
Returns an array of column names as strings if it's not an abstract class and table exists.
Returns an array of column names as strings.
Returns an array of column objects where the primary id, all columns ending in "_id" or "_count", and columns used for single table inheritance have been removed.
Returns an array of descendant nodes.
Returns an array of file paths appended with a hash of directories-extensions suitable for ActiveSupport::FileUpdateChecker API.
Returns an array of foreign keys for the given table.
Returns an array of generator namespaces that are hidden.
Returns an array of hashes each containing :name and :value keys suitable for use as the names and values of form input fields:
Returns an array of indexes for the given table.
Returns an array of names for the attributes available on this object.
Returns an array of ranges that should not be reported.
Returns an array of reflections which are involved in this association.
Returns an array of schema names.
Returns an array of table names defined in the database.
Returns an array of the values at the specified indices:
Returns an array of view names defined in the database.
Returns an array populated with missing keys if any are present.
Returns an array with distinct records based on the +group+ attribute:
Returns an array with the deleted records.
Returns an array with the direct children of +self+.
Returns an array with the name of the attributes with unsaved changes.
Returns an array with the removed records.
Returns an empty HTML tag of type +name+ which by default is XHTML compliant.
Returns an empty Hash if node has no attributes.
Returns an empty string if the beginning of the range is greater than the end of the string.
Returns an escaped version of +html+ without affecting existing escaped entities.
Returns an input of type "search" for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object_name+).
Returns an input tag of the "password" type tailored for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns an input tag of the "text" type tailored for accessing a specified attribute (identified by +method+) on an object assigned to the template (identified by +object+).
Returns an input tag of type "number".
Returns an input tag of type "range".
Returns an instance of ConnectionSpecification for a given adapter.
Returns an instance of DateTime with the timezone's UTC offset
Returns an instance of the specified +klass+ with the attributes of the current record.
Returns an object that is able to render templates.
Returns an xml formatted representation of the Errors hash.
Returns any connections in use by the current thread back to the pool, and also returns connections to the pool cached by threads that are no longer alive.
Returns check box tags for the collection of existing return values of +method+ for +object+'s class.
Returns constant of subscription adapter specified in config/cable.yml.
Returns default aliases for the option name given doing a lookup in Rails::Generators.aliases.
Returns default for the option name given doing a lookup in config.
Returns default value if specified.
Returns false if +no_wait+ is set and the lock is not immediately available.
Returns false if there is a +destroy_flag+ on the attributes.
Returns false on a valid response, true otherwise
Returns false unless the request credentials response value matches the expected value.
Returns fully resolved configurations hash
Returns fully resolved connection hashes.
Returns fully resolved connection, accepts hash, string or symbol.
Returns just a table's primary key
Returns keys of the session as Array.
Returns maximum number of joins in a single query.
Returns meta tags "csrf-param" and "csrf-token" with the name of the cross-site request forgery protection parameter and token, respectively.
Returns name of the database.
Returns nil if nothing should be added.
Returns nil if the initial offset falls outside the string.
Returns nothing.
Returns radio button tags for the collection of existing return values of +method+ for +object+'s class.
Returns secrets added to config/secrets.yml.
Returns select and option tags for the given object and method, using time_zone_options_for_select to generate the list of option tags.
Returns set of NFA states to which there is a transition on ast symbol +a+ from some state +s+ in +t+.
Returns size of the records.
Returns sql statement for the relation.
Returns string to use for params names.
Returns string to use while generating route names.
Returns the +Errors+ object that holds all information about attribute error messages.
Returns the +String+ full path including params of the last URL requested.
Returns the +i18n_scope+ for the class.
Returns the +signed+ or +encrypted+ jar, preferring +encrypted+ if +secret_key_base+ is set.
Returns the AggregateReflection object for the named +aggregation+ (use the symbol).
Returns the Arel engine.
Returns the Arel object associated with the relation.
Returns the AssociationReflection object for the +association+ (use the symbol).
Returns the IP address of client as a +String+, usually set by the RemoteIp middleware.
Returns the IP address of client as a +String+.
Returns the KC normalization of the string by default.
Returns the Mail::Message object
Returns the URL for the set of +options+ provided.
Returns the accepted MIME type for the request.
Returns the active schema search path.
Returns the amount of seconds a duration covers as a string.
Returns the application's KeyGenerator
Returns the association for the parent being destroyed.
Returns the association instance for the given name, instantiating it if it doesn't already exist
Returns the authorization header regardless of whether it was specified directly or through one of the proxy alternatives.
Returns the backend queue provider.
Returns the backtrace after all filters and silencers have been run against it.
Returns the base root for a common set of generators.
Returns the beginning of the array up to +position+.
Returns the class descending directly from ActiveRecord::Base, or an abstract class, if any, in the inheritance hierarchy.
Returns the class for the macro.
Returns the class name for the macro.
Returns the class name.
Returns the class of the error that will be raised when there is an error in decoding JSON.
Returns the class of the new constant.
Returns the class of the target.
Returns the class type of the record using the current module as a prefix.
Returns the column attribute of the range, except if the range is on the first line and there's a byte order mark at the beginning of that line, in which case 1 is subtracted from the column value.
Returns the column object for the named attribute.
Returns the column of the given range.
Returns the complete URL used for this request.
Returns the configuration of the associated connection as a hash:
Returns the configured supported identifier length supported by PostgreSQL
Returns the connection currently associated with the class.
Returns the constant path for the provided parent and constant name.
Returns the content length of the request as an integer.
Returns the content of the response as a string.
Returns the contents of the record as a nicely formatted string.
Returns the contents that are yielded to a layout, given a name or a block.
Returns the corresponding message for the current HTTP status code:
Returns the current ID of a table's sequence.
Returns the current Rails environment.
Returns the current behavior or if one isn't set, defaults to +:stderr+.
Returns the current client message level.
Returns the current cycle string after a cycle has been started.
Returns the current database collation.
Returns the current database ctype.
Returns the current database encoding format as a string, eg: 'UTF-8'
Returns the current database encoding format.
Returns the current database name.
Returns the current date in this time zone.
Returns the current proxy class.
Returns the current schema name.
Returns the current time back to its original state, by removing the stubs added by `travel` and `travel_to`.
Returns the database character set.
Returns the database collation strategy.
Returns the deepest existing ascendant, which could be the argument itself.
Returns the default layout for this controller.
Returns the default source root for a given generator.
Returns the default value for the option name given doing a lookup in Rails::Generators.options.
Returns the deleted messages.
Returns the description of what the correct indentation is based on.
Returns the difference in milliseconds between when the execution of the event started and when it ended.
Returns the directory in which the data files are stored.
Returns the domain part of a host given the domain level.
Returns the endpoint for this engine.
Returns the expected response for a request of +http_method+ to +uri+ with the decoded +credentials+ and the expected +password+ Optional parameter +password_is_ha1+ is set to +true+ by default, since best practice is to store ha1 digest instead of a plain-text password.
Returns the file mtime from the filesystem.
Returns the filename for the data file for this version.
Returns the first character.
Returns the first record, or the first +n+ records, from the collection.
Returns the fraction of a second as a +Rational+
Returns the fraction of a second as microseconds
Returns the fraction of a second as nanoseconds
Returns the frozen instance.
Returns the full controller name, underscored, without the ending Controller.
Returns the hash of options used for the macro.
Returns the host for this request, such as example.com.
Returns the human name of the column name.
Returns the human-readable name of the adapter.
Returns the id attribute for the input tag.
Returns the indented string, or +nil+ if there was nothing to indent.
Returns the index of the receiver node in its siblings.
Returns the initialized object if validation fails.
Returns the inverse of the given command.
Returns the kind for this validator.
Returns the kind of the validator.
Returns the last character of the string.
Returns the last record, or the last +n+ records, from the collection.
Returns the list of a table's column names, data types, and default values.
Returns the list of all column definitions for a table.
Returns the list of all tables in the schema search path.
Returns the list of enabled formats.
Returns the list of parameters which will be selected for wrapped.
Returns the locked record.
Returns the lowercase name of the HTTP server software.
Returns the macro type.
Returns the mail object for the given email name.
Returns the maximum allowed length for an index name.
Returns the maximum length of a column name.
Returns the maximum length of a table alias.
Returns the maximum length of a table name.
Returns the maximum length of an SQL query.
Returns the maximum length of an index name.
Returns the maximum number of columns in a multicolumn index.
Returns the maximum number of columns per table.
Returns the maximum number of elements in an IN (x,y,z) clause.
Returns the maximum number of indexes per table.
Returns the migrations paths.
Returns the module which contains this one according to its name.
Returns the name attribute for the input tag.
Returns the name of all database fields which have been read from this model.
Returns the name of current mailer.
Returns the name of the macro.
Returns the name of the mailer object.
Returns the name of the module containing this one.
Returns the name of the queue the job will be run on.
Returns the name of the table of the associated class:
Returns the next date in this time zone.
Returns the next value that will be used as the primary key on an insert statement.
Returns the number of affected rows.
Returns the number of bytes equivalent to the exabytes provided.
Returns the number of bytes equivalent to the gigabytes provided.
Returns the number of bytes equivalent to the kilobytes provided.
Returns the number of bytes equivalent to the megabytes provided.
Returns the number of bytes equivalent to the petabytes provided.
Returns the number of bytes equivalent to the terabytes provided.
Returns the number of days in the given month.
Returns the number of days in the given year.
Returns the number of days to the start of the week on the given day.
Returns the number of error messages.
Returns the number of grapheme clusters in the string.
Returns the number of milliseconds equivalent to the seconds provided.
Returns the number of records in this collection.
Returns the number of rows affected.
Returns the number of seconds since 00:00:00.
Returns the number of seconds that this Duration represents.
Returns the number of seconds until 23:59:59.
Returns the number of threads currently waiting on this queue.
Returns the object's date and time as a floating point number of seconds since the Epoch (January 1, 1970 00:00 UTC).
Returns the object's date and time as a rational number of seconds since the Epoch (January 1, 1970 00:00 UTC).
Returns the object's date and time as an integer number of seconds since the Epoch (January 1, 1970 00:00 UTC).
Returns the offset from current time to UTC time in seconds.
Returns the offset of this time zone from UTC in seconds.
Returns the offset value in seconds.
Returns the order in which test cases are run.
Returns the ordered railties for this application considering railties_order.
Returns the original name for the alias +name+
Returns the original request URL as a +String+.
Returns the original value of the environment's REQUEST_METHOD, even if it was overridden by middleware.
Returns the parent node, or `nil` if the receiver is a root node.
Returns the password
Returns the path component of a URL for the given record.
Returns the path of .rubocop.yml searching upwards in the directory structure starting at the given directory where the inspected file is.
Returns the path which was unable to be loaded.
Returns the plural class name of a record or class.
Returns the plural form of the word in the string.
Returns the port number of this request as an integer.
Returns the position where the match starts or +nil+ if there is no match.
Returns the previous date in this time zone.
Returns the primary key previous value.
Returns the primary key value before type cast.
Returns the primary key value.
Returns the priority that the job will be created with
Returns the receiver if it's included in the argument otherwise returns +nil+.
Returns the receiver if it's present otherwise returns +nil+.
Returns the record for an association collection that should be validated or saved.
Returns the relation names useable to back Active Record models.
Returns the result of a render that's dictated by the options hash.
Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part.
Returns the sanitized limit parameter, either as an integer, or as a string which contains a comma-delimited list of integers.
Returns the separator for a given datetime component.
Returns the sequence name for a table's primary key or some other specified key.
Returns the session as Hash.
Returns the singular class name of a record or class.
Returns the size of the cached value.
Returns the size of the collection calling +size+ on the target.
Returns the size of the collection.
Returns the source lines, line break characters removed, excluding a possible __END__ and everything that comes after.
Returns the source of the through reflection.
Returns the source root for this generator using default_source_root as default.
Returns the specified association instance if it exists, nil otherwise.
Returns the statement identifier for the client side cache of statements
Returns the string, first removing all whitespace on both ends of the string, and then changing remaining consecutive whitespace groups into one space each.
Returns the subdomains of a host as a String given the domain level.
Returns the subdomains of a host as an Array given the domain level.
Returns the suffix that should be added to a number to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
Returns the table comment that's stored in database metadata.
Returns the tail of the array from +position+.
Returns the time zone abbreviation.
Returns the type of the attribute with the given name, after applying all modifiers.
Returns the underlying TZInfo::TimezonePeriod.
Returns the underlying rack application for this engine.
Returns the underscored name of the mailer preview without the suffix.
Returns the value of the attribute identified by +attr_name+ before typecasting and deserialization.
Returns the value of the cookie by +name+, or +nil+ if no such cookie exists.
Returns the version of the connected PostgreSQL server.
Returns the version of the currently loaded Rails as a string.
Returns the wrapper key which will be used to store wrapped parameters.
Returns this record's primary key value wrapped in an array if one is available.
Returns translated month names, but also ensures that a custom month name array has a leading nil element.
Returns translated month names.
Returns true for an absolute Unix or Windows path.
Returns true for constructs such as private def my_method which are allowed in Ruby 2.1 and later.
Returns true for lines that shall not be included in the count.
Returns true if +comparison_object+ is the same exact object, or +comparison_object+ is of the same type and +self+ has an ID and it is equal to +comparison_object.id+.
Returns true if a connection has already been opened.
Returns true if a connection that's accessible to this class has already been opened.
Returns true if a method for the action is available and can be dispatched, false otherwise.
Returns true if a record exists in the table that matches the +id+ or conditions given, or false otherwise.
Returns true if another +Parameters+ object contains the same content and permitted flag.
Returns true if inverse association on the given record needs to be set.
Returns true if its required to reload the connection between requests for development mode.
Returns true if record contains the foreign_key
Returns true if relation is blank.
Returns true if relation needs eager loading.
Returns true if running with --auto-correct would remove the braces of the last argument.
Returns true if schema exists.
Returns true if statement cache should be skipped on the association reader.
Returns true if table exists.
Returns true if the "X-Requested-With" header contains "XMLHttpRequest" (case-insensitive), which may need to be manually added depending on the choice of JavaScript libraries and frameworks.
Returns true if the +lock_optimistically+ flag is set to true (which it is, by default) and the table includes the +locking_column+ column (defaults to +lock_version+).
Returns true if the application is initialized.
Returns true if the cache is currently being pruned.
Returns true if the collection has more than 1 record.
Returns true if the collection has more than one record.
Returns true if the collection is empty.
Returns true if the collections is not empty.
Returns true if the cop name or the cop namespace matches any of the given names.
Returns true if the current object's time falls within the current day.
Returns true if the current object's time is in the future.
Returns true if the current object's time is in the past.
Returns true if the current object's time is within the specified +min+ and +max+ time.
Returns true if the current time is within Daylight Savings Time for the specified time zone.
Returns true if the current time zone is set to UTC.
Returns true if the date/time does not fall on a Saturday or Sunday.
Returns true if the date/time falls on a Saturday or Sunday.
Returns true if the date/time is in the future.
Returns true if the date/time is in the past.
Returns true if the date/time is today.
Returns true if the email exists.
Returns true if the given attribute exists, otherwise false.
Returns true if the given controller is capable of rendering a path.
Returns true if the given node is within another node that has already been marked for auto-correction by this cop.
Returns true if the given path name (except perhaps for the ".rb" extension) is the missing file which caused the exception to be raised.
Returns true if the logger destination matches one of the sources
Returns true if the name can be considered an action because it has a method defined in the controller.
Returns true if the node has a comment on the line above it that isn't an annotation.
Returns true if the node has round/square/curly brackets.
Returns true if the number is negative.
Returns true if the number is positive.
Returns true if the preview exists.
Returns true if the record is persisted, i.e. it's not a new record and it was not destroyed, otherwise returns false.
Returns true if the round/square/curly brackets of the given node are on different lines, and each item within is on its own line, and the closing bracket is on its own line.
Returns true if the session has the given key or false.
Returns true if the string does not include the other string.
Returns true if there are any active connections among the connection pools that the ConnectionHandler is managing.
Returns true if there are any records.
Returns true if there are no records.
Returns true if there is a foreign key present on the owner which references the target.
Returns true if there is exactly one record.
Returns true if there is more than one record.
Returns true if there's a chance that an Include pattern matches hidden files, false if that's definitely not possible.
Returns true if this object has been destroyed, otherwise returns false.
Returns true if this object is included in the argument.
Returns true if we have the lock, false otherwise.
Returns true or false depending on whether the proc is contained in the before_save callback chain on a Topic model.
Returns true or false if a request is verified.
Returns true when the node is an access modifier.
Returns true when the node looks like an access modifier.
Returns true when the parent of what looks like an access modifier is a Class or Module.
Returns true, since this connection adapter supports migrations.
Returns true, since this connection adapter supports prepared statement caching.
Returns value of the given key from the session, or raises +KeyError+ if can't find the given key and no default value is set.
Returns value of the key stored in the session or nil if the given key is not found in the session.
Returns values of the session as Array.
Returns values that were assigned to the given +keys+.
Returns week start day symbol (e.g. :monday), or raises an +ArgumentError+ for invalid day symbol.
Returns whether a counter cache should be used for this association.
Returns whether or not the association should be validated as part of the parent's validation.
Returns whether or not this association reflection is for a collection association.
Returns whether or not this record has been changed in any way (including whether any of its nested autosave associations are likewise changed)
Returns whether or not this record will be destroyed as part of the parent's save transaction.
Returns whether the underlying handler supports streaming.
Returns whether this class is an abstract class or not.
Returns whether this request is using the standard port
Returns, for example, a bare `if` node if the given node is an `if` with calls chained to the end of it.
Returns: an AbstractAdapter object.
Reverse operation of unpack_graphemes.
Reverse the existing order clause on the relation.
Reverses all characters in the string.
Reverses the migration commands for the given block and the given migrations.
Reversible migrations are migrations that know how to go +down+ for you.
Rollback changes if a transaction is active.
Rollback the changes:
Rolling back this migration will raise an ActiveRecord::IrreversibleMigration error.
Rolls back the transaction (and turns on auto-committing).
Round trip a job in memory only
Roundtrip to Rake to allow plugins to hook into database initialization.
Routes can also be constrained to an IP or a certain range of IP addresses:
Routes can generate pretty URLs.
Routing Concerns allow you to declare common routes that can be reused inside others resources and routes.
RuboCop must be in control of where its cached data is stored.
Ruby 1.9 only supports basic whitespace
Ruby 2.0 will have type send every time, and "send nil" if it is calling itself with a specified "self" receiver
Ruby 2.2.2 will have type lvar if it is calling its own method without a specified "self"
Ruby 2.4 will change the behavior of `to_time` to preserve the timezone when converting to an instance of `Time` instead of the previous behavior of converting to the local system timezone.
Ruby has to allocate memory for the splat expansion every time that the `case` `when` statement is run.
Ruby scripts (i.e. source files with a shebang in the first line) are ignored.
Run a command in git.
Run but do not make any changes"
Run callbacks
Run the provided block and detect the new constants that were loaded during its execution.
Run the supplied block as a work unit, reloading code as needed
Run this execution.
Running both things in the same process is a recipe for a night with paracetamol.
Running several Rake tasks in a single command would trip up the runner, as the patterns would also contain the other Rake tasks.
Running that line here causes the SHOW TABLES result to be cached so we don't have to do it again in the block.
Runs EXPLAIN on the query or queries triggered by this relation and returns the result as a string.
Runs all the specified validations and returns +true+ if no errors were added otherwise +false+.
Runs all the validations within the specified context.
Runs in all validation contexts by default (nil).
Runs the callbacks for the given event.
Runs the generator configured for this class.
Runs the given block in a database transaction, and returns the result of the block.
Runs the given migration classes.
Runs the supplied command using either "rake ..." or "rails ..." based on the executor parameter provided.
Runs the supplied rake task (invoked with 'rails ...')
Runs the supplied rake task (invoked with 'rake ...')
RuntimeError: can't modify frozen instance of Array kernel/common/array.rb:988:in `pop' ./lib/rubocop/cop/style/indentation_width.rb:99:in `on_case'
SCHEMA queries cannot be EXPLAINed, also we do not want to run EXPLAIN on our own EXPLAINs no matter how loopingly beautiful that would be.
SET statements from :variables config hash http://www.postgresql.org/docs/current/static/sql-set.html
SHOW VARIABLES LIKE 'name'
SQL error in sort clause if :include is not included due to Unknown column 'authors.id'
SQL error in sort clause if :include is not included due to Unknown column 'comments.id'
SQL vs Model Load/Exists
SQLite 3.8.2 returns a newly formatted error message: UNIQUE constraint failed: *table_name*.*column_name* Older versions of SQLite return: column *column_name* is not unique
SQLite supports index names up to 64 characters.
SQLite3 will not allow you to add a NOT NULL column to a table without a default value.
STI subclasses always use their superclass' table.
Same as +deep_merge+, but modifies +self+.
Same as +indent+, except it indents the receiver in-place.
Same as +stringify_keys+, but modifies +self+.
Same as +symbolize_keys+, but modifies +self+.
Same as +transform_keys+ but modifies +self+.
Same as +transform_values+ but modifies +self+.
Same as XmlSimple::xml_in but doesn't shoot itself in the foot, and uses the defaults from Active Support.
Same semantics as +reverse_merge+ but modifies the receiver in-place.
Same thing.
Same value - no changes.
Sample usage:
Sanitizes HTML input, stripping all tags and attributes that aren't whitelisted.
Sanitizes a +string+ so that it is safe to use within an SQL LIKE statement.
Sanitizes a block of CSS code.
Sanitizes a hash of attribute/value pairs into SQL conditions for a SET clause.
Sanitizes the given LIMIT parameter in order to prevent SQL injection.
Sanity check for required instance variables so we can give an understandable error message.
Sanity check, make sure other columns exist
Sanity check.
Save the changes:
Save the new record state and id of a record so it can be restored later if a transaction fails.
Save with a different object instance, so the instance that's still held in topic.relies doesn't know about the changed attribute.
Saved - no changes.
Saves the model.
Saves the record with the updated_at/on attributes set to the current time or the time specified.
Saving changes to the parent and its associated model can now be performed automatically _and_ atomically:
Saving is not subjected to validation checks.
Saving of the parent, its associations, and the destruction of marked associations, all happen inside a transaction.
Say we're a Time to thwart type checking.
Scope all queries to the current scope.
Scopes a set of routes to the given default options.
Scopes based on the allowed values of the enum field will be provided as well.
Scopes can also be used while creating/building a record.
Scopes routes to a specific namespace.
Search for a file in autoload_paths matching the provided suffix.
Search for files recursively starting at the given base directory using the given flags that determine how the match is made.
Search the non-excluded top directories, but also add files on the top level, which would otherwise not be found.
Second configurable block to run.
Second level and higher order associations work as well:
Second request does not access the session
Second, we rely on the fact that the WebSocket connection is established with the cookies from the domain being sent along.
Second: Modifies the SELECT statement for the query so that only certain fields are retrieved:
Secondly, the field values shown when the form is initially displayed are taken from the attributes of the object passed to +form_for+, regardless of whether the object is an instance variable.
Secure cookies: Sets the `secure` flag on cookies to tell browsers they mustn't be sent along with http:// requests.
SecureRandom.base58 generates a random base58 string.
See +ClassMethods.set_callback+ for details.
See +delete_all+ for more information.
See +destroy+ for more information.
See +get+ for more details.
See +loadable_constants_for_path+ for more details.
See +request_via_redirect+ for more information.
See +send_file+ for more information on HTTP Content-* headers and caching.
See +start_exclusive+ for other options.
See ActionController::Parameters.require and ActionController::Parameters.permit for more information.
See ActionDispatch::Routing for general information about routing and routes.rb.
See ActionView::Helpers::CacheHelper for more information.
See ActionView::Helpers::FormHelper::fields_for for more info.
See ActiveModel::AttributeAssignment.
See ActiveModel::Validations::HelperMethods.validates_absence_of for more information.
See ActiveModel::Validations::HelperMethods.validates_length_of for more information.
See ActiveRecord::Aggregations::ClassMethods for documentation
See ActiveRecord::Associations::ClassMethods for documentation.
See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.
See ActiveRecord::Attributes::ClassMethods for documentation
See ActiveRecord::AutosaveAssociation.
See ActiveRecord::Callbacks for further details.
See ActiveRecord::Inheritance for more details.
See ActiveRecord::Transactions::ClassMethods for detailed documentation.
See ActiveRecord::Transactions::ClassMethods for documentation.
See ActiveRecord::Type::Value for the expected API.
See ActiveRecord::Validations for more information.
See ActiveSupport::Cache::Store for documentation.
See ActiveSupport::Cache::Strategy::LocalCache for more details.
See ActiveSupport::Inflector.constantize
See ActiveSupport::Inflector.pluralize
See ActiveSupport::Inflector.safe_constantize
See Broadcasting for more information.
See DATE_FORMATS for built-in formats.
See DATE_FORMATS for predefined formats.
See ERB documentation for suitable values.
See Module::Concerning for more.
See PostgresqlCompositeWithCustomOIDTest
See QueueAdapters for more information.
See RANGE_FORMATS for predefined formats.
See RFC 3986, section 3.3 for allowed path characters.
See RFC 4122 for details of UUID at: http://www.ietf.org/rfc/rfc4122.txt
See Rack::Utils::SYMBOL_TO_STATUS_CODE for a full list of valid +status+ symbols.
See Rack::Utils::SYMBOL_TO_STATUS_CODE for a full list.
See Response for more information on controller response objects.
See Time and TimeZone for further documentation of these methods.
See Time::DATE_FORMATS for predefined formats.
See _insert_callbacks for details on the allowed parameters.
See _insert_callbacks for parameter details.
See `Mime::Type.register`."
See active_record/lib/relation/batches.rb for more information.
See active_support/core_ext/time/conversions.rb.
See also +deconstantize+.
See also +demodulize+.
See also Table for details on all of the various column transformation.
See also http://tenderlovemaking.com/2011/06/28/til-its-ok-to-return-nil-from-to_ary.html
See calculate for examples with options.
See delete for more info.
See destroy for more info.
See docs on the FlashHash class for more details about the flash.
See example above.
See http://dev.mysql.com/doc/refman/5.7/en/savepoint.html for more information about savepoints.
See http://en.wikipedia.org/wiki/Private_network for details.
See http://feedvalidator.org/docs/error/InvalidTAG.html for more information.
See http://rubydoc.info/github/svenfuchs/i18n/master/I18n/Backend/Base:localize for more information.
See http://www.json.org for more info.
See http://www.postgresql.org/docs/current/static/errcodes-appendix.html
See http://www.postgresql.org/docs/current/static/libpq-connect.html for the list of parameters.
See http://www.postgresql.org/docs/current/static/libpq-envars.html .
See http://www.unicode.org/reports/tr15, Table 1
See http://www.unicode.org/reports/tr15/tr15-29.html for more information about normalization.
See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more possibilities.
See http://yaml.org/type/omap.html for the specification.
See https://dev.mysql.com/doc/refman/5.7/en/group-by-handling.html
See https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml for more examples.
See if it's actually a masked token or not.
See internal_methods for more details.
See method_for_action for more information.
See rubocop/cop/style/block_delimiters.rb.
See table_name for the full rules on table/class naming.
See that class for details.
See the +:weak_etag+ option.
See the +ActiveSupport::MessageVerifier+ documentation for more information.
See the ActiveSupport::Multibyte::Chars implementation for an example how to do this.
See the Mail gem documentation on the interface you need to implement for a custom delivery agent.
See the class hierarchy in Association.
See the classes under the ActiveSupport::Cache module, e.g. ActiveSupport::Cache::MemCacheStore.
See the comment at the end of file for this behavior.
See the concrete implementation for details on the expected parameter values.
See the docs of the method `converted_arrays`.
See the documentation for those methods in ActiveRecord::Type::Value for more details.
See the documentation of ActiveSupport::PerThreadRegistry for further details.
See the examples below for more information about providing custom type objects.
See the mapping rules in table_name and the full example in link:files/activerecord/README_rdoc.html for more insight.
See the valid options in the documentation for +url_for+.
See: http://google.com/, http://gmail.com/, https://maps.google.com/, http://plus.google.com/
See: http://www.postgresql.org/docs/current/static/ddl-schemas.html
See: http://www.sqlite.org/lang_altertable.html SQLite has an additional restriction on the ALTER TABLE statement
Selected adapters support index sort order
Send a finish notification with +name+ and +payload+.
Send a start notification with +name+ and +payload+.
Send the file stored at +path+ as the response body.
Send the missing method to +time+ instance, and wrap result in a new TimeWithZone with the existing +time_zone+.
Send welcome message to the internal connection monitor channel.
Sending attachment in emails is easy:
Sends any console called in the instance of a new application up to the +console+ method defined in Rails::Railtie.
Sends any generators called in the instance of a new application up to the +generators+ method defined in Rails::Railtie.
Sends any runner called in the instance of a new application up to the +runner+ method defined in Rails::Railtie.
Sends the +isolate_namespace+ method up to the class method.
Sends the file.
Sends the given binary data to the browser.
Sends the initializers to the +initializer+ method defined in the Rails::Initializable module.
Separate connections to an in-memory database create an entirely new database, with an empty schema etc, so we just stub out this schema on the fly.
Separate many using commas:
Separator and value are not corrected in 'key' mode.
Serializes a set of arguments.
Serializes duration to string according to ISO 8601 Duration format.
Serializes the relation objects Array.
Serves as a point for accessing the objects in the association.
Session is responsible for lazily loading the session from store.
Session shouldn't be changed
Sessions allow you to store objects in between requests.
Sessions are stored by default in a browser cookie that's cryptographically signed, but unencrypted.
Set +escape+ to false to disable attribute value escaping.
Set +open+ to true to create an open tag compatible with HTML 4.0 and below.
Set International negative format if it does not exist
Set `config.ssl_options` with `secure_cookies: false` to disable this feature.
Set a fake logger to avoid creating the log directory automatically
Set a prefix/suffix we can test against
Set a session in the cache.
Set back to default
Set by the Rack web server, this is a single value.
Set clearing dependencies after the finisher hook to ensure paths added in the hook are taken into account.
Set color by using a symbol or one of the defined constants.
Set config.eager_load to false so that an eager_load warning doesn't pop up
Set configure delivery behavior
Set controller variables on initialization.
Set correct permissions on new file
Set default test helper.
Set escape to false to disable attribute value escaping.
Set messages for +key+ to +value+.
Set our defaults
Set our fixture path
Set proper cache control and transfer encoding when streaming
Set routes reload after the finisher hook to ensure routes added in the hook are taken into account.
Set the authorized user for this session
Set the client message level.
Set the column to use for optimistic locking.
Set the config option
Set the config option which will be overriden
Set the current directory as base for the inherited generators.
Set the form builder to be used as the default for all forms in the views rendered by this controller and its subclasses.
Set the host name to use in the next request.
Set the i18n configuration after initialization since a lot of configuration is still usually done in application initializers.
Set the i18n scope to overwrite ActiveModel.
Set the inverse association, if possible
Set the location of mailer previews through app configuration:
Set the lookup ancestors for ActiveModel.
Set the memcache expire a few minutes in the future to support race condition ttls on read
Set the message to be shown in logs.
Set the paths from which Rails will automatically load source files, and the load_once paths.
Set the sequence to the max value of the table's column.
Set the specified association instance.
Set the view flow to support streaming.
Set the view path to an application view structure with layouts
Set the view paths.
Set to +:cascade+ to drop dependent objects as well.
Set to false to blow away fixtures cache and ensure our fixtures are loaded and thus takes into account our lack of set_fixture_class
Set to false to blow away fixtures cache and ensure our fixtures are loaded and thus takes into account our set_fixture_class
Set to false to blow away fixtures cache and ensure our fixtures are loaded and thus takes into account the +set_model_class+.
Set true if not set.
Set up gems listed in the Gemfile.
Sets a WWW-Authenticate header to let the client know a token is desired.
Sets a flash that will not be available to the next action, only to the current.
Sets a new default value for a column.
Sets a new default value for a column:
Sets an HTTP 1.1 Cache-Control header.
Sets attributes to be used when creating new records from a relation object.
Sets default arguments on generator invocation.
Sets header when not present
Sets log tags, logs the request, calls the app, and flushes the logs.
Sets readonly attributes for the returned relation.
Sets the +etag+ and/or +last_modified+ on the response and checks it against the client request.
Sets the +permitted+ attribute to +true+.
Sets the +value+ for a given +scope_type+ and +model+.
Sets the HTTP character set.
Sets the HTTP content type.
Sets the HTTP response's content MIME type.
Sets the HTTP status code.
Sets the Rails environment.
Sets the attribute used for single table inheritance to this class name if this is not the ActiveRecord::Base descendant.
Sets the base_name taking into account the current class namespace.
Sets the behavior to the specified value.
Sets the controller class name.
Sets the cookie named +name+.
Sets the default migration template that is being used for the generation of the migration.
Sets the default value for Time.zone If assigned value cannot be matched to a TimeZone, an exception will be raised.
Sets the default week start If assigned value is not a valid day symbol (e.g. :sunday, :monday, ...), an exception will be raised.
Sets the default wrapper key or model which will be used to determine wrapper key and attribute names.
Sets the defaults through app configuration:
Sets the dependency loading mechanism.
Sets the destination of generator files:
Sets the model +attributes+ from a JSON string.
Sets the model class for a fixture when the class name cannot be inferred from the fixture name.
Sets the name of the primary key column.
Sets the name of the sequence to use when generating ids to the given value, or (if the value is nil or false) to the value returned by the given block.
Sets the name of the wrapper key, or the model which +ParamsWrapper+ would use to determine the attribute names from.
Sets the order in which test cases are run.
Sets the owner attributes on the given record
Sets the precision of encoded time values.
Sets the primary key value.
Sets the schema search path to a string of comma-separated schema names.
Sets the sequence of a table's primary key to the specified value.
Sets the table name explicitly.
Sets the token parameter name for RequestForgery.
Sets the token value for the current session.
Sets the value of inheritance_column
Sets the value to the global or compile default
Sets up instance variables needed for rendering a partial.
Sets which generator should be tested:
Setting behaviors only affects deprecations that happen after boot time.
Setting it to +true+ will _always_ save the members, whereas setting it to +false+ will _never_ save the members.
Setting it to nil is useful to re-enable template lookup overriding a previous configuration set in the parent:
Setting the :extname option will control what extension (if any) is appended to the url for assets
Setting the default to +nil+ effectively drops the default:
Setting the layout to nil forces it to be looked up in the filesystem and fallbacks to the parent behavior if none exists.
Setting the value object to +nil+ has the effect of writing +nil+ to all mapped attributes.
Setting this check to "always" and "when_needed" makes sense only for code that should support Ruby 1.9, since in 2.0+ utf-8 is the default source file encoding.
Setting this is useful when you want delivery notifications sent to a different address than the one in +:from+.
Setting this option prepends a select option with a generic prompt  (Day, Month, Year, Hour, Minute, Seconds) or the given prompt string.
Settings in config/environments/* take precedence over those specified here.
Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
Setup and teardown callbacks.
Setup content type, reapply charset and handle parts order
Setup i18n configuration.
Setup the connection
Several Rack middlewares may not work and you need to be careful when streaming.
Several different Configs can be used during a run of the rubocop program, if files in several directories are inspected.
Several rails cops include app/models by default.
Severity class is simple value object about severity
Ship has a conventionally named `treasures_count` column, but the counter_cache option is not given on the association.
Short-hand for months_ago(1).
Short-hand for months_ago(3).
Short-hand for months_since(1).
Short-hand for months_since(3)
Short-hand for years_ago(1).
Short-hand for years_since(1).
Shortcut for +tempfile.close+.
Shortcut for +tempfile.open+.
Shortcut for +tempfile.path+.
Shortcut for +tempfile.read+.
Shortcut for +tempfile.rewind+.
Shortcut for +tempfile.size+.
Shortcut helper that returns all the ActionController::API modules except the ones passed as arguments:
Shortcut helper that returns all the modules included in ActionController::Base except the ones passed as arguments:
Shortcut when limit is zero.
Should be destroyed since the association is dependent.
Should be destroyed since the association is exclusively dependent.
Should be invariant.
Should be used with order.
Should convert to a Hash with String keys.
Should fail without FirmOnTheFly in the type condition.
Should grab each of the splatted keys.
Should have rewound the body.
Should merge defaults into options, creating a new hash.
Should not be called normally, but this operation is non-destructive.
Should not be destroyed since the association is not dependent.
Should only need to load the association once
Should preserve class for subclasses
Should preserve default value
Should preserve the default value.
Should replace the hash with only the given keys when given an array key.
Should replace the hash with only the given keys.
Should replace the hash without the given keys.
Should return a new hash with only the given keys when given an array key.
Should return a new hash with only the given keys.
Should return a new hash without the given keys.
Should return any option accepted by +redirect_to+.
Should succeed as validates_uniqueness_of only applies to UniqueReply and its subclasses
Should use validation from base class (which is abstract)
Shoulda then can tell generators to search for test_unit generators when some of them are not available by adding a fallback:
Show a 404 page in the browser:
Show a JPEG in the browser:
Show backtraces for deprecated behavior for quicker cleanup.
Show help message with available generators.
Sidekiq is not warning-clean :(
Sidekiq uses threads to handle many jobs at the same time in the same process.
Signal that the thread is finished with the current connection.
Significant was set to true with precision 2, using b for billion
Significant was set to true with precision 2, with custom translated units
Silence deprecation warnings within the block.
Silence logger
Silences the logger for the duration of the block.
Silences the logger within a block.
Silences the logger.
Similar to the normal callbacks that hook into the life cycle of an Active Record object, you can also define callbacks that get triggered when you add an object to or remove an object from an association collection.
Similarly if parent class changes the value then that would change the value of subclasses too.
Similarly, a simple hash without a statement will generate conditions based on equality with the SQL AND operator.
Similarly, if any of the +before_remove+ callbacks throw an exception, the object will not be removed from the collection.
Similarly, if the parent class changes the value, the value of subclasses is not changed.
Similarly, if you want it to also look up in the rails namespace, you just need to provide the :in value:
Simple Token example:
Simple download:
Simple formatter which only displays the message.
Simple memory backed cache.
Simple, efficient background processing for Ruby.
Simulate `db:migrate`
Simulate `db:rollback` + edit of the migration file + `db:migrate`
Simulate a DELETE request with the given parameters and set/volley the response.
Simulate a GET request with the given parameters.
Simulate a HEAD request with the given parameters and set/volley the response.
Simulate a PATCH request with the given parameters and set/volley the response.
Simulate a POST request with the given parameters and set/volley the response.
Simulate a PUT request with the given parameters and set/volley the response.
Simulate a real Rails app boot.
Simulate an HTTP request to +action+ by specifying request method, parameters and set/volley the response.
Simulate loading an existing user from the DB
Since +audio_url+ is based on +asset_url+ method you can set :host options.
Since +font_url+ is based on +asset_url+ method you can set :host options.
Since +image_url+ is based on +asset_url+ method you can set :host options.
Since +javascript_url+ is based on +asset_url+ method you can set :host options.
Since +stylesheet_url+ is based on +asset_url+ method you can set :host options.
Since +video_url+ is based on +asset_url+ method you can set :host options.
Since Active Record can figure out the ID of any fixture from its label, you can specify FK's by label instead of ID.
Since Active Record objects can be inside multiple transactions, this method recursively goes through the parent of the TransactionState and checks if the Active Record object reflects the state of the object.
Since HTML and JavaScript requests are typically made from the browser, we need to ensure to verify request authenticity for the web browser.
Since Rails::Railtie cannot be instantiated, any methods that call +instance+ are intended to be called only on subclasses of a Railtie.
Since Ruby does not support fall through inside of `case` `when`, like some other languages do, the order of the `when` branches does not matter.
Since autocorrect changes a number of lines, and not only the line where the reported offending range is, we avoid auto-correction if this cop has already found other offenses is the same range.
Since cache entries in most instances will be serialized, the internals of this class are highly optimized using short instance variable names that are lazily defined.
Since classes don't know their subclasses, we have to build the hierarchy between self and the record's class.
Since escaping tags is now default, this can be used when you don't want Rails to automatically escape tags.
Since fixtures are a testing construct, we use them in our unit and functional tests.
Since it always passes a ::JSON::State object as the only argument to to_json, we can detect that and forward the calls to the original to_json method.
Since it's not easy to get the position of the "else" keyword, we check "else" body against latest "when" keyword indentation.
Since jobs share a single thread pool, long-running jobs will block short-lived jobs.
Since minitest only loads plugins if its extensions are empty we have to call `load_plugins` first.
Since most emails do something interesting with database data, you'll need to write some scenarios to load messages with fake data:
Since only one table is loaded at a time, conditions or orders cannot reference tables other than the main one.
Since some of them reopen ActiveSupport::Deprecation its autoload would be triggered, resulting in a circular require warning for active_support/deprecation.rb.
Since the +notice+ and +alert+ keys are a common idiom, convenience accessors are available:
Since the HTML specification says key/value pairs have to be sent in the same order they appear in the form, and parameters extraction gets the last occurrence of any repeated key in the query string, that works for ordinary forms.
Since the IP address may not be needed, we store the object here without calculating the IP to keep from slowing down the majority of requests.
Since the argument is the object that the given block shall make calls on to build something based on the enumerable that each_with_object iterates over, an immutable argument makes no sense.
Since the association adds a method with that name to its model, it will override the inherited method and break things.
Since the change could (theoretically) introduce parsing errors, we break the loop if we find any.
Since the order is incomplete nothing will be shown
Since the preloader for habtm gets raw row hashes from the database and then instantiates them, this test ensures that it only instantiates one actual object per record from the database.
Since the router holds references to many parts of the system like engines, controllers and the application itself, inspecting the route set can actually be really slow, therefore we default alias inspect to to_s.
Since the source has a trailing newline, there is a final empty line
Since there is overhead, values must be large enough to warrant compression.
Since these exceptions are captured in transaction blocks, the parent block does not see it and the real transaction is committed.
Since this is currently depending on Redcarpet to cooperate, we are going to be naive, and only allow line highlighting when a language is specified.
Since this key is generated only once during the request, it speeds up all cache accesses.
Since this loop needs the constants it would be inconsistent to assume they should exist at this point.
Since we define a new cop class, we have to do this in a separate process.
Since we don't want the callbacks to get defined multiple times, there are guards that check if the save or validation methods have already been defined before actually defining them.
Since we have no idea, if we are concerned about IP spoofing we need to give up and explode.
Since we keep references from children to parents and not just the other way around, we cannot update an AST and share identical subtrees.
Since we're processing the view in a different thread, copy the thread locals from the main thread to the child thread.
Single method.
Single quotes not escaped in Ruby 1.9, so add extra substitution.
Singleton instance of the server
Singular names are not handled correctly:
Skip a before, after or around callback.
Skip a callback after actions.
Skip a callback around actions.
Skip a callback before actions.
Skip a previously set callback.
Skip before, after, and around action callbacks matching any of the names.
Skip blank lines
Skip files that already exist"
Skip libxml tests
Skip nokogiri tests
Skip this route unless a name has been provided or it is a standard Rails route since we can't determine whether an options hash passed to url_for matches a Rack application or a redirect.
Skip views, helpers and assets when generating a new resource.
Slices a hash to include only the given keys.
Slicing filters out non-declared keys.
Small macro to add ruby as an option to the generator with proper default value plus an instance helper method called shebang.
Sneakers is being used in production for both I/O and CPU intensive workloads, and have achieved the goals of high-performance and 0-maintenance, as designed.
So +associations+ could look like this:
So 29s gets rounded down to 0m, 30s gets rounded up to 1m, and 1m29s gets rounded down to 1m.
So a join between Developer and Project will give the default join table name of "developers_projects" because "D" precedes "P" alphabetically.
So basically you should use transaction blocks whenever you have a number of statements that must be executed together or not at all.
So descendants of MyApp::Business::Account would appear as MyApp::Business::AccountSubclass.
So either extending the provided method below, or rolling your own is required.
So for example you may use a named route directly.
So if no month select is available, January will be assumed.
So if set to "basecamp_", all table names will be named like "basecamp_projects", "basecamp_people", etc.
So if the predicate returns +true+ the attribute will become +false+.
So if you have "myapp_" as a prefix, the table name guess for an Invoice class becomes "myapp_invoices".
So in the example above, the irregular rule for octopus will now be the first of the pluralization and singularization rules that is runs.
So in the nil case, no caching will take place, but that's ok since the nil case is not the common one that we wish to optimise for.
So it's no catch-all for performance problems, but it's a great way to cut down on the number of queries in a situation as the one described above.
So it's possible that changing something outside of that call will still expire the cache.
So it's unneeded whether there are offenses or not.
So just skip.
So pass the file name without the extension.
So passing a Workshop object will attempt to use the +workshop_path+ route.
So the task of this method is to merge them according to the following rules:
So the template digest for the current action is automatically included in the ETag.
So the the method argument nodes need to be processed in current scope.
So the three-lined example in "Using partials" can be rewritten with a single line:
So the values are scoped within the Thread.current space under the class name of the module.
So there is no need to eager load them.
So they update the counter cache.
So this method creates an array of scopes corresponding to the chain.
So this would be wrong:
So to work around this we first define with the __temp__ identifier, and then use alias method to rename it to what we want.
So we check that initially parsed and reparsed duration added to time will result in the same time.
So we consider it's used to suppress false positive offenses.
So we group by the classes as well.
So we need to force their encoding to binary before applying the regular expression to ensure we are escaping all characters properly.
So we need to require this upfront to ensure we don't get a false failure, but ideally we should just fix the BigDecimal core_ext to not change to_s without arguments.
So we need to store the path at file load and revert back to it after each test.
So we only load the YAML code if we find some real code in there.
So we should build a relation to merge in rather than directly merging the values.
So we'll just skip it.
So what can be written like this:
So you shouldn't use it for elements that will be fragment cached.
So you specify the object you want messaged on a given callback.
So you'd have a concern something like this:
So, any mass-assignment idiom like
So, any strong parameters idiom like
So, at operator assignment node, we need to reference the variable before processing rhs nodes.
So, for example, if we had a _local_ variable +post+ representing an existing record,
So, if we had a comments page and wanted to render a "Go Back" link instead of a link to the comments page, we could do something like this...
So, the target may be non-empty and still lack children waiting to be read from the database.
So, to dup an arbitrary object you normally use an optimistic approach and are ready to catch an exception, say:
So, use the callback macros when you want to ensure that a certain callback is called for the entire hierarchy, and use the regular overwritable methods when you want to leave it up to each descendant to decide whether they want to call +super+ and trigger the inherited callbacks.
So, using a block, you might do something as simple as limit the actions available on certain resources, passing standard resource options through the concern:
So, we define the constant first, and load dependencies later.
So, we have to rearrange things so that the request looks like this (url-encoded):
Some CDNs only support strong ETags and will ignore weak ETags entirely.
Some ORM systems do not use IDs on nested models so in this case you want to be able to disable the hidden id.
Some are aliased such as "rails:migration" and can be invoked with the shorter "migration", others are private to other generators such as "css:scaffold".
Some arguments may be passed via environment variables:
Some cache implementation may optimize this method.
Some commands like +remove_column+ cannot be reversed.
Some common code shared between FavorUnlessOverNegatedIf and FavorUntilOverNegatedWhile.
Some configuration can be passed through +options+.
Some configuration options like :group make it impossible to do an SQL count, in those cases the array count will be used.
Some databases impose a limit on the number of ids in a list (in Oracle it's 1000) Make several smaller queries if necessary or make one query if the adapter supports it
Some documentation comment...
Some extensions can only be made to work with knowledge of the association's internals.
Some just fix the data:
Some local variables fix the problem.
Some of these gems do not call to_s implicitly.
Some special arrangements have to be made for operator methods.
Some tests depend on assumption that this attribute will have Date values.
Some times you don't care about the content of the fixtures as much as you care about the volume.
Some times you'll have template dependencies that can't be derived at all.
Some transformations are destructive in a manner that cannot be reversed.
Something like this should look familiar:
Sometimes it is useful to have access to the owner object when building the query.
Sometimes the code needs that the callbacks execute in a specific order.
Sometimes you do not want to subscribe to an event for the entire life of the application.
Sometimes you may want to isolate engine, but use helpers that are defined for it.
Sometimes you need to set up the session and cookie variables for a test.
Sometimes you want to alternate layouts depending on runtime information, such as whether someone is logged in or not.
Sometimes you want to be able to read the raw attribute data without having the column-determined typecast run its course first.
Sometimes you'll have exceptions where one action wants to use a different layout than the rest of the controller.
Sometimes you'll want to add a column in a migration and populate it immediately after.
Sometimes, you have a resource that clients always look up without referencing an ID.
Sort through the various IP address headers, looking for the IP most likely to be the address of the actual remote client making this request.
Sources may be paths to JavaScript files.
SpaceAroundOperators leaves it to AlignHash when the style is table.
Spaces are stripped from the resulting string
Spawn a new thread to serve up the controller in.
Special cases:
Special features: - Clustering and load balancing.
Specifically, performs these transformations:
Specifically, since the string is passed in the header lines as a quoted string, the double-quote character is not allowed.
Specifically:
Specifies a humanized form of a string by a regular expression rule or by a string mapping.
Specifies a limit for the number of records to retrieve.
Specifies a many-to-many relationship with another class.
Specifies a new acronym.
Specifies a new irregular that applies to both pluralization and singularization at the same time.
Specifies a new pluralization rule and its replacement.
Specifies a new singularization rule and its replacement.
Specifies a one-to-many association.
Specifies a one-to-one association with another class.
Specifies locking settings (default to +true+).
Specifies table from which the records will be fetched.
Specifies the `environment` that Puma will run in.
Specifies the `port` that Puma will listen on to receive requests, default is 3000.
Specifies the name of the queue to process the job on.
Specifies the number of `workers` to boot in clustered mode.
Specifies the number of rows to skip before returning rows.
Specifies the priority of the queue to create the job with.
Specifies whether the records should be unique or not.
Specifies words that are uncountable and should not be inflected.
Specify +options+ with additional translating options.
Specify a serializer for the signed and encrypted cookie jars.
Specify default_formats that can be rendered.
Specify either an argument or a block.
Specify relationships to be included in the result set.
Specify the backend queue provider.
Specify the layout to use for this class.
Specify the proc used to decorate input tags that refer to attributes with errors.
Specify trim mode for the ERB compiler.
Specify whether an error should be raised for missing translations
Specify whether or not the session should mimic a secure HTTPS request.
Specify whether rendering within namespaced controllers should prefix the partial paths for ActiveModel objects with the namespace.
Specify whether submit_tag should automatically disable on click
Specifying a custom converter allows the new value to be automatically converted to an instance of value class if necessary.
Specifying an empty T part is invalid.
Specifying foreign keys in fixtures can be very fragile, not to mention difficult to read.
Specifying:
Split by the first colon followed by some digits, which works for both Windows and Unix path styles.
Split the class from its module nesting
Split the comma-separated list into an array of strings
Split the token into the one-time pad and the encrypted value and decrypt it
Splits or iterates over the array in +number+ of groups, padding any remaining slots with +fill_with+ unless it is +false+.
Splits or iterates over the array in groups of size +number+, padding any remaining slots with +fill_with+ unless it is +false+.
Splitting with left parentheses and picking up last will return all columns separated with comma(,).
Spurious files that come and go should not cause a crash, at least not here.
Stack of files being loaded.
Start of 2-byte sequence, high
Start of 2-byte sequence, low
Start of 2-byte sequence, mid
Start of 3-byte sequence, high
Start of 3-byte sequence, low
Start of 3-byte sequence, mid
Start of 4-byte sequence
Starting point.
Starting with the parent node and recursively for the parent node's children, check if the node is a HEREDOC and if the HEREDOC ends below or on the last line of the parent node.
Starts a transaction in the association class's database connection.
State should be one of :new_record or :destroyed.
Statement cache is used to cache a single statement in order to avoid creating the AST again.
StatementInvalid wraps the original exception now.
Stay backwards compatible.
Stop processing work: any work that has not already started running will be discarded from the queue
Storage units output formatting.
Store a reference to a class +klass+.
Store existing prefix/suffix
Store for all cops with helper functions
Store gives you a thin wrapper around serialize for the purpose of storing hashes in a single column.
Stored value shouldn't be accessible
Stores some of the Rails initial environment parameters which will be used by middlewares and engines to configure themselves.
Stores the current environment in the database.
Stores the default scope for the class.
Storing the ha1 hash: MD5(username:realm:password), is better than storing a plain password.
Stream the file's contents if Rack::Sendfile isn't present.
Streaming can be added to a given template easily, all you need to do is to pass the :stream option.
Streaming inverts the rendering flow by rendering the layout first and streaming each part of the layout as they are processed.
Streaming may be considered to be overkill for lightweight actions like +new+ or +edit+.
Streaming should work out of the box on Rainbows.
Streams allow channels to route broadcastings to the subscriber.
String inflections define new methods on the String class to transform names for different purposes.
String methods are proxied through the Chars object, and can be accessed through the +mb_chars+ method.
String or Symbol:: :FooBar or "FooBar" becomes "foo_bar_helper", and "foo_bar_helper.rb" is loaded using require_dependency.
String, Array, Range, etc.).
Strings:: Some content to evaluate.
Strips all HTML tags from +html+, including comments.
Strips all link tags from +html+ leaving just the link text.
Strips indentation in heredocs.
Strips off trailing slash and ensures there is a leading slash.
Strong ETags are considered byte-for-byte identical.
Strong params has an internal cache to avoid duplicated loops in the most common usage pattern.
Strong params has an optimization to avoid looping every time you read a key whose value is an array and building a new object.
Stub out the JSON.load call used by the cache mechanism, so we can test what happens when an offense message has ASCII-8BIT encoding and contains a non-7bit-ascii character.
Stub the destroy method of the second child to raise an exception
Stub the save method of the first child instance to raise an exception
Student.where(grade: 9..12)
Style/IndentationWidth will handle it.
Style/LambdaCall checks for this syntax
Style/SpaceAroundBlockParameters
Style/SpaceAroundOperators
Style/SpaceBeforeBlockBraces
Style/SpaceBeforeComma, Style/SpaceAfterComma
Style/SpaceBeforeComment
Style/SpaceBeforeSemicolon, Style/SpaceAfterSemicolon
Style/SpaceInsideBlockBraces
Style/SpaceInsideBrackets
Style/SpaceInsideHashLiteralBraces
Style/SpaceInsideStringInterpolation
Stylesheets
Stylesheets (should not be removed)
Subclass FormBuilder and override or define some more helpers, then use your custom builder.
Subclasses can change their own value and it will not impact parent class.
Subclasses may override this method to add additional conditions that should be considered an action.
Subclasses must implement this method.
Subclasses of Hash may implement this method and return true to declare themselves as extractable.
Subject can be set in your I18n file at config/locales/en.yml with the following lookup:
Subsequent calls to order on the same relation will be appended.
Subtracts an interval of time from the current object's time and returns the result as a new TimeWithZone object.
Subtracts another Duration or a Numeric from this Duration.
Such abnormal situation can happen for example if the user changes the clock by hand.
Such calls always return `0`.
Such pattern can be a glob string supported by some variables.
Such queries should not be cached.
Sucker Punch is a single-process Ruby asynchronous processing library.
Superclass for ActionController functional tests.
Superclass for all database execution errors.
Superclass for the evaluation contexts used by ERB fixtures.
Supply an ActiveSupport::TimeZone name as +selected+ to have it marked as the selected option tag.
Support for ClassMethods and the included macro.
Support legacy foo.erb names even though we now ignore .erb as well as incorrectly putting part of the path in the template name instead of the prefix.
Supported options are: -h         This message ...
Supported options:
SupportedStyles
SupportedStyles:
Supporting polymorphic relationships is a little bit more complicated, since Active Record needs to know what type your association is pointing at.
Suppose that you have the following two Active Record models:
Supposing you have an action that adds a new person, optionally creating their company (by name) if it does not already exist, without web-services, it might look like this:
Suppress status output"
Surround string with single quotes if there is no quotes.
Switch `raise RuntimeError, 'message'` to `raise 'message'`, and `raise RuntimeError.new('message')` to `raise 'message'`.
Symbol representing current environment.
Symbols are not duplicable:
Symbols:: A method to call.
Synchronize calls to the cache.
Syntax error
Syntax isn't a real cop and it can't be disabled.
TEST METHODS THAT ARE REQUIRED OF THE ADAPTER'S BACKEND STORAGE OBJECT
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
TLS redirect: Permanently redirects http:// requests to https:// with the same URL host, path, etc.
TODO Once "exceptron" is in, refactor this piece to simply re-use exceptron.
TODO This should be broken apart into AD::Request::Session and probably be included by the session middleware.
TODO use regexp instead of Date.parse
TODO: Add an else clause
TODO: Add support for other encodings
TODO: Bad design.
TODO: Create an object that has caching read/write on it
TODO: Deprecate this
TODO: Don't report that a problem is corrected when it actually went away due to another correction.
TODO: Figure out what to do about literal encoding handling...
TODO: Find the correct position of the semicolon.
TODO: Fix for binds.
TODO: If we traced out assignments of variables to their uses, we might pick up on a few more instances of this issue Right now, we only detect direct calls on a Range literal (We don't even catch it if the Range is in double parens)
TODO: Make configurable.
TODO: More precise handling (rescue, ensure, nested begin, etc.)
TODO: Move all these random hacks into the ARTest namespace and into the support/ dir
TODO: Remove once this is fully in place
TODO: Revert to the original expression once the fix in Rubinius is released.
TODO: Room for optimization.
TODO: Tests demonstrating this.
TODO: The reason for this test is unclear, improve documentation
TODO: These should be defined on the initializer
TODO: This is currently handled inside ERB.
TODO: handle non-decimal literals as well
TODO: if constant name has cbase (leading ::), then we don't need to keep traversing up through nested classes/modules
TODO: limit: nil should work with all adapters.
TODO: look for constant definition and see if it is nested inside a class or module
TODO: once the offset argument is removed from find_nth, find_nth_with_limit_and_offset can be merged into this method
TODO: once the offset argument is removed we rely on offset_index within find_nth_with_limit, rather than pass it in via find_nth_with_limit_and_offset
TODO: remove the following line as soon as the return value of callbacks is ignored, that is, returning `false` does not display a deprecation warning or halts the callback chain.
TODO: test against the generated SQL since testing locking behavior itself is so cumbersome.
TODO: this is no longer required but we keep it for the moment to support older config.ru files.
TODO: would be nice if we could detect the schema change automatically.
Table aliases are automatically truncated according to the maximum length of table identifiers according to the specific database.
Table names + table aliases
Tabs are not allowed.
Tag the source with the default external encoding or the encoding specified in the file
Tags are declared in the server but computed in the connection.
Take a simple example where the layout expects the template to tell which title to use:
Take a string with embedded escapes, and convert the escapes as the Ruby interpreter would when reading a double-quoted string literal.
Take callback names and an optional callback proc, normalize them, then call the block with each callback.
Take care of the broken text/xml entry by renaming or deleting it
Take control of all existing connections so a "group" action such as reload/disconnect can be performed safely.
Take for instance Active Record subscriber tests:
Take into account that this does not include helpers defined in controllers with helper_method or other similar solutions, only helpers defined in the helpers directory will be included.
Take note that in that last case, the results are sorted in ascending order:
Take the following route definition as an example:
Take the text and format it, indented two spaces for each line, and wrapped at 72 columns:
Takes a connection URL.
Takes a path to a file.
Takes an action name and returns the name of the method that will handle the action.
Takes in a limit and checks if the attributes_collection has too many records.
Takes in an array of nested modules and extracts the last module
Takes raw_params and turns it into an array of parameters
Takes the arguments that will be passed to the perform method.
Takes the environment such as +:production+ or +:development+.
Takes the line number of a given code line and returns a string containing the previous line that's not a comment line or a blank line.
Technically MySQL allows to create indexes with the sort order syntax but at the moment (5.5) it doesn't yet implement them
Technically other types of keys are accepted:
Technically this method can be used to fetch terminal values:
Technically, it looks for the least indented non-empty line in the whole string, and removes that amount of leading whitespace.
Template lookup accounts for the action name, locales, format, variant, template handlers, and more (see +render+ for details).
Template's mime type is used if no content_type is specified
Templates can be used concurrently in threaded environments so compilation and any instance variable modification must be synchronized
Templates can share variables amongst themselves by using instance variables defined using the regular embedding tags.
Templates in the collection not already cached are written to cache.
Temporarily give up all held Share locks while executing the supplied block, allowing any +compatible+ exclusive lock request to proceed.
Temporary base class
Temporary skip passing the details_key forward.
Test assert_select_email
Test basic dispatching.
Test case for bug which would emit an "object" attribute when used with form_for using a search_field form helper
Test cases can use begin+rollback to isolate their changes to the database instead of having to delete+insert for every test case.
Test first if column creation/deletion works correctly when no transaction is in place.
Test for 30 significant digits (beyond the 16 of float), 10 of them after the decimal place.
Test for dirty reads among simultaneous transactions.
Test for mounting apps that respond to routes, but aren't Rails-like apps.
Test if :formats, :locale etc.
Test if any threads are currently waiting on the queue.
Test if the queue currently contains any elements.
Test if this Ruby supports each_object against singleton_class
Test inflections with different starting letters
Test locked eager find.
Test numeric difference between the return value of an expression as a result of what is evaluated in the yielded block.
Test private kernel method through collection proxy using has_many.
Test regular association, association with conditions, association with STI, and association with conditions assured not to be true
Test that MySQL allows multiple results for stored procedures
Test that generated cache keys are short enough to have Tempfile stuff added to them and remain valid
Test the inverse order in case the first success was a coincidence
Test the same thing as above, but make sure the view path is not eager loaded
Test typical find.
Testing membership still loops, but it's going to be faster than our own loop that converts values.
Testing that the before_update callbacks have run
Tests correction of an issue resulting in `lambdado` syntax errors.
Tests for names where .plural.singular doesn't round-trip
Tests for the implementation of these features should run on all Ruby versions and shouldn't be tested through the proxy methods.
Tests for uncountable names
Tests if render or redirect has already happened.
Tests that integration tests don't call Controller test methods for processing.
Tests the base functionality that should be identical across all cache stores.
Tests the controller dispatching happy path
Tests, setup, and teardown common to the application and plugin generator suites.
Thanks to James Tucker for the Gem tricks involved in this call.
Thanks to repeated auto-correction, we can get rid of the trailing spaces, and then the extra empty line.
That action implicitly responds to all formats, but formats can also be whitelisted:
That code returns right away, you are just subscribing to "render" events.
That could be weird, but if we parse P1Y1M0.5D and output it to ISO 8601, we'll get P1Y1MT12.0H.
That does not depend on whether the collection has already been loaded or not.
That first executes the block and then notifies all subscribers once done.
That is automatically set to ascending on the primary key ("id ASC") to make the batch ordering consistent.
That is automatically set to ascending on the primary key ("id ASC") to make the batch ordering work.
That is, a normal hash merge, with the addition that any value that is a hash, and occurs in both arguments, will also be merged.
That is, do not execute statements like 'CREATE TABLE' inside such blocks.
That is, the request API client will handle the session for you instead of Rails.
That means it does not have headers or a body.
That means that modifying attributes of the clone will modify the original, since they will both point to the same attributes hash.
That means that the message will be sent bypassing checking +perform_deliveries+ and +raise_delivery_errors+, so use with caution.
That means you have to take special care not to do anything silly in a channel that would balloon its memory footprint or whatever.
That one is particularly useful for serving assets from an SSL-protected page.
That rescue is very expensive (like 40 times slower than a predicate), and it is often triggered.
That said, we need to define the basic to_json method in all of them, otherwise they will always use to_json gem implementation, which is backwards incompatible in several cases (for instance, the JSON implementation for Hash does not work) with inheritance and consequently classes as ActiveSupport::OrderedHash cannot be serialized to json.
That said, when streaming, you need to properly check your templates and choose when to use +provide+ and +content_for+.
That way, the middleware will ignore those IP addresses, and return the one that you want.
That will ensure all the data transferred via HTTPS protocol and prevent the user from getting their session hijacked when accessing the site over unsecured HTTP protocol.
That works that way because the involved helpers know whether the resource is a new record or not, and generate HTML accordingly.
That would add something like "Process data files (345.2ms)" to the log, which you can then use to compare timings when optimizing your code.
That would just give each lambda the same reference and they would all get the last value of each.
That's a string with the absolute path of the asset, for example "/assets/rails.png".
That's an instance of the class ActiveRecord::Reflection::AssociationReflection.
That's done by replacing the question marks with symbols and supplying a hash with values for the matching symbol keys:
That's how you typically work with resources.
That's the case with our +balance+ attribute.
That's what you want the bulk of the time.
That's why a JSON string is returned.
The "central auto-correction engine" can't handle intermediate states where the code has syntax errors, so it's important to fix the trailing whitespace in this cop.
The 'value_of_e' field is defined as 'DECIMAL' with precision/scale explicitly left out.
The +:path+, +:as+, +:module+, +:shallow_path+ and +:shallow_prefix+ options all default to the name of the namespace.
The +FormBuilder+ object can be thought of as serving as a proxy for the methods in the +FormHelper+ module.
The +FormBuilder+ object is yielded when using +form_for+ or +fields_for+.
The +GeneratedAssociationMethods+ module is included in the model class immediately after the (anonymous) generated attributes methods module, meaning an association will override the methods for an attribute with the same name.
The +ParamsWrapper+ will actually try to determine the list of attribute names from the model and only wrap those attributes:
The +Path+ object is simply an enumerable and allows you to easily add extra paths:
The +String+ MIME type of the request.
The +TemplateRenderer+ and +PartialRenderer+ objects are wrappers which do all the setup and logic necessary to render a view and a new object is created each time +render+ is called.
The +add+ method accepts the following options as arguments: eager_load, autoload, autoload_once and glob.
The +attributes+ parameter can be either a Hash or an Array of Hashes.
The +authenticate_or_request_with_http_digest+ block must return the user's password or the ha1 digest hash so the framework can appropriately hash to check the user's credentials.
The +checked_value+ defaults to 1 while the default +unchecked_value+ is set to 0 which is convenient for boolean values.
The +class_name+ of the +attachable+ is passed as a String.
The +comments+ resource here will have the following routes generated for it:
The +custom_proxies+ argument can take an Array of string, IPAddr, or Regexp objects which will be used instead of +TRUSTED_PROXIES+.
The +defaults+ parameter is unused.
The +div_radio_button+ code from above can now be used as follows:
The +errors+ property of this exception contains an array of AttributeAssignmentError objects that should be inspected to determine which attributes triggered the errors.
The +expires_in+ parameter can override the value set when the entry was created.
The +extension+ argument allows you to pass a block into a has_and_belongs_to_many association.
The +extension+ argument allows you to pass a block into a has_many association.
The +extras+ hash allows you to specify options that would normally be provided as a query string to the action.
The +extras+ parameter is used to tell the request the names and values of additional request parameters that would be in a query string.
The +force_restore_state+ argument indicates if the record state should be rolled back to the beginning or just to the last savepoint.
The +form+ can be either :utc or :local (default :local).
The +given_day_in_next_week+ defaults to the beginning of the week which is determined by +Date.beginning_of_week+ or +config.beginning_of_week+ when set.
The +helper+ class method can take a series of helper module names, a block, or both.
The +id+ parameter must match the constraint passed in for this example.
The +info+ hash is optional, and if given is used to define metadata about the current schema (currently, only the schema's version):
The +ip_spoofing_check+ option is on by default.
The +key+ argument can also respond to +cache_key+ or +to_param+.
The +message+ parameter allows you to pass in an error message that is displayed upon failure.
The +message+ parameter allows you to specify a custom error message for assertion failures.
The +message+ parameter allows you to specify a custom error message to display upon failure.
The +null+ flag indicates whether the value can be +NULL+.
The +options+ argument must be a hash whose keys are *symbols*.
The +options+ hash is passed downwards:
The +options+ hash is passed to each annotation's +to_s+.
The +options+ supports two additional keys for convenience and conformance:
The +parsers+ argument can take Hash of parsers where key is identifying content mime type, and value is a lambda that is going to process data.
The +precision+ parameter can be used to limit seconds' precision of duration.
The +selected+ parameter must be either +nil+, or a string that names an ActiveSupport::TimeZone.
The +size+ method is the one that takes the loaded flag into account and delegates to +count_records+ if needed.
The +source+ can be a full path or a file.
The +source+ can be full path or file that exists in your public audios directory.
The +sources+ can be full paths or files that exists in your public videos directory.
The +sql+ parameter is a full SQL query as a string.
The +src+ argument is meant to be an image file path.
The +subscribe+ method returns a subscriber object:
The +traps+ association on +Dungeon+ and the +dungeon+ association on +Trap+ are the inverse of each other and the inverse of the +dungeon+ association on +EvilWizard+ is the +evil_wizard+ association on +Dungeon+ (and vice-versa).
The +type+ and +options+ parameters will be ignored if present.
The --no-color CLI option sets `color: false` so we don't want the `no_color` key, which is created automatically.
The .other directory is explicitly included, so the configuration file is read, and modifies the behavior.
The .rubocop.yml file inherits from default.yml where the Include config parameter is set for the rails cops.
The A Module',
The ABC size is based on assignments, branches (method calls), and conditions.
The API depends on four methods:
The API has the same methods as ActiveRecord, but each method returns a string that matches the ORM API.
The Accept header to send.
The Application is also responsible for building the middleware stack.
The Async adapter runs jobs with an in-process thread pool.
The Atom spec copyright date
The Atom spec defines five elements (content rights title subtitle summary) which may directly contain xhtml content if type: 'xhtml' is specified as an attribute.
The CLI is a class responsible of handling all the command line interface logic.
The Chars object tries to be as interchangeable with String objects as possible: sorting and comparing between String and Char work like expected.
The CommandRecorder knows how to invert the following commands:
The Configuration instance used to configure the Rails environment
The Connection itself does not deal with any specific application logic beyond authentication and authorization.
The Cop class is meant to be extended.
The Creator
The Creator')
The DOM class convention is to use the singular form of an object or class.
The DOM id convention is to use the singular form of an object or class with the id following an underscore.
The Date Helper primarily creates select/option tags for different kinds of dates and times or date and time elements.
The Deployer
The Formatter class is used for formatting URLs.
The GetIp class exists as a way to defer processing of the request data into an actual IP address.
The HTML generated for this would be (modulus formatting):
The HTML generated for this would be:
The HTML specification says that when a file field is empty, web browsers do not send any value to the server.
The HTML specification says unchecked check boxes are not successful, and thus web browsers do not send them.
The HTML specification says when +multiple+ parameter passed to select and all options got deselected web browsers do not send any value to server.
The HTML specification says when nothing is select on a collection of radio buttons web browsers do not send any value to server.
The HTTP status code.
The Inflector transforms words from singular to plural, class names to table names, modularized class names to ones without, and class names to foreign keys.
The JSON gem adds a few modules to Ruby core classes containing :to_json definition, overwriting their default behavior.
The JSON literal is not numeric, but if the other end knows by contract that the data is supposed to be a BigDecimal, it still has the chance to post-process the string and get the real value.
The PostgreSQL adapter works with the native C (https://bitbucket.org/ged/ruby-pg) driver.
The Pragma and Cache-Control headers declare how the file may be cached by intermediaries.
The Proc should take two arguments:
The Queue in stdlib's 'thread' could replace this class except stdlib's doesn't support waiting with a timeout.
The Rails core team has stated patches for the inflections library will not be accepted in order to avoid breaking legacy applications which may be relying on errant inflections.
The Rails package has several tools to help create and apply migrations.
The Rails version.
The Renderer will parse the options from the +render+ or +render_body+ method and render a partial or a template based on the options.
The RubyGems version, if it's installed.
The SQL standard only specifies what must not happen at a certain level, not what must happen.
The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements.
The Template::Error exception is raised when the compilation or rendering of the template fails.
The TimeZone class serves as a wrapper around TZInfo::Timezone instances.
The Unicode codepoint
The Unicode version that is supported by the implementation
The WatchStack keeps a stack of the modules being watched as files are loaded.
The XML builder seems to fail miserably when trying to tag something with the same name as a Kernel method (throw, test, loop, select ...)
The `:force` option is useful when you're calling some other method to ask whether you should force a cache write.
The `as` option sets the format to JSON, sets the content type to 'application/json' and encodes the parameters as JSON.
The `cached: true` will make Action View's rendering read several templates from cache at once instead of one call per template.
The `case` node plus the first `when` score one complexity point together.
The `elsif` node will get an `on_if` call from the framework later, but we're done here, so we set it to ignored.
The `if` node must have only `if` body since we excluded `if` with `else` above.
The `threads` method setting takes two numbers a minimum and maximum.
The above allows you to do:
The above code creates a new method +div_radio_button+ which wraps a div around the new radio button.
The above code will load all the comments and all of their associated authors and gravatars.
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
The above example will now change /posts/new to /posts/brand_new
The abstract adapter is used simply to bypass the bit of code that checks that the adapter file can be required in.
The acronym, however, must occur as a delimited unit and not be part of another word for conversions to recognize it:
The actual before_action that is used to verify the CSRF token.
The actual file is accessible via the +tempfile+ accessor, though some of its interface is available directly for convenience.
The actual method that is called is determined by calling method_for_action.
The actual response object is generated automatically through the use of renders and redirects and requires no user intervention.
The advantage is that you're able to add validations, callbacks, and extra attributes on the join model.
The advantages of Qu are: Multiple backends (redis, mongo), jobs are requeued when worker is killed, resque-like API.
The algorithm counts decision points and adds one.
The alias +path_to_image+ is provided to avoid that.
The alias for the active_record's table
The allowed range of precision is from 0 to 6")
The application builder allows you to override elements of the application generator without being forced to reverse the operations of the default generator.
The application is also responsible for setting up and executing the booting process.
The application object is also responsible for holding the routes and reloading routes whenever the files change in development.
The application's location on the filesystem.
The argument _n_ specifies the length, of the random string to be generated.
The argument can take six forms:
The argument passed to the block is a special kind of builder for this collection, which has the ability to generate the label and check box for the current item in the collection, with proper text and value.
The argument passed to the block is a special kind of builder for this collection, which has the ability to generate the label and radio button for the current item in the collection, with proper text and value.
The argument to the method can also be an array of fields.
The arguments must be legal JSON types (string, int, float, nil, true, false, hash or array) or GlobalID::Identification instances.
The array form is to be used when the condition input is tainted and requires sanitization.
The array has each value sanitized and interpolated into the SQL statement.
The array is flattened, and all items, including the supplied separator, are HTML escaped unless they are HTML safe, and the returned string is marked as HTML safe.
The array of files and list of directories cannot be changed after FileUpdateChecker has been initialized.
The attribute name must be a valid method name in Ruby.
The attribute writer is named after the association, which means that in the following example, two new methods are added to your model:
The authenticity token is taken from the meta tag in this case
The autocorrect loop will handle that.
The autocorrection process may have to be repeated multiple times until there are no corrections left to perform To speed things up, run auto-correcting cops by themselves, and only run the other cops when no corrections are left
The autofixer will default to `start_of_line`.
The automatic guessing of the inverse association uses a heuristic based on the name of the class, so it may not work for all associations, especially the ones with non-standard names.
The available paths in an engine are:
The base +Renderer+ class uses its +render+ method to delegate to the renderers.
The basename of the file in the client.
The basic idea for this cop was from the warning of `ruby -cw`:
The basic idea is that each thread checks out a database connection from the pool, uses that connection, and checks the connection back in.
The begin and end could also be braces, but we call the variables do...
The behavior is the same, it returns true if the collection based on the criteria has more than one record.
The behavior is the same, it returns true if the collection based on the criteria is not empty.
The below example shows how you can use this to provide performance introspection in the process:
The best way to use this is by doing key-based cache expiration on top of a cache store like Memcached that'll automatically kick out old entries.
The block form supports filtering.
The block given to the nested fields_for call will be repeated for each instance in the collection:
The block is called from within a transaction, the object is already locked.
The block is saved and will be called whenever someone instruments "render":
The block receives two arguments, an instance of the current class and the class to be invoked.
The block syntax also allows you to customize the part headers if desired:
The block syntax is also useful in providing information specific to a part:
The block takes two arguments, the first is the value paired with its key and the second is the remaining hash of options passed to +render+.
The block version of redirect allows for the easy encapsulation of any logic associated with the redirect in question.
The body assignment is last, since the loop variable bar has an assignment too.
The bundled ActiveRecord::ConnectionAdapters distinguish unique index constraint errors from other types of database errors by throwing an ActiveRecord::RecordNotUnique exception.
The cache file has not been created because there was a symlink in its path.
The cache is busted.
The cache is even shared across methods to make it even cheaper to use the macro-added methods without worrying too much about performance at the first go.
The cache is supposed to never expire.
The cache is thus automatically bumped whenever the project updated_at is touched.
The cache key generated from this call will be something like:
The cache key is built with a fingerprint of the sql query, the number of records matched by the query and a timestamp of the last updated record.
The cache of threads mapped to reserved connections, the sole purpose of the cache is to speed-up +connection+ method, it is not the authoritative registry of which thread owns which connection, that is tracked by +connection.owner+ attr on each +connection+ instance.
The cache responds that it's not valid, which means that new results should normally be collected and saved...
The caching is done using the +cache+ helper available in the Action View.
The call method must accept two arguments, params and request, and return a string.
The callback implementation should be restricted to cleaning up caches, etc.
The callback is unsubscribed automatically after that.
The callback objects have methods named after the callback called with the record as the only parameter, such as:
The capitalization of the first word can be turned off by setting the +:capitalize+ option to false (default is true).
The capitalization of the first word can be turned off by setting the optional parameter +capitalize+ to false.
The capture method can be used in ERB templates...
The capture method extracts part of a template as a String object.
The case of explicitly lying about encodings via the normal Rails API should be handled inside Rails.
The chain starts with the target table, but we want to end with it here (makes more sense in this context), so we reverse
The channel just acts as a connector between the two parties (the broadcaster and the channel subscriber).
The channel provides the basic structure of grouping behavior into logical units when communicating over the WebSocket connection.
The charset of the response.
The check are based on the presence of flow of control statement in non-final position in *begin*(implicit) blocks.
The check for an existing value should be run from a class that isn't abstract.
The check stops when we reach Object or the end of ancestors tree.
The checksum of the rubocop program running the inspection.
The child process may exit before we wait
The cipher text and initialization vector are base64 encoded and returned to you.
The class has a block comment within, so it's not corrected.
The class is initialized with a stream and can be used to either write a JSON string or an object which can be converted to JSON.
The class methods proxy to said thread local instance.
The class provides version or help information if they were requested, and also constructs the railsrc file (used for extra configuration options).
The class returned implements a `run` method that accepts a preloader.
The classic example is a transfer between two accounts where you can only have a deposit if the withdrawal succeeded and vice versa.
The classic example is the use of a header and footer (even though the Action Pack-way would be to use Layouts):
The closing brace of a multi-line array literal must be on the line after the last element of the array.
The closing brace of a multi-line array literal must be on the same line as the last element of the array.
The closing brace of a multi-line hash literal must be on the line after the last element of the hash.
The closing brace of a multi-line hash literal must be on the same line as the last element of the hash.
The closing brace of a multi-line method call must be on the line after the last argument of the call.
The closing brace of a multi-line method call must be on the same line as the last argument of the call.
The closing brace of a multi-line method definition must be on the line after the last parameter of the definition.
The closing brace of a multi-line method definition must be on the same line as the last parameter of the definition.
The closing brace.
The closure created by the matcher would otherwise evaluate for `ActiveRecord::Base`, not the sub class being decorated.
The code is equivalent to:
The code might look like this:
The command above creates a new root object and adds "app/controllers" as a path.
The comment will be added below a shebang and encoding comment.
The compact style is only forced for classes/modules with one child.
The connection is long-lived, so it needs its own set of tags for its independent duration.
The connection pool is "fair" if threads waiting for connections receive them in the order in which they began waiting.
The connection will remain open and active but will no longer be managed by this pool.
The constant WidgetsController can be resolved from the name.
The constant is no longer reachable, just skip it.
The constructor for the value class is called +create+ and it expects a CIDR address string as a parameter.
The contents are the same, so no corruption of data should occur.
The contents of the nonce are implementation dependent.
The controller generator will then try to invoke the following generators:
The controller passes objects to the view by assigning instance variables:
The controller specifies a form builder as its default:
The cookie is signed by your app's `secrets.secret_key_base` value.
The cookie jar used for storage is automatically configured to be the best possible option given your application's configuration.
The cookies being read are the ones received along with the request, the cookies being written will be sent out with the response.
The cookies of the request that initiated the WebSocket connection.
The cop also reports warnings when you are using 'to_time' method, because it doesn't know about Rails time zone either.
The cop is configurable and the enforce the use of older something_filter methods or the newer something_action methods.
The cop only registers an offense if the extra line is completely empty.
The corresponding relative version, 'sqlite3:foo', is handled elsewhere, as an "opaque".
The counter cache is incremented when an object of this class is created and decremented when it's destroyed.
The counter_cache option must be given on either the owner or inverse association, and the column must be present on the owner.
The currency unit and number formatting of the current locale will be used unless otherwise specified in the provided options.
The current Rails environment (development, test, or production).
The current cycle string can be obtained anytime using the current_cycle method.
The current is to only run them in isolation to avoid randomly failing our test suite.
The current iteration of the partial.
The current object and the result lambda of the callback will be provided to the terminator lambda.
The current object being rendered, as well as the object_counter, will be available as local variables inside the layout template under the same names as available in the partial.
The current set of inflection rules is frozen.
The current table in this iteration becomes the foreign table in the next
The custom FormBuilder class is automatically merged with the options of a nested fields_for call, unless it's explicitly set.
The cycle helper depends on this behavior.
The cycle helpers need to store the cycles in a place that is guaranteed to be reset every time a page is rendered, so it uses an instance variable of ActionView::Base.
The cyclomatic complexity is the number of linearly independent paths through a method.
The database still needs to send all the data to Active Record and it still needs to be processed.
The declaration can also include an +options+ hash to specialize the behavior of the association.
The decrement is performed directly on the underlying attribute, no setter is invoked.
The default 'now'::date is CURRENT_DATE
The default Action View context is ActionView::Base.
The default Chars implementation assumes that the encoding of the string is UTF-8, if you want to handle different encodings you can write your own multibyte string handler and configure it through ActiveSupport::Multibyte.proxy_class.
The default ConnectionPool maximum size is 5.
The default Content-Type and Content-Disposition headers are set to download arbitrary binary files in as many browsers as possible.
The default Multibyte Chars proxy has more features than the normal string implementation.
The default argument is returned if the underlying implementation does not define the indexes method, as there's no way to determine the correct answer in that case.
The default can be changed as follows:
The default format is ISO 8601.
The default implementation returns this record's id as a String, or nil if this record's unsaved.
The default includes both 'controller' and 'action' because they are added by Rails and should be of no concern.
The default inflections for pluralization, singularization, and uncountable words are kept in inflections.rb.
The default inheritance column name is +type+, which means it's a reserved word inside Active Record.
The default is +false+.
The default is +nil+, which tells the method to make a guess by peeking at the first indented line, and fallback to a space if there is none.
The default iterations are higher than required for our key derivation uses on the off chance someone uses this for password storage
The default key_size is chosen to be compatible with the default settings of ActiveSupport::MessageVerifier.
The default normalization used for operations that require normalization.
The default queue adapter is the +:async+ queue.
The default regexp for an acceptable copyright notice can be found in config/default.yml.
The default returns "Infinity" or "NaN" which are not valid JSON.
The default sanitizer is Rails::Html::WhiteListSanitizer.
The default strategy for an UPDATE with joins is to use a subquery.
The default sum of an empty list is zero.
The default terminator halts the chain when a callback throws +:abort+.
The default threshold is 16K.
The default trusted IPs list simply includes IP addresses that are guaranteed by the IP specification to be private addresses.
The default value for +include_root+ is +false+.
The default view class is ActionView::Base.
The default way Rails renders views is by first rendering the template and then the layout.
The delegations may vary depending on the klass of a relation, so we create a subclass of Relation for each different klass, and the delegations are compiled into that subclass only.
The deprecated constant now returns the value of the new one.
The deprecator defaults to +ActiveSupport::Deprecator+ if none is specified.
The details are changed, so a new cache key is generated.
The difference here being that the routes generated are like /:account_id/projects, rather than /accounts/:account_id/projects.
The difference is that returns +self+, instead of an array with the deleted objects, so methods can be chained.
The difference to the default template method is that the migration version is appended to the destination file name.
The different methods are available to make the tests more expressive.
The digest will be generated using +virtual_path:+ if it is provided.
The digestor can be bypassed by passing skip_digest: true as an option to the cache call:
The disable comment should not be reported as unnecessary (even if it is) since --except overrides configuration.
The disable comment should not be reported as unnecessary (even if it is) since --only overrides configuration.
The driver calls +env+, +url+, and +write+
The drivers each provide mechanisms for listening for the completion of the Ajax request and performing JavaScript operations once they're complete
The easiest thing for you to do is to simply ignore encodings.
The elements will be delimited by slashes, and the elements within a Hash will be sorted by key so they are consistent.
The error message is different depending on whether a single id or multiple ids are provided.
The escaping performed in this method is identical to those performed in the Active Support JSON encoder when +ActiveSupport.escape_html_entities_in_json+ is set to true.
The exact number varies by browser and version.
The example above generates "http://assets1.example.com" and "http://assets2.example.com".
The example above will create a test framework option and will invoke a generator based on the user supplied value.
The example of partial use describes a familiar pattern where a template needs to iterate over an array and render a sub template for each of the elements.
The example proc below disables asset hosting for HTTPS connections, while still sending assets for plain HTTP requests from asset hosts.
The exception has an +attribute+ property that is the name of the offending attribute.
The exception has an +errors+ property that contains an array of AttributeAssignmentError objects, each corresponding to the error while assigning to an attribute.
The exceptions AdapterNotSpecified, AdapterNotFound and +ArgumentError+ may be returned on an error.
The exceptions app should be passed as parameter on initialization of ShowExceptions.
The exhaustive tests are in test/controller/html/sanitizer_test.rb.
The existing source is immutable so we need a new object
The expected default behavior is an XMLHttpRequest in the background instead of the regular POST arrangement, but ultimately the behavior is the choice of the JavaScript driver implementor.
The expiration time is used to support the :race_condition_ttl option on the cache.
The exploded style works identically, but with the addition that it will also suggest constructing error objects when the exception is passed multiple arguments.
The extent of a "deep" copy is application specific and is therefore left to the application to implement according to its need.
The extra text that comes after the last token could be __END__ followed by some data to read.
The face attribute must be in the object and it cannot be blank or marked for destruction.
The fact that we pass `:developers_projects_join` to `references` and that the SQL string contains `developers_projects_join` is merely a coincidence.
The final caveat is that your actions are executed in a separate thread than the main thread.
The final result would be:
The final string will be 'converted' back to UTF-8 before returning.
The first and last part used to find the generator to be invoked are guessed based on class invokes hook_for, as noticed in the example above.
The first argument is an array like command line arguments:
The first character of the string is at position 0, the next at position 1, and so on.
The first element.
The first is a version of library and the second is a library name
The first is an array of files and the second is an optional hash of directories.
The first pair is always considered correct.
The first_name attribute must be in the object and it cannot be blank.
The first_name attribute must be in the object and it must be blank.
The flash provides a way to pass temporary primitive-types (String, Array, Hash) between actions.
The following URL is unescaped, this is just a hash of options, and it is the responsibility of the caller to escape all the values.
The following are all valid examples:
The following bundled adapters throw the ActiveRecord::RecordNotUnique exception:
The following call would generate such a tag:
The following checks can also be supplied with a proc or a symbol which corresponds to a method:
The following code will resolve the constant:
The following example demonstrates an extension which can be used with or without Rails.
The following example demonstrates the problem:
The following example finds all customers with +balance_amount+ equal to 20 and +balance_currency+ equal to "USD":
The following example would subscribe to a broadcasting like `comments:Z2lkOi8vVGVzdEFwcC9Qb3N0LzE`
The following generated method calls the target exactly once, storing the returned value in a dummy variable.
The following invariants must be true for all conformant implementations
The following is not a valid RFC 4122 UUID, but PG doesn't seem to care, so we shouldn't block it either.
The following methods for retrieval and query of a single associated object will be added:
The following methods for retrieval and query of collections of associated objects will be added:
The following migration will remove the table 'horses' and create the table 'apples' on the way up, and the reverse on the way down.
The following options are accepted:
The following options are supported:
The following regexp detects special labels followed by a paragraph, perhaps at the end of the document.
The following statements:
The following symbols are special:
The following transaction covers any possible database side-effects of the attributes assignment.
The following validations are added automatically: * Password must be present on creation * Password length should be less than or equal to 72 characters * Confirmation of password (using a +password_confirmation+ attribute)
The foreign keys are represented as ForeignKeyDefinition objects.
The form's authenticity parameter.
The form_for method automatically includes the model id as a hidden field in the form.
The format of a fixture file looks like this:
The former is used to mark parameters as required.
The frozen string literal comment is only valid in Ruby 2.3+.
The full request object is available via the request accessor and is primarily used to query for HTTP headers:
The generated ID for a given label is constant, so we can discover any fixture's ID without loading anything, as long as we know the label.
The given key may still get filtered out when +permit+ is called.
The given symbol(s) should match the name of the association(s).
The handler must respond to +:call+, which will be passed the template and should return the rendered template as a String.
The hard limit is 1GB, according to section 8.3 in the manual.
The hard limit is 1GB, because of a 32-bit size field, and TOAST.
The hash form works much like the array form, except only equality and range is possible.
The hash is passed to the supplied Proc or the method and it should return either +true+ or +false+.
The hash method is especially useful when you're receiving the data from somewhere else, like an HTTP request.
The hash must have directories as keys and the value is an array of extensions to be watched under that directory.
The hash should contain a :path with the incoming request path and a :method containing the required HTTP verb.
The hash will automatically be wrapped in a JSON envelope with the proper channel identifier marked as the recipient.
The header to use is set via +config.action_dispatch.x_sendfile_header+.
The headers will be merged into the Rack env hash.
The helper gets the name of the favicon file as first argument, which defaults to "favicon.ico", and also supports +:rel+ and +:type+ options to override their defaults, "shortcut icon" and "image/x-icon" respectively:
The hidden field has the same name and its attributes mimic an unchecked check box.
The hidden field has the same name as collection radio button and blank value.
The hidden field has the same name as multiple select and blank value.
The hidden field has the same name as the file one and a blank value.
The hierarchy is defined as follows: Association - SingularAssociation - BelongsToAssociation - HasOneAssociation - CollectionAssociation - HasManyAssociation
The hooks lookup is similar as above:
The hostname used in the last request.
The human way of thinking about adding stuff to the beginning of a list is with prepend.
The human way of thinking about adding stuff to the end of a list is with append.
The ignore_default_scope flag is used to prevent an infinite recursion situation where a default scope references a scope which has a default scope which references a scope...
The immutable requirement is enforced by Active Record by freezing any object assigned as a value object.
The implicit block given to +link_to_unless_current+ is evaluated if the current action is the action given.
The inclusion of the ETag prevents a replay request for an updated version of the resource.
The inclusion pattern has pages that look like this:
The increment is performed directly on the underlying attribute, no setter is invoked.
The indentation of the remaining lines can be corrected with other cops such as `IndentationConsistency` and `EndAlignment`.
The instance of ActionView::Base that is used by +render+.
The instrumenters for multiple notifiers are held in a single instance of this class.
The intended use case for this method is to escape JSON strings before including them inside a script tag to avoid XSS vulnerability:
The internal PostgreSQL identifier of the money data type.
The iteration object has knowledge about which index the current object has in the collection and the total size of the collection.
The job is not sent to the queueing adapter but directly executed by blocking the execution of others until it's finished.
The join should match SpecialComment and its subclasses only
The join table should not have a primary key or a model associated with it.
The key is expanded using ActiveSupport::Cache.expand_cache_key.
The key is the table, the value is a list of rows to insert to that table.
The key of the hashes should be directories and the values should be an array of extensions to match in each directory.
The key should be +:where+ and the value should be the where value to unscope.
The keys are unchanged.
The keys must be the fixture names, that coincide with the short paths to the fixture files.
The keys of the hash which is the value for +:posts_attributes+ are ignored in this case.
The label of the current fixture is always available as a column value:
The last example above can be alternatively written this way:
The last one is an argument to the first, and they both start on the same line.
The last point is easily explained with some enumerables:
The last three methods are required in your object for +Errors+ to be able to generate error messages correctly and also handle multiple languages.
The latter is a flawed and unsustainable approach (the more migrations you'll amass, the slower it'll run and the greater likelihood for issues).
The latter is a shortcut for:
The latter is used to set the parameter as permitted and limit which attributes should be allowed for mass updating.
The latter method iterates through an array doing regular expression matches, which results in a lot of object creations.
The line below is required because mount sometimes fails when a resource route is added.
The list of addressable types to load is determined on the back of the addresses loaded.
The list of form-data media types can be modified through the +FORM_DATA_MEDIA_TYPES+ array.
The list of rescued classes is an array.
The location header we'll be responding with.
The log subscriber dispatches notifications to a registered object based on its given namespace.
The lookup in this case for test_unit as input is:
The lookup will happen on the name of the class.
The love zone is UTC+0
The mail method, if not passed a block, will inspect your views and send all the views with the same name as the method, so the above action would send the +welcome.text.erb+ view file as well as the +welcome.html.erb+ view file in a +multipart/alternative+ email.
The main method that creates the message and renders the email templates.
The map tells them where to go based on some predefined pattern:
The mapping that binds a given Active Record class to a certain database table will happen automatically in most common cases, but can be overwritten for the uncommon ones.
The mappings are exposed through a class method with the pluralized attribute name, which return the mapping in a +HashWithIndifferentAccess+:
The masking is used to mitigate SSL attacks like BREACH.
The match will always use the default encoding or ASCII.
The maximum allowed length is configurable.
The maximum length is configurable.
The maximum level of nesting allowed is configurable.
The maximum line length is configurable.
The maximum number of parameters is configurable.
The message is signed with the +MessageVerifier+'s secret.
The method +deserialize+ or +cast+ will be called on your type object, with raw input from the database or from your controllers.
The method also contains logic that handles the type of object passed in as the partial.
The method arguments are symbols which correspond to the names of the methods which should be unscoped.
The method can also be called with multiple arguments.
The method can be used in several slightly different ways, depending on how much you wish to rely on Rails to infer automatically from the model how the form should be constructed.
The method for the form defaults to POST.
The method has no block comment inside, but it's within a class that has a block comment, so it's not corrected either.
The method is intended to return an ActiveRecord::Relation object, which is composable with other scopes.
The method reference callbacks work by specifying a protected or private method available in the object, like this:
The method reference is the preferred approach to variable layouts and is used like this:
The method removes the basename of the file path and the digest, if any.
The method returns true if at least one element is the same.
The method will also ensure an HTTP Date header for client compatibility.
The method, proc or string should return or evaluate to a +true+ or +false+ value.
The methods which wrap a form helper call.
The migration version, migration file name, migration class name are available as instance variables in the template to be rendered.
The migrations module handles this automatically.
The minimum required to qualify for browser preload lists is `18.weeks`.
The month names are presented as keys (what's shown to the user) and the month numbers (1-12) are used as values (what's submitted to the server).
The most common usage pattern for this method is probably in a migration, when just after creating a table you want to populate it with some default values, eg:
The most common way of defining these writers is either with +accepts_nested_attributes_for+ in a model definition or by defining a method with the proper name.
The most versatile and common is the rendering of a template.
The mysql2 and postgresql adapters support setting the transaction isolation level.
The name is assumed to be the one of a top-level constant, no matter whether it starts with "::" or not.
The name of the database adapter for the current environment.
The name of the key on the associated records
The name of the key on the model which declares the association
The names in the template are replaced with the corresponding values from the hash.
The namespace attribute will be prefixed with underscore on the generated HTML id.
The namespace can be either a static value or a Proc.
The new instance is yielded to the passed block.
The new method will return nil if the node does not match If the node matches, and a block is provided, the new method will yield to the block (passing any captures as block arguments).
The next iteration will find the offense again and correct it.
The next thing that changes in isolated engines is the behavior of routes.
The node must begin inside the parent, otherwise node is the first part of a chained method call.
The nonce is opaque to the client.
The normal offset, i.e., the distance from the punctuation token where a space should be, is 1.
The number of arguments in the signature must match.
The number of iterations that will be done by the partial.
The number of times a specific job is enqueued can be asserted.
The object being replaced will still be saved to update its foreign key.
The object is instantiated first, therefore all callbacks and filters are fired off before the object is deleted.
The object returned is a relation, which can be further extended.
The offense on line 4 is corrected, affecting lines 4 to 11.
The offenses that couldn't be corrected will be found again so we only keep the corrected ones in order to avoid duplicate reporting.
The offset is the number of seconds that this time zone is offset from UTC (GMT).
The only exception in ActiveModel for ActiveRecord is the use of self.build instead of self.new.
The only necessary method to implement is the "perform" method.
The only requirement is that the +model+ parameter be an object that responds to +all+, and returns an array of objects that represent time zones.
The only restriction is that the word must begin with a capital letter.
The opening brace.
The option currently held by the object will be selected, provided that the object is available.
The option is ignored for collection associations.
The option symbols for setting cookies are:
The options are :table_name and :table_name_with_underscore.
The options argument is interpreted to be a hash of header names and values.
The options for atom_feed are:
The options hash is passed to the underlying cache implementation.
The options version of redirect allows you to supply only the parts of the url which need to change, it also supports interpolation of the path similar to the first example.
The order clause takes precedence over the informed ids
The order in which jobs are processed can be configured differently depending on the adapter.
The order in which mappings are defined determines the order in which attributes are sent to the value class constructor.
The order of the mappings will determine the order of the parameters.
The order will depend on the database implementation.
The original exception that was raised during deserialization of job arguments.
The other `when` nodes get 0.2 complexity points.
The other elements' indentations are handled by the AlignArray cop.
The other keys' indentations are handled by the AlignHash cop.
The other settings from default.yml are unchanged.
The output embedding writes it to the current template.
The output is machine-parsable.
The owner is passed as a parameter to the block.
The parameter is called MinDigits (meaning the minimum number of digits for which an offense can be registered), but essentially it's a Max parameter (the maximum number of something that's allowed).
The parameters in the signature may have reserved Ruby words, in order to prevent errors, we start each param name with `_`.
The parent of top-level and anonymous modules is Object.
The path is calculated like the +src+ of +image_tag+.
The paths are interpreted as relative to dir1 because .rubocop.yml is placed there.
The payload is a mechanism that allows instrumenters to pass extra information to subscribers.
The penalty for the rest of strings is marginal.
The phrase "Updating salaries..." would then be printed, along with the benchmark for the block when the block completes.
The plugin builder allows you to override elements of the plugin generator without being forced to reverse the operations of the default generator.
The point of fixtures are that they're stable units of predictable sample data.
The point of this check is that it's easy to miss the call tacked on to the block when reading code.
The possible config values are:
The postgres drivers don't allow the creation of an unconnected PGconn object, so just pass a nil connection object for the time being.
The power of the +validates+ method comes when using custom validators and default validators in one call for a given attribute.
The precise error is added in the message.
The precise location of the problem is shown together with the relevant source code.
The preferred alternative is set in the EnforcedStyle configuration parameter.
The prefix is a generation timestamp (in UTC).
The prefixes used in render "foo" shortcuts.
The preliminary path is used so that if there are multiple RuboCop processes trying to save data for the same inspected file simultaneously, the only problem we run in to is a competition who gets to write to the final file.
The primary options are:
The proper way to communicate between layout and template, regardless of whether you use streaming or not, is by using +content_for+, +provide+ and +yield+.
The provided constant descriptor may be a (non-anonymous) module or class, or a qualified constant name as a string or symbol.
The proxy class returned when calling mb_chars.
The proxy objects that control the access to associations can be extended through anonymous modules.
The public controller methods +respond_to+ may be called with a block that is used to define responses to different mime-types, e.g. for +respond_to+ :
The purpose of allowing strings in rescue_from is to support the declaration of handler associations for exception classes whose definition is yet unknown.
The quality of the implementation depends on a good choice.
The quantifiers don't need to be a continuous sequence
The real benefit of streaming is on expensive actions that, for example, do a lot of queries on the database.
The reason for doing this is simple -- in `distance_of_time_to_words`, when we take the distance between our two Time objects in seconds and convert it to minutes, we round the number.
The reason for removing so much is that cleaning should be done relatively seldom, since there is a slight risk that some other RuboCop process was just about to read the file, when there's parallel execution and the cache is shared.
The reason is that the parent model's type is a column value so its corresponding table name cannot be put in the +FROM+/+JOIN+ clauses of that query.
The reason it can't be implemented as a normal cop is that it depends on the results of all other cops to do its work.
The reason that the save param for replace is false, if for create (not just build), is because the setting of the foreign keys is actually handled by the scoping when the record is instantiated, and so they are set straight away and do not need to be updated within replace.
The recall key is only used if there is no key in the options or if the key in the options is identical.
The receiver is not contained within the result.
The reconnection time in milliseconds used when attempting to send the event.
The references are forever, so they won't be released as is normally the case with a controller instance that gets thrown away after every request.
The referrer information is pulled from the HTTP `Referer` (sic) header on the request.
The regexp that matches blank strings is expensive.
The registered preview interceptors will be informed so that they can transform the message as they would if the mail was actually being delivered.
The registry is stored as a thread local, which is accessed through +ScopeRegistry.current+.
The regular _puts_ and _print_ methods do not operate as expected in an eRuby code block.
The reincarnation of syntax cop :)
The reject_if option is defined by +accepts_nested_attributes_for+.
The remaining request parameters, the session (if one is available), and the full request with all the HTTP headers are made available to the action through accessor methods.
The remote_addr used in the last request.
The render call itself will just return a string holding the result of the rendering.
The replacement should always be a string that may include references to the matched data from the rule.
The request body is an IO input stream.
The request that initiated the WebSocket connection is available here.
The request that the response is responding to.
The requirements for implementing ActiveModel::Dirty are:
The resource and all segments will now route to /postings instead of /posts
The response can be committed multiple times
The response code of the request.
The response is sent to the client after the whole template is rendered, all queries are made, and the layout is processed.
The rest is unchanged.
The rest is used by rails internally to perform temporary rename operations
The result after rendering is:
The result can be used as an argument for establish_connection, for easily re-establishing the connection.
The result is returned as a new TimeWithZone object.
The result is the following:
The result may contain alphanumeric characters except 0, O, I and l
The result of calling `write` when this is `false` is determined by `ignore_disconnect`.
The result would be
The result would be the same if we added +:inverse_of+ to our model definitions:
The resulting code will be a Fixnum, for real HTTP codes, and it will be a String for the pseudo-HTTP codes, such as: :success, :missing, :redirect and :error
The resulting object is returned whether the object was saved successfully to the database or not.
The resulting string will be stripped in any case.
The results will be returned as an array with columns requested encapsulated as attributes of the model you call this method from.
The return value is the relation itself, not the records.
The return value of the block will be written to the cache under the given cache key, and that return value will be returned.
The return value of this method will implement the interface described by ActiveModel::Type::Value (though the object itself may not subclass it).
The return values are used as the +value+ attribute and contents of each check box tag, respectively.
The return values are used as the +value+ attribute and contents of each radio button tag, respectively.
The returned relation implements the Null Object pattern.
The returned value from this method should be a +String+, +Numeric+, +Date+, +Time+, +Symbol+, +true+, +false+, or +nil+.
The reverse of +camelize+.
The reverse of +pluralize+, returns the singular form of a word in a string.
The rightmost argument to +form_for+ is an optional hash of options -
The root node reflects the class name of the first element in plural if all elements belong to the same type and that's not Hash:
The route key also considers if the noun is uncountable and, in such cases, automatically appends _index.
The routing module provides URL rewriting in native Ruby.
The row is simply removed with an SQL +DELETE+ statement on the record's primary key, and no callbacks are executed.
The rule can either be a string or a regular expression.
The rules for duplicated keys follow the semantics of indifferent access:
The rules used to do the guess are handled by the Inflector class in Active Support, which knows almost all common English inflections.
The same as +content_for+ but when used with streaming flushes straight back to the layout.
The same as FileSystemResolver but does not allow templates to store a virtual path since it is invalid for such resolvers.
The same instance variables defined in the action are passed to all email templates.
The same record may be represented in the persisted array and in the memory array.
The savepoint is now gone and we can't remove it again.
The scope for this association.
The second argument indicates whether the callback is to be run +:before+, +:after+, or +:around+ the event.
The second argument may be the cookie's value or a hash of options as documented above.
The second argument, +indent_string+, specifies which indent string to use.
The second element will be an Array of the constants that were present before child.rb was required.
The second element.
The second line in the assert_queries block was causing visit_Arel_Attributes_Attribute in Arel::Visitors::ToSql to trigger a SHOW TABLES query.
The second parameter is the argument string that is passed to the generator or an Array that is joined.
The second run (and possibly the first) should hit the cache.
The second value can be a nested array of text-value pairs.
The selects are prepared for multi-parameter assignment to an Active Record object.
The serialization is done through YAML.
The session should not be used, however, as a cache for objects where it's likely they could be changed unknowingly.
The set of directories from which automatically loaded constants are loaded only once.
The set of directories from which we may automatically load files.
The specifics differ between databases.
The specified URL will then be passed a File object containing the selected file, or if the field was left blank, a StringIO object.
The standard set of helper methods for form building are located in the +field_helpers+ class attribute.
The string form can be used for statements that don't involve tainted data.
The string gets passed keys +:number+ (integer) and +:name+ (string).
The string is formatted imitating the ones printed by the database shell.
The string will not be modified if the range given is out of bounds
The struct's attributes are prefix, base and suffix.
The stub returns the same config path for dir and dir/subdir.
The subscriber dispatches notifications to a registered object based on its given namespace.
The table names appear in alphabetical order.
The table style is the only one where the first key-value pair can be considered to have bad alignment.
The tables for these classes could look something like:
The target is stale if the target no longer points to the record(s) that the relevant foreign_key(s) refers to.
The target method must be public, otherwise it will raise +NoMethodError+.
The tasks defined here are used with Rake tasks provided by Active Record.
The template digest that's added to the cache key is computed by taking an md5 of the contents of the entire template file.
The test adapter should be used only in testing.
The test helpers are responsible for setting up the queue, subscriptions and turning colors in logs off.
The test will have the following name:
The testing environment will automatically load the all fixtures into the database before each test.
The third argument, +indent_empty_lines+, is a flag that says whether empty lines should be indented.
The thread pool size maxes out at 4 worker threads by default.
The through record (built with build_record) is temporarily cached so that it may be reused if insert_record is subsequently called.
The time is parsed using Time.parse method.
The timezone can be either :local or :utc (default :local).
The top level domain can be any string without a period or **.**, ***.** style TLDs like co.uk or com.au
The translated model name, translated attribute name and the value are available for interpolation.
The two are compared first on their offsets, and then by name.
The two main methods for testing your routes:
The type detected by Active Record can be overridden.
The type for the numeric depends on the width of the field, so we'll do something special here.
The type of an attribute is given the opportunity to change how dirty tracking is performed.
The type used to get this primitive should have been provided before reaching the connection adapter.
The typical filter use case is to remove lengthy path information from the start of each line, and view file paths relevant to the app directory instead of the file system root.
The typical route is to just dump everything in a monolithic class, perhaps with a comment, as a least-bad alternative.
The typical silencer use case is to exclude the output of a noisy library from the backtrace, so that you can focus on the rest.
The typical use case is to have a base class define a set of callbacks relevant to the other functionality it supplies, so that subclasses can install callbacks that enhance or modify the base functionality without needing to override or redefine methods of the base class.
The underlying body, as a streamable object.
The underlying class variable is set to +nil+, if it is not previously defined.
The underlying per-thread class variable is set to +nil+, if it is not previously defined.
The unique request id can be used to trace a request end-to-end and would typically end up being part of log files from multiple pieces of the stack.
The unique request id is either based on the X-Request-Id header in the request, which would typically be generated by a firewall, load balancer, or the web server, or, if this header is not available, a random uuid.
The unusual part of its implementation is that it doesn't have any on_* methods or an investigate method.
The updated template should be picked since lookup_context generated a new key after we changed the locale.
The upside of long-lived channel instances is that you can use instance variables to keep reference to objects that future subscriber requests can interact with.
The upwards search is stopped at this level.
The use of this method should be restricted to complicated SQL queries that can't be executed using the ActiveRecord::Calculations class methods.
The user can override this default by passing a block to the layout:
The user can specify the encoding using Ruby-style encoding comments in any template engine.
The user has defined their own default scope method, so call that
The user is informed by a warning like: "unknown OID 5653508: failed to recognize type of 'address'.
The valid arguments are given in VALID_UNSCOPING_VALUES.
The validators hash can also handle regular expressions, ranges, arrays and strings in shortcut form.
The value is returned with the same data type of the column, +0+ if there's no row.
The value is returned with the same data type of the column, or +nil+ if there's no row.
The value is truncated word by word.
The value returned from calling +method+ on the instance +object+ will be selected.
The values are passed to the connector for quoting, but the caller is responsible for ensuring they are enclosed in quotes in the resulting SQL.
The values are unchanged.
The values compared should be of fixed length, such as strings that have already been processed by HMAC.
The variable foo belongs to the top level scope, but in AST, it's under the block node.
The various connection pools are managed by a single instance of ConnectionHandler accessible via ActiveRecord::Base.connection_handler.
The version column used for optimistic locking.
The version number in which the deprecated behavior will be removed, by default.
The very last line of +activerecord/lib/active_record/base.rb+ is:
The view_paths array must be set on Base and not LayoutTest so that LayoutTest's inherited method has access to the view_paths array when looking for a layout to automatically assign.
The whole block will be called in the right order within the migration.
The word will be pluralized using rules defined for the locale (you must define your own inflection rules for languages other than English).
The worker pool is an executor service that's backed by a pool of threads working from a task queue.
The worker pool is where we run connection callbacks and channel actions.
Their main advantage is that the macros add behavior into a callback queue that is kept intact down through an inheritance hierarchy.
Then consistency is checked only within each section delimited by a modifier node.
Then define a list of methods that you want callbacks attached to:
Then in the view any form using +form_for+ will be an instance of the specified form builder:
Then in your class, you can use the +before_create+, +after_create+ and +around_create+ methods, just as you would in an Active Record model.
Then the action is performed.
Then the cop treats it as an `if`/`elsif`/`elsif`...
Then the new value is appended to that Array.
Then we can skip decode+encode if we're just proxying messages.
Then you could do:
Then your library can be eager loaded by simply calling:
Then, if you want webrat to be invoked, just supply:
Then, in another template or layout, this code would render both links in order:
Then, in another template or layout, this code would render only the last link:
Then, in another view, you could to do something like this:
Then, in the action, we extract the company data from the request, find or create the company, and then create the new person with the remaining data.
Then, one asserts whether the current state is as expected.
There are a few caveats with this module.
There are cops/forces that require their own custom processing.
There are four types of callbacks accepted by the callback macros: Method references (symbol), callback objects, inline methods (using a proc), and inline eval methods (using a string).
There are multiple TimeZone objects per time zone, in many cases, to make it easier for users to find their own time zone.
There are multiple cache store implementations, each having its own additional features.
There are nineteen callbacks in total, which give you immense power to react and prepare for each state in the Active Record life cycle.
There are no tests for this behavior in lint because it doesn't make sense to force any of the possible implementation strategies on the implementer.
There are queries that you can't execute inside a transaction though, and for these situations you can turn the automatic transactions off.
There are several connection-pooling-related options that you can add to your database connection configuration:
There are some more advanced features available even if the id is specified:
There are some places where an Engine's name is used:
There are three styles:
There are two basic forms of output:
There are two different styles.
There are two method call chains here.
There are two possible formats for the +choices+ parameter, corresponding to other helpers' output:
There are two special accessors for the commonly used flash names +alert+ and +notice+ as well as a general purpose +flash+ bucket.
There are two ways to build a many-to-many relationship.
There are two ways to call this method, with a block, or without a block.
There are two ways to mitigate this problem.
There are two ways to unsubscribe.
There are two ways to use the fixtures, but first let's take a look at a sample unit test:
There can be multiple .rubocop.yml files in subdirectories, but we just look at the current working directory
There could be a custom cop with this name.
There is a known issue with the listen tests that causes files to be incorrectly GC'ed even when they are still in-use.
There is a special syntactic shortcut to generate migrations that add fields to a table.
There is also a list of default options supported by every validator: +:if+, +:unless+, +:on+ and +:strict+.
There is also a list of default options supported by every validator: +:if+, +:unless+, +:on+, +:allow_nil+, +:allow_blank+, and +:strict+ .
There is also a list of default options supported by every validator: +:if+, +:unless+, +:on+, +:allow_nil+, +:allow_blank+, and +:strict+.
There is also a list of options that could be used along with validators:
There is currently no way to differentiate between which source it came from.
There is no implied ordering so if order matters, you should specify it yourself.
There is no way to do this automatically since it can be set on a superclass
There would be false positives otherwise.
There's a short-hand method for each of the type values declared at the top.
There's also +insert_after+ which will insert a middleware after another:
There's also a convenience method for rendering sub templates within the current controller that depends on a single object (we call this kind of sub templates for partials).
There's also a related idiom that uses the splat operator:
There's an implicit variable reference by the zero-arity `super`:
There's no limit to the depth of the nesting.
Therefore test_invalid column should always return true even if the type is not valid.
Therefore the primary key must be orderable, e.g an integer or a string.
Therefore the sti column value will still be the same.
Therefore, in non-strict mode, we want column.default to report an empty string as its default, to be consistent with that.
Therefore, it won't work with instances of classes that do not have +Object+ among their ancestors, like direct subclasses of +BasicObject+.
Therefore, once a value is added to the enum array, its position in the array must be maintained, and new values should only be added to the end of the array.
Therefore, we need to parse and re-dump the raw value here to ensure the insignificant whitespaces are consistent with our encoder's output.
These Hashes describe the attributes on the objects that are to be created.
These access modifiers do not make singleton methods private/protected.
These allow you to register classes that are called during the mail delivery life cycle.
These are "broken" inverse_of associations for the purposes of testing
These are all the files we have `require`d plus everything in the bin directory.
These are covered by Style/FirstMethodArgumentLineBreak
These are extensions that must be enabled in order to support this database"
These are handled by SpaceAroundEqualsInParameterDefault, so SpaceAroundOperators leaves them alone.
These are named after the class specified, so for the above example the helper is either +some_rack_app_path+ or +some_rack_app_url+.
These are originated by a legit usage of attr_* macros for private attributes, but adds a lot of noise to our test suite.
These are the normal settings that will be set up by Railties TODO: Have these tests support other combinations of these values
These are the starting point for new projects and are not considered complete.
These arguments can be a String or a Symbol.
These caches are keyed by klass.name, NOT klass.
These callbacks are useful for interacting with other systems since you will be guaranteed that the callback is only executed when the database is in a permanent state.
These classes will be loaded when associations are created.
These collections are:
These collections can be used just like any other hash:
These concerns are used in Resources routing:
These currently consist of
These describe which attributes to be created on the object, or multiple objects when given an Array of Hashes.
These determine which controller and action are called.
These files do not require any others and are needed to run the tests
These five are to override number.format and are optional
These hash keys are nested attributes implementation details.
These helper methods extend Action View making them callable within your template files.
These helpers are available to all templates by default.
These is a "broken" inverse_of for the purposes of testing
These layouts are different than the ones that are specified globally for the entire action, but they work in a similar fashion.
These methods are useful when you want to generate correct URL or path to a RESTful resource without having to know the exact type of the record in question.
These methods can consist of both the migration specific methods like +add_column+ and +remove_column+, but may also contain regular Ruby code for generating data needed for the transformations.
These methods do not verify the assets exist before linking to them:
These methods will be included into any Active Job object, adding callbacks for +perform+ and +enqueue+ methods.
These methods will be included into any Active Job object, adding helpers for de/serialization and creation of job instances.
These methods will operate with value objects like the ones described below:
These operations happen before instance creation and the scope will be called with a +nil+ argument.
These options mean something to all cache implementations.
These options will be tagged onto the HTML as an HTML element attribute as in the example shown.
These predicates are not documented, as I need to look further into their use, and see if they can be removed entirely.
These requires are to emulate an engine loading Action View before the application
These samples are derived from Apache Lucene project.
These sequences have identical meaning as the original characters inside the context of a JSON string, so assuming the input is a valid and well-formed JSON value, the output will have equivalent meaning when parsed:
These test cases were added to test that we do not interfere with json gem's output when the AS encoder is loaded, primarily for problems reported in 20775.
These tests are just to surround the current behavior of the ARGVScrubber, they do not mean that the class *must* act this way, I just want to prevent regressions.
These tests are mostly just to ensure that the ordinalize method exists.
These tests do not attempt to determine the semantic correctness of the returned values.
These two methods represent the two basic action archetypes used in Action Controllers.
These two settings work together to allow you to limit a spec run to individual examples or groups you care about by tagging them with `:focus` metadata.
These will be added to all created paragraphs.
These will be offenses for the EmptyLiteral cop.
They allow a browser or proxy cache to support Range requests, useful for paging through a PDF file or scrubbing through a video.
They are especially useful for generating XML content.
They are in any case removed from the collection.
They are made up of one or more actions that are executed on request and then either it renders a template or redirects to another action.
They are searched from right to left, from bottom to top, and up the hierarchy.
They are to be used in combination with ActionController::Resources.
They can also be any object that responds to +call+, such as a +proc+, that will be called for each member of the +collection+ to retrieve the value/text.
They can't be used for responses that must be byte-identical, like serving Range requests within a PDF file.
They default to require clients to validate with the server before releasing cached responses.
They express relationships like "Project has one Project Manager" or "Project belongs to a Portfolio".
They get help with adding offenses for the faulty string nodes, and with filtering out nodes.
They happen if there are headers with the same text.
They need to be executed in isolation to reproduce the scenario correctly, because other test cases might have already loaded additional dependencies.
They use the type as the method name instead of as a parameter and allow for multiple columns to be defined in a single statement.
They will however still be marked for destruction.
They will receive the corrector itself and should use its method to modify the source.
Think of creating routes as drawing a map for your requests.
Third configurable block to run.
This + is not a unary operator.
This abstracts the setup and rendering into a separate classes for partials and templates.
This adapter may also present failed instances of the job class that can be restarted.
This all happens inside a transaction, _if_ the Transactions module is included into ActiveRecord::Base after the AutosaveAssociation module, which it does by default.
This allows a "loose" upgrade, which, being less strict, prevents some classes of deadlocks.
This allows any character other than a slash as part of your +:id+.
This allows associated records to be built which will automatically create the appropriate join model records when they are saved.
This allows control over how values are converted to and from SQL when assigned to a model.
This allows for the detection of queries that return a large number of records, which could cause memory bloat.
This allows for views to display rather reasonable strings while still giving developers a way to find missing translations.
This allows method chaining on the result of any of these methods.
This allows plugins to hook into association object creation.
This allows the header of the HTML (which is usually in the layout) to be streamed back to client very quickly, allowing JavaScripts and stylesheets to be loaded earlier than usual.
This allows the template engine to support additional mechanisms for specifying the encoding.
This allows the user to submit a form page more than once with the expected results of creating multiple records.
This allows us per-connection tailored tags.
This allows us to abstract the normalization across several methods that use it.
This allows us to later be able to find all connections established for that current_user (and potentially disconnect them).
This allows us to more easily catch INSERT being broken, but SELECT actually working fine.
This allows us to run `rails server` from other directories, but still get the main config.ru and properly set the tmp directory.
This allows using AS::DescendantsTracker without AS::Dependencies.
This allows you to create forms that set or change the attributes of a parent object and its associations in one go.
This allows you to easily return a response that consists only of significant headers:
This allows you to have layouts with references that won't materialize before rendering time:
This allows you to modify application's generators from Railties.
This allows you to modify the application's middlewares from Engines.
This allows you to override entire operations, like the creation of the Gemfile, README, or JavaScript files, without needing to know exactly what those operations do so you can create another template action.
This allows you to specify that associated records should be deleted when the owner is deleted.
This allows you to use the same format for links in views and controllers.
This also applies to MySQL apps but not with SQLite
This also means that this method only works when the primary key is orderable (e.g. an integer or string).
This also provides the required class methods for hooking into the Rails internationalization API, including being able to define a class based +i18n_scope+ and +lookup_ancestors+ to find translations in parent classes.
This also works with polymorphic belongs_to relationships:
This ambiguity cannot be resolved at this stage anymore.
This approach is a decent way of keeping common structures isolated from the changing content, but it's verbose and if you ever want to change the structure of these two includes, you'll have to change all the templates.
This approach was introduced in Rails 3.1 and is still improving.
This approach will assume that when a new topic is added, you'll touch the project.
This array is processed recursively.
This array needs not be flat, i.e. +records+ itself may also contain arrays of records.
This assertion should preferably be the last in the list, because calling other_topic_klass.table_name sets a class-level instance variable
This associates two classes via an intermediate join table.
This automatically set classes 'year', 'month', 'day', 'hour', 'minute' and 'second'.
This behaves in almost the same way as outlined previously, with a couple of small exceptions.
This cache does implement the local cache strategy, so values will actually be cached inside blocks that utilize this strategy.
This cache has a bounded size specified by the :size options to the initializer (default is 32Mb).
This cache is not thread safe and is intended only for serving as a temporary memory cache for a single thread.
This calculates aggregate values in the given column.
This callback is called after a create, update, or destroy are rolled back.
This callback is called after a record has been created, updated, or destroyed.
This can also be used to "borrow" the connection to do database work unrelated to any of the specific Active Records.
This can be achieved as:
This can be an active or defined connection: if it is the latter, it will be opened and set as the active connection for the class it was defined for (not necessarily the current class).
This can be customized with two options: :in and :as.
This can be done by overwriting the default accessors (using the same name as the attribute) and calling +super+ to actually change things.
This can be done by overwriting this method.
This can be done either by specifying a method reference as a symbol or using an inline method (as a proc).
This can be done with a symbol pointing to a method:
This can be overridden in AS::Callback implementors in order to provide better debugging/logging.
This can be overridden on an Adapter level basis to support other extended datatypes (Example: Adding an array option in the PostgreSQL::ColumnDumper)
This can be overwritten to customize the default generated string representation if desired.
This can be overwritten when invoking it.
This can be provided as a proc or lambda returning regular expression which will be called at runtime.
This can be returned by a health check against the connection.
This can be supplied as a proc, lambda or symbol which returns an enumerable.
This can be used for example, to alternate classes for table rows.
This can be used to assert that values in the query string will end up in the params hash correctly.
This can be used to identify queries which load thousands of records and potentially cause memory bloat.
This can be used to implement new template types.
This can be used to pass mass assignment.
This can be used to reset the state information in an existing session instance, so it can be used from a clean-slate condition.
This can be useful in development mode to determine which fields need to be selected.
This can either be a single value or an array of values to be disabled.
This can happen if parallel RuboCop invocations try to remove the same files.
This can happen in Internet Explorer when redirecting after multipart form submit.
This can lead to unexpected behavior and is deprecated.
This can lead to unwanted changes to the inspected code.
This can make for more readable code in complex queries.
This can only be used for strings, not regular expressions.
This causes some false positives for the comparison here.
This check is performed only if +terms_of_service+ is not +nil+ and by default on save.
This checks for a caching problem which causes a bug in the fixtures class-level configuration helper.
This class allows you to store and get the scope values on different classes and different types of scopes.
This class computes Jaro distance, which is a measure of similarity between two strings.
This class computes Jaro-Winkler distance, which adds prefix-matching bonus to Jaro distance.
This class defines the interface for a renderer.
This class exists to add abstraction and clean naming to the objects that are going to be operated on.
This class finds target files to inspect by scanning the directory tree and picking ruby files.
This class handles command line options.
This class handles preparation of the arguments before the AppGenerator is called.
This class handles the processing of files, which includes dealing with formatters and letting cops inspect the files.
This class has side effects on the +store+ passed during initialization.
This class is a registry which holds all of the +Instrumenter+ objects in a particular thread local.
This class is responsible to tell scaffold entities how to generate an specific method for the ORM.
This class is then used like this:
This class is thread safe.
This class is used by Rails to reload the I18n framework whenever they are changed upon a new request.
This class is used to create a table that keeps track of values and keys such as which environment migrations were run in.
This class is used to create a table that keeps track of which migrations have been applied to a given database.
This class is used to dump the database schema for some connection to some output format (i.e., ActiveRecord::Schema).
This class is used to represent cache entries.
This class is used to store and access paths in Action View.
This class method is the single entry point for the rake tasks.
This class parses the special `rubocop:disable` comments in a source and provides a way to check if each cop is enabled at arbitrary line.
This class performs a pattern-matching operation on an AST node.
This class provides a TestCase for testing generators.
This class provides helper methods used in the ERB template.
This class provides methods for manipulating the schema representation.
This class provides the ability to write an SSE (Server Sent Event) to an IO stream.
This class represents each assignment of a variable.
This class represents each reference of a variable.
This class represents the configuration of the RuboCop application and all its cops.
This class should be called before the AppGenerator is required and started since it configures and mutates ARGV correctly.
This class stores the +:current_scope+ and +:ignore_default_scope+ values for different classes.
This class takes a source buffer and rewrite its source based on the different correction rules supplied.
This class tracks variable assignments in a method body and if a variable contains object passed as argument at the end of the method.
This class wraps all the strings we see and does the extra escaping
This class, however, allows you to call methods with the model object you are building the form for.
This code example is allowed by AllowURI feature itself :).
This code is based directly on the Text gem implementation Returns a value representing the "cost" of transforming str1 into str2
This code is performance critical as it is called per row.
This code represents the normal case.
This command can be nested.
This comment is fine',
This configures the callbacks intended for overwriting by the user.
This connection will do for database-independent bug reports.
This constant will be unloaded on each request, not just the next one.
This controller, for example:
This cookie will be deleted when the user's browser is closed.
This cookie-based session store is the Rails default.
This cop (by default) checks for uses of the lambda literal syntax for single line lambdas, and the method call syntax for multiline lambdas.
This cop checks for *rescue* blocks targeting the Exception class.
This cop checks for *rescue* blocks with no body.
This cop checks for *return* from an *ensure* block.
This cop checks for .times.map calls.
This cop checks for BEGIN blocks.
This cop checks for END blocks in method definitions.
This cop checks for END blocks.
This cop checks for RuntimeError as the argument of raise/fail.
This cop checks for Windows-style line endings in the source code.
This cop checks for `private` or `protected` access modifiers which are applied to a singleton method.
This cop checks for `rand(1)` calls.
This cop checks for a line break before the first argument in a multi-line method call.
This cop checks for a line break before the first element in a multi-line array.
This cop checks for a line break before the first element in a multi-line hash.
This cop checks for a line break before the first parameter in a multi-line method parameter definition.
This cop checks for ambiguous operators in the first argument of a method invocation without parentheses.
This cop checks for ambiguous regexp literals in the first argument of a method invocation without parentheses.
This cop checks for assignments in the conditions of if/while/until.
This cop checks for big numeric literals without _ between groups of digits in them.
This cop checks for braces around the last parameter in a method call if the last parameter is a hash.
This cop checks for calls to debugger or pry.
This cop checks for case statements with an empty condition.
This cop checks for cases when you could use a block accepting version of a method that does automatic resource cleanup.
This cop checks for chaining of a block after another block that spans multiple lines.
This cop checks for circular argument references in optional keyword arguments and optional ordinal arguments.
This cop checks for comparison of something with itself.
This cop checks for conditions that are not on the same line as if/while/until.
This cop checks for correct grammar when using ActiveSupport's core extensions to the numeric classes.
This cop checks for duplicated instance (or singleton) method definitions.
This cop checks for duplicated keys in hash literals.
This cop checks for empty `ensure` blocks
This cop checks for empty interpolation.
This cop checks for every useless assignment to local variable in every scope.
This cop checks for excessive nesting of conditional and looping constructs.
This cop checks for extra underscores in variable assignment.
This cop checks for extra/unnecessary whitespace.
This cop checks for identical lines at the end of each branch of a conditional statement.
This cop checks for implicit string concatenation of string literals which are on the same line.
This cop checks for inheritance from Struct.new.
This cop checks for inline comments.
This cop checks for interpolated literals.
This cop checks for literals used as the conditions or as operands in and/or expressions serving as the conditions of if/while/until.
This cop checks for methods called on a do...end block.
This cop checks for methods invoked via the :: operator instead of the .
This cop checks for methods with too many parameters.
This cop checks for missing space between a token and a comment on the same line.
This cop checks for missing top-level documentation of classes and modules.
This cop checks for multi-line ternary op expressions.
This cop checks for multiple expressions placed on the same line.
This cop checks for nested method definitions.
This cop checks for nested ternary op expressions.
This cop checks for nested use of if, unless, while and until in their modifier form.
This cop checks for non-ascii (non-English) characters in comments.
This cop checks for non-ascii characters in identifier names.
This cop checks for non-local exit from iterator, without return value.
This cop checks for non-nil checks, which are usually redundant.
This cop checks for odd else block layout - like having an expression on the same line as the else keyword, which is usually a mistake.
This cop checks for operators, variables and literals used in void context.
This cop checks for optional arguments to methods that do not come at the end of the argument list
This cop checks for options hashes and discourages them if the current Ruby version supports keyword arguments.
This cop checks for parentheses in the definition of a method, that does not take any arguments.
This cop checks for redundant `begin` blocks.
This cop checks for redundant `return` expressions.
This cop checks for redundant access modifiers, including those with no code, those which are repeated, and leading `public` modifiers in a class or module body.
This cop checks for redundant parentheses.
This cop checks for redundant uses of `self`.
This cop checks for scope calls where it was passed a method (usually a scope) instead of a lambda/proc.
This cop checks for setter call to local variable as the final expression of a function definition.
This cop checks for single-line method definitions.
This cop checks for string conversion in string interpolation, which is redundant.
This cop checks for string literal concatenation at the end of a line.
This cop checks for strings that are just an interpolated expression.
This cop checks for tabs inside the source code.
This cop checks for the correct use of Date methods, such as Date.today, Date.current etc.
This cop checks for the presence of superfluous parentheses around the condition of if/unless/while/until.
This cop checks for the use of Time methods without zone.
This cop checks for the use of a method, the result of which would be a literal, like an empty array, hash or string.
This cop checks for the use of old-style attribute validation macros.
This cop checks for the use of output calls like puts and print
This cop checks for the use of the has_and_belongs_to_many macro.
This cop checks for the use of the read_attribute or write_attribute methods.
This cop checks for the use of the send method.
This cop checks for trailing comma in argument lists.
This cop checks for trailing comma in array and hash literals.
This cop checks for underscore-prefixed variables that are actually used.
This cop checks for unncessary array splats.
This cop checks for unparenthesized method calls in the argument list of a parenthesized method call.
This cop checks for unreachable code.
This cop checks for unused block arguments.
This cop checks for unused method arguments.
This cop checks for unwanted parentheses in parameterless method calls.
This cop checks for use of the lambda.(args) syntax.
This cop checks for useless `else` in `begin..end` without `rescue`.
This cop checks for uses of "*" as a substitute for *join*.
This cop checks for uses of *and* and *or*.
This cop checks for uses of *begin...end while/until something*.
This cop checks for uses of `fail` and `raise`.
This cop checks for uses of class variables.
This cop checks for uses of rescue in its modifier form.
This cop checks for uses of the class/module name instead of self, when defining class/module methods.
This cop checks for uses of the deprecated class method usages.
This cop checks for whitespace within string interpolations.
This cop checks hash literal syntax.
This cop checks how the *when*s of a *case* expression are indented in relation to its *case* or *end* keyword.
This cop checks if each_with_object is called with an immutable argument.
This cop checks if the length a class exceeds some maximum value.
This cop checks if the length a module exceeds some maximum value.
This cop checks if the length of a method exceeds some maximum value.
This cop checks symbol literal syntax.
This cop checks that comment annotation keywords are written according to guidelines.
This cop checks that the ABC size of methods is not higher than the configured maximum.
This cop checks that the closing brace in a hash literal is either on the same line as the last hash element, or a new line.
This cop checks that the closing brace in a method call is either on the same line as the last method argument, or a new line.
This cop checks that the closing brace in a method definition is either on the same line as the last method parameter, or a new line.
This cop checks that the closing brace in an array literal is either on the same line as the last array element, or a new line.
This cop checks that the cyclomatic complexity of methods is not higher than the configured maximum.
This cop checks the .
This cop checks the args passed to `fail` and `raise`.
This cop checks the indentation of the first element in an array literal where the opening bracket and the first element are on separate lines.
This cop checks the indentation of the first line of the right-hand-side of a multi-line assignment.
This cop checks the indentation of the first parameter in a method call.
This cop checks the indentation of the method name part in method calls that span more than one line.
This cop checks the indentation of the right hand side operand in binary operations that span more than one line.
This cop checks the length of lines in the source code.
This cop checks the style of children definitions at classes and modules.
This cop checks whether constant names are written using SCREAMING_SNAKE_CASE.
This cop checks whether method definitions are separated by empty lines.
This cop checks whether some constant value isn't a mutable literal (e.g. array or hash).
This cop checks whether the block parameters of a single-line method accepting a block match the names specified via configuration.
This cop checks whether the end keywords are aligned properly for do end blocks.
This cop checks whether the end keywords are aligned properly.
This cop checks whether the end keywords of method definitions are aligned properly.
This cop checks whether the end statement of a do..end block is on its own line.
This cop checks whether the multiline assignments have a newline after the assignment operator.
This cop checks whether the multiline do end blocks have a newline after the start of the block.
This cop checks whether the rescue and ensure keywords are aligned properly.
This cop checks whether the source file has a utf-8 encoding comment or not.
This cop could have its own IndentationWidth configuration
This cop detects instances of rubocop:disable comments that can be removed without causing any offenses to be reported.
This cop enforces the consistent use of action filters methods.
This cop enforces the use of a single string formatting utility.
This cop enforces the use of consistent method names from the Enumerable module.
This cop enforces the use of consistent method names from the String class.
This cop enforces the use the shorthand for self-assignment.
This cop finds uses of `alias` where `alias_method` would be more appropriate (or is simply preferred due to configuration), and vice versa.
This cop identifies Float literals which are, like, really really really really really really really really big.
This cop identifies places where `gsub` can be replaced by `tr` or `delete`.
This cop identifies places where `lstrip.rstrip` can be replaced by `strip`.
This cop identifies places where a case-insensitive string comparison can better be implemented using `casecmp`.
This cop is designed to help upgrade to Ruby 3.0.
This cop is used to identify usages of
This cop is used to identify usages of `all.each` and change them to use `all.find_each` instead.
This cop is used to identify usages of `count` on an `Array` and `Hash` and change them to `size`.
This cop is used to identify usages of `count` on an `Enumerable` that follow calls to `select` or `reject`.
This cop is used to identify usages of `reverse.each` and change them to use `reverse_each` instead.
This cop is used to identify usages of `select.first`, `select.last`, `find_all.first`, and `find_all.last` and change them to use `detect` instead.
This cop is used to identify usages of `where.first` and change them to use `find_by` instead.
This cop looks for *unless* expressions with *else* clauses.
This cop looks for delegations, that could have been created automatically with delegate method.
This cop looks for inject / reduce calls where the passed in object is returned at the end and so could be replaced by each_with_object without the need to return the object at the end.
This cop looks for trailing blank lines and a final newline in the source code.
This cop looks for trailing whitespace in the source code.
This cop looks for trivial reader/writer methods, that could have been created with the attr_* family of functions automatically.
This cop looks for use of the same name as outer local variables for block arguments or block local variables.
This cop looks for uses of Perl-style global variables.
This cop looks for uses of flip flop operator
This cop looks for uses of the *for* keyword, or *each* method.
This cop makes sure that Ruby source files have snake_case names.
This cop makes sure that accessor methods are named properly.
This cop makes sure that all methods use the configured style, snake_case or camelCase, for their names.
This cop makes sure that all variables use the configured style, snake_case or camelCase, for their names.
This cop makes sure that certain operator methods have their sole parameter named `other`.
This cop makes sure that predicates are named properly.
This cop mirrors a warning in Ruby 2.2.
This cop mirrors a warning produced by MRI since 2.2.
This cop only auto-corrects the first statement in a def body, for example.
This cop tries to produce a complexity score that's a measure of the complexity the reader experiences when looking at a method.
This cop uses them as dividers in rails mode.
This cops checks for class and module names with an underscore in them.
This cops checks for inconsistent indentation.
This cops checks for indentation of the first non-blank non-comment line in a file.
This cops checks for indentation that doesn't use two spaces.
This cops checks for parentheses around the arguments in method definitions.
This cops checks for two or more consecutive blank lines.
This cops checks for use of `extend self` in a module.
This cops checks if empty lines around the bodies of blocks match the configuration.
This cops checks if empty lines around the bodies of classes match the configuration.
This cops checks if empty lines around the bodies of methods match the configuration.
This cops checks if empty lines around the bodies of modules match the configuration.
This cops checks the alignment of else keywords.
This cops checks the indentation of comments.
This cops checks the indentation of hanging closing parentheses in method calls, method definitions, and grouped expressions.
This cops checks the indentation of the first key in a hash literal where the opening brace and the first key are on separate lines.
This cops looks for uses of global variables.
This could even happen if you use transactions with the 'serializable' isolation level.
This could result in many rows that contain redundant data and it performs poorly at scale and is therefore only used when necessary.
This covers various different error types so we need to do additional work to classify the exception definitively as a ActiveRecord::PreparedStatementCacheExpired
This default style is called 'special_inside_parentheses'.
This defaults to +false+.
This determines if the json object should contain full messages or not (false by default).
This differs from the above in that it does not have any templates defined in the file system, which triggers the ImplicitRender (204 No Content) behavior.
This directive tells Puma to first boot the application and load code before forking the application.
This does not destroy the objects.
This doesn't work on MySQL (even when aliasing the tables), but MySQL allows using JOIN directly in an UPDATE statement, so in the MySQL adapters we redefine this to do that.
This ensures that the parent class's module can be changed independently of the child class's.
This ensures that the polymorphism of taggings is being observed correctly
This ensures that the scope is re-evaluated each time it is called.
This ensures that we don't timeout one HTTP request even while well under capacity in a multi-threaded environment such as a Java servlet container.
This ensures that your caches will automatically expire when you change the template file.
This ensures the connection monitor state is reset after a successful websocket connection.
This ensures the model has a password by checking whether the password_digest is present, so that this works with both new and existing records.
This error is raised when trying to destroy a parent instance in N:1 or 1:1 associations (has_many, has_one) when there is at least 1 child associated instance.
This error is raised when trying to eager load a polymorphic association using a JOIN.
This essentially combines +assert_recognizes+ and +assert_generates+ into one step.
This essentially finds the object (or multiple objects) with the given id, creates a new object from the attributes, and then calls destroy on it.
This example places a string in the flash.
This example will only take money from David and give it to Mary if neither +withdrawal+ nor +deposit+ raise an exception.
This exception then gathers a bunch of intimate details and uses it to report a precise exception message.
This falls back on `define_method` and `send` if the given names cannot be compiled.
This feature can be turned off completely by setting:
This feature is accomplished by instantiating the class and storing the instance as a thread local keyed by the class name.
This feature is implemented by keeping a connection pool in ActiveRecord::Base that is a hash indexed by the class.
This feature is provided by the unobtrusive JavaScript driver.
This file contains configuration for an unknown cop.
This file is auto-generated from the current state of the database.
This file is loaded by every Rails component except Active Support itself, but it does not belong to the Rails public interface.
This finalizer is needed (and exactly with a proc inside another proc) otherwise templates leak in development.
This finds the first abstract superclass of a controller, and gets a list of all public instance methods on that abstract class.
This fixture file includes two fixtures.
This force provides a way to track local variables and scopes of Ruby.
This form is significantly faster on JRuby, and this is one of our biggest hotspots.
This form will not only create the table, but also columns for the table.
This formatter display dots for files with no offenses and letters for files with problems in the them.
This formatter displays a YAML configuration file where all cops that detected any offenses are configured to not detect the offense.
This formatter displays a progress bar and shows details of offenses as soon as they are detected.
This formatter displays just a list of the files with offenses in them, separated by newlines.
This formatter displays the list of offended cops with a count of how many offenses of their kind were found.
This formatter displays the list of offensive files, sorted by number of offenses with the worst offenders first.
This formatter displays the report data in format that's easy to process in the Emacs text editor.
This formatter formats report data in clang style.
This formatter formats the report data in JSON format.
This formatter saves the output as an html file.
This functionality is enabled in +config/initializers/wrap_parameters.rb+ and can be customized.
This generates helpers such as +account_projects_path+, just like +resources+ does.
This generates the following comments routes:
This generates the following routes:
This gives access to the environment, cookies, etc.
This gives better control over what you want to exclude and makes it easier to create a bare controller class, instead of listing the modules required manually.
This gives better control over what you want to exclude and makes it easier to create an API controller class, instead of listing the modules required manually.
This gives the column as it appears when viewing the file in an editor.
This gives you one class to configure things such as request forgery protection and filtering of sensitive request parameters.
This goes a step further than signed cookies in that encrypted cookies cannot be altered or read by users.
This guarantees that your rules run before any of the rules that may already have been loaded.
This happens because part of the template was already rendered and streamed to the client, making it impossible to render a whole exception page.
This happens inside the transaction initiated by the parent's save method.
This has exactly one variant template defined in the file system (+mobile.html.erb), which raises the regular MissingTemplate error for other variants.
This has functionality that might be shared by multiple classes.
This has no layout and it works
This hash allows you to specify the most used headers in an email message, these are:
This helper exposes a method for caching fragments of a view rather than an entire action or page.
This helper may be included in any class that includes the URL helpers of a routes (routes.url_helpers).
This helper returns the name of a cache key for a given fragment cache call.
This helper works just like normal helpers.
This helps to keep the nesting level from getting too deep.
This heredoc is safe to edit around because it ends on a line before the last line of the node.
This heredoc is unsafe to edit around because it ends on the same line as the node itself.
This hidden field is given the same field name as the checkboxes with a blank value.
This holds a variable declaration node, and some states of the variable.
This holds scopes as stack structure, and provides a way to add local variables to current scope and find local variables by considering variable visibility of the current scope.
This if statement fits exactly on one line if written as a modifier.
This in turn will make RuboCop fall back on cop-by-cop auto-correction.
This includes all public instance methods on a channel, less any internal methods (defined on Base), adding back in any methods that are internal, but still exist on the class itself.
This includes all public instance methods on a controller, less any internal methods (see internal_methods), adding back in any methods that are internal, but still exist on the class itself.
This includes checking whether the database is actually capable of responding, i.e. whether the connection isn't stale.
This includes the day as a hidden field instead of showing a select field.
This includes the keys from the root hash and from all nested hashes and arrays.
This includes the month as a hidden field instead of showing a select field.
This includes the year as a hidden field instead of showing a select field.
This information, for example, can be used in a form builder that takes an Active Record object and creates input fields for all of the attributes depending on their type and displays the associations to other objects.
This inserts a badge and changes the preamble of the home page.
This instance becomes the parent of all of the channel subscriptions that are created from there on.
This interceptor is enabled by default.
This is +:usec+, by default.
This is a "shallow" copy.
This is a class that abstracts away an asserted response.
This is a class to fix I18n global state.
This is a class which takes in a rails command and initiates the appropriate initiation sequence.
This is a collection of formatters.
This is a convenient way of creating a namespace for tables in a shared database.
This is a convenient way to check whether the variable is used in its entire variable lifetime.
This is a default queue implementation that ships with Notifications.
This is a documented side-effect of the method that may avoid an extra SELECT.
This is a mimic of the warning "shadowing outer local variable - foo" from `ruby -cw`.
This is a new Rails 5.0 default, so it is introduced as a configuration option to ensure that apps made on earlier versions of Rails are not affected when upgrading.
This is a new Rails 5.0 default, so it is introduced as a configuration option to ensure that apps made with earlier versions of Rails are not affected when upgrading.
This is a nice long',
This is a place where local variables belong to.
This is a poor solution, but fully distributed transactions are beyond the scope of Active Record.
This is a registry for all the event stacks kept for subscribers.
This is a safety measure to keep existing applications from breaking.
This is a shorthand for `node.each_ancestor.to_a`.
This is a shorthand for `node.each_child_node.to_a`.
This is a shorthand for `node.each_descendant.to_a`.
This is a special case that has caused double reporting.
This is a sync queue, so there is no waiting.
This is a thread locals registry for Active Record.
This is a thread locals registry for EXPLAIN.
This is a violation of the Rails style, but it's not for this cop to report.
This is a white list of permitted scalar types that includes the ones supported in XML and JSON requests.
This is actually an unmasked token.
This is actually not a cop and inspects nothing.
This is an exercise in Ruby hyperrealism :).
This is an initial / outermost share call: any outstanding requests for an exclusive lock get to go first
This is an internal method and should not be accessed directly.
This is an optional header and its presence on the request is subject to browser security settings and user preferences.
This is analogous to nesting models in a migration.
This is based on the Highline implementation and will automatically append CLEAR to the end of the returned String.
This is because MySQL automatically releases all savepoints upon executing a DDL operation.
This is because UrlFor has no information about the website hostname that your Rails app is serving.
This is because automatic corrections can introduce new offenses.
This is because cookies signed based on the new secret_key_base in Rails 4 are not backwards compatible with Rails 3.
This is because the incoming XML document (if a web-service request is in process) can only contain a single root-node.
This is because transactions are per-database connection, not per-model.
This is called by providing and resuming back to the fiber, if that's the key it's waiting for.
This is called for each scope recursively.
This is checked by Style/SpaceAfterComma.
This is commonly needed for tree structures.
This is currently the most popular cache store for production websites.
This is database specific.
This is different from non STI classes:
This is done by calling new on the column type or aggregation type (through composed_of) object with these parameters.
This is done by either returning and leasing existing connection, or by creating a new connection and leasing it.
This is done by passing a hash with a single key-value pair.
This is equivalent to
This is equivalent to:
This is especially beneficial for adding new finders, creators, and other factory-type methods that are only used as part of this association.
This is especially important on Windows where the temporary directory is under the user's home directory.
This is especially useful for boolean flags on existing records.
This is especially useful if you want multiple workers dealing with the same processing queue.
This is especially useful if you want to persist the changed class in your database.
This is especially useful if you want to work with the ActiveRecord::Relation object instead of the array of records, or if you want multiple workers dealing with the same processing queue.
This is especially useful in validation situations where the user might supply a string for an integer field and you want to display the original string back in an error message.
This is expected because lookup_context will reuse the previous key for :en locale.
This is expected if you have just upgraded to masked tokens, but should stop happening shortly after installing this gem
This is expensive for large sets of fixtured data.
This is extremely bad, but should be possible to do.
This is faster and simpler than the method above.
This is for a case where the original String was assumed to be, for instance, UTF-8, but a magic comment proved otherwise
This is for clearing cache on the reflection.
This is for handlers that handle encoding but screw up
This is generally intended for internal use and extension frameworks.
This is great for boiling down a noisy block to just a single statement that produces one log line:
This is handled by walking back up the watch stack and adding the constants found by child.rb to the list of original constants in parent.rb.
This is helpful when you're fragment-caching the form.
This is however a feature to be used with some caution.
This is important for streaming responses such as the following:
This is inspired by the Fuubar formatter for RSpec by Jeff Kreeftmeijer.
This is intended to be used as mix-in.
This is mainly intended for sharing common conditions between multiple associations.
This is meant to be implemented by the adapters that support advisory locks
This is meant to be implemented by the adapters that support advisory locks.
This is meant to be implemented by the adapters that support extensions
This is messed up, but it's how Ruby works at the moment.
This is most probably a mistake, but not this cop's responsibility.
This is mostly useful in relation to single-table inheritance structures where you want a subclass to appear as the superclass.
This is necessary because `changed_attributes` might be overridden in other implementations (e.g. in `ActiveRecord`)
This is necessary for doing Range requests within a large video or PDF file, for example, or for compatibility with some CDNs that don't support weak ETags.
This is needed because 'SELECT count(DISTINCT *)..' is not valid SQL.
This is needed for correctly setting up the middleware.
This is needed to isolate class_attribute assignments like `table_name_prefix` for each test case.
This is needed, for example, when using Makara proxies for distributed Redis.
This is needed.
This is not a guaranteed performance improvement.
This is not an issue in utf-8, so it must be ignored.
This is not recommended if the data is coming from the user's input.
This is not supported if Active Record has to fallback to the previous implementation of eager loading and will raise ActiveRecord::EagerLoadPolymorphicError.
This is not the case.
This is obviously a rubbish fix but it's the best I can come up with for now...
This is on by default but can be turned off to aid in functional testing.
This is only relevant to certain associations, which is why it returns nil by default.
This is only slow if it's being listened to.
This is our best guess: first try to close the attribute, then the tag.
This is overridden by Associations::CollectionProxy
This is overridden by HABTM as the condition should be on the foreign_key column in the join table
This is particularly helpful in JavaScript responses, like:
This is particularly useful for initializing an options hash with default values.
This is perfect for browser caching of HTML pages where we don't care about exact equality, just what the user is viewing.
This is possible thanks to a hidden field generated by the helper method for every collection of checkboxes.
This is really useful if you need to validate a self-signed and/or a wildcard certificate.
This is required because PATH_INFO isn't reset between requests.
This is required because Rails looks in load paths and loads the generator just before it's going to be used.
This is required by ActiveModel attribute assignment, so that user can pass +Parameters+ to a mass assignment methods in a model.
This is required for Oracle and is useful for any database which relies on sequences for primary key generation.
This is required to fulfil the following contract, which must be universally true in Active Record:
This is set to :utc by default.
This is similar to the way sinatra renders templates.
This is so that paths in config/default.yml, for example, are not relative to RuboCop's config directory since that wouldn't work.
This is testing the decoupling of view renderer and view context by allowing the controller to be used as view context.
This is the "has_many :tags, through: :taggings" situation, where the join model typically has a belongs_to on both side.
This is the case when the join table has no fixtures file
This is the default queue adapter.
This is the default starting in Rails 4.
This is the fastest way to update attributes because it goes straight to the database, but take into account that in consequence the regular update procedures are totally bypassed.
This is the historical behaviour for true.
This is the inverse of +assert_recognizes+.
This is the low level API which sits beneath +attribute+.
This is the main entry point for rendering.
This is the method that defines the application behavior when a request is found to be unverified.
This is the method which actually finds the layout using details in the lookup context object.
This is the only method that is not thread safe, but is only ever called during the eager loading phase.
This is the proxy that handles a has many association.
This is the recommended form: def create Person.create(person_params) end
This is the root class of all associations ('+ Foo' signifies an included module Foo):
This is the safest method to ensure links that cause changes to your data are not triggered by search bots or accelerators.
This is the same logging logic as in ShowExceptions middleware.
This is the same method seen in Railtie::Configurable, but this module is no longer required for all subclasses of Railtie so we provide the class method here.
This is the same technique used in the +database.yml+ file to specify defaults:
This is then used by Action Cable to determine the URL of your WebSocket server.
This is to avoid ActiveModel (and by extension the entire framework) being dependent on a binary library.
This is to get around the fact that Rack isn't based around IOs and we need to use a thread to stream data from the response bodies.
This is true by default, which is useful for the development environment.
This is true, by default.
This is typically '/' but may be different in a mounted engine or where the application is deployed to a subdirectory of a website.
This is typically the case when you have template rendering that happens in helpers.
This is unlike entity objects where equality is determined by identity.
This is used by cache implementations that don't natively serialize entries to protect against accidental cache modifications.
This is used by the default Rails.logger as configured by Railties to make it easy to stamp log lines with subdomains, request ids, and anything else to aid debugging of multi-user production applications.
This is used by the methods which create and delete records on the association.
This is used in the StatementCache object.
This is used internally by Rails' own test suite, and is useful for testing extensions that have no way of knowing what the file system will look like at runtime.
This is used internally by rails to set its generators source root.
This is used internally to append, prepend and skip callbacks to the CallbackChain.
This is used to determine whether we can load the target if the owner is currently a new record (and therefore without a key).
This is used to dynamically guess the default source root.
This is used to maintain the correlation between the form data and its associated model.
This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.
This is useful for cases like remember-me tokens and auto-unsubscribe links where the session store isn't suitable or available.
This is useful for creating cookies with values that the user is not supposed to change.
This is useful for limiting which attributes should be allowed for mass updating.
This is useful for numbers that can get very large (and too hard to read).
This is useful for objects that are not yet ready to be persisted, such as a Signup object constructed in a multi-paged process, or objects that don't change much and are needed all the time, such as a User object for a system that requires login.
This is useful for routes requiring a specific HTTP method.
This is useful for testing multiple sessions in a single test case.
This is useful for web services that need to work with raw requests directly.
This is useful for when you need to call a proprietary method such as PostgreSQL's lo_* methods.
This is useful if you want to display a corporate logo or a photo.
This is useful in cases where you aren't sure if the local variable has been assigned.
This is useful in combination with the +rescue_from+ option.
This is useful since IDs are generated by Markdown from headers and thus edits alter them.
This is useful when adding new counter caches, or if the counter has been corrupted or modified directly by SQL.
This is useful when cache fragments cannot be manually expired unless you know the exact key which is the case when using memcached.
This is useful when certain elements of an action change frequently or depend on complicated state while other parts rarely change or can be shared amongst multiple parties.
This is useful when overriding the +validate+ instance method becomes too unwieldy and you're looking for more descriptive declaration of your validations.
This is useful when passing around chains of relations and would like to modify the relations without reconstructing the entire chain.
This is useful when the options tag has complex attributes.
This is useful when you want your forgery protection to depend on other callbacks, like authentication methods (Oauth vs Cookie auth).
This is usually overwritten by helpers to add more behavior.
This is usually the name of a PostgreSQL relation but it can also represent schema qualified type names.
This is very helpful for easily exposing store keys to a form or elsewhere that's already built around just accessing attributes on the model.
This is what allows any test framework to hook into Rails as long as it provides any of the hooks above.
This is what child classes implement.
This is why we are tolerant to unknown constants.
This jar allows chaining with the signed jar as well, so you can set permanent, signed cookies.
This jar is only meant for writing.
This jar requires that you set a suitable secret for the verification on your app's +secrets.secret_key_base+.
This lets Rails applications have a single secure secret, but avoid reusing that key in multiple incompatible contexts.
This lets you access the variables as:
This limit may cause some asset downloads to wait for previous assets to finish before they can begin.
This list is in particular used to filter ordinary requests, String goes as first element to quickly short-circuit the common case.
This locking mechanism will function inside a single Ruby process.
This logic should be extracted to `env_config` and calculated once.
This makes Action Controller parameters forbidden to be used in Active Model mass assignment until they have been whitelisted.
This makes Rails itself absent of any component hooks, allowing other components to be used in place of any of the Rails defaults.
This makes app.url_for and app.foo_path available in the console
This makes cases more complex than the simple and guessable ones possible.
This makes chaining methods easier.
This makes fields_for suitable for specifying additional model objects in the same form.
This makes it easy to extract specific information:
This makes it easy to use signed cookies that were set when logging in via a web interface to authorize the WebSocket connection.
This makes it hard to find the signal amongst the backtrace noise, and adds debugging time.
This makes it less repetitive to translate many keys within the same controller / action and gives you a simple framework for scoping them consistently.
This makes it less repetitive to translate many keys within the same partial and provides a convention to scope keys consistently.
This makes it possible to store arrays, hashes, and other non-mappable objects without doing any additional work.
This makes retrieving the connection pool O(1) once the process is warm.
This makes the entire controller stack thinner, suitable for API applications.
This mapping belongs to the public interface.
This marks every template in the directory as a dependency.
This matches normal Ruby method inheritance: think of writing an attribute on a subclass as overriding the reader method.
This may be +nil+.
This may be better if you don't need to lock every row.
This may be represented in the same way as values passed to +url_for+ or +link_to+.
This may be seconds, minutes, hours, or even days.
This may be used by users to specify a different time zone model object.
This may be useful, for example, when you want to add default inline attachments for all messages sent out by a certain mailer class:
This may happen if there are paths in different drives on Windows.
This may improve the asset loading performance of your application.
This may lead to undesirable behavior such as a double DELETE.
This means HTML tags will appear in the page but all malicious code will be removed.
This means a user cannot alter their +user_id+ without knowing your app's secret key, but can easily read their +user_id+.
This means any callbacks added before are run first.
This means it can be used in association definitions:
This means routes are also reloaded if i18n is updated, which might not be necessary, but in order to be more precise we need some sort of reloaders dependency support, to be added.
This means that all helpers and named routes from the application will be available to your engine's controllers as well.
This means that an inheritance looking like this:
This means that as_json won't be invoked and the JSON gem will simply ignore any options it does not natively understand.
This means that from the perspective of your handler, the entire pipeline is just UTF-8.
This means that if a :lvar node is shown in AST, the variable is assumed to be already declared, even if we haven't seen any :lvasgn or :arg node before the :lvar node.
This means that if a handler doesn't handle encodings, it will always get Strings in the default_internal
This means that if no layout conditions are used, this method is not used
This means that if the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered of higher lexical precedence than the shorter one.
This means that it doesn't take part in the investigation phase when the other cops do their work.
This means that other parts of Rails can always assume that templates are encoded in UTF-8, even if the original source of the template was not UTF-8.
This means that the header and footer are only mentioned in one place, like this:
This means that the resulting array always contains a blank string.
This means that, if your application currently relies on instance variables set in the template to be used in the layout, they won't work once you move to streaming.
This means that, modifying headers, cookies, session or flash after the template starts rendering will not propagate to the client.
This means the first example above can also be written as:
This means we can get the template back.
This means working down from the current class (self), to the first non-abstract class.
This means you can define tables, indexes, etc.
This means, we do not change them to become more complete.
This mechanism requires you to have a +password_digest+ attribute.
This method accepts any of the following day symbols: :monday, :tuesday, :wednesday, :thursday, :friday, :saturday, :sunday
This method accepts any of the following:
This method accepts both a single key and an array of keys.
This method allows negative parts to be present in pattern.
This method also accepts a block, which will return the current time back to its original state at the end of the block:
This method also accepts a block.
This method also does namespace lookup.
This method also supports multi-line arguments.
This method always returns a record, but if creation was attempted and failed due to validation errors it won't be persisted, you get what create returns in such situation.
This method assumes an +ApplicationController+ exists, and it extends +ActionController::Base+
This method breaks on the first whitespace character that does not exceed +line_width+ (which is 80 by default).
This method can be overloaded to customize the behavior.
This method can be passed attribute names and an optional time argument.
This method checks to see if the ActiveRecord object's state reflects the TransactionState, and rolls back or commits the Active Record object as appropriate.
This method constructs a single SQL UPDATE statement and sends it straight to the database.
This method creates nested route entry for namespaced resources.
This method depends on the fact that we have guarded against implicit and empty literals.
This method differs from its non-bang version in that it passes through the attribute setter.
This method differs from its non-bang version in the sense that it passes through the attribute setter.
This method does not remove the newlines from the +text+.
This method enables you to use the flash as a central messaging system in your app.
This method ensures a template is compiled just once and removes the source after it is compiled.
This method exists to avoid the expensive primary_key check internally, without breaking compatibility with the read_attribute API
This method finds record by its primary key (which could be assigned manually) and modifies the receiver in-place:
This method finds the options and details and extracts them.
This method has the same semantics of +update+, except it does not modify the receiver but rather returns a new hash with indifferent access with the result of the merge.
This method is I18n aware, so you can set up custom approximations for a locale.
This method is a shortcut to all default validators and any custom validator classes ending in 'Validator'.
This method is abstract in the sense that +delete_records+ has to be provided by descendants.
This method is abstract in the sense that it relies on +count_records+, which is a method descendants have to provide.
This method is abstract in the sense that it relies on +find_target+, which is expected to be provided by descendants.
This method is also aliased as +to_param+.
This method is also being used as a path for a view lookup.
This method is available within the context of an ActiveRecord::Base instance.
This method is called automatically by filters, so you generally don't need to care about it.
This method is called whenever no records are found with either a single id or multiple ids and raises an ActiveRecord::RecordNotFound exception.
This method is defined to be able to write
This method is equivalent to the `raw` helper in views.
This method is invoked when a log event occurs
This method is not intended to be called directly by the user.
This method is only called when consider_all_requests_local is false.
This method is opposite of register method.
This method is private, as we are hoping to remove it entirely.
This method is redefined by subclasses.
This method is responsible for properly setting the encoding of the source.
This method is robust to non-reachable constants.
This method is the only valid source of information for anything related to the types of a model's attributes.
This method is the opposite of add method.
This method is used primarily for maintaining counter_cache columns that are used to store aggregate values.
This method is used to define validations that cannot be corrected by end users and are considered exceptional.
This method is useful for reporting file sizes to users.
This method is useful if you have a template object but it does not contain its source anymore since it was already compiled.
This method makes sure that tests don't leak global state related to time zones.
This method manipulates the given path and tries to find any migration which matches the migration name.
This method must also receive a block that will be called once a path changes.
This method needs to create a temporary file.
This method outputs without escaping a string.
This method raises an ActiveRecord::ActiveRecordError  if the attribute is marked as readonly.
This method raises an ActiveRecord::ActiveRecordError when called on new objects, or when at least one of the attributes is marked as readonly.
This method requires you to pass a module where all your controllers, helpers and models should be nested to:
This method returns a Response object, which one can use to inspect the details of the response.
This method returns the maximum mtime of the files in +paths+, or +nil+ if the array is empty.
This method returns the output printed by the generator.
This method sets a weak ETag validator on the response so browsers and proxies may cache the response, keyed on the ETag.
This method should be used with care when shared cache is being used.
This method should not be called directly.
This method should only be used if the other class contains the foreign key.
This method should only be used if this class contains the foreign key.
This method should return a hash with assigns.
This method should return an array with the messages to be added.
This method takes a block that contains the content you wish to cache.
This method toggles directly the underlying value without calling any setter.
This method uses the +pluralize+ method on the last word in the string.
This method uses the memcached decr atomic operator and can only be used on values written with the :raw option.
This method uses the memcached incr atomic operator and can only be used on values written with the :raw option.
This method will _always_ remove record from the database ignoring the +:dependent+ option.
This method will access the database and load the model's schema if it is required.
This method will automatically define a new method for each of the given names, and it will be available in your views.
This method will be removed in Rails 5.1 Since it is only necessary when `active_record_internal_metadatas` could exist
This method will overwrite an existing Cache-Control header.
This method will raise an +IrreversibleMigration+ exception if it cannot invert the +command+.
This method would be useful when you treat the receiver node as the root of a tree and want to iterate over all nodes in the tree.
This middleware assumes that there is at least one proxy sitting around and setting headers with the client's remote IP address.
This middleware calculates the IP address of the remote client that is making the request.
This middleware is commonly initialized to serve assets from a server's `public/` directory.
This middleware is responsible for logging exceptions and showing a debugging page in case the request is local.
This middleware rescues any exception returned by the application and calls an exceptions app that will wrap it in a format for the end user.
This middleware returns a file's contents from disk in the body response.
This middleware verifies the path to ensure that only files living in the root directory can be rendered.
This middleware will attempt to return the contents of a file's body from disk in the response.
This might be done via the +SecureRandom.uuid+ method and a +before_save+ callback, for instance.
This migration first adds the +system_settings+ table, then creates the very first row in it using the Active Record model that relies on the table.
This migration will add a boolean flag to the accounts table and remove it if you're backing out of the migration.
This migration will create the horses table for you on the way up, and automatically figure out how to drop the table on the way down.
This mix-in module provides string coloring methods for terminals.
This model can now be used with a nested fields_for, like so:
This model can now be used with a nested fields_for.
This module allows you to define autoloads based on Rails conventions (i.e. no need to define the path it is automatically guessed based on the filename) and also define a set of constants that needs to be eager loaded:
This module contains a collection of useful utility methods.
This module contains help texts for command line options.
This module creates compiled delegation methods dynamically at runtime, which makes subsequent calls to that method faster by avoiding method_missing.
This module encapsulates the logic for autocorrect behavior for a cop.
This module handles everything related to mail delivery, from registering new delivery methods to configuring the mail object to be sent.
This module handles measurement and reporting of complexity in methods.
This module helps build the runtime properties used to display in the Rails::InfoController responses.
This module holds the RuboCop version information.
This module is mixed in if layout conditions are provided.
This module is used to encapsulate access to thread local variables.
This module keeps all methods and behavior in ActionView that simply delegates to the controller.
This module only intends to provide guidance in case you want all features out of the box.
This module provides a method which will redirect the browser to use HTTPS protocol.
This module provides a way to locate the conditional branch the node is in.
This module provides an internal implementation to track descendants which is faster than iterating through ObjectSpace.
This module provides approximate string matching methods.
This module provides functionality for checking if names match the configured EnforcedStyle.
This module provides methods for generating asset paths and urls.
This must be defined before the inherited hook, below
This must be done after the options have already been processed, because they can affect how ConfigStore behaves
This mutator is protected in the class definition
This naming convention helps to identify translations that include HTML tags so that you know what kind of output to expect when you call translate in a template and translators know which keys they can provide HTML values for.
This needs to be an initializer, since it needs to run once per engine and get the engine as a block parameter.
This needs to happen before eager load so it happens in exactly the same point regardless of config.cache_classes
This object is initialized with a block that knows how to render the template.
This object serves as a container in which available responses can be stored by calling any of the dynamically generated, mime-type-specific methods such as +html+, +xml+ etc on the Collector.
This one allows you to keep files with different formats in separate subdirectories, eg.
This one is fun.
This operates similarly to a has_and_belongs_to_many association.
This operation will affect filesystem ACL's
This option is implemented as a +before_save+ callback.
This option is off by default.
This option is useful for example if you need fewer/more than four hosts, custom host names, etc.
This parameter can be any one of:
This parser allows negative parts to be present in pattern.
This particular method should be called with a method_name and the args passed into that method as an input.
This pattern has been implemented as a single method that accepts an array and renders a partial by the same name as the elements contained within.
This plays nicely with tools like jekyll-feed which expect post.author to be in a specific format.
This prevents the parent object from validating successfully and saving, which then deletes the associated object, thus putting the parent object into an invalid state.
This prevents the user from tampering with the session but also allows them to see its contents.
This problem is not possible to reproduce now, but we want to avoid it in case it's still there.
This processes the action in a child thread.
This protects your cookies from interception by a vulnerable site on a subdomain.
This pulls :controller, :action, and :id out of the recall.
This redirect works by returning an external "302 Moved" HTTP response that takes the user to the index action.
This redirects the attempts to write objects in an association through the helper methods defined below.
This reduces the cost of of hosting on a service like Heroku along with the memory footprint of having to maintain additional jobs if hosting on a dedicated server.
This reduces the total number of queries to 3.
This regex string is treated as an unanchored regex.
This regular expression is used to split the levels of a domain.
This relies on the fact that a transaction can only be in one rollback or commit (otherwise a list of states would be required) Each Active Record object inside of a transaction carries that transaction's TransactionState.
This relies on the rack variable set by the ActionDispatch::RequestId middleware.
This removal may generate an issue on FreeBSD, that's why we need to use remove_possible_method here
This replaces mod_rewrite rules.
This requires a join table that has no corresponding model or primary key.
This script generates the guides.
This script is prepared to be launched from the guides directory as a rake task:
This script validates the generated guides against the W3C Validator.
This sets the foreign keys to +NULL+.
This setting overrides the default select over find_all.
This shit is nasty.
This should be a lambda to be executed.
This should be a last resort because using, for example, MySQL specific terms will lock you to using that particular database engine or require you to change your call if you switch engines.
This should be a no-op that does not raise an error
This should be called wherever the underlying cache implementation is not thread safe.
This should be implemented to return the values of the relevant key(s) on the owner, so that when stale_state is different from the value stored on the last find_target, the target is stale.
This should be not be called manually but set in database.yml.
This should be set to, or include, +true+ if you are validating a database column, since the attribute is typecast from "1" to +true+ before validation.
This should execute a query that does not raise an error
This should ideally be false in the production environment where dumping schema is rarely needed.
This should never leave the database in an inconsistent state.
This should not be confused with integration tests (see ActionDispatch::IntegrationTest), which are more like "stories" that can involve multiple controllers and multiple actions (i.e. multiple different HTTP requests).
This should not be destroyed.
This should not be used on variable length plaintext strings because it could leak length info via timing attacks.
This should not exceed 0.25.
This should only be set by methods which will call changed_attributes multiple times when it is known that the computed value cannot change.
This simplifies
This simulates the fact that instance variables are reset every time a view is rendered.
This small step has some wonderful ripple effects.
This specifically verifies TEST for backwards compatibility with rake test as bin/rails test already supports running tests from a single file more cleanly.
This statement is one character too long to fit.
This store is most useful if you don't store critical data in your sessions and you don't need them to live for extended periods of time.
This stub emulates the Railtie including the URL helpers from a Rails application
This table is to verify if the :limit option is being ignored for text and binary columns
This takes advantage of Copy On Write process behavior so workers use less memory.
This takes precedence over configs located in any directories
This technique is useful caching pieces like menus, lists of new topics, static HTML fragments, and so on.
This test checks that if we push a hash to an array (in-place modification) the cache does not get fooled, the hash is still wrapped as strong params, and not permitted.
This test creates two groups of threads: group1 whose members all start waiting before any thread in group2.
This test ensures that if the default_external is set to something other than UTF-8, we don't get any errors and get back a UTF-8 String.
This test is testing 3 things: render :file in AV      :ported: render :template in AC  :ported: setting content type
This test requires a block that is empty
This test was failing when run on its own (as opposed to running the entire suite).
This test-case serves as a reminder for this use-case.
This tests that the helpers hook up correctly to the sanitizer classes.
This thread is compatible with both of the "primary" attempts above.
This time we will change the locale.
This token is stored as a random string in the session, to which an attacker does not have access.
This unique ID is useful for tracing a request from end-to-end as part of logging or debugging.
This uses a server-appropriate method (such as X-Sendfile) via the Rack::Sendfile middleware.
This uses an abstract class that defines attributes and associations.
This validator defers to the Active Model validation for presence, adding the check to see that an associated object is not marked for destruction.
This value can be specified as an option to the constructor (in which case all entries will be affected), or it can be supplied to the +fetch+ or +write+ method to effect just one entry.
This value may be a string from the form builder, or a ruby object passed to a setter.
This variable tracks the number of threads currently in the process of independently establishing connections to the DB.
This verifier can be used to generate and verify signed messages in the application.
This was the default for Rails 3 apps.
This way the wildcard for `app/views/recordings/events` would be `recordings/events/*` etc.
This way, the client either sends only the hidden field (representing the check box is unchecked), or both fields.
This will allow clients to submit requests without having to specify any root elements.
This will allow you to specify a text which will displayed instead by using this form:
This will also run validations and callbacks of associated object(s).
This will assign "weblog_standard" as the WeblogController's layout for all actions except for the +rss+ action, which will be rendered directly, without wrapping a layout around the rendered view.
This will be overwritten by _write_layout_method
This will be the default behavior for Active Record when used in conjunction with Action Pack's request handling cycle.
This will cause a warning if content is processed as HTML
This will cause transactions to overlap and fail unless they are performed on separate database connections.
This will clear all named routes and reload routes.rb if the file has been modified from last load.
This will close the active connection and the defined connection (if they exist).
This will create 1000 very simple fixtures.
This will create a number of routes for each of the posts and comments controller.
This will display the wrapped hash in the log file
This will ensure that user's sensitive information will be transferred safely over the internet.
This will execute one query to load the addresses and load the addressables with one query per addressable type.
This will generate the +exciting_path+ and +exciting_url+ helpers which can be used to navigate to this mounted app.
This will include both records as part of the cache key and updating either of them will expire the cache.
This will later be JSON encoded.
This will let you use your domain objects across much of Active Record, without having to rely on implementation details or monkey patching.
This will load all comments with a single query.
This will load posts and eager load the +approved_comments+ association, which contains only those comments that have been approved.
This will make the wrapped hash accessible from controller and view
This will match if, case, begin, blocks, etc.
This will merge the existing object (reply) with what gets loaded from the db (which includes the changed approved attribute).
This will not affect other platforms:
This will often result in a performance improvement over a simple join.
This will only complain when the number of variables being assigned matched the number of assigning variables.
This will override the controller-wide "weblog_standard" layout, and will render the help action with the "help" layout instead.
This will perform a diff and delete/add only records that have changed.
This will provide access to fixture data for every table that has been loaded through fixtures (depending on the value of +use_instantiated_fixtures+).
This will render "advertiser/_ad.html.erb" and pass the local variable +ad+ to the template for display.
This will render the layout for each user and yield to the block, passing the user, each time.
This will render the partial "advertisement/_ad.html.erb" regardless of which controller this is being called from.
This will try to load any generator in the load path to show in help.
This will use +asset_path+ internally, so most of their behaviors will be the same.
This will use +audio_path+ internally, so most of their behaviors will be the same.
This will use +font_path+ internally, so most of their behaviors will be the same.
This will use +image_path+ internally, so most of their behaviors will be the same.
This will use +javascript_path+ internally, so most of their behaviors will be the same.
This will use +stylesheet_path+ internally, so most of their behaviors will be the same.
This will use +video_path+ internally, so most of their behaviors will be the same.
This will validate the association itself, not the id.
This will work with any template engine, as we process out the encoding comment before passing the source on to the template engine, leaving a blank line in its stead.
This works by using a type column in addition to a foreign key to specify the associated record.
This works for mysql2 where table.column can be used to resolve ambiguity.
This works on MySQL and PostgreSQL.
This would allow a user to use new nonce without prompting the user again for their username and password.
This would cause a warning to be printed on stderr if the file was read.
This would render "advertiser/_account.html.erb".
This write will block, and eventually raise
Those points are going to be addressed soon.
Those will not be the ultimate client IP in production, and so are discarded.
Threadsafe template cache
Threadsafe, fair, FIFO queue.
Three modes are supported through the `AlignWith` configuration parameter:
Through association (uses the :primary_key option from the source reflection)
Through associations can either use the has_many or has_one macros.
Through the use of eager loading, the number of queries will be reduced from 101 to 2.
Thus this test prepares waiting threads and then trickles in available connections slowly, ensuring the wakeup order is correct in this case.
Thus, any mass-assignment idiom like
Thus, for example,
Thus, we lazy load it and disable warnings locally.
Thus, you won't be able to verify the results of your transaction until Active Record supports nested transactions or savepoints (in progress).
Time to give our monkey some fruit.
Time.at can be called with a time or numerical value
Time.new can be called with a time zone offset When it is, that should be considered safe Example: Time.new(1988, 3, 15, 3, 0, 0, "-05:00")
TimeWithZone instances implement the same API as Ruby Time instances, so that Time and TimeWithZone instances are interchangeable.
Timestamp when the job should be performed
Timestamping can be turned off by setting:
Timestamps are in UTC by default but you can use the local timezone by setting:
Title order scope should not apply here
To access the +Instrumenter+ object for a particular +notifier+, you can call the following method:
To achieve this, the validation adds accessors to the model for the confirmation attribute.
To add a member route, add a member block into the resource block:
To add a route to the collection:
To add an initialization step to the Rails boot process from your railtie, just define the initialization code with the +initializer+ macro:
To add behavior to the initialize method, use the following signature:
To add redirection helpers to your metal controller, do the following:
To add the render helpers you're used to having in a normal controller, you can do the following:
To allow proxies to cache the response, set +true+ to indicate that they can serve the cached response to all users.
To avoid database inconsistencies, permanently deletes an existing associated object when assigning a new one, even if the new one isn't saved to database.
To avoid false positives, it ignores cases in which we cannot know for certain the type of value that would be assigned to a constant.
To be able to use single-table inheritance with another column name, or to use the column +type+ in your own model for something else, you can set +inheritance_column+:
To be described.
To cause a validation error, you must add to the +record+'s errors directly from within the validators message.
To change this, we can give a block to customize how the controller can be invoked.
To clear the cookies for a test just clear the cookie collection:
To close this gap, browser vendors include a baked-in list of HSTS-enabled sites.
To configure the adapter's thread pool, instantiate the adapter and pass your own config:
To continue with the asset example above, suppose there are guest posts and member posts that use the posts table for STI.
To convert a pathname to a Ruby namespace, we need a starting point But RC can be run from any working directory, and can check any path We can't assume that the working directory, or any other, is the "starting point" to build a namespace
To create a new application, you can instantiate a new instance of a class that has already been created:
To create a renderer pass it a name and a block.
To customize this helper's name, use the +:as+ option:
To define a reversible migration, define the +change+ method in your migration like this:
To define an Active Job object:
To do so, simply raise +WrongEncodingError+ as follows:
To do so, the method loops over the pairs and builds nodes that depend on the _values_.
To do that, use the +endpoint+ method:
To do that, you simply need to call +isolate_namespace+.
To do this just assign a value to the session or cookie collection:
To enable the +uuid-ossp+ extension, you can use the +enable_extension+ method in your migrations.
To enqueue a job to be performed as soon as the queueing system is free:
To enqueue a job to be processed at some point in the future:
To ensure consistent data, the environment deletes the fixtures before running the load.
To ensure entries fit within the specified memory prune the cache by removing the least recently accessed entries.
To find all callbacks in the before_save callback chain:
To find those templates, the wildcard path must be absolutely defined from app/views or paths otherwise added with +prepend_view_path+ or +append_view_path+.
To generate a new migration, you can use rails generate migration MyNewMigration
To generate a secret key for an existing application, run `rails secret`.
To generate the valid message below:
To get around this you can call the define_model_callbacks method as many times as you need.
To get the default_scope conditions for any of the other reflections in the chain 2.
To get the tests to pass
To get the type conditions for any STI models in the chain
To implement the corresponding hosts you can either setup four actual hosts or use wildcard DNS to CNAME the wildcard to a single asset host.
To implement, just extend ActiveModel::Naming in your object:
To implement, you need to wrap the methods you want callbacks on in a block so that the callbacks get a chance to fire:
To include a deep hierarchy of associations, use a hash:
To instrument an event you just need to do:
To iterate over these one hundred posts, we'll generate 201 database queries.
To make it work across all web requests, the recommended approach is to add +lock_version+ as a hidden field to your form.
To make things DRY this macro is created to define 3 tests for every validation case.
To match a wildcard parameter, it must have a name assigned to it.
To mitigate this problem, we use a few strategies: 1.
To play nicely with JavaScript conventions sub-attributes are dasherized.
To preserve the case of the characters in a string, use the `preserve_case` argument.
To prevent that block from being called anymore, just unsubscribe passing that reference:
To prevent this the helper generates an auxiliary hidden field before every collection of radio buttons.
To prevent this the helper generates an auxiliary hidden field before every multiple select.
To prevent this the helper generates an auxiliary hidden field before the very check box.
To prevent this, only XmlHttpRequest (known as XHR or Ajax) requests are allowed to make GET requests for JavaScript responses.
To prevent this, the helper generates an auxiliary hidden field before every file field.
To prevent users from using something insecure like "Password" we make sure that the secret they've provided is at least 30 characters in length.
To raise an exception when the value is blank, append a bang to the key name, like:
To recreate the instance, pass a non-false value as the parameter.
To remove a csv renderer:
To remove unused values, the explicit hash syntax should be used.
To require confirmation, make sure to add a presence check for the confirmation attribute:
To restart PostgreSQL 9.1 on OS X, installed via MacPorts, ...
To return old behavior set +config.action_controller.include_all_helpers+ to +false+.
To set the default allowed tags or attributes across your application:
To setup your validator override the constructor.
To setup, you need just to configure the destination and set which generator is being tested:
To solve this, a 3 second heartbeat runs on all connections.
To specialize the default behavior (i.e., show a login link rather than just the plaintext link text), you can pass a block that accepts the name or the full argument list for +link_to_unless+.
To specialize the default behavior, you can pass a block that accepts the name or the full argument list for +link_to_unless+ (see the examples in +link_to_unless+).
To specify a queue adapter to use:
To support these, we must use a subquery.
To take advantage of these options, install the +actionview-encoded_mail_to+ gem.
To test query strings you must use the extras argument, appending the query string on the path directly will not work.
To the user all it matters is that a helper module couldn't be loaded, autoloading is an internal mechanism that should not leak.
To turn off HSTS, omitting the header is not enough.
To unregister a MIME type:
To use Action Mailer, you need to create a mailer model.
To use Backburner set the queue_adapter config to +:backburner+.
To use Delayed Job, set the queue_adapter config to +:delayed_job+.
To use Qu set the queue_adapter config to +:qu+.
To use Que set the queue_adapter config to +:que+.
To use Resque set the queue_adapter config to +:resque+.
To use Sidekiq set the queue_adapter config to +:sidekiq+.
To use Sneakers set the queue_adapter config to +:sneakers+.
To use Sucker Punch set the queue_adapter config to +:sucker_punch+.
To use a UUID primary key without +uuid-ossp+ enabled, you can set the +:default+ option to +nil+:
To use a custom separator, override the `separator` argument.
To use engine's migrations in application you can use the rake task below, which copies them to application's dir:
To use queue_classic set the queue_adapter config to +:queue_classic+.
To use the Inline set the queue_adapter config to +:inline+.
To use the csv renderer in a controller action:
To use the test adapter set queue_adapter config to +:test+.
To use this adapter, set queue adapter to +:async+:
To use, pass an attribute name (as string or symbol).
To use, pass attribute names (as strings or symbols).
To work around this, you must specify the pluralized form as an acronym as well:
Token is malformed
Topic.replied
Topic.select('title').from('posts') SELECT title FROM posts
Track all generators subclasses.
Track the last warning.
TransactionIsolationError will be raised under the following conditions:
Transform the model name into a more human format, using I18n.
Transforms attribute names into a more human format, such as "First name" instead of "first_name".
Translate a file path into a key.
Translate a key into a file path.
Transmit a hash of data to the subscriber.
Treat begin..rescue..end with retry as a loop.
Tries to behave as if it were an ORM.
Tries to create a new record with the same scoped attributes defined in the relation.
Tries to find a constant with the name specified in the argument string.
Tries to get the description from a USAGE file one folder above the source root otherwise uses a default description.
Tries to rescue the exception by looking up and calling a registered handler.
Tries to retrieve the application name or simply return application.
Trigger a Rack parse so that env caches the query params
Trigger a built-in NameError exception including the ill-formed constant in the message.
Trigger i18n config before any eager loading has happened so it's ready if any classes require it when eager loaded.
True if an ETag is set and it isn't a weak validator (not preceded with W/)
True if an ETag is set and it's a weak validator (preceded with W/)
True if the current request URI was generated by the given +options+.
True if the method name matches one of the five elements defined in the Atom spec as potentially containing XHTML content and if type: 'xhtml' is, in fact, specified.
Truncates a table alias according to the limits of the current adapter.
Try fallbacks for the given base.
Try the other
Try to get stored content.
Try to grab AR
Try to match the absolute path, as Exclude properties are absolute.
Try with relative path.
Tune the size yourself with config.action_cable.worker_pool_size.
Turn off Bundler's stub generator
Turn on request forgery protection.
Turn the session id into a cache key.
Turn unwanted chars into the separator.
Turned off by default only in test mode.
Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.
Turns the Response into a Rack-compatible array of the status, headers, and body.
Tweaks an attribute name for display to end users.
Two controllers can share a set of partials and render them like this:
Two modes are supported through the AlignWith configuration parameter.
Two of these symbols are special, +:controller+ maps to the controller and +:action+ to the controller's action.
Two offenses are found.
Two rewrites in the same area by the same cop can not be handled.
Two styles are supported for this cop.
Type casts a value for schema dumping.
Type casts a value from user input (e.g. from a setter).
Types should not need to override this method.
URI path and fragment escaping http://tools.ietf.org/html/rfc3986
URL generation functionality is centralized in this module.
UTF-8 is the default internal and external encoding.
UTF-8 leading byte followed by too few continuation bytes
UUIDs are RFC 4122 version 5 SHA-1 hashes.
Unary + doesn't appear as a token and needs special handling.
Unary minus
Under the hood, it replaces spaces with underscores and defines the test method.
Unescapes bytea output from a database to the binary string it represents.
Unfortunately that workaround does not work when the check box goes within an array-like parameter, as in
Unfortunately this introduces a gotcha: if a +User+ model has a +category_id+ field, and in the form none category is selected no +category_id+ parameter is sent.
Unfortunately this introduces a gotcha: if a +User+ model has an +avatar+ field, and no file is selected, then the +avatar+ parameter is empty.
Unfortunately this introduces a gotcha: if an +Invoice+ model has a +paid+ flag, and in the form that edits a paid invoice the user unchecks its check box, no +paid+ parameter is sent.
Unfortunately this introduces a gotcha: if an +User+ model has many +roles+ and have +role_ids+ accessor, and in the form that edits roles of the user the user deselects all roles from +role_ids+ multiple select box, no +role_ids+ parameter is sent.
Unfortunately we cannot actually know if a method is from Enumerable or not (static analysis limitation), so this cop can yield some false positives.
Unfortunately, the JSON gem's encoder relies on its own to_json implementation to encode objects.
Unfortunately, the current Rails behavior is to just return the string.
Unfreeze name in case it's given as a frozen string
Unicode whitespace is supported:
Unicorn supports streaming but it needs to be configured.
Unless the element is tagged with :nodoc:, the search proceeds to check its ancestors for :nodoc: all.
Unless the join table is explicitly specified as an option, it is guessed using the lexical order of the class names.
Unlike controllers from Action Pack, the mailer instance doesn't have any context about the incoming request, so you'll need to provide all of the details needed to generate a URL.
Unlike index, the create action will not render a template.
Unlike other helpers, +select+ expects this option to be in the +html_options+ parameter.
Unlike subclasses of ActionController::Base, channels do not follow a RESTful constraint form for their actions.
Unloadable constants are removed each time dependencies are cleared.
Unloads the association.
Unpack the string at grapheme boundaries.
Unregistered MIME Type can't be parsed.
Unsubscribes all streams associated with this channel from the pubsub queue.
Until this point, we assume that the source is BINARY data.
Unused byte
Unwrap Constraints objects.
Unwrap the negated portion of the condition (a send node).
Update lib/active_record/internal_metadata.rb when this gets removed
Update the count
Update transmit API to be coder-aware so we can no-op when pubsub and connection are both JSON-encoded.
Updates a single attribute and saves the record.
Updates all records in the current relation with details given.
Updates an object (or multiple objects) and saves it to the database, if validations pass.
Updates the associated record with values matching those of the instance attributes.
Updates the attributes directly in the database issuing an UPDATE SQL statement and sets them in the receiver:
Updates the attributes of the model from the passed-in hash and saves the record, all wrapped in a transaction.
Updates the attributes on this particular Active Record object so that if it's associated with a transaction, then the state of the Active Record object will be updated to reflect the current state of the transaction
Updates the receiver in-place, merging in the hash passed as argument:
Updates the session with given Hash.
UpgradeLegacyEncryptedCookieJar is used by ActionDispatch::Session::CookieStore instead of EncryptedCookieJar if secrets.secret_token and secrets.secret_key_base are both set.
UpgradeLegacySignedCookieJar is used instead of SignedCookieJar if secrets.secret_token and secrets.secret_key_base are both set.
Uploaded files are temporary files whose lifespan is one request.
UrlFor also allows one to access methods that have been auto-generated from named routes.
Usable when the storage for a string is limited for some reason.
Use +build_association+ or +create_association+ instead.
Use +html_options+ to modify every select tag in the set.
Use +true+ with boolean attributes that can render with no value, like +disabled+ and +readonly+.
Use .unscope(where: :attribute_name) or .unscope(:order), for example."
Use :all to dump all schemas regardless of schema_search_path, or a string of comma separated schemas for a custom list.
Use :ruby if you want to have different database adapters for, e.g., your development and test environments.
Use AR::Base's prefix/suffix if string or symbol is given
Use InnoDB, MaxDB, or NDB instead.
Use N processes (N defaults to 4)
Use Rails default banner.
Use `next` to skip iteration instead of a condition at the end.
Use a guard clause instead of wrapping the code inside a conditional expression
Use a local cache for the duration of block.
Use a numeric with precision 0 instead.")
Use a smaller worker pool or a larger db connection pool instead.
Use an alternate output buffer for the duration of the block.
Use callbacks to share common setup or constraints between actions.
Use i for Fixnum and f for Float.
Use it only if that name can't be inferred from the association name.
Use it only if that name can't be inferred from the part id.
Use it to retrieve the current state of the response, or customize the response.
Use mixed case - one can always use downcase if needed.
Use nil for NULL.
Use of the native PostgreSQL UUID type is supported, and can be used by defining your tables as such:
Use standard-conforming strings so we don't have to do the E'...' dance.
Use symbols as procs when possible.
Use that class method when you need to know the ordinal value of an enum.
Use that one when enabling the constraint if needed, since otherwise those rows would not be valid.
Use the +model+ method to retrieve the record which did not validate.
Use the format name as the hash key and a Proc instance.
Use the format name as the hash key and either a strftime string or Proc instance that takes a date argument as the value.
Use the format name as the hash key and either a strftime string or Proc instance that takes a time argument as the value.
Use the format name as the hash key and either a strftime string or Proc instance that takes a time or datetime argument as the value.
Use the logger configured for ActionMailer::Base.
Use the model's own prefix/suffix if a model is given
Use the named concerns
Use the new Rails 5 executables
Use the time in UTC for comparisons.
Use this class to sense if migrations have gone up or down.
Use this if you already have some hash and you want to create a new one based on it.
Use this macro in your model to set a default scope for all operations on the model.
Use this method in code that absolutely needs a certain constant to be defined at that point.
Use to indicate that the given +table_names+ are referenced by an SQL string, and should therefore be JOINed in any query rather than loaded separately.
Use true if you want to assign generic styles for select tags.
Used as secret in generating nonce to prevent tampering of timestamp
Used by +sanitize+ when it comes across a style attribute.
Used by ActionDispatch::Session::CookieStore to avoid the need to introduce new cookie stores.
Used by the migration template to determine the parent name of the model
Used for our test suite.
Used for proxy classes.
Used for running a specific migration.
Used for running multiple migrations up to or down to a certain value.
Used in cases where a method or scope could return zero records but the result needs to be chainable.
Used in filtering callbacks.
Used in number_to_currency
Used in number_to_delimited These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
Used in number_to_human
Used in number_to_human_size
Used in number_to_human_size and number_to_human
Used in number_to_percentage
Used in number_to_rounded
Used internally by +audio_tag+ to build the audio path.
Used internally by +image_tag+ to build the image path:
Used internally by +javascript_include_tag+ to build the script path.
Used internally by +stylesheet_link_tag+ to build the stylesheet path.
Used internally by +video_tag+ to build the video path.
Used only to speed up tests
Used to allow arbitrary constants to be marked for unloading.
Used to avoid updating the counter cache unnecessarily.
Used to drop all cache query plans in tests.
Used to extend a scope with additional methods, either through a module or through a block provided.
Used to sanitize objects before they're used in an SQL SELECT statement.
Used to specify an operation that can be run in one direction or another.
Used to test that assert_response includes the exception message in the failure message when an action raises and assert_response is expecting something other than an error.
Used to test that read and question methods are not generated for these attributes
Used with the standard time durations, like 1.hour.in_milliseconds -- so we can feed them to JavaScript functions like getTime().
Useful for Rails::Railtie subclasses.
Useful for building virtual paths.
Useful for complex table highlighting or any other design need which requires the current cycle string in more than one place.
Useful for defining methods on associations, especially when they should be shared between multiple association objects.
Useful for having links perform a POST operation in dangerous actions like deleting a record (which search bots can follow while spidering your site).
Useful for inspecting an object at the time of rendering.
Useful for making sure that only one user can be named "davidhh".
Useful for partial updates, don't only update the lock_version if there is nothing else being updated.
Useful for performing authorization checks.
Useful for situations where you don't want other processes or threads to see half-written files.
Useful for tests that need to compare SQL queries on associations.
Useful if the name can't be inferred from test class.
Useful if there is not a default value required for the select element.
Useful if you suddenly need to see entire filepaths in the backtrace that you had already filtered out.
Useful if your context of debugging suddenly expands as you suspect a bug in one of the libraries you use.
Useful in applications where the limit or scope being ignored is error-worthy, rather than a warning.
Useful in cases when you are rendering a :file.
Useful in development and test environments where you don't want caching turned on but need to go through the caching interface.
Useful to render parts of your layout differently based on what is in your views.
Useful when you have an object that may need multiple spots to transmit to a specific broadcasting over and over.
User has explicitly opted out of concurrent request handling: presumably their code is not threadsafe
User tests can access the database on the main thread, so they could open a txn, then the controller thread will open a new connection and try to access data that's only visible to the main thread's txn.
User-Agent: curl/7.43.0 X_Custom_Header: token
User.eager_load(:posts) SELECT "users"."id" AS t0_r0, "users"."name" AS t0_r1, ...
User.group(:name) SELECT "users".* FROM "users" GROUP BY name
User.offset(10).order("name ASC")
User.order('email DESC').reorder('id ASC').order('name ASC')
User.order('name DESC') SELECT "users".* FROM "users" ORDER BY name DESC
User.order('name DESC, email') SELECT "users".* FROM "users" ORDER BY name DESC, email
User.order('name') SELECT "users".* FROM "users" ORDER BY name
User.order(:name) SELECT "users".* FROM "users" ORDER BY "users"."name" ASC
User.order(:name, email: :desc) SELECT "users".* FROM "users" ORDER BY "users"."name" ASC, "users"."email" DESC
User.order(email: :desc) SELECT "users".* FROM "users" ORDER BY "users"."email" DESC
User.preload(:posts) SELECT "posts".* FROM "posts" WHERE "posts"."user_id" IN (1, 2, 3)
User.select(:name) Might return two records with the same name
User.select(:name).distinct Returns 1 record per distinct name
User.select(:name).distinct.distinct(false) You can also remove the uniqueness
User.transaction do User.create(username: 'Kotori') User.transaction do User.create(username: 'Nemu') raise ActiveRecord::Rollback end end
User.transaction do User.create(username: 'Kotori') User.transaction(requires_new: true) do User.create(username: 'Nemu') raise ActiveRecord::Rollback end end
User.where.not(name: nil) SELECT * FROM users WHERE name IS NOT NULL
Users can generate the guides, and thus this flag is off by default.
Users may also define their own custom types, as long as they respond to the methods defined on the value type.
Uses ActiveSupport::Callbacks as the base functionality.
Uses COUNT()
Uses Date to provide precise Time calculations for years, months, and days according to the proleptic Gregorian calendar.
Uses Date to provide precise Time calculations for years, months, and days.
Uses an MD5 digest based on time to generate a value to be used only once.
Uses the Active Record object's own table_name, or pre/suffix from the options passed in.
Uses the git repo if one is given, otherwise use name (version).
Uses the internal channel to disconnect the connection.
Uses the same rules as ActiveRecord::Base.find.
Using +OrderedOptions+, the above code could be reduced to:
Using Active Record, Redis, etc within your channel actions means you'll get a separate connection from each thread in the worker pool.
Using Date.today is dangerous, because it doesn't know anything about Rails time zone.
Using a constant means that we do not have to allocate an object on each call to the attribute method.
Using either of these alternate methods incurs a performance hit, as the fixtured data must be fully traversed in the database to create the fixture hash and/or instance variables.
Using explicit id in insert for compatibility across all databases
Using it, you can change the label and check box display order or even use the label as wrapper, as in the example above.
Using it, you can change the label and radio button display order or even use the label as wrapper, as in the example above.
Using modules in separate files means tedious sifting to get a big-picture view.
Using pluralization (Ten/Tens and Tenth/Tenths)
Using polymorphic associations in combination with single table inheritance (STI) is a little tricky.
Using self.x to distinguish from local variable x
Using sub templates allows you to sidestep tedious replication and extract common display structures in shared templates.
Using t for thousand
Using the multiline modifier will raise an +ArgumentError+.
Using the route above, the URL "http://localhost:3000/articles/2005/11/06" maps to
Using this method means you won't directly depend on the ActiveSupport's JSON implementation, in case it changes in the future.
Using this on non-JSON values will open up serious XSS vulnerabilities.
Usually a database-dependent operation.
Usually key value pairs are handled something like this:
Usually the place to setup any streams you want this channel to be sending to the subscriber.
Usually there will be carriage return characters on all or none of the lines in a file, so we report only one offense.
Usually this model is not saved to the database.
VIEW TODO: View tests should not require a controller
Valid ASCII byte, high
Valid ASCII byte, low
Valid ASCII byte, mid
Valid Options:
Valid isolation levels are:
Valid keys are: :words_connector, :two_words_connector, :last_word_connector, :locale
Valid options are :json, :marshal, and :hybrid.
Valid uuids
Valid values are 'inline' and 'attachment' (default).
Valid values are +:member+, +:collection+, and +:new+.
Valid values are +:nullify+, +:cascade+ and +:restrict+
Valid values are: * +:random+   (to run tests in random order) * +:parallel+ (to run tests in parallel) * +:sorted+   (to run tests alphabetically by method name) * +:alpha+    (equivalent to +:sorted+)
Validate our unmarshalled data.
Validates each attribute against a block.
Validates option arguments and the options' compatibility with each other.
Validates that the specified attributes match the length restrictions supplied.
Validates that the value of the specified attribute is not in a particular enumerable object.
Validates whether the associated object or objects are all valid.
Validates whether the value of the specified attribute is available in a particular enumerable object.
Validates whether the value of the specified attribute is of the correct form, going by the regular expression provided.
Validates whether the value of the specified attributes are unique across the system.
Validator classes may also exist within the class being validated allowing custom modules of validators to be included as needed.
Value Object to hold a schema qualified name.
Value objects can also be composed of multiple attributes, such as the case of Address.
Values are encoded to JSON, with the exception of strings, symbols and BigDecimals.
Values can be single values, arrays, or ranges.
Values longer than 20 characters will be truncated.
Values set on app_generators will become defaults for application, unless application overwrites them.
Variables defined in the methods of your mailer model are accessible as instance variables in their corresponding view.
Variants also support common +any+/+all+ block that formats have.
Variants make it easy.
Vendors the full, link and white list sanitizers.
Verifies existence of an index with a given name.
Verifies the existence of an index with a given name.
Verify the connection param has been applied.
Verify the setting has been applied.
Verify the setting has been cleared.
VideoJob.set(queue: :some_queue).perform_later(Video.last) VideoJob.set(wait: 5.minutes).perform_later(Video.last) VideoJob.set(wait_until: Time.now.tomorrow).perform_later(Video.last) VideoJob.set(queue: :some_queue, wait: 5.minutes).perform_later(Video.last) VideoJob.set(queue: :some_queue, wait_until: Time.now.tomorrow).perform_later(Video.last) VideoJob.set(queue: :some_queue, wait: 5.minutes, priority: 10).perform_later(Video.last)
WARNING: The instrumentation framework is designed for long-running subscribers, use this feature sparingly because it wipes some internal caches and that has a negative impact on performance.
WARNING: This validation must not be used on both ends of an association.
WARNING: content_for is ignored in caches.
WARNING: this helper only works with valid JSON.
Wait a full second so we have time for changes to propagate
Wait notifications to be published.
Wait on the execution of all threads
Waits for termination by default.
Waits on the queue up to +timeout+ seconds, then removes and returns the head of the queue.
Warning: This class mutates ARGV because some commands require manipulating it before they are run.
We accept blank origin headers because some user agents don't send it.
We add 2 because there's one char of padding at both sides, note the extra hyphens in the example above.
We allow uses of `self` with operators because it would be awkward otherwise.
We already have one so the existing record will be returned.
We also need to ensure that associations are readonly where relevant.
We also need to reset the runtime before each action because of queries in middleware or in cases we are streaming and it won't be cleaned up by the method below.
We also want to avoid double reporting of offenses checked by the MultilineBlockChain cop.
We always want to persist the locking version, even if we don't detect a change from the default, since the database might have no default
We are able to call the methods like this:
We are also defining a constant to hold the frozen string of the attribute name.
We are given a source with an encoding of ASCII-8BIT
We are going to assign to existing constants on purpose, so silence warnings.
We are going to remove the constant nonetheless ---which exists as far as Ruby is concerned--- because if the user removes the macro call from a class or module that were not autoloaded, as in the example above with Object, accessing to that constant must err.
We are not using DROP COLUMN IF EXISTS because that syntax is only supported by pg 9.X
We are only testing that there are no errors because it's too hard to test serializable.
We are running without transactional tests and need to cleanup.
We are testing that a dirty read does not happen
We are testing that a nonrepeatable read does not happen
We assume that the name of the module reflects the nesting (unless it can be proven that is not the case) and the path to the file that defines the constant.
We assume these things about the IP headers:
We basically never want a connection to go stale, as you then can't rely on being able to communicate with the connection.
We call it semantic alignment when a dot is aligned with the first dot in a chain of calls, and that first dot does not begin its line.
We can * grok the behavior of our class in one glance, * clean up monolithic junk-drawer classes by separating their concerns, and * stop leaning on protected/private for crude "this is internal stuff" modularity.
We can also pass in the symbol arguments instead of strings.
We can improve upon the situation further by referencing both associations in the finder with:
We can then redefine how certain data types may be handled in the schema dumper on the Adapter level by over-writing this code inside the database specific adapters
We can use session-oriented authentication for these types of requests, by using the `protect_from_forgery` method in our controllers.
We can use the same cached proxy object because the id is available for the scope
We can't cache Post.find_by(author: david) ...yet
We can't cache results from code which is piped in to stdin
We can't reuse the connection, but we can copy the specification and establish a new connection with it.
We can't silence plain ruby Logger cause with thread safety but at least we don't break it
We can't simply check the first line of the backtrace, because JRuby reports the call to __send__ in the backtrace.
We can't transcode to the same format, so we choose a nearly-identical encoding.
We can't use alias_method here, because method 'id' optimizes itself on the fly.
We can't use the instance variable inside the lambda.
We care if the block start with arguments and the expression start on the same line.
We care only for the last argument.
We cheat here and dump everything into the same bucket.
We check that optimization here.
We corrected some errors.
We currently support NilClass, Fixnum, Float, String, TrueClass, FalseClass, Bignum, BigDecimal, and objects that can be represented as GlobalIDs (ex: Active Record).
We do as little as possible on the server's main thread.
We do not support creating/deleting records on the association where the source has some other type, because this opens up a whole can of worms, and in basically any situation it is more natural for the user to just create or modify their join records directly as required.
We document the request and response methods here because albeit they are implemented in ActionController::Metal, the type of the returned objects is unknown at that level.
We don't know if the first semicolon on the line is a separator of expressions.
We don't know which came from the proxy, and which from the user
We don't need strict fairness: if two connections become available at the same time, it's fine if two threads that were waiting acquire the connections out of order.
We don't own this job so we will update the locked_by name and the locked_at
We don't want Faye to start the EM reactor in tests because it makes testing much harder.
We don't want any non-native JSON elements in the job hash, like symbols.
We don't want that to happen, so we disable transactional tests here.
We emulate Unix on the former but not the latter.
We expect one of EOFError or Errno::ECONNRESET in normal operation (when the client goes away).
We follow the same principle regardless of which Ruby version we're running under.
We go back to the connection for the column queries because Topic.columns is cached and won't report changes to the DB
We go from right to left because pairs are pushed onto rescue_handlers as rescue_from declarations are found.
We have no direct reference to the colon source range following an optional keyword argument's name, so must construct one.
We have some records loaded from the database (persisted) and some that are in-memory (memory).
We have to reprocess the source to pickup the changes.
We have to require the generated helper to show the problem because the test helpers just check for generated files and contents but do not actually load them.
We ignore any extra parameters in the request_uri if the submitted url doesn't have any either.
We indicate the position after the left brace.
We know that we wrote a UTF-8 encoded string to the cache file, so it's safe to force-encode it back to UTF-8 if it happens to be ASCII-8BIT.
We lazy-load rubocop so that the task doesn't dramatically impact the load time of your Rakefile.
We may want to disable CSRF protection for APIs since they are typically designed to be state-less.
We merge in these scopes for two reasons:
We might be able to change the implementation to remove conflicts by index, rather than column name
We must avoid making file names too long for some filesystems to handle If they are short, we can leave them human-readable
We must make sure that the reflection's active_record name matches up with the current reflection's klass name.
We must not change indentation of heredoc strings.
We need this initializer so all extra initializers added in engines are consistently executed after all the initializers above across all engines.
We need this special case to avoid creating the pattern /**/* which searches the entire file system.
We need to apply this decorator here, rather than on module inclusion.
We need to avoid the following situation:
We need to create a new class in order to install the new named route.
We need to do that processing and can not use caching.
We need to recursively iterate over all `else` branches and consider all but the last `node` an `elsif` branch and consider the last `node` the actual `else` branch.
We need to recursively iterate over all `else` branches.
We need to require application after the server sets environment, otherwise the --environment option given to the server won't propagate.
We need to sign the message in order to avoid padding attacks.
We need to store the RAILS_DEV_PATH in a constant, otherwise the path can change in Ruby 1.8.7 when we FileUtils.cd.
We need to undef `root`, RenderTestCases don't want this to be defined
We need to verify the message in order to avoid padding attacks.
We often find ourselves with a medium-sized chunk of behavior that we'd like to extract, but only mix in to a single class.
We often want to render different html/json/xml templates for phones, tablets, and desktop browsers.
We only need the contents of the branch, not the condition.
We only support indirectly modifying through associations which have a belongs_to source.
We only want to deal with AR objects.
We override this in the sqlite3 and postgresql adapters to use only the column name (as per syntax requirements).
We prefer find_all over select.
We search for .rubocop.yml only if we haven't already found it for the given directory.
We should decouple this from the AR::Base implementation.
We should get `old_backend` here even while another thread is using `new_backend`.
We should push this separation upstream
We silently rollback this transaction without telling the user.
We specifically do a manual INSERT here, and then test only the SELECT functionality.
We still need to respect the source_reflection's :primary_key option, though.
We store our author information in a yaml file and specify the keys in The post front matter.
We track Thread objects, instead of just using counters, because we need exclusive locks to be reentrant, and we need to be able to upgrade share locks to exclusive.
We tried shimming it to attempt the fast native method, rescue TypeError, and fall back to the compatible implementation, but that's much slower than just calling the compat method in the first place.
We unset temporary bundler variables to load proper bundler and Gemfile.
We use a fully-qualified name in some strings, and a relative constant name in some other to test correct handling of both cases.
We use an implicit NULL so schema.rb is compatible with other databases.
We use our object ID here to avoid conflicting with other instances
We want a nice table layout, so we allow space inside empty hashes.
We want crashes to show up the same in each run.
We want to be able to start and stop EM loop in tests to make things simpler.
We want to change the preferred delimiters for word arrays.
We want to generate the methods via module_eval rather than define_method, because define_method is slower on dispatch.
We want to use the klass from this reflection, rather than just delegate straight to the source_reflection, because the source_reflection may be polymorphic.
We won't check modifier or ternary conditionals.
We're going to 'transcode' bytes from UTF-8 when possible, then fall back to CP1252 when we get errors.
We're looking for (block (send (const nil :Proc) :new) ...)
We're looking for (block (send nil :lambda) ...)
We're nested inside a +yield_shares+ call: we'll resume as soon as there isn't an exclusive lock in our way
We're obliged to implement this (even though it doesn't actually get called here) to properly comply with the Rack SPEC
We're only checking predicate methods.
We've found that "end" is not aligned with the start node (which can be a block, a variable assignment, etc).
We've specified the list of fruits on George's fixture, but we could've just as easily specified a list of monkeys on each fruit.
Weak ETags are considered to be semantically equivalent but not byte-for-byte identical.
Weak ETags are what we almost always need, so they're the default.
WebSocket connection implementations differ on when they'll mark a connection as stale.
WebSocket message transfer encoding is always JSON.
Week is assumed to start on +start_day+, default is +Date.beginning_of_week+ or +config.beginning_of_week+ when set.
What can be written like this with the regular calls to column:
What that says is, "if the client wants HTML or JS in response to this action, just respond as we would have before, but if the client wants XML, return them the list of people in XML format." (Rails determines the desired response format from the HTTP Accept header submitted by the client.)
What we want here is 'content   ', not ' content content content '.
When *not* to use transactional tests:
When +method_missing+ is called we check to see if there is a matching attribute method.
When +post+ is a new, unsaved ActiveRecord::Base instance, the resulting HTML is:
When +post+ is a persisted ActiveRecord::Base instance, the resulting HTML is:
When +transaction+ is finished and tries to release the savepoint it created earlier, a database error will occur because the savepoint has already been automatically released.
When EnforcedStyle is 'flexible' then it's also allowed to use Time.in_time_zone.
When EnforcedStyle is 'flexible' then only 'Date.today' is prohibited and only 'to_time' is reported as warning.
When EnforcedStyle is 'strict' then only use of Time.zone is allowed.
When EnforcedStyle is 'strict' then the Date methods (today, current, yesterday, tomorrow) are prohibited and the usage of both 'to_time' and 'to_time_in_current_zone' is reported as warning.
When a +:return_path+ is specified as header, that value will be used as the 'envelope from' address for the Mail message.
When a block is given, it yields the content of the method.
When a channel is streaming via pubsub, we want to delay the confirmation transmission until pubsub subscription is confirmed.
When a class is inherited, wrap its helper module in a new module.
When a collection is used you might want to know the index of each object into the array.
When a connection is established or removed, we invalidate the cache.
When a job will stop after the allotted time.
When a migration is run, its schema number is inserted in to the `SchemaMigration.table_name` so it doesn't need to be executed the next time.
When a new record comes to match the query, or any of the existing records is updated or deleted, the cache key changes.
When a new value is assigned to the value object, the default assumption is that the new value is an instance of the value class.
When a pattern points to an internal route, the route's +:action+ and +:controller+ should be set in options or hash shorthand.
When a request with a content type other than HTML is made, this middleware will attempt to convert error information into the appropriate response type.
When a string is used, the human form should be specified as desired (example: 'The name', not 'the_name').
When address is already an association on a Person you can use +accepts_nested_attributes_for+ to define the writer method for you:
When an entry has a positive :race_condition_ttl defined, put the stale entry back into the cache for a brief period while the entry is being recalculated.
When an object is specified as a key and has a +cache_key+ method defined, this method will be called to define the key.
When called with a block, the block is called with the filehandle and the filehandle is automatically closed when the block finishes.
When called, serializable hash will use instance methods that match the name of the attributes hash's keys.
When called, this middleware renders an error page.
When correcting nested offenses, we need to keep track of how much we have adjusted the indentation of each line
When creating custom validators, it might be useful to be able to specify additional default keys.
When creating objects on the association, we must not do it within a scope (even though it would be convenient), because this would cause that scope to be applied to any callbacks etc.
When dealing with decimal columns:
When defining an around callback remember to yield to the block, otherwise it won't be executed:
When enqueuing jobs with the Inline adapter the job will be executed immediately.
When files are read into RuboCop, the encoding of source code lacking an encoding comment will default to the external encoding, which could for example be US-ASCII if the LC_ALL environment variable is set to "C".
When given a block, the value for duplicated keys will be determined by the result of invoking the block with the duplicated key, the value in the receiver, and the value in +other_hash+.
When given an array of keys, the method tries to require each one of them in order.
When in transactional tests mode, this will cause Active Record to create a new savepoint.
When initialized, it can accept optional HTTP headers, which will be set when a response containing a file's contents is delivered.
When it comes to streaming, exceptions get a bit more complicated.
When it's time to invalidate all fragments, simply change the string constant.
When joining tables, nested hashes or keys written in the form 'table_name.column_name' can be used to qualify the table name of a particular condition.
When loading console, force ActiveRecord::Base to be loaded to avoid cross references when loading a constant for the first time.
When loading the file, Dependencies will watch for the addition of these constants.
When no option is given, the behavior is to do nothing with the associated records when destroying a record.
When no selection is made for a collection of checkboxes most web browsers will not send any value.
When no value is given, it checks if the object is a new resource or not to create the proper label:
When nothing is tagged with `:focus`, all examples get run.
When on, an exception is raised if it looks like the client is trying to lie about its own IP address.
When our views change, they should bubble up into HTTP cache freshness and bust browser caches.
When parsing the code to see if the AST has changed, a braceless hash would not be parsed as a hash otherwise.
When passed a single key, if it exists and its associated value is either present or the singleton +false+, returns said value:
When passed a symbol or a name of a method, returns an array of errors for the method.
When passing a record or a collection, you can still set the public header:
When passing paths, the ".js" extension is optional.
When placed on a parent resource, generates shallow routes for all nested resources.
When projects is already an association on Person you can use +accepts_nested_attributes_for+ to define the writer method for you:
When prompted, restart the PostgreSQL server with the "-m fast" option or kill the individual connection assuming you know the incantation to do that.
When rendering a collection of objects that each use the same partial, a `cached` option can be passed.
When rendering a different template than the default controller/action style, you can indicate which digest to include in the ETag:
When running --auto-gen-config, there's some processing done in the cops related to calculating the Max parameters for Metrics cops.
When running with --auto-correct, we need to inspect the file (which includes writing a corrected version of it) until no more corrections are made.
When set to false, the pattern matches any request prefixed with the given path.
When streaming, rendering happens top-down instead of inside-out.
When streaming, the HTTP headers are sent to the client right before it renders the first line.
When style is `empty_lines`, if the body is empty, we don't enforce the presence OR absence of an empty line But if style is `no_empty_lines`, there must not be an empty line
When testing these, we need to make sure it works via loading the association directly, or joining the association, or including the association.
When that callback is triggered, the object has a method by the name of the callback messaged.
When the Asset Pipeline is enabled, you can pass the name of your manifest as source, and include other JavaScript or CoffeeScript files inside the manifest.
When the argument is a module it will be included directly in the template class.
When the argument is a string or symbol, the method will provide the "_helper" suffix, require the file and include the module in the template class.
When the block returns false
When the block returns true
When the cache exceeds the allotted size, a cleanup will occur which tries to prune the cache down to three quarters of the maximum size by removing the least recently used entries.
When the entirety of +activerecord/lib/active_record/base.rb+ has been evaluated then +run_load_hooks+ is invoked.
When the evaluated string returns false
When the evaluated string returns true
When the given key starts with a period, it will be scoped by the current controller and action.
When the job runs it will send the email using +deliver_now+.
When the method returns false
When the method returns true
When the object belonging to the current scope has a nested attribute writer for a certain attribute, fields_for will yield a new scope for that attribute.
When the object is finalized Ruby unlinks the file, so there is no need to clean them with a separate maintenance task.
When the record is created, a check is performed to make sure that no record exists in the database with the given value for the specified attribute (that maps to a column).
When the record is updated, the same check is made but disregarding the record itself.
When the request is proxied by another server like HAProxy or NGINX, the IP address that made the original request will be put in an X-Forwarded-For header.
When the select element doesn't have a value yet, this prepends an option with a generic prompt - "Please select" - or the given prompt string.
When the select element doesn't have a value yet, this prepends an option with a generic prompt -- "Please select" -- or the given prompt string.
When the time comes, V5_0 should be defined straight in its class.
When this attribute has a +nil+ value, the validation will not be triggered.
When this module is prepended to ActiveRecord::Relation and `config.active_record.warn_on_records_fetched_greater_than` is set to an integer, if the number of records a query returns is greater than the value of `warn_on_records_fetched_greater_than`, a warning is logged.
When using a nested association, you will not be able to modify the association because there is not enough information to know what modification to make.
When using a proc or lambda the instance under validation is passed as an argument.
When using a regular expression based replacement, the normal humanize formatting is called after the replacement.
When using a select list to choose an existing 'ship' id, with include_blank: true
When using inheritance in your models, it will check all the inherited models too, but only if the model itself hasn't been found.
When using multiple parameters in the conditions, it can easily become hard to read exactly what the fourth or fifth question mark is supposed to represent.
When using strings to specify conditions, you can use any operator available from the database.
When using the `new_line` style:
When using the `same_line` style:
When using the `symmetrical` (default) style:
When using this method, you list the cache dependency as the name of the cache, like so:
When you alter a template, Rails will check the file's modification time and recompile it in development mode.
When you build forms to external resources sometimes you need to set an authenticity token or just render a form without it, for example when you submit data to a payment gateway number and types of fields could be limited.
When you don't pass an explicit receiver, it executes the whole block in merging options context:
When you enable nested attributes an attribute writer is defined on the model.
When you load an author with all associated books Active Record will make multiple queries like this:
When you mount an engine in an application's routes, a special helper is created to allow you to do that.
When you rescue an exception from your job you can ask Active Job to retry performing your job.
When you specify a class option, the default value for that attribute will be a new instance of that class.
When you specify an association there is usually an association on the associated model that specifies the same relationship in reverse.
When you're not sharing any code within the format, you can simplify defining variants using the inline syntax:
When your JavaScript response loads on their site, it executes.
Whenever setting view paths, makes a copy so that we can manipulate them in instance objects as we wish.
Whenever streaming Cache-Control is automatically set to "no-cache".
Whenever the +render+ method is called on the base +Renderer+ class, a new renderer object of the correct type is created, and the +render+ method on that new object is called in turn.
Whenever you provide I18n.locale during a request, it will trigger the lookup_context and consequently expire the cache.
Where `param_encoder` defines how the params should be encoded and `response_parser` defines how the response body should be parsed through `parsed_body`.
Where possible, prefer +wrap+.
Whether a one-to-one or one-to-many style form builder will be yielded depends on whether the normal reader method returns a _single_ object or an _array_ of objects.
Whether that is a problem or not depends on the logic of the application, but in the particular case in which rows have a UNIQUE constraint an exception may be raised, just retry:
Whether the given cookie is to be deleted by this CookieJar.
Whether to print a backtrace along with the warning.
Whether to print a message (silent mode)
Which allows you to quickly change your code to:
Which are then automatically available to the view:
Which is not the desired lookup.
Which means that the given method is private.
Which provides you with the full standard validation stack that you know from Active Record:
Which then will result in
Which will render a +multipart/alternative+ email with +text/plain+ and +text/html+ parts.
Which will then result in the following:
Which would provide you with:
While +indent_string+ is typically one space or tab, it may be any string.
While executing the given block, the recorded will be in reverting mode.
While it's blocked, it holds no lock, so it doesn't interfere with any other attempts.
While it's strongly recommended that you use key-based cache expiration (see links in CacheHelper for more information), it is also possible to manually expire caches.
While this provides the most flexibility, you can also unintentionally introduce dependencies on the underlying database.
Whitelisted types are returned as-is.
Will add an error message to each of the attributes in +attributes+ that is empty.
Will be called automatically by the metal call stack.
Will be called automatically when the module is inherited.
Will be corrected by IndentationConsistency.
Will deadlock due to lack of Monitor timeouts in 1.9
Will have different object id than One::Constant1
Will look for all templates at "app/views/notifier" with name "welcome".
Will search for the following generators:
Will throw an error, but this will work:
Will update the name of the Person with ID 1, build a new associated person with the name 'John', and mark the associated Person with ID 2 for destruction.
With +purpose+ matching, it is possible to yield only to other threads whose activity will not interfere.
With a BacktraceCleaner, filters and silencers are used to remove the noisy lines, so that only the most relevant lines remain.
With a block which is passed with the current record to be validated:
With a nonce of this form a server would recalculate the hash portion after receiving the client authentication header and reject the request if it did not match the nonce from that header or if the time-stamp value is not recent enough.
With an isolated engine, the engine's namespace is automatically applied, so you don't need to specify it explicitly in your routes:
With carefully crafted JavaScript on their end, sensitive data in your JavaScript response may be extracted.
With layouts, you can flip it around and have the common structure know where to insert changing content.
With migrations, you can describe the transformations in self-contained classes that can be checked into version control systems and executed against another database that might be one, two, or five versions behind.
With rubinius 2.0.0.rc1 + rspec 2.13.1, File.stub(:open).and_call_original causes SystemStackError.
With such an engine, everything that is inside the +MyEngine+ module will be isolated from the application.
With the above example, the bang and predicate methods along with the associated scopes are now prefixed and/or suffixed accordingly:
With the above example:
With this, you simply do:
Within the mailer method, you have access to the following methods:
Without a file extension
Without a variable name to attach the glob parameter to, the route can't be parsed.
Without any +options+, the returned Hash will include all the model's attributes.
Without cache_classes + eager_load, the load interlock is required for proper operation
Without knowing the secret, the original value cannot be extracted from the message.
Without the alias, the column cannot be found and properly typecast.
Without using prepared statements, it makes no sense to test BLOB data with DB2, because the length of a statement is limited to 32KB.
Without web-service support, an action which collects the data for displaying a list of people might look something like this:
Work directory (the parent of .rubocop_cache) is removed afterwards anyway.
Worker used by Server.send_async to do connection work in threads.
Workers are forked webserver processes.
Workers do not work on JRuby or Windows (both of which do not support processes).
Works great alongside individual template fragment caching.
Works in two unique ways.
Works in two ways.
Works with any kind of association.
Would create +after_create+, +before_update+ and +around_destroy+ methods only.
Would only create the +after_create+ and +before_create+ callback methods in your class.
Wrap block with namespace of current application if namespace exists and is not skipped
Wrap the given buffer in the StreamingBuffer and pass it to the underlying template handler.
Wrap the migration in a transaction only if supported by the adapter.
Wrap the real socket to minimize the externally-presented API
Wrap this block around expensive operations or possible bottlenecks to get a time reading for the operation.
Wrapping a string in this class gives you a prettier way to test for equality.
Wrapping an array in an +ArrayInquirer+ gives a friendlier way to check its string-like contents:
Wraps any standard Logger object to provide tagging capabilities.
Wraps code with filter
Wraps gem entries inside a group.
Wraps info about the brackets.
Wraps its argument in an array unless it is already an array (or array-like).
Wraps the +text+ into lines no longer than +line_width+ width.
Wraps the array in an +ArrayInquirer+ object, which gives a friendlier way to check its string-like contents.
Wraps the original exception raised as +cause+.
Wraps the parameters hash into a nested hash.
Wraps the passed block in a transaction, locking the object before yielding.
Wraps the underlying database error as +cause+.
Write an entry to the cache.
Write cookie using POST request without CSRF token
Write nothing.
Write session using POST request without CSRF token
Write to a file atomically.
Write until the buffer is full.
Writes +content+ to the location signified by +key+ (see +expire_fragment+ for acceptable formats).
Writes an entry to the cache implementation.
Writes given value to given key of the session.
Writes the value to the cache, with the key.
Writing an object will convert it into standard SSE format with whatever options you have configured.
X SpacingMark
X-Special-Domain-Specific-Header: SecretValue
YAML.load_file would crash when reading empty .yml files or files that only contained comments and blank lines.
Yes, this process is extending the time for a stale value by another few seconds.
Yes: Allows the priority to be set on the job object, at the queue level or as default configuration option.
Yes: Jobs may set which queue they are run in with queue_as or by using the set method.
Yes: The Number of retries can be configured globally, for each instance or on the queue.
Yes: The Queue Adapter has the ability to run the job in a non-blocking manner.
Yes: The adapter will run the job in the future through perform_later.
Yields ActiveRecord::Relation objects to work with a batch of records.
Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules.
Yields an ActiveRecord::Relation object for each batch of records.
Yields each batch of records that was found by the find options as an array.
Yields the attribute and the error for that attribute.
You *must* call close on your stream when you're finished, otherwise the socket may be left open forever.
You _should_ always force the browser to use HTTPS when you're transferring sensitive information such as user authentication, account information, or credit card information.
You also don't need to use longer url helpers like +my_engine_articles_path+.
You also need to specify which attributes inside the hash should be whitelisted.
You are able to move this logic out into a class if it is too complex for routes.
You are free to leave your existing secret_token in place, not set the new secret_key_base, and ignore the deprecation warnings until you are reasonably sure that your upgrade is otherwise complete.
You are guaranteed that the key is returned as a string:
You can add HTML attributes using the +options+.
You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
You can add new inflections in config/initializers/inflections.rb.
You can add your own middlewares by using the +config.middleware.use+ method:
You can add your own to the Time::DATE_FORMATS hash.
You can also add database specific timezone aware types.
You can also apply a layout to a block within any template:
You can also build forms using a customized FormBuilder class.
You can also call try with a block without accepting an argument, and the block will be instance_eval'ed instead:
You can also define your own unit-quantifier names if you want to use other decimal units (eg.: 1500 becomes "1.5 kilometers", 0.150 becomes "150 milliliters", etc).
You can also give extra arguments.
You can also implement a custom asset host object that responds to +call+ and takes either one or two parameters just like the proc.
You can also insert your own messages and benchmarks by using the +say_with_time+ method:
You can also just pass a record.
You can also pass a +block+ to define criteria.
You can also pass a block to new with the new record as argument:
You can also pass a custom timestamp column to fetch the timestamp of the last updated record.
You can also pass a list of modules:
You can also pass a list of named timestamps, and the newest in the list will be used to generate the key:
You can also pass a string which will expand
You can also pass a type object directly, in place of a symbol.
You can also pass an object that responds to +maximum+, such as a collection of active records.
You can also pass in +extras+ with a hash containing URL parameters that would normally be in the query string.
You can also provide a proc or lambda which will determine the regular expression that will be used to validate the attribute.
You can also search for specific attachments:
You can also send a real document in the simulated HTTP request.
You can also set an array of variants:
You can also set the answer format, like this:
You can also set your own table name explicitly:
You can also simulate POST, PATCH, PUT, DELETE, and HEAD requests with +post+, +patch+, +put+, +delete+, and +head+.
You can also specify a class option as the second parameter that'll raise an exception if a serialized object is retrieved as a descendant of a class not in the hierarchy.
You can also specify a typecast character in the parentheses to have the parameters typecasted before they're used in the constructor.
You can also specify multiple relationships, like this:
You can also specify overrides if you want by passing a hash instead of a string:
You can also specify that a file should be displayed inline with other HTML.
You can also specify the key in which the parameters should be wrapped to, and also the list of attributes it should wrap by using either +:include+ or +:exclude+ options like this:
You can also subscribe to all events whose name matches a certain regexp:
You can also supply a block to hook_for to customize how the hook is going to be invoked.
You can also supply an array of ActiveSupport::TimeZone objects as +priority_zones+ so that they will be listed above the rest of the (long) list.
You can also supply an array of ActiveSupport::TimeZone objects as +priority_zones+, so that they will be listed above the rest of the (long) list.
You can also test your JSON API easily by setting what the request should be encoded as:
You can also unsubscribe by passing the name of the subscriber object.
You can also use +permit+ on nested parameters, like:
You can also use a block and a module list:
You can also use block initialization:
You can also use custom deprecator instance:
You can also use interpolation in the supplied redirect argument:
You can also use one or more strings, which will be used unchanged as SELECT fields.
You can also use the +initialize_copy+ on one of the applications to create a copy of the application which shares the configuration.
You can also yield multiple times in one layout and use block arguments to differentiate the sections.
You can call perform_later with the job arguments to enqueue the job with the preconfigured options
You can change it by providing the :as option:
You can change it to +true+ if the given JSON string includes a single root node.
You can check the real cause for the exception in your logger.
You can choose to have only specific callbacks by passing a hash to the +define_model_callbacks+ method.
You can consume those events and the information they provide by registering a subscriber.
You can control the form submission and input element behavior using +html_options+.
You can create a custom behavior or set any from the +DEFAULT_BEHAVIORS+ constant.
You can create a custom formatter by subclassing `RuboCop::Formatter::BaseFormatter` and overriding some methods, or by implementing all the methods by duck typing.
You can create values for the "min" and "max" attributes by passing instances of Date or Time to the options hash.
You can create your own custom FormBuilder templates by subclassing this class.
You can customize the format in the +options+ hash.
You can debug this situation by logging all environment variables, and check for HTTP_AUTHORIZATION, amongst others.
You can declare as many identification indexes as you like.
You can disable forgery protection on controller by skipping the verification before_action:
You can either choose to let this error propagate (which will result in the default Rails exception page being shown), or you can catch it and restart the transaction (e.g. by telling the user that the title already exists, and asking them to re-enter the title).
You can even reference any named routes you happen to have defined.
You can even render plain text directly without using a template:
You can even use Action View helpers in these views.
You can find the connections you're looking for by searching for the identifier declared on the connection.
You can force a particular deletion strategy by passing a parameter.
You can force the form to use the full array of HTTP verbs by setting
You can give +link_to_unless_current+ a block which will specialize the default behavior (e.g., show a "Start Here" link rather than the link's text).
You can include this in your classes if you want to access routes for other engines.
You can inspect the +attribute+ property of the exception object to determine which attribute triggered the error.
You can localize your labels based on model and attribute names.
You can make these callbacks more flexible by passing in other initialization data such as the name of the attribute to work with:
You can make worker 1 handle all the records between id 0 and 10,000 and worker 2 handle from 10,000 and beyond (by setting the +:start+ and +:finish+ option on each worker).
You can manipulate objects and associations before they are saved to the database, but there is some special behavior you should be aware of, mostly involving the saving of associated objects.
You can manually reset a cycle by calling reset_cycle and passing the name of the cycle.
You can mix and match any combination of symbols, arrays, and hashes to retrieve the associations you want to load.
You can mix it with +from+ method and do fun things like:
You can mix it with +to+ method and do fun things like:
You can modify the HTML attributes of the script tag by passing a hash as the last argument.
You can modify the LINK tag itself in +tag_options+.
You can modify the link attributes by passing a hash as the last argument.
You can modify this object before sending the HTTP request.
You can nest arbitrarily deep:
You can now set or update attributes on the associated posts through an attribute hash for a member: include the key +:posts_attributes+ with an array of hashes of post attributes as a value.
You can only declare one template dependency per line.
You can optionally provide HTML attributes as the last element of the array.
You can override +to_param+ in your model to make +user_path+ construct a path using the user's name instead of the user's id:
You can override this default:
You can overwrite this configuration per controller.
You can pass +Fixnum+ or +String+ values, it finds the records responding to the +id+ and executes delete on them.
You can pass +Fixnum+ or +String+ values, it finds the records responding to the +id+ and then deletes them from the database.
You can pass a second argument +scope+ as a callable (i.e. proc or lambda) to retrieve a specific record or customize the generated query when you access the associated object.
You can pass a second argument +scope+ as a callable (i.e. proc or lambda) to retrieve a specific set of records or customize the generated query when you access the associated collection.
You can pass a symbol or an array of symbols.
You can pass an array of attributes hashes, this will return an array with the new objects.
You can pass local variables to sub templates by using a hash with the variable names as keys and the objects as values:
You can pass the following options to change the default behavior.
You can provide a configuration hash as second argument.
You can read more about each approach by clicking the modules below.
You can read more about setting up your DNS CNAME records from your ISP.
You can redirect any path to another path using the redirect helper in your router:
You can reload routes if you feel you must:
You can require that the attribute matches the regular expression:
You can send parameters like this:
You can set and reuse defaults in your fixtures YAML file.
You can set custom coder to encode/decode your serialized attributes to/from different formats.
You can set data attributes directly by passing in a data hash, but all other HTML options must be wrapped in the HTML key.
You can set default values for any of the above headers (except +:date+) by using the ::default class method:
You can set it up in two ways:
You can set that as an option:
You can set the default value from the database declaration, like:
You can set the variant in a +before_action+:
You can specify callbacks using before_action and after_action for configuring your messages.
You can specify that the callback should only be fired by a certain action with the +:on+ option:
You can specify unicode character routes in your router:
You can specify what Rails should route "/" to with the root method:
You can still override that by passing the "value" option explicitly, e.g.
You can subscribe to some event temporarily while some block runs.
You can supply a hash with a :prefix or :suffix to be tested.
You can tell RuboCop to use your custom formatter with a combination of `--format` and `--require` option.
You can then broadcast to this channel using:
You can then declare accessors to this store that are then accessible just like any other attribute of the model.
You can then use that variable anywhere else.
You can then use this object anywhere in your templates, layout, or helpers.
You can think of a channel like a form of controller, but one that's capable of pushing content to the subscriber in addition to simply responding to the subscriber's direct requests.
You can think of a layout as a method that is called with a block.
You can use +:inverse_of+ to avoid an extra query during validation.
You can use +insert_before+ if you wish to add a middleware before another:
You can use +local_assigns+ in the sub templates to access the local variables:
You can use ActiveSupport::TimeZone.us_zones for a list of US time zones, ActiveSupport::TimeZone.country_zones(country_code) for another country's time zones, or a Regexp to select the zones of your choice.
You can use a block as well if your link target is hard to fit into the name parameter.
You can use any queue implementation you want.
You can use named cycles to allow nesting in loops.
You can use strings in order to customize your joins:
You can use symbols or strings for the attribute names.
You can use the +:_prefix+ or +:_suffix+ options when you need to define multiple enums with same values.
You can use the +prepend+ option on the +before_destroy+ callback to avoid this.
You can use the block form or the regular form, like this:
You can use the button tag as a regular submit tag but it isn't supported in legacy browsers.
You can use them just like you use an application's routes:
You can use this accessor to configure your own proxy class so you can support other encodings.
You can use this if for some reason you need to explicitly load some records before actually using them.
You can use this method when you have an HTTP response that never changes, and the browser and proxies should cache it indefinitely.
You can use this shortcut in a controller, instead of the previous example:
You could also turn it on per controller by setting the format array to a non-empty array:
You could for example raise an +ArgumentError+ when invalid options are supplied.
You create background jobs and place them on multiple work queues to be processed later.
You don't have to rely on the automated rendering.
You don't need to use these tags for regular forms as they generate their own hidden fields.
You interact with the value objects just like you would with any other attribute:
You may also pass a different UUID generation function from +uuid-ossp+ or another library.
You may also pass it multiple classes, like so:
You may also provide a custom view path (see ActionView::PathSet for more information)
You may also set a +:reject_if+ proc to silently ignore any new record hashes if they fail to pass your criteria.
You may also set the content type, the file name, and other things.
You may also specify additional options via the +options+ argument.
You may choose to set the following options:
You may declare that the parameter should be an array of permitted scalars by mapping it to an empty array:
You may define a wide range of unit quantifiers, even fractional ones (centi, deci, mili, etc).
You may pass HTML options there as well.
You may use a type not in this list as long as it is supported by your database (for example, "polygon" in MySQL), but this will not be database agnostic and should usually be avoided.
You may use this to also restrict other parameters:
You may want to override it in your class to simulate a different scenario:
You may wish to organize groups of controllers under a namespace.
You might want to allow +:id+ and +:_destroy+, see ActiveRecord::NestedAttributes for more information.
You must define your own inflection rules for languages other than English.
You must manually generate the join table with a migration such as this:
You must use Time.zone.today instead.
You need to be careful with assumptions regarding the target: The proxy does not fetch records from the database until it needs them, but new ones created with +build+ are added to the target.
You need to check the instructions for each of them.
You need to make sure yourself that your dom ids are valid, in case you overwrite this method.
You need to start a memcached server inorder to run these tests
You need to supply an absolute path or a path relative to the configured destination:
You never instantiate your mailer class.
You should avoid modifying the association content, before autosave callbacks are executed.
You should be sure to measure your actual performance across targeted browsers both before and after this change.
You should consult the documentation for your database to understand the semantics of these different levels:
You should disable those middlewares whenever streaming in development or production.
You should not use the +match+ method in your router without specifying an HTTP method.
You shouldn't ever need to create a TimeWithZone instance directly via +new+.
You simply pass the irregular in singular and plural form.
You simply supply the +up+ logic, and the Migration system figures out how to execute the down commands for you.
You still could pass +:include+ and +:exclude+ to set the list of attributes you want to wrap.
You still need to set up model validations.
You will have to rewrite those to the explicit form:
You will need ordered fixtures when you have foreign key constraints on keys in the same table.
You will need to either:
You will obtain whatever was defined in +some_new_scope+.
You would use +content_for+ in your template to specify the title:
You'll need to use a special comment format to call those out:
You'll read permanent cookies through the regular accessor.
You'll see that appear accepts a data parameter, which it then uses as part of its model call.
You're encouraged to add a unique index in the database to deal with this even more unlikely scenario.
You're testing whether a transaction works correctly.
You're then responsible for dealing with the conflict by rescuing the exception and either rolling back, merging, or otherwise apply the business logic needed to resolve the conflict.
Your CoffeeScript can then connect to the server without needing to specify the URL directly:
Your database does not support transactions.
Your first attempt is:
Your primary database in the development environment is "my_application" but the Book model connects to a separate database called "library_db" (this can even be a database on a different machine).
Your server can also configure this for you by setting the X-Sendfile-Type header.
Yup caught it
ZERO-WIDTH NO-BREAK SPACE aka BOM Returns a regular expression pattern that matches the passed Unicode codepoints.
Zero parts are removed as not significant.
Zero precision with significant is a mistake (would always return zero), so we treat it as if significant was false (increases backwards compatibility for number_to_human_size)
_fixture: model_class: User david: name: David
` ln -s foo.example.yml foo.example ln -s bar.example.yml bar.example `
`-' interpreted as argument prefix
`ActiveRecord` compatibility: `ActiveRecord` does not implement a `detect` method and `find` has its own meaning.
`ActiveRecord` compatibility: `ActiveRecord` will ignore the block that is passed to `count`.
`RuboCop::Node` is a subclass of `Parser::AST::Node`.
`class_eval` with no receiver applies to whatever module or class we are currently in
`detected` can be a single style, or an Array of possible styles (if there is more than one which matches the observed code)
`either` (which is the default) : the `end` is allowed to be in either location.
`elsif` branches show up in the `node` as an `else`.
`elsif` branches show up in the if node as nested `else` branches.
`eval` need for raise native SyntaxError at runtime
`format.html.phone` - variant inline syntax
`format.html` - just a format, call its block
`nil` *should* be changed to 0
`private_class_method` can be used for that.
`return` does not exit to outside of lambda block, this is safe.
`self` is only needed when:
`start_of_block` : the `end` shall be aligned with the start of the line where the `do` appeared.
`start_of_line` : the `end` shall be aligned with the start of the line where the expression started.
`stream.close` should really be reserved for a close from the other direction, but we must fall back to it for compatibility.
`time_zone_select` can't be written with `grep` because Active Support time zones don't support implicit string coercion with `to_str`.
`users/new.html` will be loaded from `users/html/new.erb` or `users/new.html.erb`, `users/new.js` from `users/js/new.erb` or `users/new.js.erb`, etc.
`when` nodes contain the entire branch including the condition.
a ::Kernel method
a class emitter method may be defined inside `def self.included`, `def self.extended`, etc.
a comment',
a default scope
a do b end.c
a little duplication to construct less strings
abc_helper.rb
accepts_nested_attributes_for :author, :pages end
account for edge case of Constant::CONSTANT
account for edge cases using one variable with a comma
account for multiline range literals
account for our own connections
account is dependent with nullify, therefore its firm_id should be nil
account is dependent, therefore is destroyed when reference to owner is lost
action_methods are cached and there is sometimes a need to refresh them.
action_methods are cached and there is sometimes need to refresh them.
active_support.rb sets an autoload for ActiveSupport::Deprecation.
activerecord model class with reserved-word table name
activerecord model introspection with reserved-word table and column names
activerecord/test/cases/associations/cascaded_eager_loading_test.rb:37 with :posts
activerecord/test/cases/associations/eager_test.rb:1133 with :comments
activerecord: attributes: post: cost: "Total cost"
add a before destroy to student
add a new column
add column type definition to our format string
add index length
add index sort order
add index sort order if supported
add info on sort order for columns (only desc order is explicitly specified, asc is the default)
add_by_file_path' do
add_by_io' do
add_column(:answers, :bill_gates_money, :decimal, precision: 15, scale: 2) ALTER TABLE "answers" ADD "bill_gates_money" decimal(15,2)
add_column(:articles, :status, :string, limit: 20, default: 'draft', null: false) ALTER TABLE "articles" ADD "status" varchar(20) DEFAULT 'draft' NOT NULL
add_column(:measurements, :huge_integer, :decimal, precision: 30) ALTER TABLE "measurements" ADD "huge_integer" decimal(30)
add_column(:measurements, :sensor_reading, :decimal, precision: 30, scale: 20) ALTER TABLE "measurements" ADD "sensor_reading" decimal(30,20)
add_column(:shapes, :triangle, 'polygon') ALTER TABLE "shapes" ADD "triangle" polygon
add_column(:users, :picture, :binary, limit: 2.megabytes) ALTER TABLE "users" ADD "picture" blob(2097152)
add_delivery_method :sendmail, Mail::Sendmail, location:  '/usr/sbin/sendmail', arguments: '-i -t'
add_foreign_key :articles, :authors
add_foreign_key :articles, :authors, on_delete: :cascade
add_foreign_key :articles, :users, column: :author_id, primary_key: "lng_id"
add_index :authors, :name, :unique
add_index :posts, :author_id end
add_index(:accounts, :name, name: 'by_name', length: 10)
add_index(:developers, :name, type: :fulltext)
add_index(:developers, :name, using: 'btree')
add_index(:suppliers, :name)
add_on_empty: generate_message(attr, :empty, message: custom_message)
add_reference(:products, :supplier, foreign_key: true)
add_reference(:products, :supplier, polymorphic: true, index: true)
add_reference(:products, :user)
add_reference(:products, :user, type: :string)
add_source "http://gems.github.com/"
add_source "http://gems.github.com/" do gem "rspec-rails" end
add_timestamps(:suppliers, null: true)
added initialization of author_email_address in the same way as in Topic class as otherwise synonym test was failing
added last but here is loaded before api engine
added order by id as in fixtures there are two accounts for Rails Core Oracle tests were failing because of that as the second fixture was selected
added sort by ID as otherwise Oracle select sometimes returned rows in different order
added sort by ID as otherwise test using JRuby was failing as array elements were in different order
adding 1 sec springs forward to 3:00AM EDT
advance the time by a fraction
advance the time by a fraction of a second
after "then"
after TZ change
after `pool.disconnect()` the first thread will be left stuck in queue, no need to wait for it to timeout with ConnectionTimeoutError
after_bundle do git add: '.' end
after_class_unload -- Run immediately after the classes are unloaded.
after_commit :do_foo, on: :create after_commit :do_bar, on: :update after_commit :do_baz, on: :destroy
after_save/update and the model itself can end up checking dirty status and acting on the results
after_validation :set_status
alias_attribute :nickname, :name
alias_method :after_initialize, :after_save
alias_method :foo_without_feature, :foo alias_method :foo, :foo_with_feature
alias_method can't be used in instance_eval blocks
alias_method can't be used with global variables
alias_method_chain :foo, :feature
aliased to avoid conflicts with a javascript_path named route Computes the full URL to a JavaScript asset in the public javascripts directory.
aliased to avoid conflicts with a javascript_url named route Computes the path to a stylesheet asset in the public stylesheets directory.
aliased to avoid conflicts with a stylesheet_path named route Computes the full URL to a stylesheet asset in the public stylesheets directory.
aliased to avoid conflicts with a stylesheet_url named route Computes the path to an image asset.
aliased to avoid conflicts with a video_path named route Computes the full URL to a video asset in the public videos directory.
aliased to avoid conflicts with an asset_path named route Computes the full URL to an asset in the public directory.
aliased to avoid conflicts with an asset_url named route
aliased to avoid conflicts with an audio_path named route Computes the full URL to an audio asset in the public audios directory.
aliased to avoid conflicts with an audio_url named route Computes the path to a font asset.
aliased to avoid conflicts with an font_path named route Computes the full URL to a font asset.
aliased to avoid conflicts with an font_url named route
aliased to avoid conflicts with an image_path named route Computes the full URL to an image asset.
aliased to avoid conflicts with an image_url named route Computes the path to a video asset in the public videos directory.
aliased to avoid conflicts with an video_url named route Computes the path to an audio asset in the public audios directory.
aliases telephone_field
all cops in their type listing
all cops were disabled, then 2 were enabled again, so we should get 2 offenses reported.
all group1 threads start waiting before any in group2
allow a standard key to be used for doing defaults in YAML
allow mass assignment as the return of a method call
allow mass assignment when using splat
allow safe assignment
allow thread 1 to finish
allow thread 2 to finish but hold thread 1
allow turning off autocorrect on a cop by cop basis
allows them to be +NULL+ (drops the constraint).
allows you to access the +address+ attribute of the +User+ model without firing an additional query.
alter column with a reserved-word name in a table with a reserved-word name
alternate_helpers/foo_helper.rb
alternatively we have to consider a logical node with a literal argument
always convert table names to downcase as in Oracle quoted table names are in uppercase
always convert table names to downcase as in Oracle quoted table names are in uppercase ignore raw_sql_ that is used by Oracle adapter as alias for limit/offset subqueries
an opening quote
and a final valid identifier, captured as DYNAMIC
and a matching closing quote
and block syntax:
and cloned instance should behave same
and friends.
and in an application
and invoke the declared instance accessors as class methods.
and is in the current Time.zone
and lets all the `when` nodes count.
and now the "real" setup for our test:
and represents time values adjusted accordingly
another contract
any of `:refactor`, `:convention`, `:warning`, `:error` or `:fatal`.
any other escaped char
app/views/projects/show.html.erb app/views/projects/show.html+tablet.erb app/views/projects/show.html+phone.erb
apple: eater: george (Monkey)
apple: id: 1 name: apple
apple: id: 1 name: apple eater_id: 1 eater_type: Monkey
apple: name: apple
apple_george: fruit_id: 1 monkey_id: 1
approved is a protected attribute, so if mass assignment is used, it won't get updated and will still be false.
arbitrary_object.dup rescue object
are equivalent to:
aref assignment, attribute assignment
around_create :log_status
arrange left_elements in an order such that no corresponding right element refers to a left element earlier in the sequence this can be done using an algorithm called a "topological sort" fortunately for us, Ruby's stdlib contains an implementation
as the environment will be in an inconsistent state, e.g. other constants may have already been unloaded and not accessible.
as we are testing API here
as well as adding or subtracting their results from a Time object.
ascends to grandparent node
assert application trace refers to line that calls method_that_raises is first
assert connection has been forcefully taken away from us
assert digest is stored
assert first source view (hidden) that throws the error
assert framework trace that threw the error is first
assert recursion is possible
assert source view line is the call to method_that_raises
assert that since this is within default timeout our connection hasn't been forcefully taken away from us
assert that the block did not fail
assert_emails 0
assert_emails 2 do ContactMailer.welcome.deliver_now ContactMailer.welcome.deliver_now end end
assert_enqueued_emails 2 do ContactMailer.welcome.deliver_later ContactMailer.welcome.deliver_later end end
assert_enqueued_jobs 2 do HelloJob.perform_later('aaron') HelloJob.perform_later('rafael') end end
assert_enqueued_with(job: MyJob, at: Date.tomorrow.noon) do MyJob.set(wait_until: Date.tomorrow.noon).perform_later end end
assert_equal 200, status end
assert_field_default_value :string, "MyString"
assert_field_type :date, :date_select
assert_file "config/environment.rb"
assert_file "config/environment.rb", /initialize/
assert_file "db/migrate/003_create_products.rb"
assert_migration "db/migrate/create_products.rb"
assert_no_file "config/random.rb"
assert_no_migration "db/migrate/create_products.rb"
assert_not foo, 'foo should be false'
assert_not_nil Book.find_by(title: "Love Hina") end end
assert_nothing_raised do perform_service(param: 'no_exception') end
assert_performed_jobs 2 do HelloJob.perform_later('carlos') HelloJob.perform_later('sean') end end
assert_performed_with(job: MyJob, at: Date.tomorrow.noon) do MyJob.set(wait_until: Date.tomorrow.noon).perform_later end end
assert_redirected_to "http://test.host/action_pack_assertions/foo" would pass because of exact match early return
assert_redirected_to page_url(title: 'foo')
assert_redirected_to top_level_url('foo') would pass because of exact match early return
assert_response :found
assert_threads_not_stuck can now proceed
asserting default value is a hash
asserting default value is empty hash
asserting last argument is an optional argument
asserting that there was an argument at all
assign new store attribute and create new hash to ensure that each class in the hierarchy has its own hash of stored attributes.
assigned but unused variable - foo
assignment to silence parse-time warning "possibly useless use of :: in void context"
assignments inside blocks are not what we're looking for
associations is the list of associations which are joined using hash, symbol or array.
assuming the associated person has ID 1.
async_exec in the PostgreSQL adapter.)
at least one uppercase letter, lowercase letter or underscore
attr_accessor :connection_handler end end
attr_accessor :first_name, :last_name
attr_accessor :name
attr_accessor :name , :age
attr_accessor :name attr_reader   :errors
attr_accessor :name attribute_method_prefix 'clear_' define_attribute_methods :name
attr_accessor :name end
attr_accessor :name validates_presence_of :name end
attr_accessor :name validates_presence_of :name, on: :new end
attr_accessor :name, :age
attr_accessor :name, :age, :address attribute_method_prefix 'clear_'
attr_accessor :name, :age, :awesome
attr_accessor :name, :status
attr_writer :bar
attribute has non-nil default value, so treated as not changed
autoload :Foo, 'foo'
autoload :Model
avoid duplicating an enumerable object in the loop
avoid intermittent failure caused when another test set global options on ConfigLoader
avoid name clashes between temp variables
avoid overflow for the highest unit
b for bytes and k for kbytes
b is indented relative to a
backburner dasherizes the queue name
bad.explicit_checking_method 'T'.mb_chars.downcase.to_s
base is the base class on which operation is taking place.
base table, through table, clubs table
because of the pruning done by this method, we might be running low on connections, while threads stuck in queue are helpless (not being able to establish new connections for themselves), see also more detailed explanation in +remove+
because parameter name repetition is precisely what Rails seeks to distinguish the elements of the array.
because we pass in the non-default builder, the content generated by the helper should go 'nowhere'.
before_class_unload -- Run immediately before the classes are unloaded.
before_create :action_before_create
before_create :track_creation after_destroy :track_deletion
before_create AnotherClass end
before_destroy :log_children
before_destroy :log_children, prepend: true
before_validation :do_stuff_before_validation after_validation  :do_stuff_after_validation end
before_validation :remove_whitespaces
begin CreditAccount.transaction(requires_new: true) do CreditAccount.find_or_create_by(user_id: user.id) end rescue ActiveRecord::RecordNotUnique retry end
begin main rescue resbody end
belongs_to :account end
belongs_to :eater, polymorphic: true
belongs_to association with reserved-word table name
belongs_to polymorphic overrides this to look at the polymorphic_type field on the owner.
blank or nil parsed values are represented by nil
block thread 2 for zzz seconds
blog.posts.count
body was not initialized
both attributes differ from defaults
both attributes of saved object should be treated as not changed
break the vanilla firm_id foreign key
brings setup, teardown, and some tests
but in a regex, it's an anchor on a word boundary
but is a TimeWithZone
but on cloned object should be
but take into account that at some point those ones have to be permitted:
but there's a crash in one cop.
but this class is intended for use cases where strings or symbols are the expected keys and it is convenient to understand both as the same.
but we can successfully create a record so long as we don't reference the removed column
but we keep this around for libraries that directly require it knowing they want cattr_*.
calculates size',
calculates value',
call a method in the context which this pattern-matching code is used in.
call format block with variants collector
called on the type symbol
can also be written as follows using the short-hand:
can be send, zsuper...
can recreate referenced table with force: :cascade
can't compute range size
can't re-create table referenced by foreign key
cause instead.", caller)
causing the collection to load
change column
change column default to see that column doesn't lose its not null definition
change column, make it nullable and clear default
change the column definition
change_column(:suppliers, :name, :string, limit: 80) change_column(:accounts, :description, :text)
change_column_default(:posts, :state, from: nil, to: "draft")
change_column_default(:suppliers, :qualification, 'new') change_column_default(:accounts, :authorized, 1)
change_column_default(:users, :email, nil)
change_column_null(:users, :nickname, false)
change_column_null(:users, :nickname, true)
change_column_null, make it not nullable and set null values to a default value
changes_applied end
character classes, anchors
characters with no special meaning whatsoever
check against Time.local, since some platforms will return a Time instead of a DateTime
check expanding paths
check if the class/module name matches the definee for the defs node
check if the line has layout key declaration
check if there's any whitespace between the keyword and the cond
check if this value matches the one stored in the temp
check it was saved
check out all connections so our threads start out waiting
check that it gets reset
check that we have usual block or block pass
check the change from 0 to ''
check the change from 1 to ''
check the change from nil to 0
check_class_collision suffix: "Decorator"
checkin n connections back to the pool
checking if there are topics is used before you actually display them, thus it shouldn't invoke an extra count query.
checking using the db
checking via the collection
checks something o-related',
checks something',
checks that parent node of send_type and receiver is the given node
checks when target loaded
checks when target no loaded
class A def test puts 'hello' end end
class A def test puts 'hello' puts 'world' end end
class A end
class Account include ActiveSupport::Callbacks
class Account thread_mattr_accessor :user end
class AnotherClass def self.before_create( obj ) obj is the MyModel instance that the callback is being called on end end
class ApplicationController fragment_cache_key "v1" end
class Article has_many :comments has_many :comment_tags, through: :comments, source: :tags end
class Audit def before(caller) puts 'Audit: before is called' end
class Base class_attribute :setting end
class BlogPost extend ActiveModel::Naming end
class BookCover extend ActiveModel::Naming end
class Cat include ActiveModel::AttributeAssignment attr_accessor :name, :status end
class Comment has_many :tags end
class Comment include ActiveModel::Validations
class ContactMessage include ActiveModel::Conversion
class CssInlineStyler def self.previewing_email(message) inline CSS styles end end
class Current mattr_accessor :user, instance_accessor: false end
class Current thread_mattr_accessor :user, instance_writer: false, instance_reader: false end
class Current thread_mattr_reader :user, instance_reader: false end
class Current thread_mattr_writer :user, instance_writer: false end
class Film include ActiveModel::Validations
class Foo The following is not redundant (conditionally defined methods are considered as always defining a method) private
class Foo def self.hello "world" end
class Horse
class Host include Bar end
class MyClass include ActiveModel::Serialization
class MyClass include ActiveModel::Validations
class MyModel extend ActiveModel::Callbacks define_model_callbacks :create
class MyModel extend ActiveModel::Callbacks end
class MyModel include ActiveModel::Validations::Callbacks
class Parser
class Person Required dependency for ActiveModel::Errors extend ActiveModel::Naming
class Person extend ActiveModel::Naming end
class Person has_many :articles has_many :comment_tags, through: :articles end
class Person has_many :pets accepts_nested_attributes_for :pets end
class Person has_many :pets end
class Person include ActiveModel::AttributeMethods
class Person include ActiveModel::Conversion attr_accessor :id end
class Person include ActiveModel::Conversion end
class Person include ActiveModel::Dirty
class Person include ActiveModel::Model attr_accessor :id, :name
class Person include ActiveModel::Model attr_accessor :id, :name end
class Person include ActiveModel::Model attr_accessor :id, :name, :omg
class Person include ActiveModel::Model attr_accessor :name, :age end
class Person include ActiveModel::Serialization
class Person include ActiveModel::Serializers::JSON
class Person include ActiveModel::Validations
class Person include ActiveModel::Validations attr_accessor :name, :email
class Person include ActiveModel::Validations attr_accessor :title
class Person include ActiveModel::Validations include ActiveModel::Validations::Callbacks
class Person include ActiveModel::Validations validates_with MyValidator end
class Person include ActiveModel::Validations validates_with MyValidator, MyOtherValidator, on: :create end
class Person include ActiveModel::Validations validates_with MyValidator, my_custom_key: 'my custom value' end
class Person include HairColors end
class Person validates_presence_of :name, :address, :email validates_length_of :name, in: 5..30 end
class Person validates_presence_of :name, :email validates_length_of :name, in: 5..30 end
class Pet validates :name, presence: true end
class Post attr_accessor :to_key
class Project has_and_belongs_to_many :developers, after_add: :evaluate_velocity
class Record include ActiveSupport::Callbacks define_callbacks :save
class RootUrl include ActionController::UrlFor include Rails.application.routes.url_helpers
class Todo Other todo implementation ...
class TranslatedPerson extend ActiveModel::Translation end
class User include ActiveSupport::Configurable config_accessor :allowed_access end
class User include ActiveSupport::Configurable config_accessor :allowed_access, instance_accessor: false end
class User include ActiveSupport::Configurable config_accessor :allowed_access, instance_reader: false, instance_writer: false end
class User include ActiveSupport::Configurable end
class setup method should only happen in parent
class_eval STRING pushes the class to the nesting of the eval'ed code.
class_eval on an object acts like singleton_class.class_eval.
class_methods do ...
clean up the other thread
clean up the threads
clear :all clear :plurals
clear all the inflections
clear cache possibly created by other tests
clear the inflections
clear topic timestamp values
clear_changes_information end
codepoints are in hex in the test suite, pack wants them as integers
coding: utf-8
collection_select(:post, :author_id, Author.all, :id, :name_with_initial, prompt: true)
color output explicitly forced off
color output explicitly forced on
comma added
commands have no explicit receiver
commas are just whitespace
comment 1',
comment 2',
comment 3',
comment here',
comment in else',
comment in if',
comment in when',
commit These writes will be ignored
common controller actions
common test methods
common to require_no_parentheses and require_no_parentheses_except_multiline
compact - combine definitions as much as possible class Foo::Bar end
company already has one client
compatible thread is now able to squeak through
concern :EventTracking do ...
concern :commentable do resources :comments end
concern :image_attachable do resources :images, only: :index end
concerning :EventTracking do included do has_many :events before_create :track_creation after_destroy :track_deletion end
concerns also work in any routes helper that you want to use:
conditions on the source table
conditions on the through table
config.action_mailer.preview_interceptors :css_inline_styler
config.assets.debug and config.assets.compile are false for production environment
config.middleware.delete ActionDispatch::Flash
config.middleware.insert_after Rack::Head, Magical::Unicorns
config.middleware.insert_before Rack::Head, Magical::Unicorns
config.middleware.swap ActionDispatch::Flash, Magical::Unicorns
config.middleware.use Magical::Unicorns
confirm the custom sequence got dropped
connection is OK with a nil timeout
constraints(Iphone) do resources :iphones end
consume any exception',
controller "food" do match "bacon", action: :bacon, via: :get end
controller - ActionController::Base instance for the outgoing response.
cookies.clear
cookies.delete :user_name
cookies.delete(:name, domain: 'domain.com')
could become:
count always trigger the COUNT query.
create DateTime value with local time zone offset
create a different, later thread, that will attempt to do a "group action", but because of the group action semantics it should be able to preempt the first_thread when a connection is made available
create a first_thread and let it get into the FIFO queue first
create a map matching lines to the number of expressions on them
create a new "anonymous" class that will host the compiled reader methods
create a new array avoiding dup
create a new connection in case there are threads still stuck in a queue
create a new session.
create all to avoid warnings
create dynamic Post models to allow different dependency options
create string with range of Unicode's western characters with diacritics, excluding the division and multiplication signs which for some reason or other are floating in the middle of all the letters.
create table without migrations
create tables with reserved-word names and columns
create_generated_attribute(:string, 'name')
create_join_table(:assemblies, :parts)
create_table(:suppliers) Add a column to 'suppliers'.
creates both "Kotori" and "Nemu".
creates seven different routes in your application, all mapping to the +Photos+ controller:
creates six different routes in your application, all mapping to the +Profiles+ controller (note that the controller is named after the plural):
creates the migration file for the model.
custom create table, uses execute on connection to create a table, note: escapes table_name, does NOT escape columns
custom drop table, uses execute on connection to drop a table if it exists.
customer.projects.to_xml
customer_with_no_projects.projects.to_xml(root: 'projects')
dashboard has to_a method
data:: XML Document string or IO to parse
data_sources instead" Get the columns for a table
data_sources instead.
date_or_time_select
date_select("article", "written_on")
date_select("article", "written_on", selected: Date.today)
date_select("article", "written_on", start_year: 1995)
date_select("article", "written_on", start_year: 1995, use_month_numbers: true, discard_day: true, include_blank: true)
date_select("article", "written_on", use_two_digit_numbers: true)
datetime with fractions of a second
datetime_select("article", "written_on")
datetime_select("article", "written_on", discard_type: true)
datetime_select("article", "written_on", start_year: 1995)
datetime_select("trip", "departing", default: 3.days.from_now)
daylight saving offset -0200
deals with case-insensitive file systems.
debian/gentoo
decorating comment',
def action_before_create Your code here end
def after_declaring_variable(variable, variable_table) end
def after_entering_scope(scope, variable_table) end
def after_leaving_scope(scope, variable_table) end
def alternative_message(diagnostic) 'My custom message' end
def attributes instance_values end end
def bar :baz end
def base_uri user_path(self) end end
def before_declaring_variable(variable, variable_table) end
def before_entering_scope(scope, variable_table) end
def before_leaving_scope(scope, variable_table) end
def before_save(caller) puts 'Audit: before_save is called' end end
def cannot_be_robot errors.add(:base, 'A person cannot be a robot') if person_is_robot end end
def capitalized_name name.capitalize end end
def cleanup_view_runtime super - time_taken_in_something_expensive end
def create run_callbacks :create do Your create action methods here end end
def decrypt(value) Secrecy is unveiled end end
def disconnect Any cleanup work needed when the cable connection is cut.
def down add_column :items, :incomplete_items_count add_column :items, :completed_items_count end end
def down drop_table :job_levels end end
def down drop_table :system_settings end end
def down execute "ALTER TABLE `pages_linked_pages` DROP INDEX `page_id_linked_page_id`" end end
def down not much we can do to restore deleted data raise ActiveRecord::IrreversibleMigration, "Can't recover the deleted tags" end end
def down remove_column :accounts, :ssl_enabled end end
def duplicated 2 end
def edit render plain: "I'm only accessible if you know the password" end
def edit render plain: "I'm only accessible if you know the password" end end
def evaluate_velocity(developer) ...
def foo def bar end end
def fry(temperature: 300) ...
def goes_to_login get login_url ...
def goodbye 'goodbye' end end
def help render action: "help", layout: "help" end end
def index fetching posts end
def index redirect_to root_url end end
def index render "hello/index" end end
def initialize(*) end
def instance_validations validates_with MyValidator end end
def instance_validations validates_with MyValidator, MyOtherValidator end end
def length super / 60 end end
def log_status puts 'going to call the block...' yield puts 'block successfully called.' end
def method end
def method puts 'hi' end end end
def model_name OpenStruct.new param_key: 'post' end
def my_method 'some complex call' end end
def perform(*args) raise ErrorLoadingSite if cannot scrape end end
def perform(video_id) Video.find(video_id).process end end
def person_params It's mandatory to specify the nested attributes that should be whitelisted.
def person_params params.require(:person).permit(:name, :age) end end
def read_attribute_for_validation(attr) send(attr) end
def save do persistence work
def save run_callbacks :save do puts "- save" end end end
def save run_callbacks :save do puts 'save in main' end end end
def self.authenticate_safely_simply(user_name, password) where(user_name: user_name, password: password).first end end
def self.latest_article order('published_at desc').first end
def self.method puts 'hi' end end
def self.method3 end end
def self.statuses() statuses end
def self.titles pluck(:title) end end
def send_to_jail get '/jail' assert_response :success end
def show doesn't need to assign the flash notice to the template, that's done automatically end end
def show render json: record end end
def some_method(foo) do_something(binding) end
def some_method(foo) super end
def some_method(used, unused, _unused_but_allowed) puts used end
def something ...
def something(arg)
def test one two three return something end
def test return something end
def test_emails assert_emails 0 ContactMailer.welcome.deliver_now assert_emails 1 ContactMailer.welcome.deliver_now assert_emails 2 end
def test_emails assert_enqueued_emails 0 ContactMailer.welcome.deliver_later assert_enqueued_emails 1 ContactMailer.welcome.deliver_later assert_enqueued_emails 2 end
def test_emails assert_no_emails ContactMailer.welcome.deliver_now assert_emails 1 end
def test_emails_again assert_emails 1 do ContactMailer.welcome.deliver_now end
def test_emails_again assert_enqueued_emails 1 do ContactMailer.welcome.deliver_later end
def test_emails_again assert_no_emails do No emails should be sent from this block end end
def test_hello_job assert_performed_jobs 1, only: HelloJob do HelloJob.perform_later('jeremy') LoggingJob.perform_later end end
def test_jobs assert_enqueued_jobs 0 HelloJob.perform_later('david') assert_enqueued_jobs 1 HelloJob.perform_later('abdelkader') assert_enqueued_jobs 2 end
def test_jobs assert_no_enqueued_jobs HelloJob.perform_later('jeremy') assert_enqueued_jobs 1 end
def test_jobs assert_no_performed_jobs
def test_jobs assert_performed_jobs 0
def test_jobs_again assert_enqueued_jobs 1 do HelloJob.perform_later('cristian') end
def test_jobs_again assert_no_enqueued_jobs do No job should be enqueued from this block end end
def test_jobs_again assert_no_performed_jobs do No job should be performed from this block end end
def test_jobs_again assert_performed_jobs 1 do HelloJob.perform_later('robin') end
def test_logging_job assert_enqueued_jobs 1, only: LoggingJob do LoggingJob.perform_later HelloJob.perform_later('jeremy') end end
def test_login get the login page get "/login" assert_equal 200, status
def test_no_emails assert_no_enqueued_emails ContactMailer.welcome.deliver_later assert_enqueued_emails 1 end
def test_no_emails assert_no_enqueued_emails do No emails should be enqueued from this block end end
def test_no_logging assert_no_enqueued_jobs only: LoggingJob do HelloJob.perform_later('jeremy') end end
def test_no_logging assert_no_performed_jobs only: LoggingJob do HelloJob.perform_later('jeremy') end end
def test_simple_redirect
def unfollow stop_all_streams end end
def up execute "ALTER TYPE model_size ADD VALUE 'new_value'" end end
def volume_adjustment super.to_i end end
def welcome mail end
def with_optimistic_retry begin yield rescue ActiveRecord::StaleObjectError begin Reload lock_version in particular.
def_matcher can be used to define a pattern-matching method on Node
default max pool size to 5
default wildcard match to end of list
default_scope without a block is removed.
define attr_reader methods for the instance variables
define_attribute_method :name
define_attribute_methods :name
define_attribute_methods :name, :age, :address
define_callbacks :save set_callback :save, :before, Audit.new
define_callbacks :validate define_callbacks :initialize, :save, :destroy
define_method may be slower on dispatch, but if you're careful about the closure created, then define_method will consume much less memory.
define_method(:method2) do end
define_model_callbacks :create,  only: :after define_model_callbacks :update,  only: :before define_model_callbacks :destroy, only: :around
define_model_callbacks :create, :update
define_model_callbacks :initializer, only: :after
define_model_callbacks accepts the same options +define_callbacks+ does, in case you want to overwrite a default.
delegate :env, :request, to: :controller
delegate :hello, to: :class end
delete all interest records to ensure that hard coded invalid_id(s) are indeed invalid.
delete text_xml from the list
deliver_later."
dependencies.rb gives a similar error message but its wording is not as clear because it mentions autoloading.
depending on the format string.
deprecated access
deprecated_object.to_s DEPRECATION WARNING: This object is now deprecated.
destination File.expand_path("../tmp", File.dirname(__FILE__))
development: adapter: sqlite3 database: db/development.sqlite3
development: database: my_application host: localhost
development: secret_key_base: 'secret key'
disappear before read
disappear before write
discard cases with argument destructuring
discard modifier ifs and ternary_ops
discard other scenarios
discard short ifs
discard ternary ops and modifier if/unless nodes
discard ternary ops, if/else and modifier if/unless nodes
dispatches to the *method*, not the attribute
distance: centi: one: "centimeter" other: "centimeters" unit: one: "meter" other: "meters" thousand: one: "kilometer" other: "kilometers" billion: "gazillion-distance"
distance_of_time_in_words
do not delete this line',
do nothing',
do_something *array
do_something if str.match(/regex/) while regex.match('str') do_something end
do_something(*array)
do_something(/pattern/i)
documentation comment',
does not call +mail+
does not have a .format
don't add before first visible field
don't clobber if we already have a starting paren
don't count this query
don't flag `break(1)`, etc
don't flag `rescue(ExceptionClass)`
don't let UrlFor override the url_options method
don't let it be negative
don't play me." validates_length_of :words_in_essay, minimum: 100, too_short: 'Your essay must be at least 100 words.'
don't register an offense if there is a line comment between the dot and the selector otherwise, we might break the code while "correcting" it (even if there is just an extra blank line, treat it the same)
don't rely on the return value of the handler
don't run these test because we aren't running in JRuby
don't touch anything unless we are sure it is a method call.
don't warn about defs nodes which are followed by a call to `private_class_method :name` obviously the programmer knows what they are doing
drain the only available connection
drop concluding )
drop the trailing (
drop whitespace
drop_table :distributors end end
dummy config for a generic cop instance
dump foreign keys at the end to make sure all dependent tables exist.
dup should not preserve the timestamps if present
duped has no timestamp values
dynamic finder method
e.g. if there are 20 leap year days between 2 dates having the same day and month then the based on 365 days calculation the distance in years will come out to over 80 years when in written English it would read better as about 80 years.
each_node/visit_descendants_with_types with :skip_children
eager_autoload do autoload :Cache end end
eagerloaded row count should be greater than just developer count
eat following spaces up to EOL, but not the newline itself
eat the comma on the left
eat the entire comment and following newline
edge case for one constant only complain when the number of variables matches
element:: The document element to be collapsed.
element:: XML element to be checked.
element:: XML element to extract attributes from.
element:: XML element to merge into hash
element:: XML element whose texts are to me merged into the hash
else do_this do_that end
else retry end end end
em-hiredis is warning-rich
empty block won't perform jobs
empty insert
empty method not used anywhere to ensure methods like `status` and `location` aren't called on `redirect_to` calls
enable a logger so that (e.g.) the benchmarking stuff runs, so we can get a more accurate simulation of what happens in "real life".
encoded_masked_token is invalid Base64
encoding: utf-8
encoding: utf-8 Copyright (c) 2015 Acme Inc.
end end end
end end end end
end end include EventTracking end
end_range starts with the final newline of the if body
ends blocks
engines apparently don't have this set
ensure any data is present
ensure it's using the DATABASE_URL
ensure that bin/rails has proper dummy_path
ensure that railties are not added twice
ensure that scoping is restored
ensure that we're not going to throw and rescue from NoMethodError in method_missing which is slow
ensure this test can run independently of order
ensure thread 1 tx starts first
ensure travel_to re-raises
ensure we have a schema_migrations table to dump
equivalent to 1AM DST
errors from ActiveRecord setup
errors from Marshal or YAML Object couldn't be dumped, perhaps because of singleton methods -- this is the fallback
errors from loading file
even though there's no explicitly set content-type,
every line with more than 1 expression on it is an offense
excerpt strips the resulting string before ap-/prepending excerpt_string.
existing private class method
existing protected class method
existing public class method
existing scope
expect only Invoke db:structure:dump (first_time)
expire_fragment('name_of_cache')
expires_in 20.minutes expires_in 3.hours, public: true expires_in 3.hours, public: true, must_revalidate: true
explicitly check for false vs nil
extended unicode escape
extract from nodeset
failing to do so means that in cases like activerecord/test/cases/associations/inner_join_association_test.rb:136 incorrect SQL is generated.
fails because Interest does have the correct inverse_of
fails because no class has the correct inverse_of for horrible_polymorphic_man
false-negative...
faye-websocket is warning-rich
femto: Quadrillionth pico: Trillionth nano: Billionth micro: Millionth mili: Thousandth centi: Hundredth deci: Tenth
figure out the lengths for each column based on above keys
file fixtures/_top_level_partial.html (not fixtures/test, with format extension)
file fixtures/_top_level_partial_only (not fixtures/test)
fill in timestamp columns if they aren't specified and the model is set to record_timestamps
filter out super and zsuper nodes
finally, the dependency name of interest
find all migration keys used in this table
find the author, then find the posts, then find the comments
find the max length for the 'type' column, which is special
find the post, then find the author which is null so no query for the author or address
find the post, then find the author, then find the address
find_by_credit_limit has been cached
find_by_namespace :webrat, :rails, :integration
first dump primary key column
first second of DST
fixed dates / times
fixtures :topics
fk_test_has_fk should be before fk_test_has_pk
follow redirection
followed by an optional chain of zero-argument method calls
followed by no text' do
followed by optional letters, numbers or underscores
followed by optional spaces
foo could be a Range
foo_url(bar, baz, bang)
foo_url(bar, baz, bang, sort_by: 'baz')
foo_url(bar: bar, baz: baz, bang: bang)
for ScaffoldBase
for backwards compatibility with those that didn't add strip_insignificant_zeros to their locale files
for each of before, after, and around.
for example.
for strip_heredoc
force drop posts table for test.
force fallback
force loading
force schema to load
forcing to load all clients
form_tag('http://far.away.com/form', authenticity_token: "cf50faa3fe97702ca1ae") form with custom authenticity token
form_tag('http://far.away.com/form', authenticity_token: false) form without authenticity token
friend_too exists to test a bug, and probably shouldn't be used elsewhere
friends_too exists to test a bug, and probably shouldn't be used elsewhere
frozen_string_literal: true
frozen_string_literal: true Disable colors in specs
frozen_string_literal: true Force JRuby not to select the current working directory as a temporary directory on Travis CI.
frozen_string_literal: true RuboCop can be run in contexts where unexpected other libraries are included, which may interfere with its normal behavior.
frozen_string_literal: true rubocop:disable Metrics/ClassLength rubocop:disable Metrics/CyclomaticComplexity
frozen_string_literal: true rubocop:disable Metrics/LineLength
frozen_string_literal: true rubocop:disable Metrics/ModuleLength
fun/games_helper.rb
fun/pdf_helper.rb
gem "rspec", group: :test gem "technoweenie-restful-authentication", lib: "restful-authentication", source: "http://gems.github.com/" gem "rails", "3.0", git: "git://github.com/rails/rails"
gem_group :development, :test do gem "rspec-rails" end
generate a primary key if necessary
generate(:authenticated, "user session")
generates a query with 'ORDER BY id ASC, name ASC'.
generates a scope that conflicts with an AR class method
generates class method .columns, which conflicts with an AR method
george: id: 1 name: George the Monkey
george: id: 1 name: George the Monkey fruits: apple, orange, grape
george: id: 1 name: George the Monkey pirate_id: 1
george: name: George the Monkey pirate: reginald
get ":controller/:action/:id"
get 'hello', to: HelloController.action(:index)
get rid of it so Student is still like it was
get the class_name of the belongs_to association of the through reflection
get_header "HTTP_ACCEPT_CHARSET".freeze
getting a slice of it
git :init git add: "this.file that.rb" git add: "onefile.rb", rm: "badfile.cxx"
give the other `thread` some time to get stuck in `group_action_method`
give threads time to do their business
go through nested autosave associations that are loaded in memory (without loading any new ones), and return true if is changed for autosave
google: id: 2 name: Google url: http://www.google.com
grape: id: 3 name: grape
grape: name: grape
grape_george: fruit_id: 3 monkey_id: 1
handle `if (something rescue something_else) ...`
handle cycles in the tree
handle error',
handle strings like __FILE__
has not changed jamis
has the same effect as
has-many :through
has_and_belongs_to_many
has_and_belongs_to_many with reserved-word table name
has_many - Source reflection can be has_many, has_one, belongs_to or has_and_belongs_to_many - Through reflection can be has_many, has_one, belongs_to or has_and_belongs_to_many
has_many through Source: belongs_to Through: has_many through
has_many through Source: has_and_belongs_to_many Through: has_many
has_many through Source: has_many Through: has_and_belongs_to_many
has_many through Source: has_many Through: has_many through
has_many through Source: has_many Through: has_one through
has_many through Source: has_many through Through: belongs_to
has_many through Source: has_many through Through: has_many
has_many through Source: has_many through Through: has_one
has_many through Source: has_many through a habtm Through: has_many through
has_many through Source: has_one Through: has_one through
has_many through Source: has_one through Through: has_one
has_one - Source reflection can be has_one or belongs_to - Through reflection can be has_one or belongs_to
has_one :user end
has_one association with reserved-word table name
has_one through Source: belongs_to Through: has_one through
has_one through Source: has_one through Through: has_one
hash:: Hash to add key/value pair to.
hash:: Hash to add the converted element to.
hash:: Hash to merge the converted element into.
hash_for_location for :location key' do
hash_for_offense values for :offenses key' do
heat habtm cache
hello world
helpers/abc_helper.rb should not be included
helpers1_pack was given as a second path, so pack1_helper should be included as the second one
helpers: label: post: body: "Write your entire text here"
heredocs are ignored at the moment
hex byte escape
hold the lock open until we tested everything
holds source read in from stdin, when --stdin option is used
http://dev.mysql.com/doc/refman/5.6/en/call.html
http://rubular.com/r/CvpbxkcTzy
http://www.iana.org/assignments/media-types/
http://www.ietf.org/rfc/rfc4627.txt http://www.json.org/JSONRequest.html
https://bugs.ruby-lang.org/issues/10856
https://bugs.ruby-lang.org/issues/7166
https://github.com/apache/lucene-solr/blob/lucene_solr_4_9_0/lucene/suggest/src/test/org/apache/lucene/search/spell/TestJaroWinklerDistance.java
https://github.com/bbatsov/rubocop/issues/1115
https://github.com/jeffkreeftmeijer/fuubar
https://github.com/jruby/jruby/issues/405
https://github.com/jruby/jruby/pull/2562
https://github.com/rails/rails/issues/8442
https://github.com/whitequark/parser/issues/283
https://rails.lighthouseapp.com/projects/8994/tickets/6225-memcachestore-cant-deal-with-umlauts-and-special-characters The error is caused by character encodings that can't be compared with ASCII-8BIT regular expressions and by special characters like the umlaut in UTF-8.
i.e. type of the violation.
id called on it")
if 20 do_something end
if a method definition is inside an if, it is very likely that a different definition is used depending on platform, etc.
if a symbol is given we prepend the quoted table name
if a template has changed, it will be now be newer than all the cached templates
if cond then a elsif cond then b end
if cond then end
if either the old or new template list is empty, we don't need to (and can't) compare modification times, and instead just check whether the lists are different
if foreign keys are implemented and fixtures are not deleted in reverse order then this test case will raise StatementInvalid
if host is not ip and matches domain regexp (ip confirms to domain regexp so we explicitly check for ip)
if host matches one of the supplied domains without a dot in front of it
if it doesn't properly say DROP TEMPORARY TABLE, the transaction commit will complain that no transaction is active
if it is an IO we need to go back to read the object
if it's a hangul syllable starter character
if it's set to nil or false
if methods are redefined).
if no argument/-h/--help is passed to rails destroy command, then it generates the help associated.
if no argument/-h/--help is passed to rails generate command, then it generates the help associated.
if not running callbacks, only adds the record to the parent transaction
if nothing is found then try same procedure to find super class's layout.
if running just this test.
if some_condition do_something end
if something ...
if something else went wrong this can't be a "naked" rescue, because we have should return conns even for non-StandardErrors
if structure is not loaded correctly, exception would be raised
if the accumulator parameter is assigned to in the block, then we can't convert to each_with_object
if the adapter doesn't support the indexes call the best we can do is return the default index name for the options provided
if the adapter doesn't support the indexes call, pick defaults that let the test pass
if the codepoint is decomposable in with the current decomposition type
if the cond node is literal we obviously have a problem
if the current controller is "foo/bar/baz" and controller: "baz/bat" is specified, the controller becomes "foo/baz/bat"
if the right brace is on the same line as the last value, accept
if the right bracket is on the same line as the last value, accept
if the second_thread is not able to preempt the first_thread, they will temporarily (until either of them timeouts with ConnectionTimeoutError) deadlock and a join(2) timeout will be reached
if there is a provided tld length then we use it otherwise default domain regexp
if true make sure every write flushes
if user provided "name:index" instead of "name:string:index" type should be set blank so GeneratedAttribute's constructor could set it to :string
if we get current version during initialization, it happens stack over flow.
ignore Java interop code like Java::int
ignore limit, use precision and scale
ignores significant it precision is 0
implicit session
in Oracle '' is saved as null therefore need to save ' ' in not null column
in layout, jumps to some DIV
in place of the older more verbose, non-resource-oriented
in the options hash creates a form that will allow the unobtrusive JavaScript drivers to modify its behavior.
in the options hash.
include Routes.url_helpers
include TodoEventTracking end
include a module to get around thor's method_added hook
include seconds
include' do
included do has_many :events before_create :track_creation after_destroy :track_deletion end
included do self.method_injected_by_foo end end
includes querysting
increment')
incremented only once
index name can't be the same
index(:account_id, name: 'index_projects_on_account_id')
inflect.irregular 'octopus', 'octopi'
inflect.uncountable 'equipment' end
inherited from somegem
inserts the primary resource
inspect at 10" do
inspect" do
instantiate the delegate object after initialize is defined
int 3 is 4 bytes in postgresql
interpolate the fixture label
introspect table with reserved word name
invalid date
invalid encoding
investigate method' do
irregular 'octopus', 'octopi' irregular 'person', 'people'
is better than
is computed directly through SQL and does not trigger by itself the instantiation of the actual post records.
is equivalent to
is equivalent to something like:
is then equivalent to something like:
is this regexp 'literal' in the sense of only matching literal chars, rather than using metachars like .
it's not in the test itself
iterates over all namespaces and opens up blocks
javascript_tag "alert('All is good')", defer: 'defer'
joins is the list of all string join commands and arel nodes.
js is not part of all
json "fragments" - these are invalid JSON, but ActionPack relies on this
keep the names short to make Oracle and similar behave
key:: Key to be added.
klass option is necessary to support loading polymorphic associations
l.(1) has no selector, so we use the opening parenthesis instead
lambda.() does not have a selector
lambda.(args)
layout key in either old or new style hash syntax
lazy_load_hooks allows Rails to lazily load a lot of components and thus making the app boot faster.
leading spaces are on purpose
leap day plus one year
leave other tests as unaffected as possible
let's just rely on the template
let's wait a bit to ensure there's a new mtime
library_db: database: library host: some.library.org
link to GitHub, SDoc flag
link_to, and all other functions that require URL generation functionality, actually use ActionController::UrlFor under the hood.
load all the zones
loading a specific fixture
localhost IPv4
localhost IPv6
look inside parentheses around the condition
mac + darwinports + mysql
mac + darwinports + mysql4
mac + darwinports + mysql5
mail(template_path: 'notifications', template_name: 'another')
make it protected
make sure 'foo' was written
make sure all associated objects have been validated
make sure app_xml is ahead of text_xml in the list
make sure exceptions are thrown when establish_connection is called with an anonymous class
make sure it gets removed from the pool by clear_reloadable_connections
make sure our thread is in the timeout section
make sure readers methods get compiled
make sure tables get reinitialized
make sure that overriding delivery method options per mail instance doesn't affect the Base setting
make sure the association is loaded
make sure the response is committed
make sure there is going to be a duplicate PK error
make sure to use a non-UTC time zone
make sure we are in correct dir
make sure we carry over any changes to ActiveRecord::Base.default_timezone that have been made since we established the connection
make sure we didn't break count...
make sure we get the gem, not stdlib
make sure we have an active connection
match ":controller/:action/:id"
matches YAML-formatted dates
max filename size on file system is 255, minus room for timestamp and random characters appended by Tempfile (used by atomic write)
max is 1024, plus some room
merge in order_values from relation
message is deprecated and has no effect.
method in block must be invoked on a lvar without args
methods for test_sweep_after_halted_action_chain
methods starting with a capital letter should be skipped
midnight Jan 1 EST
midnight Jan 2 EST
migrate down to 0
migrate down to 0 again
migrate up to 1
migration_template "migration.rb", "db/migrate/add_foo_to_bar.rb"
minus 2 because node.loc.line is zero-based
misdirection
mock out self.columns so no pesky db is needed for these tests
module ActionDispatch
module ActiveRecord class RuntimeRegistry extend ActiveSupport::PerThreadRegistry
module Bar def self.included(base) base.method_injected_by_foo end end
module Bar extend ActiveSupport::Concern include Foo
module Bar include Foo def self.included(base) base.method_injected_by_foo end end
module ClassMethods ...
module Copyable def copy_to(destination) Notification.suppress do Copy logic that creates new comments that we do not want triggering notifications.
module Current thread_mattr_reader :user end
module Current thread_mattr_writer :user end
module CustomDsl def browses_site get "/products/all" assert_response :success assert_select 'h1', 'Products' end end
module EventTracking extend ActiveSupport::Concern
module Foo class Bar end end
module Foo def self.included(base) base.class_eval do def self.method_injected_by_foo ...
module Foo extend ActiveSupport::Concern included do def self.method_injected_by_foo ...
module Fred extend self
module HairColors mattr_accessor :hair_colors end
module HairColors mattr_accessor :hair_colors, instance_accessor: false end
module HairColors mattr_accessor :hair_colors, instance_writer: false, instance_reader: false end
module HairColors mattr_reader :hair_colors end
module HairColors mattr_reader :hair_colors, instance_reader: false end
module HairColors mattr_writer :hair_colors end
module HairColors mattr_writer :hair_colors, instance_writer: false end
module Journey
module M extend ActiveSupport::Concern
module MyLib extend ActiveSupport::Autoload
module Pagination def page(number) pagination code goes here end end
module Test
module Test extend self
module body
module needs to be created after Qux is included in Object or bug won't be triggered
more configuration
most common path.
mount SomeRackApp, at: "some_route"
multiple flags
multiple statements
must come after Rack::MethodOverride to properly log overridden methods
must use value to prevent double-escaping
my_job_instance.enqueue my_job_instance.enqueue wait: 5.minutes my_job_instance.enqueue queue: :important my_job_instance.enqueue wait_until: Date.tomorrow.midnight my_job_instance.enqueue priority: 10
mysql by default does not store fractional seconds in the database
n-related',
name is explicitly set in the controller.
namespace "admin" do resources :posts, :comments end
namespace :admin do namespace :users do resources :products end end
namespace :admin do resources :posts end
namespace :posts do concerns :commentable end
necessary to trigger the has_transactional_callbacks branch
need for variable scope
need to disable transactional tests, because otherwise the sqlite3 adapter (at least) chokes when we try and change the schema in the middle of a test (see test_increment_counter_*).
need to make sure Object::Firm and Object::Client are not defined, so that constantize will not be able to cheat when having to load namespaced classes
needs to be *exact*
negative 1',
negative 2',
nested - have each child on its own line class Foo class Bar end end
nested, fixed in next iteration
never checked back in
new codepoints
next iteration fixes this
nil means no limit.
no cop in wrong type listing
no delimiter
no destroy-filters should have been called
no more than 2 decimals reported
no need to check empty arrays
no need to delay test suite by waiting the whole full default timeout
no time zone
non existent key passed
non reachable, hack to be able to stub exec in the test suite
normal character
normal code indentation is 2 spaces, and we have configured multiline method indentation to 6 spaces so in this case, 8 spaces are required
normal code indentation is 2 spaces, and we have configured multiline method indentation to 7 spaces so in this case, 9 spaces are required
not all valid keys are required to be present
not used for method calls
note: escapes table_name
nothing passed
nothing to do
now set a time between 1:00 and 2:00 by specifying whether DST is active uses: Time.local( sec, min, hour, day, month, year, wday, yday, isdst, tz )
now set a time between 2:00 and 3:00 by specifying whether DST is active uses: Time.local( sec, min, hour, day, month, year, wday, yday, isdst, tz )
number of captures seen
number of iterations selected based on consultation with the google security team.
number that's bigger than int
objectify_options(options))
octal byte escape
octal escape
of captures')
offense is registered on args node when parentheses are unwanted
offenses are registered on the `block.call` nodes
on Oracle aliases are truncated to 30 characters and are quoted in uppercase
once we have already warned about a certain modifier, don't warn again even if it is never applied to any method defs
one for loading post, and another one merged query
one of the parse strategies blew up
only "Kotori" is created.
only count belongs_to associations
only defined in normal.yml
only one of two clients is included in the association due to the :conditions key
only override explicitly set adapters, a quirk of `class_attribute`
only predicate methods are handled differently
only the correctly associated client should have been deleted
only the last concatenation is an offense
operator (like FileUtils::rmdir instead of FileUtils.rmdir).
optional global, instance or class variable indicator
optional hash, up to the partial or layout key declaration
optional opening paren surrounded by spaces
options - optional Hash of the options.
options are passed correctly to the resolvers.
or in a scope or namespace:
or must be structurally compatible.
or the even pithier
or you can remove the entire session with +reset_session+.
or, for a single case
orange: id: 2 name: orange
orange: name: orange
orange_george: fruit_id: 2 monkey_id: 1
original values should be in previous_changes
original_exception is deprecated and has no effect.
other - The ActiveModel::Errors instance.
other kinds of alignment
other_topics fixture should not be included here
output_hash as JSON' do
outside of transactions we can simply flush this query and retry
overridden in .rubocop.yml
overridden in local.yml
override any order specified in the original relation
override in derived class
overwrite the default type
owner is in Object, so raise
parameterize("Donald E.
params.permit(:name)
params.require(:user).permit(...)
parse possible attribute options like :limit for string/text/binary/integer, :precision/:scale for decimals or :polymorphic for references/belongs_to when declaring options curly brackets should be used
partial key in either old or new style hash syntax
pass target value as an argument
passes an empty list if *args
passes because Man does have the correct inverse_of
perform_enqueued_jobs do HelloJob.perform_later('matthew') assert_performed_jobs 1 end end
perform_enqueued_jobs do HelloJob.perform_later('xavier') end assert_performed_jobs 1
perform_enqueued_jobs do HelloJob.perform_later('yves') assert_performed_jobs 2 end end
periodically :transmit_progress, every: 5.seconds
periodically every: 3.minutes do transmit action: :update_count, count: current_count end
person.pets.delete_all
person.pets.destroy_all
person.pets.replace(other_pets)
pirate.reject_empty_ships_on_create returns false for saved pirate records in the previous step note that pirate gets saved but ship fails
plus a singleton class method called _routes ...
polling should fail
pool allows for concurrent connection creation
pop the first welcome message off the stack
populate the cache with the SELECT result
position in multi-line method calls.
positive 1',
positive 2',
post :change_avatar, avatar: fixture_file_upload('files/spongebob.png', 'image/png')
post :change_avatar, avatar: fixture_file_upload('files/spongebob.png', 'image/png', :binary)
post_comments           GET       /posts/:post_id/comments(.:format) post_comments           POST      /posts/:post_id/comments(.:format) new_post_comment        GET       /posts/:post_id/comments/new(.:format) edit_sekret_comment     GET       /comments/:id/edit(.:format) sekret_comment          GET       /comments/:id(.:format) sekret_comment          PATCH/PUT /comments/:id(.:format) sekret_comment          DELETE    /comments/:id(.:format)
post_comments    GET       /posts/:post_id/comments(.:format) post_comments    POST      /posts/:post_id/comments(.:format) new_post_comment GET       /posts/:post_id/comments/new(.:format) edit_comment     GET       /sekret/comments/:id/edit(.:format) comment          GET       /sekret/comments/:id(.:format) comment          PATCH/PUT /sekret/comments/:id(.:format) comment          DELETE    /sekret/comments/:id(.:format)
post_nesting_incompatible_thread can now proceed
postgresql test if randomly executed then executes "SHOW max_identifier_length".
posts.first will be ordered using id only.
pre-compute the insert statements and fake data compilation, so the benchmarks below show the actual runtime for the execute method, minus the setup steps Using the same paragraph for all exhibits because it is very slow to generate unique paragraphs for all exhibits.
preallocate all the default blocks for performance/memory consumption reasons
precision is 2, significant should be inherited
precondition, make sure there are comments.
predefined global variables their English aliases http://www.zenspider.com/Languages/Ruby/QuickRef.html
prefixes" do
preheat arel's table cache
preheat cache
preload instance variables before freezing
preload table schemas
prepare the reload statement in a transaction
prevent json unmarshalling
prevent showing negative zeros
prevents regression
previous implementation of validates_presence_of eval'd the string with the wrong binding, this regression test is to ensure that it works correctly
private IPv4 range 10.x.x.x
private IPv6 range fc00::/7
private Using a private method to encapsulate the permissible parameters is just a good pattern since you'll be able to reuse the same permit list between create and update.
private class method on AR::Base
private def encrypt(value) Secrecy is committed end
private def foo end
private def generate_connection_token SecureRandom.hex(36) end end
private def log_children Child processing end end
private def some_complex_logic ...
private def track_creation ...
private_class_method :method end
production: adapter: sqlite3 database: db/production.sqlite3
protected def deny_access ...
prove join table is updated
public class method on AR::Base
put transaction in broken state
puts 'This code gets executed and nothing related to ZeroDivisionError was seen'
puts (x + y)
qu_job can be nil depending on the configured backend
queue_classic assumes that you are already using PostgreSQL in your production environment and that adding another dependency (e.g. redis, beanstalkd, 0mq) is undesirable.
queue_classic provides a simple interface to a PostgreSQL-backed message queue.
queue_classic specializes in concurrent locking and minimizing database load while providing a simple, intuitive developer experience.
quoted_name should be downcased as some database adapters (Oracle) return quoted name in uppercase
rack will raise a Rack::Utils::ParameterTypeError when parsing this query string
rails g controller foo/bar/baz index Will generate - namespace :foo do namespace :bar do get 'baz/index' end end
rails generate controller Account --no-test-framework
rails generate controller Account --skip-test-framework
rails generate controller Account --webrat
rails generate migration add_fieldname_to_tablename fieldname:string
rails routes
rails("db:migrate") rails("db:migrate", env: "production") rails("gems:install", sudo: true)
raise WrongEncodingError.new( problematic_string, expected_encoding )  :method: local_assigns
raises error
rake ENGINE_NAME:install:migrations
rake guides:validate
rake notes rake notes:optimize
rake("db:migrate") rake("db:migrate", env: "production") rake("gems:install", sudo: true)
rakefile('seed.rake', 'puts "Planting seeds"')
range_with_surrounding_comma' do
range_with_surrounding_space' do
ranges are sorted by position
re-check under lock
read a single pattern-matching expression from the token stream, return Ruby code which performs the corresponding matching operation on 'cur_node' (which is Ruby code which evaluates to an AST node)
readme "README"
realm      - String realm to use in the header.
receiver and selector are on the same line
reconstruct the scope now that we know the owner's id
record) is given a name and is followed by an indented list of key/value pairs in the "key: value" format.
record.written on is equal to (i.e., simultaneous with) utc_time
records are quoted as their primary key
redeclared association on AR descendant should not inherit callbacks from superclass
redefined class method on AR::Base
redirect_to login_url
redirect_to posts_url, status: :see_other redirect_to action: 'index', status: 303
redirect_to root_url end end
redirect_to show_item_path(id: 25)
redirect_to(person_list_url) end
reduce 11 omitted reduce 12 omitted reduce 13 omitted reduce 14 omitted
reduce 3 omitted reduce 4 omitted reduce 5 omitted reduce 6 omitted
reference the global "app" instance, created on demand.
regexp metacharacters
reginald: id: 1 name: Reginald the Pirate monkey_id: 1
reginald: id: 2 name: Reginald the Pirate
reginald: name: Reginald the Pirate monkey: george
registry.value_for(:current_scope, Board)
regression test
regression test, from problem in Locatable
regression tests against improper inflection regexes
regular dotted method calls bind more tightly than operators so we need to climb up the AST past them
reinstate the constants that we undefined in the setup
related bug http://jira.codehaus.org/browse/JRUBY-7194
release_connection releases the connection-thread association and returns the connection to the pool.
releasing only those conns that were checked out in this method, conns checked outside this method (before it was called) are not for us to release
relies on code_length
relies on configurable_max
relies on cyclomatic_complexity
relies on on_method_def
relies on simple text
relies on surrounding_space
reload rescue ActiveRecord::RecordNotFound If the record is gone there is nothing to do.
reload schema_migrations to be sure it wasn't changed by another process before we got the lock
reloads the environment
remote: true
remove locales external to Rails
remove one of them
remove the column +name+ from the table.
remove_column(:account_id)
remove_column(:suppliers, :qualification)
remove_columns(:suppliers, :qualification, :experience)
remove_foreign_key :accounts, :branches
remove_foreign_key :accounts, column: :owner_id
remove_foreign_key :accounts, name: :special_fk_name
remove_hook_for :orm
remove_index :accounts, :branch_id
remove_index :accounts, column: :branch_id
remove_index :accounts, name: :by_branch_party
remove_index calls index_name_for_remove which can't work since execute is stubbed
remove_reference(:products, :supplier, polymorphic: true)
remove_reference(:products, :user, index: true)
remove_reference(:products, :user, index: true, foreign_key: true)
remove_timestamps(:suppliers)
removes all
removes nothing
removes one at a time
rename column to see that column doesn't lose its not null and/or default definition
rename tables with reserved-word names
rename_column(:suppliers, :description, :name)
rename_index :people, 'index_people_on_last_name', 'index_users_on_last_name'
rename_table('octopuses', 'octopi')
render partial: "comments/comment", collection: commentable.comments render "comments/comments" render 'comments/comments' render('comments/comments')
reordered to store upper right corner then bottom left corner
replace our new session_id with our old, pre-reset session_id
report_as_with_mark' do
report_file_as_mark'
report_file_as_mark' do
report_summary' do
request - ActionDispatch::Request instance with the current headers.
request method"
requests that set If-None-Match header may return a 304 Not Modified response if it matches the ETag exactly.
require "test_helper"
require 'active_support/concern'
require 'active_support/configurable'
require 'pp' early to prevent hidden_methods from not picking up the pretty-print methods until too late
require 'rubocop/rake_task' RuboCop::RakeTask.new
require 'test_helper'
require_relative '20121212123456_tenderlove_migration'
reset the html_document variable, except for cookies/assigns calls
reset the schema change
resource :profile
resources :magazines do resources :ads end
resources :photos
resources :photos do collection do get 'search' end end
resources :photos do member do get 'preview' end end
resources :photos do resources :comments end
resources :posts do concerns :commentable end
resources :posts, module: "admin"
resources :posts, path: "/admin/posts"
resources :posts, path: "admin/posts"
resources :posts, path: 'postings'
resources :posts, shallow: true do resources :comments end
resources :toys, concerns: :purchasable resources :electronics, concerns: :purchasable resources :pets do concerns :purchasable, returnable: false end
resources :user, param: :name
resources :users
restarg and kwrestarg would have no name:
restore all the inflections
restore the old definition
resulting in the following output within the logs including a hash with the payload:
results in:
return if any branch is empty.
return the only available connection
return the whole match
return to skip all descendant nodes
returned conn needs to be already leased
returns a connection handler local to the current thread.
returns either false or the inverse association name that it finds.
returns empty hash if no query present.
returns false if the then or else children are conditionals
returns the collected queries local to the current thread.
returns the connection handler local to the current thread.
reversible method to define reversible behavior.
right wins if there is no left
rollbacks are silently swallowed
route prepends two spaces onto the front of the string that is passed, this corrects that.
rubocop --require ./path/to/my_custom_formatter --format MyCustomFormatter
rubocop: enable Metrics/LineLength,Style/StringLiterals',
rubocop:disable LineLength',
rubocop:disable LineLength,ClassLength',
rubocop:disable Lint/Eval',
rubocop:disable Lint/HandleExceptions
rubocop:disable Lint/HandleExceptions All errors are in diagnostics.
rubocop:disable Lint/UselessAssignment',
rubocop:disable Metrics/ClassLength
rubocop:disable Metrics/ClassLength An exception indicating that the inspection loop got stuck correcting offenses back and forth.
rubocop:disable Metrics/LineLength
rubocop:disable Metrics/LineLength',
rubocop:disable Metrics/MethodLength, Metrics/CyclomaticComplexity
rubocop:disable NumericLiterals ')
rubocop:disable Style/ClassVars',
rubocop:disable Style/IndentationWidth',
rubocop:disable Style/Loop',
rubocop:disable Style/MutableConstant
rubocop:disable Style/SpaceInsideHashLiteralBraces, Style/ExtraSpacing
rubocop:disable Style/Tab",
rubocop:disable Style/ZeroLengthPredicate
rubocop:enable Lint/HandleExceptions
rubocop:enable Metrics/MethodLength, Metrics/CyclomaticComplexity
rubocop:enable Style/ZeroLengthPredicate
rubyonrails: id: 1 name: Ruby on Rails url: http://www.rubyonrails.org
run_callbacks :save do save end
running tests again won't trigger a schema update
runs assert_restful_routes_for and assert_restful_named_routes for on the controller_name and options, without passing a block.
runs first time, not asserting
runs second time
same value as an existing enum
sample controllers
sanity check
sanity check to make sure that this file never exists
save all the inflections
save and reload
says nicknames cannot be +NULL+ (adds the constraint), whereas
scope "/admin" do resources :posts end
scope module: "admin" do resources :posts end
scope path: "/cpanel", as: 'admin' do resources :posts, :comments end
scope path: ":account_id", as: "account" do resources :projects end
scope shallow_path: "sekret" do resources :posts do resources :comments, shallow: true end end
scope shallow_prefix: "sekret" do resources :posts do resources :comments, shallow: true end end
search(options.slice(:mass, :velocity, :time))
secure processing of java xml http://www.ibm.com/developerworks/xml/library/x-tipcfsx/index.html
see: https://github.com/rails/rails/pull/12185
sees that a method is already defined, so doesn't intervene
select_date()
select_date(my_date)
select_date(my_date, date_separator: '/')
select_date(my_date, discard_type: true)
select_date(my_date, prefix: 'payday')
select_datetime(my_date_time)
select_datetime(my_date_time, date_separator: '/')
select_datetime(my_date_time, date_separator: '/', time_separator: '', datetime_separator: ',')
select_day(5)
select_day(5, prompt: 'Choose day')
select_day(5, use_two_digit_numbers: true)
select_day(my_date)
select_day(my_date, field_name: 'due')
select_hour(13)
select_hour(13, prompt: 'Choose hour')
select_hour(my_time)
select_hour(my_time, field_name: 'stride')
select_hour(my_time, start_hour: 2, end_hour: 14)
select_minute(14)
select_minute(14, prompt: 'Choose minutes')
select_minute(my_time)
select_minute(my_time, field_name: 'moment')
select_month
select_month(14, prompt: 'Choose month')
select_month(Date.today)
select_month(Date.today, add_month_numbers: true)
select_month(Date.today, field_name: 'start')
select_month(Date.today, use_month_numbers: true)
select_month(Date.today, use_short_month: true)
select_month(Date.today, use_two_digit_numbers: true)
select_second(14, prompt: 'Choose seconds')
select_second(33)
select_second(my_time)
select_second(my_time, field_name: 'interval')
select_time()
select_time(my_time)
select_time(my_time, include_seconds: true)
select_time(my_time, time_separator: ':')
select_time(my_time, time_separator: ':', include_seconds: true)
select_year(14, prompt: 'Choose year')
select_year(Date.today, field_name: 'birth')
select_year(Date.today, start_year: 1992, end_year: 2007)
select_year(Date.today, start_year: 2005, end_year: 1900)
send_data buffer
send_data generate_tgz('dir'), filename: 'dir.tgz'
send_data image.data, type: image.content_type, disposition: 'inline'
send_file '/path/to.jpeg', type: 'image/jpeg', disposition: 'inline'
send_file '/path/to.zip'
set default delimiter to '_'
set the association by id, directly
set the q value to the max of the two
set up before_action, prepend_before_action, skip_before_action, etc.
set_callback :save, :before_method
sets a connection handler local to the current thread, and
setting time_zone_aware_attributes causes the types to change.
setup do ActiveRecord::LogSubscriber.attach_to(:active_record) end
shift ARGV so IRB doesn't freak
should be all good w/ a custom sequence name
should delete created record as otherwise disable_referential_integrity will try to enable constraints after executed block and will fail (at least on Oracle)
should give you
should not do 1 query per subclass
should not try to assign and persist created_at, updated_at
should still be unsafe
should update when assigning a new record
should update when assigning a saved record
should wake up all group1
should wake up everyone remaining
shouldn't matter -- 0 max queue
shows count of topics and loops after loading the query should not trigger extra queries either.
significant forced to false
silence libxml, exceptions will do
silence verbose schema loading
simple escapes (above)
simulate application existence
simulate bad fixture or column with no default
simulate normalizing PATH_INFO
since there are no parens, warning message is for 'consistent' style
singleton class body
skip postgresql casts
skip safe assignment nodes if safe assignment is allowed
skip the comparison instance
skip the last migration if we're headed down, but not ALL the way down
skip the primary key
skip this test if default_dir is the only directory on Gem.path
skip_before_action :fire_flash
skip_before_action :verify_authenticity_token
skip_bundle is only about running bundle install, ensure the Gemfile is still generated.
so block binding catches it
so fixtures aren't loaded into that environment
so is this',
so the when nodes count.
some Nokia phone browsers omit the space after the semicolon separator.
some configuration
some developers have grown accustomed to using comma in cookie values.
some important methods on Module and Class
some logic',
some of the listeners might have state
some problem',
something do
something',
sometimes tests on Oracle fail if ORDER BY is not provided therefore add always :order with :first
sparse comment',
special.yml takes precedence
specify the one exception to double render rule - render_to_string followed by render
sponsorable_type column might be declared NOT NULL
springs forward to 3AM
sqlite dose not support CREATE, INSERT, and DELETE for VIEW
sqlite3 databases should be able to support any type and not just the ones mentioned in the native_database_types.
sqlite3 defaults to UTF-8 encoding
squelch a warning
standard offset -0300
standard offset -0500
still valid because validation only applies on 'create'
strategy for building urls to send to the client
stream_from "some_channel"
strip AUTO_INCREMENT
strip COMMENT
strip create_definitions and partition_options
strip out any leading schema name
stub the authenticity token
subdir does not look for Ruby files, but its parent tmpdir does.
substitution
subtracting 1 sec goes back to 1:59:59AM EDT
subtracting 1 second takes goes back to 1:59:59AM EST
sucker_punch 1.0 API
sucker_punch 2.0 API
sudo su postgres -c "pg_ctl restart -D /opt/local/var/db/postgresql91/defaultdb/ -m fast"
support for highlighting, but needs support for the very non-standard "code fences with line highlights" extension).
support methods for deep transforming nested hashes and arrays
support polymorphic belongs_to as "label (Type)"
suppress the log
suppress(ZeroDivisionError) do 1/0 puts 'This code is NOT reached' end
t.change(:name, :string, limit: 80) t.change(:description, :text)
t.change_default(:qualification, 'new') t.change_default(:authorized, 1) t.change_default(:status, from: nil, to: "draft")
t.column(:name, :string)
t.foreign_key(:authors)
t.json 'settings'
t.references(:user) t.belongs_to(:supplier, foreign_key: true)
t.remove(:qualification) t.remove(:qualification, :experience)
t.remove_references(:user) t.remove_belongs_to(:supplier, polymorphic: true)
t.remove_timestamps
t.rename(:description, :name)
t.rename_index(:user_id, :account_id)
t.string(:goat) t.string(:goat, :sheep)
t.timestamps end
t.timestamps null: false
t.timestamps(null: false)
table name is 29 chars, the standard sequence name will be 33 chars and should be shortened
table_joins is an array of arel joins which might conflict with the aliases we assign here
tables currently returns both tables and views.
tables is deprecated without replacement.
take all the connections
take format into account
taking from loaded Relation
taking from unloaded Relation
teardown do ...
temporary change to the topic object
ten: one: Ten other: Tens hundred: Hundred
test "find" do assert_equal "Ruby on Rails", web_sites(:rubyonrails).name end
test "the truth" do assert true end
test "verify something" do ...
test a more aggressive before_destroy  doesn't destroy the habtm joins and still throws the exception
test a normal before_destroy doesn't destroy the habtm joins
test both has_many and has_and_belongs_to_many
test combination of dates and escaped or unicode encoded data in arrays
test creation
test generating application's route from engine
test generating application's route from engine with default_url_options
test generating engine's route from application
test generating engine's route from application with default_url_options
test generating engine's route from engine
test generating engine's route from engine with default_url_options
test generating engine's route from other engine
test generating engine's route from other engine with default_url_options
test if attributes set as part of after_initialize are duped correctly
test if saved clone object differs from original
test if the attribute values have been duped
test if the attributes have been duped
test including all post types at once
test including post_types together
test merging in both directions
test named routes like foo_path and foos_path map to the correct options.
test polymorphic routes
test resetting sequences in odd tables in PostgreSQL
test that asset path will not get script_name when generated in the engine
test that correct path is generated for the same polymorphic_path call in an engine
test that this wasn't a fluke and using an incorrect order results in an exception
test that we're failing because the current Arel's engine doesn't support UPDATE ORDER BY queries is using subselects instead
test the 0 edge case
test updating
test with a prime
test with offset
test/unit backwards compatibility methods
test2 Copyright 2015 Acme Inc.
testing against to_s(:db) representation because either a Time or a DateTime might be returned, depending on platform
tests AppGenerator
tests WidgetController tests :widget tests 'widget'
tests the arguments modification free version of define_hash_access
tests the use of dup in url_for
that's the correct behavior since we don't want to break the `class_attribute` inheritance
the 'pattern-matching' expression may be a composite which contains an arbitrary number of sub-expressions
the actual attribute here is name, title is an alias setup via alias_attribute
the attribute may be an aliased attribute
the author id of the post should be the id we set
the callback will be called for all "sql.active_record" events instrumented during the execution of the block.
the column doesn't have to be declared NOT NULL
the debug_assets params isn't used if compile is off
the first query is triggered because there are no topics yet.
the following functions were added to DRY test cases
the header is part of the HTML page, so we don't construct it here.
the helpers are made protected by default--we make them public for easier access during testing and troubleshooting.
the kernel of the whole test is here, everything else is just scaffolding, this latch will not be released unless conn.
the last child node determines the value of the parent
the quoting here will reveal any double quoting issues in change_column's interaction with the column method in the adapter
the repro requires that there are no evented subscribers for the "foo" event, so we have to duplicate some of the setup code
the response can be built.
the string we're going to sprintf our values against, with standardized column widths
the user would see the usage message aligned against the left margin.
the variable could evaluate to an array
then dump all non-primary key columns
there can only be one group of optional arguments
there is no ambiguity here
this block can't be easily moved into attempt_to_checkout_all_existing_connections's rescue block, because doing so would put it outside of synchronize section, without being in a critical section thread_report might become inaccurate
this branch is reached by two tests:
this can fail on adapters which require ORDER BY expressions to be included in the SELECT expression if the reorder clauses are not correctly handled
this controller exists in the admin namespace as well which is the only difference from previous test
this cop does not handle spaces after a ternary operator, which are instead handled by Style/SpaceAroundOperators.
this is a correctly done double-checked locking idiom (Concurrent::Map's lookups have volatile semantics)
this is a sad parse error
this is accepted',
this is correctly done double-checked locking (Concurrent::Map's lookups have volatile semantics)
this is safe to do, because .dupped ConnectionSpecification also auto-dups its config
this lets us do YAML defaults and not have an extra fixture entry
this method is quite imperfect and can be fooled to do much better, we would need to do global analysis of the whole codebase
this method must only be called while holding connection pool's mutex
this modifies the passed request_env directly
this next line will fail if the attribute methods module is generated lazily after the association methods module is generated
this should be overridden by concrete adapters
this should wake up the waiting threads one by one in order
this tests that this job class doesn't get its adapter set.
this thing was done because of a bug',
this triggers action_methods
this would usually return "abstract_controller/testing/overriding_local_prefixes"
threads that successfully got a connection
throw the count off by 1
time is in the "spring forward" hour gap, so we're moving the time forward one hour and trying again
time-stamp H(time-stamp ":" ETag ":" private-key)
time_select("article", "start_time", include_seconds: true)
time_select("article", "sunrise")
time_zone_select( "user", "time_zone", ActiveSupport::TimeZone.all.sort, model: ActiveSupport::TimeZone)
time_zone_select( "user", "time_zone", nil, include_blank: true)
time_zone_select( "user", 'time_zone', /Australia/)
to can be combined" do
to ensure that session requirements in setup are persisted in the tests
to load all instances of bulbs
to make sure layouts don't interfere
to see if strip_insignificant_zeros is true
to work in contexts like rspec before(:all)
to_complete -- Run after a work run that has reloaded.
to_json is being invoked directly, use ActiveSupport's encoder
to_prepare -- Run once at application startup, and also from +to_run+.
to_run -- Run before a work run that is reloading.
to_s in an interpolation with several expressions' do
to_s in interpolation' do
to_s useful for debugging' do
to_s with arguments in an interpolation' do
to_time_in_current_zone' do
to_xml and passes the options, where :root is key" do
token   - String token.
touch the app so the logger is set up
touch the parents as we are not calling the after_save callbacks
track any join tables we need to insert later
transmit message end end end
true, false, or :no_instances
truncate("And they found that many people were sleeping better.", length: 25, omission: '...
try loading the class/module
twz is created for 3:30AM
twz is created for 3AM
unicode char escape
unicorn_rails --config-file unicorn.config.rb
unshift" do
unwrap the negated portion of the condition (a send node)
url_for, you must include routing helpers explicitly.
use Ruby's default start value
use UTC offset
use VARCHAR2(4000) instead of CLOB datatype as CLOB data type has many limitations in Oracle SELECT WHERE clause which causes many unit test failures
use a timeout to prevent it stalling indefinitely
use count query
use indent from Style/IndentationWidth
use indentation width from Style/IndentationWidth
use indentation with from Style/IndentationWidth
use loaded (no query)
use native attr_* methods as they are faster on some Ruby implementations
use normal delegation to record the block
use only cops that link to a style guide if requested
use the faster _get when dealing with OrderedOptions
use timezone which does not observe DST.
use_renderers :json
used by all associations.
user.update_columns(last_request_at: Time.current)
uses "nulls first" like construction
uses sql function with multiple arguments
using a copy as we need the drop_table method to continue to work for the ensure block of the test
using an exception class that is not a StandardError subclass on purpose
usually a majority of template look ups return nothing, use this canonical preallocated array to save memory
uuid_from_hash always generates the same UUID for a given name and namespace combination.
valid as both CP-1252 and UTF-8, but with different interpretations.
valid key passed
validate :instance_validations
validate :instance_validations, on: :create
validate :must_be_friends
validates :name, title: true end
validates :title, presence: true, title: true end
validates_acceptance_of: generate_message(attr_name, :accepted, message: custom_message)
validates_associated :pages, :library end
validates_confirmation_of: generate_message(attr_name, :confirmation, message: custom_message)
validates_exclusion_of: generate_message(attr_name, :exclusion, message: custom_message, value: value)
validates_format_of:  generate_message(attr_name, :invalid, message: custom_message, value: value)
validates_inclusion_of: generate_message(attr_name, :inclusion, message: custom_message, value: value)
validates_length_of :name, maximum: 6
validates_length_of: generate_message(attr, :too_long, message: custom_message, count: option_value.end)
validates_length_of: generate_message(attr, :too_short, default: custom_message, count: option_value.begin)
validates_length_of: generate_message(attr, :wrong_length, message: custom_message, count: option_value)
validates_numericality_of: generate_message(attr_name, :not_a_number, value: raw_value, message: custom_message)
validates_numericality_of: generate_message(attr_name, option, value: raw_value, default: custom_message)
validates_presence_of :name
validates_presence_of :name validates_inclusion_of :age, in: 0..99 end
validates_presence_of :name, strict: true end
validates_presence_of: generate_message(attr, :blank, message: custom_message)
validates_with MyValidator validates_with OtherValidator, on: :create validates_with StrictValidator, strict: true end
validates_with MyValidator validates_with OtherValidator, on: :create validates_with StrictValidator, strict: true validate :cannot_be_robot
value:: Value to be associated with key.
verify that the options passed in have not changed from the original ones
wait for first_thread to get in queue
wait for second_thread to get in queue
wait for stuck_thread to get in queue
wait for the events to fire
wait until the 'other process' has the lock
wake up any remaining sleepers
warm the cache
warm up habtm cache
warm up the habtm cache
we can add data until it's actually written, which happens on `each`
we care only about `call` methods
we care only for single line blocks
we check if the prev and current lines are empty
we correctly register "Foo" as being autoloaded.
we do an argument count check to reduce false positives
we don't want a Time.local instance enforcing its own DST rules as well, so transfer time values to a utc constructor if necessary
we have 3 columns
we have already seen a wildcard with this name before so the value it matched the first time will already be stored in a temp.
we haven't checked yet
we haven't observed any specific style yet
we must actually delete prefix segment keys to avoid passing them to next url_for
we need to be wary of comments since they don't show up in the tokens
we only want to indent relative to the receiver when the method called looks like a setter
we pass in the new_xml to the helper so it doesn't call anything on the original builder
we should only check core Date class (`Date` or `::Date`)
we should only check core class (`DateTime`/`Time` or `::Date`/`::DateTime`)
we should probably have a better way to indicate the query was cached
we still have 3 columns in the cache
we want resulting call to be parenthesized if arg already includes one or more sets of parens, don't add more or if method call already used parens, again, don't add more
we want to make sure nobody is sneaking a netmask in
we will catch this in the `casgn` branch above
when out of range of Time, returns a DateTime
when routes are inside application class definition they should not be reloaded when engine's routes file has changed
when_needed - only enforce an encoding comment if there are non ASCII characters, otherwise report an offense always - enforce encoding comment in all files never - enforce no encoding comment in all files
where MyNewMigration is the name of your migration.
where time-stamp is a server-generated time or other non-repeating value, ETag is the value of the HTTP ETag header associated with the requested entity, and private-key is data known only to the server.
whether this behavior is meaningful when excerpt_string is not to be appended is questionable.
which may be handy.
which spans a few lines',
which will work similarly to formats and MIME types negotiation.
while (something) end
while(something) end
will get expanded to
will use SQL LOWER function before comparison, unless it detects a case insensitive collation
with anything inside, captured as STATIC
with arguments
with include_seconds
with the include, will retrieve only developers for the given project
with_backend block" do
with_backend should be thread-safe" do
without arguments
without dup, additional (and possibly unwanted) values will be present in the options (eg.
without include_seconds
without using SQL directly, so your applications can more easily support multiple databases.
would become:
would produce a form with fields whose initial state reflect the current values of the attributes of +post+.
would produce something like:
would set the session cookie to expire automatically 14 days after creation.
wouldn't update roles.
wouldn't update the +avatar+ field.
wouldn't update the flag.
wrap_parameters Person wraps parameters by determining the wrapper key from Person class (+person+, in this case) and the list of attribute names
wrap_parameters false disables parameters wrapping for this controller altogether.
wrong mtime from the future
x_sendfile_header middleware
xampp for linux
xmlschema date notation
yield all the assignments which must come after `assignment` (due to dependencies on the previous value of the assigned var)
you can call this:
you define a class that extends this module:
