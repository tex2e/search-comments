" double quote string "
"" can mess up subobject access and is used by MongoDB internally.
"' URL could not be accessed: " .
"0" bit is found at position 7.
"123") into integer keys.
"123") into integers.
"4" as key is taken as key 4 9.2 as key is truncated to key 9 "12.8" as key is treated as key with that string, NOT truncated and made int 12 NULL as key becomes key ""
"G" for GET, "P" for POST, "C" for COOKIE, "S" for string, "L" for list, and "I" for the whole list (will return array).
"Russia" in Cyrillic with Latin spoof characters
"_" taken as default prefix
"a", // This will make the test pass
"as Circle" is redundant
"auto" is expanded to "ASCII,JIS,UTF-8,EUC-JP,SJIS"
"auto" may be used, which expands to "ASCII,JIS,UTF-8,EUC-JP,SJIS".
"comment" NodeList, NamedNodeMap
"domain" - The domain of the cookie.
"double quoted string"
"frameworks" directory will be created automatically on first git clone of a framework.
"hi" gzdeflated
"httponly" - The cookie can only be accessed through the HTTP protocol.
"man 3 clock_getres" for more details.
"man 3 clock_gettime" for more details.
"path" - The path where information is stored.
"secure" - The cookie should only be sent over secure connections.
"this is a hebrew string"
"this is an arabic string"
' and " are escaped only if they are not paired.
' coverage for ' .
' is broken.
'" listed for update is not installed.
'' as linkname
'*' means to return all mailboxes.
'**a ***b / **** *****
'a' gzdeflated
'e' is the base of the natural system of logarithms, or approximately 2.718282.
'false' sets the parser to strictly parse strings into dates.
'include_path' set to true
'input' array containing objects as elements
'input' array containing references to above variables
'parent' doesn't change 'static'
'php' or 'soapval'
'self' doesn't change 'static'
'this' as a method parameter is treated as the 'static' type when type checking within the given method.
'wrogn param' is converted to true
'z' must be set explicitly in this function.
( excerpt from http://php.net/manual/en/appenditerator.append.php )  Appends an iterator.
( excerpt from http://php.net/manual/en/appenditerator.construct.php )  Constructs an AppendIterator.
( excerpt from http://php.net/manual/en/appenditerator.current.php )  Gets the current value.
( excerpt from http://php.net/manual/en/appenditerator.getarrayiterator.php )  This method gets the ArrayIterator that is used to store the iterators added with AppendIterator::append().
( excerpt from http://php.net/manual/en/appenditerator.getinneriterator.php )  This method returns the current inner iterator.
( excerpt from http://php.net/manual/en/appenditerator.getiteratorindex.php )  Gets the index of the current inner iterator.
( excerpt from http://php.net/manual/en/appenditerator.key.php )  Get the current key.
( excerpt from http://php.net/manual/en/appenditerator.next.php )  Moves to the next element.
( excerpt from http://php.net/manual/en/appenditerator.rewind.php )  Rewind to the first element of the first inner Iterator.
( excerpt from http://php.net/manual/en/appenditerator.valid.php )  Checks validity of the current element.
( excerpt from http://php.net/manual/en/arrayaccess.offsetexists.php )  Whether or not an offset exists.
( excerpt from http://php.net/manual/en/arrayaccess.offsetget.php )  Returns the value at specified offset.
( excerpt from http://php.net/manual/en/arrayaccess.offsetset.php )  Assigns a value to the specified offset.
( excerpt from http://php.net/manual/en/arrayaccess.offsetunset.php )  Unsets an offset.
( excerpt from http://php.net/manual/en/arrayiterator.append.php )  Appends value as the last element.
( excerpt from http://php.net/manual/en/arrayiterator.asort.php )  Sorts an array by values.
( excerpt from http://php.net/manual/en/arrayiterator.construct.php )  Constructs an ArrayIterator object.
( excerpt from http://php.net/manual/en/arrayiterator.count.php )  Gets the number of elements in the array, or the number of public properties in the object.
( excerpt from http://php.net/manual/en/arrayiterator.current.php )  Get the current array entry.
( excerpt from http://php.net/manual/en/arrayiterator.getarraycopy.php )  Get a copy of an array.
( excerpt from http://php.net/manual/en/arrayiterator.getflags.php )  Get the current flags.
( excerpt from http://php.net/manual/en/arrayiterator.ksort.php )  Sorts an array by the keys.
( excerpt from http://php.net/manual/en/arrayiterator.natcasesort.php )  Sort the entries by values using a case insensitive "natural order" algorithm.
( excerpt from http://php.net/manual/en/arrayiterator.natsort.php )  Sort the entries by values using "natural order" algorithm.
( excerpt from http://php.net/manual/en/arrayiterator.next.php )  The iterator to the next entry.
( excerpt from http://php.net/manual/en/arrayiterator.offsetexists.php )  Checks if the offset exists.
( excerpt from http://php.net/manual/en/arrayiterator.offsetget.php )  Gets the value from the provided offset.
( excerpt from http://php.net/manual/en/arrayiterator.offsetset.php )  Sets a value for a given offset.
( excerpt from http://php.net/manual/en/arrayiterator.offsetunset.php )  Unsets a value for an offset.
( excerpt from http://php.net/manual/en/arrayiterator.rewind.php )  This rewinds the iterator to the beginning.
( excerpt from http://php.net/manual/en/arrayiterator.setflags.php )  Sets behaviour flags.
( excerpt from http://php.net/manual/en/arrayiterator.uasort.php )  Sort the entries by values using user defined function.
( excerpt from http://php.net/manual/en/arrayiterator.uksort.php )  Sort the entries by key using user defined function.
( excerpt from http://php.net/manual/en/arrayiterator.valid.php )  Checks if the array contains any more entries.
( excerpt from http://php.net/manual/en/arrayobject.append.php )  Appends a new value as the last element.
( excerpt from http://php.net/manual/en/arrayobject.asort.php )  Sorts the entries such that the keys maintain their correlation with the entries they are associated with.
( excerpt from http://php.net/manual/en/arrayobject.construct.php )  This constructs a new array object.
( excerpt from http://php.net/manual/en/arrayobject.count.php )  Get the number of public properties in the ArrayObject.
( excerpt from http://php.net/manual/en/arrayobject.exchangearray.php )  Exchange the current array with another array or object.
( excerpt from http://php.net/manual/en/arrayobject.getarraycopy.php )  Exports the ArrayObject to an array.
( excerpt from http://php.net/manual/en/arrayobject.getflags.php )  Gets the behavior flags of the ArrayObject.
( excerpt from http://php.net/manual/en/arrayobject.getiterator.php )  Create a new iterator from an ArrayObject instance.
( excerpt from http://php.net/manual/en/arrayobject.getiteratorclass.php )  Gets the class name of the array iterator that is used by ArrayObject::getIterator().
( excerpt from http://php.net/manual/en/arrayobject.ksort.php )  Sorts the entries by key, maintaining key to entry correlations.
( excerpt from http://php.net/manual/en/arrayobject.natcasesort.php )  This method is a case insensitive version of ArrayObject::natsort.
( excerpt from http://php.net/manual/en/arrayobject.natsort.php )  This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations.
( excerpt from http://php.net/manual/en/arrayobject.offsetset.php )  Sets the value at the specified index to newval.
( excerpt from http://php.net/manual/en/arrayobject.offsetunset.php )  Unsets the value at the specified index.
( excerpt from http://php.net/manual/en/arrayobject.serialize.php )  Serializes an ArrayObject.
( excerpt from http://php.net/manual/en/arrayobject.setflags.php )  Set the flags that change the behavior of the ArrayObject.
( excerpt from http://php.net/manual/en/arrayobject.setiteratorclass.php )  Sets the classname of the array iterator that is used by ArrayObject::getIterator().
( excerpt from http://php.net/manual/en/arrayobject.uasort.php )  This function sorts the entries such that keys maintain their correlation with the entry that they are associated with, using a user-defined comparison function.
( excerpt from http://php.net/manual/en/arrayobject.uksort.php )  This function sorts the keys of the entries using a user-supplied comparison function.
( excerpt from http://php.net/manual/en/arrayobject.unserialize.php )  Unserializes a serialized ArrayObject.
( excerpt from http://php.net/manual/en/class.appenditerator.php )  An Iterator that iterates over several iterators one after the other.
( excerpt from http://php.net/manual/en/class.arrayaccess.php )  Interface to provide accessing objects as arrays.
( excerpt from http://php.net/manual/en/class.arrayiterator.php )  This iterator allows unsetting and modifying values and keys while iterating over Arrays and Objects.
( excerpt from http://php.net/manual/en/class.arrayobject.php )  This class allows objects to work as arrays.
( excerpt from http://php.net/manual/en/class.badfunctioncallexception.php )  Exception thrown if a callback refers to an undefined function or if some arguments are missing.
( excerpt from http://php.net/manual/en/class.badmethodcallexception.php )  Exception thrown if a callback refers to an undefined method or if some arguments are missing.
( excerpt from http://php.net/manual/en/class.cachingiterator.php )  This object supports cached iteration over another iterator.
( excerpt from http://php.net/manual/en/class.countable.php )  Classes implementing Countable can be used with the count() function.
( excerpt from http://php.net/manual/en/class.directory.php )  Instances of Directory are created by calling the dir() function, not by the new operator.
( excerpt from http://php.net/manual/en/class.directoryiterator.php )  The DirectoryIterator class provides a simple interface for viewing the contents of filesystem directories.
( excerpt from http://php.net/manual/en/class.domainexception.php )  Exception thrown if a value does not adhere to a defined valid data domain.
( excerpt from http://php.net/manual/en/class.domexception.php )  DOM operations raise exceptions under particular circumstances, i.e., when an operation is impossible to perform for logical reasons.
( excerpt from http://php.net/manual/en/class.emptyiterator.php )  The EmptyIterator class for an empty iterator.
( excerpt from http://php.net/manual/en/class.errorexception.php )  An Error Exception.
( excerpt from http://php.net/manual/en/class.exception.php )  Exception is the base class for all Exceptions.
( excerpt from http://php.net/manual/en/class.filesystemiterator.php )  The Filesystem iterator
( excerpt from http://php.net/manual/en/class.filteriterator.php )  This abstract iterator filters out unwanted values.
( excerpt from http://php.net/manual/en/class.infiniteiterator.php )  The InfiniteIterator allows one to infinitely iterate over an iterator without having to manually rewind the iterator upon reaching its end.
( excerpt from http://php.net/manual/en/class.invalidargumentexception.php )  Exception thrown if an argument does not match with the expected value.
( excerpt from http://php.net/manual/en/class.iterator.php )  Interface for external iterators or objects that can be iterated themselves internally.
( excerpt from http://php.net/manual/en/class.iteratoraggregate.php )  Interface to create an external Iterator.
( excerpt from http://php.net/manual/en/class.iteratoriterator.php )  This iterator wrapper allows the conversion of anything that is Traversable into an Iterator.
( excerpt from http://php.net/manual/en/class.lengthexception.php )  Exception thrown if a length is invalid.
( excerpt from http://php.net/manual/en/class.limititerator.php )  The LimitIterator class allows iteration over a limited subset of items in an Iterator.
( excerpt from http://php.net/manual/en/class.logicexception.php )  Exception that represents error in the program logic.
( excerpt from http://php.net/manual/en/class.norewinditerator.php )  This iterator cannot be rewound.
( excerpt from http://php.net/manual/en/class.outeriterator.php )  Classes implementing OuterIterator can be used to iterate over iterators.
( excerpt from http://php.net/manual/en/class.outofboundsexception.php )  Exception thrown if a value is not a valid key.
( excerpt from http://php.net/manual/en/class.outofrangeexception.php )  Exception thrown when an illegal index was requested.
( excerpt from http://php.net/manual/en/class.overflowexception.php )  Exception thrown when adding an element to a full container.
( excerpt from http://php.net/manual/en/class.pdoexception.php )  Represents an error raised by PDO.
( excerpt from http://php.net/manual/en/class.phar.php )  The Phar class provides a high-level interface to accessing and creating phar archives.
( excerpt from http://php.net/manual/en/class.phardata.php )  The PharData class provides a high-level interface to accessing and creating non-executable tar and zip archives.
( excerpt from http://php.net/manual/en/class.pharexception.php )  The PharException class provides a phar-specific exception class for try/catch blocks.
( excerpt from http://php.net/manual/en/class.pharfileinfo.php )  The PharFileInfo class provides a high-level interface to the contents and attributes of a single file within a phar archive.
( excerpt from http://php.net/manual/en/class.rangeexception.php )  Exception thrown to indicate range errors during program execution.
( excerpt from http://php.net/manual/en/class.recursivearrayiterator.php )  This iterator allows unsetting and modifying values and keys while iterating over Arrays and Objects in the same way as the ArrayIterator.
( excerpt from http://php.net/manual/en/class.recursivecachingiterator.php )  ...
( excerpt from http://php.net/manual/en/class.recursivedirectoryiterator.php )  The RecursiveDirectoryIterator provides an interface for iterating recursively over filesystem directories.
( excerpt from http://php.net/manual/en/class.recursivefilteriterator.php )  This abstract iterator filters out unwanted values for a RecursiveIterator.
( excerpt from http://php.net/manual/en/class.recursiveiterator.php )  Classes implementing RecursiveIterator can be used to iterate over iterators recursively.
( excerpt from http://php.net/manual/en/class.recursiveiteratoriterator.php )  Can be used to iterate through recursive iterators.
( excerpt from http://php.net/manual/en/class.recursiveregexiterator.php )  This recursive iterator can filter another recursive iterator via a regular expression.
( excerpt from http://php.net/manual/en/class.recursivetreeiterator.php )  Allows iterating over a RecursiveIterator to generate an ASCII graphic tree.
( excerpt from http://php.net/manual/en/class.reflection.php )  The reflection class.
( excerpt from http://php.net/manual/en/class.reflectionclass.php )  The ReflectionClass class reports information about a class.
( excerpt from http://php.net/manual/en/class.reflectionexception.php )  The ReflectionException class.
( excerpt from http://php.net/manual/en/class.reflectionextension.php )  The ReflectionExtension class reports information about an extension.
( excerpt from http://php.net/manual/en/class.reflectionfunction.php )  The ReflectionFunction class reports information about a function.
( excerpt from http://php.net/manual/en/class.reflectionfunctionabstract.php )  A parent class to ReflectionFunction and ParentMethod.
( excerpt from http://php.net/manual/en/class.reflectionmethod.php )  The ReflectionMethod class reports information about a method.
( excerpt from http://php.net/manual/en/class.reflectionobject.php )  The ReflectionObject class reports information about an object.
( excerpt from http://php.net/manual/en/class.reflectionparameter.php )  The ReflectionParameter class retrieves information about function's or method's parameters.
( excerpt from http://php.net/manual/en/class.reflectionproperty.php )  The ReflectionProperty class reports information about classes properties.
( excerpt from http://php.net/manual/en/class.reflectiontype.php )  The ReflectionType class reports information about a function's parameters or return type.
( excerpt from http://php.net/manual/en/class.reflector.php )  Reflector is an interface implemented by all exportable Reflection classes.
( excerpt from http://php.net/manual/en/class.runtimeexception.php )  Exception thrown if an error which can only be found on runtime occurs.
( excerpt from http://php.net/manual/en/class.seekableiterator.php )  The Seekable iterator.
( excerpt from http://php.net/manual/en/class.serializable.php )  Interface for customized serializing.
( excerpt from http://php.net/manual/en/class.sessionhandlerinterface.php )  SessionHandlerInterface is an interface which defines a prototype for creating a custom session handler.
( excerpt from http://php.net/manual/en/class.soapfault.php )  Represents a SOAP fault.
( excerpt from http://php.net/manual/en/class.spldoublylinkedlist.php )  The SplDoublyLinkedList class provides the main functionalities of a doubly linked list.
( excerpt from http://php.net/manual/en/class.splfileinfo.php )  The SplFileInfo class offers a high-level object oriented interface to information for an individual file.
( excerpt from http://php.net/manual/en/class.splfileobject.php )  The SplFileObject class offers an object oriented interface for a file.
( excerpt from http://php.net/manual/en/class.splfixedarray.php )  The SplFixedArray class provides the main functionalities of array.
( excerpt from http://php.net/manual/en/class.splheap.php )  The SplHeap class provides the main functionalities of a Heap.
( excerpt from http://php.net/manual/en/class.splmaxheap.php )  The SplMaxHeap class provides the main functionalities of a heap, keeping the maximum on the top.
( excerpt from http://php.net/manual/en/class.splminheap.php )  The SplMinHeap class provides the main functionalities of a heap, keeping the minimum on the top.
( excerpt from http://php.net/manual/en/class.splobjectstorage.php )  The SplObjectStorage class provides a map from objects to data or, by ignoring data, an object set.
( excerpt from http://php.net/manual/en/class.splobserver.php )  The SplObserver interface is used alongside SplSubject to implement the Observer Design Pattern.
( excerpt from http://php.net/manual/en/class.splpriorityqueue.php )  The SplPriorityQueue class provides the main functionalities of an prioritized queue, implemented using a max heap.
( excerpt from http://php.net/manual/en/class.splsubject.php )  The SplSubject interface is used alongside SplObserver to implement the Observer Design Pattern.
( excerpt from http://php.net/manual/en/class.spltempfileobject.php )  The SplTempFileObject class offers an object oriented interface for a temporary file.
( excerpt from http://php.net/manual/en/class.traversable.php )  Interface to detect if a class is traversable using foreach.
( excerpt from http://php.net/manual/en/class.underflowexception.php )  Exception thrown when performing an invalid operation on an empty container, such as removing an element.
( excerpt from http://php.net/manual/en/class.unexpectedvalueexception.php )  Exception thrown if a value does not match with a set of values.
( excerpt from http://php.net/manual/en/countable.count.php )  This method is executed when using the count() function on an object implementing Countable.
( excerpt from http://php.net/manual/en/directoryiterator.construct.php )  Constructs a new directory iterator from a path.
( excerpt from http://php.net/manual/en/directoryiterator.current.php )  Get the current DirectoryIterator item.
( excerpt from http://php.net/manual/en/directoryiterator.isdot.php )  Determines if the current DirectoryIterator item is a directory and either .
( excerpt from http://php.net/manual/en/directoryiterator.key.php )  Get the key for the current DirectoryIterator item.
( excerpt from http://php.net/manual/en/directoryiterator.next.php )  Move forward to the next DirectoryIterator item.
( excerpt from http://php.net/manual/en/directoryiterator.rewind.php )  Rewind the DirectoryIterator back to the start.
( excerpt from http://php.net/manual/en/directoryiterator.seek.php )  Seek to a given position in the DirectoryIterator.
( excerpt from http://php.net/manual/en/directoryiterator.tostring.php )  Get the file name of the current DirectoryIterator item.
( excerpt from http://php.net/manual/en/directoryiterator.valid.php )  Check whether current DirectoryIterator position is a valid file.
( excerpt from http://php.net/manual/en/emptyiterator.current.php )  This function must not be called.
( excerpt from http://php.net/manual/en/emptyiterator.key.php )  This function must not be called.
( excerpt from http://php.net/manual/en/emptyiterator.next.php )  No operation, nothing to do.
( excerpt from http://php.net/manual/en/emptyiterator.rewind.php )  No operation, nothing to do.
( excerpt from http://php.net/manual/en/emptyiterator.valid.php )  The EmptyIterator valid() method.
( excerpt from http://php.net/manual/en/errorexception.construct.php )  Constructs the Exception.
( excerpt from http://php.net/manual/en/errorexception.getseverity.php )  Returns the severity of the exception.
( excerpt from http://php.net/manual/en/exception.construct.php )  Constructs the Exception.
( excerpt from http://php.net/manual/en/exception.getcode.php )  Returns the Exception code.
( excerpt from http://php.net/manual/en/exception.getfile.php )  Get the name of the file the exception was created.
( excerpt from http://php.net/manual/en/exception.getline.php )  Get line number where the exception was created.
( excerpt from http://php.net/manual/en/exception.getmessage.php )  Returns the Exception message.
( excerpt from http://php.net/manual/en/exception.getprevious.php )  Returns previous Exception (the third parameter of Exception::__construct()).
( excerpt from http://php.net/manual/en/exception.gettrace.php )  Returns the Exception stack trace.
( excerpt from http://php.net/manual/en/exception.gettraceasstring.php )  Returns the Exception stack trace as a string.
( excerpt from http://php.net/manual/en/exception.tostring.php )  Returns the string representation of the exception.
( excerpt from http://php.net/manual/en/filesystemiterator.construct.php )  Constructs a new filesystem iterator from the path.
( excerpt from http://php.net/manual/en/filesystemiterator.current.php )  Get file information of the current element.
( excerpt from http://php.net/manual/en/filesystemiterator.getflags.php )  Gets the handling flags, as set in FilesystemIterator::__construct() or FilesystemIterator::setFlags().
( excerpt from http://php.net/manual/en/filesystemiterator.next.php )  Move to the next file.
( excerpt from http://php.net/manual/en/filesystemiterator.rewind.php )  Rewinds the directory back to the start.
( excerpt from http://php.net/manual/en/filesystemiterator.setflags.php )  Sets handling flags.
( excerpt from http://php.net/manual/en/filteriterator.accept.php )  Returns whether the current element of the iterator is acceptable through this filter.
( excerpt from http://php.net/manual/en/filteriterator.construct.php )  Constructs a new FilterIterator, which consists of a passed in iterator with filters applied to it.
( excerpt from http://php.net/manual/en/filteriterator.current.php )  Get the current element value.
( excerpt from http://php.net/manual/en/filteriterator.key.php )  Get the current key.
( excerpt from http://php.net/manual/en/function.filter-input-array.php )  This function is useful for retrieving many values without repetitively calling filter_input().
( excerpt from http://php.net/manual/en/function.filter-var-array.php )  This function is useful for retrieving many values without repetitively calling filter_var().
( excerpt from http://php.net/manual/en/function.zlib-decode.php )  Uncompress any raw/gzip/zlib encoded data.
( excerpt from http://php.net/manual/en/function.zlib-encode.php )  Compress data with the specified encoding.
( excerpt from http://php.net/manual/en/infiniteiterator.next.php )  Moves the inner Iterator forward to its next element if there is one, otherwise rewinds the inner Iterator back to the beginning.
( excerpt from http://php.net/manual/en/iterator.current.php )  Returns the current element.
( excerpt from http://php.net/manual/en/iterator.key.php )  Returns the key of the current element.
( excerpt from http://php.net/manual/en/iterator.next.php )  Moves the current position to the next element.
( excerpt from http://php.net/manual/en/iterator.rewind.php )  Rewinds back to the first element of the Iterator.
( excerpt from http://php.net/manual/en/iterator.valid.php )  This method is called after Iterator::rewind() and Iterator::next() to check if the current position is valid.
( excerpt from http://php.net/manual/en/iteratoraggregate.getiterator.php )  Returns an external iterator.
( excerpt from http://php.net/manual/en/iteratoriterator.construct.php )  Creates an iterator from anything that is traversable.
( excerpt from http://php.net/manual/en/iteratoriterator.current.php )  Get the value of the current element.
( excerpt from http://php.net/manual/en/iteratoriterator.getinneriterator.php )  Get the inner iterator.
( excerpt from http://php.net/manual/en/iteratoriterator.key.php )  Get the key of the current element.
( excerpt from http://php.net/manual/en/iteratoriterator.next.php )  Forward to the next element.
( excerpt from http://php.net/manual/en/iteratoriterator.rewind.php )  Rewinds to the first element.
( excerpt from http://php.net/manual/en/iteratoriterator.valid.php )  Checks if the iterator is valid.
( excerpt from http://php.net/manual/en/limititerator.construct.php )  Constructs a new LimitIterator from an iterator with a given starting offset and maximum count.
( excerpt from http://php.net/manual/en/limititerator.getposition.php )  Gets the current zero-based position of the inner Iterator.
( excerpt from http://php.net/manual/en/limititerator.next.php )  Moves the iterator forward.
( excerpt from http://php.net/manual/en/limititerator.rewind.php )  Rewinds the iterator to the starting offset specified in LimitIterator::__construct().
( excerpt from http://php.net/manual/en/limititerator.seek.php )  Moves the iterator to the offset specified by position.
( excerpt from http://php.net/manual/en/limititerator.valid.php )  Checks whether the current element is valid.
( excerpt from http://php.net/manual/en/norewinditerator.construct.php )  Constructs a NoRewindIterator.
( excerpt from http://php.net/manual/en/norewinditerator.current.php )  Gets the current value.
( excerpt from http://php.net/manual/en/norewinditerator.key.php )  Gets the current key.
( excerpt from http://php.net/manual/en/norewinditerator.next.php )  Forwards to the next element.
( excerpt from http://php.net/manual/en/norewinditerator.rewind.php )  Prevents the rewind operation on the inner iterator.
( excerpt from http://php.net/manual/en/outeriterator.getinneriterator.php )  Returns the inner iterator for the current iterator entry.
( excerpt from http://php.net/manual/en/phar.apiversion.php )  Return the API version of the phar file format that will be used when creating phars.
( excerpt from http://php.net/manual/en/phar.cancompress.php )  This should be used to test whether compression is possible prior to loading a phar archive containing compressed files.
( excerpt from http://php.net/manual/en/phar.canwrite.php )  This static method determines whether write access has been disabled in the system php.ini via the phar.readonly ini variable.
( excerpt from http://php.net/manual/en/phar.converttodata.php )  This method is used to convert an executable phar archive to either a tar or zip file.
( excerpt from http://php.net/manual/en/phar.getmetadata.php )  Retrieve archive meta-data.
( excerpt from http://php.net/manual/en/phar.getmodified.php )  This method can be used to determine whether a phar has either had an internal file deleted, or contents of a file changed in some way.
( excerpt from http://php.net/manual/en/phar.getsignature.php )  Returns the verification signature of a phar archive in a hexadecimal string.
( excerpt from http://php.net/manual/en/phar.getsupportedcompression.php )   No parameters.
( excerpt from http://php.net/manual/en/phar.getsupportedsignatures.php )  Return array of supported signature types No parameters.
( excerpt from http://php.net/manual/en/phar.getversion.php )  Returns the API version of an opened Phar archive.
( excerpt from http://php.net/manual/en/phar.hasmetadata.php )  Returns whether phar has global meta-data set.
( excerpt from http://php.net/manual/en/phar.interceptfilefuncs.php )  instructs phar to intercept fopen(), readfile(), file_get_contents(), opendir(), and all of the stat-related functions.
( excerpt from http://php.net/manual/en/phar.isbuffering.php )  This method can be used to determine whether a Phar will save changes to disk immediately, or whether a call to Phar::stopBuffering() is needed to enable saving changes.
( excerpt from http://php.net/manual/en/phar.iscompressed.php )  No parameters.
( excerpt from http://php.net/manual/en/phar.iswritable.php )  This method returns TRUE if phar.readonly is 0, and the actual phar archive on disk is not read-only.
( excerpt from http://php.net/manual/en/phar.loadphar.php )  This can be used to read the contents of an external Phar archive.
( excerpt from http://php.net/manual/en/phar.mapphar.php )  This static method can only be used inside a Phar archive's loader stub in order to initialize the phar when it is directly executed, or when it is included in another script.
( excerpt from http://php.net/manual/en/phar.offsetexists.php )  This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a Phar archive using array access brackets.
( excerpt from http://php.net/manual/en/phar.offsetget.php )  This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a Phar archive using array access brackets.
( excerpt from http://php.net/manual/en/phar.running.php )  Returns the full path to the running phar archive.
( excerpt from http://php.net/manual/en/phar.startbuffering.php )  Although technically unnecessary, the Phar::startBuffering() method can provide a significant performance boost when creating or modifying a Phar archive with a large number of files.
( excerpt from http://php.net/manual/en/phar.stopbuffering.php )  Phar::stopBuffering() is used in conjunction with the Phar::startBuffering() method.
( excerpt from http://php.net/manual/en/phardata.addemptydir.php )  With this method, an empty directory is created with path dirname.
( excerpt from http://php.net/manual/en/phardata.addfromstring.php )  With this method, any string can be added to the tar/zip archive.
( excerpt from http://php.net/manual/en/phardata.buildfromiterator.php )  Populate a tar or zip archive from an iterator.
( excerpt from http://php.net/manual/en/phardata.compress.php )  For tar archives, this method compresses the entire archive using gzip compression or bzip2 compression.
( excerpt from http://php.net/manual/en/phardata.compressfiles.php )  For tar-based archives, this method throws a BadMethodCallException, as compression of individual files within a tar archive is not supported by the file format.
( excerpt from http://php.net/manual/en/phardata.converttodata.php )  This method is used to convert a non-executable tar or zip archive to another non-executable format.
( excerpt from http://php.net/manual/en/phardata.copy.php )  Copy a file internal to the tar/zip archive to another new file within the same archive.
( excerpt from http://php.net/manual/en/phardata.decompress.php )  For tar-based archives, this method decompresses the entire archive.
( excerpt from http://php.net/manual/en/phardata.delete.php )  Delete a file within an archive.
( excerpt from http://php.net/manual/en/phardata.extractto.php )  Extract all files within a tar/zip archive to disk.
( excerpt from http://php.net/manual/en/phardata.iswritable.php )  This method returns TRUE if the tar/zip archive on disk is not read-only.
( excerpt from http://php.net/manual/en/phardata.offsetset.php )  This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a tar/zip archive using array access brackets.
( excerpt from http://php.net/manual/en/phardata.offsetunset.php )  This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a tar/zip archive using array access brackets.
( excerpt from http://php.net/manual/en/phardata.setalias.php )  Non-executable tar/zip archives cannot have an alias, so this method simply throws an exception.
( excerpt from http://php.net/manual/en/phardata.setdefaultstub.php )  Non-executable tar/zip archives cannot have a stub, so this method simply throws an exception.
( excerpt from http://php.net/manual/en/phardata.setstub.php )  Non-executable tar/zip archives cannot have a stub, so this method simply throws an exception.
( excerpt from http://php.net/manual/en/pharfileinfo.chmod.php )  PharFileInfo::chmod() allows setting of the executable file permissions bit, as well as read-only bits.
( excerpt from http://php.net/manual/en/pharfileinfo.compress.php )  This method compresses the file inside the Phar archive using either bzip2 compression or zlib compression.
( excerpt from http://php.net/manual/en/pharfileinfo.construct.php )  This should not be called directly.
( excerpt from http://php.net/manual/en/pharfileinfo.decompress.php )  This method decompresses the file inside the Phar archive.
( excerpt from http://php.net/manual/en/pharfileinfo.delmetadata.php )  Deletes the metadata of the entry, if any.
( excerpt from http://php.net/manual/en/pharfileinfo.getcompressedsize.php )  This returns the size of the file within the Phar archive.
( excerpt from http://php.net/manual/en/pharfileinfo.getcrc32.php )  This returns the crc32() checksum of the file within the Phar archive.
( excerpt from http://php.net/manual/en/pharfileinfo.getmetadata.php )  Return meta-data that was saved in the Phar archive's manifest for this file.
( excerpt from http://php.net/manual/en/pharfileinfo.getpharflags.php )  This returns the flags set in the manifest for a Phar.
( excerpt from http://php.net/manual/en/pharfileinfo.hasmetadata.php )  Returns the metadata of a file within a phar archive.
( excerpt from http://php.net/manual/en/pharfileinfo.iscompressed.php )  This returns whether a file is compressed within a Phar archive with either Gzip or Bzip2 compression.
( excerpt from http://php.net/manual/en/pharfileinfo.iscrcchecked.php )  This returns whether a file within a Phar archive has had its CRC verified.
( excerpt from http://php.net/manual/en/pharfileinfo.setmetadata.php )  PharFileInfo::setMetadata() should only be used to store customized data in a file that cannot be represented with existing information stored with a file.
( excerpt from http://php.net/manual/en/recursivearrayiterator.getchildren.php )  Returns an iterator for the current iterator entry.
( excerpt from http://php.net/manual/en/recursivearrayiterator.haschildren.php )  Returns whether current entry is an array or an object for which an iterator can be obtained via RecursiveArrayIterator::getChildren().
( excerpt from http://php.net/manual/en/recursivecachingiterator.construct.php )  Constructs a new RecursiveCachingIterator, which consists of a passed in iterator.
( excerpt from http://php.net/manual/en/recursivedirectoryiterator.construct.php )  Constructs a RecursiveDirectoryIterator() for the provided path.
( excerpt from http://php.net/manual/en/recursivedirectoryiterator.getsubpath.php )  Gets the sub path.
( excerpt from http://php.net/manual/en/recursivedirectoryiterator.getsubpathname.php )  Gets the sub path and filename.
( excerpt from http://php.net/manual/en/recursivefilteriterator.construct.php )  Create a RecursiveFilterIterator from a RecursiveIterator.
( excerpt from http://php.net/manual/en/recursivefilteriterator.getchildren.php )  Return the inner iterator's children contained in a RecursiveFilterIterator.
( excerpt from http://php.net/manual/en/recursivefilteriterator.haschildren.php )  Check whether the inner iterator's current element has children.
( excerpt from http://php.net/manual/en/recursiveiterator.getchildren.php )  Returns an iterator for the current iterator entry.
( excerpt from http://php.net/manual/en/recursiveiterator.haschildren.php )  Returns if an iterator can be created for the current entry.
( excerpt from http://php.net/manual/en/recursiveiteratoriterator.construct.php )  Creates a RecursiveIteratorIterator from a RecursiveIterator.
( excerpt from http://php.net/manual/en/recursiveiteratoriterator.getinneriterator.php )  Gets the current active sub iterator.
( excerpt from http://php.net/manual/en/recursiveregexiterator.construct.php )  Creates a new regular expression iterator.
( excerpt from http://php.net/manual/en/recursiveregexiterator.getchildren.php )  Returns an iterator for the current iterator entry.
( excerpt from http://php.net/manual/en/recursiveregexiterator.haschildren.php )  Returns whether an iterator can be obtained for the current entry.
( excerpt from http://php.net/manual/en/reflection.export.php )  Exports a reflection.
( excerpt from http://php.net/manual/en/reflection.getmodifiernames.php )  Gets modifier names.
( excerpt from http://php.net/manual/en/reflectionclass.construct.php )  Constructs a new ReflectionClass object.
( excerpt from http://php.net/manual/en/reflectionclass.export.php )  Exports a reflected class.
( excerpt from http://php.net/manual/en/reflectionclass.functionabstract.php )  Gets the namespace name.
( excerpt from http://php.net/manual/en/reflectionclass.getabstractconstantnames.php )  Returns an array containing the names of abstract constants as both keys and values.
( excerpt from http://php.net/manual/en/reflectionclass.getattribute.php )  Returns all attributes with given key.
( excerpt from http://php.net/manual/en/reflectionclass.getattributerecursive.php )  Returns all attributes with given key from a class and its parents.
( excerpt from http://php.net/manual/en/reflectionclass.getconstant.php )  Gets the defined constant.
( excerpt from http://php.net/manual/en/reflectionclass.getconstants.php )  Gets defined constants from a class.
( excerpt from http://php.net/manual/en/reflectionclass.getconstructor.php )  Gets the constructor of the reflected class.
( excerpt from http://php.net/manual/en/reflectionclass.getdefaultproperties.php )  Gets default properties from a class (including inherited properties).
( excerpt from http://php.net/manual/en/reflectionclass.getdoccomment.php )  Gets doc comments from a class.
( excerpt from http://php.net/manual/en/reflectionclass.getendline.php )  Gets end line number from a user-defined class definition.
( excerpt from http://php.net/manual/en/reflectionclass.getextension.php )  Gets a ReflectionExtension object for the extension which defined the class.
( excerpt from http://php.net/manual/en/reflectionclass.getextensionname.php )  Gets the name of the extension which defined the class.
( excerpt from http://php.net/manual/en/reflectionclass.getfilename.php )  Gets the filename of the file in which the class has been defined.
( excerpt from http://php.net/manual/en/reflectionclass.getinterfacenames.php )  Get the interface names.
( excerpt from http://php.net/manual/en/reflectionclass.getinterfaces.php )  Gets the interfaces.
( excerpt from http://php.net/manual/en/reflectionclass.getmethod.php )  Gets a ReflectionMethod for a class method.
( excerpt from http://php.net/manual/en/reflectionclass.getmethods.php )  Gets an array of methods for the class.
( excerpt from http://php.net/manual/en/reflectionclass.getmodifiers.php )  Returns a bitfield of the access modifiers for this class.
( excerpt from http://php.net/manual/en/reflectionclass.getproperty.php )  Gets a ReflectionProperty for a class's property.
( excerpt from http://php.net/manual/en/reflectionclass.getshortname.php )  Get the short name of the function (without the namespace part).
( excerpt from http://php.net/manual/en/reflectionclass.getstartline.php )  Get the starting line number.
( excerpt from http://php.net/manual/en/reflectionclass.getstaticproperties.php )  Get the static properties.
( excerpt from http://php.net/manual/en/reflectionclass.getstaticpropertyvalue.php )  Gets the value of a static property on this class.
( excerpt from http://php.net/manual/en/reflectionclass.hasconstant.php )  Checks whether the class has a specific constant defined or not.
( excerpt from http://php.net/manual/en/reflectionclass.hasmethod.php )  Checks whether a specific method is defined in a class.
( excerpt from http://php.net/manual/en/reflectionclass.hasproperty.php )  Checks whether the specified property is defined.
( excerpt from http://php.net/manual/en/reflectionclass.implementsinterface.php )  Checks whether it implements an interface.
( excerpt from http://php.net/manual/en/reflectionclass.innamespace.php )  Checks if this class is defined in a namespace.
( excerpt from http://php.net/manual/en/reflectionclass.isabstract.php )  Checks if the class is abstract.
( excerpt from http://php.net/manual/en/reflectionclass.iscloneable.php )  Returns whether this class is cloneable.
( excerpt from http://php.net/manual/en/reflectionclass.isfinal.php )  Checks if a class is final.
( excerpt from http://php.net/manual/en/reflectionclass.isinstance.php )  Checks if an object is an instance of a class.
( excerpt from http://php.net/manual/en/reflectionclass.isinstantiable.php )  Checks if the class is instantiable.
( excerpt from http://php.net/manual/en/reflectionclass.isinterface.php )  Checks whether the class is an interface.
( excerpt from http://php.net/manual/en/reflectionclass.isinternal.php )  Checks if the class is defined internally by an extension, or the core, as opposed to user-defined.
( excerpt from http://php.net/manual/en/reflectionclass.isiterateable.php )  Checks whether the class is iterateable.
( excerpt from http://php.net/manual/en/reflectionclass.issubclassof.php )  Checks if the class is a subclass of a specified class or implements a specified interface.
( excerpt from http://php.net/manual/en/reflectionclass.istrait.php )  Returns whether this is a trait.
( excerpt from http://php.net/manual/en/reflectionclass.newinstance.php )  Creates a new instance of the class.
( excerpt from http://php.net/manual/en/reflectionclass.newinstanceargs.php )  Creates a new instance of the class, the given arguments are passed to the class constructor.
( excerpt from http://php.net/manual/en/reflectionclass.newinstancewithoutconstructor.php )  Creates a new instance of the class without invoking the constructor.
( excerpt from http://php.net/manual/en/reflectionclass.setstaticpropertyvalue.php )  Sets static property value.
( excerpt from http://php.net/manual/en/reflectionextension.construct.php )  Construct a ReflectionExtension object.
( excerpt from http://php.net/manual/en/reflectionextension.export.php )  Exports a reflected extension.
( excerpt from http://php.net/manual/en/reflectionextension.getclasses.php )  Gets a list of classes from an extension.
( excerpt from http://php.net/manual/en/reflectionextension.getclassnames.php )  Gets a listing of class names as defined in the extension.
( excerpt from http://php.net/manual/en/reflectionextension.getconstants.php )  Get defined constants from an extension.
( excerpt from http://php.net/manual/en/reflectionextension.getfunctions.php )  Get defined functions from an extension.
( excerpt from http://php.net/manual/en/reflectionextension.getinientries.php )  Get the ini entries for an extension.
( excerpt from http://php.net/manual/en/reflectionextension.getname.php )  Gets the extensions name.
( excerpt from http://php.net/manual/en/reflectionextension.getversion.php )  Gets the version of the extension.
( excerpt from http://php.net/manual/en/reflectionextension.info.php )  Prints out the " phpinfo()" snippet for the given extension.
( excerpt from http://php.net/manual/en/reflectionextension.tostring.php )  Exports a reflected extension and returns it as a string.
( excerpt from http://php.net/manual/en/reflectionfunction.construct.php )  Constructs a ReflectionFunction object.
( excerpt from http://php.net/manual/en/reflectionfunction.export.php )  Exports a Reflected function.
( excerpt from http://php.net/manual/en/reflectionfunction.invoke.php )  Invokes a reflected function.
( excerpt from http://php.net/manual/en/reflectionfunction.invokeargs.php )  Invokes the function and pass its arguments as array.
( excerpt from http://php.net/manual/en/reflectionfunction.isdisabled.php )  Checks if the function is disabled, via the disable_functions directive.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getdoccomment.php )  Get a Doc comment from a function.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getendline.php )  Get the ending line number.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getfilename.php )  Gets the file name from a user-defined function.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getnamespacename.php )  Get the namespace name where the function is defined.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php )  Get the number of required parameters that a function defines.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getparameters.php )  Get the parameters as an array of ReflectionParameter.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getshortname.php )  Get the short name of the function (without the namespace part).
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getstartline.php )  Gets the starting line number of the function.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php )  Get the static variables.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.hasreturntype.php )  Checks if the function has a specified return type.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.innamespace.php )  Checks whether a function is defined in a namespace.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.isclosure.php )  Checks whether it's a closure.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.isdeprecated.php )  Returns whether the function is deprecated.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.isinternal.php )  Checks whether the function is internal, as opposed to user-defined.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.isuserdefined.php )  Checks whether the function is user-defined, as opposed to internal.
( excerpt from http://php.net/manual/en/reflectionfunctionabstract.returnsreference.php )  Checks whether the function returns a reference.
( excerpt from http://php.net/manual/en/reflectionmethod.construct.php )  Constructs a new ReflectionMethod.
( excerpt from http://php.net/manual/en/reflectionmethod.export.php )  Exports a ReflectionMethod.
( excerpt from http://php.net/manual/en/reflectionmethod.getdeclaringclass.php )  Gets the declaring class for the reflected method.
( excerpt from http://php.net/manual/en/reflectionmethod.getmodifiers.php )  Returns a bitfield of the access modifiers for this method.
( excerpt from http://php.net/manual/en/reflectionmethod.getprototype.php )  Returns the methods prototype.
( excerpt from http://php.net/manual/en/reflectionmethod.invoke.php )  Invokes a reflected method.
( excerpt from http://php.net/manual/en/reflectionmethod.invokeargs.php )  Invokes the reflected method and pass its arguments as array.
( excerpt from http://php.net/manual/en/reflectionmethod.isabstract.php )  Checks if the method is abstract.
( excerpt from http://php.net/manual/en/reflectionmethod.isconstructor.php )  Checks if the method is a constructor.
( excerpt from http://php.net/manual/en/reflectionmethod.isdestructor.php )  Checks if the method is a destructor.
( excerpt from http://php.net/manual/en/reflectionmethod.isfinal.php )  Checks if the method is final.
( excerpt from http://php.net/manual/en/reflectionmethod.isprivate.php )  Checks if the method is private.
( excerpt from http://php.net/manual/en/reflectionmethod.isprotected.php )  Checks if the method is protected.
( excerpt from http://php.net/manual/en/reflectionmethod.ispublic.php )  Checks if the method is public.
( excerpt from http://php.net/manual/en/reflectionmethod.isstatic.php )  Checks if the method is static.
( excerpt from http://php.net/manual/en/reflectionmethod.setaccessible.php )  Sets a method to be accessible.
( excerpt from http://php.net/manual/en/reflectionobject.construct.php )  Constructs a ReflectionObject.
( excerpt from http://php.net/manual/en/reflectionobject.export.php )  Exports a reflection.
( excerpt from http://php.net/manual/en/reflectionparameter.allowsnull.php )  Checks whether the parameter allows NULL.
( excerpt from http://php.net/manual/en/reflectionparameter.canbepassedbyvalue.php )  Returns whether this parameter can be passed by value.
( excerpt from http://php.net/manual/en/reflectionparameter.construct.php )  Constructs a ReflectionParameter class.
( excerpt from http://php.net/manual/en/reflectionparameter.export.php )  Exports.
( excerpt from http://php.net/manual/en/reflectionparameter.getclass.php )  Gets a class.
( excerpt from http://php.net/manual/en/reflectionparameter.getdeclaringclass.php )  Gets the declaring class.
( excerpt from http://php.net/manual/en/reflectionparameter.getdeclaringfunction.php )  Gets the declaring function.
( excerpt from http://php.net/manual/en/reflectionparameter.getdefaultvalue.php )  Gets the default value of the parameter for a user-defined function or method.
( excerpt from http://php.net/manual/en/reflectionparameter.getname.php )  Gets the name of the parameter.
( excerpt from http://php.net/manual/en/reflectionparameter.getposition.php )  Gets the position of the parameter.
( excerpt from http://php.net/manual/en/reflectionparameter.gettype.php )  Gets the associated type of a parameter.
( excerpt from http://php.net/manual/en/reflectionparameter.hastype.php )  Checks if the parameter has a type associated with it.
( excerpt from http://php.net/manual/en/reflectionparameter.isarray.php )  Checks if the parameter expects an array.
( excerpt from http://php.net/manual/en/reflectionparameter.isdefaultvalueavailable.php )  Checks if a default value for the parameter is available.
( excerpt from http://php.net/manual/en/reflectionparameter.isdefaultvalueconstant.php )  Returns TRUE if the default value is constant, FALSE if it is not or NULL on failure.
( excerpt from http://php.net/manual/en/reflectionparameter.isoptional.php )  Checks if the parameter is optional.
( excerpt from http://php.net/manual/en/reflectionparameter.ispassedbyreference.php )  Checks if the parameter is passed in by reference.
( excerpt from http://php.net/manual/en/reflectionparameter.tostring.php )  To string.
( excerpt from http://php.net/manual/en/reflectionproperty.export.php )  Exports a reflection.
( excerpt from http://php.net/manual/en/reflectionproperty.getdeclaringclass.php )  Gets the declaring class.
( excerpt from http://php.net/manual/en/reflectionproperty.getdoccomment.php )  Gets the doc comment.
( excerpt from http://php.net/manual/en/reflectionproperty.getmodifiers.php )  Gets the modifiers.
( excerpt from http://php.net/manual/en/reflectionproperty.getname.php )  Gets the properties name.
( excerpt from http://php.net/manual/en/reflectionproperty.getvalue.php )  Gets the properties value.
( excerpt from http://php.net/manual/en/reflectionproperty.isdefault.php )  Checks whether the property is the default.
( excerpt from http://php.net/manual/en/reflectionproperty.isprivate.php )  Checks whether the property is private.
( excerpt from http://php.net/manual/en/reflectionproperty.isprotected.php )  Checks whether the property is protected.
( excerpt from http://php.net/manual/en/reflectionproperty.ispublic.php )  Checks whether the property is public.
( excerpt from http://php.net/manual/en/reflectionproperty.isstatic.php )  Checks whether the property is static.
( excerpt from http://php.net/manual/en/reflectionproperty.setaccessible.php )  Sets a property to be accessible.
( excerpt from http://php.net/manual/en/reflectionproperty.setvalue.php )  Sets (changes) the property's value.
( excerpt from http://php.net/manual/en/reflectionproperty.tostring.php )  To string.
( excerpt from http://php.net/manual/en/reflector.tostring.php )  To string.
( excerpt from http://php.net/manual/en/regexiterator.accept.php )  Matches (string) RegexIterator::current() (or RegexIterator::key() if the RegexIterator::USE_KEY flag is set) against the regular expression.
( excerpt from http://php.net/manual/en/regexiterator.construct.php )  Create a new RegexIterator which filters an Iterator using a regular expression.
( excerpt from http://php.net/manual/en/regexiterator.getflags.php )  Returns the flags, see RegexIterator::setFlags() for a list of available flags.
( excerpt from http://php.net/manual/en/regexiterator.getmode.php )  Returns the operation mode, see RegexIterator::setMode() for the list of operation modes.
( excerpt from http://php.net/manual/en/regexiterator.getpregflags.php )  Returns the regular expression flags, see RegexIterator::__construct() for the list of flags.
( excerpt from http://php.net/manual/en/regexiterator.getregex.php )  Returns current regular expression.
( excerpt from http://php.net/manual/en/regexiterator.setflags.php )  Sets the flags.
( excerpt from http://php.net/manual/en/regexiterator.setmode.php )  Sets the operation mode.
( excerpt from http://php.net/manual/en/regexiterator.setpregflags.php )  Sets the regular expression flags.
( excerpt from http://php.net/manual/en/seekableiterator.seek.php )  Seeks to a given position in the iterator.
( excerpt from http://php.net/manual/en/serializable.serialize.php )  Should return the string representation of the object.
( excerpt from http://php.net/manual/en/serializable.unserialize.php )  Called during unserialization of the object.
( excerpt from http://php.net/manual/en/sessionhandlerinterface.close.php )  Closes the current session.
( excerpt from http://php.net/manual/en/sessionhandlerinterface.destroy.php )  Destroys a session.
( excerpt from http://php.net/manual/en/sessionhandlerinterface.gc.php )  Cleans up expired sessions.
( excerpt from http://php.net/manual/en/sessionhandlerinterface.open.php )  Re-initialize existing session, or creates a new one.
( excerpt from http://php.net/manual/en/sessionhandlerinterface.read.php )  Reads the session data from the session storage, and returns the results.
( excerpt from http://php.net/manual/en/sessionhandlerinterface.write.php )  Writes the session data to the session storage.
( excerpt from http://php.net/manual/en/soapfault.tostring.php )  Returns a string representation of the SoapFault.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.current.php )  Get the current doubly linked list node.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.next.php )  Move the iterator to the next node.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.offsetset.php )  Sets the value at the specified index to newval.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.offsetunset.php )  Unsets the value at the specified index.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.prev.php )  Move the iterator to the previous node.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.push.php )  Pushes value at the end of the doubly linked list.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.rewind.php )  This rewinds the iterator to the beginning.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.serialize.php )  Serializes the storage.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.unserialize.php )  Unserializes the storage, from SplDoublyLinkedList::serialize().
( excerpt from http://php.net/manual/en/spldoublylinkedlist.unshift.php )  Prepends value at the beginning of the doubly linked list.
( excerpt from http://php.net/manual/en/spldoublylinkedlist.valid.php )  Checks if the doubly linked list contains any more nodes.
( excerpt from http://php.net/manual/en/splfileinfo.construct.php )  Creates a new SplFileInfo object for the file_name specified.
( excerpt from http://php.net/manual/en/splfileinfo.getatime.php )  Gets the last access time for the file.
( excerpt from http://php.net/manual/en/splfileinfo.getbasename.php )  This method returns the base name of the file, directory, or link without path info.
( excerpt from http://php.net/manual/en/splfileinfo.getctime.php )  Returns the inode change time for the file.
( excerpt from http://php.net/manual/en/splfileinfo.getextension.php )  Retrieves the file extension.
( excerpt from http://php.net/manual/en/splfileinfo.getfileinfo.php )  This method gets an SplFileInfo object for the referenced file.
( excerpt from http://php.net/manual/en/splfileinfo.getfilename.php )  Gets the filename without any path information.
( excerpt from http://php.net/manual/en/splfileinfo.getgroup.php )  Gets the file group.
( excerpt from http://php.net/manual/en/splfileinfo.getinode.php )  Gets the inode number for the filesystem object.
( excerpt from http://php.net/manual/en/splfileinfo.getlinktarget.php )  Gets the target of a filesystem link.
( excerpt from http://php.net/manual/en/splfileinfo.getmtime.php )  Returns the time when the contents of the file were changed.
( excerpt from http://php.net/manual/en/splfileinfo.getowner.php )  Gets the file owner.
( excerpt from http://php.net/manual/en/splfileinfo.getpath.php )  Returns the path to the file, omitting the filename and any trailing slash.
( excerpt from http://php.net/manual/en/splfileinfo.getpathinfo.php )  Gets an SplFileInfo object for the parent of the current file.
( excerpt from http://php.net/manual/en/splfileinfo.getpathname.php )  Returns the path to the file.
( excerpt from http://php.net/manual/en/splfileinfo.getperms.php )  Gets the file permissions for the file.
( excerpt from http://php.net/manual/en/splfileinfo.getrealpath.php )  This method expands all symbolic links, resolves relative references and returns the real path to the file.
( excerpt from http://php.net/manual/en/splfileinfo.getsize.php )  Returns the filesize in bytes for the file referenced.
( excerpt from http://php.net/manual/en/splfileinfo.gettype.php )  Returns the type of the file referenced.
( excerpt from http://php.net/manual/en/splfileinfo.isdir.php )  This method can be used to determine if the file is a directory.
( excerpt from http://php.net/manual/en/splfileinfo.isexecutable.php )  Checks if the file is executable.
( excerpt from http://php.net/manual/en/splfileinfo.isfile.php )  Checks if the file referenced by this SplFileInfo object exists and is a regular file.
( excerpt from http://php.net/manual/en/splfileinfo.islink.php )  Use this method to check if the file referenced by the SplFileInfo object is a link.
( excerpt from http://php.net/manual/en/splfileinfo.isreadable.php )  Check if the file is readable.
( excerpt from http://php.net/manual/en/splfileinfo.iswritable.php )  Checks if the current entry is writable.
( excerpt from http://php.net/manual/en/splfileinfo.openfile.php )  Creates an SplFileObject object of the file.
( excerpt from http://php.net/manual/en/splfileinfo.setfileclass.php )  Set the class name which SplFileInfo will use to open files with when openFile() is called.
( excerpt from http://php.net/manual/en/splfileinfo.setinfoclass.php )  Use this method to set a custom class which will be used when getFileInfo and getPathInfo are called.
( excerpt from http://php.net/manual/en/splfileinfo.tostring.php )  This method will return the file name of the referenced file.
( excerpt from http://php.net/manual/en/splfileobject.construct.php )  Construct a new file object.
( excerpt from http://php.net/manual/en/splfileobject.current.php )  Retrieves the current line of the file.
( excerpt from http://php.net/manual/en/splfileobject.fflush.php )  Forces a write of all buffered output to the file.
( excerpt from http://php.net/manual/en/splfileobject.fgetc.php )  Gets a character from the file.
( excerpt from http://php.net/manual/en/splfileobject.fgetcsv.php )  Gets a line from the file which is in CSV format and returns an array containing the fields read.
( excerpt from http://php.net/manual/en/splfileobject.fgets.php )  Gets a line from the file.
( excerpt from http://php.net/manual/en/splfileobject.fgetss.php )  Identical to SplFileObject::fgets(), except that SplFileObject::fgetss() attempts to strip any HTML and PHP tags from the text it reads.
( excerpt from http://php.net/manual/en/splfileobject.flock.php )  Locks or unlocks the file in the same portable way as flock().
( excerpt from http://php.net/manual/en/splfileobject.fpassthru.php )  Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.
( excerpt from http://php.net/manual/en/splfileobject.fputcsv.php )  Writes the fields array to the file as a CSV line.
( excerpt from http://php.net/manual/en/splfileobject.fscanf.php )  Reads a line from the file and interprets it according to the specified format, which is described in the documentation for sprintf().
( excerpt from http://php.net/manual/en/splfileobject.fseek.php )  Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding offset to the position specified by whence.
( excerpt from http://php.net/manual/en/splfileobject.fstat.php )  Gathers the statistics of the file.
( excerpt from http://php.net/manual/en/splfileobject.ftell.php )  Returns the position of the file pointer which represents the current offset in the file stream.
( excerpt from http://php.net/manual/en/splfileobject.ftruncate.php )  Truncates the file to size bytes.
( excerpt from http://php.net/manual/en/splfileobject.getchildren.php )  An SplFileObject does not have children so this method returns NULL.
( excerpt from http://php.net/manual/en/splfileobject.getcsvcontrol.php )  Gets the delimiter and enclosure character used for parsing CSV fields.
( excerpt from http://php.net/manual/en/splfileobject.getflags.php )  Gets the flags set for an instance of SplFileObject as an integer.
( excerpt from http://php.net/manual/en/splfileobject.getmaxlinelen.php )  Gets the maximum line length as set by SplFileObject::setMaxLineLen().
( excerpt from http://php.net/manual/en/splfileobject.haschildren.php )  An SplFileObject does not have children so this method always return FALSE.
( excerpt from http://php.net/manual/en/splfileobject.key.php )  Gets the current line number.
( excerpt from http://php.net/manual/en/splfileobject.next.php )  Moves ahead to the next line in the file.
( excerpt from http://php.net/manual/en/splfileobject.rewind.php )  Rewinds the file back to the first line.
( excerpt from http://php.net/manual/en/splfileobject.seek.php )  Seek to specified line in the file.
( excerpt from http://php.net/manual/en/splfileobject.setcsvcontrol.php )  Sets the delimiter and enclosure character for parsing CSV fields.
( excerpt from http://php.net/manual/en/splfileobject.setflags.php )  Sets the flags to be used by the SplFileObject.
( excerpt from http://php.net/manual/en/splfileobject.setmaxlinelen.php )  Sets the maximum length of a line to be read.
( excerpt from http://php.net/manual/en/splfileobject.valid.php )  Check whether EOF has been reached.
( excerpt from http://php.net/manual/en/splfixedarray.construct.php )  Initializes a fixed array with a number of NULL values equal to size.
( excerpt from http://php.net/manual/en/splfixedarray.count.php )  Returns the size of the array.
( excerpt from http://php.net/manual/en/splfixedarray.current.php )  Get the current array element.
( excerpt from http://php.net/manual/en/splfixedarray.getsize.php )  Gets the size of the array.
( excerpt from http://php.net/manual/en/splfixedarray.key.php )  Returns the current array index.
( excerpt from http://php.net/manual/en/splfixedarray.next.php )  Move the iterator to the next array entry.
( excerpt from http://php.net/manual/en/splfixedarray.offsetexists.php )  Checks whether the requested index index exists.
( excerpt from http://php.net/manual/en/splfixedarray.offsetget.php )  Returns the value at the index index.
( excerpt from http://php.net/manual/en/splfixedarray.offsetset.php )  Sets the value at the specified index to newval.
( excerpt from http://php.net/manual/en/splfixedarray.offsetunset.php )  Unsets the value at the specified index.
( excerpt from http://php.net/manual/en/splfixedarray.rewind.php )  Rewinds the iterator to the beginning.
( excerpt from http://php.net/manual/en/splfixedarray.setsize.php )  Change the size of an array to the new size of size.
( excerpt from http://php.net/manual/en/splfixedarray.toarray.php )  Returns a PHP array from the fixed array.
( excerpt from http://php.net/manual/en/splfixedarray.valid.php )  Checks if the array contains any more elements.
( excerpt from http://php.net/manual/en/splheap.compare.php )  Compare value1 with value2.
( excerpt from http://php.net/manual/en/splheap.construct.php )  This constructs a new empty heap.
( excerpt from http://php.net/manual/en/splheap.current.php )  Get the current datastructure node.
( excerpt from http://php.net/manual/en/splheap.insert.php )  Insert value in the heap.
( excerpt from http://php.net/manual/en/splheap.next.php )  Move to the next node.
( excerpt from http://php.net/manual/en/splheap.rewind.php )  This rewinds the iterator to the beginning.
( excerpt from http://php.net/manual/en/splheap.valid.php )  Checks if the heap contains any more nodes.
( excerpt from http://php.net/manual/en/splmaxheap.compare.php )  Compare value1 with value2.
( excerpt from http://php.net/manual/en/splminheap.compare.php )  Compare value1 with value2.
( excerpt from http://php.net/manual/en/splobjectstorage.addall.php )  Adds all objects-data pairs from a different storage in the current storage.
( excerpt from http://php.net/manual/en/splobjectstorage.attach.php )  Adds an object inside the storage, and optionally associate it to some data.
( excerpt from http://php.net/manual/en/splobjectstorage.contains.php )  Checks if the storage contains the object provided.
( excerpt from http://php.net/manual/en/splobjectstorage.count.php )  Counts the number of objects in the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.current.php )  Returns the current storage entry.
( excerpt from http://php.net/manual/en/splobjectstorage.detach.php )  Removes the object from the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.gethash.php )  This method calculates an identifier for the objects added to an SplObjectStorage object.
( excerpt from http://php.net/manual/en/splobjectstorage.getinfo.php )  Returns the data associated with the current iterator entry.
( excerpt from http://php.net/manual/en/splobjectstorage.key.php )  Returns the index at which the iterator currently is.
( excerpt from http://php.net/manual/en/splobjectstorage.next.php )  Moves the iterator to the next object in the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.offsetexists.php )  Checks whether an object exists in the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.offsetget.php )  Returns the data associated with an object in the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.offsetset.php )  Associate data to an object in the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.offsetunset.php )  Removes an object from the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.removeall.php )  Removes objects contained in another storage from the current storage.
( excerpt from http://php.net/manual/en/splobjectstorage.removeallexcept.php )  Removes all objects except for those contained in another storage from the current storage.
( excerpt from http://php.net/manual/en/splobjectstorage.rewind.php )  Rewind the iterator to the first storage element.
( excerpt from http://php.net/manual/en/splobjectstorage.serialize.php )  Returns a string representation of the storage.
( excerpt from http://php.net/manual/en/splobjectstorage.setinfo.php )  Associates data, or info, with the object currently pointed to by the iterator.
( excerpt from http://php.net/manual/en/splobjectstorage.unserialize.php )  Unserializes storage entries and attach them to the current storage.
( excerpt from http://php.net/manual/en/splobjectstorage.valid.php )  Returns if the current iterator entry is valid.
( excerpt from http://php.net/manual/en/splobserver.update.php )  This method is called when any SplSubject to which the observer is attached calls SplSubject::notify().
( excerpt from http://php.net/manual/en/splpriorityqueue.compare.php )  Compare priority1 with priority2.
( excerpt from http://php.net/manual/en/splpriorityqueue.current.php )  Get the current datastructure node.
( excerpt from http://php.net/manual/en/splpriorityqueue.insert.php )  Insert value with the priority priority in the queue.
( excerpt from http://php.net/manual/en/splpriorityqueue.next.php )  Extracts the top node from the queue.
( excerpt from http://php.net/manual/en/splpriorityqueue.rewind.php )  This rewinds the iterator to the beginning.
( excerpt from http://php.net/manual/en/splpriorityqueue.valid.php )  Checks if the queue contains any more nodes.
( excerpt from http://php.net/manual/en/splsubject.attach.php )  Attaches an SplObserver so that it can be notified of updates.
( excerpt from http://php.net/manual/en/splsubject.detach.php )  Detaches an observer from the subject to no longer notify it of updates.
( excerpt from http://php.net/manual/en/splsubject.notify.php )  Notifies all attached observers.
( excerpt from http://php.net/manual/en/spltempfileobject.construct.php )  Construct a new temporary file object.
( excerpt* http://php.net/manual/en/reflectionclass.getproperties.php )  Retrieves reflected properties.
("auto" is expanded to "ASCII, JIS, UTF-8, EUC-JP, SJIS") If encoding_list is omitted, it returns the current character encoding detection order as array.
(2) An XHP name must always be preceded by whitespace if the previous token was ':'.
(Attributes are case-insensitive for directory servers, but not when used as array indices.)
(But you can't change it to static.)
(FIX IF THIS DOESN'T HAVE TO BE THE CASE).
(For reference, this was written when three registers are reserved for VM state.)  It will expose bugs more noticeably when register poisoning is enabled.
(The jit uses different code for the first several executions of any given branch.)
(Until we remove the restriction on calling methods on Tany in strict, of course.)
(W)illegal offset
(We need to make sure we propagate the state before the SetN to the catch block, since it can throw from the object __toString.).
(c) M.Boerger
(counterpart: ext/standard/tests/reg/001.phpt)
(counterpart: ext/standard/tests/reg/002.phpt)
(counterpart: ext/standard/tests/reg/003.phpt)
(counterpart: ext/standard/tests/reg/004.phpt)
(counterpart: ext/standard/tests/reg/005.phpt)
(counterpart: ext/standard/tests/reg/006.phpt)
(counterpart: ext/standard/tests/reg/007.phpt)
(counterpart: ext/standard/tests/reg/008.phpt)
(counterpart: ext/standard/tests/reg/009.phpt)
(counterpart: ext/standard/tests/reg/010.phpt)
(counterpart: ext/standard/tests/reg/011.phpt)
(counterpart: ext/standard/tests/reg/012.phpt)
(counterpart: ext/standard/tests/reg/013.phpt)
(counterpart: ext/standard/tests/reg/014.phpt)
(counterpart: ext/standard/tests/reg/015.phpt)
(counterpart: ext/standard/tests/reg/016.phpt)
(e.g. FALSE for stream, and TRUE for cbc, cfb, ofb).
(e.g. TRUE for cbc and ecb, and FALSE for cfb and stream).
(example of a grandfathered tag)
(example of a grandfathered tag) Language subtag plus Script subtag:
(excerpt from http://php.net/manual/en/class.splqueue.php)  The SplQueue class provides the main functionalities of a queue implemented using a doubly linked list.
(excerpt from http://php.net/manual/en/class.splstack.php)  The SplStack class provides the main functionalities of a stack implemented using a doubly linked list.
(excerpt from http://php.net/manual/en/reflectionfunctionabstract.getname.php )  Get the name of the function.
(excerpt from http://php.net/manual/en/splqueue.dequeue.php)  Dequeues value from the top of the queue.
(excerpt from http://php.net/manual/en/splqueue.enqueue.php)  Enqueues value at the end of the queue.
(excerpt from http://php.net/manual/en/splstack.construct.php)  This constructs a new empty stack.
(greedy) (1 match)
(ie the same result as -50)
(int)(PHP_INT_MAX / 3) gives a different result
(it will show up the first time, or if you wait a while before running it again.) (the popup may also be disabled, which can be done with a registry setting.) you can confirm it crashed by checking the exit code OR the message this test prints at the very end (expected output for pass).
(matches all)
(maximum normal double)
(minimum normal double)
(not implemented yet).
* Boolean operand with all kinds of operands, swapping them over to make LHS/RHS order is irrelevent.
* Create sample arrays * Test alpha, numeric (decimal, hex, octal) and special data * *
* Include Point.inc to get at the Point class type
* Language tags (and thus locale identifiers) are case insensitive.
* My Doc Comment for B::privf
* Neither the name of Google Inc.
* Numeric strings with all kinds of operands, swapping them over to make LHS/RHS order is irrelevent.
* Pollute the heap.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* See arrays.php for array creation and initialization This set of tests deals only with array-element access
* The null or empty string obtains the "root" locale.
* Two array types
* Two non-numeric strings
* a simple example of passing by reference
* arithmetic operands
* checkout the type and value of the result
* checkout the type of the result
* connected
* create and use byRefs without involving functions
* define some constants with simple (single-token) scalar initial values
* protected function __destruct() // Access level to D2::__destruct() must be public
* require Point.inc to get at the Point class type
* show that a new array is created and that the operand-arrays are unchanged
* single-quote string literals
* take an undefined parameter passed byRef, and pass it byRef where the underlying value is modified.
** ************************************************************************** * Please change html_tables/html_table_gen.php instead and then         ** * run it in order to generate this file                                 ** **************************************************************************
** Doc comment for G
** Only valid on systems supporting the st_blksize type - other systems (e.g. Windows) return -1.
** has higher precedence than * and /
** has higher precedence than unary -
******************** Private functions ********************
******************** Private getters ********************
******************** Private setters ********************
******************** Protected functions ******************** This function should only be called once for framework (assuming you don't delete the framework from your repo).
******************** Protected getters ********************
******************** Public functions ******************** We may have to special case frameworks that don't use phpunit for their testing (e.g. ThinkUp)
******************** Public setters ******************** ******************** Public getters ********************
*********************************************************** Base echoBase64
*********************************************************** Base echoBoolean
*********************************************************** Base echoDate
*********************************************************** Base echoDecimal
*********************************************************** Base echoFloat
*********************************************************** Base echoFloatArray
*********************************************************** Base echoHexBinary
*********************************************************** Base echoInteger
*********************************************************** Base echoIntegerArray
*********************************************************** Base echoString
*********************************************************** Base echoStringArray
*********************************************************** Base echoStruct
*********************************************************** Base echoStructArray
*********************************************************** Base echoVoid
*********************************************************** GROUP B *********************************************************** GroupB echoStructAsSimpleTypes
*********************************************************** GROUP C header tests *********************************************************** echoMeStringRequest echoMeStringRequest with endpoint as header destination, doesn't have to understand
*********************************************************** GroupB echo2DStringArray
*********************************************************** GroupB echoNestedArray
*********************************************************** GroupB echoNestedStruct
*********************************************************** GroupB echoSimpleTypesAsStruct
*********************************************************** echoMeStructRequest echoMeStructRequest with endpoint as header destination, doesn't have to understand
*********************************************************** echoMeUnknown echoMeUnknown with endpoint as header destination, doesn't have to understand
*********************************************************** output functions
************************************************************************** *        THIS FILE IS AUTOMATICALLY GENERATED.
- 1: RegexIterator::USE_KEY
- Blacklist tests that are causing problems with this script running.
- Decide whether proxy-based code needs to be solidified better or whether we should just add the frameworks to our repo officially.
- Diff files showing the tests names and results that are different than expected for the test suite.
- Enhanced data output by the script to include "diff" type information about why a passing percentage is different from a previous run, particularly from a regression perspective.
- Error files showing all the errors and failures from running the test, suite or the fatal if the framework fatals.
- In order to get frameworks to work correctly, may need to grab more code via some sort of pull request:  - pull:      The code we need is in a dir that doesn't affect the primary branch or SHA (e.g., 'vendor') and we can just do a 'git pull' since any branch or HEAD change doesn't matter - submodule: The code we are adding may be in the root framework dir so that can affect the framework branch or SHA.
- It is possible to pass parameters to the shutdown function by passing additional parameters.
- Multiple test suites are run in separate processes, making the entire testing process a bit faster.
- Populate the cache separately from this function, so that typecheck_and_error can have a hot path that just checks "is the world clean" without paying the apc_fetch deserialization cost (which is most of the cost of this function, if I'm benchmarking correctly).
- Raw statistics for each test suite are put in a raw results file for examination.
- RecursiveRegexIterator::GET_MATCH: See preg_match().
- RecursiveRegexIterator::MATCH: See preg_match().
- RecursiveRegexIterator::REPLACE: none.
- RecursiveRegexIterator::SPLIT: See preg_split().
- RegexIterator::GET_MATCH: See preg_match().
- RegexIterator::MATCH: See preg_match().
- RegexIterator::REPLACE: none.
- RegexIterator::SPLIT: See preg_split().
- Run a single test suite, all of the test suites or a custom set of multiple test suites.
- SIG_SETMASK: Replace the currently blocked signals by the given list of signals.
- SIG_UNBLOCK: Remove the signals from the currently blocked signals.
- Special case frameworks that don't use PHPUnit (e.g. Thinkup).
- Stepping out of destructors.
- Stepping out of iterator methods.
- Stepping over instructions that call iterator methods.
- Stepping over the return from a generator
- Stepping over the return from an async
- Storing an array (instead of an object) in APC might be faster, due to the way I think HHVM can optimize COW arrays.
- The creation (and appending to) a summary file that lists all frameworks run and the pass percentage (or fatal) of each framework.
- Timeout option for running individual tests.
- Zero or more parameters to be passed to the callback.
- Zero or more parameters to be passed to the function.
- `age_timeout_micros`: The maximum age, in microseconds, that a connection in the pool will be allowed to reach before being destroyed.
- `expiration_policy`: A `string` of either `'IdleTime'` or `'Age'" that specifies whehter connections in the pool will be destroyed based on how long it sits idle or total age in the pool.
- `idle_timeout_micros`: The maximum amount of time, in microseconds, that a connection is allowed to sit idle in the pool becore being destroyed.
- `pool_connection_limit`: The maximum number of connections allowed in the pool.
- class LogicException           extends Exception - class BadFunctionCallException extends LogicException - class BadMethodCallException   extends BadFunctionCallException - class DomainException          extends LogicException - class InvalidArgumentException extends LogicException - class LengthException          extends LogicException - class OutOfRangeException      extends LogicException - class RuntimeException         extends Exception - class OutOfBoundsException     extends RuntimeException - class OverflowException        extends RuntimeException - class RangeException           extends RuntimeException - class UnderflowException       extends RuntimeException  7) Observer  SPL suggests a standard way of implementing the observer pattern.
- interface SplObserver - interface SplSubject - class SplObjectStorage  8) Datastructures  SPL proposes a set of datastructures implemented internally.
- lets leave that to dedicated tests
- this gives a different control flow inside PDO
- when the day *is* the same as the day on the original date:
- when the day is not the same as the day on the original date:
---- same tests for byKey variants ----
-1 - Query succeeded, no more results coming.
-1 if server is not started.
-1 indicates that the query has returned an error.
-1 indicates that the query returned an error.
-1 is just a valid filename on windows
-1 is used for any depth.
-n - print function nesting depth
-ve size value 2.
-ve value for width
.* Not a doc comment
.*something.
...and use them again.
..and a point on background
..and modify original
..create a clone of it ..Clone
.num_elems elements
.tmp", "filegroup_variation3/filegroup*.tmp",  /* Testing Binary safe
.tmp", "fileinode_variation3/fileinode*.tmp",  /* Testing Binary safe
.tmp", "fileowner_variation3/fileowner*.tmp",  /* Testing Binary safe
.tmp", "fileperms_variation3/fileperms*.tmp",  /* Testing Binary safe
.tmp", "is_file_variation4/is_file*.tmp",  /* Testing Binary safe
/* Boolean operand with all kinds of operands
/* IEEE special values */ /* leading and trailing whitespace
/* NULL operand
/* NULL operand with all kinds of operands
/* NULL operand with all kinds of operands, swapping them over to make LHS/RHS order is irrelevent.
/* Note: As opposed to defining constants using define(), constants defined using the const keyword must be declared at the top-level scope because they are defined at compile-time.
/* Numeric strings with all kinds of operands
/* Test all kinds of values to see which can be converted
/* Two array types
/* Two non-numeric strings
/* based on finding from above, further testing
/* create and use byRefs via the new operator
/* define a generator that returns sucessive lines from a file of text
/* define a simple generator that returns key/value pairs
/* fractional values
/* leading and trailing whitespace
/* leading sign
/* pass byRef
/* passing by reference with a default argument value
/* presumably, body can be one or more empty statements
/* return byRef
/* returning literals byRef is okay
/* show that the parser must form the longest posisble variable name and that for unknown variables a "" is substituted
/* strings containing multiple alphanumeric characters
/* strings ending in non-alphanumeric characters
/* strings with leading zeros
/* take an undefined parameter passed byRef and assign it byRef.
/* take an undefined parameter passed byRef and return it byRef.
/* test if number bases other than decimal are supported
/* try defining a constant whose name is a keyword
/* try to define some constants with multiple-token scalar initial values involving literals only
/* use  strings for label values
/* use arrays and array elements
//  4 Should match
0 if server is failed, non-zero otherwise
0 is stdin, 1 is stdout, while 2 is stderr.
0 reports less false-positives.
0 should give 0, other falsey things are null
0 wait for any child process whose process group ID is equal to that of the calling process.
0 will be considered as FALSE and removed in default callback
0, 0 is the top left corner of the image.
0: Do nothing
1 - same as 0 but only byte-values with a frequency greater than zero are listed.
1 Driver specific error code.
1 Driver-specific error code.
1 item req, 0 rm'ed (it's already gone)
1 message is sent by email to the address in the destination parameter.
1 sub, A0 is not valid as sole/first byte
1 sub, no consume last
1) Iterators  SPL offers some advanced iterator algorithms:  - interface RecursiveIterator extends Iterator - interface OuterIterator extends Iterator - class RecursiveIteratorIterator implements OuterIterator - class RecursiveTreeIterator extends RecursiveIteratorIterator - abstract class FilterIterator implements OuterIterator - class ParentIterator extends FilterIterator implements RecursiveIterator - interface SeekableIterator extends Iterator - class LimitIterator implements OuterIterator - class CachingIterator implements OuterIterator - class RecursiveCachingIterator extends CachingIterator implements RecursiveIterator - class IteratorIterator implements OuterIterator - class NoRewindIterator implements OuterIterator - class EmptyIterator implements Iterator - class InfiniteIterator extends IteratorIterator - class AppendIterator implements OuterIterator - class RegexIterator extends FilterIterator - class RecursiveRegexIterator extends RegexIterator implements RecursiveIterator - class MultipleIterator extends Iterator  2) Directories and Files  SPL offers two advanced directory and file handling classes:  - class SplFileInfo - class DirectoryIterator extends SplFileInfo implements Iterator - class FilesystemIterator extends DirectoryIterator - class RecursiveDirectoryIterator extends FilesystemIterator implements RecursiveIterator - class GlobIterator extends FilesystemIterator implements Countable - class SplFileObject extends SplFileInfo implements RecursiveIterator, SeekableIterator - class SplTempFileObject extends SplFileObject  3) XML  SPL offers an advanced XML handling class:  - class SimpleXMLIterator extends simplexml_element implements RecursiveIterator  4) Array Overloading  SPL offers advanced Array overloading:  - class ArrayObject implements IteratorAggregate, ArrayAccess, Countable - class ArrayIterator implements Iterator, ArrayAccess, Countable, SeekableIterator - class RecursiveArrayIterator extends ArrayIterator implements RecursiveIterator - class SplFixedArray implements Iterator, ArrayAccess, Countable  As the above suggest an ArrayObject creates an ArrayIterator when it comes to iteration (e.g. ArrayObject instance used inside foreach).
1.0 is fully opaque and 0.0 is fully transparent.
1.flag value as default 2.SORT_REGULAR - compare items normally
1.flag value as defualt 2.SORT_REGULAR - compare items normally To test the new keys for the elements in the sorted array.
10 Should match
100 pseudo-random bits generated offline.
1000 parser tokens should be enough for anyone (logic shared with test/slow/ext_misc/token_consistency.php)
10000 zvals collected automatic
1072915200 this prints the year in a two digit format however, as this would start with a "0", it only prints "4"
11 Should match
12 Second should match
1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ
13 Should not match
13 chunk, random
14 Three should match
15 Two should match
16 Four should match
17 Should match
18 Two should match
19 Three should match
1: Function call
2  No longer an option.
2 - same as 0 but only byte-values with a frequency equal to zero are listed.
2 3 5 4 6 Insert at the beginning and end of the DLL
2 Driver specific error message.
2 Driver-specific error message.
2 ICONV_MIME_DECODE_CONTINUE_ON_ERROR  If set, iconv_mime_decode_headers() attempts to ignore any grammatical errors and continue to process a given header.
2 possibilities, phpunit.xml and phpunit.xml.dist for configuration
2 read to get on the 2nd node
2 sub as 2nd is potentially valid as lead
2 sub, as 2nd is potentially valid as lead
2 sub, no consume last
20 Should match
2000 pixels per color stripe
21 Should not match
21 chars Japanese string, 21 characters
22 - invalid argument
22 Should match
23 Should match
24 Two should match
25 March 2012, transition to DST
25 Two should match
26 Should match
272 characters
28 October 2012, transition from DST
2: Method call
2nd call ignored
2nd maximum subnormal double
2nd minumum subnormal double
3  message is appended to the file destination.
3 * 3, perfect square
3 - a string containing all unique characters is returned.
3 6 Insert in the middle of the DLL
3 Should match
3 Static Arrays
3 would be the next element
32 is an arbitrary limit to avoid going above the maximum command line length
32-bit systems
3: IndexArrayMap
3: Sorting And Searching", Addison-Wesley (1973), pp.
4  message is sent directly to the SAPI logging handler.
4 - a string containing all not used characters is returned.
4 good ones
4) call_user_func() and forward_static_call() must never forward the caller's late bound class to the callee if the late bound class is not the same or a descendent of the class enclosing the method.
4: MethodExists
5 First three should match
5 chunk, no newline
5 minutes should be enough even for a debug build on a slow machine.
5) Counting  - interface Countable allows to hook into the standard array function count().
5.4.0  Iterator support was added, as mysqli_result now implements Traversable.
5: Field Access
5C should be escaped
6 Should not match
64 elements
64-bit systems
64bit systems
6: Array Access
7 Should match
76 996   line-break-chars string  Specifies the sequence of characters to append to each line as an end-of-line sign when "folding" is performed on a long header field.
7: Closures et al
8 Should not match
9 Should not match
A "Locale" is an identifier used to get language, culture, or regionally-specific  behavior from an API.
A "Locale" is an identifier used to get language, culture, or regionally-specific behavior from an API.
A "break iterator" is an ICU object that exposes methods for locating boundaries in text (e.g. word or sentence boundaries).
A B B (Zend: A D B) (Rule2)
A Compatibility library with PHP 5.5's simplified password hashing API.
A E_WARNING level error will be generated on failure.
A ImmMap cannot be mutated.
A ImmVector cannot be mutated.
A JavaScript implementation of the DeltaBlue constraint-solving algorithm, as described in:  "The DeltaBlue Algorithm: An Incremental Constraint Hierarchy Solver" Bjorn N.
A PEM formatted private key.
A Plan is an ordered list of constraints to be executed in sequence to resatisfy all currently satisfiable constraints in the face of one or more changing inputs.
A base class for connection, query and error results.
A benchmark has a name (string) and a function that will be run to do the performance measurement.
A binary function should not expect a null terminated string, and it should treat input as a raw stream of data
A binary function should work with all 256 characters that a character(8-bit) can take
A bit painful in php, exposing the IDs might be better if this is hot
A blank line in a CSV file will be returned as an array comprising a single null field, and will not be treated as an error.
A case for the emitter to get right.
A class extending from SessionHandler allows you to override the methods or intercept or filter them by calls the parent class methods which ultimately wrap the interal PHP session handlers.
A class on the first level in the inheritance chain
A class on the second level in the inheritance chain
A class representing a variable or object for use with SOAP services.
A class that handles prepared statements for the SQLite 3 extension.
A class that handles result sets for the SQLite 3 extension.
A class that interfaces SQLite 3 databases.
A class to represent a row.
A class to represent an iterator over the fields (columns) in a row.
A class to represent an iterator over the rows of a `AsyncMysqlRowBlock`.
A class value of 01 indicates a warning and is accompanied by a return code of SQL_SUCCESS_WITH_INFO.
A common use for this is to execute something like the pbmplus utilities that can output an image stream directly.
A common use for this socket type is to perform ICMP requests (like ping).
A concise syntax for getting a collection with a dot-separated name.
A connection between PHP and MongoDB.
A connection manager for PHP and MongoDB.
A constrained variable.
A constraint may be appended to the plan when all its input variables are known.
A cursor being "dead" does not mean that MongoCursor::hasNext() will return FALSE, it only means that the database is done sending results to the client.
A cursor is used to iterate through the results of a database query.
A cursor typically fetches a batch of result objects and store them locally.
A database file object.
A database reference is just a normal associative array, not an instance of MongoDBRef, so this class is a little different than the other data type classes.
A date is considered valid if each parameter is properly defined.
A document may be parsed piece-wise by calling xml_parse() several times with new data, as long as the is_final parameter is set and TRUE when the last data is parsed.
A failed server will have its corresponding entry set to FALSE.
A file archive, compressed with Zip.
A first element
A fun test for type inference.
A limit of -1, 0 or NULL means "no limit" and, as is standard across PHP, you can use NULL to skip to the flags parameter.
A list of available transports can be retrieved using stream_get_transports().
A list of possible flags for fnmatch() Flag Description FNM_NOESCAPE Disable backslash escaping.
A list of the flags can found under FilesystemIterator predefined constants.
A long chain of equality constraints is constructed with a stay constraint on one end.
A lot of behaviour needs to be specialcased to collections.
A lower numerical value causes more favorable scheduling.
A maximum of 8192 uncompressed bytes will be read at a time.
A micro second is one millionth of a second.
A much more intense test on lengths
A multi-byte character is counted as 1.
A negative value can be used to move backwards through the file which is useful when SEEK_END is used as the whence value.
A new month was started when the new moon was first observed.
A newline is not automatically added to the end of the message string.
A non-static closure has a bound instance if it has a scope and doesn't have an instance if it has no scope
A nonblocking test whether a connection has completed, or errored out.
A pass case.
A php script to test token_get_all()
A poor man's FileUtil::canonicalize in PHP
A positive increment will lower the priority of the current process, whereas a negative increment will raise the priority.
A process attempting to acquire a semaphore which it has already acquired will block forever if acquiring the semaphore would cause its maximum number of semaphore to be exceeded.
A query can optionally be nested in a "query" field if other options, such as a sort or hint, are given.
A reduced version of Exception::__toString().
A row block can be the full result of the query (if there is only one row block), or it can be the partial result of the query (if there are more than one row block).
A row block is either a full or partial set of result rows from a MySQL query.
A scheduler can be used to schedule a set of tasks based on their relative priorities.
A second call to msg_get_queue() for the same key will return a different message queue identifier, but both identifiers access the same underlying message queue.
A second call to sem_get() for the same key will return a different semaphore identifier, but both identifiers access the same underlying semaphore.
A second call to shm_attach() for the same key will return a different shared memory identifier, but both identifiers access the same underlying shared memory.
A second variant will take three additional parameters that define the cost of insert, replace and delete operations.
A simple duck typing example
A simple implementation of lossless compression and decompression using Huffman coding.
A simple package of data that is manipulated by the tasks.
A small array based on PHP_OS should cover a majority of systems and makes the problem of locales transparent for the end user.
A specific HPHPC bug constant propagated the value of this 'foo' to the abstract constant declaration 'I::foo'
A splay tree is a self-balancing binary search tree with the additional property that recently accessed elements are quick to access again.
A stream of JSON objects in a format that Facebook's test systems understand.
A stream resource representing a real file descriptor (e.g. opened file, a socket, STDIN).
A task control block manages a task and the queue of work packages associated with it.
A task that manipulates work packets and then suspends itself.
A task that manipulates work packets.
A task that suspends itself after each time it has been run to simulate waiting for data from an external device.
A tile is an image used to fill an area with a repeated pattern.
A timeout can be set at any time and will affect subsequent queries on the cursor, including fetching more results from the database.
A timeout of zero is interpreted as an infinite timeout.
A timer that periodically interrupts a request thread.
A trait that has a abstract function
A type specifier that says what type the argument data should be treated as.
A typical network connection is made up of 2 sockets, one performing the role of the client, and another performing the role of the server.
A unary input constraint used to mark a variable that the client wishes to change.
A unique identifier created for database objects.
A valid json string
A valid key is a string containing a variable name and a valid value is either a filter type, or an array optionally specifying the filter, flags and options.
A valid signature is absolutely required of all executable phar archives if the phar.require_hash INI variable is set to true.
A variable is known if either a) the variable is marked (indicating that has been computed by a constraint appearing earlier in the plan), b) the variable is 'stay' (i.e. it is a constant at plan execution time), or c) the variable is not determined by any constraint.
A wait handle representing a condition variable waiting for a notification
A wait handle representing asynchronous execution of async function
A wait handle representing asynchronous execution of async generator
A wait handle representing asynchronous operation
A wait handle that can be waited upon
A wait handle that can resume execution of PHP code
A wait handle that is always finished
A wait handle that succeeds with null after the desired timeout expires
A wait handle that succeeds with null once desired scheduling priority is eligible for execution
A wait handle that waits for a list of other wait handles
A warning will be emitted if a value has the wrong type, and the key/value pair in question will not be flipped.
ADD THE 2 HANDLES
AF_INET6 IPv6 Internet based protocols.
AF_UNIX Local communication protocol family.
ALERT TABLE
ALTER LOGFILE GROUP Syntax 11.1.3.
ALTER LOGFILE GROUP Syntax 13.1.4.
ALTER SERVER Syntax 11.1.5.
ALTER TABLESPACE Syntax 11.1.8.
ALTER TABLESPACE Syntax 13.1.9.
API insert id will be 101 because of UPDATE, SQL unchanged
API to tell this linter which lines were changed
API version 1.1.0 is required for SHA-256 and SHA-512 hash, and API version 1.1.1 is required to store empty directories.
ASCII value in binary form
ASCII value of '3' given
Absolute path
Absolute path.
Absolute paths are assumed to be attempts to load external files from the filesystem.
Absolute paths.
Abstract base interface that cannot be implemented alone.
Abstract class
Abstract method in "normal" class
Abstract method with body
Abstract superclass for constraints having a single possible output variable.
Abstract superclass for constraints having two possible output variables.
Accept a connection on a socket previously created by stream_socket_server().
Accept a connection.
Accept connection 1
Accept connection 2
Accept that connection
Access entities and notations with values.
Access not existing
Access publicId, systemId, name, internalSubset all with values.
Access via FT_UID
Accessing a nested shape-like array with non static key in non lvalue position doesn't change the array type - usage that should report errors.
Accessing a nested shape-like array with non static key in non lvalue position doesn't change the array type - usage with no errors.
Accessing a shape-like array with non static key in non lvalue position doesn't change the array type - usage that should report errors.
Accessing a shape-like array with non static key in non lvalue position doesn't change the array type - usage with no errors.
Accessing a tuple-like array with dynamic key in non lvalue position doesn't change the array type - usage that should report errors.
Accessing a tuple-like array with dynamic key in non lvalue position doesn't change the array type - usage with no errors.
Accessing fields/passing shapes to functions doesn't change the "known fields" property
According to the DOM standard this requires a DTD which defines the attribute ID to be of type ID.
According to the manual we should get an int but as of today we do get a string...
According to the memcached protocol spec these additional arguments "are subject to change for the convenience of memcache developers".
ActRec functions have a specific structure
Activate the fast drawing antialiased methods for lines and wired polygons.
Activate this constraint and attempt to satisfy it.
Activates the circular reference collector.
Actually send a command to the server.
Actually this value is set only if the process finds it is the only process currently attached to the semaphore.
Adapted from ext/hash/tests/hash_equals.php to remove clowny error tests
Adapted from ext/standard/tests/file/stream_001.php Removed 2/3 spammy warnings
Add "Foo Comment" as comment for the foo entry
Add ADD_DLLS to add extra DLLs like dynamic dependencies for standard  deps.
Add FILE section closing tag to the test case
Add a clean section to the test case
Add a default timezone, because Symfony requires a default timezone in the default php.ini
Add a handler task to this scheduler.
Add a key/value Pair to this Map.
Add a newline to the fatal file if we had a post-test fatal for better visual
Add a preheader to the loop to get interesting behavior.
Add a skipif section to the test case
Add a work task to this scheduler.
Add an EXPECTF section
Add an INI section to the test case
Add an idle task to this scheduler.
Add another text node to title.
Add code snippets here Call them from MeasureBasicOps.php to collect relative CPU time stats
Add constructor argument initialisation to test case
Add entries in the LDAP directory.
Add function or method initilaisation statements to the test case
Add in SQLite module
Add is constprop, and generally a PEI
Add leaf nodes for each symbol to the priority queue.
Add line of code to current helper
Add line of code to current opcode handler
Add microbenchmarks to BasicOps.php and add calls to them here
Add new attribute in a new namespace
Add new attribute w/o namespace
Add required oauth provider parameters.
Add some items to the list
Add the given constraint to the set of all constraints that refer this variable.
Add the indent
Add the new node to the queue.
Add the specified packet to the end of the worklist used by the task associated with the packet and make the task runnable if it is currently suspended.
Add the specified task and mark it as running.
Add the specified task to this scheduler.
Add the test section to call the function
Add this constraint to the constraint graph
Add this packet to the end of a worklist, and return the worklist.
Add to the section text.
Add up these numbers to specify needed rights.
Added in PHP 4.4.0 and 5.0.2, it uses the system locale, which can be changed using setlocale().
Adding an attribute and leaving one off
Additional attributes will also be contained in the resulting array dependant on the value of type.
Additional required extensions
Additionally it is possible to iterate over the current iterator entry.
Additionally, a warning will be issued.
Additionally, not all platforms support negative timestamps, so your date range may be limited to no earlier than the Unix epoch.
Additionally, one or more flags can be specified to modify the behaviour of the function.
Additionally, the port will contain the port of the remote host in the case of an unconnected AF_INET or AF_INET6 socket.
Adds a SOAP header to be returned with the response to the current request.
Adds a packet to the worklist of this block's task, marks this as runnable if necessary, and returns the next runnable object to run (the one with the highest priority).
Adds a pattern to the generator.
Adds an element to this Set and returns itself.
Adds an entry to a log file that's written when server crashes.
Adds new attribute node attr to element.
Adds one extra argument.
Adds one or more attributes to the specified dn.
Adds setting to the server environment.
Adds the Euro sign, French and Finnish letters missing in Latin-1(ISO-8859-1).
Adds the key/value Pairs produced by the specified Iterable to this Map.
Adds the keys of the specified KeyedContainer to the end of this Vector using the next available integer keys.
Adds the keys of the specified KeyedContainer to this Set.
Adds the keys of the specified container to this Set and returns the Set.
Adds the keys of the specified container to this Vector and returns the Vector.
Adds the specified key/value Pair to this Map.
Adds the specified value to the end of this Vector using the next available integer key.
Adds the specified value to this Set.
Adds the values produced by the specified Iterable to the end of this Vector using the next available integer keys.
Adds the values produced by the specified Iterable to this Set.
Adds this constraint to the constraint graph
Adds this constraint to the constraint graph.
Adjust ODBC settings
Adjusts the field types (width and subtype) of a pattern to match what is in a skeleton.
Advance the iterator to the next field (column).
Advance the iterator to the next row.
Advance this iterator forward one position.
Advance to the first valid element contained in a child iterator
Advantage mysqlnd - The metadata mysqlnd has availabe after prepare is better than the one made availabe by the MySQL Client Library (libmysql).
Advantage mysqlnd - see above
Advantage mysqlnd - see above...
Affected functions include stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), and fileperms().
After a timeout period, we do return as normal.
After being split, this node will contain all the content up to the offset.
After calling this function, you can no longer use the FTP connection and must create a new one with ftp_connect().
After each() has executed, the array cursor will be left on the next element of the array, or past the last element if it hits the end of the array.
After enabling SKIP_PASV_IP flag, the following output will be seen..
After processing a request, any semaphores acquired by the process but not explicitly released will be released automatically and a warning will be generated.
After releasing the semaphore, sem_acquire() may be called to re-acquire it.
After remaining idle on the server for some amount of time, cursors, by default, "die." This is generally the behavior one wants.
After removing the semaphore, it is no more accessible.
After the execution of PDO::query(), MySQL expects you to fetch the results from the line before sending new commands.
After the socket socket has been created using socket_create() and bound to a name with socket_bind(), it may be told to listen for incoming connections on socket.
After the socket socket has been created using socket_create(), bound to a name with socket_bind(), and told to listen for connections with socket_listen(), this function will accept incoming connections on that socket.
After the ttl has passed, the stored variable will be expunged from the cache (on the next request).
Again, I'd like to see an error message
Alias for __construct
Alias for real_escape_string
Alias of checkdnsrr()
Alias of getmxrr
Alias of gzwrite()
Alias of mysqli_options
Alias of mysqli_real_escape_string
Alias of odbc_exec
Alias of odbc_field_len
Alias of options()
Alias of session_write_close()
Alias of set_magic_quotes_runtime()
All  write and create with write modes 2.
All Rights Reserved.
All bindings remain intact after reset.
All callback functions could be set with xml_set_element_handler() etc and assumed to be methods of object.
All classes and interfaces are referred to by their corresponding namespaces.
All constructors should be registered as such
All data will be destroyed.
All instances created with the same persistent_id will share the same connection.
All iterators share a token that becomes invalidated the minute the container is mutated.
All methods are the same as the base `AsyncMysqlException`.
All numerical array keys will be modified to start counting from zero while literal keys won't be touched.
All of the following columns are "too hot" - too server dependent
All of the functions/methods  provided are static.
All of the functions/methods provided are static.
All of these periods are equivalent.
All of these should throw.
All other vales will return null and throw undefined property notice.
All other vales will throw undefined property notice and ignore value.
All read and append modes 2.
All resources are read-only.
All result memory will be automatically freed when the script terminates.
All rights reserved.
All string data must be UTF-8 encoded.
All strings are the same when displayed in their respective encodings
All strings going into the database should be UTF8.
All strings sent to the database must be UTF-8.
All tests complete.
All the standard formats including offsets
All these settings will also go into the environment for tests that are directly executed, so you can also set things like PHPRC here to force an executable to use a specific php.ini file.
All typing from Foo is lost.
All values are treated as PDO::PARAM_STR.
All values come back as `string`s.
All variable-types are supported.
All we can do is make a few dummy calls to ensure that all codes gets executed which checks the flag.
Allocate with function entry/exit
Allocate without function entry/exit
Allow T_POW
Allow delayed implementation for abstract classes
Allow for either Win32 or Unix.
Allow the Tany from a missing return type
Allow the Tany from an untemplated array
Allow the garbage collector to reclaim the memory used by the splay tree no matter how we exit the tear down function.
Allows detailed specification of the modifications to perform.
Allows you to disable an already defined stream wrapper.
Allows you to disable standard libxml errors and enable user error handling.
Allows you to implement your own protocol handlers and streams for use with all the other filesystem functions (such as fopen(), fread() etc.).
Almost everything that is not a CRUD operation can be done with a database command.
Alpha channel is not supported by all browsers, if you have problem with your browser, try to load your script with an alpha channel compliant browser, e.g. latest Mozilla.
Also also works on objects.
Also assume that tests will be found by reflecting over the framework.
Also check that foreign arrays work for indirect calls
Also do not forget that those arrays are passed by reference and will be modified after socket_select() returns.
Also do not forget that those arrays are passed by reference and will be modified after stream_select() returns.
Also fine because the attributes aren't required and don't have defaults
Also note that PHP internally stores integer values as signed values of a machine-dependent size.
Also note that string positions start at 0, and not 1.
Also possible reason for this function returning FALSE after successful call to mysqli_query() can be too large result set (memory for it cannot be allocated).
Also returns FALSE on failure.
Also verifies that everything is where it is supposed to be.
Also you can close it with Memcache::close().
Also you can use memcache_add() function.
Also you can use memcache_close() function.
Also you can use memcache_connect() function.
Also you can use memcache_decrement() function.
Also you can use memcache_delete() function.
Also you can use memcache_flush() function.
Also you can use memcache_get_stats() function.
Also you can use memcache_get_version() function.
Also you can use memcache_increment() function.
Also you can use memcache_pconnect() function.
Also you can use memcache_replace() function.
Also you can use memcache_set() function.
Also, I did not ask to get exceptions using the mysqli_options()
Also, JP2 files may contain multiple JPEG 2000 codestreams.
Also, Maps do not automagically convert integer-like string keys (ex.
Also, Sets do not automagically convert integer-like strings (ex.
Also, ZipArchive::FL_UNCHANGED may be ORed to it to request information about the original file in the archive, ignoring any changes made.
Also, if the first character in a range has a higher ASCII value than the second character in the range, no range will be constructed.
Also, in practice, once you've unset a property in hhbbc's current type system, it will end up at TCell, so we can't really see this.
Also, the beginning of a year varied from one culture to another - not all accepted January as the first month.
Also, this function requires root privileges.
Also, xhprof_frame_begin() and xhprof_frame_end() have to be paired up really well, so not to interfere with regular function's profiling, unless that's the intention.
Also, you may want to read the section on variables from external sources.
Alter the timestamp of a DateTime object by incrementing or decrementing in a format accepted by strtotime().
Alternate between English and French meals
Alternation 3.
Alternatively one might chose to entirely override a method like the garbage collection callback gc.
Alternatively, a DSN-less connection string can be used.
Alternatively, a file extension may be specified with the second parameter.
Alternatively, ob_end_clean() will silently discard the buffer contents.
Alternatively, the debug member can be set to a non-FALSE value to turn debug on.
Alternatively, the debug property can be set to a FALSE value to turn debug off.
Alternatively, the sslChecks member can be set to FALSE to turn SSL checks off.
Alternatively, the sslChecks member can be set to a non-FALSE value to turn SSL checks off.
Alternatively, the static function IntlDateFormatter::formatObject() may be used instead.
Although implode() can, for historical reasons, accept its parameters in either order, explode() cannot.
Although it is possible to simply change the compression of a tar archive using this method, it is better to use the PharData::compress() method for logical consistency.
Although the error messages generated by the socket extension are in English, the system messages retrieved with this function will appear depending on the current locale (LC_MESSAGES).
Although this function can handle dates all the way back to 4713 B.C., such use may not be meaningful.
Although this function can handle dates all the way back to 4714 B.C., such use may not be meaningful.
Although this function can handle dates all the way back to the year 1 (3761 B.C.), such use may not be meaningful.
Although this function is only documented as having a single parameter, you may pass additional arguments to this function.
Although we have changed the value, the property was declared in the class.
Always use the generated libtool - Mac OSX uses 'glibtool'
Ambiguous, but mostly PHP compat since PHP version lacks distinct setters
An ImagickPixel object or a string representing the target color.
An SplFileOjbect does not have children
An UID is a unique identifier that will not change over time while a message sequence number may change whenever the content of the mailbox changes.
An XHP attribute annoted as "string" can contain Stringish values for now
An `AsyncMysqlConnectResult` provides information about the timing for creating the current connection.
An `AsyncMysqlErrorResult` can occur due to `'TimedOut'`, representing a timeout, or `'Failed'`, representing the server rejecting the connection or query.
An abstract class representing a system-maintainable relationship (or "constraint") between a set of variables.
An abstract method shouldn't contain code
An active connection to a MySQL instance.
An additional grant of patent rights can be found in the PATENTS file in the same directory.
An alias for gettext.
An alias for implode().
An alternate padding character can be specified by prefixing it with a single quote (').
An append item format is a pattern used to append a field if there is no good match.
An array may be used to designate multiple needles.
An array may be used to designate multiple replacements.
An array of filenames
An array of files
An array of names, which will be passed as a dir name
An array of prefixes
An array value will be FALSE if the filter fails, or NULL if the variable is not set.
An asynchronous MySQL client.
An asynchronous MySQL connection pool.
An edit constraint is then added to the opposite end and the time is measured for adding and removing this constraint, and extracting and executing a constraint satisfaction plan.
An empty string if no error occurred.
An error will be raised if the search parameter is not an array.
An event can include a connection, an error condition, a query, etc.
An example of the difference between this algorithm and the regular computer string sorting algorithms (used in ArrayObject::asort) method can be seen in the example below.
An example of the difference between this algorithm and the regular computer string sorting algorithms (used in sort()) can be seen in the example below.
An example use of addslashes() is when you're entering data into a database.
An example use of stripslashes() is when the PHP directive magic_quotes_gpc is on (it's on by default), and you aren't inserting this data into a place (such as a database) that requires escaping.
An example:    Get next batch send errors  Code: 1  Could not send the query to the database.
An exception object will be passed to the function
An idle task doesn't do any work itself but cycles control between the two device tasks.
An immutable ordered collection where values are keyed using integers 0 thru n-1 in order.
An immutable ordered dictionary-style collection.
An immutable ordered set-style collection.
An input constraint is one that depends on external state, such as the mouse, the keybord, a clock, or some arbitraty piece of imperative code.
An invalid address likely to crash PHP due to stack exhaustion if it goes to the validation regex.
An invalid category name also causes a warning message.
An invalid json string which will cause an syntax error, in this case we used ' instead of " for quotation
An iterator implementation for iterating over a Map.
An iterator implementation for iterating over a Set.
An iterator implementation for iterating over a Vector/ImmVector.
An object that can be used to store or retrieve binary data from the database.
An optional alignment specifier that says if the result should be left-justified or right-justified.
An optional number, a width specifier that says how many characters (minimum) this conversion should result in.
An optional padding specifier that says what character will be used for padding the results to the right string size.
An optional precision specifier in the form of a period (`.') followed by an optional decimal digit string that says how many decimal digits should be displayed for floating-point numbers.
An optional query string may be used to specify extra options.
An ordered collection where values are keyed using integers 0 thru n-1 in order.
An ordered dictionary-style collection.
An ordered set-style collection.
An out-of-band data transmission mechanism may be supported.
An unprivileged process may only set its soft limit to a value from 0 to the hard limit, and irreversibly lower its hard limit.
An unsuccessful call returns null.
And all results are packaged back in a single batch.
And as of PHP 5.4.0, call-time pass-by-reference was removed, so using it will raise a fatal error."
And better support for folding.
And here, we need to make sure, that the traits behave the same
And if you do call it from user code, it will construct successfully, but you will fail on the *first* method call to the instantiated object.
And now a good one that will work
And now allow the evil to do his work
And now native PS
And now the collection-y type settings
And now without parameters...
And return the sorted array.
And so should the combination of both
And that's: no connection.
And the main source directory 'PHPUnit' was changed to 'src'.
And you can turn off wordwrap by passing in 0.
And, if that happens, we will always be redownloading the framework since the SHA is different than what we expect.
Anonymous shape parameter type hint
Anonymous shape return type
Another HPHP extension, implicit fields.
Another PHP comment
Another variation of the theme
Another wrapper function, this one should be used any time a particular test passes or fails
Answer a collection of unsatisfied constraints sorted in order of decreasing strength.
Answer the constraint that this constraint overrides, if there is one, or nil, if there isn't.
Answer true if this constraint is satisfied in the current solution.
Any GD image can be used as a tile, and by setting the transparent color index of the tile image with imagecolortransparent(), a tile allows certain parts of the underlying area to shine through can be created.
Any additional characters beyond 1024 bytes will be truncated.
Any call to pcntl_alarm() will cancel any previously set alarm.
Any combination of ReflectionMethod::IS_STATIC, ReflectionMethod::IS_PUBLIC, ReflectionMethod::IS_PROTECTED, ReflectionMethod::IS_PRIVATE, ReflectionMethod::IS_ABSTRACT, ReflectionMethod::IS_FINAL.
Any expression which do not return nodes will return an empty DOMNodeList.
Any failed MCRouter action will throw an instance of MCRouterException
Any kind of socket or Memcached server level errors (except out-of-memory) may trigger the failover.
Any multi-word arguments (e.g. FROM "joey smith") must be quoted.
Any number (between 0 and 255) could be used for type, if the user is willing to assume the risk that the database might eventually do something with binary data based on type.
Any of those shall fail - see also bugs.php.net/43568
Any return value is fine.
Any selection of N outside this range will be truncated to the nearest limit.
Any special environment settings  these may overwrite the test defaults...
Any special ini settings  these may overwrite the test defaults...
Any special ini settings these may overwrite the test defaults...
Any strings that are not set will simply be skipped.
Any system resources used by the child are freed.
Any test names after that line are probably detailed error information.
Any whitespace in the format string matches any whitespace in the input stream.
Any whitespace in the format string matches any whitespace in the input string.
Any whitespace in the format string matches any whitespace in the line from the file.
Anything goes in XHP
Anyway, the typehint is currently only for optimization purposes at this point in time.
Apparently, all iterators that store other iterators are forced to do this layer of caching.
Append a copy of a value to the end of the Vector, assigning the next available integer key.
Append a value to the hash, with the next-highest available numeric key.
Append the string data to the end of the character data of the node.
Appending to a vector-like array makes it unsafe to return it as original generic type.
Appends raw XML data to a DOMDocumentFragment.
Applies a convolution matrix on the image, using the given coefficient and offset.
Applies gamma correction to the given gd image given an input and an output gamma.
Applies the user-defined function funcname to each element of the input array.
Arbitrary - must not be UTC, and better if it's not where you are, or where tests are run
Argument is not a shape
Arguments greater than maximum no.of ags
Arguments less than minimum no.of args
Arguments more than expected
Array Access
Array Note: PHP Warning, strlen() expects parameter 1 to be string, array given
Array indices can be accessed as properties in read/write
Array keys correspond to host:port of server and values contain the individual server statistics.
Array keys correspond to stats parameters and values to parameter's values.
Array keys: "sec" - seconds since the Unix Epoch "usec" - microseconds "minuteswest" - minutes west of Greenwich "dsttime" - type of dst correction
Array of Regexes
Array of available fruits
Array of locations in Europe
Array of options
Array representing a possible record set returned from a database
Array to be sorted
Array with data for sorting.
Array with data for testing
Array with default and assigned keys
Array with duplicate string and integer keys
Array with duplicate string and integer keys and values
ArrayAccess
ArrayObject::__construct hasn't run
Arrays and objects are explored recursively with values indented to show structure.
Arrays that have been referenced to each other
Arrays with regular values
As a convenience, this class also implements the Iterator interface, allowing the collection of values to be navigated using the methods defined in that interface.
As a result, gd automatically blends the existing color at that point with the drawing color, and stores the result in the image.
As a rule of thumb your code should always be able to work correctly if assertion checking is not activated.
As an example, if you want to edit the global config.json file.
As error levels are added, the range of integers increases, so older integer-based error levels will not always behave as expected.
As idate() always returns an integer and as they can't start with a "0", idate() may return fewer digits than you would expect.
As it is, even with invariants and various ifs to guarantee the type, HHHBC is not able to infer the property type.
As of PHP 4.2.0, there is no need to seed the random number generator with srand() or mt_srand() as this is now done automatically.
As of PHP 5.3.0, PHP contains its own implementation and will use that if the system lacks of support for one or more of the algorithms.
As opposed to MongoCollection::find(), this method will return only the first result from the result set, and not a MongoCursor that can be iterated over.
As soon as HHVM is changed to "normal" Zend behavior, these tests need to be edited/removed
As such, it can be used to implement a set (a collection of unique values) where the quality of an object being unique is determined by the value returned by this function being unique.
As such, this test had to be slightly modified.
As we can't fix it, we document how it has behaved from the first day on.
As with all functionality that modifies the contents of a phar, the phar.readonly INI variable must be off in order to succeed if the file is within a Phar archive.
Ask phabricator to display it on the diff UI
Ask the user to provide an email address, so that QA team can contact the user
Assert false
Assert false and bail
Assert not active
Assertions should be used as a debugging feature only.
Assertions should not be used for normal runtime operations like input parameter checks.
Assign in case it's a DateTimeImmutable
Assign to var
Assignment to array makes it unsafe to return it as original generic type
Associative (string) keys will be maintained, but numeric keys will be re-indexed.
Associative array with numeric keys
Associative array with string keys
Associative arrays
Assume that it is satisfied.
Assume this constraint is satisfied.
Assume user code will contain the elements for file and line.
Assume: I am not already satisfied.
Assume: c is satisfied.
Assume: sources are all satisfied.
Assuming this is from GNU Tar
Astronomically low chance of a false positive here, and making sure we don't accidentally return a constant value is worth it.
At least IIS can be configured to do this.
At least one host must be given (port optional, always defaulting to 27017) and as many hosts as desired may be connected to.
At most two GridFSFile chunks will be loaded in memory.
At that point, this function will return the chosen secondary.
At the end of the request the environment is restored to its original state.
At the time of this test's creation, this sequence of code generated redundant loads from the property for the CGetM and the SetM.
At the time this test was added, this function could sink increfs into conditional exits of a region, which tests jcc service requests that have the jcc and the stub in the same code block.
At this point 'persistent' is not to be confused with what a user calls a 'persistent' - in this case 'persistent' means that mysqlnd uses malloc() instead of emalloc().
Attach metadata to the caller's stack frame.
Attempt to find a way to enforce this constraint.
Attempt to satisfy the given constraint and, if successful, incrementally update the dataflow graph.
Attempting to assign to a property of type 'this' will fail if they are not the same expression dependent type.
Attempts to change the group of the file filename to group.
Attempts to change the group of the symlink filename to group.
Attempts to change the mode of the specified file to that given in mode.
Attempts to change the owner of the file filename to user user.
Attempts to change the owner of the symlink filename to user user.
Attempts to create the directory specified by pathname.
Attempts to load an SQLite extension library.
Attempts to remove the directory named by dirname.
Attempts to rename oldname to newname.
Attempts to set the access and modification times of the file named in the filename parameter to the value given in time.
Attribute 'att1' for element 'tag1'
Attributes include the image width, height, size, and others.
Autocommit was off - by definition.
Autoincrementing does not work well with a sharded database, as it is impossible to find what the next number should be quickly.
Autoloader using a map file (gtClassMap.php) defining the file to load each class from.
Automatically convert results to numbers.
Available address/protocol families Domain Description AF_INET IPv4 Internet based protocols.
Available flags Flag Description FILE_USE_INCLUDE_PATH Search for filename in the include directory.
Available since PHP 5.1.0 and Libxml 2.6.7.
Available socket types Type Description SOCK_STREAM Provides sequenced, reliable, full-duplex, connection-based byte streams.
Average delay between when a callback is scheduled in the MySQL client and when it's actually ran, in microseconds.
Average loop time of the MySQL client event, in microseconds.
Avoid actually writing anything to disk, Just make sure the calling semantics work
B B   (Zend: B D) (Rule 3)
B B   input-charset string  Specifies the character set in which the first parameter field_name and the second parameter field_value are presented.
B B (PHP 5.3 outputs C B)
B B B  (Zend: B D B) (Rule 2)
B B B (Zend: B D B) (Rule2)
B always changes 'static'
BEGIN MANUAL SECTION
BELOW THIS ISN'T PART OF THE ZEND API.
BIG5 950 Traditional Chinese, mainly used in Taiwan.
BIG5-HKSCS  Big5 with Hong Kong extensions, Traditional Chinese.
BIG5-HKSCS Big5 with Hong Kong extensions, Traditional Chinese.
BSD's answer to this one.
BSON document: end
BSON document: length
BUG FIX NEEDED: Due to some recent updates to Reflection, this default method for finding tests in frameworks is failing for certain frameworks.
BUG: there's no call to parent::__construct
Backtracing while having cycle
Backward Transitions, add().
Backward Transitions, diff().
Backward Transitions, sub().
Backwards seeking is done using rewind() first.
Bad DN value
Bad DN value with attributes
Bad DN value without attributes
Bad Type raise Notice (Type Conversion) and Warning....
Bad format strings are usually the cause of the latter.
Bad function.
Bad param name.
Bad param type.
Bad parameter
Base comment block
Based on MediaWiki's ApiFormatWddxTest The omitted data in the "b" variable previously caused a fatal error
Based on ext/zlib/tests/zlib_wrapper_flock_basic.php except that locking actually works in HHVM, where it fails in PHP
Based on the internal implementations or the files in the examples subdirectory there are also some .php files to experiment with.
Basic Xenon test.
Basic test case for a PHP function
Basic test for preg_replace_callback
Basically any concrete implementation of `AsyncMysqlResult` can provide these type of statistics by calling its `clientStats()` method and a method on this class.
Basically, if you see a call to spl_dual_it_fetch in the PHP source, it's very likely that you should call this.
Basically, it defines two collections: files, for file metadata, and chunks, for file content.
Baz::f is inconsistent with Foo:f, but we don't detect this error because we only check the direct parent of a class for consistency.
Be aware that all executable phar archives must contain .phar in their filename.
Be aware that no non-executable archives cannot contain .phar in their filename.
Be careful if you choose to escape characters 0, a, b, f, n, r, t and v.
Be warned, be careful.
Because PHP's integer type is signed and many platforms use 32bit integers, filesize() may return unexpected results for files which are larger than 2GB.
Because a `Pair` is immutable by default, this just returns the current object.
Because every system is setup differently, phpinfo() is commonly used to check configuration settings and for available predefined variables on a given system.
Because of eccentricities in the performance of libresolv between platforms, DNS_ANY will not always return every record, the slower DNS_ALL will collect all records more reliably.
Because of the MessageFormatter class, the program does not need to know the order of the fragments.
Because of the way splay trees work, the engine also has to deal with a lot of changes to the large tree object graph.
Because of this, it may be best to reserve this function for servers which explicitly require preallocation.
Because priority levels can differ between system types and kernel versions, please see your system's getpriority(2) man page for specific details.
Because priority levels can differ between system types and kernel versions, please see your system's setpriority(2) man page for specific details.
Because the SessionHandler wraps the current internal save handler methods, the above example of encryption can be applied to any internal save handler without having to know the internals of the handlers.
Because these archives do not contain a stub and cannot be executed by the phar extension, it is possible to create and manipulate regular zip and tar files using the PharData class even if phar.readonly php.ini setting is 1.
Before 5.3.6, the only values recognized are TRUE or FALSE, which are the same as setting or not setting the DEBUG_BACKTRACE_PROVIDE_OBJECT option respectively.
Before displaying a customized PHP page, one may call this function to clear previously written content, so to replay what will be displayed.
Begin an async connection to a MySQL instance.
Begin running a query on the MySQL database client.
Begin running a query with multiple statements.
Behave like a builtin function so that we pass Zend's tests
Behaves identically to fstat().
Behaves the same as strftime() except that the time returned is Greenwich Mean Time (GMT).
Below is a list of interfaces/classes already availabel natively through the SPL extension grouped by category.
Benchmark results hold the benchmark and the measured time used to run the benchmark.
Besides carrying data, packets form linked lists and are hence used both as data and worklists.
Besides the blank character this also includes tab, vertical tab, line feed, carriage return and form feed characters.
Beware: this benchmark is written in a grotesque style where the constraint model is built by side-effects from constructors.
Beyond the allowable limit for an e-mail address.
Beyond the install root, git info, test roots, etc., the other properties are optional and may or may not be set
Binary Data Test
Binary safe case-insensitive string comparison.
Binary search is still possible while is senseless as there are just two rows (see also find_entity_for_char()).
Binary type variations
Bind and connect sockets to localhost
Binding the same var twice with different types you can get unexpected results (e.g. binary trash for the string and misc data for the integer.
Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was use to prepare the statement.
Binds a parameter to a statement variable.
Binds a value to a corresponding named or question mark placeholder in the SQL statement that was use to prepare the statement.
Binds and calls the closure.
Binds the name given in address to the socket described by socket.
Binds the value of a parameter to a statement variable.
Binds to the LDAP directory with specified RDN and password.
Bitmasks acceptable to iconv_mime_decode()    Value Constant Description     1 ICONV_MIME_DECODE_STRICT  If set, the given header is decoded in full conformance with the standards defined in RFC2047.
Bitmasks acceptable to iconv_mime_decode_headers()    Value Constant Description     1 ICONV_MIME_DECODE_STRICT  If set, the given header is decoded in full conformance with the standards defined in RFC2047.
Bitwise Operators
Blending mode is not available when drawing on palette images.
Block and wait for xbox task's result.
Block and wait until pagelet task finishes or times out.
Block on one or more asynchronous operations, or until the specified timeout has occurred.
Block the currently executing task and return the next task control block to run.
Blue if we go from something "faily" to something "faily" e.g., E to I or F
Body parts are not decoded by this function.
Boolean Operators
Boolean Values
Boolean data
Boolean keys
Both data and keys are compared by using user-supplied callbacks.
Both dn and extraattribs are associative arrays whose keys are converted to OIDs and applied to the relevant part of the request.
Both frombase and tobase have to be between 2 and 36, inclusive.
Both invalid arguments
Both on order of scans and also whether things are in CPP or PHP (based on mode of test)
Both portions of the string are returned in units of seconds.
Both should return filesize in bytes.
Both the data and the indexes are compared by using separate callback functions.
Both these methods and the internal iterator objects provided to foreach are backed by the same state (e.g. the position of the iterator and its current value).
Both will return "false" on error (no cached time or the stamp doesn't exist).
Bounds checking
Break out each type into an array
Break recursion
Breaks this node into two nodes at the specified offset, keeping both in the tree as siblings.
Briefly, an SQLSTATE consists of a two characters class value followed by a three characters subclass value.
Broken pipe, tear down so future requests might succeed
Buffering not started yet, should return false
Build a large blob that's hard to compress
Build array:
Build chain of n equality constraints
Build compilation database.
Build ini data
Builds a new ImmVector by concatenating the elements of this ImmSet with the elements of the specified Iterable.
Builds a new ImmVector by concatenating the elements of this ImmVector with the elements of the specified Iterable.
Builds a new ImmVector by concatenating the values of this ImmMap with the elements of the specified Iterable.
Builds a new Vector by concatenating the elements of this Set with the elements of the specified Iterable.
Builds a new Vector by concatenating the elements of this Vector with the elements of the specified Iterable.
Builds a new Vector by concatenating the values of this Map with the elements of the specified Iterable.
Built-in function, relaxed check
BuiltinEnum contains the utility methods provided by enums.
Bump the version if you're making changes that will affect that scores, e.g. if you add a new benchmark or change an existing one.
But does not generate a graphical output.
But if you call `setResuable(false)`, then the current connection will not be reusable by the connection pool.
But just keep executing anyway and use the previous value...
But not new Foo()
But reads should always fail
But the MySQL 5.1 manual states: Truncation operations do not return the number of deleted rows.
But the above assignment causes a new expression id to be made
But the expression id is still stable
But the namespace declaration start handler is called before the start tag handler for each namespace declared in that start tag.
But there is a problem, either with this code (that worked before the Reflection changes) or Reflection itself.
But you can check the API at least partly this way Extra BLOB tests are in mysqli_stmt_send_long()
But, for now, you can use this class for asynchronous connection(s) to a MySQL database.
By contrast, __autoload() may only be defined once.
By default (or if FALSE is specified) images are stacked left-to-right.
By default RAND_MAX is 32768 although no constant is defined for it for user space apps
By default it will replace, but if you pass in FALSE as the second argument you can force multiple headers of the same type.
By default the actual locale is returned.
By default the name of the method (key in this array) is uppercased to become the actual command sent to the redis server.
By default the parser is lenient.
By default the return value is int(200).
By default, MYSQLI_STORE_RESULT is used.
By default, NumberFormatter::TYPE_DOUBLE is used.
By default, an empty element will be created.
By default, fetches as both.
By default, fs.files and fs.chunks are the collection names used.
By default, only the - sign is used on a number if it's negative.
By default, runs the all tests but SINGLE_SCRIPT
By default, the PHP driver always uses type 2: a byte array.
By default, the current connection *is* resuable.
By default, the current connection is reusable by the pool.
By default, the queries are relative to the root element.
By default, the returned document does not include the modifications made on the update.
By default, this class will wrap whatever internal save handler is set as as defined by the session.save_handler configuration directive which is usually files by default.
By default, this is null.
By default, this method will not overwrite existing files, the third parameter can be set to true to enable overwriting of files.
By doing it this way you have all information for the call in one place and do not clutter the function namespace with a callback function's name not used anywhere else.
By doing it this way you have all the information for the call in one place and do not clutter the function namespace with a callback function's name not used anywhere else.
By invoking the methods provided by the NumberFormatter class, you can format numbers, currencies, and percentages according to the specified or default locale.
By printing out a notice that we are actively stating the file then subsequently performing multiple stat operations on it we effectively test the stat cache mechanism
By setting the Content-type to image/gif and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly.
By using MYSQL_BOTH (default), you'll get an array with both associative and number indices.
By using MYSQL_BOTH, you'll get an array with both associative and number indices.
By using the MYSQLI_ASSOC constant this function will behave identically to the mysqli_fetch_assoc(), while MYSQLI_NUM will behave identically to the mysqli_fetch_row() function.
C C   (Zend outputs: C B B) (Rule 1)
C C   (Zend: C D) (Rule 3)
C must always be initialized, independently of whether it's optional
C should not have constant bar
C should not have method bar
C should not have property bar
C's doc comment
C1 is the parent
CAUTION: the insert_id() API call is not supposed to return the same value as a call to the LAST_INSERT_ID() SQL function.
CHILDREN / PARENTS
CLI is both tolerant of occasionally larger latencies, and also we want to make sure that we don't *always* get an error that the server isn't ready on the first CLI script execution in a repo.
CLIENT_MULTI_STATEMENTS - should be disabled silently
CNAME  target: FQDN of location in DNS namespace to which the record is aliased.
CREATE INDEX, DROP INDEX
CREATE LOGFILE GROUP Syntax 11.1.9.
CREATE LOGFILE GROUP Syntax 13.1.10.
CREATE MULTIPLE CURL HANDLE
CREATE SERVER Syntax 11.1.11.
CREATE SERVER, ALTER SERVER, DROP SERVER We don't really try to use federated, we just want to see if the syntax works
CREATE TABLE, DROP TABLE
CREATE TABLESPACE Syntax 11.1.14.
CREATE TABLESPACE Syntax 13.1.15.
CREATE, ALTER, RENAME, DROP DATABASE
CREATE, DROP, CALL SP and SF
CRYPT_EXT_DES - Extended DES-based hash.
CURLFile can be used to upload a file with CURLOPT_POSTFIELDS.
CURL_MULTI_GETCONTENT TEST CREATE RESOURCES
CURRENTLY UNSUPPORTED IN HHVM.
Cache BadClass
Cache a variable in the data store.
Caches a variable in the data store, only if it's not already stored.
Calculate the number of title text nodes (1).
Calculate the number of title text nodes (2).
Calculate the walkabout strength, the stay flag, and, if it is 'stay', the value for the current output of this constraint.
Calculates the MD5 hash of str using the RSA Data Security, Inc.
Calculates the MD5 hash of the file specified by the filename parameter using the RSA Data Security, Inc.
Calculates the group access list for the user specified in name.
Calculates the metaphone key of str.
Calculates the soundex key of str.
Calendar information is returned as an array containing the elements calname, calsymbol, month, abbrevmonth and maxdaysinmonth.
Calendar modes Mode Meaning Values 0 Gregorian - abbreviated Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec 1 Gregorian January, February, March, April, May, June, July, August, September, October, November, December 2 Julian - abbreviated Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec 3 Julian January, February, March, April, May, June, July, August, September, October, November, December 4 Jewish Tishri, Heshvan, Kislev, Tevet, Shevat, AdarI, AdarII, Nisan, Iyyar, Sivan, Tammuz, Av, Elul 5 French Republican Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prairial, Messidor, Thermidor, Fructidor, Extra
Call PDOStatement::closeCursor() to release the database resources associated with the PDOStatement object before issuing your next call to PDO::query().
Call a function, like call_user_func()
Call a function.
Call at your own peril as non-hoisted classes might cause fatal.
Call back function
Call destructors
Call the existing PHP builtin function error_reporting to set the value behind EG(error_reporting), as visible through the test function ezc_get_error_reporting().
Call the static function and move into the ErrorCodes scope
Call the wrapper around zend's EG(error_reporting) macro to test that EG(error_reporting) in both lval and rval context works plausibly.
Call this when one of your `invariant`s has been violated.
Call this when one of your invariants has been violated.
Callback function
Callback function which returns always false
Callback function which returns always true
Called after calling getChildren(), and its associated rewind().
Called by session_start(), based on session.gc_divisor, session.gc_probability and session.gc_lifetime settings.
Called by session_write_close(), when session_register_shutdown() fails, or during a normal shutdown.
Called during conversion from internal UChar to destination encoding
Called during conversion from source encoding to internal UChar representation
Called for each element to test whether it has children.
Called from the subject (i.e. when it's value has changed).
Called right after the session starts or when session_start() is called.
Called when a session starts or when session_start() is invoked.
Called when end recursing one level.
Called when iteration begins (after the first rewind() call).
Called when the iteration ends (when valid() first returns FALSE).
Called when the next element is available.
Calling PDO::prepare() and PDOStatement::execute() for statements that will be issued multiple times with different parameter values optimizes the performance of your application by allowing the driver to negotiate client and/or server side caching of the query plan and meta information, and helps to prevent SQL injection attacks by eliminating the need to manually quote the parameters.
Calling PDO::rollBack() will roll back all changes to the database and return the connection to autocommit mode.
Calling addslashes() with all arguments
Calling array_intersect() with default arguments
Calling array_intersect() with more arguments
Calling array_intersect() with more arguments.
Calling array_intersect_assoc() with default arguments
Calling array_intersect_assoc() with more arguments
Calling array_intersect_assoc() with more arguments.
Calling array_merge_recursive() with default arguments
Calling array_merge_recursive() with more arguments
Calling array_rand() with default arguments
Calling array_rand() with optional argument
Calling array_reverse() with all possible arguments
Calling array_reverse() with default arguments
Calling array_slice() with all possible arguments
Calling array_slice() with mandatory arguments
Calling array_unshift() with default argument
Calling array_unshift() with optional arguments
Calling array_values() with all possible arguments
Calling chop() with all arguments
Calling chop() with default arguments
Calling chop() with the charlist not present at the end of input string
Calling chunk_split() with all possible arguments
Calling chunk_split() with default chunklen and ending string
Calling chunk_split() with default ending string
Calling crc32() with all possible arguments checking for the return type of the function
Calling finfo_close() with all possible arguments
Calling finfo_file() with all possible arguments
Calling finfo_open() with different options
Calling functions from within the profiler function should note use the profile (it would cause an infinite loop)
Calling getReturn() directly here is okay due to auto-priming
Calling getdate() with all possible arguments
Calling getdate() with mandatory arguments
Calling gettimeofday() with all possible arguments
Calling gettimeofday() with mandatory arguments
Calling gmdate() with all possible arguments
Calling gmdate() with mandatory arguments
Calling gmmktime() with all possible arguments
Calling gmmktime() with mandatory arguments
Calling gmstrftime() with all possible arguments
Calling gmstrftime() with mandatory arguments
Calling gzcompress() with all possible arguments Compressing a big string
Calling gzcompress() with mandatory arguments
Calling gzdeflate() with all possible arguments Compressing a big string
Calling gzdeflate() with just mandatory arguments
Calling gzencode() with mandatory arguments
Calling gzencode() with various compression levels Compressing a big string
Calling gzopen() with all possible arguments
Calling gzopen() with mandatory arguments
Calling htmlspecialchars_decode() with default arguments
Calling htmlspecialchars_decode() with optional 'quote_style' argument
Calling idate() with mandatory arguments
Calling imagecolorallocate() with all possible arguments
Calling imap_close() with all possible arguments
Calling imap_close() with mandatory arguments
Calling imap_fetch_overview() with all possible arguments
Calling imap_fetch_overview() with mandatory arguments
Calling imap_fetchbody() with all possible arguments
Calling imap_fetchbody() with mandatory arguments
Calling imap_fetchheader() with all possible arguments
Calling imap_fetchheader() with mandatory arguments
Calling localtime() with all possible arguments
Calling localtime() with mandatory arguments
Calling localtime() with possible optional arguments
Calling mail() with all additional headers
Calling mail() with all possible arguments
Calling mail() with mandatory arguments
Calling sizeof() with zero and more than expected arguments .
Calling sprintf() with default arguments
Calling sprintf() with four arguments
Calling sprintf() with three arguments
Calling sprintf() with two arguments
Calling str_split() with all possible arguments
Calling str_split() with default arguments
Calling strcspn() with all possible arguments
Calling strcspn() with default arguments
Calling strcspn() with three arguments
Calling strftime() with all possible arguments
Calling strftime() with mandatory arguments
Calling strip_tags() with all possible arguments
Calling striplashes() with all arguments
Calling strnatcasecmp() with all possible arguments
Calling strspn() with all possible arguments
Calling strspn() with default arguments
Calling strspn() with three arguments and default len argument
Calling syslog() with all possible arguments
Calling this function will implicitly start output buffering if it is not active already.
Calling touch() with all possible arguments
Calling wordwrap() with default arguments
Calls a function for every element in an iterator.
Calls back on every edge.
Calls back on every node.
Calls back on every root.
Calls invariant_exception if multiple constants have the same value.
Calls the registered consumer handler callback function, which is set with OAuthProvider::consumerHandler().
Calls the registered timestamp handler callback function, which is set with OAuthProvider::timestampNonceHandler().
Calls the registered token handler callback function, which is set with OAuthProvider::tokenHandler().
Can also be an array of key-value pairs to insert into the cache.
Can also be determined later using stream_socket_get_name().
Can be FORCE_GZIP (the default) or FORCE_DEFLATE.
Can be any type except a resource.
Can be either a string, an array or a stream resource.
Can be given as 0 for no compression up to 9 for maximum compression.
Can be integer or float, other values will be converted to a numeric value.
Can be overridden by individual resource records.
Can be removed once we support ParamCoerceMode in PHP
Can be used to check if the autoloader uses the include path to check for classes.
Can be used to split a string into smaller chunks which is useful for e.g. converting base64_encode() output to match RFC 2045 semantics.
Can have custom class named ImmSet.
Can have custom class named ImmVector.
Can have custom class named Map.
Can have custom class named Pair.
Can have custom class named Set.
Can pass new static()
Can return a string or an integer depending on the mode.
Can't add since it isn't more specific
Can't define a method named isSet()
Can't run all the framework tests and "all but" at the same time
Can't run framework tests both by file and single test
Can't wait for soapaction to be fully deprecated
Cancel Awaitable, if it's still pending.
Cannot access parent:: when current class scope has no parent
Cannot be used with persistent PDO instances.
Cannot manually set to not be accessible.
Cannot use a scalar value as an array
Canonical decomposition followed by canonical composition.
Canonical decomposition.
Carriage returns are the devil
Cartesian x-coordinate
Cartesian y-coordinate
Case 1: CDATA Sections
Case 2: replace some characters so that we get comments instead
Case 3: replace even more characters so that only textual data is left
Case that should throw an error
Case-insensitive constants are stored as lower-case.
Casts a given value to a string.
Catch recoverable error with handler
Catchable fatal error
Category/locale names can be found in  RFC 1766 and  ISO 639.
Cause errors (like division by zero) to raise an exception instead of emitting warnings.
Caused by a query timing out.
Caused by accessing a cursor incorrectly or a error receiving a reply.
Causes a store to add the specified flag to the flags set for the messages in the specified sequence.
Caution  Remember, the current calendar system being used worldwide is the Gregorian calendar.
Caution (Windows only) When PHP is talking to a SMTP server directly, if a full stop is found on the start of a line, it is removed.
Caution count() may return 0 for a variable that isn't set, but it may also return 0 for a variable that has been initialized with an empty array.
Certain characters have special significance in HTML, and should be represented by HTML entities if they are to preserve their meanings.
Change each element and dump result.
Change existing dependencies to the wanted tag
Changes PHP's current directory to directory.
Changes the current directory to the specified one.
Changes the root directory of the current process to directory.
Changes to the parent directory.
Changing the data structure will require that PHP be running as the same user that created the queue, owns the queue (as determined by the existing msg_perm.xxx fields), or be running with root privileges.
Changing the name of the parameter
Changing the static variable
Characters before and after the formatting string will be returned unchanged.
Characters we know not to be numbers.
Chararter type variations
Check a non-Latin language.
Check alternate vararg schemes first
Check and make sure that the server is always online, and old server exits after a finite amount of time.
Check content of buffer after flush - if flush failed it should still contain the string above.
Check determining failure error codes.
Check effects of changing misc collattion options.
Check for a peculiar translator interaction with IssetM, where a dirty, variant local in the same BB as IssetM could cause the local to morph into a cell.
Check for close operation on the file handle
Check for empty strings
Check for mappings
Check for read operation
Check for sequences
Check for size of existing data file after opening the file in "w" mode again, expected: 0 bytes
Check for size of existing data file after opening the file in "wb" mode again, expected: 0 bytes
Check for size of existing data file after opening the file in "wt" mode again, expected: 0 bytes
Check for size of existing data file before opening the file in "w" mode again, expected: size of content
Check for size of existing data file before opening the file in "wb" mode again, expected: size of content
Check for size of existing data file before opening the file in "wt" mode again, expected: size of content
Check for strings
Check for the content of handle
Check for the existence of file
Check for the type of resource
Check getting error string by integer error code.
Check getting global error code.
Check getting global error message.
Check heap integrity
Check if C has constant foo
Check if C has private method privateFoo
Check if C has private property privateFoo
Check if C has protected method protectedFoo
Check if C has protected property protectedFoo
Check if C has public method publicFoo
Check if C has public property publicFoo
Check if C has static method staticFoo
Check if C has static property staticFoo
Check if a code point has the Alphabetic Unicode property.
Check if a code point has the Lowercase Unicode property.
Check if a code point has the Uppercase Unicode property.
Check if a code point has the White_Space Unicode property.
Check if a persitent connection to memcache is being used.
Check if collator_sort() properly supports copy-on-write.
Check if collator_sort_with_sort_keys() properly supports copy-on-write.
Check if database exists and is exhaustive.
Check if error code equals to expected one.
Check if handler accepts such types of operands (op1 and op2)
Check if iterator is at a valid `AsyncMysqlRow`.
Check if specialized handler is defined
Check if test should be skipped.
Check if the iterator is at a valid field (column).
Check if the new value has been set.
Check if the pattern has been changed.
Check if the platform has the performance.now high resolution timer.
Check if the second copy remains unsorted.
Check if there is a current element after calls to rewind() or next().
Check if we are already disabled first
Check if we are being given a mime.types file or if we should use the default URL.
Check if we have hit the stream timeout
Check position of internal array pointer after calling array_slice()
Check position of internal array pointer after calling natcasesort()
Check that ImmSet is a ConstSet.
Check that Set::map() removes duplicates from the resulting set.
Check that all keys get deleted
Check that all keys were stored
Check that an explicit null gets coerced to NullObject, not stdClass
Check that either a method or a function is specified
Check that every instance gets their own copy of the collection literal.
Check that extra function arguments aren't leaked when variable variables are used in the same function.
Check that literal syntax works for ImmSet.
Check that the class name is valid
Check that the function alias exists.
Check that the function name is valid
Check that the method name is valid
Check that the right operand of 'instanceof' is not an enum
Check that the translator correctly adapts to callsites with variable argument reffiness.
Check that there is no third value
Check that we correctly handle static method lookups on abstract types constrained by Tvars
Check the MySQL C API reference manual for details.
Check the actual serialized output.
Check the debug info
Check the line
Check the position of the internal array pointer after calling array_key_exists()
Check the position of the internal array pointer after calling array_merge().
Check the position of the internal array pointer after calling array_push()
Check the position of the internal array pointer after calling the function
Check the specified UTF-8 string for possible security or spoofing issues.
Check the whether two specified UTF-8 strings are visually confusable.
Check this out later.
Check to see if composer dependencies are necessary to run the test
Check to see if this node is a text node.
Check umask() on file/dir
Check whether a detailed log is wanted.
Check whether a junit log is wanted.
Check whether an option exists
Check whether resource is lost after close operation
Check whether the given Awaitable has finished.
Check whether the given error code indicates failure.
Check whether user test dirs are requested.
Checking OBJECTS type
Checking array_sum() with integer and float array containing duplicate values
Checking case sensitiveness
Checking for Class and Objects
Checking for internal array pointer beint reset when shift is called
Checking for return value and the new array formed from push operation
Checking if all lines are still usable
Checking on OBJECTS type
Checking on RESOURCE type
Checking on resource types
Checking readfile() operation on hard link
Checking readfile() operation on soft link
Checking that the initialization of constructors is properly detected
Checking the behavior of dir() function by passing directories which have valid and invalid relative path.
Checking warning messages
Checking with (current) dir
Checking with block in file
Checking with current file
Checking with the out of range ASCII value(given in binary format)
Checkout out our baseline test code via SHA or branch
Checks an OAuth request.
Checks an xbox task's status.
Checks current value of a server stats.
Checks each key to see whether it has a valid variable name.
Checks finish status of a pagelet task.
Checks if a transaction is currently active within the driver.
Checks if multiple results are available
Checks if one ore more APC keys exist.
Checks if the asked feature is supported for the specified version.
Checks if the data inside `AsyncMysqlConnection` object is valid.
Checks if the encoding match succeeded.
Checks if the key is present in the map.
Checks if the parameter is variadic.
Checks if the provided string is already in the specified normalization form.
Checks if the specified byte stream is valid for the specified encoding.
Checks information about the current mailbox.
Checks the current mailbox status on the server.
Checks the validity of the date formed by the arguments.
Checks whether a file or directory exists.
Checks whether a provided key exists in the current `Pair`.
Checks whether the child process exited because of a signal which was not caught.
Checks whether the child status code represents a normal exit.
Checks whether the client disconnected.
Checks whether the given constant exists and is defined.
Checks whether the given key is the private key that corresponds to cert.
Checks whether val is 'not a number', like the result of acos(1.01).
Checks whether val is a legal finite on this platform.
Checksum calculated as if the checksum field was spaces
Checksum in the middle...
Child class extending abstract class
Child classes may just override the protected property without implementing a constructor or calling parent one.
Children are inserted in the correct order.
Choice formats can be used in conjunction with MessageFormatter to handle plurals, match numbers, and select from an array of items.
Chunks an array into size large chunks.
Class X is related to neither ParentClass nor ChildClass.
Class alias of undefined class:
Class definition
Class definition for object variable
Class for all test cases
Class for basic test case construction
Class for basic test case construction for class methods
Class for extended variations.
Class for method under test (see gtFunction for non-OO tests)
Class for simple errors - one too many args and one too few
Class for variation tests for a PHP function
Class for variation tests for a PHP method
Class is now a Tvar of Tunresolved.
Class reperesents a single PHP function.
Class to get object variable
Class values other than '01', except for the class 'IM', indicate an error.
Class with static member
Class with two singleton instances.
Class without any member
ClassConstant
Classes that implement this interface no longer support __sleep() and __wakeup().
Clean the temporary file
Clean up the user arc config we are using
Cleanup any left-over tmp files from last run.
Cleanup previous runs.
Clear OS byte before encode
Clear out the reference to destruct the array
Clears all current bound parameters.
Clears any output contents that have not been flushed to networked.
Clears the libxml error buffer.
Clears the user/system cache.
Close all ODBC connections
Close handle
Close the current connection.
Closes a file pointer to a pipe opened by popen().
Closes the database connection.
Closes the directory stream indicated by dir_handle.
Closes the imap stream.
Closes the prepared statement.
Closes the result set.
Closing the resource handles
Closure in variable
Closure object is empty
Coerce a string into a native type Reference: http://yaml.org/type/bool.html TODO: Use only words from the YAML spec.
Coerce all the values in a traversable.
Coerce to a valid value or null.
Coerce to valid value or throw UnexpectedValueException This is useful for typing deserialized enum values.
Collation keys can be compared directly instead of strings.
Collator class.
Collect existing system locales and get 2 valid locales that can be use to  pass as argument to setlocale(), pass 2 invalid arguments along with two valid arguments
Collect existing system locales and get three locales that can be use to  pass as argument to setlocale()
Collect existing system locales and prepare a list of locales that can be used as  input to setlocale()
Collect existing system locales and set one among them, Check the currency settings in the new locale
Collect information about the host system for our report Fetch phpinfo() output so that we can see the PHP environment Make an archive of all the failed tests Send an email
Collection names can use any character in the ASCII set.
Collections
Collections tests from HHJsonDecodeTest.php
Colors present only in the palette are not resolved.
Comment about the frameworks:  - Have a 'git_commit' field to ensure consistency across test runs as we may have different download times for people, as well as redownloads.
Comment for A::baz()
Comment for class A
Commented out as it's HHVM-only.
Commit was not issued.
Commits a transaction, returning the database connection to autocommit mode until the next call to PDO::beginTransaction() starts a new transaction.
Common cases
Common constants
Common protocols Name Description icmp The Internet Control Message Protocol is used primarily by gateways and hosts to report errors in datagram communication.
Compare each to each.
Compare string pairs in the given array using specified locale.
Compare strings using en_US locale.
Compare strings using lt_LT locale.
Compare strings using ru_RU locale.
Compare strings.
Compare two strings using PHP strcmp() semantics.
Compare two strings.
Compare value of attribute with value of same attribute in an LDAP directory entry.
Compare various string pairs using various locales.
Compares array1 against array2 and returns the difference.
Compares container1 against container2 and returns the difference.
Compares the keys from array1 against the keys from array2 and returns the difference.
Compares the keys from container1 against the keys from container2 and returns the difference.
Compares two strings in case-insensitive manner
Compares two strings in case-sensitive manner
Comparison function
Compatibility decomposition followed by canonical composition.
Compatibility decomposition.
Compile a list of all test files (*.phpt).
Compile only test.
Complex resources are containers which can be either integer-indexed or string-indexed (just like PHP arrays).
Complex types are returned as ResourceBundle object.
Compressing a smaller string
Compute stats
Computes digest hash value for given data using given method, returns raw or binhex encoded string.
Computes the difference of arrays by using a callback function for data comparison.
Computes the difference of arrays with additional index check, compares data and indexes by a callback function.
Computes the difference of arrays with additional index check, compares data by a callback function.
Computes the geometric mean of a set of numbers.
Computes the geometric mean of a set of rms measurements.
Computes the geometric mean of a set of throughput time measurements.
Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions Note that the keys are used in the comparison unlike in array_uintersect().
Computes the intersection of arrays with additional index check, compares data by a callback function.
Computes the intersection of arrays, compares data by a callback function.
Concat two matrices.
Concatenate result strings.
Concatenate the sorted array and function result with output string.
Confidence in results
Configuration items supported by iconv_mime_encode()    Item Type Description Default value Example scheme string  Specifies the method to encode a field value by.
Configuration overrides configargs key type openssl.conf equivalent description digest_alg string default_md Selects which digest method to use x509_extensions string x509_extensions Selects which extensions should be used when creating an x509 certificate req_extensions string req_extensions Selects which extensions should be used when creating a CSR private_key_bits integer default_bits Specifies how many bits should be used to generate a private key private_key_type integer none Specifies the type of private key to create.
Configuration.
Confirm file pointer moves correctly
Connect and send request 1
Connect and send request 2
Connect to destination address
Connect to it
Connect to mysql to determine the current charset so we can diffinate it
Connection seems fine
Connections on which no query has been send - 1
Connections on which no query has been send - 3 Difference: pass two connections
Consider using prepared statements instead.
ConstIndexAccess
Constant name in key, constant value in value.
Constants defined from moduleInit() such as AF_INET should still be visible to defined() even in repo mode
Constants may only evaluate to scalar values
Constrains two variables to have the same value.
Constraints that do no computation, such as stay and edit constraints, are not included in the plan.
Construct a directory iterator from a path-string.
Construct a new Collator instance
Construct a new array iterator from anything that has a hash table.
Construct test case header
Construct the argument list to pass to the function being tested
Construct the argument list to pass to the method being tested
Construct the argument lists to pass to the function being tested
Construct the common closing statements (clean, done, EXPECTF...)
Construct the common headers (title, file section..) of the test case
Construct the list of all possible ways to call the subject (function or method)
Construct the steps in the order of execution
Construct the test case as an array of strings
Constructs  the test case as a array of strings
Constructs a Splay tree node.
Constructs a Splay tree.
Constructs a new ReflectionTypeAlias.
Constructs a new ReflectionTypeConstant.
Constructs the test case as a array of strings
Contain referenced variables 2.
Container for all possible variation test cases
Container for all possible variation test cases for a method
Container for all possible variation test cases of functions
Contains error information for a failed operation (e.g., connection, query).
Contains some reusable utilities for command line php scripts.
Contains the information about results for query statements that ran before a MySQL error.
Content from file is from libiconv testkit.
Contents of the returned array    Key: Value:     msg The CURLMSG_DONE constant.
Continue asynchronous iteration
Continues retrieving/sending a file non-blocking.
Convert a string to a double, then back to a string again.
Convert all or part of a YAML document stream read from a URL to a PHP variable.
Convert all or part of a YAML document stream read from a file to a PHP variable.
Convert all or part of a YAML document stream to a PHP variable.
Convert extension names to lowercase
Convert it to a high quality png file
Convert numeric string reference of string str in a specified block to character.
Convert the well-formed XML document in the given file to an object.
Convert valid DN
Converted to EUC-JP
Converted to EUC-JP Test for object
Converted to EUC-JP Test for scaler, array and object
Converted to JIS (base64 encoded) Test for multiple slcaler
Converted to SJIS (base64 encoded)
Converts Julian Day Count to a string containing the Gregorian date in the format of "month/day/year".
Converts Julian Day Count to a string containing the Julian Calendar Date in the format of "month/day/year".
Converts a JPEG file into a WBMP file.
Converts a Julian Day Count to the French Republican Calendar.
Converts a Julian Day Count to the Jewish Calendar.
Converts a PNG file into a WBMP file.
Converts a date from the French Republican Calendar to a Julian Day Count.
Converts a score value to a string with at least three significant digits.
Converts a string to an array.
Converts character encoding of variables vars in encoding from_encoding to encoding to_encoding.
Converts comparison result to a character.
Converts from one Cyrillic character set to another.
Converts logical Hebrew text to visual text.
Converts specified character codes in string str from HTML numeric character reference to character code.
Converts the character encoding of string str to to_encoding from optionally from_encoding.
Converts the given mime_encoded_text to UTF-8.
Copies mail messages specified by msglist to specified mailbox.
Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h.
Copy the elements of an iterator into an array.
Copy the line as is
Copyright (c) 2014, Facebook, Inc.
Copyright (c) 2015, Facebook, Inc.
Copyright (c) 2016, Facebook, Inc.
Copyright 1996 John Maloney and Mario Wolczko.
Copyright 2004-present Facebook.
Copyright 2006-2008 the V8 project authors.
Copyright 2008 the V8 project authors.
Copyright 2009 the V8 project authors.
Copyright 2013 the V8 project authors.
Copyright 2014 the V8 project authors.
Copyright 2015-present Facebook.
Could also be an include of a file containing similar
Count blacklisted tests as failures Note clownylisted tests do not count in the stats (they are essentially no-ops)
Count of elements to follow
Count the elements in an iterator.
Count the number of UTF-8 code points in string or byte count if it's not valid UTF-8.
Counts all elements in an array, or properties in an object.
Counts the number of occurrences of every byte-value (0..255) in string and returns it in various ways.
Counts the number of times the needle substring occurs in the haystack string.
Counts the number of words inside string.
Counts the total number of registered benchmarks.
Craete a date object
Create Collator with the current locale.
Create Phar with the filenames above
Create Recursive Type Var
Create ReflectionClasses
Create ReflectionObjects
Create a 100*30 image
Create a 55x30 image
Create a DateTime object
Create a DateTime object from format
Create a DateTime object..
Create a DateTimeZone object
Create a DateTimeZone object..
Create a MIME mail resource.
Create a blank image and add some text
Create a collator  Creates a new instance of Collator.
Create a connection to the FastCGI application
Create a date object
Create a date object to modify
Create a deate object
Create a dummy node.
Create a file pointer using fopen() then try to close it using closedir()
Create a fixed array
Create a hash which maps string keys to string values.
Create a image
Create a new Doubly Linked List
Create a new async connection from a synchronous MySQL instance.
Create a new image from GD file or URL.
Create a new image from GD2 file or URL.
Create a new image from a given part of GD2 file or URL.
Create a new image instance
Create a new interval timer.
Create a number formatter  Creates a number formatter from locale and pattern.
Create a pair of unrelated types
Create a pool of connections to access a MySQL client.
Create a resource
Create a table of function designators
Create a temporary file for the test
Create a temporary file to read the data from
Create an ImmSet (if no parameters are passed) or create an ImmSet from an Traversable (if one parameter is passed).
Create an array containing a range of elements.
Create an array with a TestCloneable object in it.
Create an empty ImmMap (if no parameters are passed) or create an ImmMap from an KeyedTraversable (if one parameter is passed).
Create an empty ImmVector (if no parameters are passed) or create an ImmVector from an Traversable (if one parameter is passed).
Create an empty Map (if no parameters are passed) or create a Map from an KeyedTraversable (if one parameter is passed).
Create an empty Vector (if no parameters are passed) or create a Vector from an Traversable (if one parameter is passed).
Create an image instance
Create an instance of each pre-condition and run their check methods
Create an instance of the Reflection_Method class
Create an iterator to be limited
Create collator.
Create directories with different permissions to test whether scandir() can access them
Create empty image
Create instance of class in the test case
Create nested Tunresolved that can occur as a result of anonymous function call, and check that subsequent unification of those types works correctly.
Create new xmlwriter using memory for string output.
Create results for the framework that just ran.
Create some data buckets proportional to the number of threads
Create some more holes to give the memory allocator something to work with.
Create table here
Create the brush image
Create the client and send/receive the data
Create the main image, 100x100
Create the server side
Create two DateTime objects that will contain the same Unix timestamp, but have different timezones attached to them.
Create two copies of the given array.
Create two temporary files.
Create two timezone objects, one for Taipei (Taiwan) and one for Tokyo (Japan)
Creates a DOMDocument object of the specified type with its document element.
Creates a copy of the node.
Creates a file with a unique filename, with access permission set to 0600, in the specified directory.
Creates a filtered iterator using the callback to determine which items are accepted or rejected.
Creates a flexible generator according to the data for a given locale.
Creates a new 32-bit number with the given value.
Creates a new 64-bit number with the given value.
Creates a new OAuth object
Creates a new XMLWriter using memory for string output.
Creates a new XMLWriter using uri for the output.
Creates a new XSLTProcessor object.
Creates a new binary data object.
Creates a new date.
Creates a new mailbox specified by mailbox.
Creates a new regular expression.
Creates a new timestamp.
Creates a rectangle filled with color in the given image starting at point 1 and ending at point 2.
Creates a special or ordinary file.
Creates a spoof checker that checks for visually confusing characters in a string.
Creates a stream or datagram socket on the specified local_socket.
Creates a timer that will send a SIGALRM signal to the process after the given number of seconds.
Creates an HTML document from the DOM representation.
Creates an XML document from the DOM representation.
Creates an array by using the values from the keys array as keys and the values from the values array as the corresponding values.
Creates an array containing variables and their values.
Creates an empty DOMDocumentType object.
Creates an empty generator, to be constructed with addPattern(...) etc.
Creates an encoding detector.
Creates and returns a socket resource, also referred to as an endpoint of communication.
Creates and returns a stream context with any options supplied in options preset.
Creates the specified directory on the FTP server.
Creating a data file
Creating a dir resource
Creating a file resource
Creating a soft link
Creating a temporary file file
Creating an empty file
Creating an hard link
Creating dir resource
Creating file and inserting data into it
Creating file(stream type) resource
Creating number of unique files by passing a file name as prefix
Creating soft and hard links to a file and applying filegroup() on links
Creating soft and hard links to a file and applying fileinode() on links
Creating soft and hard links to a file and applying fileowner() on links
Creating soft and hard links to a file and applying fileperms() on links
Creating soft and hard links to a file and applying is_file() on links
Crop an image automatically using one of the available modes.
Crop an image using the given coordinates and size, x, y, width and height.
Curly braces are special because they can potentially indicate interpolation, so we backtrack when we realize that they are just plain characters.
Currency parsing.
Currently (Feb 10, 2005) CVS HEAD fails with the following message: Fatal error: Invalid opcode 137/1/8.
Currently it's the minimum required number of zeros If you remove one, it won't crash
Currently only LIBXML_NOEMPTYTAG is supported.
Currently only matches functions, so won't match classes/methods.
Currently our behavior during return when a local dtor throws a fatal is to swallow it, then keep rethrowing it from the enter hook for each destructor.
Currently private properties get a control-flow insensitive type (same type at all program points) so this should work.
Currently running test, and the results of each test.
Currently the select of connection flags is limited to STREAM_CLIENT_CONNECT (default), STREAM_CLIENT_ASYNC_CONNECT and STREAM_CLIENT_PERSISTENT.
Currently untyped for convenience.
Currently, all of the available tests live in the code itself.
Currently, mode is ignored and is always "rb".
Currently, no generic attributes are set but only driver specific: PDO::ATTR_CURSOR_NAME (Firebird and ODBC specific): Set the name of cursor for UPDATE ...
Currently, no generic attributes exist but only driver specific: PDO::ATTR_CURSOR_NAME (Firebird and ODBC specific): Get the name of cursor for UPDATE ...
Currently, snapshot mode may not be used with sorting or explicit hints.
Cursor for database file results.
Custom ArrayIterator (inherits from ArrayIterator)
Custom prefix test
Cuts a portion of str specified by the start and length parameters.
D D   (Zend outputs: D B B) (Rule 1)
D stands for decimal number.
DDL will issue an implicit commit
DEBUG_BACKTRACE_IGNORE_ARGS  Whether or not to omit the "args" index, and thus all the function/method arguments, to save memory.
DELETE EXPRS
DELETE STMTS
DELETE should be rolled back
DELETE should have been rolled back.
DIRECTORY_SEPARATOR .
DN not found
DO NOT MODIFY IT.
DOMAttr represents an attribute in the DOMElement object.
DOMCDataSection
DOMCharacterData using DOMComment
DROP LOGFILE GROUP Syntax 11.1.15.
DROP LOGFILE GROUP Syntax 13.1.16.
DROP TABLESPACE Syntax
DST not in effect
Data Definition Statements 13.1.3.
Data Manipulation Statements 13.2.2.
Data has been fetched   FALSE Error occurred   NULL No more rows/data exists or data truncation occurred
Data inside the query should be properly escaped.
Data is compared by using an user-supplied callback.
Data read from socket by socket_recv() will be returned in buf.
Data should be more than the size of a link.
Datatype of a field
Date Formatter class - locale-dependent formatting/parsing of dates using pattern strings and/or canned patterns.
Date Formatter is a concrete class that enables locale-dependent formatting/parsing of dates using pattern strings and/or canned patterns.
Date at which Sun is up all day at North Pole
Date at which Sun is up all day at South Pole
DateTime and DateTimeImmutable both throw exceptions when they fail but date_create and date_create_immutable should both simply return false
DateTimeInterface
De-allocates a color previously allocated with imagecolorallocate() or imagecolorallocatealpha().
Deactivates the circular reference collector.
Decides if this constraint can be satisfied and records that decision.
Decides if this constraint can be satisfied and which way it should flow based on the relative strength of the variables related, and record that decision.
Decimal integera data
Decimal size value
Decimal values
Declared Instance Properties
Declares the attribute name to be of type ID.
Declares the attribute specified by attr to be of type ID.
Declares the attribute specified by localName and namespaceURI to be of type ID.
Decodes encoded-word string str in MIME header.
Decodes the given BASE-64 encoded text.
Decreases a stored integer value.
Decrypts the S/MIME encrypted message contained in the file specified by infilename using the certificate and its associated private key specified by recipcert and recipkey.
Default Mongo exception.
Default ini settings
Default is 0, local stream.
Default is FALSE.
Default is TRUE.
Default port for TCP connections
Default to TRUE, meaning the server should be considered online.
Default to TRUE.
Default to an empty array.
Default value 0 means that the function is called only in the end, other special value 1 sets chunk_size to 4096.
Default value is an empty password.
Default value is defined by mysql.default_password.
Default value is defined by mysql.default_user.
Default value is the name of the user that owns the server process.
Defaults as a comma or the value set using SplFileObject::setCsvControl().
Defaults as a double quotation mark or the value set using SplFileObject::setCsvControl().
Defaults to -1 (don't seek).
Defaults to -1 (no limit).
Defaults to -1 (read all the remaining buffer).
Defaults to -1 which means that first found time zone corresponding to abbr is returned.
Defaults to -1, which means that whether the time zone has daylight saving or not is not taken into consideration when searching.
Defaults to 1 MiB.
Defaults to 1.0.
Defaults to FALSE.
Defaults to no filtering.
Defaults to null for the case where an array of key-value pairs is passed.
Defaults to the ReadWriteTimeout value set.
Defeat any conceivable constant-folding smarts
Define a bunch of objects all of which will use standard compare object handler
Define a couple of arrays.
Define error handler
Defined in array_reduce.hhas
Defined now
Defines a named constant at runtime.
Defines global benchsuite running mode that overrides benchmark suite behavior.
Defining __construct and filter makes filter a normal method
Defining resource
Definitions for mappings *from* Unicode
Definitions for mappings *to* Unicode.
Defualt flag value 2.
Delays program execution for the given number of micro seconds.
Delays program execution for the given number of seconds and nanoseconds.
Delete file having default permission but its dir having readonly permission Delete file having readonly permission but dir having default permission
Delete link files - soft and hard links
Delete some security related environment variables
Delete the existing directory
Deletes a particular entry in LDAP directory.
Deletes all the messages marked for deletion by imap_delete(), imap_mail_move(), or imap_setflag_full().
Deletes count characters starting from position offset.
Deletes filename.
Deletes the specified mailbox.
Deleting the file
Deleting the temporary file
Deleting the temporary files and directory used in the testcase
Deleting unexisting data
Dependencies could not have been gotten
Depending on how the file is compressed, the bzip2 or zlib extensions must be enabled to take advantage of this feature.
Depending on the environment, Unix domain sockets may not be available.
Depending on the server interface that you use, that means that they will either be sent to strerr (with PHP-CLI), or otherwise to the web server's error log.
Depending on the session handler, not all characters are allowed within the session id.
Depending on your PHP and GD versions this function is defined or not.
Depending on your version, the MySQL server migit not support this
Deprecated since 2002 or the like but documented to be deprecated since 5.3.
Derived::__destruct is being called not Base::__destruct
Deserialize the handles in the reverse order, so they lay over each other's memory.
Details: Cycles are detected when a marked variable is encountered downstream of the given constraint.
Details: If satifying the constraint is successful, it may override a weaker constraint on its output.
Details: Retracting the given constraint may allow some currently unsatisfiable downstream constraint to be satisfied.
Details: The outputs of a constraint are marked when it is added to the plan under construction.
Detect character encoding with current detect_order
Detects character encoding in string str.
Determine if a debugger is attached to the current thread, and return information about where it is connected from.
Determine if the password hash needs to be rehashed according to the options provided  If the answer is true, after validating the password using password_verify, rehash it.
Determine if the specified code point is a space character according to Java.
Determine the tests to be run.
Determine through a poor man's method whether a proxy will be required to get out to the internet.
Determines if the current SSL Context Provider is valid.
Determines if the file descriptor fd refers to a valid terminal type device.
Determines if the specified character is a space character or not.
Determines if the specified character is permissible as the first character in a Java identifier.
Determines if the specified character is permissible as the first character in an identifier according to Unicode (The Unicode Standard, Version 3.0, chapter 5.16 Identifiers).
Determines if the specified character is permissible in a Java identifier.
Determines if the specified character is permissible in an identifier according to Java.
Determines if the specified character should be regarded as an ignorable character in an identifier, according to Java.
Determines if the specified code point is a whitespace character according to Java/ICU.
Determines whether the code point has the Bidi_Mirrored property.
Determines whether the script timed out.
Determines whether the specified code point has the general category "Ll" (lowercase letter).
Determines whether the specified code point has the general category "Lu" (uppercase letter).
Determines whether the specified code point is "defined", which usually means that it is assigned a character.
Determines whether the specified code point is a "blank" or "horizontal space", a character that visibly separates words on a line.
Determines whether the specified code point is a "graphic" character (printable, excluding spaces).
Determines whether the specified code point is a base character.
Determines whether the specified code point is a control character (as defined by this function).
Determines whether the specified code point is a digit character according to Java.
Determines whether the specified code point is a hexadecimal digit.
Determines whether the specified code point is a letter character.
Determines whether the specified code point is a printable character.
Determines whether the specified code point is a punctuation character.
Determines whether the specified code point is a titlecase letter.
Determines whether the specified code point is an ISO control code.
Determines whether the specified code point is an alphanumeric character (letter or digit) according to Java.
Deterministic tests.
Difference between nested and local-var shape-like arrays
Difference between nested and local-var tuple-like arrays
Different heredoc strings
Different heredoc strings passed as argument to arrays
Different heredoc strings to be sorted
Different systems have different naming schemes for locales.
Different versions of ICU will give us slightly different formats for the DatePatternGenerator.
Difficult to define any meaningful constraints A possible better check would be calling mysqli_get_server_version() and comparing what we get.
Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35.
Direct: relative (from containing file path).
Direct: relative from CWD path.
Directory iterators don't work so well on them :p
Directory, ignore
Disable Expect: header (lighttpd does not support it :)
Disable redirects from being followed automatically, thus allowing the request to be manually redirected.
Disable showing stack traces on error conditions.
Disable/enable the ability to load external entities.
Disabled target, skip
Disables and returns code coverage.
Disabling specialization
Display current detection order
Display current setting
Displaying various variable through the array captured by the get_defined_vars function call
Displays fatal errors with this PHP document.
Do not call this directly.
Do not change this test it is a README.TESTING example.
Do not use Memcache::decrement() with item, which was stored compressed, because consequent call to Memcache::get() will fail.
Do not use Memcache::increment() with items that have been stored compressed because subsequent calls to Memcache::get() will fail.
Do not use addslashes() on strings that have already been escaped with magic_quotes_gpc as you'll then do double escaping.
Do not use in prod, use cachearchiver instead.
Do nothing to mimic Zend
Do nothing, the iterator always points to the top element
Do so a couple times, so we exercise both directions of each branch through multiple executions.
Do some crap, to block inlining
Do some guesswork as to the key and the value
Doc comment on a function generator
Doc comment on a method generator
Docs say bool, but Zend's default implementation returns null
Docs says to pass null, but Zend completely ignores the argument
Documentation on filters can be found in the Filters appendix.
Does not clear the stored stacks.
Does not returns incomplete line (EOL not found)
Does not work - outputs parent::__toString()
Does not work with memory streams or user streams.
Does some caching to hopefully be pretty cheap to call, especially when there are no errors and the code isn't changing.
Does some filtering to remove the all the function that we generally don't care about.
Does some more stuff.
Does some stuff.
Don't add signals that would cause the process to abort, the output will depend on whether it dumps its core.
Don't add to .gitattributes file if it already exists in there
Don't call EndIteration
Don't do anything if wordwrap is set to 0
Don't ever guess at the PHP executable location.
Don't expect a unicode value from the database, you'll get binary string
Don't follow
Don't handle methods yet, so function can't be indented
Don't override if we have an ini file already
Don't print out any of the PHPUnit Patterns to the errors file.
Don't rely on PCNTL extension being around
Don't test for the mysqli_query() return value here.
Don't touch it.
Don't try to lint deleted files or changed directories.
Don't want to parse any more test names after the Time line in the results.
Done with the original connection, create a second link to test the character set being defined
Double quoted strings
Double remove it
Draw a couple of brushes, each overlaying each
Draw a rectangle
Draw a red rectangle
Draw a text string on the image
Draw a white ellipse
Draw an ellipse to fill with a black border
Draw the rectangle
Draws a line between the two given points.
Draws a partial arc centered at the specified coordinate in the given image.
Draws a string at the given coordinates.
Draws a string vertically at the given coordinates.
Draws an ellipse centered at the specified coordinate on the given image.
Draws an ellipse centered at the specified coordinates.
Draws the character c vertically at the specified coordinate on the given image.
Drop first letter
Dropping a non-existent table with IF EXISTS generates a warning.
Dropping an existing table generates no warnings.
Drops this collection and deletes its indices.
Dtor1 should print after this, because the wait handle is still alive and blocked on thing().
Due a limitation in the current Zend Engine it is not possible to pass a constant modifier like NULL directly as a parameter to a function which expects this parameter to be passed by reference.
Due to an API flaw this shall not connect
Due to inheriting from an interface, this code fatals in HHVM.
Due to these aspects, UDP requires a minimum amount of protocol overhead.
Dump PHP array to YAML  The dump method, when supplied with an array, will do its best to convert the array into friendly YAML.
Dump YAML from PHP array statically  The dump method, when supplied with an array, will do its best to convert the array into friendly YAML.
Dumps a string representation of an internal zend value to output.
Dumps all variables in global state, including global variables, static variables, class statics and others.
Dumps array to YAML.
Dumps information about a variable  This function displays structured information about one or more expressions that includes its type and value.
Dumps the information contained by a prepared statement directly on the output.
Dumps to some very clean YAML.
Duplicate entry
During backward branches
During function exit
Dynamic Instance Properties
Dynamic array
Dynamic methods
DynamicFunctionCall
E.g, deadlocks  Future enhancements:  - Integrate the testing with our current "test/run" style infrastructure for official pass/fail statistics when we have diffs.
END MANUAL SECTION
ENT_NOQUOTES Will leave both double and single quotes unconverted.
ENT_QUOTES Will convert both double and single quotes.
EUC-JP - No encoding parameter
EUC-JP - No offset and encoding parameter
EUC-JP - With encoding parameter
EUC-JP string
EUC-JP strings
EUC-JP: control codes that are virtually lead bytes
EXPECTF is used here since the error format may change but ut  should always contain 'Division by zero'.
EXTR_PREFIX_ALL called twice with same prefix string
EXTR_REFS as second Argument
Each DOMDocument has a doctype attribute whose value is either NULL or a DOMDocumentType object.
Each MongoId is 12 bytes (making its string form 24 hexidecimal characters).
Each PHPUnit process gets its' own tempdir to avoid race conditions between multiple runs
Each Phar archive has the API version hard-coded into its manifest.
Each array contains equal strings that differ only in their length.
Each associative array contains at minimum the following keys: Basic DNS attributes    Attribute Meaning     host  The record in the DNS namespace to which the rest of the associated data refers.
Each call to PDOStatement::fetch() or PDOStatement::fetchAll() will update all the variables that are bound to columns.
Each call to fscanf() reads one line from the file.
Each callback that will be called will be passed an array of matched elements in the subject string.
Each document in the chunks collection contains a chunk of binary data, a files_id field that matches its file's _id, and the position of this chunk in the overall file.
Each document in the files collection contains the filename, upload date, and md5 hash.
Each element can be: An array describing the pipe to pass to the process.
Each element in the array is a wait handle, or null which represents crossing a context boundary.
Each element of the array corresponds to a line in the file, with the newline still attached.
Each element should be read as  1st element is delimiter, 2nd element is enclosure  and 3rd element is csv fields
Each element should be read as  1st element is delimiter, 2nd element is enclosure and 3rd element is csv fields
Each failed connection struct has its own timeout and before it has expired the struct will be skipped when selecting backends to serve a request.
Each key of the return value represents an individual field name and the corresponding element represents a field value.
Each limit has a soft and a hard limit.
Each line in the resulting array will include the line ending, unless FILE_IGNORE_NEW_LINES is used, so you still need to use rtrim() if you do not want the line ending present.
Each parameter can be either a string containing the name of the variable, or an array of variable names.
Each part is known as Relative Distinguished Name, or RDN.
Each recipient must receive both the sealed data and the envelope key that was encrypted with the recipient's public key.
Each resource has an associated soft and hard limit.
Each result column is stored in an array offset, starting at offset 0.
Each rowset can have a different set of columns from the preceding rowset.
Echo back the response to the user if it isn't a stream.
Echo it again.
Echo out the first four bytes 'this' without applying filter Remainder will get sucked into the read buffer though.
Edit constraints do nothing
Edits indicate that a variable is to be changed by imperative code.
Eexepcted numerical equivalent of above non-numerics
Either IntlDateFormatter::TRADITIONAL or IntlDateFormatter::GREGORIAN.
Either IteratorAggregate or Iterator must be used instead.
Either a RecursiveIterator or IteratorAggregate.
Either the new process is initializing too slowly, or the old server is stuck after takeover.
Either these methods are implemented to actually locally account for differences in these implementations, or is entirely common.
Either v1 or v2 may be changed to maintain this relationship but the scale factor and offset are considered read-only.
Either way, don't print anything out for those cases.
Either way, workaround it.
Elements 0 and key contain the key name of the array element, and 1 and value contain the data.
Elements are compared by user supplied function.
Elements will be arranged from highest to lowest when this function has completed.
Elements will be arranged from lowest to highest when this function has completed.
Else the option is set and TRUE is returned.
Else the option's value is returned.
Else, for unconnected sockets, name is the IP address of, the remote host, or NULL if the socket is connection-oriented.
Embeds binary IPTC data into a JPEG image.
Emit a 0 for an internal node and a 1 for each leaf.
Emit array of labels of opcode handlers and code for zend_opcode_handlers initialization
Emit code that dispatches to opcode handler
Emit code that initializes zend_opcode_handlers array
Emit executor code
Emit how big each leaf symbol is.
Emit labels for specialized executor For each opcode in opcode number order
Emit labels for unspecialized executor For each opcode in opcode number order
Emit last handler's label (undefined opcode)
Emit local variables those are used for helpers' parameters
Emit pointer to handler of undefined opcode
Emit pointer to specialized handler
Emit pointer to unspecialized handler
Empty Array as argument
Empty array
Empty array for abstract and concrete classes.
Empty dir will have .
Empty prefix
Empty string
Empty string expected
Empty strings
Empty, fail.
Emulated PS
Emulated PS first
Emulated prepared statements does not communicate with the database server so PDO::prepare() does not check the statement.
Emulates PS first
Enable LDAP pagination by sending the pagination control (page size, cookie...).
Enable interlancing
Enable showing stack traces on error conditions.
Enable use of Spyc from command line The syntax is the following: php Spyc.php spyc.yaml
EnableNetworkIOStatus has to be turned on.
Enabled by default.
Enables code coverage.
Enabling debugging using original zend_vm_def.h
Encode the tree first.
Encodes a URI to RFC 3986.
Encodes a given string str by the MIME header encoding scheme.
Encoding and decoding are done by the same function, passing an encoded string as argument will return the original version.
Encoding order may be specified by array or comma separated list string.
Encrypted data can be decrypted via openssl_private_decrypt().
Encrypted data can be decrypted via openssl_public_decrypt().
End of list, simply push it
End the current xml element.
Ends an artificial frame that xhprof_frame_begin() started.
Ends and reports xhprof network I/O profiling result.
Ends and reports xhprof profiling result.
Ends sampling based xhprof profiling.
Ends the DTD of the document.
Ends the current CDATA section.
Ends the current DTD attribute list.
Ends the current DTD element.
Ends the current DTD entity.
Ends the current attribute.
Ends the current comment.
Ends the current document.
Ends the current element.
Ends the current processing instruction.
Enforce this constraint.
English with Japanese characters
Ensure argument passing works
Ensure consistency in future.
Ensure correct unmangling of private property names for anonymous class instances
Ensure counter is advanced during loop
Ensure proper inheritance with get_class(anon class instance) used via class_alias
Ensure that '**' in comments is not parsed as an exponentiation operator
Ensure that PATH makes it through too
Ensure that an invariant is satisfied.
Ensure that count() and conversion to boolean work with proxy arrays
Ensure user buffers are not flushed by flush()
Ensure we can still unserialize the old style.
Ensure you can define a constant named type
Ensures that this Map contains only keys/values for which the specified callback returns true when passed the key and the value.
Ensures that this Map contains only keys/values for which the specified callback returns true when passed the value.
Ensures that this Set contains only keys/values for which the specified callback returns true when passed the key and the value.
Ensures that this Set contains only values for which the specified callback returns true.
Ensuring that inconsistent constructor use results in an error to avoid problems creeping in.
Ensuring that the collision still occurs as expected.
Entity Decl Tests
Entity declarations and notations are not made available.
Entity errors are reported at the end of the data thus only if is_final is set and TRUE.
Entity reference expansions and default attribute additions do not occur.
Entries are returned as soon as they are actionable (i.e., it does not wait for the entire timeout before returning results).
Entries in the LDAP result are read sequentially using the ldap_first_entry() and ldap_next_entry() functions.
Entry point for retracting a constraint.
Equivalent of realpath() but using zend-compat backend
Equivalent to standard PHP asort() using Collator.
Equivalent to standard PHP sort() using Collator.
Error -tests test compact with zero arguments.
Error Conditions
Error cases
Error conditions
Error handling.
Error messages are stacked, so this function should be called multiple times to collect all of the information.
Error on all four, duplicates
Error test case for a PHP function
Error test case for a PHP method
Error, new types don't create new value constructors
Error: 1148 SQLSTATE: 42000  (ER_NOT_ALLOWED_COMMAND) Load data infile not allowed
Error: s declares only 'x', but at runtime it can also have a 'z' that we don't know anything about.
Errors related to timestamp/nonce are thrown to this callback.
Escape a string for use in an LDAP filter or DN.
Escape a string to be safe to include in a query.
Establishes a connection to a LDAP server on a specified hostname and port.
Europe/Lisbon
Eval.CodeCoverageOutputFile allows you to specify an output file to store results at end of a script run from command line.
Even an InfiniteIterator stops if its inner Iterator is empty.
Even if it succeeds, the subsequent calls should not crash which is what this test is trying to verify.
Even if there are three lines of prologue, this will keep continuing before we call analyzeTest
Even if there is another comment inbetween.
Even if we are found out to alreay be installed, still ensure that appropriate tests are disabled.
Even if we have vendor/, try and grab composer in case we're missing we're running a framework that isn't already installed.
Even the browser may buffer its input before displaying it.
Every array has an internal pointer to its "current" element, which is initialized to the first element inserted into the array.
Every key and value in the current `Pair` is affected by a call to `mapWithKey()`, unlike `filterWithKey()` where only values that meet a certain criteria are affected.
Every subsequent call to strtok only needs the token to use, as it keeps track of where it is in the current string.
Every such reference will be replaced by the text captured by the n'th parenthesized pattern.
Every value in the current Pair is affected by a call to `map()`, unlike `filter()` where only values that meet a certain criteria are affected.
Everything else will cause bzopen to return FALSE.
Exact errors are in italics, errors where the message can vary are described in obliques.
Example: given an input pattern of "d-M H:m", and a skeleton of "MMMMddhhmm", the output pattern will be "dd-MMMM hh:mm".
Examples of identifiers include:  * en-US (English, United States) * zh-Hant-TW (Chinese, Traditional Script, Taiwan) * fr-CA, fr-FR (French for Canada and France respectively)   The Locale class (and related procedural functions) are used to interact  with locale identifiers--to verify that an ID is well-formed, valid,  etc.
Examples of identifiers include:  en-US (English, United States) zh-Hant-TW (Chinese, Traditional Script, Taiwan) fr-CA, fr-FR (French for Canada and France respectively)    The Locale class (and related procedural functions) are used to interact with locale identifiers--to verify that an ID is well-formed, valid, etc.
Exception here -- if this is in a closure, then it will return false PHP fatals on closures and getting default values, we will just return false.
Exception test cases with fault funclets and nested FPI regions of various complexity.
Exception thrown here
Execute a query with placeholders and parameters.
Execute a request to the FastCGI application asyncronously  This sends request to application and returns the assigned ID for that request.
Execute the command in the root directory.
Execute the prepared statement.
Execute the tasks managed by this scheduler.
Executes a prepared statement and returns a result set object.
Executes a query and returns a single result.
Executes a result-less query against a given database.
Executes an SQL query, returning an SQLite3Result object if the query returns results.
Executes the given XPath expression and returns a typed result if possible.
Executes the given XPath expression.
Executes the program with the given arguments.
Executor is defined as a set of functions
Exercise aliasing across re-entry.
Existent column
Exits process on failure.
Expect warnings about INF.
Expected output when executed (without hh_show's) C: C C C D: C C D E: MyTr MyTr MyTr
Expected to fail -- untrusted server cert and no CA File present
Expected: false
Expected: true
Expecting 0
Expecting bool(false)
Explicit override of simple prop.
Explicit override of the native magic prop.
Explicit test as Composer depends on it
Explicit value-less return also results in a NULL generator return value and there is no interference with type hints
Explicitly cast from whatever is passed.
Explicitly construct an `AsyncMysqlException`.
Explode with attributes
Explode without attributes
Export handlers and helpers
Exports all methods from specified class.
Expression Display Ids should be reset within method bo
Extended commentary
Extended language subtags
Extension point for subclasses to execute code after Composer.
Extension point for subclasses to execute code before Composer.
Extra args are ignored.
Extra argument
Extra arguments are ignored
Extra information on how these read preferences work is available as well through the read preferences documentation page.
Extra parameters are not stored in the statement, and not displayed.
Extra space, unrecognized tokens, or invalid values  ("February 30th") are not accepted.
Extract a plan for resatisfaction starting from the given source constraints, usually a set of input constraints.
Extract a plan for resatisfying starting from the output of the given constraints, usually a set of input constraints.
Extract as many whole grapheme clusters as will fit into the given number of bytes:
Extract tests from a specified file, returns an array of tested function tokens
Extract the given number of whole grapheme clusters from the string:
Extract whole grapheme clusters up to a maximum number of UTF-8 characters:
Extracted files and directories preserve permissions as stored in the archive.
Extracting Global Variables
Extracts the pid from the Mongo ID
Extracts/decodes a message section from the supplied filename.
F - file name
F - the argument is treated as a float, and presented as a floating-point number (non-locale aware).
F F   (Zend outputs: F B B) (Rule 1)
F F   (Zend: F D) (Rule 4)
F F  (Zend: F D D) (Rule 1)
F F  (Zend: F D) (Rule 4)
F F (Zend: F D D) (Rule 1)
F F (Zend: F D) (Rule 4)
F, g, G and b are not supported.
FALLTHROUGH
FALSE as key becomes key 0
FALSE if an error occurred.
FALSE is returned if incorrect parameters were passed.
FALSE is returned if split_length is less than 1.
FALSE outputs lowercase hexits.
FILEINFO_PRESERVE_ATIME - if possible preserve the original access time FILEINFO_SYMLINK - follow symlinks FILEINFO_DEVICES - look at the contents of blocks or character special devices FILEINFO_COMPRESS - decompress compressed files
FILE_APPEND If file filename already exists, append the data to the file instead of overwriting it.
FIPS-180 Vectors
FIRST CAPTURE
FIX: posix_isatty(STDOUT) was always returning false, even though can print in color.
FIXME(t4599379): This is a Traversable
FIXME: HHVM doesn't support extension info
FIXME: HHVM doesn't support the disable_functions directive.
FIXME: HHVM doesn't support this
FIXME: Implicit public
FIXME: ReflectionParameter sh/could have native data pointing to the relevant Func::ParamInfo data structure
FIXME: the test really needs something to fseek(3) on the FILE* used internally for this test to be really effective.
FNM_CASEFOLD Caseless match.
FNM_PATHNAME Slash in string only matches slash in the given pattern.
FNM_PERIOD Leading period in string must be exactly matched by period in the given pattern.
FPushClsMethod
FPushClsMethodD
FPushClsMethodF
FPushObjMethod
FPushObjMethodD
FS with strings
FTP this script to a server
Failing to prepare is OK
Failover may occur at any stage in any of the methods, as long as other servers are available the request the user won't notice.
Failure can only happen due to invalid parameters.
Failure can only occur is invalid arguments are provided.
Fake URL to trigger an error
Fake framework, eg 'hhvmquickinterp'
Fallback php script provides php REPL experience from debugger console window.
Fallback to token based test finding
Falls back to "B" if not given.
False by default.
False if the key doesn't exist and no initial_value was provided.
False if the key doesn't exist.
False to fail if the key does not exist.
Falsey inputs
Fatal error
Fatal error, script execution will end
Feel free to save the returned string as nothing.yaml and pass it around.
Feel free to save the returned string as tasteful.yaml and pass it around.
Fetch a request token, secret and any additional response parameters from the service provider.
Fetch a resource.
Fetch a result object, if available, containing some rows of the nonblocking query.
Fetch a result row as an object
Fetch a row
Fetch an access token, secret and any additional response parameters from the service provider.
Fetch element to insert before
Fetch of a particular section of the body of the specified messages.
Fetch one result row into array
Fetch the transliterator's ID
Fetch times from cache and from the stamp file.
Fetches a result row as an associative or numerically indexed array or both.
Fetches a row from a result set associated with a PDOStatement object.
Fetches all the structured information for a given message.
Fetches the next row and returns it as an object.
Fetchs a stored variable from the cache.
Field not listed in declared shape - error to access it
Fields are specified by "fieldname" : bool.
Figure out the algorithm the implementations use for negative and too-large shift counts
Figure out what handler to use
Figures out the best way of encoding the content read from the given file pointer.
File containing forcibly corrupted bmp image
File containing text string
File having no data
File names containing numerics, strings
File names containing special(non-alpha numeric) characters
File names containing whitespaces
File names containing(or with) nulls
File pointer position after read operation, expected at the beginning of the file
File pointer position after read operation, expected at the end of the file
File pointer position after write operation, expected at the end of the file
File testing corner cases for initialization of class members
File which doesn't exist
Files as stored across two collections, the first containing file meta information, the second containing chunks of the actual file.
Files within PharData archives do not have this restriction.
Fill border
Fill memory for test
Fills an array with num entries of the value of the value parameter, keys starting at the start_index parameter.
Fills an array with the value of the value parameter, using the values of the keys array as keys.
FilterIterator which uses a callback for each element
Finally, you should NOT fix errors about array indexes in parts of the code you don't understand by just replacing an array access with a call to idx().
Find first occurrence closest to root Works on files or directories.
Find position of last occurrence of a case-insensitive string in a string.
Finds out the DN of an entry in the result.
Finds out whether the extension is loaded.
Finds position of the first occurrence of a string in a string.
Finds the path to the file where the class is defined.
Finds the type of the passed value, returns the value as the new type.
Finds whether the given variable is NULL.
Finds whether the given variable is a boolean.
Finds whether the given variable is a resource.
Finds whether the given variable is a scalar.
Finds whether the given variable is an array.
Finds whether the given variable is an object.
Finds whether the given variable is numeric.
Finds whether the type given variable is string.
Finds whether the type of the given variable is float.
Finds whether the type of the given variable is integer.
First a / as starting delimiter, then then pattern, another / and finally a string containing flags.
First adding slashes using addslashes() and then removing the slashes using stripslashes()
First character's position is 0.
First introduced in MySQL 6.0, backported to MySQL 5.5
First is valid callback, second is valid array.
First pass through, "learn" that these calls go to C1::__call.
First we need to set the MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH attribute in some cases.
First, second, etc skip to the first/second weekday *after* the current day.
Flag for checking whether to call begin/endIteration() or not
Flag values for msg_receive MSG_IPC_NOWAIT If there are no messages of the desiredmsgtype, return immediately and do not wait.
Flags: const MIT_*
Float array
Float operations
Float type variations
Flush all the currently buffered output, so that the main thread can read it with pagelet_server_task_result().
Flushes the current buffer.
Flushes the write buffers of PHP and whatever backend PHP is using (CGI, a web server, etc).
Follow and sign redirects automatically, which is enabled by default.
Follow the interface hierarchy up
Following character sets are supported in PHP 4.3.0 and later.
Following class definition should fail, but cannot test
Foo can be used as int, but not the reverse
For 3.7 and below
For GET/POST/PUT tests, check if cgi sapi is available and if it is, use it.
For Internet Domain sockets (AF_INET) such as TCP and UDP, the target portion of the remote_socket parameter should consist of a hostname or IP address followed by a colon and a port number.
For Oracle map NULL to empty string so the test doesn't diff
For UDP sockets, you must use STREAM_SERVER_BIND as the flags parameter.
For UTF-16, UTF-32, UCS2 and UCS4, encoding detection will fail always.
For Unix domain sockets, the target portion should point to the socket file on the filesystem.
For Windows systems, a complete overview of supported conversion specifiers can be found at MSDN.
For Zip-based archives, this method compresses all files in the archive using the specified compression.
For Zip-based archives, this method fails with an exception.
For a PDOStatement object representing a scrollable cursor for which the cursor_orientation parameter is set to PDO::FETCH_ORI_REL, this value specifies the row to fetch relative to the cursor position before PDOStatement::fetch() was called.
For a SELECT statement that you only need to issue once during your program, consider issuing PDO::query().
For a complete list of other status variables, you have to use the SHOW STATUS SQL command.
For a description of contexts, refer to Stream Functions.
For a final class, they are the same
For a given i/p string ensure that all combinations are generated given a reasonable sample of calls
For a list of parser tokens, see List of Parser Tokens, or use token_name() to translate a token value into its string representation.
For a non-final class, new static() and new self() are quite different.
For a prepared statement using named placeholders, this will be a parameter name of the form :name.
For a prepared statement using question mark placeholders, this will be the 1-indexed position of the parameter.
For a query that you need to issue multiple times, you will realize better performance if you prepare a PDOStatement object using PDO::prepare() and issue the statement with multiple calls to PDOStatement::execute().
For a statement that you need to issue multiple times, prepare a PDOStatement object with PDO::prepare() and issue the statement with PDOStatement::execute().
For additional information see: RFC 2782    NAPTR  order and pref: Equivalent to pri and weight above.
For aliased columns, you cannot access the contents with the original column name.
For an async connection, this can be either ASYNC_OP_UNSET (no pending async operation), ASYNC_OP_QUERY (async query pending), or ASYNC_OP_CONNECT (async connection pending).
For animated GIFs there are 100 ticks per second, so a value of 20 would be 20/100 of a second aka 1/5th of a second.
For archives in tar or zip file format, this method converts the archive to a non-executable archive.
For backward transitions, must create objects with zone type 2 where specifying Daylight or Standard time is required then converting them to zone type 3.
For backwards compatibility, it also defaults the "w" option of its constructor argument to 0, which does not require write operations to be acknowledged by the server.
For binding assignment expressions, the RHS will be passed by reference via FPassV
For case-insensitive searches, use stristr().
For consistency with explode(), however, it may be less confusing to use the documented order of arguments.
For currencies you can use currency format type to create a formatter that returns a string with the formatted number and the appropriate currency sign.
For data that is larger than this (movies, music, Henry Kissinger's autobiography), use MongoGridFS.
For data that is smaller than 16MB, you may find it easier to embed it within the document using MongoBinData.
For decompressing, the default file extensions are .phar and .phar.tar.
For details about how this function works, read the preg_replace() documentation.
For details on how to use this function, please refer to http://mirror.facebook.net/facebook/xhprof/doc.html.
For details on the Snappy compression algorithm go to http://code.google.com/p/snappy/.
For details, consult your system documentation on the tmpfile(3) function, as well as the stdio.h header file.
For determining number of processes
For each of these, compact() looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key.
For each op1.op_type except ANY
For each op2.op_type except ANY
For each op_data.op_type except ANY
For every element which has subelements, hasChildren() returns true.
For example "RGB".
For example, ": foo" will not be recognized as an XHP name by the parser.
For example, "MMMdd" and "mmhh" are skeletons.
For example, 200 for success and 500 for server error.
For example, Britain converted in 1752, The USSR in 1918 and Greece in 1923.
For example, MessageFormatter enables you to print the phrase "Finished printing x out of y files..." in a manner that still allows for flexibility in translation.
For example, PDO_PGSQL() requires you to specify the name of a sequence object for the name parameter.
For example, both "MMM-dd" and "dd/MMM" produce the skeleton "MMMdd".
For example, during a timeout in a query, the MySQL connection gets closed.
For example, if there is no occurrence of pattern, an array with only one element will be returned.
For example, if you have configured Apache to use a PHP script to handle requests for missing files (using the ErrorDocument directive), you may want to make sure that your script generates the proper status code.
For example, if you set the limit to 2, and you try a third connection on the same pool, an `AsyncMysqlConnectException` exception will be thrown.
For example, if you use bar as thousands_sep on the number 1000, number_format() will return 1b000.
For example, if you're simply outputting data straight from an HTML form.
For example, it may allow protected and private methods to be invoked.
For example, it may allow protected and private properties to be accessed.
For example, it seems that on Linux when connecting to MySQL 5.1, the server always manages to send a full a reply.
For example, libenchant.dll loads libenchant_myspell.dll or libenchant_ispell.dll
For example, logged-on user's ID.
For example, on Linux, reiserfs may provide better performance than ext2fs.
For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color for the purposes of the floodfill.
For example, sqlite will wait for up to this time value before giving up on obtaining an writable lock, but other drivers may interpret this as a connect or a read timeout interval.
For example, suppose that the input pattern is "hhmmssSSSS", and the best matching pattern internally is "H:mm:ss", and the decimal string is ",".
For example, suppose that the input skeleton is "GyyyyMMMd", and there is no matching pattern internally, but there is a pattern matching "yyyyMMMd", say "d-MM-yyyy".
For example, suppose you tried to insert two documents with the same _id:  This would produce output like:  Note that the MongoDB error code (11000) is used for the PHP error code.
For example, the files document is something like:  and the chunks documents look like:  Of course, the default chunk size is thousands of bytes, but that makes an unwieldy example.
For example, they are allowed in the VALUES() list of an INSERT statement (to specify column values for a row), or in a comparison with a column in a WHERE clause to specify a comparison value.
For example, this can be used to set the envelope sender address when using sendmail with the -f sendmail option.
For example, this returns "foo":    However, these return NULL:    To avoid surprising behavior, it is best not to depend on MongoDB to decide what to return, but to explicitly state a return value.
For example, to embed an image in a document, one could write:    This class contains a type field, which currently gives no additional functionality in the driver or the database.
For example, to insert the name O'reilly into a database, you will need to escape it.
For example, to profile all queries that take longer than one second, run:    Profiled queries will appear in the system.profile collection of this database.
For example, to retrieve options at the socket level, a level parameter of SOL_SOCKET would be used.
For example, use the WHERE and SORT BY clauses in SQL to restrict results before retrieving and processing them with PHP.
For example, what tests caused the regression.
For frameworks running in serial, just the framework name will be printed right now.
For instance, adding a sort causes the query to become a subfield of a bigger query object, like: This method is for adding a top-level field to a query.
For instance, if the same file is being checked multiple times within a single script, and that file is in danger of being removed or changed during that script's operation, you may elect to clear the status cache.
For instance, in the default "C" locale characters such as umlaut-a will not be converted.
For instance, in the string 'abcdef', the character at position 0 is 'a', the character at position 2 is 'c', and so forth.
For instance, this will not work:  This does not query for a user named "joe" with an age of 20.
For iterators that return SplFileInfo objects, the second parameter is required.
For list assignment expressions, if the RHS is a simple variable then it will be passed by reference via FPassH
For more complex formatting, like spelled-out numbers, the rule-based number formatters are used.
For more information about magic_quotes, see this security section.
For more information about the format options, read the strftime() page.
For more information on modes, read the details on the chmod() page.
For more information on the session workflow, please refer session_set_save_handler().
For more information see: Martin Pool's  Natural Order String Comparison page.
For non-async connections, this returns ASYNC_OP_INVALID.
For non-null defaults, see param_tostring_hh.php
For now this will emit a warning just like if zend was compiled withot zlib
For now, as this is the one difference only between 0.9.x and 1.x, it's handled with placeholders to not to duplicate the test.
For now, remove any logging and code coverage settings from the configuration file.
For now, suppress the PHP error so as to match the missing HPHP one.
For now, we don't do IMemoizeParam type checks on generics.
For now, we don't grow tuple-like arrays - appending to them just downgrades them to vector-like arrays
For objects, if you have SPL installed, you can hook into count() by implementing interface Countable.
For other successful queries mysqli_query() will return TRUE.
For other type of SQL statements, INSERT, UPDATE, DELETE, DROP, etc, mysql_query() returns TRUE on success or FALSE on error.
For other type of SQL statements, UPDATE, DELETE, DROP, etc, mysql_unbuffered_query() returns TRUE on success or FALSE on error.
For phpdbg tests, check if phpdbg sapi is available and if it is, use it.
For reach we check a plain value, a reference value with integer key and a reference value with a string key.
For reflection in finding tests Since PHPUnit 3.8, Autoload.php has gone away.
For reliability and performance reasons, the TCP implementation itself decides the appropriate octet boundaries of the underlying datagram communication layer.
For sendmail users, this file is /etc/mail/trusted-users.
For simple cases, see php5_pcntl_003.php
For some of the tests below the VM produces different output than Zend.
For static methods, pass null to this parameter.
For successful SELECT, SHOW, DESCRIBE or EXPLAIN queries mysqli_query() will return a mysqli_result object.
For tar-based phar archives, the default extensions are .phar.tar, .phar.tar.gz, and .phar.tar.bz2.
For test reliability, we always want this to be set
For that fatal case, we handle that a bit differently.
For the below strings: 'English' is ASCII only, 'Japanese' has no ASCII characters and 'Greek' is mixed.
For the name of just the operating system, consider using the PHP_OS constant, but keep in mind this constant will contain the operating system PHP was built on.
For the purpose of this function, 'word' is defined as a locale dependent string containing alphabetic characters, which also may contain, but not start with "'" and "-" characters.
For the purposes of this function, the charsets ISO-8859-1, ISO-8859-15, UTF-8, cp866, cp1251, cp1252, and KOI8-R are effectively equivalent, as the characters affected by htmlspecialchars() occupy the same positions in all of these charsets.
For the rest Memcache::add() behaves similarly to Memcache::set().
For the rest Memcache::replace() behaves similarly to Memcache::set().
For the stream wrapper to stat a file.
For this function to work, you will need either to set some ID attributes with DOMElement::setIdAttribute or a DTD which defines an attribute to be of type ID.
For this reason the test is parametrized so there is no hardcoded timezone data.
For unsuccessful parses, error information can be retrieved with xml_get_error_code(), xml_error_string(), xml_get_current_line_number(), xml_get_current_column_number() and xml_get_current_byte_index().
For zip archives, this method fails with an exception.
For zip-based archives, the default extension is .zip.
For zip-based phar archives, the default extension is .phar.zip.
Force Typing_subtype.sub_string to run
Force a new tracelet
Force all the types to be in so these don't get constant folded.
Force bytea escaping and retry
Force integration of local variables
Force to be Tvar/Tunresolved
Force to write and empty the buffer
Forces collection of any existing garbage cycles.
Foreach over a FV with both key and value.
Foreach over a FV.
Form a cycle: await parent
Format a number according to current formatting rules.
Format a number using misc currencies/locales.
Format a number using misc locales/patterns.
Format argument as type Array
Format argument as type Object
Format argument as type String
Format can be forced regardless of file extension using format: prefix, for example "jpg:test.png".
Format number as currency.
Format support depends on the ImageMagick installation.
Format the number using the new value.
Format the number using the original attribute value.
Format the time and/or date according to locale settings.
Format with 14 positions of width, 8 digits of left precision, 2 of right precision using national  format for en_US
Format: YYYYMMDDHHMMSS
Formats the given dbgp response for output.
Forward Transitions, add().
Forward Transitions, diff().
Forward Transitions, sub().
Four arguments, greater than expected no.
Frame 1 is within pseudo-main
Free resources associated with a result
Free up memory
Freeman-Benson and John Maloney January 1990 Communications of the ACM, also available as University of Washington TR 89-08-06.
Frees a MIME resource.
Frees the given XML parser.
Frees up the memory allocated internally to store the result.
From 4.0.5 on it's also possible to do parallel searches.
From Docs: Construct a new array iterator from anything that has a hash table.
From PHP 7 testing sources, with minor modification
From a comment left by Traps on 09-Jul-2007 on the array_shift documentation page: For those that may be trying to use array_shift() with an array containing references  (e.g. working with linked node trees), beware that array_shift() may not work as you expect:  it will return a *copy* of the first element of the array,  and not the element itself, so your reference will be lost.
From https://github.com/facebook/hhvm/issues/2337
From php.net/foreach: "Unless the array is referenced, foreach operates on a copy of the specified array."
From the manifest
From the mysql_change_user documentation: This command resets the state as if one had done a new connect.
Full parsing
Function arguments are counted starting from zero.
Function cmp_function should accept two parameters which will be filled by pairs of array keys.
Function cmp_function should accept two parameters which will be filled by pairs of entry keys.
Function is tested by passing associative array as well as array with default keys.
Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.
Functions to check: mysqli_query() - done above, mysqli_stmt_execute(), mysqli_prepare(), mysqli_real_query(), mysqli_store_result() mysqli_use_result(), mysqli_thread_safe(), mysqli_thread_id()
G G   (Zend outputs: G B B) (Rule 1)
G G   (Zend: G D) (Rule 4)
G G  (Zend: G D D) (Rule 1)
G G  (Zend: G D) (Rule 4)
G G (Zend: G D D) (Rule 1)
G G (Zend: G D) (Rule 4)
G::G::f a bit weird
G::f exists
GB2312 936 Simplified Chinese, national standard character set.
GET_LOCK("phptest") should be released
GET_LOCK("test_mysqli_change_user_locks_temporary_lock_1") should be released
GMT is zero for the timezone
Gather all of the stack traces this request thread has captured by now.
Gathers the statistics of the file named by filename, like lstat(), except uses cached information from an internal inotify-based mechanism that may not be updated during the duration of a request.
Gathers the statistics of the file named by filename.
Gathers the statistics of the file opened by the file pointer handle.
Gathers the statistics of the file or symbolic link named by filename.
Generate OAuth header string signature based on the final HTTP method, URL and a string/array of parameters
Generate a YAML representation of the provided data in the filename.
Generate a YAML representation of the provided data.
Generate a prologue for thrower:
Generate a signature based on the final HTTP method, URL and a string/array of parameters.
Generate and save the PEM file
Generate array of pixels.
Generate handler code
Generate handler for undefined opcodes
Generate helper code
Generate helper's code
Generate helper's entry point according to selected threading model
Generate opcode handler's code
Generate opcode handler's entry point according to selected threading model
Generate our own database.
Generate specialized executor
Generate the ABI wrapper functions for HPHP::Native::NativeFuncCaller  The NativeFuncCaller class relies on specifics of the amd64 and ARMv8 ABIs to reshuffle the order of certain arguments and reduce the number of possible combinations (by a lot).
Generate the Node, and a pretty name for it
Generate the certificate
Generate zend_vm_call_opcode_handler() function
Generate zend_vm_execute.h
Generate zend_vm_get_opcode_handler() function
Generate zend_vm_set_opcode_handler_ex() function
Generated by memcache.
Generates a Signature Base String according to pecl/oauth.
Generates a storable representation of a value  This is useful for storing or passing PHP values around without losing their type and structure.
Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter.
Generates a string of pseudo-random bytes.
Generates a string which is the pathname for the current controlling terminal for the process.
Generates all opcode handlers and helpers (specialized or unspecilaized)
Generates array of opcode handlers (specialized or unspecialized)
Generates code for opcode handler or helper
Generates cryptographic random integers that are suitable for use where unbiased results are critical (e.g. shuffling a Poker deck).
Generates cryptographically secure pseudo-random bytes that are suitable for use in cryptography when generating salts, keys and initialization vectors.
Generates executor from skeleton file and definition (specialized or unspecialized)
Generates handler for undefined opcodes (CALL threading model)
Generates helper
Generates localized date and/or time format pattern strings suitable for use in IntlDateFormatter.
Generates opcode handler
Generates specialized offsets
Generates the cyclic redundancy checksum polynomial of 32-bit lengths of the str.
Generator has been aborted as a result of an exception
Generator has been aborted as a result of an exception that was injected using throw()
Generator hasn't reached the "return" yet
Generator throws during auto-priming of getReturn() call
Generic FVs are covariant
Generic type remains generic if it was not modified.
Get HTTP information about the last response.
Get a MIME charset string for a specific encoding.
Get a certain field (column) value as a `double`.
Get a certain field (column) value as a `string`.
Get a certain field (column) value as an `int`.
Get a certain field (column) value from a certain row as `double`.
Get a certain field (column) value from a certain row as `int`.
Get a certain field (column) value from a certain row as `string`.
Get a certain row in the current row block.
Get a command from the user and send it.
Get a field (column) value.
Get a file handler to the entry defined by its name (read only).
Get a hash item
Get a resource
Get a text message
Get aliases of a known encoding type.
Get all registered __autoload() functions.
Get all the test functions in the class
Get an image
Get an unset variable
Get attribute value back.
Get bundle's last error code.
Get bundle's last error message.
Get children of the current element.
Get collation attribute value.
Get collator's last error code.
Get current branch/hash information
Get current collation strength.
Get currently running wait handle in a context specified by its index.
Get currently running wait handle, or null if there is none.
Get cursorname
Get default attribute's value
Get default patten.
Get description of the last error.
Get encoding
Get error message from last internationalization function called.
Get field (column) value indexed by the `field`.
Get formatter's last error code.
Get formatter's last error message.
Get framework information and set all needed properties.
Get headers for last response.
Get index of the current scheduler context, or 0 if there is none.
Get info from php
Get information about the password hash.
Get locale.
Get new dimensions
Get original symbol value.
Get original value of the attribute.
Get output and generate md5 hash
Get pattern used by the formatter.
Get resource variable
Get result data
Get result of an already finished Awaitable.
Get rid of any old data, except the expect file and test info, of course.
Get rid of any test file and test information.
Get security preferences.
Get some locals.
Get sort keys using various locales
Get stats on flushing the last data chunk from server.
Get symbolic name for a given error code.
Get text for collator's last error code.
Get the "age" of the code point.
Get the EG(error_reporting) value.
Get the FC_NFKC_Closure property string for a character.
Get the TypeStructure that contains the full type information of the assigned type.
Get the TypeStructure with type information resolved.
Get the assigned type as a string.
Get the available paths in the current compilation database.
Get the color index for the background
Get the columnname
Get the constants of the given class.
Get the current class name
Get the current depth of the recursive iteration.
Get the current field (column) name.
Get the current field (column) number.
Get the current flags
Get the current row.
Get the details of an entry defined by its index.
Get the details of an entry defined by its name.
Get the error code from last operation  Returns error code from the last number formatting operation.
Get the error text from the last operation.
Get the file name of the PHP script in which C is defined
Get the index of the color which has the hue, white and blackness nearest the given color.
Get the iterator for the rows in the block.
Get the iterator over the fields in the current row.
Get the last error code.
Get the length (precision) of a field
Get the line number at the end of the definition of class C
Get the line number at the start of the definition of class C
Get the list of procedures stored in a specific data source
Get the list of table names stored in a specific data source
Get the locale for which the formatter was created.
Get the locale name of the collator.
Get the name of the type alias.
Get the name of the type constant.
Get the names of all the const values, indexed by value.
Get the names of function arguments and initialise mandatory and optional argument arrays
Get the namespace qualified (if any) class name
Get the namespace the class is in, if any
Get the new flags
Get the new iterator classname
Get the next line for the expected status for that test
Get the number of fields (columns) in the current row.
Get the numeric value for a Unicode codepoint.
Get the original comment
Get the parameters
Get the paths that we know how to lint.
Get the pattern corresponding to a given skeleton.
Get the raw response of the most recent request.
Get the requested, valid and actual locales.
Get the scale of a field
Get the source from GitHub
Get the symbol value back.
Get the value of the global
Get the values of the public consts defined on this class, indexed by the string name of those consts.
Get/set pattern.
Get/set symbol.
Get/set text attribute.
Get/set various number formatting attributes.
Gets a character from the given file pointer.
Gets a line from file pointer.
Gets a line from the given handle.
Gets a list of all the collections in the database and returns them as an array of MongoCollection objects.
Gets a list of available cipher methods.
Gets a list of available digest methods.
Gets a parameter if previously set by XSLTProcessor::setParameter().
Gets a prefixed unique identifier based on the current time in microseconds.
Gets all configuration options
Gets all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset.
Gets an attribute of the statement.
Gets an option value from an XML parser.
Gets current state of the formatter as a pattern.
Gets current thread's ID.
Gets increased when inited
Gets information about a group provided its id.
Gets information about a group provided its name.
Gets information about a link.
Gets information about the current CPU usage.
Gets information about the given message number by reading its headers.
Gets information about the system.
Gets information about the version and capabilities of the installed GD library.
Gets line number for where the node is defined.
Gets number of processors.
Gets options on the given cURL session handle.
Gets permissions for the given file.
Gets processor model.
Gets resolution of system clock.
Gets status information about the given mailbox.
Gets the Certificate Authority information, which includes the ca_path and ca_info set by OAuth::setCaPath().
Gets the Gregorian Calendar change date.
Gets the Unicode version information.
Gets the XML parser error code.
Gets the XML parser error string associated with the given code.
Gets the absolute pathname of the script's current working directory.
Gets the class for the reflected type constant.
Gets the color for a specified index.
Gets the connection status bitfield.
Gets the contents of the output buffer without clearing it.
Gets the current PHP process ID.
Gets the current active sub iterator.
Gets the current buffer contents and delete current output buffer.
Gets the current byte index of the given XML parser.
Gets the current column number of the given XML parser.
Gets the current line number for the given XML parser.
Gets the current working directory.
Gets the declaring class for the reflected type constant.
Gets the file group.
Gets the file inode.
Gets the file owner.
Gets the first attribute in the given entry.
Gets the float value of var.
Gets the full text of the last IMAP error message that occurred on the current page.
Gets the group set of the current process.
Gets the inode change time of a file.
Gets the inode of the current script.
Gets the kernel thread id of the current running thread.
Gets the length of a string.
Gets the list of implemented interfaces/inherited classes needed to implement an interface / use a trait.
Gets the maximum allowable depth.
Gets the names of all files that have been included using include(), include_once(), require() or require_once().
Gets the namespace URI of the node based on the prefix.
Gets the namespace prefix of the node based on the namespace URI.
Gets the number of messages in the current mailbox.
Gets the number of recent messages in the current mailbox.
Gets the primary keys for a table
Gets the size for the given file.
Gets the time of the last modification of the current page.
Gets the timeout (maximum duration), in seconds, of the current xbox thread.
Gets the value of a PHP configuration option.
Gets the value of the attribute in namespace namespaceURI with local name localName for the current node.
Gets the value of the attribute with name name for the current node.
Gets time of a system clock.
Getting equivelent ASCII value for the character in binary form
Getting inode of created file
Getting inode of current file
Getting inode of directories
Give the return value of the command back to the caller.
Give the server a second to really kill the other thread...
Give the server think-time to kill the pthread
Given a file name instead of a directory, the behaviour of the function is unspecified and may differ between operating systems and PHP versions.
Given a set of words, perform the appropriate translations on them to match the YAML 1.1 specification for type coercing.
Given a string containing a directory, this function will return the number of bytes available on the corresponding filesystem or disk partition.
Given a string containing a directory, this function will return the total number of bytes on the corresponding filesystem or disk partition.
Given a string containing a path to a file, this function will return the base name of the file.
Given a string containing a path to a file, this function will return the name of the directory.
Given the number of iterations in the loop, if we're wasting memory here, we should have megs and megs of extra allocations.
Giving a normal string
Global variable holding the current planner.
Go to lower-case only mode (assumes all strings have been case-folded).
Good old magic stuff
Gotta make sure these dirs don't contain wildcards (Looking at you Symfony)
Greater number of args than expected
Greek string in lower case UTF-8
Greek string in mixed case UTF-8 with multiple needles
Green if we go from something else to pass
GridFS is a storage specification all supported drivers implement.
Guesses the encoding of an array of bytes in an unknown encoding.
H H   (Zend outputs: H B B) (Rule 1)
HHVM (PHP 5 mode, PHP 7 mode), PHP 4, 5, 7, 8: filter is a constructor
HHVM (PHP 5 mode, PHP 7 mode), PHP 5, 7: bool(true) PHP 8: bool(false)
HHVM Warning: Case insensitive constant names are not supported in HipHop
HHVM doesn't support unpacking into empty
HHVM doesn't support unpacking into isset
HHVM doesn't support unpacking into unset
HHVM extensions don't (currently) track what consts/ini/funcs/classes are associated with them (nor do they track a unique number).
HHVM has a bug with var_export() where the output sometimes contains unnecessary blank lines.
HHVM has idx() built in, but PHP5 doesn't
HHVM provides a native implementation for this class.
HINFO  cpu: IANA number designating the CPU of the machine referenced by this record.
HNI ParamCoerceModeFalse
HNI ParamCoerceModeNull
HPHP has has many version of these functions over time Faceobok has impelemtnation differences
HPHP, unlike PHP, truncates overflowing ints
HTML 5 has many more named entities.
HTML comments and PHP tags are also stripped.
HTML tags should not be counted as literal blocks.
HTML_TABLES_H
Hack assumes that this loop might or might not run.
Hack should allow this in partial (lives in PHP land, maybe)
Hack should not allow this
Hack treats method dispatch in a different way from PHP.
Handle persistent key at front of save_path
Handle them gracefully by displaying the class name.
Handling of LONG columns
Handling of binary column data
Handling of errors occurred in static methods when there's no object to get error code/message from.
Handy for debugging - should match.
Has less args then the implementing function
Has mixed types
Has no effect unless libxml_use_internal_errors() is enabled.
Has no explicit return, but implicitly return NULL at the end
Have been referenced to each other
Have to find some small strings to truly reproduce  the problem, this example being not a problem
Having located a specific entry in the directory, you can find out what information is held for that entry by using this call.
Having multiple elements with the same value in a Heap is not recommended.
Having the PHP directive magic_quotes_sybase set to on will mean ' is instead escaped with another '.
Headers and messages are converted and encoded according to the mb_language() setting.
Helper for getMethods: correctly ordered Set of the methods declared on this class and its parents
Helper function to build testing arrays
Helper to try to read an argument for an option.
Helper with parameter
Helper without parameters
Helps application inserting an artificial frame in xhprof's reporting.
Helps trigger bug.
Hence the keys for the input array can be variant0, variant1, ...,variant14.
Here are the keys for that array, and all values are `int`, except for `expiration_policy`, which is a `string`:  - `per_key_connection_limit`: The maximum number of connections allowed in the pool for a single combination of hostname, port, db and username.
Here comes Late Static Bindings
Here is an example:
Here two different outputs, which depends on the rounding value  before converting to string.
Here two different outputs, which depends on the rounding value before converting to string.
Here we create a new unit test "jenkins_async_test" and promise we'll update the results later.
Here we optionally set pool limits and call `connect()` on this class.
Here, the traits conflicts are overridden by local definitions, and the two constructor definitions do not directly collide in that case.
Heredoc String
Heredoc string with blank line
Heredoc strings
Hexadecimal NUL
Hexadecimal Output for Empty file as input
Hexadecimal array
Hexadecimal notation (0xFF) is allowed too but only without sign, decimal and exponential part.
Hexadecimal string
Hexadecimal type variations
Hexadecimal values
Hexidecimal
Hhbbc better not remove any of the parameter locals just because they aren't used.
Hide a bool in APC so static analysis can't see it.
High efficiency and low overhead make it a great form of IPC (Interprocess Communication).
HipHop explicitly lists this in the inconsistencies doc.
Horizontal line
Host names are comma-separated and the constructor will return successfully if it connected to at least one host.
How the connection is made to the MySQL database is determined by the host parameter.
However these files still can be included if they are located in safe_mode_include_dir.
However unlink() clears the cache automatically.
However when the method is invoked we generate an expression dependent type to ensure that the 'this' type between two instance refer to exactly the same type.
However, P8 does not invoke 'destructors' when refcount is decremented to 0.
However, PHP/PDO will send a CLOSE message as part of the PDO::query() call.
However, any useful data that describes a file, but should not be contained inside of it may be stored.
However, before PHP 5.1.0 this range was limited from 1970 to 2038 on some systems (e.g. Windows).
However, doing so will result an in E_STRICT error being generated.
However, if a signal is caught or the remote host disconnects, the function may return less data.
However, if you make a cursor immortal, you need to iterate through all of its results (or at least until MongoCursor::dead() returns TRUE) or the cursor will hang around the database forever, taking up resources.
However, if you really want, you can set mongo.allow_empty_keys to true in your php.ini file to override this sanity check.
However, if you were expecting a response, this means the database didn't give one.
However, if, for example, the query represented something that exceeded some network parameter, the result could come back in multiple blocks.
However, in certain cases, you may want to clear the cached information.
However, in many cases two colors may differ by a small amount.
However, it seems to only correctly handle exactly 1 file.
However, it will never return more documents than fit in the max batch size limit (usually 4MB).
However, mysqli_get_server_version() needs a mysqli handle for which in turn one needs to parse the PDO test environment variables for connection parameter...
However, some elements might not be placed correctly and it may hence break the heap-property.
However, some require that we use php tokens or are found via phpt files.
However, the bug is about malloc() and efree().
However, there are some formatting codes that are missing such as Perl's "u" format code.
However, they cannot contain " ", "." or be the empty string.
However, this behaviour is not guaranteed for all databases and should not be relied on for portable applications.
However, this can be unnecessary when simply creating a new Phar archive, when it would make more sense to write the entire archive out at once.
However, to be able to bind a LOB column as a stream when using the PgSQL driver, applications should call this method before calling PDOStatement::execute(), otherwise the large object OID will be returned as an integer.
I can set the var
I don't have a doc comment....
I don't think this timezone can be generated without a DateTime object
I know that the parent routes all requests through top() so this is the only method I need to change.
I let it fail to prove that closeCursor() makes a difference.
I think both p8 and php are wrong on the messages here p8 generates different messages to php, php is probably wrong php has either "File Exists" or "Permission Denied".
I think this is testing line 1297 of spl_iterators.c
I would expect to get an error message, but this is not what happens.
I'm trying to make this work, but get:
I's doc comment
I've kept it this way to avoid deviating too much from the original implementation.
I.e. the occurrence of a postfix operator should have no impact on the parse of the rest of the expression.
I.e., if it's integer then INT32 would be chosen on 32-bit, INT64 on 64-bit, if it's double, DOUBLE would be chosen.
ICU resource bundle can hold simple resources and complex resources.
ICU resource mechanism allows to define sets of resources that the application can load on locale basis, while accessing them in unified locale-independent fashion.
ICU treats this as as two code points.
ICU treats this three-byte sequence as one invalid two-byte code point followed by a valid ASCII character.
ID column, binary charset
IDL ParamCoerceModeNull
ILlegal since Foo::class means something else.
INSERT a single row
INT and integer work well together
IPv6 explicit port.
IPv6 with override port.
IPv6 with port.
IV MUST exist in CFB, CBC, STREAM, nOFB and OFB modes.
IV is ignored in ECB.
Ideally we would be able to detect the impossibility of this comparison succeeding.
Identical to fgets(), except that fgetss() attempts to strip any NUL bytes, HTML and PHP tags from the text it reads.
Identical to file_get_contents(), except that stream_get_contents() operates on an already open stream resource and returns the remaining contents in a string, up to maxlength bytes and starting at the specified offset.
Identical to getimagesize() except that getimagesizefromstring() accepts a string instead of a file name as the first parameter.
Identical to mktime() except the passed parameters represents a GMT date.
Identical to the date() function except that the time returned is Greenwich Mean Time (GMT).
Identity function.
Ids are chosen randomly rather than seqentially to guard against false-positives when using persistent sockets.
If 'sz' is greater than the current size of this Vector, this Vector is extended by appending as many copies of 'value' as needed to reach a size of 'sz' elements.
If 'sz' is less than or equal to the current capacity of this MapLike, does nothing.
If 'sz' is less than or equal to the current capacity of this VectorLike, does nothing.
If 'sz' is smaller than the current size of this Vector, elements are removed from the end of this Vector.
If -1 is used, the default compression of the zlib library is used which is 6.
If 0 is passed, the entire output of the supplied algorithm is used.
If 0, then the entire entry is read.
If ENT_QUOTES is set, both single and double quotes are translated and if ENT_NOQUOTES is set neither single nor double quotes are translated.
If FALSE is returned, use mysql_error() to determine the nature of the error.
If FALSE or not set, only the top level output buffer is returned.
If FALSE, no information will be sent.
If FALSE, ns will be regarded as a namespace URL.
If I construct a Exception, the passed-in or default "" gets used.
If I subclass Exception, whether I define a constructor for that class or not, the base class constructor appears to be called anyway, and overwrites the supposed unknown.
If INI_SCANNER_RAW is supplied, then option values will not be parsed.
If NULL is provided, any previously registered class extending baseclass will be removed.
If NULL or the empty string, the default time zone for the runtime is used.
If NumberFormatter::PATTERN_DECIMAL or NumberFormatter::PATTERN_RULEBASED is passed then the number format is opened using the given pattern, which must conform to the syntax described in ICU DecimalFormat documentation or ICU RuleBasedNumberFormat documentation, respectively.
If OnOff is set, this function returns TRUE on success and FALSE on failure.
If PHP is compiled against GD library 2.0 or higher and the image is a truecolor image, this function returns the RGB value of that pixel as integer.
If PHP is not properly recognizing the line endings when reading files either on or created by a Macintosh computer, enabling the auto_detect_line_endings run-time configuration option may help resolve the problem.
If SSL setup is incorrect mysqli_real_connect() will return an error when you attempt to connect.
If Standard PHP Library is installed,  it will return the properties of an object.
If Standard PHP library is  installed, it will return the properties of an object.
If Standard PHP library is installed,  it will return the properties of an object.
If Standard PHP library is installed, it will return the properties of an object.
If `0`, that means no activity occurred.
If `isFailed()` returns `true`, `isSucceeded()` returns `false`.
If `isSucceeded()` returns `true`, `isFailed()` returns `false`.
If a DateTime or an IntlCalendar object is passed, its timezone is not considered.
If a child as requested by pid has already exited by the time of the call (a so-called "zombie" process), the function returns immediately.
If a child has already exited by the time of the call (a so-called "zombie" process), the function returns immediately.
If a collection name contains strange characters, you may have to use MongoDB::selectCollection() instead.
If a connection in a `AsyncMysqlConnectionPool` is used, but you call `setReusable(false)`, then you will have to create a whole new connection instead of reusing this particular connection.
If a connection request arrives with the queue full the client may receive an error with an indication of ECONNREFUSED, or, if the underlying protocol supports retransmission, the request may be ignored so that retries may succeed.
If a cycle is detected, remove the given constraint and answer false.
If a framework is not being run in parallel (e.g., it is being run like normal phpunit for the entire framework), then the actual_test_command would not contain the individual test by default.
If a function call, nothing is returned.
If a key from the first array exists in the second array, its value will be replaced by the value from the second array.
If a key of a different type is used, an exception will be thrown.
If a key only exists in the first array, it will be left as is.
If a non-integer key is used, an exception will be thrown.
If a non-numeric value is used for timestamp, FALSE is returned and an E_WARNING level error is emitted.
If a property has not been assigned a value, it will be returned with a NULL value.
If a sequence name was specified for the name parameter, PDO::lastInsertId() returns a string representing the last value retrieved from the specified sequence object.
If a shard goes down and a query needs to be sent to that shard, mongos will return the results (if any) from shards it already contacted, then an error message that it could not reach the shard (a MongoCursorException in PHP).
If a socket resource is passed to this function, the last error which occurred on this particular socket is returned.
If a static method call, "::" is returned.
If a string is not UTF-8, a MongoException will be thrown.
If a string is passed as the needle, then only the first character of that string will be used.
If a string is passed, any exception that occurs inside the DateTime constructor is propagated.
If a value has several occurrences, the latest key will be used as its values, and all others will be lost.
If a value of a different type is used, an exception will be thrown.
If abbr doesn't exist then the time zone is searched solely by the gmtOffset and isdst.
If absent, default or current connection will be applied to.
If all four parameters are given, number will be formatted with decimals decimals, dec_point instead of a dot (".") before the decimals and thousands_sep instead of a comma (",") between every group of thousands.
If all goes according to plan, on second time we should get PNG
If all of the arrays contain only numeric keys, the resulting array is given incrementing keys starting from zero.
If all the arrays have the same length, max() will use lexicographic ordering to find the return value.
If an IV was used during encryption, it is returned via iv.
If an array is passed then each element is checked.
If an array is passed then each element is fetched and returned.
If an element with the same key is already present, an exception is thrown.
If an error occurs a warning will be displayed accordingly.
If an error occurs, if the connection is reset, or if no data is available, buf will be set to NULL.
If an error occurs, like the user lacks permission to change the priority, an error of level E_WARNING is also generated.
If an error occurs, returns FALSE.
If an error occurs, split() returns FALSE.
If an error occurs, spliti() returns FALSE.
If an interface parameter is defined in terms of a type constant then we require implementers to provide a type hint
If an invalid or no cache_type is specified, information about the system cache (cached files) will be returned.
If an invalid pid is specified, then FALSE is returned and an error is set which can be checked with posix_get_last_error().
If an is_null flag is in use, only that flag is required to be initialized
If an object is inserted into the database without an _id field, an _id field will be added to it with a MongoId instance as its value.
If an option could not be successfully set, FALSE is immediately returned, ignoring any future options in the options array.
If analyzeTest returns false, then we have most likely hit a fatal.
If any of the necessary mysqli properties come in as null, then we can use our default ini options.
If any of these functions is called from within a phar archive with a relative path, the call is modified to access a file within the phar archive.
If any packet is somehow lost during communication, TCP will automatically retransmit the packet until the destination host acknowledges that packet.
If array is empty (or is not an array), NULL will be returned.
If array is passed in, then an array is returned that contains all existing keys, or an empty array if none exist.
If array_map() is called by other means, it dispatches to this version which allows variadic array counts and deals with bad types.
If at least two parameters are provided, max() returns the biggest of these values.
If at least two parameters are provided, min() returns the smallest of these values.
If authentication is enabled for the database server (it's not, by default), you need to log in before the database will allow you to do anything.
If bind_rdn and bind_password are not specified, an anonymous bind is attempted.
If both pattern and replacement parameters are arrays, each pattern will be replaced by the replacement counterpart.
If browser_name is omitted or null, HTTP_USER_AGENT is used.
If buffer is 0 then write operations are unbuffered.
If cURL is built without ares support, DNS queries don't have a socket to wait on, so curl_multi_await() (and curl_select() in PHP5) will return -1, and polling is required.
If cacert is NULL, the generated certificate will be a self-signed certificate.
If cache_type is "filehits", information about which files have been served from the bytecode cache for the current request will be returned.
If callbackfunc is set to NULL, returns the extracted section as a string.
If called statically, returns a DOMDocument and issues E_STRICT warning.
If called with two arguments, it sets the value of note note_name to note_value and returns the previous value of note note_name.
If called without parameter outside object, this function returns FALSE.
If config doesn't provide a test suffix, assume the default
If converting to a phar-based archive, the default extensions are .phar, .phar.gz, or .phar.bz2 depending on the specified compression.
If converting to a tar-based phar archive, the default extensions are .tar, .tar.gz, and .tar.bz2 depending on specified compression.
If data is a stream resource, the remaining buffer of that stream will be copied to the specified file.
If data is null, we're done with this benchmark.
If db is not specified, "admin" will be used.
If delimiter contains a value that is not contained in string and a negative limit is used, then an empty arraywill be returned, otherwise an array containing string will be returned.
If delimiter is an empty string (""), explode() will return FALSE.
If desired, the NULL value may be passed resulting in only changing the user and not selecting a database.
If desiredmsgtype is greater than 0, then the first message of that type is returned.
If desiredmsgtype is less than 0, the first message on the queue with the lowest type less than or equal to the absolute value of desiredmsgtype will be read.
If dest is a URL, the copy operation may fail if the wrapper does not support overwriting of existing files.
If directory is not a directory, then boolean FALSE is returned, and an error of level E_WARNING is generated.
If divisor is 0, a DivisionByZeroError exception is thrown.
If e is specified, replacement string will be evaluated as PHP expression.
If empty string ("") or "root" are passed, UCA rules will be used.
If empty string is passed, the parser attempts to identify which encoding the document is encoded in by looking at the heading 3 or 4 bytes.
If empty, all functions will be intercepted by the specified handler and registered individual handlers will be replaced.
If encoding is omitted, mb_http_output() returns the current HTTP output character encoding.
If encoding is omitted, then the current character encoding name is returned.
If encoding_list is omitted, detect_order is used.
If entire_row is TRUE, then it returns an array of the entire first row.
If everything is OK, the CURLE_OK will be the result.
If exceptions is not set then SOAP call will throw an exception on error.
If filename does not exist, the file is created.
If filename is a relative filename, it will be checked relative to the current working directory.
If filename is a symbolic link, statistics are from the file itself, not the symlink.
If filename is a symbolic or hard link then the link will be resolved and checked.
If filename is a valid upload file, but cannot be moved for some reason, no action will occur, and move_uploaded_file() will return FALSE.
If filter accepts options, flags can be provided in "flags" field of array.
If from and to are different lengths, the extra characters in the longer of the two are ignored.
If from_encoding is not specified, the internal encoding will be used.
If funcname needs to be working with the actual values of the array, specify the first parameter of funcname as a reference.
If i is specified for this parameter, the case will be ignored.
If inside an included file, this lists the included file name(s).
If it could not connect to any of the hosts, it will throw a MongoConnectionException.
If it fails, it calls `invariant_violation`  This function provides a way to have a variable type checked as a more specific type than it is currently declared.
If it fails, it calls invariant_violation
If it is negative, it represents the number of characters from the end of string at which to stop replacing.
If it is not specified, 0 is used.
If it is not specified, the previous one will be used.
If it is omitted, internal character encoding is used.
If it is omitted, the internal character encoding value will be used.
If it is omitted, then the sequence will have everything from offset up until the end of the array.
If it is omitted, this function checks all the input from the beginning of the request.
If it returns an empty array then all key sizes between 1 and mcrypt_enc_get_key_size() are supported by the algorithm.
If it returns an empty array then all key sizes between 1 and mcrypt_module_get_algo_key_size() are supported by the algorithm.
If it returns false, then something else bad happened.
If it throws an exception, catch it and return the exception object.
If it works for one, it should work for all.
If it's 0, the item never expires (but memcached server doesn't guarantee this item to be stored all the time, it could be deleted from the cache to make place for other items).
If it's equal to zero, the item will be deleted right away whereas if you set it to 30, the item will be deleted in 30 seconds.
If it's equal to zero, the item will never expire.
If item specified by key was not numeric and cannot be converted to a number, it will change its value to value.
If larger than 1D, we have no mapping.
If latency is set to 0 then there is no latency score for this benchmark.
If length is given and is 0, FALSE or NULL an empty string will be returned.
If length is given and is negative then the sequence will stop that many elements from the end of the array.
If length is given and is negative, then that many characters will be omitted from the end of string (after the start position has been calculated when a start is negative).
If length is given and is non-negative, then subject will be examined for length characters after the starting position.
If length is omitted, the substring starting from start until the end of the string will be returned.
If length is specified and is negative then the end of the removed portion will be that many elements from the end of the array.
If length is specified and is positive, then that many elements will be removed.
If lengthis given and is negative, then subject will be examined from the starting position up to length characters from the end of subject.
If limit is set, the returned array will contain a maximum of limit  elements with the last element containing the rest of string.
If link_identifier is invalid, NULL is returned.
If locale is "0", the locale setting is not affected, only the current setting is returned
If locale is "0", the locale setting is not affected, only the current setting is returned.
If locale is NULL, the locale names will be set from the values of environment variables with the same names as the above ENV settings
If locale is an array or followed by additional parameters then each array element or parameter is tried to be set as new locale until success.
If locale is empty string "", the locale names will be set from the values of environment variables with the same names as from ENV
If m is specified, match will be executed in multiline mode and line break will be included in '.'.
If magic_quotes_sybase is on, no backslashes are stripped off but two apostrophes are replaced by one instead.
If matches are found, the new subject will be returned, otherwise subject will be returned unchanged or NULL if an error occurred.
If max_memory is negative, only memory will be used.
If max_memory is zero, no memory will be used.
If maxlength is not specified, all remaining content in source will be copied.
If mb_http_input() does not process specified HTTP input, it returns FALSE.
If more than one field of the same name are present, iconv_mime_decode_headers() automatically incorporates them into a numerically indexed array in the order of occurrence.
If more_entropy is TRUE, it will be 23 characters.
If multiple arguments evaluate to 0, max() will return a numeric 0 if given, else the alphabetical highest string value will be returned.
If multiple arguments evaluate to 0, min() will return the lowest alphanumerical string value if any strings are given, else a numeric 0 is returned.
If multiple output callback functions are active, output is being filtered sequentially through each of them in nesting order.
If multiple values can be considered of the same size, the one that is listed first will be returned.
If mysqli_field_count() returns a non-zero value, the statement should have produced a non-empty result set.
If name is empty, all previously registered handlers, including those that are set by individual function names, will be removed.
If name is specified, the name of the current session is changed to its value.
If namespaceURI, qualifiedName, and doctype are null, the returned DOMDocument is empty with no document element
If needle is a string, the comparison is done in a case-sensitive manner.
If needle is found in haystack more than once, the first matching key is returned.
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.
If needle is not found, FALSE is returned.
If needle is not found, grapheme_stripos() will return boolean FALSE.
If needle is not found, grapheme_strripos() will return boolean FALSE.
If needle is not found, grapheme_strrpos() will return boolean FALSE.
If needle is not found, iconv_strpos() will return FALSE.
If needle is not found, iconv_strrpos() will return FALSE.
If needle is not found, it returns FALSE.
If needle is not found, returns FALSE.
If needle is not found, strpos() will return boolean FALSE.
If negative length is passed, fb_utf8_substr() cuts the portion out of str from the start'th character up to the character that is length characters away from the end of the string.
If negative length is passed, iconv_substr() cuts the portion out of str from the offset'th character up to the character that is length characters away from the end of the string.
If negative, it starts counting from the end of the string.
If negative, then there was a select failure.
If new work is added to the suspended task it will be made runnable.
If no Iterator is attached, we always return false.
If no arguments are specified then the link identifier of the already opened link will be returned.
If no changes are specified, this method throws a BadMethodCallException if the archive is in phar file format.
If no changes are specified, this method throws a BadMethodCallException.
If no classes are defined, an empty array is returned.
If no config files were given at the command line, use a default
If no connection is found or established, an E_WARNING level error is generated.
If no database is given, the current database is used.
If no drivers are available, it returns an empty array.
If no element matches the search value, this function returns -1.
If no error messages gets printed do not know if proper usage of closeCursor() makes any difference or not.
If no errors exist, 0 is returned.
If no filename is given, then the trace file will be placed in the directory as configured by the xdebug.trace_output_dir setting.
If no function are defined, an empty array is returned.
If no function is registered the return value will be an empty array.
If no language is set previously, it then returns FALSE.
If no length is specified, it will keep reading from the stream until it reaches the end of the line.
If no matches are found in string, then it will be returned unchanged.
If no matches are found or an error happens, FALSE will be returned.
If no matches are found or an error occurred, an empty array is returned when subject is an array or NULL otherwise.
If no messages match the criteria, your script will wait until a suitable message arrives on the queue.
If no node has the given key, the last node on the search path is moved to the top of the tree.
If no order flag is given, PREG_PATTERN_ORDER is assumed.
If no parameter is provided, then the default implementation of spl_autoload() will be registered.
If no parameters are given, the current time is used and the increment is automatically provided.
If no parameters are given, the current time is used.
If no parameters are passed, this connects to "localhost:27017" (or whatever was specified in php.ini for mongo.default_host and mongo.default_port).
If no previous handler was defined, NULL is also returned.
If no rows were affected, PDO::exec() returns 0.
If no salt is provided, PHP will auto-generate either a standard two character (DES) salt, or a twelve character (MD5), depending on the availability of MD5 crypt().
If no such link is found, it will try to create one as if mysql_connect() was called with no arguments.
If no ttl is supplied (or if the ttl is 0), the value will persist until it is removed from the cache manually, or otherwise fails to exist in the cache (clear, restart, etc.).
If no value is supplied, PDOStatement::fetchColumn() fetches the first column.
If no year is specified, the current year is assumed.
If not given just return the current list.
If not given, iconv_mime_encode() assumes those parameters are presented to it in the iconv.internal_encoding ini setting.
If not given, the default compression level will be the default compression level of the zlib library.
If not given, the length will be limited to 76 characters.
If not provided, default to the sysvshm.init_mem in the php.ini, otherwise 10000 bytes.
If not provided, the behaviour is defined by the algorithm implementation and can lead to unexpected results.
If not specified it will default to 0.
If not specified, a stdClass object is returned.
If not specified, default for the type.
If not specified, step will default to 1.
If not specified, the MAGIC environment variable is used.
If not specified, the contents will be sent to "stdout".
If not specified, the value of the mcrypt.algorithms_dir directive is used.
If not specified, the value of the mcrypt.modes_dir directive is used.
If not supplied, newnode is appended to the children.
If not, then all is good.
If not, this function will only return the previous setting without changing it.
If not, throw exception and quit.
If not, thumbs down because there was a difference between what we ran and what we expected.
If nothing else is specified and spl_autoload_register() is called without any parameters then this functions will be used for any later call to __autoload().
If nothing was read, it must return an empty string.
If null, we are done.
If object is omitted when inside a class, the name of that class is returned.
If offset and length are such that nothing is removed, then the elements from the replacement array are inserted in the place specified by the offset.
If offset is equal to or greater than the length of main_str or length is set and is less than 1, substr_compare() prints a warning and returns FALSE.
If offset is negative then it starts that far from the end of the input array.
If offset is negative, iconv_substr() cuts out the portion beginning at the position, offset characters away from the end of str.
If offset is negative, the sequence will start that far from the end of the array.
If omitted, iconv.internal_encoding will be used.
If omitted, the default value for this argument is ISO-8859-1 in versions of PHP prior to 5.4.0, and UTF-8 from PHP 5.4.0 onwards.
If one wants to use the timezone of the object to be formatted, IntlDateFormatter::setTimeZone() must be called before with the object's timezone.
If options is omitted, it returns the string that describes the current options.
If options is used, this function will return a string if not all elements are requested.
If output buffering isn't active then FALSE is returned.
If output_buffering is enabled or an anonymous function was used with ob_start(), ob_list_handlers() will return "default output handler".
If output_callback returns FALSE original input is sent to the browser.
If p is specified, match will be executed in POSIX mode, line break will be considered as normal character.
If pad_size is positive then the array is padded on the right, if it's negative then on the left.
If pad_type is not specified it is assumed to be STR_PAD_RIGHT.
If parameter timeout is specified, the item will expire after timeout seconds.
If parameters given assume they represent selected tests to run.
If path is not a valid directory or the directory can not be opened due to permission restrictions or filesystem errors, opendir() returns FALSE and generates a PHP error of level E_WARNING.
If pattern is not specified, the previous one is used.
If possible, you should directly construct connection pools via `new AsyncMysqlConnectionPool()` and then call `AsyncMysqlConnectionPool::connect()` to connect to the MySQL client using those pools.
If raw_output is TRUE this corresponds to the byte-length of the derived key, if raw_output is FALSE this corresponds to twice the byte-length of the derived key (as every byte of the key is returned as two hexits).
If replace has fewer values than search, then an empty  string is used for the rest of replacement values
If replace has fewer values than search, then an empty string is used for the rest of replacement values.
If replace_pairs contains a key which is an empty string (""), FALSE will be returned.
If replacement is just one element it is not necessary to put array() around it, unless the element is an array itself, an object or NULL.
If return_float is set, then a float is returned.
If returned `int` is positive, that represents the number of handles on which there was activity.
If search and replace are arrays, then str_ireplace() takes a value from each array and uses them to do search and replace on subject.
If search and replace are arrays, then str_replace() takes a value from each array and uses them to do search and replace on subject.
If search is an array and replace is a string, then this replacement string is used for every value of search.
If search or replace are arrays, their elements are processed first to last.
If seconds is zero, no new alarm is created.
If set to 0 both attributes types and attribute values are fetched which is the default behaviour.
If set to 0, the current process is assumed.
If set to 0, then the string "Success" is returned.
If set to NULL, the existing file format will be preserved.
If set to TRUE, details of errors in a SoapServer application will be sent to the clients.
If set to TRUE, it returns all of haystack from the beginning to the first occurrence of needle.
If set to TRUE, it returns all of haystack from the beginning to the last occurrence of needle.
If setcookie() successfully runs, it will return TRUE.
If setlocale is global, the pagelet thread will have changed this output line to Dutch
If several arrays are passed for replacement, they will be processed in order, the later array overwriting the previous values.
If several arrays are passed for replacement, they will be processed in order, the later arrays overwriting the previous values.
If size is greater than the current array size, the array will be padded with NULL values.
If size is larger than the file it is extended with null bytes.
If size is larger than the file then the file is extended with null bytes.
If size is less than the current array size, any values after the new size will be discarded.
If size is smaller than the file then the file is truncated to that size.
If size is smaller than the file, the extra data will be lost.
If so, it will be documented.
If so, techniques should be provided to prevent misuse, otherwise expect exceptions or fatal errors.
If socket has been made non-blocking using socket_set_blocking() or socket_set_nonblock(), FALSE will be returned.
If some opcode numbers are not used then fill hole with pointers to handler of undefined opcode
If specified, the path to which data is saved will be changed.
If split_length is  specified, break the string down into chunks each  split_length characters long.
If stack is TRUE, images are stacked top-to-bottom.
If start and length are omitted, then all of subject will be examined.
If start denotes a position beyond this truncation, an empty string will be returned.
If start is given and is negative, then strspn() will begin examining subject at the start'th position from the end of subject.
If start is given and is non-negative, then strspn() will begin examining subject at the start'th position.
If start is negative, fb_utf8_substr() cuts out the portion beginning at the position, start characters away from the end of str.
If start is negative, the replacing will begin at the start'th character from the end of string.
If start is negative, the returned string will start at the start'th character from the  end of string.
If start is negative, the returned string will start at the start'th character from the end of string.
If start position is multi-byte character's second byte or larger, it starts from first byte of multi-byte character.
If status is SKIP, then we just move on and don't count either way.
If str is shorter than offset characters long, FALSE will be returned.
If str is shorter than start characters long, the empty string will be returned.
If stream_select returns 0, then there is no more data or we have timed out.
If string is an array then array is returned.
If string is less than or equal to start characters long, FALSE  will be returned.
If string is less than or equal to start characters long, FALSE will be returned.
If subject is an array, then the search and replace is performed on every entry of subject, and the return value is an array as well.
If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well.
If substchar is not set, it returns the Unicode value, or "none" or "long".
If successful the sealed data is returned in sealed_data, and the envelope keys in env_keys.
If successful, record the solution, perhaps modifying the current dataflow graph.
If successful, the method creates a new archive on disk and returns a PharData object.
If supplied, writing will stop after length (uncompressed) bytes have been written or the end of string is reached, whichever comes first.
If that flag is not set we return true on the first valid sub iterator found.
If that would be the case, the test would be broken.
If the IV is ignored in the specified cipher/mode combination zero is returned.
If the PDO driver does not support this capability, PDO::lastInsertId() triggers an IM001 SQLSTATE.
If the PDOStatement object was returned from PDO::prepare(), an accurate column count will not be available until you invoke PDOStatement::execute().
If the PDOStatement object was returned from PDO::query(), the column count is immediately available.
If the PHP directive mysql.default_host is undefined (default), then the default value is 'localhost:3306'.
If the SQLSTATE error code is not set or there is no driver-specific error, the elements following element 0 will be set to NULL.
If the SplFileObject::READ_CSV flag is set, this method returns an array containing the current line parsed as CSV data.
If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place.
If the argument is set to TRUE then localtime() returns an associative array containing all the different elements of the structure returned by the C function call to localtime.
If the argument number is of type float, the return type is also float, otherwise it is integer (as float usually has a bigger value range than integer).
If the arguments are invalid, the function returns FALSE (before PHP 5.1 it returned -1).
If the array is empty and initial is not passed, array_reduce() returns NULL.
If the array that array_walk() is applied to is changed, the behavior of this function is undefined, and unpredictable.
If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.
If the assertion is given as a string it will be evaluated as PHP code by assert().
If the attribute does not exist, it will be created.
If the autoload stack is not activated then the return value is FALSE.
If the build includes encryption, then it will attempt to use the key.
If the built-in error handler is used NULL is returned.
If the call fails, it will return FALSE
If the call was interrupted by a signal, sleep() returns the number of seconds left to sleep.
If the callback function has two parameters, the second parameter is filled with a bit-field consisting of PHP_OUTPUT_HANDLER_START, PHP_OUTPUT_HANDLER_CONT and PHP_OUTPUT_HANDLER_END.
If the caller is a super user, this will also set the effective group id.
If the class is defined in the PHP core or in a PHP extension, FALSE is returned.
If the collator was instantiated from rules or an error occurred, returns boolean FALSE.
If the collator was instantiated from rules or an error occurred, returns false.
If the column from which you are retrieving the value is not an integral type, then an `Exception` is thrown.
If the column from which you are retrieving the value is not an numeric type, then an `Exception` is thrown.
If the column in the result set is the result of a function, this value is not returned by PDOStatement::getColumnMeta().
If the column name has been aliased ('select foo as bar from...'), use the alias instead of the column name.
If the component parameter is omitted, an associative array is returned.
If the component parameter is specified, parse_url() returns a string (or an integer, in the case of PHP_URL_PORT) instead of an array.
If the current locale is C or POSIX, this function is equivalent to strcmp().
If the data has a naturally occuring unique field (say, a username or timestamp) it is fine to use this as the _id field instead, and it will not be replaced with a MongoId.
If the database server cannot successfully prepare the statement, PDO::prepare() returns FALSE or emits PDOException (depending on error handling).
If the database was set to autocommit mode, this function will restore autocommit mode after it has rolled back the transaction.
If the delay was interrupted by a signal, an associative array will be returned with the components: seconds - number of seconds remaining in the delay nanoseconds - number of nanoseconds remaining in the delay
If the desired protocol is TCP, or UDP the corresponding constants SOL_TCP, and SOL_UDP can also be used.
If the directory does not exist, tempnam() may generate a file in the system's temporary directory, and return the name of that.
If the directory handle is not specified, the last link opened by opendir() is assumed.
If the document have no DTD attached, this method will return FALSE.
If the environment variable isn't set, then PHP's bundled magic database will be used.
If the error has been caused by a PHP internal function then the "message" begins with its name.
If the error message is not listed above, it is probably an error from the C socket, and you can search the web for its usual cause.
If the field offset is not specified, the next field that was not yet retrieved by this function is retrieved.
If the file does not exist it will look for composer.json and do the same.
If the file does not exist, it will be created.
If the file is large, it will automatically be split into smaller chunks and each chunk will be saved as a document in the chunks collection.
If the file is valid, it will be moved to the filename given by destination.
If the filename ends in suffix this will also be cut off.
If the first and only parameter is an array, max() returns the highest value in that array.
If the first and only parameter is an array, min() returns the lowest value in that array.
If the first baseline run, make both the same.
If the flag FILTER_NULL_ON_FAILURE is used, it returns FALSE if the variable is not set and NULL if the filter fails.
If the framework does not exist in your local repo, it gets downloaded to your dev box.
If the function returns FALSE then the normal error handler continues.
If the given socket is of type AF_UNIX, socket_getpeername() will return the Unix filesystem path (e.g. /var/run/daemon.sock) in the address parameter.
If the given socket is of type AF_UNIX, socket_getsockname() will return the Unix filesystem path (e.g. /var/run/daemon.sock) in the address parameter.
If the hostname is invalid, data-related operations will set Memcached::RES_HOST_LOOKUP_FAILURE result code.
If the input arrays have the same string keys, then the later value for that key will overwrite the previous one.
If the input arrays have the same string keys, then the values for these keys are merged together into an array, and this is done recursively, so that if one of the values is an array itself, the function will merge it with a corresponding entry in another array too.
If the interlace bit is set and the image is used as a JPEG image, the image is created as a progressive JPEG.
If the internal pointer for the array points past the end of the array contents, each() returns FALSE.
If the internal pointer points beyond the end of the elements list or the array is empty, current() returns FALSE.
If the internal pointer points beyond the end of the elements list or the array is empty, key() returns NULL.
If the key exists in the second array, and not the first, it will be created in the first array.
If the key is not found, an exception is thrown.
If the key is not present, `null` is returned.
If the key is not present, an exception is thrown.
If the key is not present, null is returned.
If the last SQL statement executed by the associated PDOStatement was a SELECT statement, some databases may return the number of rows returned by that statement.
If the last query was a DELETE query with no WHERE clause, all of the records will have been deleted from the table but this function will return zero with MySQL versions prior to 4.1.2.
If the length arquement is given,writing will stop after length bytes have been written or the end of string reached, whichever comes first.
If the limit parameter is negative, all components except the last -limit are returned.
If the limit parameter is zero, then this is treated as 1.
If the link identifier is not specified, the last link opened by mysql_connect() is assumed.
If the localesList is empty, no restrictions will be placed on the allowed characters.
If the majority of the lines in the file are all larger than 8KB, it is more resource efficient for your script to specify the maximum line length.
If the message queue already exists, the perms will be ignored.
If the multiplier is set to 0, the function  will return an empty string.
If the multiplier is set to 0, the function will return an empty string.
If the new node is already a child it will not be added a second time.
If the newChild is already in the tree, it is first removed.
If the note cannot be retrieved, FALSE is returned.
If the number is greater than maximal int value, mysqli_insert_id() will return a string.
If the number of affected rows is greater than maximal PHP int value, the number of affected rows will be returned as a string value.
If the number of affected rows is greater than the maximum integer value( PHP_INT_MAX ), the number of affected rows will be returned as a string.
If the number of elements of the current `Pair` are not equal to the number of elements in the `Traversable`, then only the combined elements up to and including the final element of the one with the least number of elements is included.
If the number of rows is greater than PHP_INT_MAX, the number will be returned as a string.
If the numerator is PHP_INT_MIN and the divisor is -1, then an ArithmeticError exception is thrown.
If the object does not have a parent or the class given does not exist FALSE will be returned.
If the object is from the database, update the existing database object, otherwise insert this object.
If the old style handler also fails to register the class then the object becomes an incomplete class instance.
If the open fails, the function returns FALSE.
If the optional argument pad_string is not supplied, the input is padded with spaces, otherwise it is padded with characters from pad_string up to the limit.
If the optional base parameter is specified, log() returns logbase arg, otherwise log() returns the natural logarithm of arg.
If the optional format is not specified, then the return value will be an integer representing the number of words found.
If the optional get_as_float is set to TRUE then a float (in seconds) is returned.
If the optional parameter regs was not passed or the length of the matched string is 0, this function returns 1.
If the optional regs parameter was specified, the function returns the byte length of matched part, and the array regs will contain the substring of matched string.
If the optional search_value is specified, then only the keys for that value are returned.
If the optional sorting_order is set to non-zero, then the sort order is alphabetical in descending order.
If the original node had a parent node, the new node is inserted as the next sibling of the original node.
If the output_callback is not a callable function, this function will return FALSE.
If the parameter doesn't exist in the stylesheet it will be ignored.
If the parameter is not optional a ReflectionException will be thrown.
If the pattern has the same skeleton as an existing pattern, and the override parameter is set, then the previous value is overridden.
If the power cannot be computed FALSE will be returned instead.
If the previous error handler was a class method, this function will return an indexed array with the class and the method name.
If the property is static this parameter is left out and only value needs to be provided.
If the replacement succeeds the old node is returned.
If the requested component doesn't exist within the given URL, NULL will be returned.
If the result can be represented as integer it will be returned as type integer, else it will be returned as type float.
If the skeleton contains fractional seconds, then this is used with the fractional seconds.
If the socket is connection-oriented, name is NULL.
If the socket is connection-oriented, port will be NULL.
If the socket is non-blocking then this function returns FALSE with an error Operation now in progress.
If the socket is not connection-oriented, name will be set to the internet protocol address of the remote host or the path to the UNIX socket.
If the socket is of the AF_UNIX family, the address is the path of a Unix-domain socket (e.g. /tmp/my.sock).
If the socket resource is omitted, the error code of the last failed socket function is returned.
If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed.
If the split_length length exceeds the length of string, the entire string is returned as the first (and only) array element.
If the stack is activated and empty after unregistering the given function then it will be deactivated.
If the stack is not yet activated it will be activated.
If the sum of offset and count exceeds the length, then all 16-bit units to the end of the data are returned.
If the sum of offset and count exceeds the length, then all characters to the end of the data are deleted.
If the sum of offset and count exceeds the length, then all characters to the end of the data are replaced.
If the target is elsewhere in the map, __call's state will be reset to use the new map element.
If the target method actually exists, the fcall will be proxied through call_user_func_array().
If the temporary file exceeds this size, it will be moved to a file in the system's temp directory.
If the test that is coming in to this function is an individual test, as opposed to a file, then we can use the --filter option to make the run string have even more specificity.
If the user provided an encoding in metadata (like an HTTP or XML declaration), this can be used as an additional hint to the detector.
If the value is an array, valid keys are filter which specifies the filter type, flags which specifies any flags that apply to the filter, and options which specifies any options that apply to the filter.
If the value is inserted, it becomes the root of the tree.
If the value is not an array of valid items, an UnexpectedValueException is thrown
If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING.
If the value returned in errno is 0 and the function returned FALSE, it is an indication that the error occurred before the bind() call.
If the value returned in errno is 0 and the function returned FALSE, it is an indication that the error occurred before the connect() call.
If there are fewer elements in the replacement array than in the pattern array, any extra patterns will be replaced by an empty string.
If there are multiple connections queued on the socket, the first will be used.
If there are no more entries in the result then it returns FALSE.
If there are no pending connections, socket_accept() will block until a connection becomes present.
If there are no slashes in path, a dot ('.') is returned, indicating the current directory.
If there are some matches, the first element will have the matched sub-string, the second element will have the first part grouped with brackets, the third element will have the second part grouped with brackets, and so on.
If there is a default value, then there has to be defaultText If the defaultText is a class constant, then classname will be associated with the text, so you can use defined for that as well.
If there is already an open cursor from a previous mysqli_stmt_execute() call, it closes the cursor before opening a new one.
If there is an invalid byte sequence for the following encodings, encoding detection will fail.
If there is more than one regex back to back, just don't end the first
If there is no content in the directories under vendor, then we did not get the dependencies.
If there is no debugger that's attached, it will not do anything.
If there is no result set, PDOStatement::columnCount() returns 0.
If there must be multiple autoload functions, spl_autoload_register() allows for this.
If there were any successful queries before receiving the error, this will let you know how many of those there were.
If there's an issue from now on, its a failure
If this argument is omitted, the request is assumed to be in the raw POST data of the HTTP request.
If this connections isn't SSL, `false` will be returned as well.
If this handler returns FALSE, code will continue with original function.
If this is available, a configuration file is being used.
If this is not used, TEST_WEB_BASE_URL should be the base url pointing to TEST_PHP_SRCDIR, which should then be accessible via an http server.
If this is reached, the script returns a fatal error.
If this length is greater than the buffer length, it is silently truncated to the length of the buffer.
If this means to another Iterator then it rewinds that Iterator.
If this occurs, the server will indicate that it has only returned a partial results set.
If this parameter is a string and the pattern parameter is an array, all patterns will be replaced by that string.
If this parameter is negative, then the SQL aggregate may take any number of arguments.
If this parameter is negative, then the SQL function may take any number of arguments.
If this parameter is not provided, wait will be used for the system call.
If this part is not set for a recipient, this key will hold the same value as address.
If this test fails ask the developers of run-test.php
If time is not supplied, the current system time is used.
If timeout is not provided or evaluates to -1, the current timeout value of timeout_type is returned as an integer.
If timezone is not set, use UTC.
If trimmarker is set, trimmarker is appended to the return value.
If true and if the server doesn't support pagination, the search will return no result.
If tv_sec and tv_usec are both set to 0, stream_select() will not wait for data - instead it will return immediately, indicating the current status of the streams.
If tv_sec is NULL (no timeout), socket_select() can block indefinitely.
If tv_sec is NULL stream_select() can block indefinitely, returning only when an event on one of the watched streams occurs (or if a signal interrupts the system call).
If two members compare as equal, their order in the sorted array is undefined.
If two or more columns of the result have the same field names, the last column will take precedence.
If two parameters are given, number will be formatted with decimals decimals with a dot (".") in front, and a comma (",") between every group of thousands.
If type is omitted or set to "all", iconv_get_encoding() returns an array that stores all these variables.
If type is omitted, it returns the last input type processed.
If type is specified as "http_output", "http_input", "internal_encoding", "func_overload", the specified setting parameter will be returned.
If undefined, the first field is retrieved.
If unserialize is FALSE, the message will be returned as a binary-safe string.
If use has requested a class check that method is specified
If using the column name, be aware that the name should match the case of the column, as returned by the driver.
If var is not an array or an object with implemented Countable interface, 1 will be returned.
If wait3 is not available, providing a value for options will have no effect.
If we actually have something in cache, and the times match, use it.
If we already read the response during an earlier call for different id, just return it
If we are at the end of the data, block for a while rather than returning no data.
If we are running this framework with individual test mode (e.g., --by-test), then --filter already exists.
If we are using --latest or --latest-record, we checkout from a branch above, then get an updated commit hash to put in our frameworks.json file
If we cannot open the stats file, return Fatal
If we failed to prepare we need to move the error messages that are on the mysqli_stmt object to the mysqli object otherwise the user will never be able to get them.
If we get false back, then a header is required.
If we get headers back, then a proxy is not required.
If we have "No tests executed", assume a skip Otherwise, print the final stats.
If we have a connection going, then send it a break command.
If we have a large result set, we can iterate through it, loading a few megabytes of results into memory at a time.
If we have finished the tests, then we are just printing any error info and getting the final stats
If we have no final stats, assume some sort of fatal for this test.
If we haven't helper with specified spicialized operands then using unspecialized helper
If we hit a fatal or something, we will stop the overall test running for this particular test sequence
If we hit what we think is the final stats based on the pattern of the line, make sure this is the case.
If we pull/merge, the HEAD SHA changes.
If we really need that functionality, we can do something like this instead: https://phabricator.fb.com/P20754288
If we've run too few iterations, we continue for another second.
If whence is not specified, it is assumed to be SEEK_SET.
If x is specified, white space will be ignored.
If y is non-zero, r has the same sign as x and a magnitude less than the magnitude of y.
If you append the string //IGNORE, characters that cannot be represented in the target charset are silently discarded.
If you append the string //TRANSLIT to out_charset transliteration is activated.
If you are using this function to build SQL statements, you are strongly recommended to use PDO::prepare() to prepare SQL statements with bound parameters instead of using PDO::quote() to interpolate user input into an SQL statement.
If you are using this function, you might consider just creating a connection pool via `AsyncMysqlConnectionPool` since you presumably have all the connection details anyway.
If you are writing sharding tools, read on.
If you authenticate on connection and the connection drops and reconnects during your session, you'll be reauthenticated.
If you call next(), these "dual" iterators will need to get the key and current value out of the underlying iterator and store it.
If you call them from callback function, the behavior is undefined.
If you cause the output to change, inspect the results carefully to ensure we have a balanced enter/exit for every call.
If you change the name here, also make sure to change the name in Jenkins script that updates the test result -- they have to be the same.
If you connect directly to a secondary in a replica set, you still need to call this function, which basically tells the database that you are aware that you might be getting older data and you're okay with that.
If you create a PDOStatement object through PDO::prepare() or PDO::query() and invoke an error on the statement handle, PDO::errorCode() will not reflect that error.
If you create a PDOStatement object through PDO::prepare() or PDO::query() and invoke an error on the statement handle, PDO::errorInfo() will not reflect the error from the statement handle.
If you create the file, it will return TRUE even if you then delete the file.
If you created the image from a file, only colors used in the image are resolved.
If you do not call this, you'll get "not master" errors when you try to query.
If you do not fetch all of the data in a result set before issuing your next call to PDO::query(), your call may fail.
If you do not want the function to append elements, call unset() on the array before passing it to exec().
If you do not want to use it you should set it to zeros, but this is not recommended.
If you do, then adjust NUM_GP_ARGS/NUM_SIMD_ARGS as needed and pipe the output of this script to runtime/vm/native-func-caller.h  I solemnly swear that I am up to no good.
If you don't need fancy replacing rules (like regular expressions), you should always use this function instead of ereg_replace() or preg_replace().
If you don't need fancy replacing rules, you should generally use this function instead of preg_replace() with the i modifier.
If you don't need to use a custom context, you can skip this parameter by NULL.
If you don't understand how NativeFuncCaller works, don't use this script.
If you don't want an exception to be thrown, use `get()` instead.
If you don't want an options, pass an empty `array()`.
If you don't want the same base DN and the same filter for all the searches, you can also use an array of base DNs and/or an array of filters.
If you get this error, you should use MongoCollection::ensureIndex()'s "name" option to create a shorter name for your index.
If you give it an unsigned integer value too large to be stored that way it is converted to a float which often yields an undesired result.
If you have GNU Tar installed, you should be able to find the file format documentation (including header byte offsets) at: - /usr/include/tar.h - the tar info page (Top/Tar Internals/Standard)
If you have a direct query that requires no placeholders, then you can use this method.
If you have enabled safe mode, or open_basedir further restrictions may apply.
If you have exhasted the cursor, it will not reset it.
If you have open pipes to that process, you should fclose() them prior to calling this function in order to avoid a deadlock - the child process may not be able to exit while the pipes are open.
If you have started iterating through results, it will not move the current position of the cursor.
If you have this set, it probably points to hhvm objects, not OSS objects.
If you have those, we are just double setting variables to true.
If you just want to dump the contents of a file to the output buffer, without first modifying it or seeking to a particular offset, you may want to use the readfile(), which saves you the fopen() call.
If you manually authenticated using this method and the connection drops, you'll have to call this method again once you're reconnected.
If you need to execute a command and have all the data from the command passed directly back without any interference, use the passthru() function.
If you need to execute the standard constructor you may do so in the method.
If you need to set a timeout for reading/writing data over the socket, use stream_set_timeout(), as the timeout parameter to fsockopen() only applies while connecting the socket.
If you only want to determine if a particular needle occurs within haystack, use the faster and less memory intensive function strpos() instead.
If you open a cursor for a prepared statement, mysqli_stmt_store_result() is unnecessary.
If you override this, it is highly recommended that you set error checking to strict to avoid string interpolation errors.
If you pass "false" as argument, then the code coverage information will not be destroyed so that you can resume the gathering of information with the xdebug_start_code_coverage() function again.
If you pass pattern as '*', you will get a list of the entire mailbox hierarchy.
If you plan to do further modifications on the appended child you must use the returned node.
If you put it on STDOUT instead, 'All tests passed.'
If you require all HTML character entities to be translated, use htmlentities() instead.
If you specified a username and password, you may specify a database to authenticate with.
If you specify 0, it will return all the elements in the `Pair`.
If you think split() (or any other regex function, for that matter) is doing something weird, please read the file regex.7, included in the regex/ subdirectory of the PHP distribution.
If you think spliti() (or any other regex function, for that matter) is doing something weird, please read the file regex.7, included in the regex/ subdirectory of the PHP distribution.
If you think you need to override this, look at extraPreComposer() and extraPostComposer() instead.
If you turn it on (say, using MongoDB::setProfilingLevel() or the shell), you can see how many queries took longer than a given number of milliseconds or the timing for all queries.
If you use MYSQLI_USE_RESULT all subsequent calls will return error Commands out of sync unless you call mysqli_free_result()   With MYSQLI_ASYNC (available with mysqlnd), it is possible to perform query asynchronously.
If you use the MYSQLI_STMT_ATTR_CURSOR_TYPE option with MYSQLI_CURSOR_TYPE_READ_ONLY, a cursor is opened for the statement when you invoke mysqli_stmt_execute().
If you want full configurability, call typecheck() and use the TypecheckResult yourself.
If you want to be able to pool up a bunch of connections, you would call `setPoolsConnectionLimit()`, create a default pool of connections with `AsyncMysqlConnectionPool()::__construct()`, which now has that limit set, and then call `AsyncMysqlConnectionPool()::connect()`.
If you want to deliver thumbnails through this function, you should send the mimetype information using the header() function.
If you want to execute multiple queries use the mysqli_multi_query() function.
If you want to fetch the default property without providing an object use ReflectionClass::getDefaultProperties() instead.
If you want to further process the buffer's contents you have to call ob_get_contents() before ob_end_clean() as the buffer contents are discarded when ob_end_clean() is called.
If you want to further process the buffer's contents you have to call ob_get_contents() before ob_end_flush() as the buffer contents are discarded after ob_end_flush() is called.
If you want to further process the buffer's contents you have to call ob_get_contents() before ob_flush() as the buffer contents are discarded after ob_flush() is called.
If you want to see if a function exists, use function_exists().
If you want to see if a variable exists, use isset() as defined() only applies to constants.
If you want to split on any of the characters which are considered special by regular expressions, you'll need to escape them first.
If you want to stick to the standards, you will have to create a temporary DOMDocument with a dummy root and then loop through the child nodes of the root of your XML data to append them.
If you want typed values, use `mapRowsTyped()`.
If you want typed values, use `vectorRowsTyped()`.
If you wish to move a file, use the rename() function.
If you wish to retrieve the information for the file my/file.php from the phar boo.phar, the entry should be phar://boo.phar/my/file.php.
If you would like to delete the contents of a buffer, return "" (a null string) from callback function.
If you would like to get whatever results mongos can provide and no exception, you can use this method.
If you would like to profile queries that take longer than another time period, use the database command and pass it a second option, the number of milliseconds.
If you would rather have an exception thrown when a key is not present, then use `at()`.
If you're a Facebook employee, take a look at the JsonTestRunner class for the format specification.
If you're ignoring the previous paragraph and want to call it directly you can do so:    But don't.
If you're interested in getting the last modification time of a different file, consider using filemtime().
If you're not looking to write sharding tools, what you probably want is MongoDate.
If you're opening a URI with special characters, such as spaces, you need to encode the URI with urlencode().
If you're wanting to decode instead (the reverse) you can use html_entity_decode().
If your PHP/Hack code needs to support multiple versions of HHVM/PHP, the autoloader can be (ab)used to provide an alternative implementation for versions that don't define a builtin.
If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack.
If your database driver suffers from this limitation, the problem may manifest itself in an out-of-sequence error.
If, for some reason, you need a cursor to hang around for a long time, you can prevent the database from cleaning it up by using this method.
If, however, the arrays contain numeric keys, the later value will not overwrite the original value, but will be appended.
If, however, the arrays have the same numeric key, the later value will not overwrite the original value, but will be appended.
Ignore Microsecconds
Illegal values for key will be converted to string.
Imagick::CHANNEL_ALL.
Imagick::IMGTYPE_UNDEFINED     Imagick::IMGTYPE_BILEVEL    Imagick::IMGTYPE_GRAYSCALE     Imagick::IMGTYPE_GRAYSCALEMATTE    Imagick::IMGTYPE_PALETTE     Imagick::IMGTYPE_PALETTEMATTE    Imagick::IMGTYPE_TRUECOLOR     Imagick::IMGTYPE_TRUECOLORMATTE    Imagick::IMGTYPE_COLORSEPARATION    Imagick::IMGTYPE_COLORSEPARATIONMATTE     Imagick::IMGTYPE_OPTIMIZE
ImmMap is an immutable Map.
ImmSet is an immutable Set.
ImmVector is an immutable Vector.
Impl-level.
Implementaiton-level
Implementation detail for zlib.inflate stream filter.
Implementation of __toString
Implicit flushing will result in a flush operation after every output call, so that explicit calls to flush() will no longer be needed.
Import all attributes from :bar
Import all attributes from :baz
Import the pixels into image.
Import this wait handle to the current scheduler context
Import variables from an array into the current symbol table.
Imports GET/POST/Cookie variables into the global scope.
Imports a zend extension into HHVM
In 'input' array argument, values are expected to be valid keys i.e. string/integer here testing for all different valid string and integer values
In , this parameter is ignored and empty password is used.
In , this parameter is ignored and the name of the user that owns the server process is used.
In , this parameter is ignored and value 'localhost:3306' is always used.
In , this parameter is ignored.
In 5.3.99 the warning will always be thrown, independent of the mysql.trace_mode setting.
In HHVM, you can call the constructor directly, but you have to have an instance of ReflectionParameter or ReflectionFunctionAbstract.
In January 2008 , level 7.18.0 of the curl lib, many of the messages changed.
In Linux, this is gettid()
In MULTI mode (activated by calling Redis::multi()) we send commands immediately.
In PHP 4, the default output encoding is the same as the input charset.
In PHP 4.0.4, ob_gzhandler() was introduced to facilitate sending gz-encoded data to web browsers that support compressed web pages.
In PHP 5 must be UTF-8 encoded.
In PHP 5 we first evaluate static class  properties and then do the function call.
In PHP 5, the second argument of str_repeat becomes null, which is then cast into an int.
In PHP 5.4.0 and later, FORCE_DEFLATE generates RFC 1950 compliant output, consisting of a zlib header, the deflated data, and an Adler checksum.
In PHP 7 you can call the public constructor from user code and then you fatal on the first method call to the instance.
In PIPELINE mode (activated by calling Redis::pipeline()) we queue all commands locally until invoking Redis::exec() at which point they are sent to the server in a single batch.
In SQL safe mode, this parameter is ignored and empty password is used.
In SQL safe mode, this parameter is ignored and the name of the user that owns the server process is used.
In SQL safe mode, this parameter is ignored and value 'localhost:3306' is always used.
In Safe Mode, the user may only alter environment variables whose names begin with the prefixes supplied by this directive.
In a query result, the sum total of all the row blocks is the full result of the query.
In addition to its value, it maintain the structure of the constraint graph, the current dataflow graph, and various parameters of interest to the DeltaBlue incremental constraint solver.
In addition, if any files are already compressed using bzip2/zlib compression, the respective extension must be enabled in order to decompress the files prior to re-compressing.
In addition, if the file is already compressed, the respective extension must be enabled in order to decompress the file.
In addition, it is slow too, as it involves string comparison.
In addition, this method automatically renames the archive, appending .gz, .bz2 or removing the extension if passed Phar::NONE to remove compression.
In addition, this method automatically renames the file extension of the archive, .tar by default.
In all cases, FALSE is returned on failure.
In all other cases, the method should be used.
In any case, the two cases can be distinguished by calling intl_get_error_code().
In array order, each callback is called for the pattern in question, and the return value is then used as the subject for the next pattern/callback pair.
In blending mode, the alpha channel component of the color supplied to all drawing function, such as imagesetpixel() determines how much of the underlying color should be allowed to shine through.
In both MULTI and PIPELINE modes, pending commands may be discarded by calling Redis::discard() The return value for both MULTI and PIPELINE for most commands is the object itself, meaning fluent calling may be used.
In case 1, the added constraint is stronger than the stay constraint and values must propagate down the entire length of the chain.
In case 2, the added constraint is weaker than the stay constraint so it cannot be accommodated.
In case a file name is given as first parameter, the name is relative to the current working directory.
In case if item with such key doesn't exists, Memcache::replace() returns FALSE.
In case initialisation is necessary foo_global() will be called.
In case of an error, it returns FALSE.
In case of an error, it returns NULL.
In case of an error, it returns TRUE.
In case of error, stat() returns FALSE.
In case of multiple values for an attribute, they are indexed using integers starting with 0.
In case of static methods, you can pass null to this parameter.
In case offset is also negative, the start position is calculated beforehand according to the rule explained above.
In case start is also negative, the start position is calculated beforehand according to the rule explained above.
In case the PDO_MYSQL_TEST_CHARSET interferes with any defaults we do another test to verify that the charset has been set.
In case the script is making successive searches which return large result sets, ldap_free_result() could be called to keep the runtime memory usage by the script low.
In contrast, idx() will fail silently if the index doesn't exist, which won't help you out at all.
In earlier versions, it was taken as number of significant digits (one less).
In fact, sometimes the standard DES-based algorithm is replaced by an MD5-based algorithm.
In fact, there is discussion about deprecating `AsyncMysqlClient` all together to avoid having this choice.
In fact, there is discussion about deprecating the `AsyncMysqlClient` class all together.
In general produces smaller output compared to fb_serialize().
In general, parameters are legal only in Data Manipulation Language (DML) statements, and not in Data Definition Language (DDL) statements.
In general, you should use the authenticate built into MongoClient::__construct() in preference to this method.
In its simplest form the function will take only the two strings as parameter and will calculate just the number of insert, replace and delete operations needed to transform str1 into str2.
In lieu of 'format', a mapping may specify 'vararg' for variadic methods.
In many applications you will be searching for a specific attribute such as an email address or a surname, and won't care what other data is held.
In mode MIT_NEED_ALL we expect all sub iterators to be valid and return false on the first non valid one.
In non-blending mode, the drawing color is copied literally with its alpha channel information, replacing the destination pixel.
In non-blocking mode an fgets() call will always return right away while in blocking mode it will wait for data to become available on the stream.
In non-pagelet mode, expecting Italian date and decimal point format: 3,142 and venerdi 22 dicembre 1978.
In order for it to be safe you need to invoke a static method on the instance.
In order for log messages to be output by PHP their level (E_NOTICE) does need to be configured to be shown.
In order for this test to run on both linux and windows, the subject will have to be ascii only.
In order of preference, this function returns the default timezone by: Reading the timezone set using the date_default_timezone_set() function (if any)  Reading the TZ environment variable (if non empty) (Prior to PHP 5.3.0)  Reading the value of the date.timezone ini option (if set) Querying the host operating system (if supported and allowed by the OS)  If none of the above succeed, date_default_timezone_get() will return a default timezone of UTC.
In order to allow the JIT to make more aggressive optimizations, we have an option that disables dynamic calls to these functions---to make that work, non-dynamic calls are rewritten to call these __SystemLib versions, which are still allowed to modify the caller variable environment when the option is enabled.
In order to pass a custom session handler to session_set_save_handler() using its OOP invocation, the class must implement this interface.
In other  words the return value of bar_global() is a temporary variable only valid after the function call bar_global() is done in current local scope.
In other environments, it is the forward slash (/).
In other words, errcontext will contain an array of every variable that existed in the scope the error was triggered in.
In other words, for declarations such as TIMESTAMP(2), TIMESTAMP(4), and so on, the display width is ignored.
In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit(20) is made, the script will run for a total of 45 seconds before timing out.
In other words, imagecopyresampled() will take an rectangular area from src_image of width src_w and height src_h at position (src_x,src_y) and place it in a rectangular area of dst_image of width dst_w and height dst_h at position (dst_x,dst_y).
In other words, imagecopyresized() will take an rectangular area from src_image of width src_w and height src_h at position (src_x,src_y) and place it in a rectangular area of dst_image of width dst_w and height dst_h at position (dst_x,dst_y).
In other words, it defaults to the value of time().
In other words, timestamp is optional and defaults to the value of time().
In pagelet mode expecting regular decimal point(.) and Dutch (default) date (vrijdag 22 december 1978) depending on what's passed in.
In particular, this is useful for passing passphrases to programs like PGP, GPG and openssl in a more secure manner.
In passive mode, data connections are initiated by the client, rather than by the server.
In practice, we aren't implementing this correctly in hhvm right now, so it doesn't really matter.
In short, it does the opposite of extract().
In that case it is possible that a delayed response to a request made by a previous script  invocation comes back on this socket and is mistaken for response to request made with same ID during this request.
In the case of "INSERT ...
In the event it is not, print a nice error message indicating that this script will not run without it.
In the event the format is specified, the return value will be an array, content of which is dependent on the format.
In the examples above, we can change them to:    Now the first statement will return "foo" and the second statement will return a count of the "foo" collection.
In the returned locale id, the subtag is ordered by suffix resulting in variant0 followed by variant1 followed by variant2 and so on.
In these cases, you can use the clearstatcache() function to clear the information that PHP caches about a file.
In this aspect the behaviour is opposite to the behaviour of array_diff_assoc() which uses internal function for comparison.
In this case it doesn't so the file should be written in the current dir.
In this case we should not override it from the param.
In this case you can use an anonymous function to declare the callback within the call to preg_replace_callback().
In this case, getimagesize() returns the values for the first codestream it encounters in the root of the file.
In this case, the SOAP method will return a special SoapFault object which encapsulates the fault details (faultcode, faultstring, faultactor and faultdetails).
In this case, the return value is FALSE but width and height are set.
In this case, the value for "bits" is the highest bit depth encountered.
In this test, genThrow*Catch() run at the same stack depth as genFoo().
In this way, the archive will be up-to-date with the activity performed on it.
In words: when the string representation is the same.
IncDecProp: use __get
IncDecProp: use __set and __get
Include Circle.inc to get at the Circle class type, which in turn uses the Point type
Include a file that has a return statement with a return value
Include a file that has a return statement without a return value
Include a file that has no return statement
Include all PHP files in a directory
Include an existing file
Include an existing file that has its own namespace
Include an existing file.
Include another existing file that has its own namespace
Include microbenchmark code
Incorrect capitalization is intentional
Incorrect flag
Increase memory_limit if it is lower than 512M
Increases a stored number.
Increment count for this combination
Incrementally parse data into the supplied mime mail resource.
Indent's default is 2 spaces, wordwrap's default is 40 characters.
Indexes of this array are not filter IDs, they can be obtained with filter_id() from a name instead.
Indicates whether attribute in namespace namespaceURI named localName exists as a member of the element.
Indicates whether attribute named name exists as a member of the element.
Indicates whether the `Awaitable` associated with this wrapper exited abnormally via an exception of somoe sort.
Indicates whether the `Awaitable` associated with this wrapper exited normally.
Indicates whether this text node contains whitespace.
Individual values are accessed by integer index in the array.
Inexistent table
Information provided includes the number of pool connections that were created and destroyed, how many connections were requested, and how many times the pool was hit or missed when creating the connection.
Inheritance test.
Inherited to test behaviour of usort()
Init optional values to default values
Initial file pointer position, expected at the beginning of the file
Initial letter exceptions
Initial position of file pointer
Initial preparation
Initial stat values
Initial value is U_ZERO_ERROR.
Initialise all required variables
Initialise all required variables Initialising different format strings
Initialise all required variables set up mailbox with one message
Initialise arguments
Initialise function argument
Initialise function arguments
Initialise function arguments not being substititued (if any)
Initialise function arguments not being substituted
Initialise function arguments not being substituted (if any)
Initialise function arguments not being substituted (if any) create temporary directory for test, removed in CLEAN section
Initialise function arguments not being substituted (if any) get an unset variable
Initialise function arguments not being substituted Some of the parameters actually passed to charset will request to use a default charset determined by the platform.
Initialise function arguments not being substituted get an unset variable
Initialise required variables
Initialise the 'input' and 'num_req' variables
Initialise the additional argument
Initialise the array
Initialise the array with integers
Initialise the array with strings
Initialise the arrays
Initialise the associative array
Initialise the variables
Initialise variables
Initialised session_id behaviour.
Initialising different format strings
Initialising variables
Initialize 'array_arg'
Initialize a cURL session using a pooled curl handle.
Initialize all required variables
Initialize array
Initialize classes
Initialize function arguments not being substituted (if any)
Initialize key_comp_func of type callback
Initialize required variables
Initialize variables
Initializing required variables
Initializing required variables heredoc string as str
Initializing required variables heredoc string for 'str' argument
Initializing the 2-d arrays
Initializing variables
Initiate a connection to address using the socket resource socket, which must be a valid socket resource created with socket_create().
Initiate a nonblocking query on a given connection.
Initiate an asynchronous (non-blocking) connection to the specified MySQL server.
Initiates a new OAuthProvider object.
Initiates a stream or datagram connection to the destination specified by remote_socket.
Inline Mapping Take out strings sequences and mappings
Inlining something which calls a function inside a generator doesn't work.
Inner Iterators
Insert additional methods here
Insert binary to DB
Insert fails, LAST_INSERT_ID shall not change, API shall return 0
Insert header
Insert new node with a unique key.
Insert the original right child as the right child of the new root.
Insert using named parameters
Insert using question mark placeholders
Insert via string to make sure the real floating number gets to the DB
Inserts a node into the tree with the specified key and value if the tree does not already contain a node with the specified key.
Inserts string data at position offset.
Inside a case the id is still stable
Inside a function
Inside the stub of an archive, function Phar::running() returns "".
Install if not already installed using the properties set above.
Install phpunit from composer.json located in __DIR__
Instance Methods
Instances of the MongoId class fulfill the role that autoincrementing does in a relational database: to provide a unique key if the data does not natually have one.
Instances of this class are used to interact with a database.
Instantiate a `WrappedException`.
Instantiate a `WrappedResult`.
Instead get the default
Instead it must be implemented by either IteratorAggregate or Iterator.
Instead of hashing on the actual key for the item, we hash on the server key when deciding which memcached server to talk to.
Instead of using this function to set the default timezone in your script, you can also use the INI setting date.timezone to set the default timezone.
Instead, a PharFileInfo object is initialized by calling Phar::offsetGet() through array access.
Instead, it will always use the class of the object as its scope.
Instead, use the is_* functions.
Instead, you need to actually understand the problem and determine the most appropriate solution.
Instructs this Map to grow its capacity to accommodate the given number of elements.
Instructs this Set to grow its capacity to accommodate the given number of elements.
Instructs this Vector to grow its capacity to accommodate the given number of elements.
Int array with default keys
Int, string, etc
Int-like strings end up with numerical array keys.
Integer Operations
Integer data
Integer is handles as an octal representation, so nothing to match
Integer type variations
Intended to be set by the benchmark driver.
Intentional difference to PHP5: PHP5 just creates an empty file.
Intentionally kill internet access
Intercept __call
Intercept a function
Intercept non-static method
Intercept static method
Interface cannot contain a type constant that is partially abstract
Interface doc comment
Internal (built-in) classes that implement this interface can be used in a foreach construct and do not need to implement IteratorAggregate or Iterator.
Internal data structures should be the same in both cases.
Internal helper function for load()/loadXML()
Internal helper function for loadHTMLFile()/loadHTML()
Internal macro MYSQL_REPORT_ERROR
Internal macro MYSQL_REPORT_STMT_ERROR
Internal only: Creates an encoding match.
Internal use constants for var arg parsing
Invalid Argument  This can be caused by attempting to connect to a machine that is up but that the database isn't actually running on.
Invalid DN syntax
Invalid Number of Arguments
Invalid Number of arguments
Invalid Parameter
Invalid Parameters
Invalid arg for multiplier
Invalid args
Invalid arguments
Invalid arguments (zpp failure)
Invalid array of locales
Invalid attribute
Invalid attributes
Invalid because T can be overridden to accept only int,.
Invalid characters may be substituted NULL (no output), string or integer value (Unicode character code value).
Invalid class method
Invalid class name
Invalid construction: shape field names may not be empty
Invalid construction: shape field names may not start with numbers
Invalid data lengths
Invalid declaration: shape key names may not be empty.
Invalid declaration: shape key names may not start with numbers
Invalid directory
Invalid dirnames
Invalid filenames
Invalid mode Argument
Invalid multi-byte character - invalid first byte
Invalid multi-byte character - missing first byte
Invalid multi-byte character - missing last byte
Invalid multi-byte character - surrogate pair code point
Invalid name
Invalid no.of arguments
Invalid number of args
Invalid object method
Invalid options
Invalid parameter count
Invalid parameters
Invalid password
Invalid second argument ( only 0-6 is valid)
Invalid sequence
Invalid string data
Invalid types
Invalid user
Invalid valid format character does not raise warnings.
Invalid word sizes
Invalid, different (higher) cost
Invalid, different (lower) cost
Invokes a user handler upon calling a function or a class method.
Invoking __toString explicitly covers different code.
Isn't this much nicer:
It accepts either a single entry name or an array of names.
It acts as though the request's globals should be snapshotted now.
It advances the internal array pointer one place forward before returning the element value.
It allows to display number according to the localized format or given pattern or set of rules, and to parse strings into numbers according to the above patterns.
It allows users to display dates in a localized format or to parse strings  into PHP date values using pattern strings and/or canned patterns.
It allows users to display dates in a localized format or to parse strings into PHP date values using pattern strings and/or canned patterns.
It also checks for collisions with existing variables in the symbol table.
It also contains a unique _id field, which can be used to query the chunks collection for the file's content.
It also doesn't affect PHP's userspace output buffering mechanism.
It also indicates if a cryptographically strong algorithm was used to produce the pseudo-random bytes, and does this via the optional crypto_strong parameter.
It also only uses the first eight characters of str, so longer strings that start with the same eight characters will generate the same result (when the same salt is used).
It became optional in PHP 5.
It calls MongoClient::getHosts() (to refresh the status of hosts) and Mongo::getSlave() (to get the return value).
It calls the function you registered with invariant_callback_register and then throws an InvariantException
It can also be NULL, in which case ICU's default date type will be used.
It can also be NULL, in which case ICU's default time type will be used.
It can also be the path to a PEM encoded CSR when specified as file://path/to/csr or an exported string generated by openssl_csr_export().
It can also include a port number.
It can be also used to store secure data in database.
It can be either a string or an array with strings.
It can be one of MB_CASE_UPPER, MB_CASE_LOWER, or MB_CASE_TITLE.
It can be one of the following values:  Valid options    Name Description MYSQLI_OPT_CONNECT_TIMEOUT connection timeout in seconds (supported on Windows with TCP/IP since PHP 5.3.1)   MYSQLI_OPT_LOCAL_INFILE enable/disable use of LOAD LOCAL INFILE   MYSQLI_INIT_COMMAND command to execute after when connecting to MySQL server MYSQLI_READ_DEFAULT_FILE  Read options from named option file instead of my.cnf    MYSQLI_READ_DEFAULT_GROUP  Read options from the named group from my.cnf or the file specified with MYSQL_READ_DEFAULT_FILE.
It can be one of the following: LDAP_DEREF_NEVER - (default) aliases are never dereferenced.
It can be the field's offset, the field's name, or the field's table dot field name (tablename.fieldname).
It composes from PATHINFO_DIRNAME, PATHINFO_BASENAME, PATHINFO_EXTENSION and PATHINFO_FILENAME.
It converts special HTML entities back to characters.
It currently supports a very limited subsection of the YAML spec.
It defaults to 0, but you may specify one or more of the following values (by adding or ORing them together).
It defaults to return all elements.
It does not matter if a value has leading white space or not.
It does not mean that the key of the first related value from the unsorted array will be kept.
It does not move the pointer in any way.
It does not require a token.
It does not return position of latter string.
It does not support alpha components.
It does not.
It doesn't have children.
It effectively creates a queue of autoload functions, and runs through each of them in the order they are defined.
It forces a database error to occur.
It gets data returned from the system call.
It had to do with variable renaming, and this test doesn't exercise much beyond that
It has been removed in the meantime, but should be added back in when HHVM adds support for this feature.
It has children.
It hinges on invoking the user error handler (i.e. reentering the VM) from one of the jit's array helpers, which are directly called into from jitted code.
It inserts end every chunklen characters.
It is OK if both servers are working at the same time.
It is a read-only method: it does not change anything about the internal state of the object.
It is also possible to add LOCK_NB as a bitmask to one of the above operations if you don't want flock() to block while locking.
It is also used if an invalid sort_flag value has been specified.
It is also useful for reading status information provided by those programs on auxiliary file descriptors.
It is an error to call this method if no transaction is active.
It is being run like this, for example, from the test root directory:
It is better not to use ASCII strings for keys.
It is called automatically by the driver and should not need to be used.
It is either an array, or a comma separated enumerated list.
It is equivalent to running:
It is equivalent to the function:
It is guaranteed to have all of the fields in the skeleton.
It is identical to running:  See MongoDB::command() for more information about database commands.
It is identical to the function:
It is important to note that just because the mail was accepted for delivery, it does NOT mean the mail will actually reach the intended destination.
It is important to understand that most classes that do not implement Iterators have reasons as most likely they do not allow the full Iterator feature set.
It is interesting to note that this is the option that is set when you call `AsyncMysqlClient::setPoolsConnectionLimit()`.
It is invoked with 2 params when used as an OB callback.
It is merely the "largest" thing that can be inserted into the database.
It is merely the "smallest" thing that can be inserted into the database.
It is mostly deprecated.
It is much better to specify a timeout value of a few seconds, although if you need to be checking and running other code concurrently, using a timeout value of at least 200000 microseconds will help reduce the CPU usage of your script.
It is not consistent with the normal constructor handling, but here we have a chance to be more strict for the new traits.
It is not necessarily a bug if API and SQL function return different values.
It is not processed so multipart stuff must be prepared before calling this (or add it to class)
It is ok to make this a string, since this clause is terminal
It is only checked under certain circumstances.
It is only useful if you're doing something weird, such as writing your own driver on top of the PHP driver.
It is perfectly valid for socket_write() to return zero which means no bytes have been written.
It is possible that exif_thumbnail() cannot create an image but can determine its size.
It is possible that this really is idx(), but you can only make that determination after understanding the context of the error.
It is possible to add most 1048576 elements at a time.
It is possible to define resource constants, however it is not recommended and may cause unpredictable behavior.
It is possible to format 64-bit number on 32-bit machine by passing it as double and using TYPE_INT64.
It is recommended to use the mhash functions to create a key from a string.
It is similar to imap_status(), but will additionally sum up the size of all messages in the mailbox, which will take some additional time to execute.
It is stable.
It is undefined if the server replies to the query and how.
It is used in a binary safe mode.
It is used with the -c option on server-tests.php.
It is useful if you disabled register_globals, but would like to see some variables in the global scope.
It is useful to prevent so-called "Invalid Encoding Attack".
It is useful when setting the correct Return-Path header when using sendmail.
It is usually best to simply produce a truecolor output image instead, which guarantees the highest output quality.
It makes life easier for differential and phabricator.
It makes the query a subobject (if it isn't already) and adds the key/value pair of your choosing to the top level.
It may be needed if the client is behind firewall.
It may one or a combination of the following constants: IMAP_GC_ELT (message cache elements), IMAP_GC_ENV (enveloppe and bodies), IMAP_GC_TEXTS (texts).
It must be a valid UTF-8 string.
It must be url encoded....
It must be valid and must point to a file successfully opened by bzopen().
It must be valid, and must point to a file successfully opened by gzopen().
It must consist of a single SQL statement.
It must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.
It must return an integer less than, equal to, or greater than zero if the first key is considered to be respectively less than, equal to, or greater than the second.
It needs to be random and unique (but not secret).
It omits magic names (e.g. anything that starts with two underscores but no more).
It only works with the E_USER family of constants, and will default to E_USER_NOTICE.
It outputs a warning if the offset plus the length is greater than the haystack length.
It parses URL encoded data, detects encoding, converts coding to internal encoding and set values to the result array or global variables.
It performs basic operations such as insertion, look-up and removal in O(log(n)) amortized time.
It performs the modification at the attribute level as opposed to the object level.
It resets the database error tracker (which can be incremented with MongoDB::forceError(), also not normally used).
It returns FALSE if you call it before calling mysqli_fetch_row/array/object or after retrieving all rows in the result.
It returns FALSE on error.
It returns an array of two elements, the first being a boolean specifying whether or not the function was invoked, the latter being the return value, or null if it was not invoked.
It returns an associative array containing the data returned from the system call.
It returns exactly what the system setlocale function returns.
It returns field definition as array.
It returns the resulting array.
It returns the status of all of the hosts in the set.
It returns true if the element is even number else returns false
It seems the second argument passing is not being correclty checked.
It shall prevent any further error messages.
It should *not* change the timezone if the input implies it.
It should also not be automatically converted to a non-static instance when attempting to bind one
It should be either "B" (Base64) or "Q" (Quoted-Printable).
It shows what would happen if  the fatal error would have been a warning.
It subtracts string from str that is shorter than length AND character that is not part of multi-byte string or not being middle of shift sequence.
It takes a kind ('class', 'function' or 'constant') and the name of the entity we're trying to autoload.
It takes a raw string query that will be executed as-is.
It takes on either a bitmask, or named constants.
It takes on one of three constants with the default being ENT_COMPAT: Available quote_style constants Constant Name Description ENT_COMPAT Will convert double-quotes and leave single-quotes alone.
It tests session support.
It throws an exception upon access.
It uses the same tag stripping state machine as the fgetss() function.
It was created as a simpler approach for appending an XML DocumentFragment in a DOMDocument.
It will also override Mongo::setSlaveOkay(), MongoDB::setSlaveOkay() and MongoCollection::setSlaveOkay().
It will give a warning closure call time.
It will not be executed after foreach loops.
It will only reject simple variables that are not strings, or an array that does not have a valid structure to be used as a callback.
It will probably stop testing that if we start running weaken_decrefs before load elimination.
It will provide the SQL query in use, the number of parameters used (Params), the list of parameters, with their name, type (paramtype) as an integer, their key name or position, the value, and the position in the query (if this is supported by the PDO driver, otherwise, it will be -1).
It will remove any corrupt data and compact and large stretches of free space it finds.
It will remove any existing keys that may have been assigned, rather than just reordering the keys.
It will return the previous value.
It will use memory mapping techniques if supported by your OS to enhance performance.
It works by making use of an integer index which is incremented within the range 0 - containersize.
It works only with a server that exports functions from a class with SoapServer::setClass() or SoapServer::setObject().
It works only with truecolor images.
It works using a direct blend operation.
It wouldn't be if C directly implemented A
It's a bit weird
It's a constant and can take the following values: MYSQL_ASSOC, MYSQL_NUM, and MYSQL_BOTH.
It's a deprecated function, but we have not announce the removal so far, therefore we need to check for it
It's a key/value pair most likely If the key is in double quotes pull it out
It's a sequence
It's a weak check but unless it gets bad it's a useful thing to check.
It's a wrapper function for mail(), so see also mail() for details.
It's configured using the ReflectionProperty constants, and defaults to all property types.
It's critical the read on the stream returns the input but doesn't set EOF flag the first time.
It's illegal to call next() while the previously returned Awaitable has not finished yet.
It's impossible to preserve the previous scope when doing so would break the invariants that, for non-static closures, having a scope is equivalent to having a bound instance.
It's in manpage format, so you'll want to do something along the lines of man /usr/local/src/regex/regex.7 in order to read it.
It's limited to 1024 bytes in length.
It's more accurate than soundex() as it knows the basic rules of English pronunciation.
It's possible to iterate over shape-like array and it behaves as map-like array - usage that should report errors.
It's possible to iterate over shape-like array and it behaves as map-like array - usage with no errors.
It's possible to iterate over tuple-like array and it behaves as vec-like array - usage that should report errors.
It's possible to iterate over tuple-like array and it behaves as vec-like array - usage with no errors.
It's rare for this to be FALSE, but some systems may be broken or old.
It's server field will show which server the query was sent to.
It's unusual and should be reported to maintainers with any system information and steps to reproduce that you can provide.
It's used when the message_type parameter is set to 1.
It's worth noting that mysql_query() only returns a resource for SELECT, SHOW, EXPLAIN, and DESCRIBE queries.
Items from this parameter are returned unmodified as the result set of actionable entries.
Iterate over different date and time
Iterate over recent msgs to find the one we sent above
Iterates over the edges in the heap graph.
Iterates over the nodes in the heap graph.
Iterates over the roots in the heap graph.
Iteratively call a handler function with blocks of contiguous character types.
Its meaning depends on the message_type parameter as described above.
Its not an int like documented but a string - maybe for BC reasons...
Its only about malloc() vs.
Its operation is equivalent to that of the socket_select() function except in that it acts on streams.
JIS Note: either convert_encoding or strlen has problem
JIS Using Detect Order
JIS Using Encoding List Array
JIS string (BASE64 encoded)
Japanese (EUC-JP)
Japanese characters only - should not be any conversion
Japanese name with mixed kanji and hiragana
Japanese regex in UTF-8
Japanese string encoded in UTF-8
Japanese string in UTF-8
Japanese string in UTF-8 with repeated needles
Jenkins updates the results using `arc call-conduit differential.updateunitresults` call.
Join container elements with a glue string.
Just make sure that you call ob_end_flush() the appropriate number of times.
Just print out pertinent error information.
Just skip over the test names or test file.
KOI8-R koi8-ru, koi8r Russian.
Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often 'nobody').
Keep track of all declared benchmark suites.
Key 12 is unaccessible
Key features:  - Autodownload of frameworks, so we don't have to add 3 GB of frameworks to our official repo.
Keys and elements are compared by user supplied functions.
Keys are cache-unique, so attempting to use apc_add() to store data with a key that already exists will not overwrite the existing data, and will instead return FALSE.
Keys are cache-unique, so storing a second value with the same key will overwrite the original value.
Keys are compared by user supplied function.
Keys are used to do more restrictive check  Source code: ext/standard/array.c
Keys are used to do more restrictive check Source code: ext/standard/array.c
Keys are used to do more restrictive check.
Keys must not be numeric or start with integers.
Kill the persistent connection - don't use mysqli_kill, mysqlnd will catch that...
Killing connection - 1
Killing connection - 2
Killing connection - 3
KindOfUninit should not pass type hint.
L - line numbers
LAST_INSERT_ID should be reset
LDAP_DEREF_ALWAYS - aliases should be dereferenced always.
LDAP_DEREF_FINDING - aliases should be dereferenced when locating the base object but not during the search.
LDAP_DEREF_SEARCHING - aliases should be dereferenced during the search but not when locating the base object of the search.
LDAP_SCOPE_ONELEVEL means that the search should only return information that is at the level immediately below the base_dn given in the call.
LOAD DATA INFILE Syntax
LOADING FUNCTIONS
LOCKS should be removed
LOCK_EX Acquire an exclusive lock on the file while proceeding to the writing.
LOCK_EX to acquire an exclusive lock (writer).
LOCK_NB to not block while locking (not supported on Windows).
LOCK_UN to release a lock (shared or exclusive).
Label column, result set charset.
Labels are defined in the executor itself, so we call it with execute_data NULL and it sets zend_opcode_handlers array
Language and its setting is ISO-2022-JP/Base64 for Japanese, UTF-8/Base64 for uni, ISO-8859-1/quoted printable for English.
Language tags (and thus locale identifiers) are case insensitive.
Language-Region-Variant
Language-Region:
Language-Script-Region
Language-Script-Region-Variant
Language-Variant
Last time a successful activity was made in the current connection, in seconds since epoch.
Last, as it should fatal
Lastly, test the newly added format parameter
Lastly, the 'alias' field (given by itself), will map calls from one function directly to another.
Launches a new instance of scheduler to drive asynchronous execution until the provided Awaitable is finished.
Leading whitespace should be ignored
Leap years are taken into consideration.
Leave explicit unix:// socket as is
Length should be 1
Length should be 1  /* check all the scalar types for substitution
Length should be 2  /* double-quote string literals
Less number of arguments than expected
Less than expected arguments
Less than expected number of arguments
Less than the expected number of arguments
Let it go Confirm that we can't deserialize one of these as well.
Let the process pid join the process group pgid.
Let's assume that is not going to be an issue in the real world, and make it a simple check and throw instead.
Let's do a PEAR-less pear setup
Let's just really make sure the dependencies didn't get installed by checking the vendor directories to see if they are empty.
Let's see if we have privileges for CREATE DATABASE
Let's try some terrible locales to ensure they fail
Let's try with just one element in the array
Lets accept also int if it follows the rules from the original MYSQL C API
Lets pass a dead connection
Lets test the chr(0) handling in case the streaming has failed: is the bug about chr(0) or the streaming...
Lets try again, setting the filename rather than format This should cause PNG image to be written
Libxml 2.6.24 and up adds a new line after a processing instruction (PI)
Like all objects in PHP, Maps have reference-like semantics.
Like all objects in PHP, Sets have reference-like semantics.
Like all objects in PHP, Vectors have reference-like semantics.
Like all objects in PHP, `Pair`s have reference-like semantics.
Like an actual test name, do nothing.
Like any "latent cursor", the cursor may become invalid at some point -- for example if that final object it references were deleted.
Like mktime(), arguments may be left out in order from right to left, with any omitted arguments being set to the current corresponding GMT value.
Likewise, writes will always appear to succeed
Limit characters that are acceptable in identifiers being checked to those normally used with the languages associated with the specified locales.
Limit the server to 1 thread only to ensure that both requests are served by the same thread
Line below should throw a warning as no args are expected
Lines should not be larger than 70 characters.
Link right.
List of possible limits returned Limit name Limit description core The maximum size of the core file.
List of preconditions.
List syntax
Lists all output handlers in use.
Lists columns and associated privileges for the given table
Lists only leaves in iteration.
Lists tables and the privileges associated with each table
Lists the column names in specified tables
LlNV test 32-bit ints specifically
Load APP info from jpeg
Load YAML into a PHP array statically  The load method, when supplied with a YAML stream (string or file), will do its best to convert YAML in a file into a PHP array.
Load a string of YAML into a PHP array statically  The load method, when supplied with a YAML string, will do its best to convert YAML in a string into a PHP array.
Load a valid YAML file to Spyc.
Load a valid YAML string to Spyc.
Load definition file
Load from file
Load results.
Load skeleton file
Load the sections of the test file.
Loads an XML document from a file.
Loads an XML document from a string.
Loads the PHP extension given by the parameter library.
Loads the given class or interface.
Locale-related constants.
Locales are identified using RFC 4646 language tags (which use hyphen, not underscore) in addition to the more traditional underscore-using identifiers.
Locales cannot be instantiated as objects.
Localized patterns are not currently supported.
Localized software products often require sets of data that are to be customized depending on current locale, e.g.: messages, labels, formatting patterns.
Location for overloaded data.
Locks acquired with GET_LOCK() are released.
Logging can be used to get detailed information about what the driver is doing.
Logging is turned off, by default.
Logs in to the given FTP stream.
Long-style arguments.
Longer test case from http://www.schneier.com/code/vectors.txt
Look for globally installed cpplint.py
Look for method '' in class 'Foo'
Look for method 'method' in class 'Foo'
Looks up a message in the current domain.
Loop from third fruit until the end Note: offset starts from zero for apple
Loop over first three fruits only
Loop through each element of values for 'str'
Loop through file content array
Loop through to test each element in the above array
Loop to check for above arrays with var_export()
Loop to check for above boolean values with var_export()
Loop to check for above float values with var_export()
Loop to check for above integer values with var_export()
Loop to check for above null values with var_export()
Loop to check for above objects with var_export()
Loop to check for above strings with var_export()
Loop to test normal functionality with different arrays inputs
Loop until we read all the bytes we expected or we hit an error.
LooseModeCollections from HHJsonDecodeTest.phpi Single-quoted strings
Lots of nesting here.
Lower case columns
Lower numbers indicate greater priority.
Lowercase, convert namespace separators to path separators
Luckily, I was able to move those tests to use TestFindModes::TOKEN.
M (bridge) not touching bottom boundary
MD5 Message-Digest Algorithm, and returns that hash.
MSG_DONTROUTE Bypass routing, use direct interface.
MSG_DONTWAIT With this flag set, the function returns even if it would normally have blocked.
MSG_EOF Close the sender side of the socket and include an appropriate notification of this at the end of the sent data.
MSG_EOR Indicate a record mark.
MSG_EXCEPT Using this flag in combination with a desiredmsgtype greater than 0 will cause the function to receive the first message that is not equal to desiredmsgtype.
MSG_NOERROR If the message is longer than maxsize, setting this flag will truncate the message to maxsize and will not signal an error.
MSG_PEEK Receive data from the beginning of the receive queue without removing it from the queue.
MSG_WAITALL Block until at least len are received.
MX  pri: Priority of mail exchanger.
MYSQLI_BINCMP_FLAG
MYSQLI_CLIENT_INTERACTIVE  Allow interactive_timeout seconds (instead of wait_timeout seconds) of inactivity before closing the connection    MYSQLI_CLIENT_SSL Use SSL (encryption)       For security reasons the MULTI_STATEMENT flag is not supported in PHP.
MYSQLI_CLIENT_INTERACTIVE  Allow interactive_timeout seconds (instead of wait_timeout seconds) of inactivity before closing the connection MYSQLI_CLIENT_SSL Use SSL (encryption)       For security reasons the MULTI_STATEMENT flag is not supported in PHP.
MYSQLI_SERVER_PUBLIC_KEY  RSA public key file used with the SHA-256 based authentication.
MYSQLI_STMT_ATTR_CURSOR_TYPE  Type of cursor to open for statement when mysqli_stmt_execute() is invoked.
MYSQLI_STMT_ATTR_PREFETCH_ROWS
MYSQLI_STMT_ATTR_PREFETCH_ROWS Number of rows to fetch from server at a time when using a cursor.
MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH
Machine-Dependent
Mailbox names that contain international characters besides those in the printable ASCII space have to be encoded width imap_utf7_encode().
Main code for test case generation
Make a reasonable-sized test string
Make a string's first character uppercase
Make new wait handles with valid values.
Make sure all valid ascii chars round trip
Make sure array to container fast-paths properly account for refs in the arrays.
Make sure it doesn't change the shared value.
Make sure list() assign still works even though new Vector() produces a dependent type
Make sure that attribute names with colons work fine
Make sure that client, connection and result charsets are all the same.
Make sure that the function alias exists
Make sure that we can tell which class was called for intercepted static methods
Make sure that we don't attempt to set the current character set to make this case useful
Make sure that we find a fixed point on the FPIKind correctly.
Make sure that you've started the database server before connecting.
Make sure the database is still up and the network is okay.
Make sure the hash is destroyed automatically when the request ends.
Make sure the next line triggers COW
Make sure the weird trait importation syntax works when interleaved with normal XHP attribute declarations
Make sure things cleanup when curl_multi_await is abandoned
Make sure this backtracking handles line numbers correctly.
Make sure this function shows up in a backtrace
Make sure we don't just return '/tmp' or other easily-guessable location.
Make sure we got clone right
Make sure we raise a type error for the nonexistent method access in the lambda below
Make sure we're tolerant of code that swallows typehint failures.
Make sure you are aware of PHP's string syntax to know exactly how the interpreted string will look.
Make sure you consider this before running a long script.
Make the background transparent
Make the background white
Make the current process a session leader.
Make the output pretty with DOMDocument
Make them equal for the check
Makes a copy of the file source to dest.
Makes a copy of up to maxlength bytes of data from the current position (or from the offset position, if specified) in source to dest.
Makes all function names reserved words.
Makes the colors of the palette version of an image more closely match the true color version.
Makes the script sleep until the specified timestamp.
Manages an OAuth provider class.
Manually checkout release appropriate system branch See: https://github.com/kohana/kohana/wiki/developers
Many FTP servers do not support this command.
Map is an ordered dictionary-style collection.
Maps checks from HHJsonDecodeTest.php
Maps do not have "copy-on-write" semantics.
Maps do not support iterating while new keys are being added or elements are being removed.
Maps do not support taking elements by reference.
Maps only support integer keys and string keys.
Maps preserve insertion order of key/value pairs.
Maps the specified character to a "mirror-image" character.
Maps the specified character to its paired bracket character.
Mark the input variable with the given mark.
Marks messages listed in msg_number for deletion.
Match *.py and contbuild config files
Match expected
Match the beginning of a section.
Matches: E .
Maximum 100 items allowed.
May be any one of the following: DNS_A, DNS_CNAME, DNS_HINFO, DNS_MX, DNS_NS, DNS_PTR, DNS_SOA, DNS_TXT, DNS_AAAA, DNS_SRV, DNS_NAPTR, DNS_A6, DNS_ALL or DNS_ANY.
May be one of file, link, or dir
May have this if we reached the end of the file or if something wasn't printed out in optimized mode that may have been printed out in debug mode
May try spl_autoload_register() to workaround some clowniness, if possible.
Maybe we are in OSS land trying this script
Maybe we've provoked an index message, maybe not.
Meanwhile do not rely on it.
Measures and reports on the relative cost of basic HHVM operations.
Mediawiki and others are clowntown when it comes to autoloading stuff for reflection.
Memcache will return false if the session key doesn't exist so we return true no matter the result (matches redis module)
Memcache::add() stores variable var with key only if such key doesn't exist at the server yet.
Memcache::addServer() adds a server to the connection pool.
Memcache::close() closes connection to memcached server.
Memcache::connect() establishes a connection to the memcached server.
Memcache::decrement() decrements value of the item by value.
Memcache::decrement() does not create an item if it didn't exist.
Memcache::delete() deletes item with the key.
Memcache::flush() doesn't actually free any resources, it only marks all the items as expired, so occupied memory will be overwritten by new items.
Memcache::flush() immediately invalidates all existing items.
Memcache::get() returns previously stored data if an item with such key exists on the server at this moment.
Memcache::getExtendedStats() returns a two-dimensional associative array with server statistics.
Memcache::getServerStatus() returns a the servers online/offline status.
Memcache::getStats() returns an associative array with server's statistics.
Memcache::getVersion() returns a string with server's version number.
Memcache::increment() does not create an item if it doesn't already exist.
Memcache::increment() increments value of an item by the specified value.
Memcache::pconnect() is similar to Memcache::connect() with the difference, that the connection it establishes is persistent.
Memcache::replace() should be used to replace value of existing item with key.
Memcache::set() stores an item var with key on the memcached server.
Memcache::setCompressThreshold() enables automatic compression of large values.
Memcache::setServerParams() changes server parameters at runtime.
Memcached::quit() closes any open connections to the memcache servers.
Memory info
Memory leak
Merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one.
Message Format provides for runtime formatting of messages in a manner somewhat similar to sprintf.
Message formatter class.
MessageFormatter is a concrete class that enables users to produce concatenated, language-neutral messages.
MessageFormatter takes a set of objects, formats them, and then inserts the formatted strings into the pattern at the appropriate places.
Messages marked for deletion will stay in the mailbox until either imap_expunge() is called or imap_close() is called with the optional parameter CL_EXPUNGE.
Meta-data can be any PHP variable that can be serialized.
Meta-data can significantly slow down the performance of loading a phar archive if the data is large, or if there are many files containing meta-data.
Method A::bla()
Method call on non-object using FPushObjMethod
Method call on non-object using FPushObjMethodD
Method names are case insensitive
Methods that cane be implemented across all containers in one place.
Methods that cane be implemented across all mutable containers in one place.
Might have been sent a Ctrl-c while waiting for the response.
Minimum and maximum PHP values
Miscellaneous input
Miscellenous input check
Misses here seem to be a huge slowdown, causing problems with fbmake timeouts.
Missing parameter
Mixed float array
Mixed keys - numeric/string
Mixed string
Mixed types
Mixed values
Mixed, explicit override.
Mixing constant strings and class constants, or class constants from different classes doesn't produce shape-like arrays.
Mockery tries stubbing out part of Mongo, which we have in Zend compat, but it's not at a usable state yet.'
Modeled after :x:composable-element
Modification and access time
Modified to test a mix of integers and strings as keys.
Modified to test empty string values.
Modified to test numbers with exponents without a decimal point.
Modified to test unescaped UNICODE as keys and values.
Modify call back using ini_set()
Modify the existing entries in the LDAP directory.
Modify the local copy of an element's value
Modify the the actual element itself
Mofification time only
Mongo has a feature known as tailable cursors which are similar to the Unix "tail -f" command.
MongoCode objects are composed of two parts: a string of code and an optional scope.
MongoCollection::group takes an array, object, or MongoCode key  Code: 7 Wrong type parameter send to MongoCollection::group().
MongoDB::lastError() is usually preferred to this.
MongoDBRef is a good choice for this case, as it is a common format that all of the drivers and the database understand.
MongoIds are serializable/unserializable.
MongoLog::setLevel() constants
MongoLog::setModule() constants
MongoMaxKey has no associated fields, methods, or constants.
MongoMaxKey is a special type used by the database that evaluates to greater than any other type.
MongoMinKey has no associated fields, methods, or constants.
MongoMinKey is a special type used by the database that evaluates to less than any other type.
MongoTimestamp is 4 bytes of timestamp (seconds since the epoch) and 4 bytes of increment.
MongoTimestamp is used by sharding.
Montag der 28ten Woche 2010
Month and weekday names and other language dependent strings respect the current locale set with setlocale() (LC_TIME).
Month and weekday names and other language dependent strings respect the current locale set with setlocale().
Month and weekday names and other language-dependent strings respect the current locale set with setlocale().
More complex SetM with array base on the stack, then with a ref
More efficient lookups than array_search
More number of arguments than expected
More than  expected number of arguments
More than expected arguments
More than expected no.
More than expected number of args
More than expected number of arguments
More than valid no.
More than valid number of arguments
More than valid number of arguments ( valid is 2)
More than valid number of arguments i.e. 3 args
More unusually, they can be saved to the database and retrieved.
Most European countries used the Julian calendar prior to the Gregorian.
Most of the time there is only one row block per query result since the query was never interrupted or otherwise deterred by some outside condition like exceeding network packet parameters.
Most offsets tested in strtotime-relative.phpt.
Most parameters are input parameters, that is, parameters that are used in a read-only fashion to build up the query.
Motivation: Suppose we need to refer to a document in another collection.
Move all attached Iterator instances forward.
Move forward to next element.
Move this iterator back to the first position.
Moves mail messages specified by msglist to the specified mailbox.
Moves the node with the given key to the top of the tree.
Multi-byte characters are usually twice the width of single byte characters.
Multibyte characters may be used in pattern.
Multibyte characters may be used.
Multibyte string was not returning error message until offset was passed the byte count of the string.
Multiple elements with the same priority will get dequeued in no particular order.
Multiple recipients may be specified by putting a comma between each address in to.
Multiple sessions serialized in the same session file.
Must be a constant string.
Must be a positive integer.
Must be between zero and the total number of rows minus one (0..mysqli_num_rows() - 1).
Must be derived from SPLFileObject.
Must be derived from SplFileInfo.
Must be empty or one of: '.
Must be greater than or equal to zero.
Must be greater than zero.
Must be in the format: '.
Must be pass
Must be valid UTF-8.
Must match CPU's ABI definition for SIMD usage
Must match kMaxBuiltinArgs
Mutually exclusive with FILE_APPEND.
Mutually exclusive with LOCK_EX since appends are atomic and thus there is no reason to lock.
My Doc  Comment  for A
My Doc Comment for A
My Doc Comment for A::f
My Doc Comment for A::finalStatPubf
My Doc Comment for A::privf
My Doc Comment for A::protStatf
My Doc Comment for B::protStatf
My DocComment for B
My templated class
MyISAM engine should be part of _every_ MySQL today
MySQL Server 4.1 - charset support available
MySQL Server might accept anonymous connections, don't print anything
MySQL server may not support this - ignore errors
MySQL will silently truncate this data if it is inserted into a `utf8` column.
MySQLi Driver.
N.B pi() ignores all specified arguments no error  messages are produced if arguments are spcified.
NB: DateTimeZone class does not define a customized compare class handler so standard object handler will be used
NB: The names need to be all-lowercase to ensure that "someexception" has a lower litstr id than "other" (both original and lowercase versions of the name get put in the litstr table).
NB: The strings passed are *NOT* necessarily encoded in the encoding passed to the function.
NB: These will return false in server mode
NB: basic functionality tested in tests/strings/001.phpt
NOTE - this will cause an error and it OK When using unbuffered prepared statements MySQL expects you to fetch all data from the row before sending new data to the server.
NOTE this test can fail on asm builds of zlib 1.2.5 or  1.2.7 on at least Windows and Darwin.
NOTE to users Behaviour with libmysql is UNDEFINED, see http://news.php.net/php.internals/55210 Because it is undefined it is allowed to the mysqlnd DEVELOPER to implement any behaviour they like, including the one checked for in this test_mysqli_stmt_num_rows_table_1.
NOTE: PDO can call regular methods prior to calling __construct()
NOTE: PDO does not care about private and calls __construct() after __set()
NOTE: PDO does not care about protected
NOTE: PDO will call __set() prior to calling __construct()
NOTE: This will become part of SPL
NOTE: again this test does not test all of the behaviour of the function
NOTE: do not run this directly under a web server, as it will take a very long time to execute.
NOTE: documentation is not clear on this: function always return NULL or TRUE
NOTE: empty string, no multiple insert syntax
NOTE: for BC reasons with ext/mysql, ext/mysqli accepts invalid result modes.
NOTE: no LOAD DATA INFILE test
NOTE: no LOAD DATA INFILE test_mysqli_info_table_1
NOTE: tests is a stub, but function is deprecated, as long as it does not crash when invoking it...
NOTE: this function is deprecated.
NOTE: this will NOT update dbl_ddls counter
NOTE: you cannot use PDO::query() with unbuffered, native PS - see extra test
NS  target: FQDN of the name server which is authoritative for this hostname.
NULL Argument
NULL argument
NULL as Argument
NULL as arg
NULL as argument
NULL as filename
NULL as glue
NULL as linkname
NULL as pieces
NULL by default.
NULL indicates an invalid argument was supplied to the function.
NULL is also returned in case of an error such as an invalid callback.
NULL is returned if no error occurred.
NULL is returned if the json cannot be decoded or if the encoded data is deeper than the recursion limit.
NULL is returned.
NULL may be passed instead, to reset this handler to its default state.
NULL or not there at all
NULL values
Name could be the name of the single test file for a given framework, or the actual framework name if we are running in serial, for example
Named attribute
Named connection pools are initialized via the 'curl.namedPools' ini setting, which is a comma separated list of named pools to create.
Namespace (__SystemLib)
Namespace (global)
Namespace declarations occur inside start tags.
Namespaced Map.
Namespaced Set.
Namespaced classes do not recognize PHP 4 constructors
Namespaced pair.
Namespaced vector.
Native PS Libmysql cannot handle such a stored procedure.
Native version will cause a fatal error
Need to be created every time to get expected return value
Need to manually check since we might do several reads none of which timeout themselves but still not get the response requested
Need to meet the requirement
Needed for pcntl_signal().
Needs 'data type' and argument to vary
Needs to be equal
Negative exp, generates warning
Negative lengths
Negative offset
Negative offset Note: PHP Warning - offset is negative.
Negative offset values will start the search at offset characters from the start of the string.
Negative offsets, the file pointer should be at the end of file  to get data
Negative start
Negative values will stop searching at an arbitrary point prior to the end of the string.
Neither of these options is supported in this implementation, and if provided a fatal error will be thrown.
Neither this nor the persistent parameter has any effect when the extension is loaded dynamically via dl().
Neither with libmysql nor with mysqlnd.
Nested FVs.
Nested anonymous shape
Nested array
Nested collections
Nested namespaced Map.
Nested namespaced pairs.
Nested namespaced vectors.
Nested shape-like arrays preserve element types - usage that should report errors.
Nested shape-like arrays preserve element types - usage with no errors.
Nested shapes don't grow
Nested: relative (containing file path, fail).
Nested: relative from include path.
Never check for a specific error message text, but always use an error number to check.
Never reached
New YAML document
New and all executors with CALL threading model can use the same handler for undefined opcodes, do we emit code for it only once
New expression id
New expression id assigned
New expression id different from everything above
New features and options.
New ids outside of loop
New ids within the loop
New instance of class C - defined below
New item's value will not be less than zero.
New namespace test
New stable id
New strengths may be inserted in the strength hierarchy without disrupting current constraints.
Newlines are considered whitespace, and are removed too:
Newly created files and dirs
No Exception
No argument is required.
No buffering active
No bug, but slightly different behaviour...
No connection yet.
No data fetched so far
No default value, return null.
No error since Foo is an 'as' constraint on a generic
No error to trigger.
No error: we are sure that there is no field 'z' in returned shape
No filename
No first time init
No it's not
No longer accepts negative integers for accessing elements from the end of the array.
No more constraints - mysqlnd and libmysql return different strings at least with mysqli.
No more data
No nodes directly correspond to this class, but other nodes do inherit from it.
No ob_start() executed
No parameters.
No real logic in here to do that, just simple printing.
No replacement shall be made
No server name given.
No tilde expansion or parameter substitution is done.
No user specific information in status.
No vendor directory.
No warnings from normal operation
No way to tell what the optional type is.
No write permissions
No, you cannot fetch the result
No.of args greaer than expected
No.of args greater than expected
No.of args leass than expected
No.of args less than expected
No.of args more than expected
No.of arguments greater than expected
No.of arguments less than expected
Node gets destroyed during removeChild
Node is preserved from removeChild
Non default
Non exhuastive match
Non exhuastive match, but we don't care because no annotation
Non string assert
Non-deterministic tests.
Non-existent filename
Non-existing dir
Non-existing dirs
Non-existing file
Non-existing file or dir
Non-existing file resource
Non-existing.
Non-initialised session_id behaviour.
Non-numeric number causes returning NULL and emitting E_WARNING.
Non-short-circuit.
Non-string salt, checking for memory leaks
Non-zero is returned if auto-commit is on, 0 if it is off, or FALSE if an error occurs.
Nonblocking.
Normal client errors such as adding an existing key will not trigger a failover.
Normal constraints are not input constraints.
Normal operation with hexadecimal output
Normal operation with raw binary output
Normalization is a process that involves transforming characters and sequences of characters into a formally-defined underlying representation.
Normalize author.
Normalize record
Normalize title.
Normalize to avoid calling __autoload twice for undefined classes
Normalizer class.
Normalizer provides access to Unicode normalization of strings.
Normalizes the node.
Normally -1 for types other than floating point decimals.
Normally 0 for types other than floating point decimals.
Normally this means there was an arithmetic error other than under/overflow.
Normally we expect 1 response, but with the break command, we expect 2.
Normally you would use this to make one asynchronous connection to the MySQL client.
Normally, memory is allocated for all of the elements of the `Pair`.
Normally, you will `catch` an `AsyncMysqlException`, but if you want to explictly construct one and, for example, `throw` it for some given reason, then you pass it an `AsyncMysqlErrorResult`.
Normally, you will not instantiate a `WrappedException` directly, but rather have one returned back to you on a call to `wrap()` if the operation failed.
Normally, you will not instantiate a `WrappedResult` directly, but rather have one returned back to you on a call to `wrap()` if the operation succeeded.
Not Changeable
Not a doc comment
Not a magic method, just here for example.
Not a public API
Not a valid compressed string.
Not a valid constraint since T is unbounded type parameter
Not all PDO drivers implement this method (notably PDO_ODBC).
Not all conversion specifiers may be supported by your C library, in which case they will not be supported by PHP's strftime().
Not all drivers support this option, and it's meaning may differ from driver to driver.
Not all server versions will support all statements
Not all servers support this feature.
Not an INSERT (after UPDATE), API value must become 0
Not an INSERT, API value must become 0
Not available in CLI mode
Not every MySQL Server version supports this
Not only does it send this header back to the browser, but it also returns a REDIRECT (302) status code to the browser unless the 201 or a 3xx status code has already been set.
Not only does this class provide timing information about retrieving the successful result, it provides the actual result information (e.g., result rows).
Not permitted to create hard-link to a dir
Not reserched.
Not supported (yet) but most phars call it, so don't throw
Not sure whether this is strictly necessary.
Not sure which is most portable.
Not typing this since we are setting it as a mixed to comply with GitHub issue 2082.
Not used for web based tests
Not used when using URLs.
Notation Tests
Note also that the complexity of this algorithm is O(N**3) where N is the length of the longest string.
Note invalid dirs in p8 result in (The system cannot find the path specified.) rather than No Such File or Directory in php.net
Note that 'alphabetic' is determined by the current locale.
Note that .phar cannot be used anywhere in the filename for a non-executable tar or zip archive.
Note that JPC and JP2 are capable of having components with different bit depths.
Note that all zip- and tar-based phar archives must contain .phar in their file extension in order to be processed as a phar archive.
Note that built-in functions are not interceptable.
Note that depending on what extensions you have compiled or loaded into PHP, additional classes could be present.
Note that dynamically calling extract is not allowed with the DisallowDynamicVarEnvFuncs option
Note that for socket streams this member can be TRUE even when unread_bytes is non-zero.
Note that if the array already contains some elements, exec() will append to the end of the array.
Note that if the length argument is given, then the magic_quotes_runtime configuration option will be ignored and no slashes will be stripped from string.
Note that item names are treated case-sensitive.
Note that keys are preserved.
Note that keys in replacement array are not preserved.
Note that numeric keys in input are not preserved.
Note that objects are not supported.
Note that offset and length parameters are always deemed to represent offsets that are calculated on the basis of the character set determined by charset, whilst the counterpart substr() always takes these for byte offsets.
Note that only the first call to strtok uses the string argument.
Note that pairs return a Vector despite the documentation saying that they return an immVector
Note that profiling slows down queries, so it is better to use in development or testing than in a time-sensitive application.
Note that seeking past EOF is not considered an error.
Note that short query responses (less than 1MB) are always effectively snapshotted.
Note that some database/driver combinations may not support all of the database connection attributes.
Note that structures are deserialized into associative arrays.
Note that the "dn" is always returned irrespective of which attributes types are requested.
Note that the "named placeholder" is enclosed by double quotes.
Note that the access time is always modified, regardless of the number of parameters.
Note that the data itself is not encrypted.
Note that the default return value comes BEFORE the arguments to the function.
Note that the distinction between signed and unsigned values only affects the function unpack(), where as function pack() gives the same result for signed and unsigned format codes.
Note that the errno and errstr arguments will always be passed by reference.
Note that the keys are used in the comparison unlike array_diff() and array_udiff().
Note that the keys are used in the comparison unlike in array_intersect().
Note that the keys are used in the comparison unlike in array_uintersect().
Note that the list of elements is prepended as a whole, so that the prepended elements stay in the same order.
Note that the needle in this case can only be a single character in PHP 4.
Note that the parameters for call_user_func() are not passed by reference.
Note that the serialization scheme is not the same as unserialize() and can be accessed by session_decode().
Note that the values of trans need to be valid keys, i.e. they need to be either integer or string.
Note that this can be thrown by any database request that receives a reply, not just queries.
Note that this changes the return value in an array where every element is an array consisting of the matched string at offset 0 and its string offset into subject at offset 1.
Note that this changes the value of matches into an array where every element is an array consisting of the matched string at offset 0 and its string offset into subject at offset 1.
Note that this comparison is case sensitive, and unlike strcmp() this function is not binary safe.
Note that this comparison is case sensitive.
Note that this function modifies this Vector in place.
Note that this ignores the keys of this ImmMap and the specified Iterable.
Note that this ignores the keys of this Map and the specified Iterable.
Note that this implementation does not use a stack as in Oliver's pseudo code, but recursive calls which may or may not speed up the whole process.
Note that this is a C constant, but not exposed to PHP, so we don't define it here.
Note that this is different from xdebug.
Note that this is not the case when compiling with WholeProgram mode, and Option::HardTypeHints, so this test is disabled for repo.
Note that this means that a cursor does not "contain" the database results, it just manages them.
Note that this means that you won't have an indication that a shard is down in your query response.
Note that this parameter is always treated as an ASCII string regardless of the value of input-charset.
Note that this parameter is applied to the stream processed by the filters.
Note that this parameter only has an effect if the string is not empty.
Note that we're basically reimplementing next() here.
Note that when an XHP name is used in a function signature it's okay to use the XHP name without preceding whitespace as long as the previous token is not ':'.
Note that when you set a handler to an object method, that object's reference count is increased which makes it persist until you either change the handler to something else, or your script ends.
Note that you may put multiple tokens in the token parameter.
Note that you must also call MongoLog::setLevel() to turn on logging.
Note that you must also call MongoLog::setModule() to choose what part of the driver to log.
Note that you probably want to specify the mode as an octal number, which means it should have a leading zero.
Note that you should use this function even if you do not use the automatic routing to secondaries.
Note the absence of FilesystemIterator::SKIP_DOTS
Note this value is returned internally to PHP for processing.
Note: Bad string raise Warning.
Note: Did not start form -22 offset.
Note: Due to detect order, detected as UTF-8
Note: For a multiple-row insert, LAST_INSERT_ID() and mysql_insert_id() actually return the AUTO_INCREMENT key from the first of the inserted rows.
Note: For offset(-15).
Note: It does not return TRUE/FALSE for setting char
Note: No error conditions relating to passing arguments can be tested because these are not functions but statements, it will result in syntax error.
Note: Other than string type, PHP raises Warning
Note: SWC requires zlib
Note: SessionHandlerInterface::close() is called immediately after this function.
Note: The 'variant' and 'private' subtags can take maximum 15 values whereas 'extlang' can take maximum 3 values.
Note: This path may vary depending on customizations to bin-dir in  composer.json or the environmental variable COMPOSER_BIN_DIR.
Note: Wanted to use builtin SPL for this, but it seems like the order cannot be guaranteed with their iterators.
Note: basic use cases in Zend/tests/009.phpt get an unset variable
Note: basic use cases in Zend/tests/010.phpt
Note: basic use cases in Zend/tests/is_a.phpt
Note: bind_result before execute
Note: configure with --enable-dba
Note: for statements that return no result set mysqli_num_rows() differs from mysqli_stmt_num_rows() slightly mysqli_num_rows() failed to fetch the result set and the PHP parameter check makes it return NULL mysqli_stmt_numrows() has a valid resource to work on and it will return int/0 instead.
Note: no SQL type tests, internally the same function gets used as for mysql_fetch_array() which does a lot of SQL type test
Note: no SQL type tests, internally the same function gets used as for mysqli_fetch_array() which does a lot of SQL type test
Note: not particularly optimal ...
Note: returns last character
Note: the first four values are valid as they will all be cast to 1L.
Note: this cache could easily be shared between threads
Note: this is different from zend right now.
Note: use this function if you don't want files from the file system loaded and processed as YAML.
Note: very weak testing, we accept almost any result
Note: you cannot insert any blob values this way.
Nothing should have been flushed.
Nothing to read
Nothing to set here since this is the default
Notice that foo is invariant in T
Notice: Undefined offset: 0
Notifies the runner that running a benchmark resulted in an error.
Notifies the runner that we're done running a single benchmark in the benchmark suite.
Notifies the runner that we're done with running a suite and that we have a result which can be reported to the user if needed.
Notify all observers
Now add those dependencies
Now check for three locales that is present in the system and use that as argument to setlocale()
Now do it with unbuffered queries
Now exchange fruits for locations
Now just a meaningful subset of the above, since lots of them are not number in any context on any version, and we've proven that in a couple ways already.
Now just get the incoming data unitl we find some sort of status data
Now test the base form of log
Now that this is a non-terminal, this is bad
Now that we have an install, we can safely set all possible other framework information
Now that we have our first non-blank line, print out the test information until we have our final stats
Now the result is either the root node or the greatest node in the left subtree.
Now the same as procedural API
Now the same where the current day-of-week does not match the one in the phrase.
Now the same with emulated PS.
Now we have __autoload(), that will be called before the old style header.
Now we should be back to autocommit - we've issues a commit
Now we use the trait, which happens to introduce another private variable but they are distinct, and not related to each other, so no warning.
Now, we want PEAR.php, Getopt.php (Console_Getopt) and Tar.php (Archive_Tar) broken out of the tarballs
Null here doc string
Null heredoc string
Null should fallback to default separators.
Nullable enum supertype is still a supertype
Number 1 means that you grant execute rights, number 2 means that you make the file writable, number 4 means that you make the file readable.
Number formatter class - locale-dependent number formatting/parsing.
Number of arguments not matching as specified in format field
Number of characters from the beginning of string.
Number of columns in a result
Number of spaces to indent per level
Number parsing.
NumberFormatter is locale-sensitive so you need to create a new NumberFormatter for each locale.
NumberFormatter methods format primitive-type numbers, such as double and output the number as a locale-specific string.
Numbered indices are left as is.
Numbers (hex and dec) we know to be valid HTML entities.
Numeric String
Numeric keys
Numeric positions of attributes
Numeric strings consist of optional sign, any number of digits, optional decimal part and optional exponential part.
OK because arrays are sequenced
OK because constructors and function calls are sequenced
OK because short circuiting ops are sequenced
OK, results in ""
OK, results in "e"
OK, results in "r"
OK, results in "r" change a string
OK, results in NULL subscript some strings
ON DUPLICATE KEY UPDATE" queries, the return value will be 1 if an insert was performed, or 2 for an update of an existing row.
OO inteface to finfo
OR we have run the tests before, but we are having an issue getting to the actual tests (e.g., yii is one test suite that has behaved this way).
ORIGINAL ARRAY
OUT OF BOUNDS
Object (array) in variable
Object Note: PHP Warning, strlen() expects parameter 1 to be string, object given
Object attributes    Attribute Description     name The name of the column   orgname Original column name if an alias was specified   table The name of the table this field belongs to (if not calculated)   orgtable Original table name if an alias was specified   def The default value for this field, represented as a string   max_length The maximum width of the field for the result set.
Object attributes    Attribute Description     name The name of the column   orgname Original column name if an alias was specified   table The name of the table this field belongs to (if not calculated)   orgtable Original table name if an alias was specified def The default value for this field, represented as a string max_length The maximum width of the field for the result set.
Object data
Object properties    Property Description     name The name of the column   orgname Original column name if an alias was specified   table The name of the table this field belongs to (if not calculated)   orgtable Original table name if an alias was specified   max_length The maximum width of the field for the result set.
Object properties    Property Description     name The name of the column   orgname Original column name if an alias was specified table The name of the table this field belongs to (if not calculated) orgtable Original table name if an alias was specified   max_length The maximum width of the field for the result set.
Object properties    Property Description     name The name of the column orgname Original column name if an alias was specified   table The name of the table this field belongs to (if not calculated)   orgtable Original table name if an alias was specified   def Reserved for default value, currently always ""   db Database (since PHP 5.3.6) catalog The catalog name, always "def" (since PHP 5.3.6)   max_length The maximum width of the field for the result set.
Object properties    Property Description     name The name of the column orgname Original column name if an alias was specified   table The name of the table this field belongs to (if not calculated) orgtable Original table name if an alias was specified   def Reserved for default value, currently always ""   db Database (since PHP 5.3.6)   catalog The catalog name, always "def" (since PHP 5.3.6)   max_length The maximum width of the field for the result set.
Object with static array
Object-level additions are done by the ldap_add() function.
Object-level deletions are done by the ldap_delete() function.
Object-level modifications are done by the ldap_modify() function.
Objects are only created wit the static create functions
Objects implementing JsonSerializable can customize their JSON representation when encoded with json_encode().
Occurs if the database response started out correctly, but broke off in the middle.
Octal array
Octal type variations
Octal values
October 23rd, with a broken time
Oddly, Linux does not support IPV6_PKTINFO in sockgetopt().
Of course, if length is zero then this function will have the effect of inserting replacement into string at the given start offset.
Of course, the NumberFormatter class is unaware of exchange rates so, the number output is the same regardless of the specified currency.
Of course, this is also true if string is empty.
Often, for example on a system employing "shadow" passwords, an asterisk is returned instead.
Oh, and you can decide how big the indent is and what the wordwrap for folding is.
Ok, lets check MyISAM resp.
Old server should die after a while
Omitting this parameter (or setting it to 0 in PHP 5.0.4 and later) the maximum line length is not limited, which is slightly slower.
On Linux, it is silently truncated to SOMAXCONN.
On Linux, this value may be read and modified via /proc/sys/kernel/msgmnb.
On PHP side this should do nothing.
On Red Hat variants, this can be caused by a default setting that does not allow Apache to create network connections.
On Windows, setlocale(LC_ALL, '') sets the locale names from the system's regional/language settings (accessible via Control Panel).
On Windows, the error message is prefixed with "WSA".
On error FALSE is returned and a warning raised (this can happen if the system call is interrupted by an incoming signal).
On error FALSE is returned.
On error boolean FALSE is returned.
On error false is returned.
On error the function returns FALSE.
On error, FALSE is returned.
On error, returns FALSE and sets errno which can be checked with posix_get_last_error().
On errors the return value is NULL   If matches are found, the new subject will be returned, otherwise subject will be returned unchanged.
On errors, it will return FALSE.
On failure returns FALSE.
On failure, FALSE is returned.
On failure, a -1 will be returned in the parent's context, no child process will be created, and a PHP error is raised.
On failure, file_get_contents() will return FALSE.
On failure, returns FALSE
On failure, this function will return -1 on a select failure or timeout (from the underlying select system call).
On failure, throws ImagickException.
On most systems, only the user's full name is available.
On return, this value will hold the offset at which parsing ended.
On some Unix variants, getcwd() will return FALSE if any one of the parent directories does not have the readable or search mode set, even if the current directory does.
On some older UNIX platforms, it may not be able to determine the current OS information in which case it will revert to displaying the OS PHP was built on.
On some operating systems, you may want to specify a path on a filesystem that handles lots of small files efficiently.
On some systems it is impossible to distinguish between empty match and an error.
On success, the array will contain two keys 'file' and 'line' which indicate the filename and line number of the callsite that invoked the current function or method.
On systems where the crypt() function supports multiple hash types, the following constants are set to 0 or 1 depending on whether the given type is available: CRYPT_STD_DES - Standard DES-based hash with a two character salt from the alphabet "./0-9A-Za-z".
On systems where time_t is a 32bit signed integer, as most common today, the valid range for year is somewhere between 1901 and 2038.
On systems with fopencookie, a FILE* is created around the user stream and that is passed back to the ZE to include.
On systems without fopencookie, the stream is fed into a temporary file, and that temporary file is passed back to the ZE.
On the continuous integration server, it's not unlikely that we'll fail to bind one of these random ports.
On the contrary, the mysqlnd way is a reasonable one and, maybe, one fine day, after Klingons visited earh, becomes the official one.
On versions of PHP before 5.3.2, the lock is released also by fclose() (which is also called automatically when script finished).
On win32, if passed SOMAXCONN, the underlying service provider responsible for the socket will set the backlog to a maximum reasonable value.
Once a successful connection is made, a new socket resource is returned, which may be used for communication.
Once done, the final score is reported to the runner.
Once expired the connection will be successfully reconnected or marked as failed for another retry_interval seconds.
Once the crypto settings are established, cryptography can be turned on and off dynamically by passing TRUE or FALSE in the enable parameter.
Once the last benchmark has been executed, null is returned.
Once the wrapper has been disabled you may override it with a user-defined wrapper using stream_wrapper_register() or re-enable it later on with stream_wrapper_restore().
Once this resource is adpoted by a call to this function, it is no longer valid in the context on which it was being used.
Once you have your pool constructed, you use this method to connect to the MySQL client.
One Valid arg
One argument
One argument, less than expected no.
One component can be computed by adding up the needed permissions for that target user base.
One day we can compare this to the previous version and get a bigger number
One extra argument
One final test to see if the position is respected when opened for append
One has to make sure there are no exceptions in between these two calls, as otherwise, it may report incorrect timings.
One more than the expected number of arguments
One part of the options governs how the driver reads from secondary nodes in a replica set environment.
Only SWITCH dispatch method use it
Only When you `await` or `join` the resulting `Awaitable`, will all of the key/values in the `Map` within the returned `Awaitable` be available.
Only When you `await` or `join` the resulting `Awaitable`, will all of the values in the `Vector` within the returned `Awaitable` be available.
Only accept SSLv3 and TLSv1.2 connections
Only allowed when there's no arguments.
Only do the unix2dos thing done above already
Only file paths matching the regular expression will be included in the archive.
Only for internal use
Only formats available: type, key, value, memsize, ttl throws notice on different flags
Only go through
Only here to be var_dump compatible with zend
Only int and string are currently allowed.
Only keys and values that meet a certain criteria are affected by a call to `filterWithKey()`, while all values are affected by a call to `mapWithKey()`.
Only lowercase should work
Only one invalid argument
Only purpose is to test basic code paths in the ezc string to double and double to string routines.
Only put this timeout if we are using hhvm
Only read one row and break
Only the first character of thousands_sep is used.
Only the start, end and period characters will be escaped.
Only the superuser may change the owner of a file.
Only the superuser may change the owner of a symlink.
Only upon calling Redis::exec() is the transaction committed, and the results returned.
Only use this function when all processes have finished working with the message queue and you need to release the system resources held by it.
Only user implemented
Only values that meet a certain criteria are affected by a call to `filter()`, while all values are affected by a call to `map()`.
Open a directory using opendir() with different directory permissions
Open a directory with different premissions then try to read it to test behaviour of readdir()
Open a file pointer using fopen and pass to readdir() to test behaviour
Open a persistent database connection
Open and close a directory handle then call rewinddir() to test behaviour
Open directory with different permission values, read and close, expected: none of them to succeed.
Open handle
Open two directory handles on the same directory and pass both to readdir() to test behaviour
Opening 'fubar' with the incorrect readonly flag
Opening parentheses are counted from left to right (starting from 1) to obtain the number of the capturing subpattern.
Opening section and start of test case array.
Opening the existing data file again in "w" mode
Opening the existing data file again in "wb" mode
Opening the existing data file again in "wt" mode
Opening the existing data file in 'x' mode to check for the warning message
Opening the existing data file in 'xb' mode to check for the warning message
Opening the existing data file in 'xt' mode to check for the warning message
Opening the file in binary read mode
Opening the non-existing file in "a" mode, which will be created
Opening the non-existing file in "ab" mode, which will be created
Opening the non-existing file in "at" mode, which will be created
Opening the non-existing file in "w" mode, which will be created
Opening the non-existing file in "wb" mode, which will be created
Opening the non-existing file in "wt" mode, which will be created
Opens a pipe to a process executed by forking the command given by command.
Opens an IMAP stream to a mailbox.
Opens an SQLite 3 Database.
Opens up a directory handle to be used in subsequent closedir(), readdir(), and rewinddir() calls.
Operates as fprintf() but accepts an array of arguments, rather than a variable number of arguments.
Operates as printf() but accepts an array of arguments, rather than a variable number of arguments.
Operation in progress  Connecting to the database timed out.
Operational modes  In ATOMIC mode, we wait for the server to respond to each request and return the value directly.
Option parsing.
Optional values do not accept " " (space) as a separator.
Optionally you can do this here if you want to fix up the document
Options to Redis::setOption() and Redis::getOption()
Options used by lInsert and similar methods
Or I am a clown.
Or if the flag FILTER_NULL_ON_FAILURE is used, it returns FALSE if the variable is not set and NULL if the filter fails.
Order defined by ksort
Order of destruction is implementation-defined
Ordinarily, every time a file within a Phar archive is created or modified in any way, the entire Phar archive will be recreated with the changes.
Other characters remain unchanged.
Other internal session save handlers are provided by PHP extensions such as SQLite (as sqlite), Memcache (as memcache), and Memcached (as memcached).
Other keys in associative arrays dependant on 'type'    Type Extra Columns     A  ip: An IPv4 addresses in dotted decimal notation.
Other levels, such as TCP, can be used by specifying the protocol number of that level.
Other return values are currently not available.
Other uses could include explicitly specifying a MIME type to return.
Other versions only define this function, if the correct GD version is installed.
Otherwise FALSE is returned and errno is set, which can be checked with posix_get_last_error().
Otherwise a new session id is generated every time.
Otherwise do nothing.
Otherwise exact offset is searched and only if not found then the first time zone with any offset is returned.
Otherwise it will contain the higher descriptor number.
Otherwise later operations take effect outside clipping path.
Otherwise lookup that index
Otherwise we're only interested in *.phpt files.
Otherwise, Returns TRUE on success or FALSE on failure.
Otherwise, a blank page will be displayed by default.
Otherwise, all the keys from the input are returned.
Otherwise, answer true.
Otherwise, false.
Otherwise, fpassthru() returns the number of characters read from handle and passed through to the output.
Otherwise, if optional parameters are passed, the function will return the number of assigned values.
Otherwise, it is set to time.
Otherwise, it returns FALSE.
Otherwise, it returns an array of keys for the random entries.
Otherwise, it will return what handler tells.
Otherwise, return the return value.
Otherwise, returns TRUE if the query succeeded, FALSE on failure.
Otherwise, returns a human-readable description of why the server is not warmed up.
Otherwise, returns an associative array with the following elements (which correspond to opt), or FALSE on failure:    "url"     "content_type"     "http_code" "header_size"     "request_size"     "filetime" "ssl_verify_result"     "redirect_count"     "total_time" "namelookup_time"     "connect_time"     "pretransfer_time" "size_upload"     "size_download"     "speed_download" "speed_upload"     "download_content_length" "upload_content_length"     "starttransfer_time"     "redirect_time" "certinfo"     "request_header" (This is only set if the CURLINFO_HEADER_OUT is set by a previous call to curl_setopt())
Otherwise, returns an associative array.
Otherwise, returns false.
Otherwise, see if we have a diff file.
Otherwise, str is cut from the first illegal character and an E_NOTICE is generated.
Otherwise, the existing file is overwritten, unless the FILE_APPEND flags is set.
Otherwise, the previous value is retained.
Otherwise, the returned string is path with any trailing /component removed.
Otherwise, this function will return NULL.
Out of bound param.
Out of range - should return false
Output a formatted string  Display array values as a formatted string according to format (which is described in the documentation for sprintf()).
Output after this function is converted to encoding.
Output buffers are stackable, that is, you may call ob_start() while another ob_start() is active.
Output facilitating function
Output files only in subsuites
Output is in the format expected by JsonTestRunner.
Output the format
Output the image
Output the image to browser
Output using fwrite() is normally buffered at 8K.
Outputs 'D1:foo true'
Outputs 'D2::foo false' (Zend outputs 'D2::foo true')
Outputs 'D3::foo false' (Zend outputs 'D3::foo true')
Outputs 'D4::foo false'
Outputs a GD image to the given filename.
Outputs a GD2 image to the given filename.
Outputs a large amount of information about the current state of PHP.
Outputs barbaz
Outputs or save an XBM version of the given image.
Outputs or saves a PNG image from the given image.
Outputs or saves a webp image from the given image.
Overloading not used on declared properties.
Overloading only used on this when accessed outside the class.
Override the alert function to throw an exception instead.
Override width property
Override with something else
Overrideable
PDO thinks autocommit is off, but its manually turned on...
PDO will emulate prepared statements/bound parameters for drivers that do not natively support them, and can also rewrite named or question mark style parameter markers to something more appropriate, if the driver supports one style but not the other.
PDO::ATTR_AUTOCOMMIT (available in OCI, Firebird and MySQL): Whether to autocommit every single statement.
PDO::ATTR_CASE: Force column names to a specific case.
PDO::ATTR_ERRMODE: Error reporting.
PDO::ATTR_ORACLE_NULLS (available with all drivers, not just Oracle): Conversion of NULL and empty strings.
PDO::ATTR_STATEMENT_CLASS: Set user-supplied statement class derived from PDOStatement.
PDO::ATTR_STRINGIFY_FETCHES: Convert numeric values to strings when fetching.
PDO::ATTR_TIMEOUT: Specifies the timeout duration in seconds.
PDO::CASE_LOWER: Force column names to lower case.
PDO::CASE_NATURAL: Leave column names as returned by the database driver.
PDO::CASE_UPPER: Force column names to upper case.
PDO::ERRMODE_EXCEPTION: Throw exceptions.
PDO::ERRMODE_SILENT: Just set error codes.
PDO::ERRMODE_WARNING: Raise E_WARNING.
PDO::FETCH_ASSOC: returns an array indexed by column name as returned in your result set  PDO::FETCH_BOTH (default): returns an array indexed by both column name and 0-indexed column number as returned in your result set  PDO::FETCH_BOUND: returns TRUE and assigns the values of the columns in your result set to the PHP variables to which they were bound with the PDOStatement::bindColumn() method  PDO::FETCH_CLASS: returns a new instance of the requested class, mapping the columns of the result set to named properties in the class.
PDO::MYSQL_ATTR_DIRECT_QUERY (integer) Perform direct queries, don't use prepared statements.
PDO::MYSQL_ATTR_MAX_BUFFER_SIZE (integer) Maximum buffer size.
PDO::MYSQL_ATTR_READ_DEFAULT_FILE (integer) Read options from the named option file instead of from my.cnf.
PDO::MYSQL_ATTR_READ_DEFAULT_GROUP (integer) Read options from the named group from my.cnf or the file specified with MYSQL_READ_DEFAULT_FILE.
PDO::MYSQL_ATTR_USE_BUFFERED_QUERY (available in MySQL): Use buffered queries.
PDO::NULL_EMPTY_STRING: Empty string is converted to NULL.
PDO::NULL_NATURAL: No conversion.
PDO::NULL_TO_STRING: NULL is converted to an empty string.
PDO::errorCode() only retrieves error codes for operations performed directly on the database handle.
PDO::errorInfo() only retrieves error information for operations performed directly on the database handle.
PDO::exec() does not return results from a SELECT statement.
PDO::exec() executes an SQL statement in a single function call, returning the number of rows affected by the statement.
PDO::query() executes an SQL statement in a single function call, returning the result set (if any) returned by the statement as a PDOStatement object.
PDO::query() will prepare and execute a statement in one step.
PDO::quote() places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver.
PDOStatement::bindColumn() arranges to have a particular variable bound to a given column in the result-set from a query.
PDOStatement::closeCursor() frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again.
PDOStatement::closeCursor() is implemented either as an optional driver specific method (allowing for maximum efficiency), or as the generic PDO fallback if no driver specific function is installed.
PDOStatement::nextRowset() enables you to access the second and subsequent rowsets associated with a PDOStatement object.
PDOStatement::rowCount() returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding PDOStatement object.
PEAR-like class name
PHP 4/5: E_STRICT "Redefining already defined constructor" HHVM (PHP 5 mode), HHVM (PHP 7 mode), PHP 7, 8: No error is raised
PHP 7 used preg_replace_callback here, but we are testing preg_replace_callback_array.
PHP comment here
PHP defaults to Daylight Saving Time.
PHP doesn't handle strings like "12,300.2" correctly by default.
PHP encodes UTF-8 characters in up to four bytes, like this: UTF-8 encoding bytes bits representation 1 7 0bbbbbbb 2 11 110bbbbb 10bbbbbb 3 16 1110bbbb 10bbbbbb 10bbbbbb 4 21 11110bbb 10bbbbbb 10bbbbbb 10bbbbbb Each b represents a bit that can be used to store character data.
PHP locales are organized and identified the same way that the CLDR locales used by ICU (and many vendors of Unix-like operating  systems, the Mac, Java, and so forth) use.
PHP locales are organized and identified the same way that the CLDR locales used by ICU (and many vendors of Unix-like operating systems, the Mac, Java, and so forth) use.
PHP sets a constant named CRYPT_SALT_LENGTH which indicates the longest valid salt allowed by the available hashes.
PHP should not try to close the connection or something.
PHP stacks but no Async stacks.
PHP supports a portable way of locking complete files in an advisory way (which means all accessing programs have to use the same way of locking or it will not work).
PHP will call this method when the session is ready to be saved and closed.
PHP will evaluate a non-numeric string as 0 if compared to integer, but still return the string if it's seen as the numerically highest value.
PHP will evaluate a non-numeric string as 0 if compared to integer, but still return the string if it's seen as the numerically lowest value.
PHP will try to cast this parameter to a non-null integer to use it.
PHP's resource numbers start one ahead of us
PHP5 32, allowed quietly, but does not change the original argument PHP5 64  allowed with warning "PHP Strict standards:  Only variables should be passed by reference", but does not change the original argument HHVM, allowed quietly, but does not change the original argument
PHP5 and HHVM: type Generator
PHP5 does not have "real" runtime support as of 5.5.7 So the expected behavior is not what you would expect "logically"
PHP5: Duplicate rejected  /*
PHP5: Succeeded HHVM: Constants may only evaluate to scalar values
PHP7 actually allows you to call this constructor from user code successfully, even though it is really meant to only be called from ReflectionParameter::getType() and ReflectionFunctionAbstract::getReturnType().
PHP_CLI_SERVER_MIME_TYPE_MAP_H
PHP_INI_ALL
PHP_INI_NONE
PHP_INI_ONLY
PHP_INI_PERDIR
PHP_INI_SYSTEM
PHP_INT_MAX
PHP_SESSION_ACTIVE if sessions are enabled, and one exists.
PHP_SESSION_NONE if sessions are enabled, but none exists.
POSIX style
POSIX_F_OK just requests checking for the existence of the file.
POSIX_R_OK, POSIX_W_OK and POSIX_X_OK request checking whether the file exists and has read, write and execute permissions, respectively.
PREFIX_END_HAS_NEXT
PREFIX_END_LAST
PREFIX_LEFT
PREFIX_MID_HAS_NEXT
PREFIX_MID_LAST
PREFIX_RIGHT
PREG_OFFSET_CAPTURE   If this flag is passed, for every occurring match the appendant string offset will also be returned.
PREG_SPLIT_DELIM_CAPTURE   If this flag is set, parenthesized expression in the delimiter pattern will be captured and returned as well.
PREG_SPLIT_OFFSET_CAPTURE   If this flag is set, for every occurring match the appendant string offset will also be returned.
PS are unbuffered, num_rows cannot determine the row count before all rows have been fetched and/or buffered
PTR  target: Location within the DNS namespace to which this record points.
Pacific-ish
Pack given arguments into binary string according to format.
Pad a string to a certain length with another string
Pair and ImmVector are immutable, so we can't do a similar test for them.
Pairwise probe.
Palette image
Parameter expire is expiration time in seconds.
Parameters are numbered beginning with 0.
Parent was skipping one.
Parentheses are not added automatically around the placeholder in the query string, so be sure to add them if necessary.
Parentheses may be nested, in which case they are counted by the opening parenthesis.
Paris and Idiorm have tests with ending digits (e.g. Test53.php)
Parse Errors tests from HHJsonDecodeTest.php
Parse a load of URLs without specifying PHP_URL_FRAGMENT as the URL component
Parse a load of URLs without specifying PHP_URL_HOST as the URL component
Parse a load of URLs without specifying PHP_URL_PASS as the URL component
Parse a load of URLs without specifying PHP_URL_PATH as the URL component
Parse a load of URLs without specifying PHP_URL_PORT as the URL component
Parse a load of URLs without specifying PHP_URL_QUERY as the URL component
Parse a load of URLs without specifying PHP_URL_SCHEME as the URL component
Parse a load of URLs without specifying PHP_URL_USER as the URL component
Parse a load of URLs without specifying the component
Parse a number according to current formatting rules.
Parse all the options passed to run.php
Parse arguments
Parse command line options
Parse currency string  This parser would use parseCurrency API string to parse currency string.
Parse definition file into tree
Parse error
Parses GET/POST/COOKIE data and sets global variables.
Parses YAML to array.
Parses a file.
Parses a string input for fields in CSV format and returns an array containing the fields read.
Parses options passed to the script.
Parses str as if it were the query string passed via a URL and sets variables in the current scope.
Parsing callback for yaml tag.
Parsing helper's definition
Parsing opcode handler's definition
Part 1: Storing the result of a function in a static variable.
Part 2: Storing a reference to the result of a function in a static variable.
Part 3: TO BE DISCUSSED  Storing a reference to the result of a function in a static variable.
Part 4: Storing a reference to a new instance (that's where the name of the  test comes from).
Part of the GNU extension.
Partial parsing
Pasing object in place of 'input' argument to test object functionatlity
Pass a Japanese string and a mixed Japanese and ASCII string to mb_strtolower to check correct conversion is occuring (Japanese characters should not be converted).
Pass a `Vector` of values to have it expanded into a comma-separated list.
Pass a cURL handle, or, more simply, a string containing a URL (and the cURL handle will be created for you), and the cURL request will be executed via async and the `string` result will be retuned.
Pass a directory containing files with different types of names to test how scandir() reads them
Pass a directory handle pointing to a directory that contains  files with different file names to test how readdir() reads them
Pass a directory handle pointing to a directory that has a sub-directory to test behaviour of readdir()
Pass a directory that does not exist to scandir() to test error messages
Pass a file pointer to rewinddir() to test behaviour
Pass a function that will be called if any `invariant` fails.
Pass a function that will be called if any invariant fails.
Pass a multipart message to imap_fetch_overview() to test the contents of returned array
Pass a non-object as the parameter for binding the closure to.
Pass accented characters and Russian characters to check case conversion is correct
Pass all encodings listed on php.net to mb_strlen to test that function recognises them NB: The strings passed are *NOT* necessarily encoded in the encoding passed to the function.
Pass all encodings listed on php.net to test that function recognises them.
Pass an array containing sub-arrays, ints, floats, strings, boolean, null  and escape characters to test how natcasesort() re-orders it
Pass an array of different hex values to test how natcasesort() re-orders it
Pass an array of objects which are either:  1.
Pass an array of objects which have a different number of properties to test behaviour of usort()
Pass an array of octal values to test how natcasesort() re-orders it
Pass an array of referenced varaibles to test how natcasesort() re-orders it
Pass an array with different data types as keys to test how array_merge  adds it onto an existing array
Pass an array with different data types as keys to usort() to test how it is re-ordered
Pass an array with duplicate keys and values to usort() to test behaviour
Pass an incorrect number of arguments to array_slice() to test behaviour
Pass an incorrect number of arguments to ctype_alpha() to test behaviour
Pass an incorrect number of arguments to ctype_cntrl() to test behaviour
Pass an incorrect number of arguments to ctype_digit() to test behaviour
Pass an incorrect number of arguments to ctype_graph() to test behaviour
Pass an incorrect number of arguments to ctype_space() to test behaviour
Pass an incorrect number of arguments to each() to test behaviour
Pass an incorrect number of arguments to escapeshellarg() to test behaviour
Pass an incorrect number of arguments to getrusage() to test behaviour
Pass an incorrect number of arguments to imap_close() to test behaviour
Pass an incorrect number of arguments to imap_fetch_overview() to test behaviour
Pass an incorrect number of arguments to imap_fetchbody() to test behaviour
Pass an incorrect number of arguments to imap_fetchheader() to test behaviour
Pass an incorrect number of arguments to mb_strtolower() to test behaviour
Pass an incorrect number of arguments to mb_strtoupper() to test behaviour
Pass an incorrect number of arguments to mb_substr_count() to test behaviour
Pass an incorrect number of arguments to preg_last_error() to test behaviour
Pass an unknown comparison function to usort() to test behaviour.
Pass an unknown encoding to iconv_strpos() to test behaviour
Pass an unknown encoding to iconv_substr() to test behaviour
Pass an unknown encoding to mb_stripos() to test behaviour
Pass an unknown encoding to mb_strpos() to test behaviour
Pass an unknown encoding to mb_strripos() to test behaviour
Pass an unknown encoding to mb_strtolower() to test behaviour
Pass an unknown encoding to mb_substr() to test behaviour
Pass array_key_exists() an object with private and protected properties
Pass array_merge arrays with string keys to test behaviour.
Pass array_merge() arrays with mixed keys to test how it attaches them to existing arrays
Pass array_merge() arrays with only numeric keys to test behaviour.
Pass array_push arrays where the keys are different data types.
Pass arrays containing different numeric data to rsort() to test behaviour
Pass arrays containing different string data to rsort() to test behaviour
Pass arrays of different data types to natcasesort() to test how they are sorted
Pass arrays of different data types to test how array_merge adds them onto an existing array
Pass arrays of numeric data to test how natcasesort re-orders the array
Pass arrays of numeric data to usort() to test how it is re-ordered
Pass arrays of string data to see how natcasesort() re-orders the array
Pass arrays of string data to usort() to test how it is re-ordered
Pass arrays where the keys are different data types to test behaviour of natcasesort()
Pass arrays where values are of one data type to test behaviour of array_shift()
Pass arrays with different data types as keys to array_change_key_case() to test conversion
Pass arrays with different data types as keys to test how array_shift() re-assigns keys
Pass certain data types that can be taken as a key in an array  and test whether array_key_exists(() thinks they are equal and therefore returns true when searching for them
Pass characters from different languages to check that mb_strtoupper is doing a correct case conversion
Pass different hexadecimal and octal values that: 1.
Pass different integers to ctype_alnum() to test which character codes are considered valid alphanumeric characters
Pass different integers to ctype_alpha() to test which character codes are considered valid alphabetic characters
Pass different integers to ctype_cntrl() to test which character codes are considered valid control characters
Pass different integers to ctype_digit() to test which character codes are considered valid decimal digits
Pass different integers to ctype_graph() to test which character codes are considered valid visibly printable characters
Pass different integers to ctype_lower() to test which character codes are considered valid lowercase characters
Pass different integers to ctype_print() to test which character codes are considered valid printable characters
Pass different integers to ctype_punct() to test which character codes are considered valid punctuation characters
Pass different integers to ctype_space() to test which character codes are considered valid whitespace characters
Pass different integers to ctype_upper() to test which character codes are considered valid uppercase characters
Pass different integers to ctype_xdigit() to test which character codes are considered valid hexadecimal 'digits'
Pass different octal and hexadecimal values to ctype_punct() to test behaviour
Pass different resource types to imap_fetch_overview() to test behaviour
Pass different resource types to imap_fetchbody() to test behaviour
Pass different stream types to imap_close() to test whether it can close them
Pass different strings to ctype_alnum to test behaviour
Pass different types of resources to imap_fetchheader() to test behaviour
Pass each() arrays where the keys are different data types to test behaviour
Pass hexadecimal and octal values to ctype_cntrl() to test behaviour
Pass iconv_strlen an incorrect number of arguments to test behaviour
Pass iconv_strrpos() an encoding that doesn't exist
Pass iconv_strrpos() an incorrect number of arguments
Pass in a problem as an OAuthException, with possible problems listed in the OAuth constants section.
Pass incorrect input to bindec() to test behaviour
Pass incorrect number of arguments and an unknown function to test which error is generated.
Pass incorrect number of arguments to abs() to test behaviour
Pass incorrect number of arguments to array_key_exists() to test behaviour
Pass incorrect number of arguments to array_merge() to test behaviour
Pass incorrect number of arguments to array_push() to test behaviour
Pass incorrect number of arguments to array_shift() to test behaviour
Pass incorrect number of arguments to array_values to test behaviour
Pass incorrect number of arguments to chdir() to test behaviour
Pass incorrect number of arguments to closedir() to test behaviour
Pass incorrect number of arguments to count() to test behaviour
Pass incorrect number of arguments to ctype_alnum() to test behaviour
Pass incorrect number of arguments to ctype_lower() to test behaviour
Pass incorrect number of arguments to ctype_print() to test behaviour
Pass incorrect number of arguments to ctype_punct() to test behaviour
Pass incorrect number of arguments to ctype_upper() to test behaviour
Pass incorrect number of arguments to ctype_xdigit() to test behaviour
Pass incorrect number of arguments to current() to test behaviour
Pass incorrect number of arguments to end() to test behaviour
Pass incorrect number of arguments to getcwd() to test behaviour
Pass incorrect number of arguments to iconv_substr() to test behaviour
Pass incorrect number of arguments to key() to test behaviour
Pass incorrect number of arguments to mb_substr() to test behaviour
Pass incorrect number of arguments to natcasesort() to test behaviour
Pass incorrect number of arguments to next() to test behaviour
Pass incorrect number of arguments to opendir() to test behaviour
Pass incorrect number of arguments to prev() to test behaviour
Pass incorrect number of arguments to readdir() to test behaviour
Pass incorrect number of arguments to reset() to test behaviour
Pass incorrect number of arguments to rewinddir() to test behaviour
Pass incorrect number of arguments to round() to test behaviour
Pass incorrect number of arguments to rsort() to test behaviour
Pass incorrect number of arguments to scandir() to test behaviour
Pass incorrect number of arguments to srand() to test behaviour
Pass incorrect number of arguments to usort() to test behaviour
Pass mb_internal_encoding an unknown encoding
Pass mb_regex_encoding an unknown type of encoding
Pass mb_strlen an incorrect number of arguments to test behaviour
Pass mb_strrpos() an encoding that doesn't exist
Pass mb_strrpos() an incorrect number of arguments
Pass natcasesort() an array of objects to test how it re-orders them
Pass natcasesort() an array of objects which have properties of different visibilities to test how it re-orders the array.
Pass natcasesort() an infinitely recursive array to test how it is re-ordered
Pass octal and hexadecimal values to ctype_alnum() to test behaviour
Pass octal and hexadecimal values to ctype_alpha() to test behaviour
Pass octal and hexadecimal values to ctype_graph() to test behaviour
Pass octal and hexadecimal values to ctype_lower() to test behaviour
Pass octal and hexadecimal values to ctype_print() to test behaviour
Pass octal and hexadecimal values to ctype_upper() to test behaviour
Pass paths containing wildcards to test if opendir() recognises them
Pass readdir() a directory handle pointing to an empty directory to test behaviour
Pass referenced variables as arguments to array_key_exists() to test behaviour
Pass rsort() an array containing octal values to test behaviour
Pass rsort() an array of different data types to test behaviour
Pass rsort() an array of hexadecimal values to test behaviour
Pass rsort() arrays of boolean values to test behaviour
Pass rsort() associative arrays to test key re-assignment
Pass rsort() multi-dimensional arrays to test behaviour
Pass strings containing different character types to ctype_alpha() to test which are considered valid alphabetic character only strings
Pass strings containing different character types to ctype_cntrl() to test which are considered valid control character only strings
Pass strings containing different character types to ctype_digit() to test which are considered valid decimal digit only strings
Pass strings containing different character types to ctype_graph() to test which are considered valid printable character only strings
Pass strings containing different character types to ctype_lower() to test which are considered valid lowercase character only strings
Pass strings containing different character types to ctype_print() to test which are considered valid printable character only strings
Pass strings containing different character types to ctype_punct() to test which are considered valid punctuation character only strings
Pass strings containing different character types to ctype_space() to test which are considered valid whitespace character only strings
Pass strings containing different character types to ctype_upper() to test which are considered valid uppercase character only strings
Pass strings containing different character types to ctype_xdigit() to test which are considered valid hexadecimal 'digit' only strings
Pass temporary variables to prev() to test behaviour
Passed a referenced variable 2.
Passed an argument by reference
Passed an array as the first argument and a reference to that array as the second.
Passed an array by reference
Passed an array made up of referenced variables 2.
Passed an array of referenced variables 2.
Passed an infinitely recursive multi-dimensional array
Passing 'input' array which contains elements as reference to other data
Passing 'source' argument with different style of comments
Passing 'source' argument with different type casting operators to test them for token (int)/(integer) - T_INT_CAST(295), (float)/(real)/(double) - T_DOUBLE_CAST(294), (string) - T_STRING_CAST(293), (bool)/(boolean) - T_BOOL_CAST(290), (unset) - T_UNSET_CAST(289)
Passing 0 causes the seams to be straight.
Passing NULL or an empty string will be equivalent to the default value.
Passing a file as argument to dir() function instead of a directory  and checking if proper warning message is generated.
Passing a non-existent directory as argument to dir() function and checking to see if proper warning message is output.
Passing anonymous(run-time) callback function with following variations: with one parameter two parameters three parameters extra parameters without parameters
Passing built-in functions and different language constructs as 'callback' argument
Passing different anonymous callback functions with passed by value and reference arguments
Passing different anonymous functions as 'cmp_function' arguments passed by value arguments passed by reference
Passing different buit-in functionns as callback function pow function min function echo language construct
Passing different heredoc strings as 'str' argument to the str_split()  with 'split_length' 10
Passing different scalar and nonscalar values for 'input' argument
Passing different scalar and nonscalar values in place of 'callback' argument
Passing different scalar/non-scalar values in place of 'source' argument It returns either T_INLINE_HTML by converting values into string or gives warning
Passing different scalar/nonscalar values as 'input' argument to array_sum()
Passing different scalar/nonscalar values in place of 'funcname' argument
Passing different scalar/nonscalar values in place of 'input' argument
Passing different types of array as 'input' argument.
Passing different types of callback functions to array_filter() with parameters and return without parameter and with return with parameter and without return without parameter and without return
Passing different types of callback functions to array_walk() without parameters with less and more parameters
Passing different types of callback functions to array_walk_recursive() without parameters with less and more parameters
Passing dir names with different notations, using slashes, wild-card chars
Passing file names with different notations, using slashes, wild-card chars
Passing invalid arguments to is_dir()
Passing it to an 'as' constrained Bar is fine
Passing non array values to 'arr1' argument of array_merge_recursive() and see  that the function outputs proper warning messages wherever expected.
Passing non array values to 'arr2' argument of array_merge_recursive() and see  that the function outputs proper warning messages wherever expected.
Passing non array values to 'input' argument of array_unique() and see  that the function outputs proper warning messages wherever expected.
Passing non resource values to 'context' argument of dir() and see that the function outputs proper warning messages wherever expected.
Passing non string values to 'directory' argument of dir() and see that the function outputs proper warning messages wherever expected.
Passing object in place of an 'input' argument to test object functionality
Passing resource as an argument
Passing the NULL value or the string "localhost" to this parameter, the local host is assumed.
Patch the code (keep your fingures crossed)
Patched a self-signed certificate to include validity timestamps starting with nul byte
Path modifier that should be applied after adding current element.
Pear is a current example of this behavior.
Pear won't run correctly unless a 'php' executable exists.
Perform a nonblocking test whether an asynchronous query has completed.
Perform a regular expression search and replace using an associative array of pattern and callback key/value pairs.
Perform a regular expression search and replace.
Perform the splay operation for the given key.
Performance.now is used in latency benchmarks, the fallback is Date.now.
Performing addition operation on given values : a, b
Performs a "han-kaku" - "zen-kaku" conversion for string str.
Performs a flood fill starting at the given coordinate (top left is 0, 0) with the given color in the image.
Performs a multi-byte safe strpos() operation based on number of characters.
Performs a multi-byte safe substr() operation based on number of characters.
Performs a multibyte regular expression match for a predefined multibyte string.
Performs a multibyte safe strrpos() operation based on the number of characters.
Performs an ordered traversal of the subtree starting at this SplayTree.Node.
Performs case folding on a string, converted in the way specified by mode.
Performs the ROT13 encoding on the str argument and returns the resulting string.
Performs the search for a specified filter on the directory with the scope LDAP_SCOPE_BASE.
Performs the search for a specified filter on the directory with the scope LDAP_SCOPE_ONELEVEL.
Performs the search for a specified filter on the directory with the scope of LDAP_SCOPE_SUBTREE.
Permission denied  This means that the socket could not be opened due to permissions issues.
Phar write buffering is per-archive, buffering active for the foo.phar Phar archive does not affect changes to the bar.phar Phar archive.
Phar::offsetGet() is used for retrieving files from a Phar archive.
Phar::startBuffering() can provide a significant performance boost when creating or modifying a Phar archive with a large number of files.
Pick random number between 1 and max 16 bit unsigned int 65535
Pick sample size, results normalized against median function call cost
Picks one ore more random entries out of an array, and returns the key (or keys) of the random entries.
Pipe doesn't force you to format with a newline if you don't want.
Planners may exploit the fact that instances, if satisfied, will not change their output during plan execution.
Playing with the port makes only sense if no socket gets used
Please consult the Streams constant list for further details on each constant.
Please note sessions use an alternative serialization method.
Please note that absolute URLs (http://example.com/..) aren't rewritten.
Please note that before this method is called SessionHandlerInterface::open() is invoked.
Please note that ftp_pasv() can only be called after a successfull login or otherwise it will fail.
Please note that needle is case sensitive.
Please note that this function only checks one dimension of a n-dimensional array.
Please note the callback methods of this class are designed to be called internally by PHP and are not meant to be called from user-space code.
Please read server documentation for more details.
Please read server documentation for what a pagelet server is.
Please read server documentation for what an xbox is.
Please read the section on Booleans for more information.
Please see MongoClient::__construct() for description of the parameters.
Please see the Array section of the manual for a detailed explanation of how arrays are implemented and used in PHP.
Please see the Floating point numbers section in the manual for more specific information and limitations.
Please see the Replica Sets section for information on how to connect to Replica Sets.
Please see your system's fork(2) man page for specific details as to how fork works on your system.
Please see your system's wait(2) man page for specific details as to how wait works on your system.
Please see your system's waitpid(2) man page for specific details as to how waitpid works on your system.
Please use MongoClient instead.
Pooled curl handles persist between requests.
Ported to PHP from Google's Octane v2.0 benchmarking suite for JavaScript.
Position is counted from the beginning of str.
Positional argument, presumably.
Positive offsets
Posix requires that assumptions must not be made about the format of the values, e.g. the assumption that a release may contain three digits or anything else returned by this function.
Possible patterns are documented at .
Possible values are RecursiveIteratorIterator::CATCH_GET_CHILD which will then ignore exceptions thrown in calls to RecursiveIteratorIterator::getChildren().
Possible values are RecursiveIteratorIterator::LEAVES_ONLY - The default.
Possible values are fifo, char, dir, block, link, file, and unknown.
Possible values are fifo, char, dir, block, link, file, socket and unknown.
Possible values for flags Flag Description MSG_OOB Process out-of-band data.
Possible values for flags MSG_OOB Send OOB (out-of-band) data.
Possible values: - SIG_BLOCK: Add the signals to the currently blocked signals.
Post test information are error/failure information and the final passing stats for the test
Posts an xbox message without waiting.
Potentially an infinitely-growing map type.
Pre 5.6: link remains useable
Precision loss when comparing bit ints w/ floats.
Predefined Date constants
Prefer splitting into two methods to calling it mixed.
Prefer to use XhprofFrame classobjects instead of calling this function directly.
Preparation
Prepared Statements
Prepared statements are released and HANDLER variables are closed.
Prepared statements with bound parameters are not only more portable, more convenient, immune to SQL injection, but are often much faster to execute than interpolated queries, as both the server and client side can cache a compiled form of the query.
Prepares an SQL statement for execution and returns an SQLite3Stmt object.
Prepares an SQL statement to be executed by the PDOStatement::execute() method.
Prepending host by p: opens a persistent connection.
Preppend test signature to output string
Presently, the ISO-8859-1 character set is used as the default.
Pretty cool -- just pass in 'false' for either if you want to use the default.
Pretty simple.
Prevent clone
Prevent cloning
Prevent infinite loops.
Prevent notices about undefines variables
Prevent the check for __HALT_COMPILER()
Previous to PHP 5.1.0, this function would return -1 on failure.
Previous to this, dates will be in the Julian calendar.
Previously, an end user message was created as a sentence and handled as a string.
Prime the generator
Print a hashbang if not run from the first source file executed.
Print every element of a ImmSet with a custom function, since serialization is not wired up yet.
Print if output format is for humans
Print out summary information
Print output if format is human readable, but not not verbose.
Print output if verbose mode is on.
Print result as HTML table
Print stats
Print the diffs
Printing the returned value from the function
Prints the entries of a Vector in sorted order.
Prior to 5.3, PHP would determine the available algorithms at install-time based on the system's crypt().
Prior to 5.3.0, MCRYPT_RAND was the only one supported on Windows.
Prior to PHP 5.4.0, using FORCE_DEFLATE results in a standard zlib deflated string (inclusive zlib headers) after a gzip file header but without the trailing crc32 checksum.
Private constructor for disallowing instantiation
Private function to walk the WDDX DOM tree
Private use registry values
Private use subtags:
Probably bad practice to have --latest --record --latest-record, but it is not a contradiction.
Probably indicates a network problem.
Probably max_allowed_packet_size is smaller than the data.
Processes a SOAP request, calls necessary functions, and sends a response back.
Processes a pagelet server request.
Produce specialized executor
Produce unspecialized executor for each handlers in helpers in original order
Produces output according to format.
Programs store and operate on numbers using a locale-independent binary representation.
Prop for visible, accessible property
Prop for visible, accessible property: use __get
Prop for visible, inaccessible property: use __get
PropD for visible, accessible property
PropD for visible, accessible property: use __get
PropD for visible, inaccessible property: use __get
PropU for visible, accessible property
Propagate value array
Properties of the object have their normal functionality when accessed as list (var_dump, foreach, etc.)
Protected and public are handle more strict with a warning then what is expected from normal inheritance since they can have easier coliding semantics
Protected property
Protocol numbers can be found by using the getprotobyname() function.
Prototype         : resource curl_multi_init(void) Description       : Returns a new cURL multi handle Source code       : ext/curl/multi.c Test documentation:  http://wiki.php.net/qa/temp/ext/curl
Prototype  : array DateTimeZone::getTransitions  () Description: Returns all transitions for the timezone Source code: ext/date/php_date.c Alias to functions: timezone_transitions_get()
Prototype  : array DateTimeZone::listAbbreviations  ( void  ) Description: Returns associative array containing dst, offset and the timezone name Source code: ext/date/php_date.c Alias to functions: timezone_abbreviations_list
Prototype  : array DateTimeZone::listIdentifiers ( void ) Description: Returns numerically index array with all timezone identifiers   Source code: ext/date/php_date.c Alias to functions: timezone_identifiers_list
Prototype  : array gd_info  ( void  ) Description: Retrieve information about the currently installed GD library Source code: ext/standard/image.c Alias to functions:
Prototype  : array gd_info() Description: Retrieve information about the currently installed GD library Source code: ext/gd/gd.c
Prototype  : array get_class_vars(string class_name) Description: Returns an array of default properties of the class.
Prototype  : array get_defined_functions  ( void  ) Description: Gets an array of all defined functions.
Prototype  : array hash_algos (void) Description: Return a list of registered hashing algorithms Source code: ext/hash/hash.c Alias to functions:
Prototype  : array imap_alerts(void) Description: Returns an array of all IMAP alerts that have been generated since the last page load or since the last imap_alerts() call, whichever came last.
Prototype  : array imap_errors  ( void  ) Description: Returns all of the IMAP errors that have occurred.
Prototype  : array list_system_locales( void ) Description: To get the currently installed locle in this platform  Arguments  : Nil Returns    : set of locale as array
Prototype  : array strpbrk(string haystack, string char_list) Description: Search a string for any of a set of characters  Source code: ext/standard/string.c Alias to functions:
Prototype  : array timezone_abbreviations_list  ( void  ) Description: Returns associative array containing dst, offset and the timezone name Source code: ext/date/php_date.c Alias to functions: DateTimeZone::listAbbreviations
Prototype  : array timezone_identifiers_list  ( void ) Description: Returns numerically index array with all timezone identifiers   Source code: ext/date/php_date.c Alias to functions:
Prototype  : bool chmod(string filename, int mode) Description: Change file mode  Source code: ext/standard/filestat.c Alias to functions:
Prototype  : bool closelog(void) Description: Close connection to system logger  Source code: ext/standard/syslog.c Alias to functions:
Prototype  : bool curl_exec(resource ch) Description: Perform a cURL session  Source code: ext/curl/interface.c Alias to functions:
Prototype  : bool curl_multi_exec(resource ch) Description: Perform a cURL session  Source code: ext/curl/multi.c Alias to functions:
Prototype  : bool curl_setopt(resource ch, int option, mixed value) Description: Set an option for a cURL transfer Source code: ext/curl/interface.c Alias to functions:
Prototype  : bool finfo_set_flags(resource finfo, int options) Description: Set libmagic configuration options.
Prototype  : bool iconv_set_encoding(string type, string charset) Description: Sets internal encoding and output encoding for ob_iconv_handler() Source code: ext/iconv/iconv.c
Prototype  : bool lchown (string filename, mixed user) Description: Change file owner of a symlink Source code: ext/standard/filestat.c Alias to functions:
Prototype  : bool ob_get_flush(void) Description: Get current buffer contents, flush (send) the output buffer, and delete current output buffer  Source code: main/output.c Alias to functions:
Prototype  : bool property_exists(mixed object_or_class, string property_name) Description: Checks if the object or class has a property  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype  : bool stream_filter_remove(resource stream_filter) Description: Flushes any data in the filter's internal buffer, removes it from the chain, and frees the resource  Source code: ext/standard/streamsfuncs.c Alias to functions:
Prototype  : bool syslog(int priority, string message) Description: Generate a system log message  Source code: ext/standard/syslog.c Alias to functions:
Prototype  : bool uksort(array array_arg, string cmp_function) Description: Sort an array by keys using a user-defined comparison function  Source code: ext/standard/array.c Alias to functions:
Prototype  : imagecolorallocate(resource im, int red, int green, int blue) Description: Allocate a color for an image Source code: ext/gd/gd.c
Prototype  : int ArrayObject::asort() Description: proto int ArrayIterator::asort() Sort the entries by values.
Prototype  : int ArrayObject::ksort() Description: proto int ArrayIterator::ksort() Sort the entries by key.
Prototype  : int ArrayObject::natcasesort() Description: proto int ArrayIterator::natcasesort() Sort the entries by values using case insensitive "natural order" algorithm.
Prototype  : int ArrayObject::natsort() Description: proto int ArrayIterator::natsort() Sort the entries by values using "natural order" algorithm.
Prototype  : int ArrayObject::uasort(callback cmp_function) Description: proto int ArrayIterator::uasort(callback cmp_function) Sort the entries by values user defined function.
Prototype  : int ArrayObject::uksort(callback cmp_function) Description: proto int ArrayIterator::uksort(callback cmp_function) Sort the entries by key using user defined function.
Prototype  : int getmypid  ( void  ) Description: Gets the current PHP process ID.
Prototype  : int imagecolorallocate(resource im, int red, int green, int blue) Description:  Allocate a color for an image Source code: ext/gd/gd.c
Prototype  : int imagecolorallocate(resource im, int red, int green, int blue) Description: Allocate a color for an image Source code: ext/gd/gd.c
Prototype  : int imagecolorstotal(resource im) Description: Find out the number of colors in an image's palette  Source code: ext/gd/gd.c Alias to functions:
Prototype  : int ip2long(string ip_address) Description: Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address  Source code: ext/standard/basic_functions.c Alias to functions:
Prototype  : int ip2long(string ip_address) Description: Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address Source code: ext/standard/basic_functions.c Alias to functions:
Prototype  : int ob_get_length(void) Description: Return the length of the output buffer  Source code: main/output.c Alias to functions:
Prototype  : int pclose(resource fp) Description: Close a file pointer opened by popen()  Source code: ext/standard/file.c Alias to functions:
Prototype  : int preg_last_error  ( void  ) Description:  Returns the error code of the last PCRE regex execution Source code: ext/pcre/php_pcre.c
Prototype  : int strnatcasecmp(string s1, string s2) Description: Returns the result of case-insensitive string comparison using 'natural' algorithm  Source code: ext/standard/string.c Alias to functions:
Prototype  : int vfprintf(resource stream, string format, array args) Description: Output a formatted string into a stream  Source code: ext/standard/formatted_print.c Alias to functions:
Prototype  : mixed array_product(array input) Description: Returns the product of the array entries  Source code: ext/standard/array.c Alias to functions:
Prototype  : mixed call_user_func_array(string function_name, array parameters) Description: Call a user function which is the first parameter with the arguments contained in array  Source code: ext/standard/basic_functions.c Alias to functions:
Prototype  : mixed getcwd(void) Description: Gets the current directory  Source code: ext/standard/dir.c
Prototype  : proto array array_count_values(array input) Description: Return the value as key and the frequency of that value in input as value  Source code: ext/standard/array.c Alias to functions:
Prototype  : proto array array_fill(int start_key, int num, mixed val) Description: Create an array containing num elements starting with index start_key each initialized to val  Source code: ext/standard/array.c
Prototype  : proto array array_fill_keys(array keys, mixed val) Description: Create an array using the elements of the first parameter as keys each initialized to val  Source code: ext/standard/array.c Alias to functions:
Prototype  : proto array get_class_methods(mixed class) Description: Returns an array of method names for class or class instance.
Prototype  : proto array get_declared_classes() Description: Returns an array of all declared classes.
Prototype  : proto array get_declared_interfaces() Description: Returns an array of all declared interfaces.
Prototype  : proto array get_declared_traits() Description: Returns an array of all declared traits.
Prototype  : proto array get_object_vars(object obj) Description: Returns an array of object properties  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype  : proto array gethostbynamel(string hostname) Description: Return a list of IP addresses that a given hostname resolves to.
Prototype  : proto array posix_getgrgid(long gid) Description: Group database access (POSIX.1, 9.2.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto array posix_getpwuid(long uid) Description: User database access (POSIX.1, 9.2.2)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto array posix_times(void) Description: Get process times (POSIX.1, 4.5.2)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto array posix_uname(void) Description: Get system name (POSIX.1, 4.4.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto array stream_get_meta_data(resource fp) Description: Retrieves header/meta data from streams/file pointers  Source code: ext/standard/streamsfuncs.c Alias to functions: socket_get_status
Prototype  : proto bool feof(resource fp) Description: Test for end-of-file on a file pointer  Source code: ext/standard/file.c Alias to functions: gzeof
Prototype  : proto bool file_exists(string filename) Description: Returns true if filename exists  Source code: ext/standard/filestat.c Alias to functions:
Prototype  : proto bool is_a(object object, string class_name) Description: Returns true if the object is of this class or has this class as one of its parents  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype  : proto bool is_a(object object, string class_name, bool allow_string) Description: Returns true if the object is of this class or has this class as one of its parents  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype  : proto bool is_subclass_of(object object, string class_name) Description: Returns true if the object has this class as one of its parents  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype  : proto bool method_exists(object object, string method) Description: Checks if the class method exists  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype  : proto bool ob_clean(void) Description: Clean (delete) the current output buffer  Source code: main/output.c Alias to functions:
Prototype  : proto bool ob_end_flush(void) Description: Flush (send) the output buffer, and delete current output buffer  Source code: main/output.c Alias to functions:
Prototype  : proto bool ob_flush(void) Description: Flush (send) contents of the output buffer.
Prototype  : proto bool posix_kill(int pid, int sig) Description: Send a signal to a process (POSIX.1, 3.3.2)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int fpassthru(resource fp) Description: Output all remaining data from a file pointer  Source code: ext/standard/file.c Alias to functions: gzpassthru
Prototype  : proto int ob_get_level(void) Description: Return the nesting level of the output buffer  Source code: main/output.c Alias to functions:
Prototype  : proto int posix_get_last_error(void) Description: Retrieve the error number set by the last posix function which failed.
Prototype  : proto int posix_getgid(void) Description: Get the current group id (POSIX.1, 4.2.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int posix_getpgid(void) Description: Get the process group id of the specified process (This is not a POSIX function, but a SVR4ism, so we compile conditionally)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int posix_getpgrp(void) Description: Get current process group id (POSIX.1, 4.3.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int posix_getpid(void) Description: Get the current process id (POSIX.1, 4.1.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int posix_getppid(void) Description: Get the parent process id (POSIX.1, 4.1.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int posix_getuid(void) Description: Get the current user id (POSIX.1, 4.2.1)  Source code: ext/posix/posix.c Alias to functions:
Prototype  : proto int xml_get_current_byte_index(resource parser) Description: Get current byte index for an XML parser  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_get_current_column_number(resource parser) Description: Get current column number for an XML parser  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_get_current_line_number(resource parser) Description: Get current line number for an XML parser  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_get_error_code(resource parser) Description: Get XML parser error code  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_parser_free(resource parser) Description: Free an XML parser  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_parser_get_option(resource parser, int option) Description: Get options from an XML parser  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_parser_set_option(resource parser, int option, mixed value) Description: Set options in an XML parser  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_character_data_handler(resource parser, string hdl) Description: Set up character data handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_default_handler(resource parser, string hdl) Description: Set up default handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_element_handler(resource parser, string shdl, string ehdl) Description: Set up start and end element handlers  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_end_namespace_decl_handler(resource parser, string hdl) Description: Set up character data handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_external_entity_ref_handler(resource parser, string hdl) Description: Set up external entity reference handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_notation_decl_handler(resource parser, string hdl) Description: Set up notation declaration handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_processing_instruction_handler(resource parser, string hdl) Description: Set up processing instruction (PI) handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_start_namespace_decl_handler(resource parser, string hdl) Description: Set up character data handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto int xml_set_unparsed_entity_decl_handler(resource parser, string hdl) Description: Set up unparsed entity declaration handler  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto mixed unserialize(string variable_representation) Description: Takes a string representation of variable and recreates it  Source code: ext/standard/var.c Alias to functions:
Prototype  : proto mixed unserialize(string variable_representation) Description: Takes a string representation of variable and recreates it Source code: ext/standard/var.c Alias to functions:
Prototype  : proto string base64_encode(string str) Description: Encodes string using MIME base64 algorithm  Source code: ext/standard/base64.c Alias to functions:
Prototype  : proto string gethostbyaddr(string ip_address) Description: Get the Internet host name corresponding to a given IP address  Source code: ext/standard/dns.c Alias to functions:
Prototype  : proto string image_type_to_mime_type(int imagetype) Description: Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype  Source code: ext/standard/image.c
Prototype  : proto string ob_get_contents(void) Description: Return the contents of the output buffer  Source code: main/output.c Alias to functions:
Prototype  : proto string posix_strerror(int errno) Description: Retrieve the system error message associated with the given errno.
Prototype  : proto string rawurldecode(string str) Description: Decodes URL-encodes string  Source code: ext/standard/url.c Alias to functions:
Prototype  : proto string rawurlencode(string str) Description: URL-encodes string  Source code: ext/standard/url.c Alias to functions:
Prototype  : proto string serialize(mixed variable) Description: Returns a string representation of variable (which can later be unserialized)  Source code: ext/standard/var.c Alias to functions:
Prototype  : proto string serialize(mixed variable) Description: Returns a string representation of variable (which can later be unserialized) Source code: ext/standard/var.c Alias to functions:
Prototype  : proto string urldecode(string str) Description: Decodes URL-encoded string  Source code: ext/standard/url.c Alias to functions:
Prototype  : proto string urlencode(string str) Description: URL-encodes string  Source code: ext/standard/url.c Alias to functions:
Prototype  : proto string utf8_decode(string data) Description: Converts a UTF-8 encoded string to ISO-8859-1  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto string utf8_encode(string data) Description: Encodes an ISO-8859-1 string to UTF-8  Source code: ext/xml/xml.c Alias to functions:
Prototype  : proto string xml_error_string(int code) Description: Get XML parser error string  Source code: ext/xml/xml.c Alias to functions:
Prototype  : public DateTimeZone DateTime::getTimezone  ( void  ) Description: Return time zone relative to given DateTime Source code: ext/date/php_date.c Alias to functions: date_timezone_get
Prototype  : public int DateTime::getOffset  ( void  ) Description: Returns the daylight saving time offset Source code: ext/date/php_date.c Alias to functions:  date_offset_get
Prototype  : public mixed ReflectionFunction::getClosure() Description: Returns a dynamically created closure for the function  Source code: ext/reflection/php_reflection.c Alias to functions:
Prototype  : public mixed ReflectionFunction::getClosure() Description: Returns a dynamically created closure for the function Source code: ext/reflection/php_reflection.c Alias to functions:
Prototype  : public mixed ReflectionFunction::getClosure() Description: Returns a dynamically created closure for the method  Source code: ext/reflection/php_reflection.c Alias to functions:
Prototype  : public mixed ReflectionFunction::getClosure() Description: Returns a dynamically created closure for the method Source code: ext/reflection/php_reflection.c Alias to functions:
Prototype  : public string DateTimeZone::getName  ( void  ) Description: Returns the name of the timezone Source code: ext/date/php_date.c Alias to functions: timezone_name_get()
Prototype  : resource finfo_close(resource finfo) Description: Close fileinfo resource.
Prototype  : string date_default_timezone_get ( void ) Description:  Gets the default timezone used by all date/time functions in a script.
Prototype  : string dirname(string path) Description: Returns the directory name component of the path  Source code: ext/standard/string.c Alias to functions:
Prototype  : string ezc_realpath(string path) Description: Return the resolved path Source code: ext/standard/file.c Alias to functions:
Prototype  : string iconv(string in_charset, string out_charset, string str) Description: Returns converted string in desired encoding  Source code: ext/iconv/iconv.c
Prototype  : string image_type_to_mime_type(int imagetype) Description: Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype  Source code: ext/standard/image.c
Prototype  : string long2ip(int proper_address) Description: Converts an (IPv4) Internet network address into a string in Internet standard dotted format  Source code: ext/standard/basic_functions.c Alias to functions:
Prototype  : string mb_decode_mimeheader(string string) Description: Decodes the MIME "encoded-word" in the string  Source code: ext/mbstring/mbstring.c Alias to functions:
Prototype  : string mcrypt_cbc(int cipher, string key, string data, int mode, string iv) Description: CBC crypt/decrypt data using key key with cipher cipher starting with iv  Source code: ext/mcrypt/mcrypt.c Alias to functions:
Prototype  : string mcrypt_cbc(string cipher, string key, string data, int mode, string iv) Description: CBC crypt/decrypt data using key key with cipher cipher starting with iv  Source code: ext/mcrypt/mcrypt.c Alias to functions:
Prototype  : string mcrypt_decrypt(string cipher, string key, string data, string mode, string iv) Description: OFB crypt/decrypt data using key key with cipher cipher starting with iv  Source code: ext/mcrypt/mcrypt.c Alias to functions:
Prototype  : string mcrypt_ecb(int cipher, string key, string data, int mode, string iv) Description: ECB crypt/decrypt data using key key with cipher cipher starting with iv  Source code: ext/mcrypt/mcrypt.c Alias to functions:
Prototype  : string mcrypt_ecb(string cipher, string key, string data, int mode, string iv) Description: ECB crypt/decrypt data using key key with cipher cipher starting with iv  Source code: ext/mcrypt/mcrypt.c Alias to functions:
Prototype  : string mcrypt_encrypt(string cipher, string key, string data, string mode, string iv) Description: OFB crypt/decrypt data using key key with cipher cipher starting with iv  Source code: ext/mcrypt/mcrypt.c Alias to functions:
Prototype  : string realpath(string path) Description: Return the resolved path  Source code: ext/standard/file.c Alias to functions:
Prototype  : string vprintf(string format, array args) Description: Output a formatted string  Source code: ext/standard/formatted_print.c
Prototype  : string vprintf(string format, array args) Description: Return a formatted string  Source code: ext/standard/formatted_print.c
Prototype  : string vsprintf(string format, array args) Description: Output a formatted string  Source code: ext/standard/formatted_print.c
Prototype  : string vsprintf(string format, array args) Description: Return a formatted string  Source code: ext/standard/formatted_print.c
Prototype  : void date_add(DateTime object, DateInterval interval) Description: Adds an interval to the current date in object.
Prototype  : void date_sub(DateTime object, DateInterval interval) Description: Subtracts an interval from the current date in object.
Prototype  : void restore_error_handler(void) Description: Restores the previously defined error handler function  Source code: Zend/zend_builtin_functions.c Alias to functions:
Prototype : array session_get_cookie_params(void) Description : Get the session cookie parameters Source code : ext/session/session.c
Prototype : bool session_commit(void) Description : Write session data and end session Source code : ext/session/session.c
Prototype : bool session_destroy(void) Description : Destroys all data registered to a session Source code : ext/session/session.c
Prototype : bool session_start(void) Description : Initialize session data Source code : ext/session/session.c
Prototype : bool session_write_close(void) Description : Write session data and end session Source code : ext/session/session.c
Prototype : callback(mixed value, mixed key, mixed user_data) Parameters : value - value in key/value pair key - key in key/value pair user_data - extra parameter
Prototype : string session_decode(void) Description : Decodes session data from a string Source code : ext/session/session.c
Prototype : string session_encode(void) Description : Encodes the current session data as a string Source code : ext/session/session.c
Prototype : void session_abort(void) Description : Should abort session.
Prototype : void session_reset(void) Description : Should abort session.
Prototype : void session_unset(void) Description : Free all session variables Source code : ext/session/session.c
Prototype: array get_defined_vars  ( void  ) Description: This function returns a multidimensional array containing a list of all defined  variables, be them environment, server or user-defined variables, within the scope that  get_defined_vars() is called.
Prototype: array get_included_files  ( void  ) Description: Returns an array with the names of included or required files
Prototype: float disk_free_space( string directory ) Description: Given a string containing a directory, this function  will return the number of bytes available on the corresponding  filesystem or disk partition
Prototype: float disk_free_space( string directory ) Description: Given a string containing a directory, this function  will return the number of bytes available on the corresponding filesystem or disk partition
Prototype: float disk_free_space( string directory ) Description: Given a string containing a directory, this function will  return the number of bytes available on the corresponding  filesystem or disk partition
Prototype: float disk_free_space( string directory ) Description: Given a string containing a directory, this function will return the number of bytes available on the corresponding  filesystem or disk partition
Prototype: float disk_total_space( string directory ) Description: given a string containing a directory, this function  will return the total number of bytes on the corresponding  filesystem or disk partition.
Prototype: int get_magic_quotes_gpc  ( void  ) This function is not supported anymore and will always return false
Prototype: int get_magic_quotes_runtime  ( void  ) This function is not supported anymore and will always return false
Prototype: resource popen ( string command, string mode ) Description: Opens process file pointer.
Prototype: string get_include_path  ( void  ) Description: Gets the current include_path configuration option
Provide a placeholder string with the data we do have pending changes to the Extension registry.
Provide a value of 0 and the radius will be chosen automagically.
Provides string comparison capability with support for appropriate locale-sensitive sort orderings.
Provides the result information for when the connection to the MySQL client is made successfully.
Provides timing statistics about the MySQL client.
Providing various permissions to the directory to be opened and checking to see if dir() function opens the directory successfully.
Public methods are always accessible.
Purges the cache of entries of a specific type.
Push down bytecode offsets
Push two values onto the list
Put a side effect in the function designator and see the order of evaluation of that compared with the argument list expressions.
Put any script error to a file when we are in a mode like --csv and want to control what gets printed to something like STDOUT.
Put something there if the node name is empty
Put the proxy information in its own "struct-like" class for easy access in case folks outside this proxy wall need to change them.
Putting element inside a container should not affect it's type.
QA configuration
QqJP test 64-bit ints specifically
Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type.
Questionable, dissallowed in the type-checker
Quick hack to make sure we get the latest phpunit binary from composer
Quickly determine if a debugger is attached to this process and configured to debug this thread.
RENAME TABLE
REPLACE EXPR
REPLACE STMT
RFC 1320 vectors
RFC 3629 limited char points to 0000-10FFFF aka 5 byte utf-8 not valid
Raise Notice: 5.6.0Raise E_NOTICE security warning if salt is omitted.
Raise a fatal.
Raise a warning and throw from the user error handler.
Raises a fatal error.
Rather than retrieving all of the data and manipulating it in PHP, consider using the database server to manipulate the result sets.
Rather, if the operation would result in a block, the called function will fail.
Rather, the cursor marks the final object's position.
Raw Binary Output for Empty file as input
Re-add __DIR__ if not there so we have a full test path to run
Re-add the empties
Re-add the mappings
Re-add the sequences
Re-add the strings
Re-create for read
Reaction on host not specified differs for different configs, so no printing
Read Response 1
Read Response 2
Read ahead.
Read the list of mailboxes.
Read the section about  for further information.
Read the structure of a specified body section of a specific message.
Read the values from memcached and decompress/unserialize.
Read their descriptions for details.
Read/write them while implicitly mutating them through the temporary object's destructor.
Reading 1024 bytes from file, expecting 1024 bytes
Reading ends when length bytes have been read, when the string specified by ending is found (which is not included in the return value), or on EOF (whichever comes first).
Reading stops when up to length bytes have been read, EOF (end of file) is  reached, (for network streams) when a packet becomes available, or (after  opening userspace stream) when 8192 bytes have been read whichever comes first.
Reads a dbgp message from the socket.
Reads a file and writes it to the output buffer.
Reads all the values of the attribute in the entry in the result.
Reads an entire file into an array.
Reads attributes and values from an entry in the search result.
Reads multiple entries from the given result, and then reading the attributes and multiple values.
Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.
Reasons for failure are first that you called the function without an active buffer or that for some reason a buffer could not be deleted (possible for special buffer).
Received response saying we're stopping.
Recompute the walkabout strengths and stay flags of all variables downstream of the given constraint and recompute the actual values of all variables whose stay flag is true.
Reconnect because after 3 failed change_user attempts, the server blocks you off.
Reconnect failed, give up
Record 'DocumentFragment is empty' warnings
Record the fact that this constraint is unsatisfied.
Record time
Records that this constraint is unsatisfied
Recurse along the children to generate the remaining nodes
RecursiveCachingIterator expects param1 to be recit
RecursiveIterator::getChildren().
RecursiveIteratorIterator::CHILD_FIRST - Lists leaves and parents in iteration with leaves coming first.
RecursiveIteratorIterator::SELF_FIRST - Lists leaves and parents in iteration with parents coming first.
Recursively test all sub scripts of provided statement list
Red if we go from pass to something else
Redis servers run here by default
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
Redundant match
Refer to context options and parameters for a listing of stream options.
Refer to context parameters for a listing of standard stream parameters.
Refer to the list of gravity constants.
Refer to this list of alpha channel constants.
Refer to this list of channel constants.
Refer to this list of metric constants.
Refer to this list of noise constants.
Refer to this list of pixel constants.
Reference mess...
Reference to an array
Reference two arrays to each other then call reset() to test position of  internal pointer in both arrays
Referenced variables 2.
References must be a variant type
Referral can only be removed with Manage DSA IT Control
ReflectionClass cannot create or delete static properties
ReflectionClass cannot touch protected or private static properties
ReflectionTypeAlias should autoload the alias it references
Regex string
Regex without closing delimiter
Regex without delimiter
Regex without delimiters
Regex without opening delimiter
Register a function with the spl provided __autoload stack.
Registers a PHP function or user-defined function for use as an SQL aggregate function for use within SQL statements.
Registers a PHP function or user-defined function for use as an SQL scalar function for use within SQL statements.
Registers a User Defined Function for use in SQL statements.
Registers a set of classes, merging with any others previously set.
Registers a set of classes, replacing any others previously set.
Registers the namespaceURI and prefix with the DOMXPath object.
Registers this instance as an autoloader.
Regression test for Peephole optimizer's logic for remapping method entry points
Regression test for a translator bug
Regression test: newlines in strings used to mess up line numbers in error messages.
Regression test: running autocomplete on a file with erroneous typeconst used to crash the typechecker.
Regular (non-prepared) queries
Regular Data Test
Regular expression to select the error and warning information tuned for gcc 3.4, 4.0 and 4.1
Regular expressions consist of four parts.
Regular strings keys
Relative from CWD path.
Relative path
Release a task that is currently blocked and return the next block to run.
Releases the current connection and returns a synchronous MySQL connection.
Relies on `hh_server` to poke a stamp file to say "something has changed" to invalidate our cache.
Relying on this feature is highly discouraged.
Remaining attributes are retrieved by calling ldap_next_attribute() successively.
Remember that print_r() will move the array pointer to the end.
Remember that resource variables (i.e. file and connection descriptors) cannot be stored in the cache, because they cannot be adequately represented in serialized state.
Remember, that shared memory still exist in the Unix system and the data is still present.
Remove a zero port, if found
Remove all deleted files, which are not checked by the following linters.
Remove all lib/core functions at the top of the stack
Remove any possible periods.
Remove comments and flip into an extensions array.
Remove data we don't need as otherwise the caches get huge.
Remove fb_debug_backtrace from the backtrace
Remove strings that could change between runs.
Remove systemlib stack frames until we hit the user code.
Remove the directory if already exists
Remove the given constraint and incrementally update the dataflow graph.
Remove the last element of this Vector and return it.
Remove the two nodes of highest priority (lowest probability).
Remove this line to make array_multisort() work
Remove this test once we unify the zend ini compat diff (D1797805) with the per dir diff (D2099778)
Remove top stack frames up to and including Exception::__init__, set the 'file' and 'line' properties appropriately
Remove unused free_op1 and free_op2 declarations
Removed skipped and incomplete tests
Removes a node with the specified key from the tree if the tree contains a node with this key.
Removes a parameter, if set.
Removes a required parameter.
Removes a stored variable from the cache.
Removes a variable with a given variable_key and frees the occupied memory.
Removes all entries from this container
Removes all key/value pairs from the Map.
Removes all traces of c from this variable.
Removes all values from the Set.
Removes all values from the Vector.
Removes attribute is namespace namespaceURI named localName from the element.
Removes attribute named name from the element.
Removes attribute oldnode from the element.
Removes one or more attributes from the specified dn.
Removes the deletion flag for a specified message, which is set by imap_delete() or imap_mail_move().
Removes the element with the specified key from this Vector and renumbers the keys of all subsequent elements.
Removes the elements designated by offset and length from the input array, and replaces them with the elements of the replacement array, if supplied.
Removes the specified directory on the FTP server.
Removes the specified key from this Map.
Removes the specified key from this Vector.
Removes the specified value from this Set and returns itself.
Removes the specified value from this Set.
Removing optional field allows omitting it even when fields are only partially known.
Rename a function, so that a function can be called with the new name.
Renaming a file and directory to numeric name
Renaming a file, link and directory to numeric name
Reopens the specified stream to a new mailbox on an IMAP or NNTP server.
Repeat off-by-one because the old lexer worked right with the second version, but not the first, so test both.
Repeat the data three times, to make it invalid.
Repeated types
Repeated use of Tv bound to something different in each class is meant to be a stress-test of tricksy typing_decl instantiation code
Replace a few nodes in the splay tree.
Replace count characters starting from position offset with data.
Replace headers with existing sources.
Replace with __call-having object
Replace with closure
Replace with empty string
Replaces one or more attributes from the specified dn.
Replaces rest of string if count is greater than length of existing string
Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node.
Replaces the colors of an image with the closest color from a reference image.
Represent date objects for the database.
Representation of date and time.
Representation of time zone.
Representations a database collection.
Represents JavaScript code for the database.
Represents a MySQL warning.
Represents a SOAP header.
Represents a connection between PHP and a MySQL database.
Represents a connection between PHP and a database server.
Represents a connection to a set of memcache servers.
Represents a connection to a set of memcached servers.
Represents a date interval.
Represents a prepared statement and, after the statement is executed, an associated result set.
Represents a prepared statement.
Represents a result of operation that either has a successful result of an `Awaitable` or the exception object if that `Awaitable` failed.
Represents a row block.
Represents a writer that provides a non-cached, forward-only means of generating streams or files containing XML data.
Represents an element in an XML document.
Represents nodes with character data.
Represents parameter to a SOAP call.
Represents the result of failed `Awaitable` operation.
Represents the result of successful `Awaitable` operation.
Represents the result set obtained from a query against the database.
Request a page so that the client can debug it.
Requests for this server will then failover or fail immediately depending on the memcache.allow_failover setting.
Require the explicit specification.
Requirements of Trait1 inherited
Requires array(string classname, array(mixed constructor_args)).
Requires bool.
Requires int.
Requires: PostgreSQL 7.2.x
Reschedule the work of an async function until some other time in the future.
Reserves enough memory to accommodate 'sz' elements.
Reset environment from any previous test.
Reset the cursor and try again.
Reset the iterator to the first field (column).
Reset the iterator to the first row.
Reset timeout
Reset timeout on socket for now
Reset when libxml_use_internal_errors() is called.
Resets the current date of the DateTime object to a different date.
Resets the current time of the DateTime object to a different time.
Resets the directory stream indicated by dir_handle to the beginning of the directory.
Resets the prepared statement to its state prior to execution.
Resize this Vector to contain 'sz' elements.
Resolve filename against the include path according to the same rules as fopen()/include() does.
Resource variable
ResourceBundle supports direct access to the data through array access pattern and iteration via foreach, as well as access via class methods.
Response Count
Restore attribute's symbol.
Restore attribute's value to default
Restore original attribute of the  value
Restores a built-in wrapper previously unregistered with stream_wrapper_unregister().
Restores a given configuration option to its original value.
Restrict this test case to the basics.
Result of detecting the encoding of an array of bytes
Results may vary.
Results will be similar to: /tmp/root/b34.txt /tmp/root/a.txt /tmp/root/z.txt /tmp/root/foo/we.txt /tmp/root/foo/a.txt /tmp/root/waz/bing.txt where the ending files are not necessarily in order, but the containing directories are in order.
Ret runs two destructors
Retreive error code.
Retreive error message.
Retrieve a comma-separated list of paths to any additionally loaded ini files after php.ini.
Retrieve a path to the loaded php.ini file.
Retrieve array of errors.
Retrieve binary from DB
Retrieve column metadata for a result set returned by a function
Retrieve column metadata for a result set returned by explicit SELECT
Retrieve information about parameters to procedures
Retrieve list of registered streams available on the running system.
Retrieve statistics about a table
Retrieve the entries stored in the result.
Retrieve the error number set by the last posix function that failed.
Retrieve the pagination information send by the server.
Retrieves APC's Shared Memory Allocation information.
Retrieves a list of foreign keys
Retrieves a node specified by index within the DOMNamedNodeMap object.
Retrieves a node specified by index within the DOMNodeList object.
Retrieves a node specified by its nodeName.
Retrieves a node specified by localName and namespaceURI.
Retrieves cached information and meta-data from APC's data store.
Retrieves code snippets for adding to test cases
Retrieves information about data types supported by the data source
Retrieves information about the caller that invoked the current function or method.
Retrieves special columns
Retrieves the TypeStructure for a type constant or a type alias.
Retrieves the attributes in an entry.
Retrieves the callback function name.
Retrieves the full error result document.
Retry a few times and hope for the best.
Return FALSE if it does not understand the search criteria or no messages have been found.
Return ICU error code name.
Return a formatted string  Operates as sprintf() but accepts an array of arguments, rather than a variable number of arguments.
Return an empty string instead of false for new sessions as false values cause sessions to fail to init
Return an image containing the affine tramsformed src image, using an optional clipping area.
Return column number
Return contents of all the arrays.
Return current normalication mode.
Return either of the above
Return error text for the last ICU operation.
Return false Return results as array()
Return output data.
Return something that looks close to the hh_client response.
Return the Julian Day for a Unix timestamp (seconds since 1.1.1970), or for the current day if no timestamp is given.
Return the Unicode name for a given property value.
Return the Unicode name for a given property.
Return the attribute if it's there
Return the current element.
Return the current key and value pair from an array  and advance the array cursor
Return the current key and value pair from an array and advance the array cursor.
Return the key of the current element.
Return the name of another class
Return the number of pagelet tasks started during this request.
Return the numeric effective group ID of the current process.
Return the numeric effective user ID of the current process.
Return the numeric real group ID of the current process.
Return the numeric real user ID of the current process.
Return the process group identifier of the current process.
Return the process identifier of the current process.
Return the process identifier of the parent process of the current process.
Return the result of the operation, or throw underlying exception.
Return the session id of the process pid.
Return the underlying exception, or fail with invariant violation.
Return thread type.
Return time zone relative to given DateTime.
Return type check is already performed in the generic test.
Return url back to a unix:// prefix instead of file://
Return values from Redis::type()
Return what we know how to lint.
Return whether stack traces would be shown in case of an error or not.
Returned array has indexes bits (number of bits), key (string representation of the public key) and type (type of the key which is one of OPENSSL_KEYTYPE_RSA, OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH, OPENSSL_KEYTYPE_EC or -1 meaning unknown).
Returned by reference from Redis::sockReadData() Depending on the type of data returned by the server
Returns -1 if the supplied connection itself is invalid.
Returns -1 if unknown.
Returns -1 on error.
Returns 0 or FALSE in case of error.
Returns Current locale,after executing setlocale().
Returns English text describing the most recent failed SQLite request.
Returns FALSE if an error occurs.
Returns FALSE if called from outside a class.
Returns FALSE if no error messages are available.
Returns FALSE if object is not an object.
Returns FALSE if such key already exist.
Returns FALSE if text contains control characters or characters that do not have any output or control function at all.
Returns FALSE if the driver does not support quoting in this way.
Returns FALSE if the needle was not found.
Returns FALSE if the requested column does not exist in the result set, or if no result set exists.
Returns FALSE on EOF.
Returns FALSE on error.
Returns FALSE on failure.
Returns FALSE otherwise.
Returns FALSE, and does not write the CSV line to the file, if the delimiter or enclosure parameter is not a single character.
Returns I/O status of current thread.
Returns NULL if no operation has been run on the database handle.
Returns NULL if there hasn't been an error yet.
Returns NULL in case of a failure.
Returns NULL in case of an error.
Returns TRUE if the file named by filename was uploaded via HTTP POST.
Returns TRUE if the filename exists and is writable.
Returns TRUE if val is infinite (positive or negative), like the result of log(0) or any value too big to fit into a float on this platform.
Returns TRUE on success or FALSE on failure.
Returns a ConstSetLike built from the keys of the specified container.
Returns a DOMNodeList of all elements with a given local name and a namespace URI.
Returns a ImmMap built from the key/value Pairs produced by the specified Iterable.
Returns a ImmMap built from the keys and values of this ImmSet.
Returns a ImmMap built from the keys and values of this ImmVector.
Returns a ImmMap built from the keys and values of this Map.
Returns a ImmMap built from the keys and values of this Set.
Returns a ImmMap built from the keys and values of this Vector.
Returns a ImmMap built from the keys and values produced by the specified KeyedIterable.
Returns a ImmMap containing all key/value pairs except the first n of this ImmMap.
Returns a ImmMap containing the first n key/value pairs of this ImmMap.
Returns a ImmMap containing the key/value pairs of this ImmMap excluding the first values that produces true when passed to the specified callback.
Returns a ImmMap containing the key/value pairs of this ImmMap up to but not including the first value that produces false when passed to the specified callback.
Returns a ImmMap containing the specified range of key/value pairs from this ImmMap.
Returns a ImmMap of all the keys/values from this ImmMap for which the specified callback returns true.
Returns a ImmMap of the keys/values produced by applying the specified callback on each key and value from this ImmMap.
Returns a ImmMap of the keys/values produced by applying the specified callback on each value from this ImmMap.
Returns a ImmSet built from the keys of the specified container.
Returns a ImmSet built from the values from the specified arrays.
Returns a ImmSet built from the values of this ImmMap.
Returns a ImmSet built from the values of this ImmVector.
Returns a ImmSet built from the values of this Map.
Returns a ImmSet built from the values of this Set.
Returns a ImmSet built from the values of this Vector.
Returns a ImmSet built from the values produced by the specified Iterable.
Returns a ImmSet containing all the values of this ImmSet excluding the first values that produces true when passed to the specified callback.
Returns a ImmSet containing all values except the first n of this ImmSet.
Returns a ImmSet containing the first n values of this ImmSet.
Returns a ImmSet containing the specified range of values from this ImmSet.
Returns a ImmSet containing the values of this ImmSet up to but not including the first value that produces false when passed to the specified callback.
Returns a ImmSet of all the values from this ImmSet for which the specified callback returns true.
Returns a ImmSet of the values produced by applying the specified callback on each key and value from this ImmSet.
Returns a ImmSet of the values produced by applying the specified callback on each value from this ImmSet.
Returns a ImmVector built from the keys of the specified container.
Returns a ImmVector built from the keys of this ImmMap.
Returns a ImmVector built from the values of this ImmMap.
Returns a ImmVector built from the values of this ImmSet.
Returns a ImmVector built from the values of this Map.
Returns a ImmVector built from the values of this Set.
Returns a ImmVector built from the values of this Vector.
Returns a ImmVector built from the values produced by the specified Iterable.
Returns a ImmVector containing all values except the first n of this ImmVector.
Returns a ImmVector containing the first n values of this ImmVector.
Returns a ImmVector containing the values of this ImmVector excluding the first values that produces true when passed to the specified callback.
Returns a ImmVector containing the values of this ImmVector up to but not including the first value that produces false when passed to the specified callback.
Returns a Iterable produced by combined the specified Iterables pair-wise.
Returns a KeyedIterable produced by combined the specified Iterables pair-wise.
Returns a LibXMLError object if there is any error in the buffer, FALSE otherwise.
Returns a Map built from the key/value Pairs produced by the specified Iterable.
Returns a Map built from the keys and values from the specified array.
Returns a Map built from the keys and values of this ImmMap.
Returns a Map built from the keys and values of this ImmSet.
Returns a Map built from the keys and values of this ImmVector.
Returns a Map built from the keys and values of this Set.
Returns a Map built from the keys and values of this Vector.
Returns a Map built from the keys and values produced by the specified KeyedIterable.
Returns a Map containing all key/value pairs except the first n of this Map.
Returns a Map containing the first n key/value pairs of this Map.
Returns a Map containing the key/value pairs of this Map excluding the first values that produces true when passed to the specified callback.
Returns a Map containing the key/value pairs of this Map up to but not including the first value that produces false when passed to the specified callback.
Returns a Map containing the specified range of key/value pairs from this Map.
Returns a Map of the keys/values produced by applying the specified callback on each key and value from this Map.
Returns a Map of the keys/values produced by applying the specified callback on each value from this Map.
Returns a Set built from the keys of the specified container.
Returns a Set built from the values from the specified array.
Returns a Set built from the values from the specified arrays.
Returns a Set built from the values of this ImmMap.
Returns a Set built from the values of this ImmSet.
Returns a Set built from the values of this ImmVector.
Returns a Set built from the values of this Map.
Returns a Set built from the values of this Vector.
Returns a Set built from the values produced by the specified Iterable.
Returns a Set containing all the values of this Set excluding the first values that produces true when passed to the specified callback.
Returns a Set containing all values except the first n of this Set.
Returns a Set containing the first n values of this Set.
Returns a Set containing the specified range of values from this Set.
Returns a Set containing the values of this Set up to but not including the first value that produces false when passed to the specified callback.
Returns a Set of all the values from this Set for which the specified callback returns true.
Returns a Set of the values produced by applying the specified callback on each key and value from this Set.
Returns a Set of the values produced by applying the specified callback on each value from this Set.
Returns a Vector built from the keys of the specified container.
Returns a Vector built from the keys of this ImmSet.
Returns a Vector built from the keys of this Map.
Returns a Vector built from the keys of this Set.
Returns a Vector built from the keys of this Vector.
Returns a Vector built from the values from the specified array.
Returns a Vector built from the values of this ImmMap.
Returns a Vector built from the values of this ImmSet.
Returns a Vector built from the values of this ImmVector.
Returns a Vector built from the values of this Map.
Returns a Vector built from the values of this Set.
Returns a Vector built from the values produced by the specified Iterable.
Returns a Vector containing all the values except the first n of this Vector.
Returns a Vector containing the first n values of this Vector.
Returns a Vector containing the specified range of values from this Vector.
Returns a Vector containing the values of this Vector excluding the first values that produces true when passed to the specified callback.
Returns a Vector containing the values of this Vector up to but not including the first value that produces false when passed to the specified callback.
Returns a Vector of all the values from this ImmVector for which the specified callback returns true.
Returns a Vector of all the values from this Vector for which the specified callback returns true.
Returns a Vector of the values produced by applying the specified callback on each key and value from this ImmVector.
Returns a Vector of the values produced by applying the specified callback on each key and value from this Vector.
Returns a Vector of the values produced by applying the specified callback on each value from this ImmVector.
Returns a Vector of the values produced by applying the specified callback on each value from this Vector.
Returns a `ImmVector` containing the values of the current `Pair` that meet a supplied condition.
Returns a `Set` with the values of the current `Pair`.
Returns a `Vector` containing the elements of the current `Pair`.
Returns a `Vector` representing all row blocks returned by the successful query.
Returns a canonicalized version of the input path that contains no symbolic links, like realpath(), except uses cached information from an internal inotify-based mechanism that may not be updated during the duration of a request.
Returns a clone of this ImmVector.
Returns a clone of this Vector.
Returns a color identifier representing the color composed of the given RGB components.
Returns a copy of this Map.
Returns a copy of this Set.
Returns a copy of this Vector.
Returns a description of the warmup status of the server.
Returns a human-readable string for the error encountered in the current exception.
Returns a human-readable string for the error encountered in this result.
Returns a key-value array of locale ID subtag elements.
Returns a lazy iterable view of this ImmMap.
Returns a lazy iterable view of this ImmSet.
Returns a lazy iterable view of this ImmVector.
Returns a lazy iterable view of this Map.
Returns a lazy iterable view of this Set.
Returns a lazy iterable view of this Vector.
Returns a lazy, access elements only when needed view of the current `Pair`.
Returns a list of the defined functions in the SoapServer object.
Returns a new Map of all the keys/values from this Map for which the specified callback returns true.
Returns a number formatted according to the given format string using the given integer timestamp or the current local time if no timestamp is given.
Returns a one-character string containing the character specified by ascii.
Returns a quoted printable string created according to  RFC2045, section 6.7.
Returns a single column from the next row of a result set or FALSE if there are no more rows.
Returns a string containing a binary representation of the given number argument.
Returns a string containing a hexadecimal representation of the given number argument.
Returns a string containing a month name.
Returns a string containing an octal representation of the given number argument.
Returns a string containing number represented in base tobase.
Returns a string containing the version of the currently running PHP parser or extension.
Returns a string containing the version of the currently running Zend Engine.
Returns a string for the absolute path to the current terminal device that is open on the file descriptor fd.
Returns a string formatted according to the given format string using the given integer timestamp or the current time if no timestamp is given.
Returns a string representation of this date, similar to the representation returned by microtime().
Returns a string representation of this regular expression.
Returns a string that has been properly escaped for safe inclusion in an SQL statement.
Returns a string with backslashes before characters that are listed in charlist parameter.
Returns a string with backslashes before characters that need to be quoted in database queries etc.
Returns a string with backslashes stripped off.
Returns a string with the first character of each word in str capitalized, if that character is alphabetic.
Returns a string with the first character of str , lowercased if that character is alphabetic.
Returns a string with the first character of str capitalized, if that character is alphabetic.
Returns a structure which contains information about which lines were executed in your script (including include files).
Returns a subset of the current `Pair` starting from a given key up to, but not including, the element at the provided length from the starting key.
Returns a text error message describing the given CURLM error code.
Returns all attributes with given key.
Returns all of haystack from the first occurrence of needle to the end.
Returns all of the IMAP alert messages generated since the last imap_alerts() call, or the beginning of the page.
Returns an ASCII string containing the binary representation of hexidecimal str.
Returns an ASCII string containing the hexadecimal representation of str.
Returns an EncodingMatch object containing the best guess for the encoding of the byte array.
Returns an ImmVector built from the keys of the specified container.
Returns an ImmVector built from the values produced by the specified Iterable.
Returns an ImmVector containing the specified range of values from this ImmVector.
Returns an Iterable produced by combining the specified Iterables pair-wise.
Returns an Iterable that produces the key/value Pairs from this ImmMap.
Returns an Iterable that produces the key/value Pairs from this Map.
Returns an Iterable that produces the keys from this ImmVector.
Returns an Iterable that produces the values from this ImmSet.
Returns an Iterable that produces the values from this ImmVector.
Returns an Iterable that produces the values from this Set.
Returns an Iterable that produces the values from this Vector.
Returns an `Awaitable` of `Map` after a filtering operation has been applied to each key and value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` after a filtering operation has been applied to each value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` after a mapping operation has been applied to each key and value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` containing after a mapping operation has been applied to each value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` of `ResultOrExceptionWrapper` after a filtering operation has been applied to each key/value pair in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` of `ResultOrExceptionWrapper` after a filtering operation has been applied to each value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` of `ResultOrExceptionWrapper` after a mapping operation has been applied to each key/value pair in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Map` of `ResultOrExceptionWrapper` after a mapping operation has been applied to each value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` after a filtering operation has been applied to each key and value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` after a filtering operation has been applied to each value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` after a mapping operation has been applied to each key and value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` containing after a mapping operation has been applied to each value in the provided `Traversable`.
Returns an `Awaitable` of `Vector` of `ResultOrExceptionWrapper` after a filtering operation has been applied to each key/value pair in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` of `ResultOrExceptionWrapper` after a filtering operation has been applied to each value in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` of `ResultOrExceptionWrapper` after a mapping operation has been applied to each key/value pair in the provided `KeyedTraversable`.
Returns an `Awaitable` of `Vector` of `ResultOrExceptionWrapper` after a mapping operation has been applied to each value in the provided `Traversable`.
Returns an `ImmVector` containing the first `n` values of the current `Pair`.
Returns an `ImmVector` containing the values after an operation has been applied to each key and value in the current `Pair`.
Returns an `ImmVector` containing the values after an operation has been applied to each value in the current `Pair`.
Returns an `ImmVector` containing the values after the `n`-th element of the current `Pair`.
Returns an `ImmVector` containing the values of the current `Pair` starting after and including the first value that produces `true` when passed to the specified callback.
Returns an `ImmVector` containing the values of the current `Pair` that meet a supplied condition applied to its keys and values.
Returns an `ImmVector` containing the values of the current `Pair` up to but not including the first value that produces `false` when passed to the specified callback.
Returns an `ImmVector` containing the values of the current `Pair`.
Returns an `ImmVector` that is the concatenation of the values of the current `Pair` and the values of the provided `Traversable`.
Returns an `ImmVector` where each element is a `Pair` that combines each element of the current `Pair` and the provided `Traversable`.
Returns an `ImmVector` with the values being the keys of the current `Pair`.
Returns an `Iterable` view of the current `Pair`.
Returns an `array` containing the values from the current `Pair`.
Returns an `array` whose values are the keys from the current `Pair`.
Returns an alternative, normalized version of the error message provided by mysql_error().
Returns an array built from the keys and values from this ImmMap.
Returns an array built from the keys and values from this Map.
Returns an array built from the keys from this ImmMap.
Returns an array built from the keys from this ImmVector.
Returns an array built from the keys from this Map.
Returns an array built from the keys from this Vector.
Returns an array built from the values from this ImmMap.
Returns an array built from the values from this ImmSet.
Returns an array built from the values from this ImmVector.
Returns an array built from the values from this Map.
Returns an array built from the values from this Set.
Returns an array built from the values from this Vector.
Returns an array containing all supported encodings.
Returns an array containing the key/value pairs from this MapLike
Returns an array containing the values from this ImmSet.
Returns an array containing the values from this VectorLike.
Returns an array of all open connections, and information about each of the servers
Returns an array of all the collection names for the given database.
Returns an array of files and directories from the directory.
Returns an array of information about all connection pools.
Returns an array of information about the given user.
Returns an array of information about the user referenced by the given user ID.
Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string delimiter.
Returns an array of the information that was used to generate the password hash.
Returns an array that corresponds to the fetched row, if available.
Returns an array where each element is a variable name which is defined in the current scope.
Returns an array which resembles the stack trace up to this point.
Returns an array whose values are this containers's keys.
Returns an array with LibXMLError objects if there are any errors in the buffer, or an empty array otherwise.
Returns an array with all keys from input lowercased or uppercased.
Returns an associative array containing localized numeric and monetary formatting information.
Returns an associative array containing the date information of the timestamp, or the current local time if no timestamp is given.
Returns an immutable set (`ImmSet`) with the values of the current `Pair`.
Returns an immutable vector (`ImmVector`) containing the elements of the current `Pair`.
Returns an immutable version of this collection.
Returns an immutable, integer-keyed map (`ImmMap`) based on the elements of the current `Pair`.
Returns an integer-keyed `Map` based on the elements of the current `Pair`.
Returns an iterator that points to beginning of the current `Pair`.
Returns an iterator that points to beginning of this ImmMap.
Returns an iterator that points to beginning of this ImmSet.
Returns an iterator that points to beginning of this ImmVector.
Returns an iterator that points to beginning of this Map.
Returns an iterator that points to beginning of this Set.
Returns an iterator that points to beginning of this Vector.
Returns an iterator that points to the beginning of this Container.
Returns base raised to the power of exp.
Returns buffer readden by stream_get_line
Returns code coverage data collected so far.
Returns date formatted according to given format.
Returns e raised to the power of arg.
Returns false and raises warning when called from global scope.
Returns full line (EOL found)
Returns incomplete line (End of file)
Returns index of the specified value if it is present, -1 otherwise.
Returns information about a current connection
Returns information about an existing stream.
Returns input repeated multiplier times.
Returns name of specialized helper
Returns new Awaitable that will produce the next (key, value) Pair, or null if the iteration has finished.
Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.
Returns part of haystack string from the first occurrence of needle to the end of haystack.
Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string The string for match is specified by mb_ereg_search_init().
Returns self::NEXT_COMPLETE if that one step got us to the next position (this changes depending on LEAVES_ONLY, SELF_FIRST, and CHILD_FIRST), or SELF::NEXT_REPEAT if more steps are needed.
Returns statistical information for the current pool.
Returns status of different server threads.
Returns status of the circular reference collector.
Returns str with all alphabetic characters converted to lowercase.
Returns str with all alphabetic characters converted to uppercase.
Returns string with all alphabetic characters converted to lowercase.
Returns string with all alphabetic characters converted to uppercase.
Returns string, reversed.
Returns the "sec" field of this timestamp.
Returns the ASCII value of the first character of string.
Returns the ID of the last inserted row, or the last value from a sequence object, depending on the underlying driver.
Returns the MySQL client statistics at the moment the connection was established.
Returns the MySQL client statistics at the moment the result was created.
Returns the MySQL client statistics at the moment the successful query ended.
Returns the MySQL client statistics for the events that produced the error.
Returns the MySQL error number for that caused the current exception.
Returns the MySQL error number for this result.
Returns the POSIX system error message associated with the given errno.
Returns the SQLite3 library version as a string constant and as a number.
Returns the Unix timestamp corresponding to midnight on Easter of the given year.
Returns the Unix timestamp corresponding to the arguments given.
Returns the `AsyncMysqlConnectResult` for the current connection.
Returns the `string` version of the current `Pair`, which is `"Pair"`.
Returns the absolute value of number.
Returns the actual rows returned by the successful query, each row including the name and typed-value for each column.
Returns the actual rows returned by the successful query, each row including the name and value for each column.
Returns the actual rows returned by the successful query, each row including the typed values for each column.
Returns the actual rows returned by the successful query, each row including the values for each column.
Returns the amount of memory, in bytes, that's currently being allocated to your PHP script.
Returns the arc cosine of arg in radians.
Returns the arc sine of arg in radians.
Returns the arc tangent of arg in radians.
Returns the argument list with the greatest possible number of arguments.
Returns the async operation status for a given mysql connection.
Returns the attribute node in namespace namespaceURI with local name localName for the current node.
Returns the attribute node with name name for the current element.
Returns the base-10 logarithm of arg.
Returns the best pattern matching the input skeleton.
Returns the combining class of the code point.
Returns the current amount of memory the script uses.
Returns the current buffer.
Returns the current configuration setting of magic_quotes_gpc  Keep in mind that attempting to set magic_quotes_gpc at runtime will not work.
Returns the current encoding for a multibyte regex as a string.
Returns the current input variable
Returns the current key that the iterator points to.
Returns the current output variable
Returns the current output variable.
Returns the current time index since the starting of the script in seconds.
Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).
Returns the current value that the iterator points to.
Returns the day of the week.
Returns the decimal equivalent of the binary number represented by the binary_string argument.
Returns the decimal equivalent of the hexadecimal number represented by the hex_string argument.
Returns the decimal equivalent of the octal number represented by the octal_string argument.
Returns the entry identifier for first entry in the result.
Returns the extension for the given IMAGETYPE_XXX constant.
Returns the filename of the next file from the directory.
Returns the first key from this ImmMap, or null if this ImmMap is empty.
Returns the first key from this ImmSet, or null if this ImmSet is empty.
Returns the first key from this ImmVector, or null if this ImmVector is empty.
Returns the first key from this Map, or null if this Map is empty.
Returns the first key from this Set, or null if this Vector is empty.
Returns the first key from this Vector, or null if this Vector is empty.
Returns the first key in the current `Pair`.
Returns the first value from this ImmMap, or null if this ImmMap is empty.
Returns the first value from this ImmSet, or null if this ImmSet is empty.
Returns the first value from this ImmVector, or null if this ImmVector is empty.
Returns the first value from this Map, or null if this Map is empty.
Returns the first value from this Set, or null if this Set is empty.
Returns the first value from this Vector, or null if this Vector is empty.
Returns the first value in the current `Pair`.
Returns the flags of the field (column).
Returns the floating point remainder of dividing the dividend (x) by the divisor (y).
Returns the general category value for the code point.
Returns the height of the given image resource.
Returns the hostname of the server the query was sent too.
Returns the hyperbolic sine of arg, defined as (exp(arg) - exp(-arg))/2.
Returns the hyperbolic tangent of arg, defined as sinh(arg)/cosh(arg).
Returns the image types supported by the current PHP installation.
Returns the index of the color in the palette of the image which is "closest" to the specified RGB value and alpha level.
Returns the index of the color in the palette of the image which is "closest" to the specified RGB value.
Returns the index of the color of the pixel at the specified location in the image specified by image.
Returns the index of the first element that matches the search value.
Returns the index of the specified color in the palette of the image.
Returns the integer value of var, using the specified base for the conversion (the default is base 10).
Returns the inverse hyperbolic cosine of arg, i.e. the value whose hyperbolic cosine is arg.
Returns the inverse hyperbolic sine of arg, i.e. the value whose hyperbolic sine is arg.
Returns the inverse hyperbolic tangent of arg, i.e. the value whose hyperbolic tangent is arg.
Returns the last key from this ImmMap, or null if this ImmMap is empty.
Returns the last key from this ImmSet, or null if this ImmSet is empty.
Returns the last key from this ImmVector, or null if this ImmVector is empty.
Returns the last key from this Map, or null if this Map is empty.
Returns the last key from this Set, or null if this Set is empty.
Returns the last key from this Vector, or null if this Vector is empty.
Returns the last key in the current `Pair`.
Returns the last value from this ImmMap, or null if this ImmMap is empty.
Returns the last value from this ImmSet, or null if this ImmSet is empty.
Returns the last value from this ImmVector, or null if this ImmVector is empty.
Returns the last value from this Map, or null if this Map is empty.
Returns the last value from this Set, or null if this Set is empty.
Returns the last value from this Vector, or null if this Vector is empty.
Returns the last value in the current `Pair`.
Returns the length of the first group of consecutive characters from mask found in subject.
Returns the length of the given string.
Returns the length of the initial segment of str1 which does not contain any of the characters in str2.
Returns the length of the written string, or FALSE on failure.
Returns the local or remote name of a given socket connection.
Returns the login name of the user owning the current process.
Returns the matched part of a multibyte regular expression.
Returns the maximum amount of memory the script used until now.
Returns the message sequence number for the given uid.
Returns the name of the column specified by the column_number.
Returns the name of the field (column).
Returns the name of the file which is used to save profile information to.
Returns the name of the file which is used to trace the output of this script too.
Returns the name of the timezone.
Returns the names and values of all the constants currently defined.
Returns the nesting level of the output buffering mechanism.
Returns the node having the specified key or null if the tree doesn't contain a node with the specified key.
Returns the number of colors in an image palette.
Returns the number of columns in the result set.
Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement.
Returns the number of days after March 21 on which Easter falls for a given year.
Returns the number of elements in this ImmSet.
Returns the number of elements in this VectorLike.
Returns the number of entries stored in the result of previous search operations.
Returns the number of errors generated during execution of the previous SQL statement.
Returns the number of fields (columns) associated with the current row block.
Returns the number of key/value pairs in the ImmMap.
Returns the number of key/value pairs in the Map.
Returns the number of key/value pairs in the MapLike.
Returns the number of parameters within the prepared statement.
Returns the number of rows in the current row block.
Returns the number of successfully executed queries.
Returns the number of the signal that caused the child process to terminate.
Returns the number of the signal which caused the child to stop.
Returns the number of values in the ImmSet.
Returns the number of values in the ImmVector.
Returns the number of values in the Set.
Returns the number of values in the Vector.
Returns the numeric position of the first occurrence of needle in the haystack string.
Returns the numeric position of the last occurrence of needle in the haystack string.
Returns the numeric result code of the most recent failed SQLite request.
Returns the path of the directory PHP stores temporary files in by default.
Returns the peak of memory, in bytes, that's been allocated to your PHP script since calling memory_start_usage_interval.
Returns the peak of memory, in bytes, that's been allocated to your PHP script.
Returns the pixel height of a character in the specified font.
Returns the pixel width of a character in font.
Returns the portion of string specified by the start and length parameters.
Returns the position of the file pointer referenced by handle.
Returns the process group identifier of the process pid or FALSE on failure.
Returns the required initialisation vector length for the cipher determined by the mode parameter.
Returns the result AND the converted key for further uses.
Returns the results that were fetched by the successful query statements.
Returns the return code of a terminated child.
Returns the rounded value of val to specified precision (number of digits after the decimal point).
Returns the row ID of the most recent INSERT into the database.
Returns the socket and port used.
Returns the specified substring.
Returns the square root of arg.
Returns the stack depth level.
Returns the standardized error number returned by the last LDAP command.
Returns the string error message explaining the error generated by the last LDAP command for the given link_identifier.
Returns the string error message explaining the error number errno.
Returns the system type identifier of the remote FTP server.
Returns the time that the current xbox thread has been running without a reset, in seconds, and throws for non-xbox threads.
Returns the time that the http server has been running.
Returns the timezone offset.
Returns the total memory, in bytes, that your PHP script has allocated.
Returns the type of the PHP variable var.
Returns the type of the column identified by column_number.
Returns the type of the field (column).
Returns the type of the given file.
Returns the underlying `AsyncMysqlErrorResult` associated with the current exception.
Returns the unix timestamp representing the date.
Returns the value at an index of an array.
Returns the value at the specified key in the current `Pair`.
Returns the value at the specified key.
Returns the value of the configuration option on success.
Returns the width of string str.
Returns the width of the given image resource.
Returns this pointer bound to closure.
Returns three samples representing the average system load (the number of processes in the system run queue) over the last 1, 5 and 15 minutes, respectively.
Returns timestamps of different request events.
Returns true if the ImmMap is empty, false otherwise.
Returns true if the ImmSet is empty, false otherwise.
Returns true if the ImmVector is empty, false otherwise.
Returns true if the Map is empty, false otherwise.
Returns true if the MapLike is empty, false otherwise.
Returns true if the Set is empty, false otherwise.
Returns true if the Vector is empty, false otherwise.
Returns true if the VectorLike is empty, false otherwise.
Returns true if the iterator points to a valid value, returns false otherwise.
Returns true if the specified key is present in the ImmMap, false otherwise.
Returns true if the specified key is present in the ImmVector, returns false otherwise.
Returns true if the specified key is present in the Map, false otherwise.
Returns true if the specified key is present in the Vector, returns false otherwise.
Returns true if the specified value is present in the ImmSet, returns false otherwise.
Returns true if the specified value is present in the Set, returns false otherwise.
Returns true if this constraint is satisfied in the current solution.
Returns true iff the given message is a stream.
Returns values from the 'items' parameter when they become actionable.
Returns whether a field (column) value is `null`.
Returns whether a given option is recognized at all.
Returns whether code coverage has been started.
Returns whether or not the current connection is reusable.
Returns whether or not the current connection reused the SSL session from another SSL connection.
Returns whether or not the current connection was established as SSL based on client flag exchanged during handshake.
Returns whether or not the value is defined as a constant.
Returns whether the (php) file could be included (eg if its been compiled into the binary).
Returns whether the state of interval tracking was changed.
Returns whether the type of failure that produced the exception was a general connection or query failure.
Returns whether the type of failure that produced the exception was a timeout.
Returns whether there is a remote debugger attached to the current request.
Returns whether there were any rows are returned in the current row block.
Returns whether this ReflectionClass represents an enum.
Returns zero if there was no previous query on the connection or if the query did not update an AUTO_INCREMENT value.
Reverse lookups can be generated using in-addr.arpa notation, but gethostbyaddr() is more suitable for the majority of reverse lookups.
Reverse prior op
Reverse sorter
Reverse the elements of this Vector in place.
Reverses the values of the Vector in place.
Revert all changes done to an entry with the given name.
Revert all global changes done in the archive.
Rewind all attached Iterator instances.
Rewind the Iterator to the first element.
Rewind the internal array pointer.
Rewrites the text for comparison
Right now (ICU 4.6), this API doesn't actually do anything, but let's at least verify it doesn't crash.
Right now Ctor's cannot be made protected when defined in a ctor.
Right now this is just an estimate since one test can have a bunch of different data sets sent to it via a data provider, making one test really into n tests.
RocksDB team forked this file from phabricator's /src/lint/linter/ArcanistCpplintLinter.php, and customized it for its own use.
Rolls back the current transaction, as initiated by PDO::beginTransaction().
Rotate left.
Rotate right.
Rotates the image image using the given angle in degrees.
Row numbers start at 0.
Rules for XHP names and guidelines for avoid ambiguities:  (1) An XHP name may not have a space between the initial ':' and the rest of the name.
Run all the frameworks, except the ones we listed.
Run an individual test case.
Run either for 1 second or for the number of iterations specified by minIterations, depending on the config flag doDeterministic.
Run from a command line or something, and redirect output to an html file.
Run it via './hhmeasure (or ./hhmeasure basic)'.
Run operation a few times before starting timer
Run selected tests.
Run tests in sandcastle
Run the actual command
Run the setup, the actual benchmark, and the tear down in three separate steps to allow the framework to yield between any of the steps.
Run the test
Run the test suite
Run time error would result since we will pass a string, not an int
Run with --help for help.
Run with native PS.
Running JavaScript in the database takes a write lock, meaning it blocks other operations.
Runs a destructor
Runs a single benchmark for at least a second and computes the average time it takes to run a single iteration.
Runs all registered benchmark suites and optionally yields between each individual benchmark to avoid running for too long in the context of browsers.
Runs this task, if it is ready to be run, and returns the next task to run.
SECOND CAPTURE
SEEK_CUR - Set position to current location plus offset.
SEEK_END - Set position to end-of-file plus offset.
SET URL AND OTHER OPTIONS
SIGINT handler that sends a dbgp break command.
SITE commands are not standardized, and vary from server to server.
SJIS string (BASE64 encoded)
SOA  mname: FQDN of the machine from which the resource records originated.
SOAP_PERSISTENCE_REQUEST - persist the object for the duration of a request.
SOAP_PERSISTENCE_SESSION - persist the object for the duration of a session.
SOCK_DGRAM Supports datagrams (connectionless, unreliable messages of a fixed maximum length).
SOCK_RAW Provides raw network protocol access.
SOCK_RDM Provides a reliable datagram layer that does not guarantee ordering.
SOMAXCONN may be passed as backlog parameter, see socket_listen() for more information.
SOME ITERATIONS
SORT_NUMERIC - compare items numerically
SORT_NUMERIC - compare items numerically 4.
SORT_REGULAR - compare items normally
SORT_REGULAR - compare items normally 3.
SORT_REGULAR is a global constant
SORT_STRING - compare items as strings
SQLITE3_BLOB: The value is a blob of data, stored exactly as it was input.
SQLITE3_FLOAT: The value is a floating point value, stored as an 8-byte IEEE floating point number.
SQLITE3_INTEGER: The value is a signed integer, stored in 1, 2, 3, 4, 6, or 8 bytes depending on the magnitude of the value.
SQLITE3_NULL: The value is a NULL value.
SQLITE3_OPEN_CREATE: Create the database if it does not exist.
SQLITE3_OPEN_READONLY: Open the database for reading only.
SQLITE3_OPEN_READWRITE: Open the database for reading and writing.
SQLITE3_TEXT: The value is a text string, stored using the database encoding (UTF-8, UTF-16BE or UTF-16-LE).
SRV  pri: (Priority) lowest priorities should be used first.
STDERR, which we just closed - shouldn't be rendered
STDOUT, which we just closed - shouldn't be rendered
STREAM_PEEK Retrieve data from the socket, but do not consume the buffer.
Safe for reading binary data.
Safe mode limitations are not taken into account.
Same again but disable grouping character
Same again but suppress currency symbol
Same again but use '(' for negative values
Same again but use a '*' for padding character
Same again but use a '0' for padding character
Same as Part 1 but: The return statment transports a copy of the value to return.
Same case with a scalar initializer
Same expression id as above
Same expression id as outside the switch
Same name as private in base class, different value
Same response format as stat().
Same tests as above but stdclass is internal - so all results should be false.
Same varient  values are used as string to be repeated as well as multiplier
Sandcastle machines don't have arc setup.
Sanitize a string to make sure it's legal UTF-8 by stripping off any characters that are not properly encoded.
Sanity check to ensure that pcre extension needed by this script is available.
Save ini data to file
Save the image
Save the image as 'simpletext.jpg'
Save the image as 'simpletext.png'
Save the interfaced image
Scala has also this feature, see point 2 in http://codemonkeyism.com/top-5-things-to-know-about-constructors-in-scala/ See also section 5.3 of the scala reference manual.
Scalar Argument
Scalar argument
Scalar types tests from HHJsonDecodeTest.php
Scalar value as filename
Scalar values are integer, float, string or boolean values.
Scalar variables are those containing an integer, float, string or boolean.
Scans the data from the given file pointer and extract each embedded uuencoded file into a temporary file.
Schedules a reset of the current xbox thread, when the next request comes in.
Scheduling is done by maintaining a list of task control blocks which holds tasks and the data queue they are processing.
Scientific type variations
Scores are not comparable across versions.
Search for email message on the mail server using imap.
Search for opcode handlers those are used by other opcode handlers
Search for the targets directories for the given files.
Search under current dir
Searches haystack for needle.
Searches subject for a match to the regular expression given in pattern.
Second character position is 1, and so on.
Second character position is 1.
Second object in array
Second time through, it is in fact a call to extract, so we better handle merging the new information into the ActRec properly.
Second, this means that any precision beyond milliseconds will be lost when the document is sent to/from the database.
See ArrayObject::setFlags().
See Exceptions for more information about Exceptions in PHP.
See IANA's Operating System Names for the meaning of these values.
See List of Supported Protocols/Wrappers for more information about wrappers and their wrapper data.
See List of Supported Protocols/Wrappers for more information about wrappers.
See List of Supported Socket Transports for a list of builtin transports.
See MongoClient::__construct() for more information.
See Phar file format documentation for more information.
See Redis::translateVarArgs()  The method (on this class) called to handle the response is named by the 'handler' field.
See RegexIterator::__construct() for an overview of available flags.
See SplFileObject constants for the available flags.
See above about fixing this.
See also Exceptions.
See also __CLASS__ object object  The current object.
See also __FILE__.
See also __FUNCTION__.
See also __LINE__.
See also an external in-depth tutorial titled Writing an OAuth Provider Service, which takes a hands-on approach to providing this service.
See also dns_get_mx().
See also posix_getpwuid() for information on how to convert this into a useable username.
See also the official MySQL Refresh documentation.
See chmod() for more information on modes and permissions.
See comments inline for explanation.
See context: https://github.com/facebook/hhvm/issues/3653
See converting from strings.
See enum class ThreadType.
See fopen() for a list of allowed modes.
See fopen() for more details on how to specify the filename.
See hphp/hhvm/fbmake_test_ext_wrapper.php.
See http://userguide.icu-project.org/strings/regexp
See https://github.com/facebook/hhvm/issues/6624.
See https://github.com/leafo/lessphp/pull/549
See if framework is already installed.
See if we are using an internal development build
See if we can actually load it.
See include_path for more information.
See mcrypt_module_open() for an example.
See next 2 tests.
See openssl_csr_new() for more information about configargs.
See openssl_seal() for more information.
See php.ini options for the transition option of quieting this exception.
See preg_match() for examples.
See socket_create() for the full list of supported protocols.
See socket_create() for the full list.
See stream_set_blocking().
See table below.
See test/typecheck/array_heterogeneous.php
See the "See also" section for available methods.
See the ArrayObject::setFlags method for a list of the available flags.
See the FilesystemIterator constants.
See the GNU General Public License for more details.
See the List of Supported Protocols/Wrappers for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.
See the Supported Protocols and Wrappers for links to information about what abilities the various wrappers have, notes on their usage, and information on any predefined variables they may provide.
See the description of these modes in htmlspecialchars().
See the example at the mysql_fetch_array() description about aliases.
See the example below for a better understanding.
See the example below for which statements provide information, and what the returned value may look like.
See the example below.
See the example of DOMImplementation::hasFeature() for a list of features.
See the examples below on how to set those options.
See the examples below.
See the fopen() documentation for descriptions of possible modes.
See the formatting options for the date() function.
See the help for the syntax on how to run the tests in each available mode.
See the notes under the installation section for more information.
See the query section of this manual for information on distributing reads to secondaries.
See utf8ize.php
See where internal pointer is after adding more elements
See xml_parser_set_option() for their description.
See your system's man execve(2) page for additional information.
Seeds the random number generator with seed or with a random value if no seed is given.
Seek and write a random byte
Seek to specific position in destination.
Seems that not all MySQL 6.0 installations use defaults that ignore the display widths.
Seems to work
Seems to work  /* try to redefine a user-defined constant
Segfault when using the DB class which extends mysqli
Segmentation fault
Select a previously unused mark value.
Send Email to QA Team
Send an SQL query to MySQL without fetching and buffering the result rows.
Send off builds to jenkins
Send response back to the client
Send subsequent passes to C2::__call
Send the signal sig to the process with the process identifier pid.
Send to pagelet multiple times to ensure the previously set locale does not linger into the next request.
Sends a SITE EXEC command request to the FTP server.
Sends a command to the xdebug server.
Sends a response to the client of the current request indicating an error.
Sends an ALLO command to the remote FTP server to allocate space for a file to be uploaded.
Sends an arbitrary command to the FTP server.
Sends an email.
Sends an xbox message and waits for response.
Sends email.
Sends the specified data through the socket.
Separate port.
Sequence counter pattern...
Serializable
Serialize data into a compact format that can be unserialized by fb_compact_unserialize().
Serialize data into a compact format that can be unserialized by fb_unserialize().
Serialize the handles and let them go.
Serialize this object to a string that can be used as a dictionary key to differentiate instances of this class.
Server Name Indication (SNI) tests  This test relies on https://sni.velox.ch/ and thus is disabled by default.
Server might not support column type - skip it
Server might not support it - skip
Server modules for Apache like mod_gzip may do buffering of their own that will cause flush() to not result in data being sent immediately to the client.
Server needs some think-time sometimes
Server should be within five seconds of client
Session data should not be written.
Session system variables are reset to the values of the corresponding global system variables.
SessionHandler a special class that can be used to expose the current internal PHP session save handler by inheritance.
Set Framework information for install.
Set HTTP output encoding to ASCII
Set HTTP output encoding to EUC-JP
Set HTTP output encoding to JIS
Set HTTP output encoding to SJIS
Set HTTP output encoding to UTF8
Set a callback function that is called when php tries to exit.
Set a callback function to be called whenever a function is entered or exited.
Set a date according to the ISO 8601  standard - using weeks and day offsets rather than specific dates.
Set a handler to be called when a namespace is declared.
Set a handler to be called when leaving the scope of a namespace declaration.
Set a new pattern.
Set a new symbol value.
Set always chooses capacities that are 3 times a power of two, so it will grow to a capacity of 48.
Set an element of an array by modifying the data pointer returned by zend_hash_find().
Set an element of an array passed by reference, by modifying the data pointer returned by zend_hash_find().
Set and test
Set behavior flags.
Set collation attribute.
Set collation strength.
Set detection order by array
Set detection order by enumerated list
Set do not support iteration while elements are being added or removed.
Set formatter attribute.
Set formatting symbol.
Set given collation strength, then get it back and check if it's the same.
Set hex format
Set internal_encoding to empty and try again
Set invalid encoding.
Set is an ordered set-style collection.
Set it to our own class
Set new attribute value.
Set new attribute's value and see if it works out.
Set new classname
Set new flags
Set order by array
Set order by string
Set order to "auto"
Set pattern used by the formatter  Valid only if the formatter is using pattern and is not rule-based.
Set security preferences.
Set the EG(error_reporting) value, returning the old value.
Set the alpha blending flag to use the bundled libgd layering effects.
Set the argument list to call the subject with.
Set the background to be red
Set the background to be white
Set the backgrund to be blue
Set the brush
Set the current active configuration setting of magic_quotes_runtime.
Set the default time zone
Set the effective group ID of the current process.
Set the flag so that the array keys can be used as properties
Set the iterator classname to the newly
Set the iterator position to index beyond the last character
Set the line thickness to 5
Set the list of arguments to be passed to the constructor
Set the list of function arguments to be one less that the number of mandatory arguments
Set the maximum allowed depth.
Set the names of the class constructor arguments.
Set the names of the mandatory and optional arguments to the method
Set the number of seconds a script is allowed to run.
Set the real group ID of the current process.
Set the real user ID of the current process.
Set the streams context for the next libxml document load or write
Set the token and secret for subsequent requests.
Set the type of the value.
Set the type of variable var to type.
Set the value of the global
Set the various assert() control options or just query their current settings.
Set this parameter to 0 when using UNIX domain sockets.
Set timezone
Set to '0' to loop continuously.
Set to -1 in the event of a timeout.
Set type of the data to "array" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to array type dump the variable to see its new data get the new type of the variable
Set type of the data to "bool"/"boolean" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to bool/boolean type dump the variable to see its new data get the new type of the variable
Set type of the data to "float"/"double" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to float/double type dump the variable to see its new data get the new type of the variable
Set type of the data to "int"/"integer" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to interger/int type dump the variable to see its new data get the new type of the variable
Set type of the data to "null" and verify using gettype Following are performed in the listed sequence: get the current type of the variable  set the type of the variable to "null type" dump the variable to see its new data get the new type of the variable
Set type of the data to "object" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to object type dump the variable to see its new data get the new type of the variable
Set type of the data to "resource" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to resource type dump the variable to see its new data get the new type of the variable
Set type of the data to "string" and verify using gettype Following are performed in the listed sequence: get the current type of the variable set the type of the variable to string type dump the variable to see its new data get the new type of the variable
Set up file
Set where the OAuth parameters should be passed.
Set/Get the HTTP output character encoding.
Set/Get the current language.
SetH calling __destruct()
SetM and CGetM with an object base on the stack
SetM with array base on the stack
SetOpProp: use __get
SetOpProp: use __set and __get
SetProp for visible, accessible properties
Sets a busy handler that will sleep until the database is not locked or the timeout is reached.
Sets a hard breakpoint.
Sets a parameter.
Sets an attribute on the database handle.
Sets an attribute on the statement.
Sets an attribute with name name to the given value.
Sets an attribute with namespace namespaceURI and name name to the given value.
Sets an option in an XML parser.
Sets blocking or non-blocking mode on a stream.
Sets do not have "copy-on-write" semantics.
Sets do not support taking elements by reference.
Sets if the current connection can be recycled without any clean up.
Sets locale information.
Sets of removed fields must be compatible
Sets only support integer values and string values.
Sets or fetches the imap timeout.
Sets preserve insertion order of the elements.
Sets retval to the value of the specified option.
Sets the Certificate Authority (CA), both for path and info.
Sets the Gregorian Calendar change date.
Sets the OAuth timestamp for subsequent requests.
Sets the OAuth version for subsequent requests
Sets the RSA certificate.
Sets the Request Engine, that will be sending the HTTP requests.
Sets the automatic character encoding detection order to encoding_list.
Sets the buffering for write operations on the given stream to buffer bytes.
Sets the calendar used to the appropriate calendar, which must be  one of the constants defined above.
Sets the character data handler function for the XML parser parser.
Sets the connection limit of all connection pools using this client.
Sets the consumer handler callback, which will later be called with OAuthProvider::callConsumerHandler().
Sets the default handler function for the XML parser parser.
Sets the element handler functions for the XML parser.
Sets the external entity reference handler function for the XML parser parser.
Sets the file position indicator for handle to the beginning of the file stream.
Sets the file position indicator for the file referenced by handle.
Sets the file to output profiling information when processing a stylesheet.
Sets the include_path configuration option for the duration of the script.
Sets the input byte array whose encoding is to be guessed.
Sets the interpolation method, setting an interpolation method effects the rendering of various functions in GD, such as the imagerotate() function.
Sets the max number of connections new pools will be able to create.
Sets the name of a field, eg "era" in English for ERA.
Sets the nonce for all subsequent requests.
Sets the permissions on the specified remote file to mode.
Sets the processing instruction (PI) handler function for the XML parser parser.
Sets the request tokens path.
Sets the string which will be used to indent each element/attribute of the resulting xml.
Sets the timeout (maximum duration), in seconds, of the current xbox thread.
Sets the timeout value on stream, expressed in the sum of seconds and microseconds.
Sets the timestamp nonce handler callback, which will later be called with OAuthProvider::callTimestampNonceHandler().
Sets the token handler callback, which will later be called with OAuthProvider::callTokenHandler().
Sets the transparent color in the given image.
Sets the value of one or more parameters to be used in subsequent transformations with XSLTProcessor.
Sets the value of the given configuration option.
Sets the value of the specified option to be newval.
Sets up data in order to skip or not the warmup phase.
Sets whether a client disconnect should cause a script to be aborted.
Setting a non-static key in nested shape-like array downgrades it to a map-like array.
Setting a non-static key in nested tuple-like array downgrades it to a vec-like array.
Setting a non-static key in shape-like array downgrades it to a map-like array.
Setting a non-static key in tuple-like array downgrades it to a vec-like array.
Setting an out-of range key in tuple-like array downgrades it to a vec-like array.
Setting certain environment variables may be a potential security breach.
Setting fields in a shape-like array with both string and class constants downgrades it to a map-like array.
Setting fields in a shape-like array with class constants from different classes downgrades it to a map-like array.
Setting new_cache_expire is of value only, if session.cache_limiter is set to a value different from nocache.
Setting this parameter to -1 disables automatic retry.
Setting this parameter to FALSE and retry_interval to -1 allows a failed server to be kept in the pool so as not to affect the key distribution algorithm.
Setting this to 0 means no limit.
Setting this to true will force YAMLDump to enclose any string value in quotes.
Setting this to true will force YAMLLoad to use syck_load function when possible.
Setting this value to a value less than or equal to zero, will turn off an already set timeout handler.
Setting to FALSE (the default) will do the opposite.
Setup internal transliterator object
Setup socket server
Several PCRE modifiers are also available, including the deprecated 'e' (PREG_REPLACE_EVAL), which is specific to this function.
Several of the above functions can affect the variable environment of the their caller.
Several servers, especially on Win32, will still buffer the output from your script until it terminates before transmitting the results to the browser.
Shape field types in dynamically set nested positions are not overwritten, but grow.
Shape unification
Shape with unknown fields cannot be a subtype of a shape with known fields
Shape-like array inference algorithm is best-effort, and it's fairly easy to confuse it to give up and treat array as map-like, even when it was not the developer intention.
Shape-like arrays are subtypes of all the special interfaces that arrays are too.
Shape-like arrays preserve element types - usage that should report errors.
Shape-like arrays preserve element types - usage with no errors.
Shape-like arrays preserve element types when used with class constants - usage that should report errors.
Shape-like arrays preserve element types when used with class constants - usage with no errors.
Shape-like arrays remember key types
Shift a negative value right and left
Shift a negative value right and left using both in- and out-of-range counts
Shift a positive value right and left
Shift a positive value right and left using both in- and out-of-range counts
Shift all kinds of scalar values to see which are ints or can be implicirly converted
Shift_JIS SJIS, 932 Japanese EUC-JP EUCJP Japanese Any other character sets are not recognized and ISO-8859-1 will be used instead.
Short-style arguments
Shortcut for root-level values.
Should Issue Needs Rehash, Since Foo is cast to 0...
Should also include inherited properties from B.
Should be 2.x seconds
Should be fine
Should be int(2)
Should be ok.
Should be optimized.
Should be the end
Should be unresolved of those two afterwards.
Should catch these undefined methods here, but task 333319 is blocking their being caught.
Should cause a Server warning but no error
Should check this in nonstrict mode
Should dispatch to A::whoami2 but maintain the current "static" class.
Should fail
Should fail because bool constants not allowed
Should fail because it doesn't match
Should fail because the TLSv1.1 hello method is not supported
Should fail because the TLSv1.2 hello method is not supported
Should fail because the bool const is bogus
Should fail for mixing class const and string literal
Should fail for mixing int and string class consts
Should fail for using a non int/string key
Should fail.
Should find both
Should finish without errors
Should match
Should not be affected
Should not be found
Should not find
Should not match
Should only be needed when request parameters are being manipulated, such as in unit tests.
Should only have 'foo'
Should produce warning
Should reject this because it uses two classes
Should return error message when passed character count.
Should see the values printed after Done is printed.
Should still be able to recover and respond to a request over the port on a new TCP connection.
Should succeed because the SSLv23 handshake here is compatible with the TLSv1 hello method employed in the server
Should succeed because we use the same TLSv1 hello
Should succeed with CA file specified in context
Should succeed with peer verification disabled in context
Should throw a warning as extract expects NO arguments
Should throw a warning as seek expects only 1 argument
Should throw a warning as setExtractFlags expects only 1 argument
Should throw a warning as setPrefixPart expects 2 arguments
Should throw a warning as setPrefixPart expects argument 1 to be long integer
Should throw a warning as setPrefixPart expects argument 2 to be a string
Should work.
Shouldn't be displayed
Shouldn't be optimized, don't support the first arg being a string yet.
Shouldn't be optimized, types don't match.
Shouldn't have void as an argument type
Show file or result block
Show that after the first run we're returning the cached result
Show that we are using custom credentials
Show the error.
Show us all of file2.
Shows 42 correctly.
Shuffles the values of the Vector randomly in place.
Shutdowns (partially or not) a full-duplex connection.
Signals a process (created using proc_open()) that it should terminate.
Signifies we have provide a session handler
Silence the Naming phase errors so we see the unification error
Similar case, but for a builtin (array_multisort).
Similar error message to ereg().
Similar to Collator::sort().
Similar to collator_sort().
Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.
Similar to nested_vm_exceptions, except throw intercepted functions into it also.
Similar to reading entries, attributes are also read one by one from a particular entry.
Similar to soundex() metaphone creates the same key for similar sounding words.
Similar to the Unix C unlink() function.
Similarly to Memcache::increment(), current value of the item is being converted to numerical and after that value is substracted.
Similarly, it is often necessary to make a series of changes and to ensure that they all are possible before making any changes on disk, similar to the relational database concept of transactions.
Simlar to apc_store() but TTL is always 0 and there is TTL cap applied.
Simple User definition
Simple callback function
Simple class method callback
Simple class with more than one member variables
Simple class with more than one property
Simple class with single member variable
Simple class with single property
Simple float array
Simple framework for running the benchmark suites and computing a score based on the timing measurements.
Simple language subtag
Simple resources can be of the following typos: string, integer, binary data field or integer array.
Simple string
Simple strings
Simple syntax
SimpleFunctionCall
Simplified Chinese (HK-GB-2312)
Simply list all characters that you want to be stripped.
Simulates opendir() and readdir() and rewinddir() using an array.
Since I get all the tests of a framework by foreaching over the frameworks vector, and then append those tests to a tests vector and then foreach the test vector to bucketize them, this will allow us to basically run the framework tests alphabetically.
Since PHP 5.1.0 (when the date/time functions were rewritten), every call to a date/time function will generate a E_NOTICE if the timezone isn't valid, and/or a E_WARNING message if using the system settings or the TZ environment variable.
Since PHP 5.1.0 you don't need to do this because PHP will do it for you.
Since PHP 5.4 only.
Since PHP does not provide raw POST/COOKIE data, it can only be used for GET data for now.
Since T cannot be overridden by sub-classes, we can pass in an int
Since information about the columns is not always available to PDO until the statement is executed, portable applications should call this function after PDOStatement::execute().
Since minor version can change frequently, just test the major version
Since parameter type check is performed before detecting invocation of non-static method from a static context, the error message differs.
Since that must happen only once the return value should be equal.
Since the user didn't respect the valid() return value false this must be intended hence we go on.
Since this is a failed result wrapper, this always returns `false`.
Since this is a failed result wrapper, this always returns `true`.
Since this is a failed result wrapper, this always returns the exception thrown during the `Awaitable` operation.
Since this is a successful result wrapper, this always returns `false`.
Since this is a successful result wrapper, this always returns `true`.
Since this is a successful result wrapper, this always returns an `InvariantException` saying that there was no exception thrown from the `Awaitable` operation.
Since this is a successful result wrapper, this always returns the actual result of the `Awaitable` operation.
Since we know the exact type in this case, we use the assigned type.
Since we read in the environment variable on request init and we are changing default values only, we have to start a new process to test this
Since xdebug writes profiling results on request shutdown, we have to manually run a php process to test profiling output results
Single Argument
Single args
Single char
Single option
Single quoted strings
Sizeof() has been tested for simple integer, string, indexed and mixed arrays.
Skip duplicate commutative handlers
Skip empty servers
Skip issues not part of the linted file.
Skip useless constant handlers
Sleep 0.1s  to ensure the KILL gets recognized
Sleep 0.1s - the asynchronous query should have been processed after the wait period
Sleep for a while
Slow enough that incorrect stepping will time out.
Small utilities for wrapping tests to put output into fbmake.
Snapshot mode assures no duplicates are returned, or objects missed, which were present at both the start and end of the query's execution (if an object is new during the query, or deleted during the query, it may or may not be returned, even with snapshot mode).
So `slice(0, 2)` would return the elements at key 0 and 1 (all of the current `Pair` elements).
So avoiding that if we test with PHP 5.x
So check for both and do the right thing
So for example, both "MMM-dd" and "d/MMM" produce the skeleton "MMMd" (notice the single d).
So found and used a sorted iterator class and sorted by the full path including file name.
So if you have a word that is larger than the given width, it is broken apart.
So in this case we want to write PNG but file should come out as JPEG
So it is easier to keep tabs on our progress when running ps or something.
So it is equivalent to reading an entry from the directory.
So should trailing whitespace
So the first element is 1, the second 2, etc.
So the first element is 1, the second 2.
So the performance impact on a `Pair` will be not be noticeable in the real world.
So this destructor should not run.
So we bail the run.
So we don't check for the value, only for type (which must be type string)
So, if that is the case, use this script to mark any files as binary that are not ASCII.
So, if you call file_exists() on a file that doesn't exist, it will return FALSE until you create the file.
So...save the current position.
Some Invalid Tags:
Some arguments are literals.
Some cases, the server can deny the session that was set and the handshake will create a new one, in those cases this function will return `false`.
Some control flow within a catch block.
Some countries did not accept it until much later.
Some database servers support stored procedures that return more than one rowset (also known as a result set).
Some databases, including MySQL, automatically issue an implicit COMMIT when a database definition language (DDL) statement such as DROP TABLE or CREATE TABLE is issued within a transaction.
Some directory server hosts will be configured to return no more than a preset number of entries.
Some drivers have driver specific options that may be set at prepare-time.
Some drivers support the invocation of stored procedures that return data as output parameters, and some also as input/output parameters that both send in data and are updated to receive it.
Some encoding
Some engines and/or MySQL server versions might not support the data type
Some examples:
Some languages have more than one form for plural messages dependent on the count.
Some more typical cases
Some nice class.
Some objects
Some of the parameters actually passed to charset will request to use a default charset determined by the platform.
Some of them map to two unicode code points, not one.
Some operating systems support more than one type of hash.
Some parts have been translated directly, whereas others have been modified more aggresively to make it feel more like a JavaScript program.
Some possible uses for meta-data include passing a user/group that should be set when a file is extracted from the phar to disk.
Some versions of Microsoft Internet Explorer will only start to display the page after they have received 256 bytes of output, so you may need to send extra whitespace before flushing to get those browsers to display the page.
Some wrong parameters, no HTTP_USER_AGENT set
Sometime differential does not like some of the files that are included.
Sometimes not needed.
Sometimes people pass objects without a __toString() defined as an arg, which causes a fatal.
Sometimes the message is the same, depending on if there was an explicit normalized string provided by the MySQL client.
Sometimes when PHPUnit is done printing its post test info, hhvm fatals.
Somewhere in the middle
Sooner or later they will be moved to c-code.
Sort a non-ASCII array using ru_RU locale.
Sort an array in SORT_REGULAR mode using en_US locale.
Sort an array in SORT_STRING mode using en_US locale.
Sort an array using Lithuanian locale.
Sort and print the resulting array
Sort array maintaining index association.
Sort array using specified collator.
Sort array values
Sort array.
Sort arrays in the given list using specified locale.
Sort arrays using various locales.
Sort associative arrays using various locales.
Sort given array and the first copy of it.
Sort in en_US locale with SORT_STRING flag
Sort interfaces so that tests do not fail because of wrong order.
Sort the array and the first copy.
Sort the entries by key using user defined function.
Sort the entries by key.
Sort the entries by values using "natural order" algorithm.
Sort the entries by values using case insensitive "natural order" algorithm.
Sort the entries by values using user defined function.
Sort the entries by values.
Sort various arrays in specified locale.
Sorts an array by key in reverse order, maintaining key to data correlations.
Sorts an array by key, maintaining key to data correlations.
Soundex keys have the property that words pronounced similarly produce the same soundex key, and can thus be used to simplify searches in databases where you know the pronunciation but not the spelling.
Source Code: ext/standard/array.c
Source code : ext/session/session.c
Source code: Zend/zend_builtin_functions.c
Source code: Zend/zend_builtin_functions.c Alias to functions:
Source code: ext/curl/interface.c
Source code: ext/date/php_date.c
Source code: ext/date/php_date.c Alias to functions:
Source code: ext/date/php_date.c Alias to functions: DateTime::setDate
Source code: ext/date/php_date.c Alias to functions: DateTime::setISODate
Source code: ext/date/php_date.c Alias to functions: DateTime::setTime
Source code: ext/date/php_date.c Alias to functions: date_date_set
Source code: ext/date/php_date.c Alias to functions: date_date_set()
Source code: ext/date/php_date.c Alias to functions: date_isodate_set
Source code: ext/date/php_date.c Alias to functions: date_time_set
Source code: ext/date/php_date.c Alias to functions: public DateTime DateTime::modify()
Source code: ext/date/php_date.c Alias to functions: public date_modify()
Source code: ext/fileinfo/fileinfo.c Alias to functions:
Source code: ext/imap/php_imap.c
Source code: ext/imap/php_imap.c Alias to functions:
Source code: ext/mbstring/php_mbregex.c
Source code: ext/pcre/php_pcre.c Alias to functions:
Source code: ext/posix/posix.c Alias to functions:
Source code: ext/posix/posix.c Alias to functions: posix_errno
Source code: ext/spl/spl_array.c Alias to functions:
Source code: ext/standard/array.c
Source code: ext/standard/array.c Alias to functions:
Source code: ext/standard/basic_functions.c
Source code: ext/standard/basic_functions.c Alias to functions: count()
Source code: ext/standard/browscap.c Alias to functions:
Source code: ext/standard/data/php_date.c
Source code: ext/standard/dns.c Alias to functions:
Source code: ext/standard/exec.c
Source code: ext/standard/exec.c Alias to functions:
Source code: ext/standard/formatted_print.c
Source code: ext/standard/http.c
Source code: ext/standard/image.c Alias to functions:
Source code: ext/standard/mail.c
Source code: ext/standard/math.c
Source code: ext/standard/pageinfo.c Alias to functions:
Source code: ext/standard/rand.c
Source code: ext/standard/string.c
Source code: ext/standard/string.c Alias to functions: none
Source code: ext/standard/uniqid.c
Source code: ext/xml/xml.c Alias to functions:
Source:        ext/curl/interface.c Documentation: http://wiki.php.net/qa/temp/ext/curl
Special case for ints
Special case varargs
Special characters can be encoded in several ways.
Special chars
Special chars white space chars
Special function used by FPushCuf* when its argument is not callable.
Special handling of a few types.
Special values for locales can be passed in - if null is passed for the locale, the default locale collation rules will be used.
Specialcasing of equality for hack collections.
Specialcasing of inequality for hack collections.
Specializing
Specifically, fatals vs.
Specifically, the relative formats supported by the parser used for strtotime() and DateTime will be used to construct the DateInterval.
Specifically, we want to ensure that an exception handler executing at the same stack depth in one continuation isn't seen as flow control for a step operation in a different continuation at that depth.
Specifies a substitution character when input character encoding is invalid or character code does not exist in output character encoding.
Specify a map containing autoload data.
Specify encoding_list character encoding by comma separated list
Specify the set of checks that will be performed by the check function.
Specify with a combination of following options.
Specifying -1 as the pid is equivalent to the functionality pcntl_wait() provides (minus options).
Specifying the socket parameter will not explicitly determine the type of connection to be used when connecting to the MySQL server.
SplMaxHeap emtpy
SplMaxHeap non-emtpy
SplMinHeap emtpy
SplMinHeap non-emtpy
SplObjectStorage::offsetExists() is an alias of SplObjectStorage::contains().
SplObjectStorage::offsetSet() is an alias of SplObjectStorage::attach().
SplObjectStorage::offsetUnset() is an alias of SplObjectStorage::detach().
SplPriorityQueue empty
SplPriorityQueue non-empty
SplPriorityQueue::EXTR_DATA (0x00000001): Extract the data SplPriorityQueue::EXTR_PRIORITY (0x00000002): Extract the priority SplPriorityQueue::EXTR_BOTH (0x00000003): Extract an array containing both  The default mode is SplPriorityQueue::EXTR_DATA.
SplQueue::dequeue() is an alias of SplDoublyLinkedList::shift().
SplQueue::enqueue() is an alias of SplDoublyLinkedList::push().
Splat unpacked and repacked
Splat unpacking and repacking with new args
Splay on the key to move the last node on the search path for the key to the root of the tree.
Splay on the key to move the node with the given key or the last node on the search path to the top of the tree.
Splay to make sure that the new root has an empty right child.
Splice this Vector in place.
Splices the values of the Vector in place (see the documentation for array_splice() on php.net for more details.
Splits the DN returned by ldap_get_dn() and breaks it up into its component parts.
Ssnv test 16-bit shorts
Staring from 0.
Start a child element
Start a user buffer
Start actual test
Start at the base of the array and move through it.
Start from self and work down tree.
Start out running the setup.
Start the FILE section of the test
Start the listening socket.
Start the test
Start the timer.
Start tracing function calls from this point to the file in the trace_file parameter.
Start with a default map of values for the pattern to make the parsing for the math simpler.
Starting from PHP 5, the input encoding is automatically detected, so that the encoding parameter specifies only the output encoding.
Starts a CDATA.
Starts a DTD attribute list.
Starts a DTD element.
Starts a DTD entity.
Starts a DTD.
Starts a client.
Starts a comment.
Starts a document.
Starts a local xbox task.
Starts a namespaced attribute.
Starts a namespaced element.
Starts a processing instruction tag.
Starts an artificial frame.
Starts an attribute.
Starts an element.
Starts per-interval usage tracking to allow peak usage to be tracked with more granularity than a per-script basis.
Starts sampling based xhprof profiling.
Starts xhprof network I/O profiling.
Starts xhprof profiling.
Statements that are not listed will return FALSE.
Static Methods
Static Properties
Static and instance array using class constants
Static and instance array using class constants with parent
Static and instance array using class constants with self
Static and instance array using class constants with self (constants should be inherited)
Static class members will not be shown.
Static functions shouldn't care about the parent class
Static methods
Static strings
StaticMember
Stay constraints do nothing
Stay optimization
Stemmed from https://github.com/facebook/hhvm/issues/2082
Stemmed from https://github.com/facebook/hhvm/issues/4505
Stemmed from https://github.com/facebook/hhvm/issues/5025
Stems from https://github.com/facebook/hhvm/issues/4892
Step 1: Find the two points with the min and max x positions.
Step 2: Use the line between the two points to divide the remaining points into two sets, one for each side of the line.
Step 3: Find the point that is farthest from the dividing line.
Step 4: Filter out all points inside the triangle formed by the new point.
Step 5: Using the two new lines, recursively create triangles to filter points until there are no more left.
Step out from this line will cause us to handle an iternext, with a fall-thru destination of the first opcode of the line after the foreach in main().
Stepping into/over/out of throws, catches, stepping over calls that have throw/catch within, etc.
Stick this in a trait, so we get different copies for different data.
Stick to basics
Stop the timer.
Stop tracing function calls and closes the trace file.
Stops per-interval usage tracking to allow peak usage to be tracked with more granularity than a per-script basis.
Store parameters
Stores a value into the Map with the specified key, overwriting any previous value that was associated with the key.
Stores a value into the Vector with the specified key, overwriting the previous value associated with the key.
Stores each value produced by the specified KeyedIterable into the Map using its corresponding key, overwriting any previous value that was associated with that key.
Straight unpacking and repacking (or transferrence)
Streams data from the source file pointer, apply encoding and write to the destination file pointer.
Strength constants.
Strengths are used to measure the relative importance of constraints.
Strengths cannot be created outside this class, so pointer comparison can be used for value comparison.
Strict SQL mode - 1366, Incorrect integer value: 'true' for column 'label' at row 1
Strictly speaking we should test more: character_set_client, character_set_results, and character_set_connection
String URLs will create a default cURL GET handle.
String argument
String array with default keys
String assert
String is static
String keys
String to parse
String type variations
String with control chars
String with curly braces, complex syntax
String with embedded NULL
String with escape characters
String with international characters
String with null character
String with quotes
String with special chars
String, Array and Object are accepted.
Strings and integers are stored as is, other types are stored serialized.
Strings, integers and binary data strings are returned as corresponding PHP types, integer array is returned as PHP array.
Strip out comments
Strip spaces, then look for the : separator
Strip whitespace (or other characters) from the beginning of a string.
Structural subtyping of ad-hoc shapes
Structural subtyping of ad-hoc shapes in presence of optional fields
Structural subtyping of declared shapes
Structural subtyping of declared shapes in presence of optional fields
Subclasses may provide richer functionality.
Subscribe to a new mailbox.
Subsecond accuracy is supported.
Subsequent calls to fread() or stream_socket_recvfrom() will see the same data.
Successive calls to the ldap_next_entry() return entries one by one till there are no more entries.
Suites of benchmarks consist of a name and the set of benchmarks in addition to the reference timing that the final score will be based on.
Summarize results
Superglobals are JIT, phpdbg will not over-write whatever you set during bootstrap
Support for ZEND_USER_OPCODE
Support mashed together short flags.
Supported calendar values are CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH and CAL_FRENCH.
Supported calendars are CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH and CAL_FRENCH.
Supported charsets Charset Aliases Description ISO-8859-1 ISO8859-1 Western European, Latin-1 ISO-8859-15 ISO8859-15 Western European, Latin-9.
Supported target encodings are ISO-8859-1, US-ASCII and UTF-8.
Supports XPath 1.0
Supports non-negative indexes only.
Suppose now that we have a more general case, where we don't know which collection (or even which database) contains the referenced document.
Suppress constant with constant comparison warnings on windows
Suppress free_op1 warnings on Windows
Suppress recording of internal error recording to save memory.
Suppress warning messages.
Suppress warnings
Surprise flags are checked on backward branch.
Surprise flags are checked on function entry.
Suspend the currently executing task and return the next task control block to run.
Suspends execution of the current process until a child as specified by the pid argument has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function.
Suspicious "behavior" PHP5 32, allowed quietly, but does not change the original argument PHP5 64  allowed with warning "PHP Strict standards:  Only variables should be passed by reference", but does not change the original argument HHVM, allowed quietly, but does not change the original argument
Swap unix:// to file:// for parse_url usage like pecl does, if found
Switch on implicit flushing.
SystemLib defines the HHAS fast-path for array_map() as taking two args.
TCP and UDP are common protocols of this protocol family.
TCP guarantees that all data packets will be received in the order in which they were sent.
TEST: Complex path
TEST: async handle
TEST: basic ref count
TEST: dynamic props
TEST: map with int and string keys (Mixed)
TEST: multiple ref counted arrays
TEST: multiple ref counted nested arrays
TEST: multiple ref counted strings
TEST: nullifying variables removes their tracking
TEST: set with int and string keys
TEST: simple props
TEST: sizes of arrays
TEST: sizes of classes (including private props)
TEST: sizes of dynamic props
TEST: tracking works when enabled and not when disabled
TEST: vector with int and string vals (Packed)
THE MALFORMED ARRAY
THEY ARE FOR THE STREAM WRAPPER.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
THIS TEST ISN'T ENTIRELY CORRECT.
TIFF intel byte order
TODO - determine this from SVN branche name
TODO - more report testing should go in here, but it's not really documented what behaviour is expected
TODO - read only PDO::ATTR_CONNECTION_STATUS PDO::ATTR_SERVER_INFO
TODO Areas for future improvement: - Key the cache by endpoint/hhconfig location, so that we correctly support more than one project per HHVM instance.
TODO I think we should bail out here.
TODO I'm using the procedural interface, this should not throw an exception.
TODO Once we have PS open working beef up this test to create a process and kill it for now start at a low pid and find first pid which does not exist.
TODO Unfortunately different server versions give you slightly different results.The test_mysqli_fetch_field_flags_table_1 does not yet fully reflect all server changes/bugs etc.
TODO getAttribute() does not handle it
TODO getAttribute() is pretty poor in supporting the options, suppress errors
TODO make this test not cause an exception (address leading and trailing commas
TODO move this to a expectf if we can
TODO no_index_used - difficult to simulate because server/engine dependent bad_index_used - difficult to simulate because server/engine dependent flushed_normal_sets flushed_ps_sets explicit_close implicit_close disconnect_close in_middle_of_command_close explicit_free_result implicit_free_result explicit_stmt_close implicit_stmt_close
TODO test something that will throw, make sure stack materialization worked.
TODO the results look wrong, why do we get 2014 with buffered AND unbuffered queries
TODO(4017519) PHP5 doesn't have this destructor, we have it to prevent a nasty issue with destructing IntlUConverter.
TODO(glevi): This should error as soon as we remove that hack that says a Generator is Awaitable
TODO(kaili) a quick and dirty way to figure out rocksdb's root dir.
TODO(t5921532) Add tests for ar_AE once icu has been updated to 53.1 or newer
TODO: Add more encoding, strings.....
TODO: Add more encoding.
TODO: Add more encodings
TODO: Do real test EUC-JP
TODO: Fix this to use ZendParamMode when it is available See D1359972 for context
TODO: HHVM currently does not support yield from (or yield) as expressions.
TODO: HHVM doesn't support returning from a finally block, which `gen1` was testing.
TODO: Implement configuraiton file
TODO: Not enough info
TODO: Refactor Node so that it doesn't store the weight internally.
TODO: This is not a real test....
TODO: Workaround for large parameter list pending ActRec aPI
TODO: add proper codes
TODO: add sanity check and test if all required DLLs are present, per version  This version works at least for 3.6, 3.8 and 4.0 (5.3-vc6, 5.3-vc9 and HEAD).
TODO: add toImmMap() once it exists.
TODO: doesn't pass on ICU 3.6 because 'ru' and 'de' locales changed currency and percent formatting.
TODO: doesn't pass on ICU 3.6 because 'ru' and 'uk' locales changed currency formatting.
TODO: figure out better way to signal "specialized and not defined" than an extra lookup
TODO: find exact version
TODO: no way to check ATTR_TIMEOUT settings
TODO: remove this test after fix and enable the BIT test in pdo_mysql_types.phpt again
TODO: safe mode
TODO: should give a warning, but its PDO, let's ignore the missing warning for now
TODO: test more options
TODO: there's ReflectionClass::newInstance
TODO: this will need a hopt to enable throw
TRUE indicates that a field should be returned, FALSE indicates that it should not be returned.
TXT txt: Arbitrary string data associated with this record.
TYPE_DOUBLE is used by default.
TYPICAL FOREACH
Tags that use extensions (examples ONLY: extensions MUST be defined by revision or update to this document or by RFC):
Tahiti time
Tailable means cursor is not closed when the last data is retrieved.
Take only mandatory argument names.
Take out strings sequences and mappings
Taken from pow-operator PHP RFC (see https://wiki.php.net/rfc/pow-operator)
Takes 3 args, the function name, the mode (enter or exit), and an array describing the frame.
Takes a raw or base64 encoded string and decrypts it using a given method and key.
Takes a source file and outputs HTML source highlighting showing the number of hits on each line, highlights un-executed lines in red
Takes a well-formed XML string and returns it as an object.
Takes an input array and returns a new array with the order of the elements reversed.
Takes an input array and returns a new array without duplicate values.
Takes the filepointer, handle, and truncates the file to length, size.
Tallies a number for server stats.
Target: Append to array
Target: Integer array keys
Target: Non-static properties
Target: Static properties
Tells whether a file exists and is readable.
Tells whether namespaceURI is the default namespace.
Tells whether the filename is executable.
Tells whether the given file is a regular file.
Tells whether the given file is a symbolic link.
Tells whether the given filename is a directory.
Temporarily binds the closure to newthis, and calls it with any given parameters.
Temporary tables should be dropped
Test AKempty promotion affecting an array inside a collection
Test AKempty promotion affecting an array inside a collection with intermediate assignment
Test AKempty promotion if assignment happens inside an expression, not on statement level.
Test AKempty promotion in double-nested collection
Test AKempty promotion in double-nested collection with intermediate assignment
Test AKempty to AKvec upgrade when inside a nested type
Test AKempty to AKvec upgrade when inside typevar and unresolved type
Test Basic Functionality of iconv_substr with ASCII characters and multibyte strings.
Test Basic Functionality of mb_ereg_replace()
Test Basic Functionality of mb_substr with ASCII characters and multibyte strings.
Test Basic functionality of iconv_get_encoding/iconv_set_encoding
Test Basic functionality of mb_regex_encoding
Test Basic functionality of mb_substr_count
Test Bcrypt Cost
Test Bcrypt Invalid Length
Test Error functionality of iconv_get_encoding
Test ICU specific (ie bidi) functionality.
Test IDN functions (procedural only)
Test ImmMap's PHP-accessible public methods.
Test ImmMap's materialization methods.
Test ImmSet's methods.
Test Inheritence
Test Non-Bcrypt
Test Vectors from RFC 2104
Test a case where unset is supposed to define an uninitialized property.
Test a change in flags, there's only one class constant so it has to be another int value
Test acos with a different input values
Test acosh with a different input values
Test adding elements in various configurations
Test addslashes() with non-string type argument such as int, float, etc
Test addslashes() with various strings containing characters thats can be backslashed
Test all frameworks
Test all kinds of scalar values to see which are ints or can be implicitly converted
Test all listed encoding types from php.net to check all are known to function NB: The strings passed are *NOT* necessarily encoded in the encoding passed to the function.
Test array-like access.
Test array-like iteration for ImmVector.
Test array_change_key_case() when: 1.
Test array_combine with one more than the expected number of arguments
Test array_count_values with integer arguments
Test array_count_values with one more than the expected number of arguments
Test array_diff with less than the expected number of arguments
Test array_diff() with associative arrays containing different data types as values
Test array_diff_uassoc with one more than the expected number of arguments
Test array_diff_ukey with one more than the expected number of arguments
Test array_intersect_uassoc with one more than the expected number of arguments
Test array_intersect_ukey with one more than the expected number of arguments
Test array_key_exists with one more than the expected number of arguments
Test array_key_exists() for ImmVector.
Test array_map() by passing anoymous callback function with following variations
Test array_map() by passing array having different size 1) first array as empty array 2) second array as empty array 3) second array shorter than first array 4) first array shorter than second array 5) one more array than callback function arguments
Test array_map() by passing array having different subarrays
Test array_map() by passing buit-in function as callback function
Test array_map() by passing different callback function returning: int, string, bool, null values
Test array_map() by passing non-permmited built-in functions and language constructs i.e. echo(), array(), empty(), eval(), exit(), isset(), list(), print()
Test array_map() by passing subarrays and recursive callback function
Test array_map() with a pass-by-value callback forced to behave as a pass-by-reference function.
Test array_merge() when: 1.
Test array_merge() with multi-dimensional arrays
Test array_pad with one more than the expected number of arguments
Test array_product with one more than the expected number of arguments
Test array_push when passed: 1.
Test array_rand with one more than the expected number of arguments
Test array_rand() function with different valid 'req_num' values
Test array_rand() when array with default keys is passed to 'input' argument
Test array_rand() when associative array is passed to 'input' argument
Test array_rand() with different types of values other than arrays passed to the 'input' parameter to see that function works with unexpeced data and generates warning message as required.
Test array_rand() with different types of values other than int passed to 'num_req' argument to see that function works with unexpeced data and generates warning message as required.
Test array_reduce with one more than the expected number of arguments
Test array_search() with different possible haystack values
Test array_search() with different possible needle values
Test array_shift with one more than the expected number of arguments
Test array_slice when passed  1.
Test array_slice with one more than the expected number of arguments
Test array_slice() when: 1.
Test array_udiff with one more than the expected number of arguments
Test array_udiff_assoc with one more than the expected number of arguments
Test array_udiff_uassoc with one more than the expected number of arguments
Test array_uintersect with one more than the expected number of arguments
Test array_uintersect_assoc with one more than the expected number of arguments
Test array_uintersect_uassoc with one more than the expected number of arguments
Test array_unique with one more than the expected number of arguments
Test array_values when: 1.
Test array_values with one more than the expected number of arguments
Test array_values() when: 1.
Test arrays whose size exceeds 65536
Test arsort with more than the expected number of arguments
Test asin with a different input values
Test asinh with a different input values
Test asort with more than the expected number of arguments
Test associative array with strings as keys and elements
Test associative array with strings as keys and integers as elements
Test atan with a different input values
Test atanh with a different input values
Test bad function calls
Test base64_decode with one more than the expected number of arguments
Test base64_encode with one more than the expected number of arguments
Test base64_encode with single byte values.
Test basename with one more than the expected number of arguments
Test basic PHP functions to check if it works with multi-byte chars
Test basic behaviour with existing class and non-existent class.
Test basic function of gzencode
Test basic functionality
Test basic functionality of array_diff
Test basic functionality of array_diff_assoc
Test basic functionality of array_key_exists()
Test basic functionality of array_key_exists() with objects
Test basic functionality of array_merge()
Test basic functionality of array_push with indexed and associative arrays
Test basic functionality of array_shift()
Test basic functionality of array_slice()
Test basic functionality of array_values()
Test basic functionality of chdir() with absolute and relative paths
Test basic functionality of closedir()
Test basic functionality of current()
Test basic functionality of each()
Test basic functionality of end()
Test basic functionality of getcwd()
Test basic functionality of iconv()
Test basic functionality of iconv_strlen()
Test basic functionality of iconv_strpos with ASCII and multibyte characters
Test basic functionality of iconv_strrpos()
Test basic functionality of key()
Test basic functionality of mb_convert_encoding()
Test basic functionality of mb_encode_mimeheader with different strings.
Test basic functionality of mb_ereg
Test basic functionality of mb_ereg_match
Test basic functionality of mb_internal_encoding
Test basic functionality of mb_stripos with ASCII and multibyte characters
Test basic functionality of mb_strlen()
Test basic functionality of mb_strpos with ASCII and multibyte characters
Test basic functionality of mb_strripos with ASCII and multibyte characters
Test basic functionality of mb_strrpos()
Test basic functionality of mb_strtolower
Test basic functionality of mb_strtoupper
Test basic functionality of natcasesort()
Test basic functionality of next()
Test basic functionality of prev()
Test basic functionality of readdir()
Test basic functionality of reset()
Test basic functionality of rewinddir()
Test basic functionality of rsort()
Test basic functionality of rsort() with objects
Test basic functionality of scandir()
Test basic functionality of usort() with indexed and associative arrays
Test basic regex parsing functionality.
Test behavior around exceptions leaking out of destructors.
Test behaviour of array_diff() function with binary input
Test behaviour of array_rand() function when associative array and  various invalid values are passed to the 'input' and 'req_num'  parameters respectively
Test behaviour of array_rand() function when associative array is passed to the 'input' parameter in the function call
Test behaviour of array_rand() function when multi-dimensional array  is passed to 'input' argument
Test behaviour of array_rand() when keys of the 'input' array is heredoc string
Test behaviour of each() when passed: 1.
Test behaviour of each() when: 1.
Test behaviour of mb_ereg() when passed an incorrcect number of arguments
Test behaviour of mb_substr_count() function when passed an unknown encoding
Test behaviour of rsort() when:  1.
Test behaviour of shuffle when an array with default keys is passed to the 'array_arg' argument and check for the changes in the input array by printing the input array before and after shuffle() function is applied on it
Test behaviour of shuffle when an associative array is  passed to the 'array_arg' argument and check for the changes in the input array by printing the input array before and after shuffle() function is applied on it
Test behaviour of shuffle() function when arrays having different types of values, are passed to 'array_arg' argument
Test behaviour of shuffle() function when associative arrays  having different types of values, are passed to 'array_arg' argument
Test behaviour of shuffle() function when multi-dimensional array is passed to 'array_arg' argument
Test behaviour of shuffle() when an array of heredoc strings is passed to  'array_arg' argument of the function
Test behaviour of shuffle() when unexpected values are passed for 'array_arg' argument and verify that function outputs required warning messages wherever applicable
Test behaviour with interfaces.
Test behaviour with parameter variations
Test behaviour with various visibility levels.
Test binding params via emulated prepared query
Test case for inlining from FB's IPAddress class, removed real logic.
Test case pretty much stolen from www
Test casting ImmVector to array.
Test casting a ImmVector to bool.
Test chdir with one more than the expected number of arguments
Test chdir() with variations of relative paths
Test chmod with one more than the expected number of arguments
Test class_exists with one more than the expected number of arguments
Test classes
Test closedir with one more than the expected number of arguments
Test code from: http://www.php.net/manual/en/splobjectstorage.getinfo.php
Test column fetching
Test confilicting AKempty promotions - in one branch it's promoted to AKvec, in another to AKmap.
Test constructing a ImmMap in different ways.
Test copy() function: Checking case sensitivity in creation of destination file names  and the existence and size of destination files
Test copy() function: In creation of destination file names containing numerics/strings  and checking the existence and size of destination files
Test copy() function: In creation of destination file names containing special characters and checking the existence and size of destination files
Test copy() function: In creation of destination file names containing white spaces and checking the existence and size of destination files
Test copy() function: Trying to create copy of links
Test copy() function: Trying to create copy of source file  into different destination dir paths given in various notations
Test copy(): Try copying source file to desntination file, where destination file name is identical to source name
Test copy(): Trying to copy dir to an existing file
Test copy(): Trying to copy source file to destination file with and without write permissions
Test copy(): Trying to copy the file to a destination, where destination is an existing dir
Test copy(): Trying to copy the source file which is given with the combination of wild-card chars
Test copy(): Trying to create a copy of an existing dir
Test copy(): Trying to create a copy of file in a dir which doesn't have write permissions
Test copy(): Trying to create a copy of non-existing source in an existing destination  and an existing source in non-existing destiantion
Test copy(): checking stat of file before and after after copy operation
Test cos with a different input values
Test cosh with a different input values
Test count with one more than the expected number of arguments
Test count() returns correct error when parameters are passed.
Test crc32 with one more than the expected number of arguments
Test creating a ImmVector literal.
Test ctype_alnum with one more than the expected number of arguments
Test ctype_alpha with one more than the expected number of arguments
Test ctype_cntrl with one more than the expected number of arguments
Test ctype_digit with one more than the expected number of arguments
Test ctype_graph with one more than the expected number of arguments
Test ctype_lower with one more than the expected number of arguments
Test ctype_print with one more than the expected number of arguments
Test ctype_punct with one more than the expected number of arguments
Test ctype_space with one more than the expected number of arguments
Test ctype_upper with one more than the expected number of arguments
Test ctype_xdigit with one more than the expected number of arguments
Test current with one more than the expected number of arguments
Test date_sunrise with one more than the expected number of arguments
Test date_sunset with one more than the expected number of arguments
Test deg2rad with a different input values
Test deleting non-existent keys
Test destroy
Test destruction order for SetG.
Test destruction order for SetS.
Test different error conditions of settype() and gettype() functions
Test dirname with one more than the expected number of arguments
Test each with one more than the expected number of arguments
Test end with one more than the expected number of arguments
Test end() when passed: 1.
Test equality of ImmMaps.
Test equality of ImmVectors.
Test error cases for gzencode
Test failed so we need to report details.
Test fetching into an object
Test file_exists with one more than the expected number of arguments
Test finfo_buffer with one more than the expected number of arguments
Test flow control around exceptions.
Test for handling of incorrect parameters.
Test for memory leaks
Test for single scaler
Test for the datefmt_format  function
Test for the datefmt_get_datetype  function
Test for the datefmt_get_locale  function
Test for the datefmt_get_timetype  function
Test for the datefmt_get_timezone_id  function
Test for the datefmt_localtime  function
Test for the datefmt_parse  function
Test for the datefmt_parse_localtime  function with parse pos
Test for the datefmt_parse_timestamp  function with parse_pos
Test for the datefmt_set_timezone_id  function
Test format and parse with a localtime :array
Test format and parse with a timestamp : long
Test format with input as a localtime :array
Test format with input as a timestamp : integer
Test fscanf() to read a file when file pointer is pointing to EOF
Test fscanf() to scan a file for read when file is opened inwrite only mode
Test fscanf() to scan a file to read objects
Test fscanf() to scan an empty file
Test fscanf() to scan arrays using different char format types
Test fscanf() to scan arrays using different float format types
Test fscanf() to scan arrays using different hexa format types
Test fscanf() to scan arrays using different integer format types
Test fscanf() to scan arrays using different octal format types
Test fscanf() to scan arrays using different scientific format types
Test fscanf() to scan arrays using different string format types
Test fscanf() to scan arrays using different unsigned format types
Test fscanf() to scan boolean data using different char format types
Test fscanf() to scan boolean data using different float format types
Test fscanf() to scan boolean data using different hexa format types
Test fscanf() to scan boolean data using different integer format types
Test fscanf() to scan boolean data using different octal format types
Test fscanf() to scan boolean data using different scientific format types
Test fscanf() to scan boolean data using different string format types
Test fscanf() to scan boolean data using different unsigned format types
Test fscanf() to scan data using different format types and also tracking the file pointer movement along with reading
Test fscanf() to scan different chars using different char format types
Test fscanf() to scan different float values using different format types
Test fscanf() to scan different integer values using different char format types
Test fscanf() to scan different integer values using different hexa format types
Test fscanf() to scan different integer values using different interger format types
Test fscanf() to scan different integer values using different octal format types
Test fscanf() to scan different integer values using different scientific format types
Test fscanf() to scan different integer values using different unsigned int format types
Test fscanf() to scan different strings using different string format types
Test fscanf() to scan float values using different char format types
Test fscanf() to scan float values using different hexa format types
Test fscanf() to scan float values using different integer format types
Test fscanf() to scan float values using different octal format types
Test fscanf() to scan float values using different scientific format types
Test fscanf() to scan float values using different string format types
Test fscanf() to scan float values using different unsigned format types
Test fscanf() to scan integer values using different float format types
Test fscanf() to scan integer values using different string format types
Test fscanf() to scan resource type using different char format types
Test fscanf() to scan resource type using different float format types
Test fscanf() to scan resource type using different hexa format types
Test fscanf() to scan resource type using different integer format types
Test fscanf() to scan resource type using different octal format types
Test fscanf() to scan resource type using different scientific format types
Test fscanf() to scan resource type using different string format types
Test fscanf() to scan resource type using different unsigned format types
Test fscanf() to scan strings using different char format types
Test fscanf() to scan strings using different float format types
Test fscanf() to scan strings using different hexa format types
Test fscanf() to scan strings using different integer format types
Test fscanf() to scan strings using different octal format types
Test fscanf() to scan strings using different scientific format types
Test fscanf() to scan strings using different unsigned format types
Test functionality of rsort() with objects where properties have different visibilities
Test get_class with one more than the expected number of arguments
Test get_class_methods with one more than the expected number of arguments
Test get_class_vars with one more than the expected number of arguments
Test get_headers with one more than the expected number of arguments
Test get_html_translation_table() when table is specified as HTML_ENTITIES
Test get_object_vars with one more than the expected number of arguments
Test get_parent_class with one more than the expected number of arguments
Test getdate with one more than the expected number of arguments
Test gethostbyaddr with one more than the expected number of arguments
Test gethostbynamel with one more than the expected number of arguments
Test getimagesize with one more than the expected number of arguments
Test gettimeofday with one more than the expected number of arguments
Test gmdate with one more than the expected number of arguments
Test gmmktime with one more than the expected number of arguments
Test gmstrftime with one more than the expected number of arguments
Test grapheme functions (procedural only)
Test gzcompress with one more than the expected number of arguments
Test gzdeflate with one more than the expected number of arguments
Test gzencode with one more than the expected number of arguments
Test gzopen with one more than the expected number of arguments
Test gzuncompress with one more than the expected number of arguments
Test how array_change_key_case() behaves with different strings
Test how array_change_key_case() converts keys in multi-dimensional arrays
Test how array_diff compares arrays that 1.
Test how array_diff compares integers, floats and strings
Test how array_diff() compares multidimensional arrays
Test how array_diff_assoc behaves 1.
Test how array_diff_assoc behaves when comparing  multi-dimensional arrays
Test how array_diff_assoc compares integers, floats and string
Test how array_diff_assoc() behaves when comparing: 1.
Test how array_diff_assoc() compares arrays containing different data types as keys
Test how array_diff_assoc() compares binary data
Test how array_diff_assoc() compares indexed arrays containing different data types
Test how array_key_exists() behaves with multi-dimensional arrays
Test how array_shift when passed: 1.
Test how character classes match a multibyte string
Test how current() behaves with muti-dimensional and recursive arrays
Test how iconv_strpos behaves when passed an incorrect number of arguments
Test how key() behaves with muti-dimensional and recursive arrays
Test how mb_stripos behaves when passed an incorrect number of arguments
Test how mb_strpos behaves when passed an incorrect number of arguments
Test how mb_strripos behaves when passed an incorrect number of arguments
Test how the internal pointer is affected when two variables are referenced to each other
Test htmlspecialchars_decode with one more than the expected number of arguments
Test https:// streams
Test iconv_strlen when passed an unknown encoding
Test iconv_strlen with one more than the expected number of arguments
Test iconv_strpos with one more than the expected number of arguments
Test iconv_strrpos with one more than the expected number of arguments
Test iconv_substr with one more than the expected number of arguments
Test if the inner value type of AKvec is correctly inferred
Test if the typechecker understands attribute importation and can detect a type mismatch here
Test if the upgraded type is accepted with no errors by a compatible function
Test image_type_to_mime_type with one more than the expected number of arguments
Test imagecolorallocate with one more than the expected number of arguments
Test imap_close with one more than the expected number of arguments
Test imap_fetch_overview with one more than the expected number of arguments
Test imap_fetchbody with one more than the expected number of arguments
Test imap_fetchheader with one more than the expected number of arguments
Test in_array() with different possible haystack values
Test in_array() with different possible needle values
Test in_array() with haystack as resouce and multidimentional arrays
Test in_array() with haystack as sub-array and object
Test indexed array with integers as elements
Test indexed array with strings as elements
Test inference handles things which have side effects that could change property types.
Test intercepts where callsites have already been bound to the pre-intercept function.
Test interface_exists with one more than the expected number of arguments
Test invalid arguments
Test ip2long with one more than the expected number of arguments
Test is_a with one more than the expected number of arguments
Test is_subclass_of with invalid last argument
Test is_subclass_of with one more than the expected number of arguments
Test isset() with ImmVector.
Test iterating over a ImmVector with a "foreach".
Test krsort with more than the expected number of arguments
Test ksort with more than the expected number of arguments
Test log10 with a different input values
Test long2ip with one more than the expected number of arguments
Test magic methods for ImmVector.
Test magic methods for Pair.
Test mail with one more than the expected number of arguments
Test main function.
Test match for 32-bit code points.
Test materialization *to* ImmMap.
Test materialization *to* ImmSet.
Test mb_decode_mimeheader with one more than the expected number of arguments
Test mb_encode_header() with different strings
Test mb_ereg with one more than the expected number of arguments
Test mb_ereg_match by passing an incorrect number of arguments
Test mb_ereg_match with one more than the expected number of arguments
Test mb_ereg_replace with one more than the expected number of arguments
Test mb_internal_encoding with one more than the expected number of arguments
Test mb_regex_encoding with one more than expected number of arguments
Test mb_split with one more than the expected number of arguments
Test mb_stripos with one more than the expected number of arguments
Test mb_stristr with one more than the expected number of arguments
Test mb_strlen when passed an unknown encoding
Test mb_strlen with one more than the expected number of arguments
Test mb_strpos with one more than the expected number of arguments
Test mb_strrchr with one more than the expected number of arguments
Test mb_strrichr with one more than the expected number of arguments
Test mb_strripos with one more than the expected number of arguments
Test mb_strrpos with one more than the expected number of arguments
Test mb_strstr with one more than the expected number of arguments
Test mb_strtolower with one more than the expected number of arguments
Test mb_strtolower with zero arguments
Test mb_strtoupper with one more than the expected number of arguments
Test mb_strtoupper with zero arguments
Test mb_substitute_character with one more than the expected number of arguments
Test mb_substr with one more than the expected number of arguments
Test mb_substr_count with one more than the expected number of arguments
Test mcrypt_cbc with one more than the expected number of arguments
Test mcrypt_decrypt with one more than the expected number of arguments
Test mcrypt_ecb with one more than the expected number of arguments
Test mcrypt_encrypt with one more than the expected number of arguments
Test method_exists with one more than the expected number of arguments
Test miscellaneous methods of the ImmVector API.
Test mixed constructors from different traits, we are more strict about these cases, since that can lead to un-expected behavior.
Test name pattern can be different depending on the framework, although most follow the default.
Test names should have all characters before and including __DIR__ removed, so that specific user info is not added
Test natcasesort with one more than the expected number of arguments
Test natcasesort() with extended ASCII characters
Test native property handling with ReflectionExtension
Test next with one more than the expected number of arguments
Test next() when passed: 1.
Test nl2br with one more than the expected number of arguments
Test nl2br() function by passing different types of values other than  expected type for 'str' argument
Test nl2br() function by passing double quoted strings containing various  combinations of new line chars to 'str' argument
Test nl2br() function by passing heredoc strings containing various combinations of new line chars to 'str' argument
Test nl2br() function by passing html string inputs containing line breaks and new line chars for 'str'
Test nl2br() function by passing single quoted strings containing various combinations of new line chars to 'str' argument
Test non-interned string
Test not passing in a subpatterns array.
Test ob_implicit_flush with one more than the expected number of arguments
Test object fetching
Test of ProxyArray::Copy()
Test of object_init_ex().
Test opendir with one more than the expected number of arguments
Test operator that was not overloaded
Test order of operations
Test parse_ini_file with one more than the expected number of arguments
Test parse_url with one more than the expected number of arguments
Test parsing float number as integer.
Test parsing float number.
Test popping elements from a sub-array and popping an array from an array
Test posix_getgrgid with one more than the expected number of arguments
Test preg_grep with one more than the expected number of arguments
Test preg_last_error with one more than the expected number of arguments
Test preg_match with one more than the expected number of arguments
Test preg_match_all with one more than the expected number of arguments
Test preg_quote with one more than the expected number of arguments
Test preg_replace() with one more than the expected number of arguments
Test preg_replace_callback() with one more than the expected number of arguments
Test preg_split with one more than the expected number of arguments
Test prev with one more than the expected number of arguments
Test prev() when passed: 1.
Test prototype of builtin classes
Test rad2deg with a different input values
Test rawurldecode with one more than the expected number of arguments
Test rawurlencode with one more than the expected number of arguments
Test readdir with one more than the expected number of arguments
Test regex caching functionality.
Test reset with one more than the expected number of arguments
Test returning matches functionality.
Test rewinddir with one more than the expected number of arguments
Test rsort() with more than the expected number of arguments
Test scandir with one more than the expected number of arguments
Test serialization/deserialization of ImmSets.
Test serialization/deserialization of ImmVectors.
Test serialize with one more than the expected number of arguments
Test setAttribute with ATTR_STATEMENT_CLASS.
Test showing async stacks in Xenon.
Test showing async stacks in the debugger.
Test showing breakpoints on async functions in the debugger.
Test shuffle() to see that warning messages are emitted when invalid number of arguments are passed to the function
Test sin with a different input values
Test sinh with a different input values
Test situations where traits cause duplicate property names when preparing the array for 86pinit setup.
Test sort with more than the expected number of arguments
Test sorting strings that have different length but otherwise equal.
Test specifying non-zero parsing start position.
Test sqrt with a different input values
Test ssl:// socket streams
Test starts here:
Test static content request after a HPHP session has terminated
Test static content request before the creation of any HPHP sessions
Test stepping with continuations and exceptions around throws.
Test stepping with exceptions in continuations.
Test str_split with one more than the expected number of arguments
Test strcspn with one more than the expected number of arguments
Test strcspn() : for error conditons
Test stream_get_meta_data with one more than the expected number of arguments
Test stream_set_timeout with one more than the expected number of arguments
Test strftime with one more than the expected number of arguments
Test string
Test string lifted from tests/intl/utf8.h
Test strip_tags with one more than the expected number of arguments
Test stripcslashes() with non-string type argument such as int, float, etc
Test stripos() function with null terminated strings for 'haystack' argument  in order to check the binary safe
Test stripos() function with null terminated strings for 'needle' argument  in order to check binary safe
Test stripos() function with unexpected inputs for 'haystack' and 'needle' arguments
Test stripos() function with unexpected inputs for 'needle' and  an expected type of input for 'haystack' argument
Test stripos() function with unexpected inputs for 'offset' argument
Test stripos() function with unexpected inputs for haystack argument
Test stripslashes() with double dimensional arrays
Test stripslashes() with non-string type argument such as int, float, etc
Test stripslashes() with strings containing newline and tab characters.
Test stripslashes() with various strings containing characters thats can be backslashed.
Test strncasecmp() function with here-doc strings for 'str1', 'str2'
Test strncasecmp() function with the unexpected inputs for 'str1'
Test strncasecmp() function with the unexpected inputs for 'str1' and 'str2'
Test strncasecmp() function with the unexpected inputs for 'str2'
Test strncasecmp() function with the unexpected values, and giving the same strings for 'str1' and 'str2'
Test strncasecmp() function with upper-case and lower-case alphabets as inputs for 'str1' and 'str2'
Test strncasecmp() function with various double quoted strings for 'str1', 'str2'
Test strncasecmp() function with various single quoted strings for 'str1', 'str2'
Test strncasecmp() with various lengths
Test strncmp() function with different strings for 'str1', 'str2' and considering case sensitive
Test strncmp() function with double quoted strings for 'str1', 'str2'
Test strncmp() function with more/less number of args and invalid args
Test strncmp() function with single quoted strings for 'str1', 'str2'
Test strncmp() function with the input strings are of all types
Test strncmp() function with the length as all types, and giving the same strings for 'str1' and 'str2'
Test strncmp() function with upper-case and lower-case alphabets as inputs for 'str1' and 'str2'
Test strncmp() with various lengths
Test strrchr() function by passing empty heredoc string for haystack and with various needles
Test strrchr() function by passing heredoc string containing  blank-line for haystack and with various needles
Test strrchr() function by passing heredoc string containing  escape sequences for haystack and with various needles
Test strrchr() function by passing heredoc string containing quote chars for haystack and with various needles
Test strrchr() function by passing heredoc string containing special chars for haystack and with various needles
Test strrchr() function by passing multi-line heredoc string for haystack and with various needles
Test strrchr() function with unexpected inputs for haystack  and expected type for 'needle'
Test strrchr() function with unexpected inputs for haystack and needle
Test strrchr() function: with unexpected inputs for needle  and expected type for haystack
Test strrpos() function with null terminated strings for 'haystack' argument  in order to check the binary safe
Test strrpos() function with null terminated strings for 'needle' argument  in order to check binary safe
Test strrpos() function with unexpected inputs for 'haystack' and 'needle' arguments
Test strrpos() function with unexpected inputs for 'needle' and  an expected type of input for 'haystack' argument
Test strrpos() function with unexpected inputs for 'offset' argument
Test strrpos() function with unexpected inputs for haystack argument
Test strspn with one more than the expected number of arguments
Test strspn() : for error conditons
Test strtr() function: with unexpected inputs for 'replace_pairs'  and expected type for 'str' arguments
Test strval with one more than the expected number of arguments
Test subject strings.
Test syslog with one more than the expected number of arguments
Test tan with a different input values
Test tanh with a different input values
Test tcp:// socket streams with SSL enabled
Test that COW makes materializing an ImmSet an O(1) operation.
Test that COW makes materializing an ImmVector an O(1) operation.
Test that FS is immutable.
Test that FVs cannot be indexed with a non-int key.
Test that ImmMap correctly handled magic methods.
Test that ImmMap is immutable.
Test that ImmSet behaves properly when mixing namespaced and non-namespaced code.
Test that ImmSet can be accessed through its fully-qualified name.
Test that ImmSet is put in the HH namespace.
Test that ImmSets can be cast to bool.
Test that ImmSets can be compared for equality.
Test that ImmVector behaves properly when mixing namespaced and non-namespaced code.
Test that ImmVector can be accessed through its fully-qualified name.
Test that ImmVector is immutable.
Test that ImmVector is put in the HH namespace.
Test that Map behaves properly when mixing namespaced and non-namespaced code.
Test that Map can be accessed through its fully-qualified name.
Test that Map is put in the HH namespace.
Test that Pair behaves properly when mixing namespaced and non-namespaced code.
Test that Pair can be accessed through its fully-qualified name.
Test that Pair is put in the HH namespace.
Test that Set behaves properly when mixing namespaced and non-namespaced code.
Test that Set can be accessed through its fully-qualified name.
Test that Set is put in the HH namespace.
Test that Set::map() throws if the return type of its callback is invalid.
Test that Set::toArray() raises a warning on a int/string collition.
Test that array_diff behaves as expected for comparing: 1.
Test that concat binops with un-used results are not incorrectly optimized away if they can invoke side-effects.
Test that iterators for Vector and Map remain valid if an existing element is overwritten.
Test that mb_strrpos offset is byte count for negative values (should be character count)
Test that multiline double-quoted strings with curly braces don't mess up line numbers in error messages.
Test that the JIT triggers COW.
Test that the auto-import mechanism also kicks in when the "nameless" namespace construct is used.
Test that the behavior is consistent with the existing handling of new and legacy constructors.
Test that the internal pointer is reset after calling array_shift()
Test that the typechecker can correctly handle ImmVector.
Test that the var_dump() of a ImmSet is meaningful.
Test that typechecks work when the underlying type is a typedef
Test that we autoload a class in another file
Test that we can clone a ImmSet.
Test that we can define our own custom ImmSet class as long as we're not in the top-level namespace.
Test that we can define our own custom ImmVector class as long as we're not in the top-level namespace.
Test that we can define our own custom Map class as long as we're not in the top-level namespace.
Test that we can define our own custom Pair class as long as we're not in the top-level namespace.
Test that we can define our own custom Set class as long as we're not in the top-level namespace.
Test that we can handle unserialization of Maps with and without namespaces.
Test that we can handle unserialization of Pairs with and without namespaces.
Test that we can handle unserialization of Sets with and without namespaces.
Test that we can handle unserialization of Vectors with and without namespaces.
Test that we can't append to a FV.
Test that we can't mutate a ImmVector array style.
Test that we check constraints after expand the type alias
Test that we do not attempt to autoload a bultin class
Test that we do not attempt to autoload an already loaded class
Test that we don't autoload an already loaded class
Test that when two variables are referenced to one another the internal pointer is the same for both
Test the ConstCollection interface.
Test the ConstIndexAccess interface
Test the KeyedIterable interface.
Test the deep copy mechanism that is triggered when collection literals are used as initializers for class properties.
Test the effectiveness of pre-coloring Shouldn't have any shuffling for concats
Test the following using async - Stepping over awaits.
Test the following: - Stepping over instructions that cause destructors to run.
Test the following: - Stepping over yeilds.
Test the position of the internal array pointer after a call to array_values
Test the position of the internal array pointer after a call to each()
Test the setlocale() when an array is provided as input containing list of locales
Test the setlocale() when multiple locales are provided as argument
Test the setlocale() when multiple valid/invalid locales are provided as argument
Test this by making sure that we don't constant propagate from values in object properties.
Test throwing exceptions from surprise flags things (OOM, signals, and req timeout all work this way).
Test throwing on function entry
Test to confirm that we have the proper number of enter/exit profiling calls for async functions, and that they are balanced.
Test to make sure that a new object isn't reusing the results from the old object,
Test trait_exists with one more than the expected number of arguments
Test ucwords() by passing different values including scalar and non scalar values
Test unserialize error idiom
Test urldecode with one more than the expected number of arguments
Test urlencode with one more than the expected number of arguments
Test usage variation of gettype() and settype() functions:  settype() to null type.
Test usage variation of gettype() and settype() functions: settype() to array type.
Test usage variation of gettype() and settype() functions: settype() to bool/boolean type.
Test usage variation of gettype() and settype() functions: settype() to float/double type.
Test usage variation of gettype() and settype() functions: settype() to int/integer type.
Test usage variation of gettype() and settype() functions: settype() to object type.
Test usage variation of gettype() and settype() functions: settype() to resource type.
Test usage variation of gettype() and settype() functions: settype() to string type.
Test uses RenameFunction to ensure that all arguments are retained
Test using database
Test usort with one more than the expected number of arguments
Test usort() when comparison function is: 1.
Test utf8_decode with one more than the expected number of arguments
Test utf8_encode with one more than the expected number of arguments
Test var_export with one more than the expected number of arguments
Test vectors taken from a combination of NIST FIPS-202, Wikipedia reference vectors, and output from reference implementation
Test vfprintf()
Test vfprintf() for char formats with an array of chars passed to the function
Test vprintf() for char formats with an array of chars passed to the function
Test vsprintf() for char formats with an array of chars passed to the function
Test what happens when you override a non-memoized method with a memoized one and visa-versa
Test whether a string has a specific suffix
Test whether the constructor of the user-space stream wrapper is called when stream functions are called
Test with invalid english locale (ICU defaults to en_US)
Test with less arguments than required
Test with no arguments
Test with non integer parameters
Test with sigle "form encoding" Note: For some reason it complains, results are differ.
Test wrong number of arguments
Test wrong number of arguments.
Test xml_error_string with one more than the expected number of arguments
Test xml_get_current_byte_index with one more than the expected number of arguments
Test xml_get_current_column_number with one more than the expected number of arguments
Test xml_get_current_line_number with one more than the expected number of arguments
Test xml_get_error_code with one more than the expected number of arguments
Test xml_parse with one more than the expected number of arguments
Test xml_parse_into_struct with one more than the expected number of arguments
Test xml_parser_create with one more than the expected number of arguments
Test xml_parser_create_ns with one more than the expected number of arguments
Test xml_parser_free with one more than the expected number of arguments
Test xml_parser_get_option with one more than the expected number of arguments
Test xml_parser_set_option with one more than the expected number of arguments
Test xml_set_character_data_handler with one more than the expected number of arguments
Test xml_set_default_handler with one more than the expected number of arguments
Test xml_set_element_handler with one more than the expected number of arguments
Test xml_set_end_namespace_decl_handler with one more than the expected number of arguments
Test xml_set_external_entity_ref_handler with one more than the expected number of arguments
Test xml_set_notation_decl_handler with one more than the expected number of arguments
Test xml_set_object with one more than the expected number of arguments
Test xml_set_processing_instruction_handler with one more than the expected number of arguments
Test xml_set_start_namespace_decl_handler with one more than the expected number of arguments
Test xml_set_unparsed_entity_decl_handler with one more than the expected number of arguments
Tested both with a string as an implode, no difference.
Testing 86pinit's effects on private property type inference.
Testing Binary safe
Testing Binary safe files
Testing Error Conditions
Testing Invalid type arguments
Testing a dir with trailing slash
Testing a file trailing slash
Testing a file with trailing slash
Testing addslashes() for error conditions
Testing addslashes() with strings containing characters that can be prefixed with backslash  by the function
Testing array_chunk() function - input array containing different sub arrays
Testing array_chunk() function with following conditions  1.
Testing array_chunk() function with following conditions 1.
Testing array_chunk() function with unexpected values for 'array' argument
Testing array_chunk() function with unexpected values for 'preserve_keys'
Testing array_chunk() function with unexpected values for 'size' argument
Testing array_combine with arrays having unequal number of elements
Testing array_combine with one less than the expected number of arguments
Testing array_diff with one less than the expected number of arguments
Testing array_diff_assoc with one less than the expected number of arguments
Testing array_diff_key with no arguments
Testing array_diff_key with one less than the expected number of arguments
Testing array_diff_uassoc with no arguments
Testing array_diff_uassoc with one less than the expected number of arguments
Testing array_diff_ukey with one less than the expected number of arguments
Testing array_intersect() with one less than the expected number of arguments
Testing array_intersect() with zero arguments
Testing array_intersect_assoc with one less than the expected number of arguments
Testing array_intersect_key with one less than the expected number of arguments
Testing array_intersect_uassoc with no arguments
Testing array_intersect_uassoc with one less than the expected number of arguments
Testing array_intersect_ukey with no arguments
Testing array_intersect_ukey with one less than the expected number of arguments
Testing array_key_exists with one less than the expected number of arguments
Testing array_map with one less than the expected number of arguments
Testing array_map() for following object functionalities: 1) non-existent class 2) existent class and non-existent function
Testing array_map() for object functionalities: 1) simple class with variable and method 2) class without members 3) class with only one method and no variable 4) abstract and child class 5) class with static and final members 6) interface and implemented class
Testing array_map() for object functionality with following callback function variations: 1) child class method using parent object 2) parent class method using child object 3) child class method using parent class 4) parent class method using child class
Testing array_merge with zero arguments
Testing array_pad with less than the expected number of arguments
Testing array_push with one less than the expected number of arguments
Testing array_rand() function with various invalid 'req_num' values with valid num_req values
Testing array_reduce with one less than the expected number of arguments
Testing array_slice with one less than the expected number of arguments
Testing array_sum() with 'input' having reference variables as elements
Testing array_sum() with associative array as 'input' argument
Testing array_udiff with one less than the expected number of arguments
Testing array_udiff_assoc with one less than the expected number of arguments
Testing array_udiff_uassoc with one less than the expected number of arguments
Testing array_uintersect with one less than the expected number of arguments
Testing array_uintersect_assoc with one less than the expected number of arguments
Testing array_uintersect_uassoc with one less than the expected number of arguments
Testing array_unshift with one less than the expected number of arguments
Testing array_walk() by passing more number of parameters to callback function
Testing array_walk() with an array having reference variables
Testing array_walk() with an array having subarrays as elements
Testing array_walk() with an array of objects
Testing array_walk_recursive() by passing more number of parameters to callback function
Testing array_walk_recursive() with an array having reference variables
Testing array_walk_recursive() with an array having subarrays as elements
Testing array_walk_recursive() with an array of objects
Testing arsort() by providing different unexpected values for flag argument
Testing arsort() by providing integer/string arrays to check the basic functionality  with following flag values.
Testing arsort() by providing reference variable array with following flag values flag value as defualt SORT_REGULAR - compare items normally SORT_NUMERIC - compare items numerically
Testing arsort() function with all possible error conditions
Testing asort() by providing different unexpected values for flag argument
Testing asort() by providing integer/string arrays to check the basic functionality  with following flag values.
Testing asort() by providing reference variable array with following flag values flag value as defualt SORT_REGULAR - compare items normally SORT_NUMERIC - compare items numerically
Testing asort() function with all possible error conditions
Testing basic file notation
Testing chmod with one less than the expected number of arguments
Testing chop() : error conditions
Testing chop() : with different unexpected values for charlist argument passes to the function
Testing chop() : with heredoc strings
Testing chop() : with miscellaneous arguments
Testing chop() : with nulls embedded in input string
Testing chop(): basic functionality
Testing chunk_split() for basic functionality by passing all possible  arguments as well as with default arguments chunklen and ending
Testing count() by passing constant with no second argument
Testing crc32() : basic functionality
Testing crc32() : error conditions
Testing crc32() : with different heredoc strings passed to the str argument
Testing crc32() : with different strings in double quotes passed to the function
Testing crc32() : with different strings in single quotes passed to the function
Testing crc32() : with unexpected values for str argument
Testing dir with double trailing slashes
Testing directories
Testing error conditions
Testing error conditions of chunk_split() with zero arguments  and for more than expected number of arguments
Testing fgetcsv() by providing two characters for enclosure and delimiter parameters
Testing fgetcsv() by reading a file containing a blank line
Testing fgetcsv() by reading from a file when different enclosure that is not  present in the data being read and delimiter which is present in the data
Testing fgetcsv() by reading from a file when the file pointer is pointing to end of file
Testing fgetcsv() to read a file containing blank line when provided with  default enclosure argument
Testing fgetcsv() to read a file when all its parameters are provided
Testing fgetcsv() to read a file when provided with default enclosure character
Testing fgetcsv() to read a file when provided with default enclosure character  and length value equal to zero
Testing fgetcsv() to read a file when provided with default enclosure character  and with delimiter character which is not in the line being read by fgetcsv()
Testing fgetcsv() to read a file when provided with default enclosure character  and with delimiter of two characters
Testing fgetcsv() to read a file when provided with default enclosure character and length value less than the size of line being read
Testing fgetcsv() to read a file whose file pointer is pointing to end of file and fgetcsv() provided with default enclosure argument
Testing fgetcsv() to read a file whose file pointer is pointing to end of file and fgetcsv() provided with enclosure argument
Testing fgetcsv() to read a file whose file pointer is pointing to end of file and fgetcsv() provided with file handle and length arguments
Testing fgetcsv() to read a file whose file pointer is pointing to end of file and fgetcsv() provided with only file handle in its argument
Testing fgetcsv() to read a line from a file which doesn't have any CSV field
Testing fgetcsv() to read a line without any csv fields from a file when provided with default enclosure value
Testing fgetcsv() to read from a file opened in various write modes and  enclosure argument with two characters
Testing fgetcsv() to read from a file when provided with default value of arguments
Testing fgetcsv() to read from a file when provided with delimiter and  enclosure values both as NULL
Testing fgetcsv() to read from a file when provided with delimiter value as NULL
Testing fgetcsv() to read from a file when provided with enclosure value as NULL
Testing fgetcsv() to read from a file when provided with negative length argument  along with delimiter and enclosure arguments
Testing fgetcsv() to read from a file when provided with negative length argument  along with delimiter and no enclosure arguments
Testing fgetcsv() to read from a file when provided with negative length argument  along with neither delimiter nor enclosure argument
Testing fgetcsv() to read from a file when provided with the length argument value less than the line size
Testing fgetcsv() to read from a file when provided with values of delimiter and enclosure that are not present in the line read by fgetcsv()
Testing fgetcsv() to read from a file when the delimiter argument value is not present in the line being read by the fgetcsv()
Testing fgetcsv() to read from an empty file
Testing fgetcsv() to read from files opened in write only mode
Testing fgetcsv() to rwad from a file with length argument equal to zero
Testing file with double slashes
Testing file with double trailing slashes
Testing file with trailing double slashes
Testing filegroup() with invalid arguments -int, float, bool, NULL, resource
Testing fileinode() with invalid arguments -int, float, bool, NULL, resource
Testing fileowner() with invalid arguments -int, float, bool, NULL, resource
Testing fileperms() with invalid arguments -int, float, bool, NULL, resource
Testing filesize() with data written using different file modes and by creating holes in file
Testing finfo_buffer with one less than the expected number of arguments
Testing for Error conditions
Testing for error conditions
Testing fputcsv() to write to a file when all its parameters are provided
Testing fputcsv() to write to a file when default arguments values are considered
Testing fputcsv() to write to a file when default enclosure value and delimiter of two chars is provided
Testing fputcsv() to write to a file when default enclosure value and delimiter of two chars is provided and file is opened in read only mode
Testing fputcsv() to write to a file when default enclosure value and delimiter value other than that in the field is provided
Testing fputcsv() to write to a file when default enclosure value is provided
Testing fputcsv() to write to a file when delimiter and enclosure are of two chars each
Testing fputcsv() to write to a file when delimiter and enclosure is NULL
Testing fputcsv() to write to a file when delimiter are different from those present in the field to be written to the file
Testing fputcsv() to write to a file when delimiter is NULL
Testing fputcsv() to write to a file when delimiter is same but enclosure is different from those present in the field to be written to the file
Testing fputcsv() to write to a file when enclosure is NULL
Testing fputcsv() to write to a file when enclosure is same but delimiter is different from those present in the field to be written to the file
Testing fputcsv() to write to a file when the field has no CSV format
Testing fseek() without using argument whence
Testing fseek(),ftell(),rewind() functions  1.
Testing fseek(),ftell(),rewind() functions on all read and append modes
Testing fseek(),ftell(),rewind() functions on all write and create with write modes
Testing get_class_vars with one less than the expected number of arguments
Testing gzopen with one less than the expected number of arguments
Testing how preg_grep reacts to being passed bad regexes
Testing how preg_grep reacts to being passed the wrong type of input argument
Testing how preg_match reacts to being passed the wrong type of regex argument
Testing how preg_match reacts to being passed the wrong type of subject argument
Testing how preg_match_all reacts to being passed the wrong type of input argument
Testing how preg_match_all reacts to being passed the wrong type of regex argument
Testing how preg_match_all reacts to being passed the wrong type of subpatterns array argument
Testing how preg_quote reacts to being passed the wrong type of input argument
Testing how preg_replace reacts to being passed the wrong type of regex argument
Testing how preg_replace reacts to being passed the wrong type of replacement argument
Testing how preg_replace_callback reacts to being passed the wrong type of regex argument
Testing how preg_split reacts to being passed the wrong type of input argument
Testing how preg_split reacts to being passed the wrong type of regex argument
Testing iconv_strpos with one less than the expected number of arguments
Testing iconv_strrpos with one less than the expected number of arguments
Testing iconv_substr with one less than the expected number of arguments
Testing imagecolorallocate with one less than the expected number of arguments
Testing imap_fetch_overview with one less than the expected number of arguments
Testing imap_fetchbody with one less than the expected number of arguments
Testing imap_fetchheader with one less than the expected number of arguments
Testing is_a with one less than the expected number of arguments
Testing is_dir() with base and sub dirs
Testing is_file() with file containing data, truncating its size  and the file created by touch()
Testing is_file() with invalid arguments -int, float, bool, NULL, resource
Testing is_subclass_of with one less than the expected number of arguments
Testing krsort() by providing array of integer/string values to check the basic functionality  with following flag values : 1.flag value as defualt 2.SORT_REGULAR - compare items normally 3.SORT_NUMERIC - compare items numerically 4.SORT_STRING - compare items as strings
Testing krsort() by providing different unexpected values for flag argument
Testing krsort() function with all possible error conditions
Testing ksort() by providing  array of integer/string values to check the basic functionality with following flag values : 1.flag value as defualt 2.SORT_REGULAR - compare items normally 3.SORT_NUMERIC - compare items numerically 4.SORT_STRING - compare items as strings
Testing ksort() by providing different unexpected values for flag argument
Testing ksort() function with all possible error conditions
Testing library functions as comparison function
Testing mail with one less than the expected number of arguments
Testing mb_ereg with one less than the expected number of arguments
Testing mb_ereg_match with one less than the expected number of arguments
Testing mb_ereg_match with zero arguments
Testing mb_ereg_replace with one less than the expected number of arguments
Testing mb_split with one less than the expected number of arguments
Testing mb_stripos with one less than the expected number of arguments
Testing mb_stristr with one less than the expected number of arguments
Testing mb_strpos with one less than the expected number of arguments
Testing mb_strrchr with one less than the expected number of arguments
Testing mb_strrichr with one less than the expected number of arguments
Testing mb_strripos with one less than the expected number of arguments
Testing mb_strrpos with one less than the expected number of arguments
Testing mb_strstr with one less than the expected number of arguments
Testing mb_substr with one less than the expected number of arguments
Testing mb_substr_count with one less than the expected number of arguments
Testing mcrypt_cbc with one less than the expected number of arguments
Testing mcrypt_decrypt with one less than the expected number of arguments
Testing mcrypt_ecb with one less than the expected number of arguments
Testing mcrypt_encrypt with one less than the expected number of arguments
Testing method_exists with one less than the expected number of arguments
Testing multiple invalid.
Testing normal directory notation
Testing ob_start, chunking and the debugger since the debugger actually swaps buffers sometimes.
Testing on hard links
Testing on soft links
Testing preg_grep withone less than the expected number of arguments
Testing preg_match withone less than the expected number of arguments
Testing preg_match_all withone less than the expected number of arguments
Testing preg_replace when the regex and the replacement are both arrays.
Testing preg_replace() with one less than the expected number of arguments
Testing preg_replace_callback() with one less than the expected number of arguments
Testing preg_split withone less than the expected number of arguments
Testing printf() : with different unexpected values for format argument other than the strings
Testing quoted_printable_decode() : with different unexpected values for format argument other than the strings
Testing readlink() with invalid arguments -int, float, bool, NULL, resource
Testing rename() on soft and hard links with different permissions
Testing serialization on all the objects through loop
Testing shuffle() function with array of integers
Testing shuffle() function with array of strings
Testing simple directory tree
Testing sort() by providing arrays with default keys and assoc arrays  to check the basic functionality with following flag values.
Testing sort() by providing different unexpected values for flag argument
Testing sort() by providing reference variable array with following flag values flag value as defualt SORT_REGULAR - compare items normally SORT_NUMERIC - compare items numerically
Testing sort() function with all possible error conditions
Testing sprintf() : with different unexpected values for format argument other than the strings
Testing sscanf() : basic functionality
Testing str_shuffle() : basic functionality
Testing strcspn withone less than the expected number of arguments
Testing strcspn() : basic functionality
Testing strcspn() : with different heredoc strings as str argument
Testing strcspn() : with different strings as str argument and default start and len args
Testing strcspn() : with different unexpected values for mask argument
Testing strcspn() : with heredoc string, varying mask and default start and len arguments
Testing strcspn() : with heredoc string, varying start and default len arguments
Testing strcspn() : with heredoc string, varying start and len arguments
Testing strcspn() : with unexpected values of len argument
Testing strcspn() : with unexpected values of start argument
Testing strcspn() : with varying mask and default start and len arguments
Testing strcspn() : with varying start and default len arguments
Testing strcspn() : with varying start and len arguments
Testing stream_set_timeout with one less than the expected number of arguments
Testing stripslashes() for error conditions
Testing stripslashes() with quoted strings
Testing stripslashes() with strings
Testing strrev() function with heredoc strings for 'str'
Testing strrev() function with unexpected inputs for 'str'
Testing strrev() function with various double quoted strings for 'str'
Testing strrev() function with various single quoted strings for 'str'
Testing strspn withone less than the expected number of arguments
Testing strspn() : basic functionality
Testing strspn() : with different heredoc strings as str argument
Testing strspn() : with different strings as str argument and default start and len args
Testing strspn() : with different unexpected values for mask argument
Testing strspn() : with different unexpected values for str argument
Testing strspn() : with heredoc string, varying mask and default start and len arguments
Testing strspn() : with heredoc string, varying start and default len arguments
Testing strspn() : with heredoc string, varying start and len arguments
Testing strspn() : with unexpected values of len argument
Testing strspn() : with unexpected values of start argument
Testing strspn() : with varying mask and default start and len arguments
Testing strspn() : with varying start and default len arguments
Testing strspn() : with varying start and len arguments
Testing strtok() : basic functionality
Testing strtok() : modifying the input string while it is getting tokenised
Testing strtok() : with different token strings
Testing strtok() : with embedded nulls in the strings
Testing strtok() : with first argument as non-string
Testing strtok() : with heredoc strings
Testing strtok() : with invalid escape sequences in token
Testing strtok() : with miscellaneous combinations of string and token
Testing strtok() for error conditions
Testing strval with a object which has no toString() method
Testing strval with one less than the expected number of arguments
Testing substr_replace() for error conditions
Testing syslog with one less than the expected number of arguments
Testing that we don't crash due to xenon
Testing the Normal behaviour of ltrim() function
Testing the Normal behaviour of rtrim() function
Testing the behavior of array_intersect() by passing different arrays for the arguments.
Testing the behavior of array_intersect_assoc() by passing different arrays for the arguments.
Testing the behavior of dir() function by trying to open a directory which is already open.
Testing the following regular expression features match correctly: 1.
Testing the functionality of array_merge_recursive() by passing  array having duplicate keys.
Testing the functionality of array_merge_recursive() by passing  array having reference variables.
Testing the functionality of array_merge_recursive() by passing  arrays having common key and value.
Testing the functionality of array_merge_recursive() by passing an array having binary values.
Testing the functionality of array_unique() by passing  array having duplicate keys as values.
Testing the functionality of array_unique() by passing  array having reference variables as values.
Testing the functionality of array_unique() by passing an array having binary values.
Testing the sizeof() for non-scalar type(array) value  in default, COUNT_NORMAL and COUNT_RECURSIVE modes.
Testing the sizeof() for some of the scalar types(integer, float) values  in default, COUNT_NORMAL and COUNT_RECURSIVE modes.
Testing to return empty string when start denotes the position beyond the truncation (set by negative length)
Testing token_get_all() with 'source' string containing invalid/unknown token value unknown tokens - T_UNKNOWN(307)
Testing token_get_all() with different class/object keywords scope related :  static - T_STATIC(346), global - T_GLOBAL(340), private - T_PRIVATE(343), public - T_PUBLIC(341), protected - T_PROTECTED(342) class/object related :  var - T_VAR(347), abstract - T_ABSTRACT(345),  interface - T_INTERFACE(353), class - T_CLASS(352), extends - T_EXTENDS(354), implements - T_IMPLEMENTS(355), new - T_NEW(299)
Testing token_get_all() with different exception keywords try - T_TRY(336),  catch - T_CATCH(337), throw - T_THROW(338)
Testing token_get_all() with different function keywords function - T_FUNCTION(333), return - T_RETURN(335) different functions:  include() - T_INCLUDE(262), print() - T_PRINT(266),  isset() - T_ISSET(349), list() - T_LIST(358),  require() - T_REQUIRE(259), empty() - T_EMPTY(350),  declare() - T_DECLARE(324), array() - T_ARRAY(359),  __halt_compiler() - T_HALT_COMPILER(351)
Testing token_get_all() with following predefined language constants: __FILE__     - T_FILE __CLASS__    - T_CLASS_C __TRAIT__    - T_TRAIT_C __FUNCTION__ - T_FUNC_C __LINE__     - T_LINE __METHOD__   - T_METHOD_C
Testing token_get_all() with source string containing HTML code with PHP HTML tags are considered to be T_INLINE_HTML(311)
Testing uasort with ChildClass objects as elements of 'array_arg'
Testing uasort with EmptyClass objects as elements of 'array_arg'
Testing uasort with StaticClass objects as elements of 'array_arg'
Testing uasort() function by passing different scalar/nonscalar values as 'array_arg' argument
Testing uasort() function with different scalar and nonscalar values in place of 'cmp_function'
Testing uasort() functionality with comparison function having arguments as reference
Testing uasort() with 'array_arg' containing different reference variables
Testing uasort() with 'array_arg' having different keys
Testing uasort() with 'array_arg' having different subarrays as array elements
Testing usort with one less than the expected number of arguments
Testing variation in all argument values
Testing variation using use_include_path argument
Testing vfprintf() : basic functionality - using integer format
Testing vprintf() : basic functionality - using integer format
Testing vsprintf() : basic functionality - using integer format
Testing with homedir notation
Testing with inexistent column
Testing with language construct as comparison function
Testing with miscellaneous Permission
Testing with reference types for the arguments
Testing with unexpected argument types
Testing xml_parse with one less than the expected number of arguments
Testing xml_parse_into_struct with one less than the expected number of arguments
Testing xml_parser_get_option with one less than the expected number of arguments
Testing xml_parser_set_option with one less than the expected number of arguments
Testing xml_set_character_data_handler with one less than the expected number of arguments
Testing xml_set_default_handler with one less than the expected number of arguments
Testing xml_set_element_handler with one less than the expected number of arguments
Testing xml_set_end_namespace_decl_handler with one less than the expected number of arguments
Testing xml_set_external_entity_ref_handler with one less than the expected number of arguments
Testing xml_set_notation_decl_handler with one less than the expected number of arguments
Testing xml_set_object with one less than the expected number of arguments
Testing xml_set_processing_instruction_handler with one less than the expected number of arguments
Testing xml_set_start_namespace_decl_handler with one less than the expected number of arguments
Testing xml_set_unparsed_entity_decl_handler with one less than the expected number of arguments
Tests a case where prepareFuncEntry throws in a nested VM context.
Tests a case where we are passing more args than a function takes to its reffiness guard.
Tests for end-of-file on a file pointer.
Tests for segfault if no connection available
Tests how array_diff_assoc compares 1.
Tests identity and basic helper functions
Tests if already/default namespace mappings can be overridden.
Tests taken from GMPs own test suite.
Tests that call ezc_set_error_reporting to manipulate EG(error_reporting) in lval context.
Tests that no strict warning is issued
Tests that stream_get_line() behaves as documented on non-blocking streams: Never return incomplete lines, except on documented conditions: length bytes have been read, the string specified by ending is found, EOF.
Tests the 20 function matrix of: v(),  vf(),  vm(),  vfk(),  vmk(), m(),  mf(),  mm(),  mfk(),  mmk(), vw(), vfw(), vmw(), vfkw(), vmkw(), mw(), mfw(), mmw(), mfkw(), mmkw(),  Using static wait handles which yield results in various types
Tests the 8 function matrix of: vf(), vfk(), vm(), vmk(), mf(), mfk(), mm(), mmk(),  Using static wait handles which yield results in various types
Text nodes are generated by start/end tags and contain the text in between.
That class should extend the SimpleXMLElement class.
That is any Array or Object.
That is invoke their next() method regardless of their state.
That is we cannot decrease visibility.
That is, if you have a string like "This is an example string" you could tokenize this string into its individual words by using the space character as the token.
That means it returns the next array value and advances the internal array pointer by one.
That means that you either need to put the code of examples/autoload.inc into your autoprepend file or that you have to point your ini setting auto_prepend_file to that file.
That means the E_NOTICE bit needs to be part of PHP's error_reporting level and that display_errors is set to 1.
That said, `Pair`s only have two elements.
That test should be added back in when HHVM adds support for this feature.
That this works at all in strict mode is probably a bug, but just making sure it doesn't give an empty position for now.
That way the consistency check will be transitive.
That's just a difference in our implementation of how we store exception messages
That's why we need to cause an error here.
The "distance" between the desired color and each color in the palette is calculated as if the RGB values represented points in three-dimensional space.
The "i" after the pattern delimiter indicates a case-insensitive search
The "ping" command (present in most modern operating systems) is an example application of ICMP.
The "root" locale is equivalent to "en_US_POSIX" in CLDR.
The "salt" is a 9-character string consisting of an underscore followed by 4 bytes of iteration count and 4 bytes of salt.
The 'G' modifier is available since PHP 5.1.0
The 'variant' and 'private' subtags can take maximum 15 values whereas 'extlang' can take maximum 3 values.e.g. Variants are allowed with the suffix ranging from 0-14.
The 'variant', 'private' and 'extlang' multiple values can be specified both as array under specific key (e.g. 'variant') and as multiple numbered keys (e.g. 'variant0', 'variant1', etc.).
The .gitignore will ensure that the frameworks aren't added to the official repo.
The .inc files are not included automatically because they are sooner or later integrated into the extension.
The .opts file for this test sets JitGlobalTranslationLimit in a way such that the second foreach loop's IterInit instruction gets jitted but its IterNext instruction gets interpreted.
The / is the most commonly used delimiter.
The 2-legged flow, or request signing.
The DOMImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.
The DOMText class inherits from DOMCharacterData and represents the textual content of a DOMElement or DOMAttr.
The DeltaBlue planner
The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday.
The FilterIterator::accept() must be implemented in the subclass.
The GMT offset is calculated with the timezone information contained in the DateTimeZone object being used.
The Gregorian calendar was not instituted until October 15, 1582 (or October 5, 1582 in the Julian calendar).
The IMAP specification requires that these messages be passed to the user.
The Jewish calendar has been in use for several thousand years, but in the early days there was no formula to determine the start of a month.
The Levenshtein distance is defined as the minimal number of characters you have to replace, insert or delete to transform str1 into str2.
The Memcached::getResultCode will return Memcached::RES_END if result set is exhausted.
The Memcached::getResultCode will return Memcached::RES_NOTFOUND if the key does not exist.
The MessageFormatter class assembles messages from various fragments (such as text fragments, numbers, and dates) supplied by the program.
The Mongo database server runs a JavaScript engine.
The MongoClient::close() method forcefully closes a connection to the database, even if persistent connections are being used.
The MongoCursor class has several methods for setting flags on the query object.
The MongoDB aggregation framework provides a means to calculate aggregated values without having to use MapReduce.
The MongoResultException is thrown by several command helpers (such as MongoCollection::findAndModify()) in the event of failure.
The MongoSomething object has not been correctly initialized by its constructor  Code: 0  Probably your Mongo object is not connected to a database server.
The MySQL server version associated with the current connection.
The OAuth extension provides a simple interface to interact with data providers using the OAuth HTTP specification to protect private resources.
The PHP IntlBreakIterator serves as the the base class for all types of ICU break iterators.
The PHP casting will fouls us otherwise.
The PHP directive magic_quotes_gpc is on by default, and it essentially runs addslashes() on all GET, POST, and COOKIE data.
The PHP driver uses the "native" error code wherever possible.
The PHP group is in the process of depracating this behavior.
The Phar extension supports reading API version 1.0.0 or newer.
The Phar::startBuffering()/ Phar::stopBuffering() pair of methods is provided for this purpose.
The REPLACE statement first deletes the record with the same primary key and then inserts the new record.
The ROT13 encoding simply shifts every letter by 13 places in the alphabet while leaving non-alpha characters untouched.
The RecursiveFilterIterator::accept() must be implemented in the subclass.
The ReflectionTypeAlias class reports information about a type alias.
The ReflectionTypeConstant class reports information about an object.
The Richards benchmark simulates the task dispatcher of an operating system.
The Simple PHP YAML Class.
The TCP protocol is based on this socket type.
The TEST_WEB_BASE_URL setting should be the base url to access this path.
The Types of filters manual page lists the available filters.
The UDP protocol is based on this socket type.
The URL to POST to
The Unicode Consortium has defined a number of normalization forms reflecting the various needs of applications:  Normalization Form D (NFD) - Canonical Decomposition Normalization Form C (NFC) - Canonical Decomposition followed by Canonical Composition   Normalization Form KD (NFKD) - Compatibility Decomposition Normalization Form KC (NFKC) - Compatibility Decomposition followed by Canonical Composition   The different forms are defined in terms of a set of transformations on the text, transformations that are expressed by both an algorithm and a set of data files.
The XSLTProcessor class.
The Xdebug extension is not loaded.
The __construct() method will not be called after this method.
The __destruct() method will not be called after this method.
The `Iterable` returned is one that produces the values from the current `Pair`.
The `Map` objects map column names to (possibly `null`) `string` values.
The `ResultOrExceptionWrapper` values in the `Map` of the returned `Awaitable` are not available until you `await` or `join` the returned `Awaitable`.
The `ResultOrExceptionWrapper`s in the `Map` of the returned `Awaitable` are not available until you `await` or `join` the returned `Awaitable`.
The `ResultOrExceptionWrapper`s in the `Vector` of the returned `Awaitable` are not available until you `await` or `join` the returned `Awaitable`.
The actual `ResultOrExceptionWrapper` in the returned `Awaitable` will only be available after you `await` or `join` the returned `Awaitable`.
The actual connect happens with the next calls to ldap_* funcs, usually with ldap_bind().
The actual error code can be retrieved by calling socket_last_error().
The actual meanings of these flags are described in the predefined constants.
The actual meanings of these modes are described in the predefined constants.
The actual meanings of these modifiers are described in the predefined constants.
The actual values are arbitrary.
The advantage is that it allows a faster array implementation.
The advantages of a string assertion are less overhead when assertion checking is off and messages containing the assertion expression when an assertion fails.
The alert stack is cleared after imap_alerts() is called.
The algorithm attempts to resatisfy that constraint using some other method.
The algorithm used here was introduced around the year 532 by Dionysius Exiguus.
The analysis used to reject code like this is performed by generating expression dependent types
The appropriate order of function calls is posix_setgid() first, posix_setuid() last.
The area is amount of pixels divided by three.
The arg parameter is in radians.
The array consists of the following fields: Element Information 0 SQLSTATE error code (a five characters alphanumeric identifier defined in the ANSI SQL standard).
The array is passed by value, so this shouldn't have any visible effect.
The array parameter's value being the first, and the key/index second.
The array represents each row as either an array of column values or an object with properties corresponding to each column name.
The array-index operation calls into array_getm_s_fast, which will raise a notice because the index is undefined.
The assert_options() function and/or ASSERT_CALLBACK configuration directive allow a callback function to be set to handle failed assertions.
The associated code is in miProp() for MOpFlags::Unset.
The associativity is preserved.
The attribute index is converted to lowercase.
The available behavior flags are listed below.
The available error level constants and the actual meanings of these error levels are described in the predefined constants.
The available flags are listed below.
The available modes are listed below.
The base exception class for any issues arising from the use of async MySQL.
The base in which number is given is specified in frombase.
The behavior of assert() may be configured by assert_options() or by .ini-settings described in that functions manual page.
The behaviour is undefined.
The behaviour of these constants is described on the JSON constants page.
The behaviour of this function is similar to strnatcmp(), except that the comparison is not case sensitive.
The behaviour on windows is to select an arbitrary timezone name from the current system settings.
The benchmark score is computed later once a full benchmark suite has run to completion.
The benchmark was originally implemented in BCPL by Martin Richards.
The bindtextdomain() function sets the path for a domain.
The blend method uses the background color as any other colors.
The blocked task will not be made runnable until it is explicitly released, even if new work is added to it.
The bug (fixed in libiconv 1.8) was confirmed that iconv goes into an infinite loop when ASCII//TRANSLIT is performed.
The bzip2 or zlib extension must be enabled to take advantage of this feature.
The cachedump command ties up the server and is strictly to be used for debugging purposes.
The calendar was created in 46 B.C., but the details did not stabilize until at least 8 A.D., and perhaps as late at the 4th century.
The call method does not take a scope parameter.
The call to a builtin is needed to invoke the code that saves the VM's hardware registers to ExecutionContext, and gives them values that will be bogus below.
The callback can be from creating a connection, inducing an error condition, executing a query, etc.
The callback is run before failover is attempted.
The callback should return the replacement string.
The callback will be called with all the invariant parameters after the condition.
The caller is expected to make the appropriate add/addAll calls to fill that reserved capacity.
The caller is expected to make the appropriate add/set/addAll/setAll calls to fill this reserved capacity.
The case will be ignored.
The center of rotation is the center of the image, and the rotated image may have different dimensions than the original image.
The change depends on the last optional case parameter.
The channel argument affects only if Imagick is compiled against ImageMagick version 6.4.4 or greater.
The check is done using the real UID/GID instead of the effective one.
The checker should start in any-case mode.
The child can be created with e.g. DOMDocument::createElement(), DOMDocument::createTextNode() etc.
The children of this parent are the same children as one above
The class 'IM' is specific to warnings and errors that derive from the implementation of PDO (or perhaps ODBC, if you're using the ODBC driver) itself.
The class can be used to save 32-bit integers to the database on a 64-bit system.
The class can be used to save 64-bit integers to the database on a 32-bit system.
The class name passed to this method must be derived from SplFileInfo.
The class name passed to this method must be derived from SplFileObject.
The class oop_test uses a static reference to a oop_class instance.
The class uses the formatting specifications for the fragments to assemble them into a message that is contained in a single string within a resource bundle.
The client IP and port will be null if the connection is local.
The client should continue iterating through results until MongoCursor::hasNext() is FALSE.
The code for this function was originally drawn from the Independent JPEG Group library code, which is excellent.
The code has been modified to preserve as much alpha channel information as possible in the resulting palette, in addition to preserving colors as well as possible.
The code passed to the constructor
The codepoint specific integer property value.
The colors parameters are integers between 0 and 255 or hexadecimals between 0x00 and 0xFF.
The commit hash has changed and we need to download new code
The common use case for this is if your async function actually has to wait for some blocking call, you can tell other `Awaitable`s in the async scheduler that they can work while this one waits for the blocking call to finish (e.g., maybe in a polling situation or something).
The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.
The comparison of arrays' data is performed by using an user-supplied callback : data_compare_func.
The comparison of arrays' data is performed by using an user-supplied callback.
The complexity of the algorithm is O(m*n), where n and m are the length of str1 and str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive).
The configuration option will keep this new value during the script's execution, and will be restored at the script's ending.
The connection pool will either create a new connection or use one of the recently available connections from the pool itself.
The connection, which was opened using Memcache::addServer() will be automatically closed at the end of script execution, you can also close it manually with Memcache::close().
The connection, which was opened using Memcache::connect() will be automatically closed at the end of script execution.
The contents of the file are pulled out of MongoDB on the fly, so that the whole file does not have to be loaded into memory first.
The contents of the section will be decoded according to their transfer encoding - base64, quoted-printable and uuencoded text are supported.
The contents of this internal buffer may be copied into a string variable using ob_get_contents().
The converse would not make sense, though.
The conversion is done byte-wise with the high-nibble first.
The coordinates refer to the upper left corner.
The corresponding public portion of the key will be used to sign the CSR.
The cost in this case is, of course, very low.
The coverage information is cleared.
The data is compared by using a callback function.
The data returned by this method will be decoded internally by PHP using the unserialization method specified in session.serialize_handler.
The database cleans up a cursor once all of its results have been sent to the client, but if the client doesn't request all of the results, the cursor will languish there, taking up resources.
The database profiler tracks query execution times.
The database sends responses in batches of documents, up to 4MB of documents per response.
The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox.
The date time format is a message format pattern used to compose date and time patterns.
The decimal value is used in formatting fractions of seconds.
The default (and the one used if NULL is given) is the one returned by date_default_timezone_get() or, if applicable, that of the IntlCalendar object passed for the calendar parameter.
The default character set is ISO-8859-1.
The default entity may be NULL.
The default fill character is space.
The default is 1.
The default is 4 seconds.
The default is 50.
The default is 60 seconds.
The default is SIGTERM.
The default is `'Age'`.
The default is read only.
The default is the actual locale.
The default is to convert everything.
The default is to pad with spaces.
The default is to read until end of file is reached.
The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the php.ini.
The default mode, ENT_COMPAT, is the backwards compatible mode which only translates the double-quote character and leaves the single-quote untranslated.
The default priority is 0 while a lower numerical value causes more favorable scheduling.
The default type is byte array (0x02).
The default value is NULL, which corresponds to IntlDateFormatter::GREGORIAN.
The default value is OPENSSL_KEYTYPE_RSA which is currently the only supported key type.
The default value is determined by the current NLS setting (mbstring.language).
The default value is the largest of the length of the str compared to the length of main_str less the offset.
The default value of 0 means no restriction.
The default value of a static class property can not be tracked when using this method on user defined classes.
The default value of notext is TRUE.
The definition of a word is any string of characters that is immediately after a whitespace (These are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab).
The destructor.
The detector has no idea what to do with this.
The detector only handles UTF-16 if there's a BOM at the front.
The dgettext() function allows you to override the current domain for a single message lookup.
The difference between this function and ftp_fget() is that this function retrieves the file asynchronously, so your program can perform other operations while the file is being downloaded.
The difference between this function and ftp_get() is that this function retrieves the file asynchronously, so your program can perform other operations while the file is being downloaded.
The difference between this function and the ftp_fput() is that this function uploads the file asynchronously, so your program can perform other operations while the file is being uploaded.
The difference between this function and the ftp_put() is that this function uploads the file asynchronously, so your program can perform other operations while the file is being uploaded.
The directory must be empty, and the relevant permissions must permit this.
The distinct command returns a list of distinct values for the given key across a collection.
The distinct iterator object used internally by the foreach construct can only be obtained (in the relevant part here) from objects, so objects of this class serve the purpose of providing the hook through which this internal object can be obtained.
The dngettext() function allows you to override the current domain for a single plural message lookup.
The driver should automatically reconnect (if possible) on the next operation.
The easiest way is to create a field in the current document.
The elements or a `Pair` cannot be mutated (i.e. you can assign to the elements of a `Pair`) though `Pair`s may contain mutable objects.
The encryption handle should always be initialized with mcrypt_generic_init() with a key and an IV before calling this function.
The end time for the specific MySQL operation, in seconds since epoch.
The end time of the connection operation, in seconds since epoch.
The end time when the error was produced, in seconds since epoch.
The end time when the successful query began, in seconds since epoch.
The entry specified by dn is renamed/moved.
The envelope key is generated when the data are sealed and can only be used by one specific private key.
The environment variable will only exist for the duration of the current request.
The error can be  avoided by choosing the __toString magix method as follows:
The error code can be retrieved with socket_last_error().
The error code consists of five characters.
The error code is suitable to be fed to socket_strerror() which returns a string describing the given error code.
The exact layout of the payload data carried by a packet is not importaint, and neither is the nature of the work performed on packets by the tasks.
The exception associated with a MySQL connection failure.
The exception associated with a MySQL query failure.
The exception message
The extension of the filename defines the type of the file.
The extra backslash is required because the string is in double quotes.
The fetch_style parameter determines how PDO returns the row.
The field contains a comma separated list containing the user's full name, office phone, office number, and home phone number.
The field, however, lives on, and its contents have been formalized by POSIX.
The field_offset starts at 0.
The file descriptor numbers are not limited to 0, 1 and 2 - you may specify any valid file descriptor number and it will be passed to the child process.
The file does not need to exist, or be readable.
The file is automatically removed when closed (using fclose()), or when the script ends.
The file is opened and streamed through the parser.
The file is streamed through the parser.
The file may not exist or the file may not have anything in it since there is no diff (i.e., all tests for that particular framework ran as expected).
The file name where the exception was instantiated
The file name's extension must contain .phar.
The file pointed to by handle is closed.
The file protocol is disabled by cURL if open_basedir is set.
The file will be stored in the archive with localname as its path.
The filename argument may be a directory name allowing you to check if a directory is writable.
The filenames are returned in the order in which they are stored by the filesystem.
The final crlf was removed.
The final node in the priority queue is the root.
The final option MYSQLI_BOTH will create a single array with the attributes of both.
The final stats will generally be the last line before we hit null returned from line retrieval.
The findAndModify command atomically modifies and returns a single document.
The first argument will contain the file the assertion failed in.
The first byte suggests this is a three-byte UTF-8 sequence, but it's not valid.
The first call creates the message queue with the optional perms.
The first call to imagecolorallocate() fills the background color in palette-based images - images created using imagecreate().
The first call to ldap_next_attribute() is made with the result_entry_identifier returned from ldap_first_attribute().
The first call to ldap_next_entry() is made after the call to ldap_first_entry() with the result_entry_identifier as returned from the ldap_first_entry().
The first character's position is 0, the second character position is 1, and so on.
The first element in this array has count key and represents the number of returned values, next elements are numerically indexed DN components.
The first element is the descriptor type and the second element is an option for the given type.
The first element of the array will be the beginning of matched part, the second element will be length (bytes) of matched part.
The first element will be used.
The first four bytes are a timestamp, the next three are a hash of the client machine's hostname, the next two are the two least significant bytes of the process id running the script, and the last three bytes are an incrementing value.
The first index is 0.
The first is a header that starts with the string "HTTP/" (case is not significant), which will be used to figure out the HTTP status code to send.
The first of December 2008 is a Monday.
The first successful activity of the current connection is its creation.
The first time through this loop, we know it is an array and therefore can't be a call to extract.
The following 3 members override those in class M
The following code is an optimized version that executes as few valid() calls as necessary and that only checks the flags once.
The following constants are used to specify different formats in the constructor.
The following enum values are replicated in hphp/runtime/base/type-structure.h
The following example incorrectly relies on the return value of PDO::exec(), wherein a statement that affected 0 rows results in a call to die():
The following file shows how to bootstrap phpdbg so that you can mock specific server environments  eval include("web-bootstrap.php") exec index.php compile break ...
The following flags are reported, if your version of MySQL is current enough to support them: "not_null", "primary_key", "unique_key", "multiple_key", "blob", "unsigned", "zerofill", "binary", "enum", "auto_increment" and "timestamp".
The following int constants are used to specify the calendar.
The following is a BC break with PHP 4 where it would  call foo::fail.
The following is a list of common errors, codes, and causes.
The following keys, if present in configargs behave as their equivalents in the openssl.conf, as listed in the table below.
The following line only operates on classes which are converted to c already.
The following line will give a Fatal error: Call to private ...
The following members are overridden in class P
The following options are available: XML parser options Option constant Data type Description XML_OPTION_CASE_FOLDING integer Controls whether case-folding is enabled for this XML parser.
The following parameters are returned in the array parameters Description "tm_sec" Seconds after the minute (0-61) "tm_min" Minutes after the hour (0-59) "tm_hour" Hour since midnight (0-23) "tm_mday" Day of the month (1-31) "tm_mon" Months since January (0-11) "tm_year" Years since 1900 "tm_wday" Days since Sunday (0-6) "tm_yday" Days since January 1 (0-365) "unparsed" the date part which was not recognized using the specified format
The following static members are used with the getLocale methods of the various locale affected classes, such as numfmt.
The format for the options and longopts is almost the same, the only difference is that longopts takes an array of options (where each element is the option) where as options takes a string (where each character is the option).
The format is defined by the formatter, returns both number and currency code.
The frame color is that of the thumbnail's matte color.
The function also returns TRUE/FALSE for INSERT/UPDATE/DELETE queries to indicate success/failure.
The function converts the pathname of an existing accessible file and a project identifier into an integer for use with for example shmop_open() and other System V IPC keys.
The function does not distinguish between static and non static properties and does not take visibility modifiers into account.
The function fscanf() is similar to sscanf(), but it takes its input from a file associated with handle and interprets the input according to the specified format, which is described in the documentation for sprintf().
The function get_magic_quotes_gpc() may come in handy for checking this.
The function may be any PHP callable, either a string function name, an array of object instance and method, or array of classname and static class method.
The function modifies this object.
The function must return TRUE in order to continue iterating over the iterator.
The function named by handler must accept five parameters, and should return an integer value.If the value returned from the handler is FALSE (which it will be if no value is returned), the XML parser will stop parsing and xml_get_error_code() will return XML_ERROR_EXTERNAL_ENTITY_HANDLING.
The function named by handler must accept four parameters, and should return an integer value.
The function named by handler must accept three parameters, and should return an integer value.
The function parses the HTML contained in the string source.
The function parses the HTML document in the file named filename.
The function returns 1 if it matches with the empty string.
The function socket_read() reads from the socket resource socket created by the socket_create() or socket_accept() functions.
The function socket_send() sends len bytes to the socket socket from buf.
The function socket_sendto() sends len bytes from buf through the socket socket to the port at the address addr.
The function socket_write() writes to the socket from the given buffer.
The function sscanf() is the input analog of printf().
The function takes two parameters, the hostname and port of the failed server.
The function tries to avoid breaking words.
The function will be called when the output buffer is flushed (sent) or cleaned (with ob_flush(), ob_clean() or similar function) or when the output buffer is flushed to the browser at the end of the request.
The function will fail and return an integer value corresponding to MSG_ENOMSG.
The function will leave number indices as is.
The function will return an error if the uncompressed data is more than 32768 times the length of the compressed input data or more than the optional parameter length.
The fuzz member of image defines how much tolerance is acceptable to consider two colors as the same.
The getimagesize() function will determine the size of any given image file and return the dimensions along with the file type and a height/width text string to be used inside a normal HTML IMG tag and the correspondant HTTP content type.
The given arguments are passed to the class constructor.
The glob() function searches for all the pathnames matching pattern according to the rules used by the libc glob() function, which is similar to the rules used by common shells.
The goal is to provide insight into the perf costs of simple constructs to aid early design choices for writing performant PHP/Hack.
The goal is to verify we can access the cached string value even if it was generated by a call to __toString().
The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name.
The group ID is returned in numerical format.
The handle must be open for writing.
The handlers for the configured events are called as many times as necessary.
The hard limit acts as a ceiling for the soft limit.
The hash is a 32-character hexadecimal number.
The hash type is triggered by the salt argument.
The hostname associated with the current connection.
The idea for this function was taken from Perl and all formatting codes work the same as in Perl.
The image argument is the return from the imagecreate() or imagecreatefrom* function.
The image format will be GIF87a unless the image has been made transparent with imagecolortransparent(), in which case the image format will be GIF89a.
The image_type_to_mime_type() function will determine the Mime-Type for an IMAGETYPE constant.
The impetus for this file is the "OSS Parity" snapshot on our team TV screen.
The implementation in SplObjectStorage returns the same value as spl_object_hash().
The implicit COMMIT will prevent you from rolling back any other changes within the transaction boundary.
The index comparison is done by a user supplied callback function.
The indices of the hash are: ticks - the number of clock ticks that have elapsed since reboot.
The information about icons are retrieved from the icon with the highest bitrate.
The information that is collected consists of an two dimensional array with as primary index the executed filename and as secondary key the line number.
The input parameter's value being the first, and the key/index second.
The interface has exactly one method, count(), which returns the return value for the count() function.
The items supported by iconv_mime_encode() are listed below.
The iterator interface to normalizer is rarely used, so is not provided here.
The key is encrypted with each of the public keys associated with the identifiers in pub_key_ids and each encrypted key is returned in env_keys.
The key is the argument name and the value is the xdebug-specific serialization of the argument value.
The key specification can either be just a single field name as string, or an array containing one or more field names with their sort direction.
The key to each array element is an option listed above, while the value is an `int` or `string`, depending on the option.
The key to entry correlations will be maintained.
The keys and values in the `Map` of the returned `Awaitable` are not available until you `await` or `join` the returned `Awaitable`.
The keys are 0 and 1.
The keys should be valid curl_setopt() constants or their integer equivalents.
The lack of alpha component support does not allow an alpha based antialiasing method.
The language-neutral way to create messages keeps each part of the message separate and provides keys to the data.
The largest number that can be converted is 4294967295 in decimal resulting to "37777777777".
The largest number that can be converted is 4294967295 in decimal resulting to "ffffffff".
The last ID inserted, if one existed, for the query that produced the current result.
The last buffer content is sent to next buffer  Source code: main/output.c Alias to functions:
The last chunk may contain less than size elements.
The last node should be identical with the last entry in the children array
The last provision is for past states of history variables, which are not stay but which are also not computed by any constraint.
The latest SHA at the time was used for the value.
The latter is particularly helpful for functions like socket_create() which don't return a socket on failure and socket_select() which can fail for reasons not directly tied to a particular socket.
The latter restriction is necessary because it would be impossible to determine the parameter type.
The latter will also emit a warning, which we don't care about, so suppress it.
The left child of the dummy node will hold the R tree of the algorithm.
The legacy fb_utf8ize() implementation used to treat this three-byte sequence as two invalid code points followed by a valid ASCII character.
The length of array increases by the number of variables pushed.
The length of salt to generate
The length required in the final serialization
The library must be located in the directory specified in the configure option sqlite3.extension_dir.
The line number where the exception was instantiated
The line returned has the ending newline removed.
The list of valid identifiers is available in the List of Supported Timezones.
The locales are comma-separated if there is more than one.
The locales are syntactically like those from the HTTP Accept-Language header.
The localtime() function returns an array identical to that of the structure returned by the C function call.
The logging mechanism as used by MongoLog emits all log messages as a PHP notice.
The loop to ouput the test coverage info Should output: Extension, Class Name, Method/Function Name, Test Status, Test Files
The lowest byte of the int is reserved for pecl/memcache internal usage (e.g. to indicate compression and serialization status).
The main body of a script is level 0 and each include and/or function call adds one to the stack depth level.
The main code, pull requests, and dependencies have been fetched at this point, and the autoload map will have been generated.
The main differences between a SplFixedArray and a normal PHP array is that the SplFixedArray is of fixed length and allows only integers within the range as indexes.
The majority of the Redis API is implemented by __call which references this list for how the individual command should be handled.
The markers are legal only in certain places in SQL statements.
The maximum number passed to the backlog parameter highly depends on the underlying platform.
The maximum size of a single object that can be inserted into the database is 16MB.
The message will be unserialized and then returned to your script.
The metadata can be retrieved using debug_backtrace(DEBUG_BACKTRACE_PROVIDE_METADATA).
The metaphone generated keys are of variable length.
The method 'bar' does not exist but that's ok
The method serialize is called whenever an instance needs to be serialized.
The method serialized is called whenever an instance needs to be serialized.
The methods supplied in this class are used to build all the messages that are seen by end users.
The mode is also modified by the current umask, which you can change using umask().
The modifiers are listed below.
The multi-byte encodings are not supported
The mysqli exception handling class.
The name "system" is also reserved.
The name and port must be passed by reference.
The name and value will be added to URLs (as GET parameter) and forms (as hidden input fields) the same way as the session ID when transparent URL rewriting is enabled with session.use_trans_sid.
The name is matched in a case-insensitive manner.
The name will only be effective for the upcoming I/O and it will be reset immediately after.
The named file must contain a PEM encoded certificate/private key (it may contain both).
The names of the different calendars which can be used as calendar are as follows: 0 or CAL_GREGORIAN - Gregorian Calendar 1 or CAL_JULIAN - Julian Calendar 2 or CAL_JEWISH - Jewish Calendar 3 or CAL_FRENCH - French Revolutionary Calendar  If no calendar is specified information on all supported calendars is returned as an array.
The names of the different keys of the associative array are as follows:  "tm_sec" - seconds "tm_min" - minutes "tm_hour" - hour "tm_mday" - day of the month Months are from 0 (Jan) to 11 (Dec) and days of the week are from 0 (Sun) to 6 (Sat).
The new position, measured in bytes from the beginning of the file, is obtained by adding offset to the position specified by whence.
The new_link parameter modifies this behavior and makes mysql_connect() always open a new link, even if mysql_connect() was called before with the same parameters.
The next entries are the decoded uuencoded files.
The null or empty string obtains the "root" locale.
The number of database rows affected in the current result.
The number of errors, warnings, and notes returned during execution of the previous SQL statement.
The number of rows in the current result.
The number of values can be found by indexing "count" in the resultant array.
The object can be made persistent across request for a given PHP session with the SoapServer::setPersistence() method.
The object has the following properties: messages, recent, unseen, uidnext, and uidvalidity.
The object will be formatted using the formater's configured timezone.
The object will only define a property if it exists.
The old archive is not removed from disk, and should be done manually after the process has finished.
The old implementation treated this as three code points.
The only cases where this would not be true is if, for some rare reason, stat information is part of the information provided for a given test error -- or -- we have hit a fatal at the very end of running PHPUnit.
The only exception is new MongoClient() (creating a new connection), which will only throw MongoConnectionExceptions.
The only purpose of this is to check if emulated and native PS return the same.
The only way to specify this default value is to leave it out of the parameter list.
The optional parameter offset can be used to specify the alternate place from which to start the search (in bytes).
The optional parameters allow optional control over which files are extracted, and whether existing files on disk can be overwritten.
The optional parameters must be passed by reference.
The optional setup and tearDown arguments are functions that will be invoked before and after running the benchmark, but the running time of these functions will not be accounted for in the benchmark score.
The options parameter may contain the following elements: Individual characters (do not accept values) Characters followed by a colon (parameter requires value) Characters followed by two colons (optional value) Option values are the first argument after the string.
The origin charset must have at most 256 code points.
The original listening socket socket, however, remains open and may be reused.
The original result document is available through MongoResultException::getDocument().
The other INPUT_* can be used as well.
The output_callback parameter may be bypassed by passing a NULL value.
The owner ID is returned in numerical format.
The parent of this last node is the root again
The passthru() function is similar to the exec() function in that it executes a command.
The path of this linter
The path where the binary is located.
The paths that we actually want to report on.
The pattern string has its component parts replaced in a locale-sensitive manner using items in the arguments array.
The pcntl_fork() function creates a child process that differs from the parent process only in its PID and PPID.
The pcntl_signal() function installs a new signal handler for the signal indicated by signo.
The pcntl_signal_dispatch() function calls the signal handlers installed by pcntl_signal() for each pending signal.
The pcntl_sigprocmask() function adds, removes or sets blocked signals, depending on the how parameter.
The period of this function is equal to the product of both primes.
The permission of the newly created FIFO also depends on the setting of the current umask().
The persistence SOAP_PERSISTENCE_SESSION makes only objects of the given class persistent, but not the class static data.
The plural version of gettext().
The point of this unit test is to detect regressions if/when we fix either of those issues, though.
The port on which the MySQL instance is running.
The portion defined will be copied onto the x,y coordinates, dst_x and dst_y.
The position  returned is still relative to the beginning of haystack.
The position is represented by bytes from the head of string.
The position returned is still relative to the beginning of haystack.
The possible message types are as follows:    error_log() log types    0 message is sent to PHP's system logger, using the Operating System's system logging mechanism or a file, depending on what the error_log configuration directive is set to.
The possible properties are: subject - the messages subject from - who sent it to - recipient date - when was it sent message_id - Message-ID references - is a reference to this message id in_reply_to - is a reply to this message id size - size in bytes uid - UID the message has in the mailbox msgno - message sequence number in the mailbox recent - this message is flagged as recent flagged - this message is flagged answered - this message is flagged as answered deleted - this message is flagged for deletion seen - this message is flagged as already read draft - this message is flagged as being a draft
The possible returned elements are as follows:    Possible returned elements from debug_backtrace()           function string  The current function name.
The possible value for the format and the resultant outputs are listed below.
The possible values for this parameter are the constants MYSQLI_ASSOC, MYSQLI_NUM, or MYSQLI_BOTH.
The precision specifier stands for the number of digits after the decimal point since PHP 5.2.1.
The preferred way to create an instance of MongoDB is through MongoClient::__get() or MongoClient::selectDB().
The probability is relative to the total weight of all servers.
The proper value can be retrieved by name by using getprotobyname().
The properties of the object are:      name - column name     table - name of the table the column belongs to, which is the alias name if one is defined     max_length - maximum length of the column     not_null - 1 if the column cannot be NULL     primary_key - 1 if the column is a primary key     unique_key - 1 if the column is a unique key multiple_key - 1 if the column is a non-unique key     numeric - 1 if the column is numeric     blob - 1 if the column is a BLOB     type - the type of the column     unsigned - 1 if the column is unsigned zerofill - 1 if the column is zero-filled
The proxy could make things a bit adventurous, so we will see how this works out after some time to test it out
The public component of the key can be obtained using openssl_pkey_get_public().
The purpose of this test is to make sure that '/tmp/foo/http://example.com' is treated as a file path, not a URI with a scheme of /tmp/foo/http - if it is, an unknown stream type warning will be raised.
The range is specified by two non-negative integers: a starting position and a length.
The reason for this conversion is that the memory stream has an ugly but working mechanism to prevent being double freed when it's encapsulated, while STDIO streams don't.
The removed node is returned.
The repeater argument can be either an integer value or * for repeating to the end of the input data.
The result array will contain only found key-value pairs.
The result of a successfully executed MySQL query.
The result will be PHP value for simple resources and ResourceBundle object for complex ones.
The resulting file can be processed with the gunzip command/bunzip command, or accessed directly and transparently with the Phar extension.
The resulting header is "folded" to a set of multiple lines in case the resulting header field would be longer than the value of this parameter, according to RFC2822 - Internet Message Format.
The resulting path will have no symbolic link, '/./' or '/../' components.
The resulting pixel is opaque.
The results are different for HHVM and PHP 5 due to the following reason.
The return value is cast to an integer.
The return value of ceil() is still of type float as the value range of float is usually bigger than that of integer.
The return value of floor() is still of type float because the value range of float is usually bigger than that of integer.
The return value of setlocale() depends on the system that PHP is running.
The return value will be casted to boolean if non-boolean was returned.
The return values are equally processed internally by PHP.
The return will always be 0 since a `Pair` only has two keys, 0 and 1.
The return will always be 1 since a `Pair` only has two keys, 0 and 1.
The returned `Vector` will, of course, be mutable.
The returned by this method must be in the same serialized format as when originally passed to the SessionHandlerInterface::write() If the record was not found, return an empty string.
The returned crypttext can be larger than the size of the data that was given by data.
The returned data may be binary.
The returned name returned matches the name of the matching token constant.
The returned result can be used with mysql_field_flags(), mysql_field_len(), mysql_field_name() mysql_field_type().
The returned result resource should be passed to mysql_fetch_array(), and other functions for dealing with result tables, to access the returned data.
The returned string will be the same as the name of the error code constant.
The root of the project.
The row has values associated with each column.
The row is returned as an array.
The rows are returned as a `Vector` of `Map` objects.
The rows are returned as a `Vector` of `Vector` objects which hold the (possibly `null`) `mixed` values of each column in the order of the original query (e.g., an `INTEGER` column will come back as an `int`.).
The rows are returned as a `Vector` of `Vector` objects which hold the (possibly `null`) `string` values of each column in the order of the original query.
The running script must have executable permissions on all directories in the hierarchy, otherwise realpath() will return FALSE.
The runtime sees that x exists, but is invisible, so it calls __get to search for a dynamic property of that name, which fails.
The runtime will attempt to get a backtrace, which will crash because m_fp is out of sync and points at something that isn't an ActRec.
The safe_mode_allowed_env_vars directive contains a comma-delimited list of prefixes.
The same IV must be used for encryption/decryption.
The same for aliases
The same is true for the insteadof operator to resolve conflicts
The same options are supported through the options array as well, and are therefore redescribed there.
The scope is a associative array of variable name/value pairs.
The second DIM (final op) will throw an exception from the error handler here.
The second DIM (intermediate op) will throw an exception from the error handler here.
The second arg is supposedly required.
The second argument will contain the line the assertion failed on and the third argument will contain the expression that failed (if any - literal values such as 1 or "two" will not be passed via this argument)
The second copy should remain unsorted.
The second parameter files can be either the name of a file or directory to extract, or an array of names of files and directories to extract.
The second parameter to the constructor is a hint in how to interpret the first, if it can't figure it out.
The second special case is the "Location:" header.
The second statement is always executed.
The sender is assumed to have marked the inputs of the given constraint with the given mark.
The sent data completes the record.
The sent data completes the transaction.
The serialization method used is specified in the session.serialize_handler setting.
The server currently 02.09.2011 can't handle data sent in utf16le
The server currently 16.08.2010 can't handle data sent in utf16 and utf32
The server currently 17.07.2007 can't handle data sent in ucs2
The server only accepts once, but the client will call stream_socket_client multiple times with the persistent flag.
The server part is mandatory in all mailbox parameters.
The session id of a process is the process group id of the session leader.
The session is set by MySSLContextProvider.
The session name can't consist of digits only, at least one letter must be present.
The settings xdebug.collect_includes, xdebug.collect_params and xdebug.collect_return influence what information is logged to the trace file and the setting xdebug.trace_format influences the format of the trace file.
The shell functions include exec(), system() and the backtick operator.
The shutdown callbacks are executed as the part of the request, so it's possible to send output from them and access output buffers.
The size values are a bit of a difficult thing to check so we use them as sort of a lower bound.
The socket resource returned by socket_accept() may not be used to accept new connections.
The socket_get_option() function retrieves the value for the option specified by the optname parameter for the specified socket.
The socket_recv() function receives len bytes of data in buf from socket.
The socket_recvfrom() function receives len bytes of data in buf from name on port port (if the socket is not of type AF_UNIX) using socket.
The socket_set_block() function removes the O_NONBLOCK flag on the socket specified by the socket parameter.
The socket_set_nonblock() function sets the O_NONBLOCK flag on the socket specified by the socket parameter.
The socket_set_option() function sets the option specified by the optname parameter, at the specified protocol level, to the value pointed to by the optval parameter for the socket.
The soft limit is the value that the kernel enforces for the corresponding resource.
The solution is to reference the first element before removing it with array_shift():
The source can be MCRYPT_RAND (system random number generator), MCRYPT_DEV_RANDOM (read data from /dev/random) and MCRYPT_DEV_URANDOM (read data from /dev/urandom).
The special name INBOX stands for the current users personal mailbox.
The special value * matches all local names.
The special value * matches all namespaces.
The special value * matches all tags.
The stack trace
The standard DES-based crypt() returns the salt as the first two characters of the output.
The start time for the connection operation, in seconds since epoch.
The start time for the specific MySQL operation, in seconds since epoch.
The start time when the error was produced, in seconds since epoch.
The start time when the successful query began, in seconds since epoch.
The starting point for the fill is x, y (top left is 0, 0) and the region is filled with color color.
The static invocation may be used when no DOMDocument properties need to be set prior to loading.
The static variable is useful for queries such as database commands and MongoCollection::findOne(), both of which implicitly use cursors.
The step parameter was introduced in 5.0.0
The storage object will never contain more than one object with the same identifier.
The strategy is to first look whether there's an existing compilation database and use that if it's exhaustive.
The stream must have previously been opened by opendir().
The stream will by default be opened in blocking mode.
The stream_select() function accepts arrays of streams and waits for them to change status.
The string after the last space in actual_test_command is the file that is run in phpunit.
The string for matching is set by mb_ereg_search_init().
The string of code must be valid JavaScript.
The string representations as generated during construction
The string returned will be either `'TimedOut'`, representing a timeout, or `'Failed'`, representing the server rejecting the connection or query.
The string will be tokenized when any one of the characters in the argument are found.
The strings will be compared using the options already specified.
The structure of the array is as follows.
The structure of the entry is same as in ldap_add().
The structure of the ini file is the same as the php.ini's.
The structure of the ini string is the same as the php.ini's.
The structure of this shape is specified in reflection.hhi.
The subclass value '000' in any class indicates that there is no subclass for that SQLSTATE.
The supplied value must be between 0 and 1.
The supported encodings are ISO-8859-1, UTF-8 and US-ASCII.
The system error message associated with the errno may be checked with posix_strerror().
The system() call also tries to automatically flush the web server's output buffer after each line of output if PHP is running as a server module.
The target may not be the real path on the filesystem.
The task has packets left to process.
The task is blocked and cannot be run until it is explicitly released.
The task is not blocked as such and may be started by the scheduler.
The task is not currently running.
The task is running and is currently scheduled.
The term "Monday December 2008" will be parsed as the first Monday in December 2008.
The test is about checking the fallback to emulation
The tested node have to be an XML_ELEMENT_NODE.
The tests files file would have the wrong path information then.
The text node is determined to contain whitespace in element content during the load of the document.
The theoretical maximum for this value is the square root of three (1.732).
The time is measured to change a variable on either side of the mapping and to change the scale and offset factors.
The time is returned as a Unix timestamp, which is suitable for the date() function.
The time is returned as a Unix timestamp.
The time returned is a Unix timestamp.
The time returned is localtime (and not GMT).
The timeout is an upper bound on the amount of time elapsed before socket_select() return.
The timeout is an upper bound on the amount of time that stream_select() will wait before it returns.
The timezone of the formatter will only be kept if an IntlCalendar object is not passed, otherwise the new timezone will be that of the passed object.
The total number of row blocks makes up the entire result of the successful query.
The total time for the MySQL error condition to occur, in microseconds.
The total time for the establishment of the MySQL connection, in microseconds.
The total time for the specific MySQL operation, in microseconds.
The total time for the successful query to occur, in microseconds.
The two digit cost parameter is the base-2 logarithm of the iteration count for the underlying Blowfish-based hashing algorithmeter and must be in range 04-31, values outside this range will cause crypt() to fail.
The two failing frameworks are Monolog and ZF2.
The type known at compile-time
The type not known at compile-time
The type of failure that produced this result.
The type of returned array depends on how result_type is defined.
The type of socket created is determined by the transport specified using standard URL formatting: transport://target.
The typechecker intentionally does not recognize this, however, you can use it in combination with // UNSAFE if absolutely required.
The typechecker won't like this but we shouldn't care
The types are not statically knowable.
The types of confusability to be tested - single script, mixed script, or whole script - are determined by the check options set for this instance.
The typical effect is that each web server child will retry the connection about every retry_interval seconds when serving a page.
The unit depends on the type of the resource being limited.
The use of the dummy node is a bit counter-intuitive: The right child of the dummy node will hold the L tree of the algorithm.
The use of this parameter should therefore be considered good practice.
The user ID is returned in numerical format, use posix_getpwuid() to resolve it to a username.
The user supplied callback function is used for comparison.
The user that the webserver runs as should be added as a trusted user to the sendmail configuration to prevent a 'X-Warning' header from being added to the message when the envelope sender (-f) is set using this method.
The valid ones are supposed to have only 2 entries, the first of which is an object or a string, and the second a string.
The value FALSE can also be returned on failure.
The value can be between 0 and 250 with 0 being a special case.
The value in the elements represents how many times a line has been executed.
The value is a bit set, obtained by OR-ing together the constant values in this class.
The value must be a bitmask of the VAR_* constants.
The value of options is the value of zero or more of the following two constants OR'ed together: Possible values for options WNOHANG Return immediately if no child has exited.
The value of this item may be either "B" or "Q", where "B" stands for base64 encoding scheme and "Q" stands for quoted-printable encoding scheme.
The value returned should be read in minutes, defaults to 180.
The values in the `Vector` of the returned `Awaitable` are not available until you `await` or `join` the returned `Awaitable`.
The values in the array will be strings for uniquely specified headers, but arrays where a header was specified more than once.
The values in the entries are indexed by individual attributes.
The values of the provided `Traversable` is concatenated to the end of the current `Pair` to produce the returned `ImmVector`.
The variable in the calling environment will retain the same value as before unset()  was called.
The variable in the calling environment will retain the same value as before unset() was called.
The variable is still present in the shared memory.
The variables of constraints that have been processed are marked with a unique mark value so that we know where we've been.
The wait function suspends execution of the current process until a child has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function.
The way these two are conjoined is by using the AppendItemFormat for G (era).
The way we test the INSERT and data types overlaps with the mysqli_stmt_bind_result test in large parts.
The wrapper used in oldname must match the wrapper used in newname.
The xbox thread would reset when this amount of time has passed since the previous reset.
The zlib extension must be enabled to compress with gzip compression, the bzip2 extension must be enabled in order to compress with bzip2 compression.
The zlib extension must be enabled to decompress an archive compressed with gzip compression, and the bzip2 extension must be enabled in order to decompress an archive compressed with bzip2 compression.
The zlib or bzip2 extensions must be enabled to take advantage of this feature.
Then all values in the input array are filtered by this filter.
Then if the input skeleton is "MMMdhmm", there is not an exact match, so the input skeleton is broken up into two components "MMMd" and "hmm".
Then it compares the parts starting from left to right.
Then prefix, serialie, and cast as needed
Then reset to PDOStatement.
Then that pattern is used, plus the G.
Then we return as normal (and this test is trying to make sure nothing chokes due to the destroyed locals), then further out the next enter hook will throw the fatal.
Then when you `await` or `join` on the returned `Awaitable`, you will get a `Vector` of `AsyncMysqlQueryResult`, one result for each query.
Then you will be able to use the async `AsyncMysqlConnection` methods like `queryf()`, etc.
Then, any changes made to those elements will be made in the original array itself.
Theoretically this should be valid because it weakens the constraint, but PHP does not allow this (for non-variadics), so I'm not allowing it here, too, to stay consistent.
There are a number of possible error messages to help you diagnose the connection problem.
There are also OAuth provider examples within the OAuth extensions sources.
There are close matches for those two skeletons, so the result is put together with this pattern, resulting in "d-MMM h:mm".
There are five predefined types (which are the class constants listed below), and the user can create their own (at the risk of the BSON spec catching up with them).
There are five types of binary data currently recognized by the BSON spec: function (0x01), byte array (0x02), UUID (0x03), MD5 (0x05), and user defined (0x80).
There are six methods which wrap the six internal session save handler callbacks (open, close, read, write, destroy and gc).
There are some rare cases where the normal search returns FALSE while the parallel search returns an identifier.
There are three regions to test:, before cut, the cut and after the cut.
There are two cases.
There are two special-case header calls.
There exists a canonicalization function to make case match the specification.
There is a default of 60 seconds to run each test, but this can be shortened or lengthened as desired.
There is a list of predefined classes in the Predefined Classes section of the appendices.
There is no constructor in this trait-- It should be possible to extend Exception and add a PHP4 constructor, traits play poorly with PHP4 constructors.
There is no element 3 in a `Pair`, but if you specify an element greater than 2, it will just return all elements in the `Pair`.
There is no element 3 in a `Pair`, but if you specify an element greater than or equal to 2, it will just return empty.
There is no particular difference in how the driver or server interpret different types, so by and large they are irrelevant for now.
There is no semantics for traits in the inheritance chain.
There is no standard provision to find out the actual backlog value on this platform.
There is one exception, if var is NULL, 0 will be returned.
There is only one difference.
There is some duplication with this class.
There might still have occurred problems on individual transfers even when this function returns CURLM_OK.
There was a bug where capacity was being decreased to the old capacity (3), which is not large enough to accommodate the current number of elements (4).
There was a weird bug in Typing_generic.rename, that was reproduced with this case.
There's gotta be a cleaner way to do this...
Therefore adding an explicit skip, remove it to run this test.
Therefore, "B::foo()" and "call_user_func('B::foo')" and "call_user_func(array('B', 'foo'))" should all produce consistent results.
Therefore, "B::meth()" and "call_user_func('B::meth')" and "call_user_func(array('B', 'meth'))" should all produce consistent results.
Therefore, TCP applications must allow for the possibility of partial record transmission.
Therefore, it is impossible to mix encoding in single array or object.
Therefore, there will be no data in the buffer.
These APIs are listed as "subject to change", avoid for now
These are encoded as printable characters, 6 bits per character, least significant character first.
These are extension functions that call into o_set() and o_get().
These are in a separate file so they can be loaded before the things that use them
These are in a separate test so that Zend can still generate param_tostring_zendcompat.php.expect
These are less than 80 width, but the pretty newlines are preserved.
These are not in our custom ini file for this test, but should be bound to a default value
These are set in our custom ini file for this test
These are tests for dates outside the 32-bit range.
These are the five necessary properties for a proper install, with pull_requests being optional.
These are:  No candidate servers found  Thrown when the driver cannot establish a connection to MongoDB (fulfilling the ReadPreferences, if specified).
These arrays contain a MySQL link identifier in the 0'th position, and any other values in the remainder of the array.
These calendars are all based directly on the Gregorian calendar  Non-Gregorian calendars need to be specified in locale.
These calls fail
These constants define formatter/parser argument type - integer, floating point or currency.
These don't work in HHVM, and are unlikely to be fixed.
These effects occur even if the user didn't change.
These enum values correspond to the 'kind' field in the TypeStructure shape returned by type_structure() or ReflectionTypeConstant::getTypeStructure().
These exercise direct property setting and getting.
These exercise t___get() and t___set().
These files are binary data arrays which ICU uses to store the localized data.
These flags are the same as the ones given to for example Memcache::set().
These flags depend on the operation mode parameter: - RecursiveRegexIterator::ALL_MATCHES: See preg_match_all().
These flags depend on the operation mode parameter: - RegexIterator::ALL_MATCHES: See preg_match_all().
These last two parameters must be passed by reference.
These parameters are integers between 0 and 255 or hexadecimals between 0x00 and 0xFF.
These parse, but don't work at runtime currently:
These routines only convert dates in years 1 through 14 (Gregorian dates 22 September 1792 through 22 September 1806).
These servers may return a failure code (FALSE) indicating the command is not supported or a success code (TRUE) to indicate that pre-allocation is not necessary and the client should continue as though the operation were successful.
These should be fine
These should be visible through C
These should fail
These two constants specify how many times a packet is queued and how many times a task is put on hold in a correct run of richards.
These two temps may alias, so before decrefing to overwrite it with an array(), it needs to observe the may-alias sets to ensure the incref for the return value isn't pushed past that decref.
These types will be automatically detected if your build of PHP supports them: JPEG, PNG, GIF, WBMP, and GD2.
These values are used for mb_ereg_search(), mb_ereg_search_pos(), and mb_ereg_search_regs().
These values do not get implicitly converted to objects
These values get implicitly converted to objects
These variables will be protected even if safe_mode_allowed_env_vars is set to allow changing them.
These will be moved out of Collator when Locale class is created.
They are in the stats file as context for the numbers
They are useful for handling such things as file permissions and group membership.
They can also be set later with FilesystemIterator::setFlags().
They can be implemented as module functions, but there won't be many users need them.
They don't have any meaning a such but are characteristic of a correct run so if the actual queue or hold count is different from the expected there must be a bug in the implementation.
They should all return false
They will be treated as though you called PDOStatement::setFetchMode() on the resultant statement object.
They will end up in an arbitrary relative position.
They will now be removed with the array_diff
Thickness and styled are not supported.
Think twice before changing the default value of 1 second - you can lose all the advantages of caching if your connection is too slow.
This ID must be a valid identifier on ICU's database or an ID representing an explicit offset, such as GMT-05:30.
This Set will have an initial capacity of 3
This affects calls like fgets() and fread() that read from the stream.
This allows complex arrays and objects to be sent to other PHP scripts, or if you are using the WDDX serializer, to any WDDX compatible client.
This allows iteration over all elements using foreach or an appropriate while construct, just like SimpleXMLElement does.
This allows multiple-row inserts to be reproduced correctly on other servers in a replication setup.
This allows one username to be used with different permissions (depending on if a password as provided or not).
This allows related items to be grouped together on a single server for efficiency with multi operations.
This allows related items to be grouped together on a single server for efficiency with multi operations..
This allows the algorithm to avoid getting into an infinite loop even if the constraint graph has an inadvertent cycle.
This allows you to easily receive arrays or complex object structures from other PHP scripts, or if you are using the WDDX serializer, from any WDDX compatible source.
This allows you to specify (in your machine's syslog configuration) how messages coming from different facilities will be handled.
This allows you, for example, to intercept the read and write methods to encrypt/decrypt the session data and then pass the result to and from the parent class.
This allows your script to interoperate with other scripts that run as "co-processes".
This also accounts for why we update _position manually (and similarly, why we set it manually to 0 in the block above).
This also helps us prepare for incorporating this with our official test suite.
This also occurs if you use this parameter to limit the count of fetched entries.
This also prevents from calling autoloader if the class doesn't exist.
This applies to both sprintf() and printf().
This array has 25 elements, but only 3 unique values
This array is passed by reference because it is modified by the function.
This attempts to push current output all the way to the browser with a few caveats.
This basically copies zend/ext/spl/tests/SplFixedArray_setSize_param_null.php but changes the expectf to match hhvm's var_dump output
This behavior is different from that of strstr().
This behaviour is unlike what array_udiff_assoc() does, since the latter compares the indices by using an internal function.
This benchmark is based on a JavaScript log processing module used by the V8 profiler to generate execution time profiles for runs of JavaScript applications, and it effectively measures how fast the JavaScript engine is at allocating nodes and reclaiming the memory used for old nodes.
This better not iterate the dataflow algorithm forever:
This calculations requires walking the preclasses in the hierarchy and should not be getting performed repeatedly.
This call needs a result_entry_identifier, so needs to be preceded by one of the ldap search calls and one of the calls to get an individual entry.
This can also be an IntlTimeZone or a DateTimeZone object.
This can also be caused by the driver not being able to reconnect at all to the database (if, for example, the database is unreachable).
This can be called before or after the query.
This can be for example RGB.
This can be omitted and skipped with -1 for transports that do not use ports, such as unix://.
This can be one of OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH or OPENSSL_KEYTYPE_RSA.
This can be one of the RGB colors, CMYK colors, alpha and opacity e.g (Imagick::COLOR_BLUE, Imagick::COLOR_MAGENTA).
This can be used to see the log level.
This can be used to select a name from a WSDL file.
This can be useful if you want touch a number of collections lightly, or process some results on the database side to reduce the amount that has to be sent to the client.
This can be useful to report progress.
This can cause some unintuitive behavior.
This can either be one of the IntlDateFormatter calendar constants or an IntlCalendar.
This can only be called when handling a request.
This can only happen if bad arguments are passed in.
This cannot be implemented in __construct, because a derived class may implement its own __construct, losing the stacktrace.
This causes a seg fault.
This causes hash collisions if the string hash is case-insensitive.
This causes that flushing and cleaning functions would issue a notice and return FALSE if called.
This causes the previously undefined variable to now be defined with a value of NULL.
This causes the previously undefined variable to now be defined.
This changes the current database profiling level.
This charset is supported in 4.3.2.
This choses a random secondary for a connection to read from.
This class allows you to asynchronously connect to a MySQL client.
This class allows you to turn on specific levels of logging for specific parts of the driver.
This class and its methods are therefore deprecated and should not be used.
This class can be used to create lightweight links between objects in different collections.
This class can be used to create regular expressions.
This class can be used to read a YAML file and convert its contents into a PHP array.
This class consists only of static methods.
This class contains exclusively static methods for manipulating database references.
This class extends MongoClient and provides access to several deprecated methods.
This class fulfills the constraints of quickly generating a value that is unique across shards.
This class holds the SSL Context Provider that MySQL client will use to establish a SSL connection.
This class implements Traversable.
This class implements access to ICU resource data files.
This class is `abstract` and cannot be instantiated, but provides the methods that concrete classes must implement, which are timing information methods regarding a query, connection or a resulting error.
This class is instantiated through a call from the connection object via `AsyncMysqlConnection::connectResult()`.
This class is instantiated when an `AsyncMysqlException` is thrown and `AsyncMysqlException::getResult()` is called.
This class is instantiated when an `AsyncMysqlQueryException` is thrown and `AsyncMysqlQueryException::getResult()` is called.
This class is loosely based on the Symfony UniversalClassLoader.
This class is not for measuring time, creating a timestamp on a document or automatically adding or updating a timestamp on a document.
This class is used to create and manage connections.
This class may only be instantiated by ::create or ::createFromRules
This class provides a mechanism to create a pool of connections to a MySQL client that can be utilized and reused as needed.
This class provides round-trip and callback timing information for various operations on the MySQL client.
This class represents iterator objects throughout the intl extension whenever the iterator cannot be identified with any other object provided by the extension.
This class represents the ICU date formatting functionality.
This class represents the ICU number formatting functionality.
This class should be extended to implement custom filters.
This class should be extended to implement custom iterator filters.
This class should be used to save dates to the database and to query for dates.
This code may be passed to socket_strerror() to get a textual explanation of the error.
This code may be passed to socket_strerror() to get a textual representation of the error.
This command is identical to running:
This comparison is done by a user supplied callback function.
This connection is not closed after the end of script execution and by Memcache::close() function.
This constant is mapped to ::RS for BC
This controls the probability of the server being selected for operations.
This could be a php.net bug on windows or a windows querk.
This could probably wouldn't be problematic to allow but it is dumb, so.
This covers a bunch of different error conditions that may eventually be moved to more specific exceptions, but will always extend MongoException.
This creates a fresh copy of all database data.
This creates a new token incase the current one does not exist.
This creates a standalone phar file with all of the PHP source included.
This creates the possibility that mysql_affected_rows() may not actually equal the number of rows matched, only the number of rows that were literally affected by the query.
This current working directory might be different than you expect it to be, so please use an absolute path in case you specify a file name.
This defers from the PHP behavior.
This defines the character set used in conversion.
This depends on a class constant, which means it will need a 86pinit().
This disables mongodb support
This disallows untemplated arrays
This doc comment block generated by idl/sysdoc.php
This doc comment is so helpful and descriptive.
This does not indicate whether the user accepted the cookie.
This does not invoke __destruct() or has any other side effect unless programmed inside the method.
This does not work as well as might be hoped.
This does not.
This doesn't
This doesn't work for windows, time, atime usage results in very different output to linux.
This drops the database currently being used.
This dual purpose can be useful in many cases involving the need to uniquely identify objects.
This ensures that all writes with fwrite() are completed before other processes are allowed to write to that output stream.
This entry identifier is then supplied to ldap_next_entry() routine to get successive entries from the result.
This error code may be passed to socket_strerror() to get a textual explanation of the error.
This error handler swallows typehint errors, which is disallowed in RepoAuthoritative mode.
This error probably indicates a network error or database corruption.
This essentially means if you specify a key other than 0 or 1, you will get an exception.
This example is from https://github.com/facebook/hhvm/issues/3440
This example is taken from the PHP reference docs for the preg_replace_callback_array() function, with modification to use an array as the subject, etc.
This example is taken from the PHP reference docs for the preg_replace_callback_array() function, with slight modification.
This exception is thrown when exceptional errors occur while using the OAuth extension and contains useful debugging information.
This exception occurs if the driver has already passed your request's response and cannot find your response in its cache.
This exit() should prevent the destructor for this clas from running, as well as any up-stack destructors.
This expects a number between 0 and PHP_INT_MAX.
This fails, because the return value was discarded
This fails.
This feature must be enabled at compile time using --enable-filehits .
This file is automatically generated.
This file is included in the output.
This file is meant to be used with a benchmarking harness that repeatedly generates include.php to include different subsets of benchmarks  with each invocation of harness-run.php.
This file is part of Composer.
This file is part of PHP-FastCGI-Client.
This file is strict, so the typecheck should complain about an unbound name
This file prints to stdout the contents of ext/standard/html_tables.h
This file uses 'input' array with different types of objects and passes it to array_filter() to test object functionality i.e. object of simple class with members and functions object of empty class object of child class extending abstract class object of class containing static member
This file was causing an infinite loop in an earlier implementation of --color.
This file will be binary after this point.
This file will be opened from the filesystem and its contents written to standard output.
This finds the address of the secondary currently being used for reads.
This flag was implemented in MongoDB version 1.7.5, so will only work with that version and higher.
This formatter would be used to format or parse numbers.
This function *requrires* a deprecated, MySQL resource.
This function accepts either one, two, or four parameters (not three):  If only one parameter is given, number will be formatted without decimals, but with a comma (",") between every group of thousands.
This function adds another name/value pair to the URL rewrite mechanism.
This function alleviates the need for a a bunch of branching checks that are required if you called something like preg_replace_callback() that uses a single callback.
This function allow you to stream portions of a file at a time, rather than read and parse the whole thing.
This function allows explicitly resetting the error code value either of a socket or of the extension global last error code.
This function allows saving data between requests in a PHP session.
This function allows to use parser inside object.
This function allows you to override the current domain for a single message lookup.
This function allows you to override the current domain for a single plural message lookup.
This function also returns FALSE if the reading of the result set failed.
This function always returns TRUE value.
This function appears in the php source in spl_iterators.c as spl_dual_it_fetch.
This function assigns new keys to the elements in array.
This function caches information about specific filenames, so you only need to call clearstatcache() if you are performing multiple operations on the same filename and require the information about that particular file to not be cached.
This function calculates and returns the bounding box in pixels for a FreeType text.
This function calculates and returns the bounding box in pixels for a TrueType text.
This function can also be used to open streams to POP3 and NNTP servers, but some functions and features are only available on IMAP servers.
This function can be used e.g. to encrypt message which can be then read only by owner of the private key.
This function can be used e.g. to sign data (or its hash) to prove that it is not written by someone else.
This function can be used instead of easter_date() to calculate Easter for years which fall outside the range of Unix timestamps (i.e. before 1970 or after 2037).
This function can be used to copy regions within the same image (if dst_image is the same as src_image) but if the regions overlap the results will be unpredictable.
This function can be used to manually search for a class or interface using the registered __autoload functions.
This function can be used to see which parts of the driver's functionality are being logged.
This function can be used to set how verbose logging should be and the types of activities that should be logged.
This function can be used to set which parts of the driver's functionality should be logged.
This function can modify and check the file extensions that the built in __autoload() fallback function spl_autoload() will be using.
This function causes a store to delete the specified flag to the flags set for the messages in the specified sequence.
This function checks if the attribute is a defined ID.
This function checks if the node has children.
This function checks to ensure that the file designated by filename is a valid upload file (meaning that it was uploaded via PHP's HTTP POST upload mechanism).
This function clears the error code on the given socket or the global last socket error if no socket is specified.
This function complements chr().
This function complements ord().
This function compress the given string using the Snappy data format.
This function compresses the given string using the lz4lib data format, which is primarily used for compressing and uncompressing memcache values.
This function compresses the given string using the nzlib data format, which is primarily used for compressing and uncompressing memcache values.
This function controls various runtime options for the specified FTP stream.
This function converts Unicode domain name to IDNA ASCII-compatible format.
This function converts number from degrees to the radian equivalent.
This function converts number from radian to degrees.
This function creates a new element node with an associated namespace.
This function creates a new instance of class DOMAttr.
This function creates a new instance of class DOMCDATASection.
This function creates a new instance of class DOMComment.
This function creates a new instance of class DOMDocumentFragment.
This function creates a new instance of class DOMElement.
This function creates a new instance of class DOMEntityReference.
This function creates a new instance of class DOMProcessingInstruction.
This function creates a new instance of class DOMText.
This function decodes data, assumed to be UTF-8 encoded, to ISO-8859-1.
This function discards the contents of the output buffer.
This function discards the contents of the topmost output buffer and turns off this output buffering.
This function does not destroy the output buffer like ob_end_clean() does.
This function does not destroy the output buffer like ob_end_flush() does.
This function doesn't close persistent connections, which are closed only during web-server shutdown/restart.
This function doesn't count overlapped substrings.
This function encodes the string data to UTF-8, and returns the encoded version.
This function fetch all the descendant elements with a given localName and namespaceURI.
This function fetches mail headers for the given sequence and returns an overview of their contents.
This function forces a write of all buffered output to the resource pointed to by the file handle.
This function frees a private key created by openssl_pkey_new().
This function gets the type of the given resource.
This function has been added to Memcache version 2.0.0.
This function has been added to Memcache version 2.1.0.
This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would, this is described as a "natural ordering".
This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would.
This function implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations.
This function indicates if two nodes are the same node.
This function inserts a new node right before the reference node.
This function is an alias of: stream_wrapper_register().
This function is an alternative to PDOStatement::fetch() with PDO::FETCH_CLASS or PDO::FETCH_OBJ style.
This function is automatically executed when closing the session, or explicitly via session_write_close().
This function is called `m` because we are returning a `m`ap of `Awaitable`.
This function is called `mf` because we are returning a `m`ap, and we are doing a `f`apping operation.
This function is called `mfk` because we are returning a `m`ap, doing a a `f`iltering operation that includes `k`eys.
This function is called `mfkw` because we are returning a `m`ap, doing a `f`iltering operation on `k`eys and values, and each value member in the `Map` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `mfw` because we are returning a `m`ap, doing a `f`iltering operation and each value member in the `Map` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `mm` because we are returning a `m`ap, and doing a `m`apping operation.
This function is called `mmk` because we are returning a `m`ap and doing a a `m`apping operation that includes `k`eys.
This function is called `mmkw` because we are returning a `m`ap, doing a `m`apping operation on `k`eys and values, and each value member in the `Map` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `mmw` because we are returning a `m`ap, doing a `m`apping operation and each value member in the `Map` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `mw` because we are returning a `m`ap of `Awaitable` `w`rapped into `ResultofExceptionWrapper`s.
This function is called `v` we are returning a `v`ector of `Awaitable`.
This function is called `vf` because we are returning a `v`ector, and we are doing a `f`apping operation.
This function is called `vfk` because we are returning a `v`ector, doing a a `f`iltering operation that includes `k`eys.
This function is called `vfkw` because we are returning a `v`ector, doing a `f`iltering operation that includes both `k`eys and values, and each member of the `Vector` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `vfw` because we are returning a `v`ector, doing a `f`iltering operation and each member of the `Vector` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `vm` because we are returning a `v`ector, and we are doing a `m`apping operation.
This function is called `vmk` because we are returning a `v`ector and doing a `m`apping operation that includes `k`eys.
This function is called `vmkw` because we are returning a `v`ector, doing a `m`apping operation that includes both `k`eys and values, and each member of the `Vector` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `vmw` because we are returning a `v`ector, doing a `m`apping operation and each member of the `Vector` is `w`rapped by a `ResultOrExceptionWrapper`.
This function is called `vw` because we are returning a `v`ector of `Awaitable` `w`rapped into `ResultofExceptionWrapper`s.
This function is case-sensitive.
This function is commonly used in IPC (Inter-Process Communication).
This function is commonly used in IPC (InterProcess Communication).
This function is deprecated.
This function is equivalent to calling pcntl_waitpid() with a -1 pid and no options.
This function is equivalent to running:
This function is especially useful for filenames, but may also be used on regular strings.
This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative.
This function is identical to calling fopen(), fwrite() and fclose() successively to write data to a file.
This function is identical to htmlspecialchars() in all ways, except with htmlentities(), all characters which have HTML character entity equivalents are translated into these entities.
This function is identical to imagecopymerge() except that when merging it preserves the hue of the source by converting the destination pixels to gray scale before the copy operation.
This function is identical to the backtick operator.
This function is identical to the stat() function except that if the filename parameter is a symbolic link, the status of the symbolic link is returned, not the status of the file pointed to by the symbolic link.
This function is intended to be private.
This function is intended to be used as a default implementation for __autoload().
This function is invoked by the xbox facility to start an xbox call task.
This function is like array_diff() except the comparison is done on the keys instead of the values.
This function is like array_udiff() but works on the keys instead of the values.
This function is meant to ease the task of creating a new socket which only listens to accept new connections.
This function is meant to take the same amount of time (based on user_string length) regardless of the length or contents of known_string.
This function is not intended to be called directly by user code.
This function is only available if your system supports it and you're using the CLI, CGI or Embed SAPI.
This function is only available on operating systems that support the gettimeofday() system call.
This function is only used by PHP internally, it shouldn't need to ever be called by the user.
This function is only useful for Japanese.
This function is only useful if pcntl_wifexited() returned TRUE.
This function is only useful if pcntl_wifsignaled() returned TRUE.
This function is only useful if pcntl_wifstopped() returned TRUE.
This function is similar to DOMDocument::getElementsByTagName but searches for an element with a given id.
This function is similar to `Map::filter()`, but the filtering of the values is done using `Awaitable`s.
This function is similar to `Map::filterWithKey()`, but the filtering of the keys and values is done using `Awaitable`s.
This function is similar to `Map::map()`, but the mapping of the values is done using `Awaitable`s.
This function is similar to `Map::mapWithKey()`, but the mapping of the keys and values is done using `Awaitable`s.
This function is similar to `Vector::filter()`, but the filtering of the values is done using `Awaitable`s.
This function is similar to `Vector::filter()`, but the mapping of the values is done using `Awaitable`s.
This function is similar to `Vector::filterWithKey()`, but the filtering of the keys and values is done using `Awaitable`s.
This function is similar to `Vector::filterWithKey()`, but the mapping of the key/value pairs are done using `Awaitable`s.
This function is similar to `Vector::map()`, but the mapping of the values is done using `Awaitable`s.
This function is similar to `Vector::mapWithKey()`, but the mapping of the key/value pairs are done using `Awaitable`s.
This function is similar to `Vector::mapWithKey()`, but the mapping of the keys and values is done using `Awaitable`s.
This function is similar to `mf()`, but passes element keys to the callable as well.
This function is similar to `mf()`, except the `Map` in the returned `Awaitable` contains values of `ResultOrExceptionWrapper` instead of raw values.
This function is similar to `mfk()`, except the `Map` in the returned `Awaitable` contains values of `ResultOrExceptionWrapper` instead of raw values.
This function is similar to `mm()`, but passes element keys to the callable as well.
This function is similar to `mm()`, except the `Map` in the returned `Awaitable` contains values of `ResultOrExceptionWrapper` instead of raw values.
This function is similar to `mmk()`, except the `Map` in the returned `Awaitable` contains values of `ResultOrExceptionWrapper` instead of raw values.
This function is similar to `vf()`, but passes element keys to the callable as well.
This function is similar to `vf()`, except the `Vector` in the returned `Awaitable` contains `ResultOrExceptionWrapper`s instead of raw values.
This function is similar to `vfk()`, except the `Vector` in the returned `Awaitable` contains `ResultOrExceptionWrapper`s instead of raw values.
This function is similar to `vm()`, but passes element keys to the callable as well.
This function is similar to `vm()`, except the `Vector` in the returned `Awaitable` contains `ResultOrExceptionWrapper`s instead of raw values.
This function is similar to `vmk()`, except the `Vector` in the returned `Awaitable` contains `ResultOrExceptionWrapper`s instead of raw values.
This function is similar to file(), except that file_get_contents() returns the file in a string, starting at the specified offset up to maxlen bytes.
This function is similar to imap_8bit(), except this one does not require the IMAP module to work.
This function is similar to imap_qprint(), except this one does not require the IMAP module to work.
This function is similar to ob_end_flush(), except that this function returns the buffer as a string.
This function is similar to ob_get_flush(), except that ob_get_flush() returns the buffer as a string.
This function is similar to strcasecmp(), with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison.
This function is similar to strcmp(), with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison.
This function is similar to the stat() function except that it operates on an open file pointer instead of a filename.
This function is specific to sockets and cannot be used on any other type of resources.
This function is the inverse of imap_msgno().
This function is the inverse of imap_uid().
This function is the opposite of htmlspecialchars().
This function is the same as `m()`, but wraps the results into key/`ResultOrExceptionWrapper` pairs.
This function is the same as `v()`, but wraps the results into `ResultOrExceptionWrapper`s.
This function is used exactly like ldap_get_values() except that it handles binary data and not string data.
This function is used to set any of the formatter attributes.
This function is used to verify if a link (pointed to by path) really exists (using the same method as the S_ISLNK macro defined in stat.h).
This function is useful in preventing user-supplied text from containing HTML markup, such as in a message board or guest book application.
This function is useful to check if the SOAP call failed, but without using exceptions.
This function is usually called after building a new dom document from scratch as in the example below.
This function makes it possible to run PHP applications designed to run off of a hard disk as a phar application.
This function makes the debugger break on the specific line as if a normal file/line breakpoint was set on this line.
This function may also be called statically to load and create a DOMDocument object.
This function must be defined before calling set_exception_handler().
This function only creates a socket, to begin accepting connections use stream_socket_accept().
This function only works with UTF-8 encoded strings.
This function parses an XML file into 2 parallel array structures, one (index) containing pointers to the location of the appropriate values in the values array.
This function provides the functionality of array_splice() for Vectors.
This function renames on old mailbox to new mailbox (see imap_open() for the format of mbox names).
This function replaces the child oldnode with the passed new node.
This function resets the URL rewriter and removes all rewrite variables previously set by the output_add_rewrite_var() function or the session mechanism (if session.use_trans_sid was set on session_start()).
This function returns a copy of str, translating all occurrences of each character in from to the corresponding character in to.
This function returns a copy of the node to import and associates it with the current document.
This function returns a multidimensional array containing a list of all defined variables, be they environment, server or user-defined variables, within the scope in which get_defined_vars() is called.
This function returns a new instance of class DOMNodeList containing the elements with a given tag name.
This function returns a new instance of the class DOMNodeList of all descendant elements with a given tag name, in the order in which they are encountered in a preorder traversal of this element tree.
This function returns a string or an array with all occurrences of search in subject (ignoring case) replaced with the given replace value.
This function returns a string or an array with all occurrences of search in subject replaced with the given replace value.
This function returns a string with whitespace stripped from the beginning and end of str.
This function returns a string with whitespace stripped from the end of str.
This function returns a unique identifier for the object.
This function returns all currently available PDO drivers which can be used in DSN parameter of PDO::__construct().
This function returns an 8-bit binary string corresponding to the decoded quoted printable string (according to  RFC2045, section 6.7, not  RFC2821, section 4.5.2, so additional periods are not stripped from the beginning of line).
This function returns an array with the current available SPL classes.
This function returns an array with the name of the parent classes of the given class.
This function returns an array with the names of the interfaces that the given class and its parents implement.
This function returns an array with the names of the traits that the given class uses.
This function returns low level raw pointer the object.
This function returns meaningful value only if last odbc query failed (i.e. odbc_exec() returned FALSE).
This function returns the UID for the given message sequence number.
This function returns the filename that contains the function/method that called the current function/method.
This function returns the key details (bits, key, type).
This function returns the line number that contains the function/method that called the current function/method.
This function returns the name of the class from which the current function/method was called from.
This function returns the name of the function/method from which the current function/method was called from.
This function returns the names of all the functions defined in the module indicated by module_name.
This function returns the names of all the modules compiled and loaded in the PHP interpreter.
This function returns the number of deleted records plus the number of inserted records.
This function returns the offset to GMT for the date/time specified in the datetime parameter.
This function returns the portion of haystack which starts at the last occurrence of needle and goes until the end of haystack.
This function returns the soap version that is currently active.
This function returns the time when the data blocks of a file were being written to, that is, the time when the content of the file was changed.
This function returns the value for the requested option from the specified FTP connection.
This function returns the value of a database connection attribute.
This function returns this object if present, or NULL.
This function sets the domain to search within when calls are made to gettext(), usually the named after an application.
This function sets whether or not to use the SOAP error handler in the SOAP server.
This function should be used in place of exec() or system() when the output from the Unix command is binary data which needs to be passed directly back to the browser.
This function should be used to escape individual arguments to shell functions coming from user input.
This function should be used to make sure that any data coming from user input is escaped before this data is passed to the exec() or system() functions, or to the backtick operator.
This function shuffles (randomizes the order of the elements in) an array.
This function simplifies the common pattern of checking for an index in an array and selecting a default value if it does not exist.
This function sorts an array in reverse order (highest to lowest).
This function sorts an array such that array indices maintain their correlation with the array elements they are associated with, using a user-defined comparison function.
This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.
This function sorts an array.
This function starts gathering the information for code coverage.
This function starts running a suite, but stops between each individual benchmark in the suite and returns a continuation function which can be invoked to run the next benchmark.
This function stops collecting information, the information in memory will be destroyed.
This function takes a node of a DOM document and makes it into a SimpleXML node.
This function takes a string as a parameter and should return a string.
This function takes the node node of class SimpleXML and makes it into a DOMElement node.
This function throws an exception if this Vector is empty.
This function tries to return a string with all NUL bytes, HTML and PHP tags stripped from a given str.
This function uncompress a compressed string.
This function will not return configuration information set when the PHP was compiled, or read from an Apache configuration file.
This function will recur into deeper arrays.
This function will reset() the array pointer after use.
This function will return -1 on error.
This function will return FALSE for constructs, such as include_once() and echo().
This function will return FALSE for symlinks pointing to non-existing files.
This function will return the number of days in the month of year for the specified calendar.
This function will send the contents of the output buffer (if any).
This function will send the contents of the topmost output buffer (if any) and turn this output buffer off.
This function will set a callback function to be called for MongoLog events instead of triggering warnings.
This function will sort an array by its values using a user-supplied comparison function.
This function will turn output buffering on.
This function works for any stream that supports non-blocking mode (currently, regular files and socket streams).
This function wraps the C library function strfmon(), with the difference that this implementation converts only one number at a time.
This function's behavior is controlled by the url_rewriter.tags php.ini parameter.
This functions appends a child to an existing list of children or creates a new list of children.
This functions removes a child from a list of children.
This functions returns the input string padded on the left, the right, or both sides to the specified padding length.
This geometry defines a subregion of the image to crop.
This geometry defines the final size of the image.
This gets converted to string
This gets the bitwise `OR` of the flags that are set for a given column.
This handler function needs to accept one parameter, which will be the exception object that was thrown.
This handler is used by other handlers.
This has no effect on the query if all shards are reachable.
This has to be done before a connection is be established using socket_connect() or socket_listen().
This however will fail with no connection.
This id can be used as a hash key for storing objects or for identifying an object.
This implementation detail may, at any time, change without prior notice.
This implementation detail should not be relied upon, as it may change.
This implementation is not compatible with PHP's.
This implementation of the DeltaBlue benchmark is derived from the Smalltalk implementation by John Maloney and Mario Wolczko.
This implies that the output format is human-readable.
This includes information about PHP compilation options and extensions, the PHP version, server information and environment (if compiled as a module), the PHP environment, OS version information, paths, master and local values of configuration options, HTTP headers, and the PHP License.
This includes those created by extensions as well as those created with the define() function.
This indicated that the server string was malformed.
This information can be used to know how the performance of the MySQL client may have affected a given result.
This information can be used to know how the performance of the MySQL client may have affected the connecting operation.
This information can be used to know how the performance of the MySQL client may have affected the operation that produced the error.
This information can be used to know how the performance of the MySQL client may have affected the query operation.
This information can be used to know how the performance of the MySQL client may have affected the result.
This interface represents a known entity, either parsed or unparsed, in an XML document.
This invalid UTF-8 subsequence prevents users from entering this string to prevent accidental collisions.
This invariant is stated explicitly in PHP5's documentation: "In non-static contexts, the called class will be the class of the object instance." 3) Normal style calls and call_user_func style calls should produce consistent results aside from any exceptions mentioned in PHP5's documentation.
This is B's doc comment.
This is a JavaScript implementation of the Richards benchmark from:
This is a a string where each character is an option.
This is a case where global dce can change the type of locals across blocks.
This is a copy of zend/bad/ext/pcntl/tests/003.php 003.php.skipif is overly-cautious, so skips this test
This is a debug function, which dump directly the data on the normal output.
This is a divergence from php5 (where it will be int(1)).
This is a fairly aggressive test that looks at user streams and also gives the seek/gets/buffer layer of streams a thorough testing
This is a fairly serious error and may not have a stack trace.
This is a generated file, do not modify
This is a generated file.
This is a limitation of the current approach to checking switch case labels.
This is a micro-test for a specific, tricky bug in the jit.
This is a modified version of zend test DOMDocument_saveHTML_error2.php.
This is a no-op for heaps as the iterator is virtual and in fact never moves from the top of the heap.
This is a noop fallthrough so we should not do an intersect
This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function.
This is a privileged function that needs appropriate privileges (usually root) on the system to be able to perform this function.
This is a short, usually less than 16 character "handle" of the group, not the real, full name.
This is a short, usually less than 16 character "handle" of the user, not the real, full name.
This is a small test case for handling comparisons on null SSATmps that aren't isConst().
This is a static method.
This is a synchronous function.
This is a test that checks that CGetM in the IR properly cleans the stack before operations that can throw.
This is a tricky function to use and we are actually thinking of deprecating it.
This is a valid comment inside a method
This is a very simple test which simply confirms that exceptions flowing around continuations don't disturb step over.
This is a very slow operation on a large database.
This is a wrapper around ICU Collator C API (declared in ucol.h).
This is a wrapper for a database command.
This is a wrapper function as lz4compress is now lz4_compress  https://github.com/facebook/hhvm/pull/3169 - 11/07/2014
This is a wrapper function as lz4hccompress is now lz4_hccompress  https://github.com/facebook/hhvm/pull/3169 - 11/07/2014
This is a wrapper function as lz4uncompress is now lz4_uncompress  https://github.com/facebook/hhvm/pull/3169 - 11/07/2014
This is a wrapper function as sncompress is now snappy_compress  https://github.com/facebook/hhvm/pull/3258 - 23/07/2014
This is a wrapper function as snuncompress is now snappy_uncompress  https://github.com/facebook/hhvm/pull/3258 - 23/07/2014
This is actually fine.
This is also useful if a builtin is renamed - a wrapper class/function can be added.
This is an HHVM only function that gets the raw text associated with a default parameter.
This is an advanced function and should not be used unless you know what you're doing.
This is an interface to getrusage(2).
This is an interface to gettimeofday(2).
This is an interface.
This is an internal engine interface which cannot be implemented in PHP scripts.
This is an object-oriented alternative to using copy() with the phar stream wrapper.
This is as unmistakably UTF-8 as it gets.
This is because Zend is more liberal about passing in the current instance to the callee.
This is because bindec() sees the most significant bit as another order of magnitude rather than as the sign bit.
This is because spl_autoload_register() will effectively replace the engine cache for the __autoload function by either spl_autoload() or spl_autoload_call().
This is because the SPL implementation does not fetch when it's walking the iterator - it only fetches when it reaches the right position.
This is beyond the control of the driver...
This is bogus and should produce warning
This is bogus but will work fine
This is called "stay optimization".
This is complementary to `numRows()` as they might be the same value, but if this was an `INSERT` query, for example, then this might be a non-zero value, while `numRows()` would be 0.
This is complementary to `numRowsAffected()` as they might be the same value, but if this was an `INSERT` query, for example, then this might be 0, while `numRowsAffected()` could be non-zero.
This is deliberately an unconfigurable convenience wrapper.
This is described as a "natural ordering".
This is done so that you can pick random keys as well as values out of the array.
This is due to the fact that zip support in PHP is read only access.
This is either the first time we run the unit tests, and all pass because we are establishing a baseline.
This is equivalent to searching the entire directory.
This is expected to fatal due to embedded newline in the cookie domain.
This is expected to fatal due to embedded newline in the cookie name.
This is expected to fatal due to embedded newline in the cookie path.
This is expected to fatal due to embedded newline in the header.
This is expected to pass.
This is expected: see bug 46900.
This is f's doc comment.
This is g's doc comment.
This is generally user-set (with MongoCollection::ensureIndex()'s "name" option) or generated by the driver from a combination of key names and directions.
This is going to take the strTestResult branch.
This is hacky, but it works in all cases and doesn't require parsing xml.
This is handled in the JIT, and should it trigger COW.
This is hardcoded and can not be changed with allowable_tags.
This is how privates are handled in normal inheritance
This is how publics are handled in normal inheritance
This is identical to running:
This is identical to the function:
This is in the default stub, but lets ignore it for now
This is intended for use much like the __FILE__ magic constant, and only has effect inside an executing phar archive.
This is largely a copy of '/hphp/system/php/collections/collections.ns.php' it has been modified to work with php.
This is more general and adaptive than variant one, but not as efficient.
This is more of a test for testing the behavior of serialization/unserialization when a class with native data implements __sleep() and __wakeup() methods.
This is most likely due to a problem initializing the socket.
This is most likely not implemented on your operating system.
This is most useful for assigning an alias to a phar so that subsequent references to the phar can use the shorter alias, or for loading Phar archives that only contain data and are not intended for execution/inclusion in PHP scripts.
This is necessary because the generated __xhpAttributeDeclaration() has a call to parent::__xhpAttributeDeclaration().
This is non-standard
This is not good, but it currently happens nonetheless.
This is not necessary in Windows because the cast to a FILE* handle in curl_setopt already forces the conversion in that platform.
This is not the class you are looking for.
This is not the preferred usage of implode() as glue would be the second parameter and thus, the bad prototype would be used.
This is not to be confused with the API version that the loaded phar extension will use to create new phars.
This is null when retrieving the type constant for a type alias.
This is of interest to people concerned about security whose input is from a string.
This is okay because we reuse the xml namespace from the document
This is okay since we are in partial mode
This is one of the IntlDateFormatter constants.
This is only applicable when running a sharded MongoDB cluster and connecting to a mongos.
This is only meaningful in a pagelet thread.
This is parsed as the "first following Monday OR the current day if it is a Monday"
This is parsed as the "first following Monday after the first Monday in December"
This is parsed as the "second following Monday OR the first following  Monday if the current day is a Monday"
This is parsed as the "second following Monday after the first Monday in December"
This is parsed as the "third following Monday OR the second following  Monday if the current day is a Monday"
This is parsed as the "third following Monday after the first Monday in December"
This is particularly useful for `INSERT`, `DELETE`, `UPDATE` statements.
This is particularly useful for `SELECT` statements.
This is particularly useful for counting all the elements of a multidimensional array.
This is probably the more common of the two query methods, given its flexibility and automatic escaping in most string cases.
This is proper usage of closeCursor().
This is similar with using stream_copy_to_stream().
This is sweeping the problem under the rug.
This is test 36 from the pecl extension.
This is testing our enhanced ini functionality, where we return things like arrays Interp mode testing will make sure we aren't always using the optimized version of ini_get (optimizedCallIniGet()) First make sure we are working on normal primitive based bindings, where something easily convertible to string is returned
This is the *highly recommended* way to create connections to a MySQL client, as opposed to using the `AsyncMysqlClient` class which does not give you nearly the flexibility.
This is the PDO way to close a connection
This is the callback signature: `string handler (array matches)` If you need the callback function just in one place in the array, use an anonymous function to declare the callback within the call to preg_replace_callback_array().
This is the callback signature: stringhandler arraymatches    You'll often need the callback function for a preg_replace_callback() in just one place.
This is the cleanest way of getting a database.
This is the default option.
This is the easiest way of getting a collection from a database object.
This is the first method called when starting a foreach loop.
This is the functional equivalent of calling unlink() on the stream wrapper equivalent, as shown in the example below.
This is the handler signature:    voidhandler Exceptionex NULL may be passed instead, to reset this handler to its default state.
This is the most derived class in which the type constant is declared.
This is the only message type where the fourth parameter, extra_headers is used.
This is the optimal way of parsing a mail file that you have on disk.
This is the point when the switch from Julian dates to Gregorian dates occurred.
This is the problematic case, setImageFormat doesn't really affect writeImageFile.
This is the runtime version of DomainException.
This is the same as the ReflectionExtension::export() with the return set to TRUE.
This is the same as the skeleton, except that differences in length are minimized so as to only preserve the difference between string and numeric form.
This is the same string you see at the very top of the phpinfo() output.
This is the standard DeltaBlue benchmark.
This is the static implementation.
This is to cause fewer exceptions during replica set failover (although you will probably still have to deal with some) and gloss over transient network issues.
This is to trigger a specific refcounting bug in the VM, to do with object initialization templates.
This is typically "could not find hhconfig", which of course uses the same exit code as "type error".
This is typically used to add extra headers.
This is unlike array_diff() which uses an internal function for comparing the data.
This is used by some of the static creation methods to bypass unnecessary iteration.
This is used for local files, not URLs.
This is used mainly when sorting associative arrays where the actual element order is significant.
This is used only with consistent distribution option and usually corresponds to the amount of memory available to memcache on that server.
This is used when the input skeleton contains both date and time fields, but there is not a close match among the added patterns.
This is useful because SplFileObject contains additional methods for manipulating the file whereas SplFileInfo is only useful for gaining information, like whether the file is writable.
This is useful for creating flood-fill-like effects in palleted images without the overhead of performing the actual flood-fill.
This is useful for diagnose why server crashed.
This is useful for escaping the delimiter that is required by the PCRE functions.
This is useful for gracefully displaying something helpful information to end users when a fatal error has happened.
This is useful for polling.
This is useful for typing deserialized enum values.
This is useful if a locale is known under different names on different systems or for providing a fallback for a possibly not available locale.
This is useful if you would like to write programs working only on some versions of PHP.
This is useful mainly for associative arrays.
This is useful to help ensure that a malicious user hasn't tried to trick the script into working on files upon which it should not be working--for instance, /etc/passwd.
This is useful to quickly determine the version of the client library to know if some capability exits.
This is useful when handling a fatal error.
This is useful when trying to optimize calls for statistics gathering.
This is useful when using PHP as a mail client for multiple users.
This is useful when xdebug.auto_trace is enabled.
This is useful when you don't have a filesystem (RepoAuthoritative mode) but still want to know if including a file will work.
This is useful, for example, to determine which process sent the message that was just received.
This is usually a string, with possible placeholders.
This is usually run from the shell or the command line, not the driver.
This is usually used to validate the integrity of data being transmitted.
This is very much like the value normally returned, except that a result identifier is always returned when a search was made.
This is weird.
This is why we need to use sockets.
This isn't a sure test, but may be false if sem_acquire() didn't work
This isn't because the xml namespace isn't there and we can't create it
This isn't really a difference method, it lies
This iterator can be obtained via RecursiveRegexIterator::getChildren().
This kind of exceptions should directly lead to a fix in your code.
This line will trigger fromUCallback
This line will trigger toUCallback
This list is traversed by constraint strength, strongest first, as a heuristic for avoiding unnecessarily adding and then overriding weak constraints.
This looks like something we could detect as an error, but doing it would require a lot of special casing, manual expanding of typedefs and traversing of Tunresolved to ban this case but allow the above ones.
This may be a DateTime object, an IntlCalendar object, a numeric type representing a (possibly fractional) number of seconds since epoch or an array in the format output by localtime().
This may be a Pear thing, a PHPUnit running phpt thing, or or something else.
This may be a space character or a 0 (zero character).
This may be useful to detect within a part of the application if an error occurred or not.
This may result in unexpected behavior when using an object or NULL replacement.
This may work on FreeBSD but has not been tested.
This means any string or int will be accepted.
This means it will also check the types of the needle in the haystack, and objects must be the same instance.
This means that MongoDB::lastError() will return a generic database error after running this command.
This means that dates do not contain timezone information.
This means that if there are two processes wanting to write to the same output stream (a file), each is paused after 8K of data to allow the other to write.
This means that if you pass a boolean condition as assertion this condition will not show up as parameter to the assertion function which you may have defined with the assert_options() function, the condition is converted to a string before calling that handler function, and the boolean FALSE is converted as the empty string.
This means that in i.e. the default "C" locale, characters such as umlaut-A will not be converted.
This means that one can send sealed data to multiple recipients (provided one has obtained their public keys).
This means that the driver couldn't get a response from the connection.
This means that the same number has different monetary values depending on the currency locale.
This means that they cannot be declared inside functions, loops or if statements.
This means that when a character can't be represented in the target charset, it can be approximated through one or several similarly looking characters.
This means that you will not be able to define your own classes using these names.
This means we do not need to generate expression dependent types for these classes
This means you must pass it a real variable and not a function returning an array because only actual variables may be passed by reference.
This means you will have to call both ob_flush() and flush() to flush the ob output buffers if you are using those.
This message type uses the same internal function as mail() does.
This method accepts either a variable amount of pipeline operators, or a single array of operators constituting the pipeline.
This method acts as if you saved and then loaded the document, putting the document in a "normal" form.
This method acts as the constructor of the object.
This method acts as the destructor of the object.
This method allows you to register your own extended DOM class to be used afterward by the PHP DOM extension.
This method allows you to run arbitrary JavaScript on the database.
This method automatically sets the iterator mode to SplDoublyLinkedList::IT_MODE_LIFO.
This method cannot be called when the ArrayObject was constructed from an object.
This method causes its connection to be authenticated.
This method checks if the database has more batches or if the result set has been exhausted.
This method checks if the node has attributes.
This method counts the number of children of an element.
This method creates an index on the collection and the specified fields.
This method determines if HHVM was built with the EXSLT library.
This method does not actually follow the reference, so it does not determine if it is broken or not.
This method does not affect the state of the cursor: if you haven't queried yet, you can still apply limits, skips, etc.
This method enables the ability to use PHP functions as XSLT functions within XSL stylesheets.
This method enables the ability to use PHP functions within XPath expressions.
This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations.
This method imports the stylesheet into the XSLTProcessor for transformations.
This method is a flexible interface for creating database references (see MongoDBRef).
This method is available in case the MongoDB wire protocol has acquired a new flag, and the driver has not been updated with a method for this new flag.
This method is basically: MongoDB implies a return statement if you have a single statement on a single line.
This method is called after each foreach loop.
This method is called by PHP itself when the session is started.
This method is equivalent to:
This method is executed when checking if offset is empty().
This method is executed when using isset() or empty() on objects implementing ArrayAccess.
This method is identical to running:    Once a connection has been authenticated, it can only be un-authenticated by using the "logout" database command:
This method is identical to:
This method is identical to:    Each index, when created, is given a unique name.
This method is interchangeable with `toArray()`.
This method is interchangeable with `toImmVector()`.
This method is interchangeable with `toValuesArray()`.
This method is not meant to be called directly.
This method is not part of the DOM standard.
This method is not used in normal operations.
This method is not very useful for normal MongoDB use.
This method is only useful with a connection to a replica set.
This method is similar to ZipArchive::addEmptyDir().
This method is similar to ZipArchive::addFromString().
This method is similar to ZipArchive::extractTo().
This method is to be used with tailable cursors.
This method is used to create capped collections and other collections requiring special options.
This method is useful for database drivers that do not support executing a PDOStatement object when a previously executed PDOStatement object still has unfetched rows.
This method is useful when you prefer just to get null on error, as if you called collator_create().
This method is useful when you prefer just to get null on error, as if you called numfmt_create().
This method may also be called statically to load and create a DOMDocument object.
This method may not return a meaningful or consistent result across different PDO drivers, because the underlying database may not even support the notion of auto-increment fields or sequences.
This method only works for database drivers that support transactions.
This method only works for static properties when used on internal classes.
This method overwrites the MongoClient constructor and turns off acknowledged writes.
This method returns a stream resource that can be used with all file functions in PHP that deal with reading files.
This method returns the last database error that occurred and how many operations ago it occurred.
This method returns the list of all functions added by SoapServer::addFunction() or SoapServer::setClass().
This method sets the batchSize value to configure the amount of documents retrieved from the server in one data packet.
This method should be used to convert a tar archive to zip format or vice-versa.
This method should retrieve the session data from storage by the session ID provided.
This method will destroy the current `AsyncMysqlConnection` object and give you back a vanilla, synchronous MySQL resource.
This method will return an `ImmVector` with keys 0 and 1, and values 0 and 1, since the keys of a `Pair` are 0 and 1.
This more than covers the period when the calendar was in use.
This must be a one character string.
This must be an integer greater than 0.
This must be the public key corresponding to the private key used for signing.
This name can then be used with admin commands to retrieve stats while server is running.
This name is then used by MongoCollection::deleteIndex() to remove the function.
This needs to be cleaned up in a follow up before the following will work
This needs to be fixed.
This new object can then be used as a native DOMElement node.
This new object can then be used as a native SimpleXML element.
This number can be converted into a textual error message using ldap_err2str().
This number may not reflect the actual line number in the file if SplFileObject::setMaxLineLen() is used to read fixed lengths of the file.
This one should fail.
This only returns errors regarding the whole multi stack.
This option allows mongos to send partial query results if a shard is unreachable.
This option is disabled by default because there are a lot of broken mail user agents that don't follow the specification and don't produce correct MIME headers.
This pair is returned in a four-element array, with the keys 0, 1, key, and value.
This parameter can NOT override server-side preset sizelimit.
This parameter can NOT override server-side preset timelimit.
This parameter can be also an integer holding a filter constant.
This parameter can be either a string (a function name) or an array of function names.
This parameter can be either a string (a function name) or an array of functions.
This parameter is case-insensitive.
This parameter is defaulted to FALSE.
This parameter is ignored.
This parameter is not automatically encoded.
This parameter is not normally needed, but can be useful for working around problems with some ODBC drivers.
This parameter is typically 0.
This parameter may also specify other transports like unix:///path/to/memcached.sock to use UNIX domain sockets, in this case port must also be set to 0.
This parameter may be an , with the name of the class, and the method, or a , with a function name.
This parameter may be an array, with the name of the class, and the method, or a string, with a function name.
This parameter may be omitted when inside a class.
This parameter only applies when not making asynchronous connection attempts.
This parameter represents the variation on the quantum range.
This parameter was added in Imagick version 2.0.1.
This parser uses DOUBLE type by default.
This particular soundex function is one described by Donald Knuth in "The Art Of Computer Programming, vol.
This pointer may be used with fgets(), fgetss(), and fwrite().
This procedure created problems for localizers because the sentence structure, word order, number format and so on are very different from language to language.
This process is most important when text needs to be compared for sorting and searching, but it is also used when storing text to ensure that the text is stored in a consistent representation.
This process is repeated until either a) it reaches a variable that was not previously determined by any constraint or b) it reaches a constraint that is too weak to be satisfied using any of its methods.
This produces the
This property has a comment.
This provokes a difference in behaviour when changing the number of elements in the array while iterating over it.
This represents errors that cannot be detected at compile time.
This represents errors that should be detected at compile time.
This resource comes from a call to xmlwriter_open_uri() or xmlwriter_open_memory().
This result comes from a call to mysql_async_query_result().
This returns NULL until MongoCursor::next() is called.
This returns a specific error message to help diagnose the problem and a numeric error code associated with the cause of the exception.
This returns an exponentially-smoothed average.
This returns the current database profiling level.
This returns the hostname MongoId is using to generate unique ids.
This returns the same thing as running time() when the id is created.
This script allows us to more easily test the key OSS PHP frameworks that is helping bring HHVM closer to parity.
This script creates zend_vm_execute.h and zend_vm_opcodes.h from existing zend_vm_def.h and zend_vm_execute.skl
This script is used by hhvm debugger to initiate a php-only dummy connection to itself so that it can perform global php evaluation from console window.
This script lists extension-, class- and method names that contain any underscores.
This script sets up an event source for use by the php syslog() function.
This script will generate a Seg Fault on Linux
This serialization matches the output of xdebug_var_dump, but isn't useful because there isn't a way to unserialize the string.
This serves as a baseclass for iterators for all the containers.
This sets a specific object as the handler for SOAP requests, rather than just a class as in SoapServer::setClass().
This sets the specified index in the palette to the specified color.
This setting affects mb_convert_encoding(), mb_convert_variables(), mb_output_handler(), and mb_send_mail().
This setting affects mb_detect_encoding() and mb_send_mail().
This should be a different expression id since the case may fallthrough
This should be a parse error (it is in HHVM), but we previously *crashed*.
This should be a value between 0 and PHP_INT_MAX.
This should be an error, because parent
This should be an error, but it's broken for shapes too...
This should be disallowed -- PHP will parse it wrong.
This should be fine, although somewhat silly.
This should be reset to 0 when replacement starts.
This should be the same as the name parameter used when calling the function, and hence redundant.
This should be the same as the username parameter used when calling the function, and hence redundant.
This should be the same value gethostname() returns.
This should be the uncompressed length you wish to read.
This should call C1::foo, not D1::foo
This should call C2::foo, not D2::foo
This should call C3::foo, not D3::foo
This should fail for using a nonexistent class constant.
This should fail to check
This should fail, the PS protocol should not support it.
This should fail.
This should indicate a man-in-the-middle attack.
This should not be a dynamic class.
This should not call C::foo, it should fatal
This should only be listed once in the output.
This should raise an error because we are incrementing a string.
This should show the identical warning
This should throw a warning and return NULL since an argument is missing
This shouldn't affect floats, but let's check that.
This signature is a hash calculated on the entire phar's contents, and may be used to verify the integrity of the archive.
This sort of check is especially important if there is any chance that anything done with uploaded files could reveal their contents to the user, or even to other users on the same system.
This soundex function returns a string 4 characters long, starting with a letter.
This source code is licensed under the BSD-style license found in the LICENSE file in the "hack" directory of this source tree.
This source code is licensed under the BSD-style license found in the LICENSE file in the root directory of this source tree.
This special type of socket can be used to manually construct any type of protocol.
This statement will not parse in Hack, but we should not raise an error in decl mode.
This string includes an invalid UTF-8 sequence.
This takes time.
This test also needs to exclude the protected and private variables  since they cannot be accessed from the external object which iterates  them.
This test checks for: - inherited constructors/destructors are not called automatically - base classes know about derived properties in constructor/destructor - base class constructors/destructors know the instanciated class name
This test constructs a two sets of variables related to each other by a simple linear transformation (scale and offset).
This test demonstrates the expected behavior of various input scenarios, where 'expected' is defined as the behavior that exists in php's mail-mailparse package...
This test emulates a regpressure case that occurred with inlining (but probably won't occur later as we improve linearscan).
This test exercises the register allocator, because it results in a single big tracelet that has more live values in flight than there are physical registers.
This test illustrates the danger with instantiating a non-covariant type variable with this.
This test is a modified version of the original test, bug54265.php, which has been moved to 'bad'.
This test is also passing more than two arguments to array_merge().
This test is coded to work with or without the crlf.
This test is currently *Linux only* due to the use of posix_getpid() and readlink.
This test is currently just making sure we don't totally explode.
This test is failing due to this wrogn check
This test is purely to see whether the function recognises the encoding.
This test is sensitive to what gets jitted vs.
This test might get very long depending on the mashine it's running on.
This test relies on someexception having a lower litstr id to reproduce a specific bug.
This test shouldn't inline right now (if it does it crashes).
This test uses mysqli_query()/mysqli_fetch_assoc() to fetch the inserted values.
This test verifies our ability to typecheck the body of a lambda when it is used as an argument to a generically-typed higher-order function.
This test verifies that old and new style (un)serializing do not interfere.
This test verifies that the casting mechanism is working correctly.
This test verifies that we are doing the trivial strict equality test at the right point
This test was to ensure that new Exception ends up with a catch trace, because it *can* throw, eg on timeout.
This tests the parser.
This timestamp is a long integer containing the number of seconds between the Unix Epoch (January 1 1970 00:00:00 GMT) and the time specified.
This typically occurs when APC is not enabled.
This uses very much mem.
This usually means that the cursor timed out on the server side: after a few minutes of inactivity, the database will kill a cursor (see MongoCursor::immortal() for information on preventing this).
This value must be in the range from 0 to number of fields - 1.
This value must be one of either SQLITE3_ASSOC, SQLITE3_NUM, or SQLITE3_BOTH.
This value must be one of the PDO::FETCH_* constants, defaulting to PDO::FETCH_BOTH.
This value must be one of the PDO::FETCH_ORI_* constants, defaulting to PDO::FETCH_ORI_NEXT.
This value should be generated randomly.
This variable will contain the end position if the parse fails.
This violates an invariant stated in PHP5's documentation at http://us.php.net/lsb which states "In non-static contexts, the called class will be the class of the object instance." For these cases, HipHop reconciles this issue by setting the late bound class to the class of the current instance if there is one.
This walks the overall tree for one step, and updates the corresponding iterator states as needed (current iterator, parent iterator, child iterator).
This way not only versions with different levels like '4.1' and '4.1.2' can be compared but also any PHP specific version containing development state.
This way oop_class gets some singleton behavior since it will be created only once for all insatnces of oop_test.
This way we test mysqli_query()/mysqli_fetch_assoc() for all possible data types in this file and we test mysqli_stmt_bind_result() in the other test -- therefore the "duplicate" makes some sense to me.
This way, all scores are relative to a reference run and higher scores implies better performance.
This way, when calling func_to_stub_out(), it will actually execute new_func_to_replace_with().
This weirdly is a valid statement for newlocale/uselocale but not for setlocale.
This will always return 0 in the current implementation.
This will be called, for each namespace declaration, after the handler for the end tag of the element in which the namespace was declared.
This will cause elements with higher keys to be renumbered.
This will determine the calendar type used (gregorian, islamic, persian, etc.) and, if NULL is given for the timezone parameter, also the timezone used.
This will disable tests too upon install.
This will fail, but it shouldn't mess up the already set LC_TIME category
This will generate a unreachable funclet-protected code.
This will make the processor use the default value for the parameter as specified in the stylesheet.
This will not create file and line items for the call into the error handler
This will not equal the record's original ttl, but will rather equal the original ttl minus whatever length of time has passed since the authoritative name server was queried.
This will not work on Windows.
This will now contain the previous warning
This will only dumps the parameters in the statement at the moment of the dump.
This will only happen if your uname() library call either doesn't exist or doesn't work.
This will only return `true` for provided keys of 0 and 1 since those are the only two keys that can exist in a `Pair`.
This will only return `true` if the provided key is 0 or 1.
This will pass even though there is a newline in the value.
This will return the length of the contents in the output buffer.
This will run processes that will get the test infra dependencies (e.g. PHPUnit), frameworks and framework dependencies.
This will sort based on path, not including any appended file.
This will throw an exception (from the finally) during auto-priming, so fails TODO: Remove this next when HHVM supports auto-priming
This will trigger a call to getChildren() which returns the iterator for that sub element.
This will trigger an error since it is not ReflectionParameter or ReflectionFunctionAbstract
This works fine if we use simplexml_load_string.
This works on both built-in extensions and dynamically loaded ones (either through php.ini or dl()).
This works without this line
Those arrays must be of the same size as the link identifier array since the first entries of the arrays are used for one search, the second entries are used for another, and so on.
Those coming with BSD sockets background will recognize that those socket resource arrays are in fact the so-called file descriptor sets.
Those works.
Though not recommended, this function may also be called statically to load and create a DOMDocument object.
Three comes from 'RGB', three values per pixel
Three independent arrays of socket resources are watched.
Throw an exception with the class of the given name
Throw from the user error handler after raising a warning about arg count.
Throw out any initial blank lines
Throw some bad apples in there.
Throwing an exception is different from PHP5, which allows for the ReflectionObject to be created but then fatal hard.
Thrown when the driver fails to connect to the database.
Thrown when there are errors reading or writing files to or from the database.
Thrown when unable to parse an option list
Throws ImagickPixelException on error.
Throws ImagickPixelException on failure.
Throws InvalidArgumentException, if Awaitable does not support cancellation.
Throws an InvalidOperationException if the Awaitable is not finished.
Throws for non-xbox threads.
Thus there is no overhead in adding a large number of servers to the pool, even though they might not all be used.
Thus, after a few minutes, the cursor "times out" and the database assumes the client has gotten everything it needs and cleans up its the cursor's resources.
Thus, after you connect, this function will return NULL even if there are secondaries available.
Thus, encountering a marked node downstream of the output constraint means that there is a path from the constraint's output to one of its inputs.
Thus, if a query is sorted by a given field in ascending order, any document with a MongoMaxKey as its value will be returned last.
Thus, if a query is sorted by a given field in ascending order, any document with a MongoMinKey as its value will be returned first.
Thus, if you named an index "superfast query", you could only delete it with the PHP driver by running:    To find what an index is named, you can query the system.indexes collection of a database and look for the name field.
Thus, if you print a cursor (with, say, var_dump() or print_r()), you'll just get the cursor object, not your documents.
Thus, the best way to delete indexes created in the shell or with custom names is to directly call the deleteIndexes database command.
Thus, this test is set to be norepo.
Thus, to return only the "summary" field, one could say:    To return all fields except the "hidden" field:
Thus, you should be prepared to requery if the cursor is MongoCursor::dead().
Tidy up after test
Time is not mentioned
Time should be given in seconds.
Timeout error  Code: 13  If there was an error while waiting for a query to complete.
Timezone with Latitude, Longitude and GMT offset
Timezones must be stored in a separate field if needed.
Timezones with required data for date_sunrise
Tip If you need to know the number of nodes in the collection, use the length property of the DOMNodeList object.
TipA URL can be used as a filename with this function if the fopen wrappers have been enabled.
TipAs with anything that outputs its result directly to the browser, the output-control functions can be used to capture the output of this function, and save it in a string (for example).
To access the other column(s) of the same name, you either need to access the result with numeric indices by using mysql_fetch_row() or add alias names.
To access the other column(s) of the same name, you either need to access the result with numeric indices by using mysqli_fetch_row() or add alias names.
To access the other column(s) of the same name, you must use the numeric index of the column or make an alias for the column.
To accommodate this, we prepend any key with a special string prefix, "INT" when it's an int, and "STRING" when its a string.
To accomplish this you have to name the different format codes and separate them by a slash /.
To apply to more than one channel, combine channeltype constants using bitwise operators.
To check this we need to access the iterator's __toString() method.
To check whether the system is using a configuration file, try retrieving the value of the cfg_file_path configuration setting.
To counter-act this, replace these occurrences with a double dot.
To create an instance that persists between requests, use persistent_id to specify a unique ID for the instance.
To determine if there is more data to be read, use feof() instead of reading this item.
To do so, call fb_rename_function('func_to_stub_out', 'somename') then fb_rename_function('new_func_to_replace_with', 'func_to_stub_out').
To do this you use an array of link identifiers, rather than a single identifier, as the first argument.
To ensure the expected operation, you need to prefix mode with a zero (0):      The mode parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order.
To export all the functions, pass a special constant SOAP_FUNCTIONS_ALL.
To export several functions, pass an array of function names.
To extract single parts of a multipart MIME-encoded message you have to use imap_fetchstructure() to analyze its structure and imap_fetchbody() to extract a copy of a single body component.
To fetch only the unique values of a single column from the result set, bitwise-OR PDO::FETCH_COLUMN with PDO::FETCH_UNIQUE.
To get the documents themselves, you can use one of the methods shown above.
To get the output of the executed command, be sure to set and use the output parameter.
To indicate that a parameter is an OUT parameter from a stored procedure, you must explicitly set the length.
To insert (or query for) a non-UTF-8 string, use MongoBinData.
To introspect function parameters, first create an instance of the ReflectionFunction or ReflectionMethod classes and then use their ReflectionFunctionAbstract::getParameters() method to retrieve an array of parameters.
To limit the query, specify the optional type parameter.
To make cookies visible on all subdomains then the domain must be prefixed with a dot like '.php.net'.
To make sure individual handlers not affected by such a call, call fb_intercept() with individual names afterwards.
To make the serialized string into a PHP value again, use unserialize().
To make the tar or zip non-executable, the phar stub and phar alias files are removed from the newly created archive.
To make this function available on Windows you must compile your own PHP binaries.
To modify the list of file extensions, simply invoke the functions with the new list of file extensions to use in a single string with each extensions separated by comma.
To move to a position before the end-of-file, you need to pass a negative value in offset and set whence to SEEK_END.
To output what is stored in the internal buffer, use ob_end_flush().
To request a scrollable cursor for your PDOStatement object, you must set the PDO::ATTR_CURSOR attribute to PDO::CURSOR_SCROLL when you prepare the SQL statement with PDO::prepare().
To retrieve PDOStatement attributes, refer to PDOStatement::getAttribute().
To retrieve subsequent errors from other statements you have to call mysqli_next_result() first.
To return an INOUT parameter from a stored procedure, use the bitwise OR operator to set the PDO::PARAM_INPUT_OUTPUT bits for the data_type parameter.
To return an array consisting of all values of a single column from the result set, specify PDO::FETCH_COLUMN.
To return an associative array grouped by the values of a specified column, bitwise-OR PDO::FETCH_COLUMN with PDO::FETCH_GROUP.
To return several values they must return an array with named output parameters.
To return the document with the modifications made on the update, use the new option.
To return the keys for all matching values, use array_keys() with the optional search_value parameter instead.
To select a database in this case use the mysqli_select_db() function.
To set a mode, the mode character must be the last one set, however there can only be set one mode but multiple options.
To set a timeout for reading/writing data over the socket, use the stream_set_timeout(), as the timeout only applies while making connecting the socket.
To show variables with numerical prefixes cannot be extracted
To start over, or to tokenize a new string you simply call strtok with the string argument again to initialize it.
To test if a variable is a number or a numeric string (such as form input, which is always a string), you must use is_numeric().
To test this PEAR package should be installed
To use LDAP with SSL, compile OpenLDAP 2.x.x with SSL support, configure PHP with SSL, and set this parameter as ldaps://hostname/.
To use it, create a SoapClient object with the exceptions option set to zero or FALSE.
To use sFTP with PHP, please see ssh2_sftp().
To use this class, first set the save handler you wish to expose using session.save_handler and then pass an instance of SessionHandler or one extending it to session_set_save_handler().
Together with xhprof_frame_end(), this times one block of code execution as if it were a function call, allowing people to define arbitrary function boundaries.
Toggles indentation on or off.
Toggles the compression status of HipHop output, if headers have already been sent this may be ignored.
Too few args
Too few arguments
Too few parameters
Too many args
Too many parameters
Toplevel functions with static local singletons.
Toption(Toption(Toption(Toption(Toption(...)))))
Total of all connection weights, used as divisor in key distribution
Traditional Chinese ()
Trait binding after anon class
Trait that ensures that all mutableish methods that are implemented by immutable vectors throws errors.
Trait that implements all mutating methods of Vectors.
Trait to share behavior between containers that behave like vectors.
Traits are flattend into a class, and that semantics is nothing like a type, or interface, and thus, not propergated.
Transforms the source node to a DOMDocument applying the stylesheet given by the XSLTProcessor::importStylesheet() method.
Transforms the source node to a string applying the stylesheet given by the XSLTProcessor::importStylesheet() method.
Transforms the source node to an URI applying the stylesheet given by the XSLTProcessor::importStylesheet() method.
Transforms unordered skeleton formats like "MMddyyyy" to use the correct ordering and separators for the locale (for example, one locale might use "dd-MM-yyyy" when another uses "yyyy/MM/dd").
Translate a `KeyedTraversable` of `Awaitables` into a single `Awaitable of `Map`.
Translate a `KeyedTraversable` of `Awaitables` into a single `Awaitable` of `Map` of key/`ResultOrExceptionWrapper` pairs.
Translate a `Traversable` of `Awaitables` into a single `Awaitable` of `Vector` of `ResultOrExceptionWrapper`.
Translate a `Traversable` of `Awaitables` into a single `Awaitable` of `Vector`.
Transliterator provides transliteration of strings.
Transport endpoint is not connected  Generally means that the connection string isn't correct, the driver couldn't even find the database server.
Traversing an IntlBreakIterator yields non-negative integer values representing the successive locations of the text boundaries, expressed as UTF-8 code units (byte) counts, taken from the beginning of the text (which has the location 0).
Trigger COW
Trigger run_intercept_handler_for_invokefunc codepath
Truecolor image
Truncates string str to specified width.
Try creating collator with different locales with Procedural and Object methods.
Try deleting a file which is already deleted
Try getting the default Locale with different locales with Procedural and Object methods.
Try getting the display_language for different locales with Procedural and Object methods.
Try getting the display_name for different locales with Procedural and Object methods.
Try getting the display_region for different locales with Procedural and Object methods.
Try getting the display_script for different locales with Procedural and Object methods.
Try getting the display_variant for different locales with Procedural and Object methods.
Try getting the keywords for different locales with Procedural and Object methods.
Try getting the prmary language for different locales with Procedural and Object methods.
Try getting the region for different locales with Procedural and Object methods.
Try it again
Try it with a builtin, too.
Try it with no catch also.
Try normalization and test normalization with Procedural and Object methods.
Try on a StdClass
Try on an object other than the one already bound
Try out G bases as well.
Try parsing different Locales   with Procedural and Object methods.
Try parsing different Locales with Procedural and Object methods.
Try reading some or all content of the file opened in write only mode
Try setting the default Locale with different locales with Procedural and Object methods.
Try specifying a correct attribute.
Try specifying an incorrect attribute.
Try subtracting from expected result.
Try the most common flags for 'version'
Try to access constants defined in an included file
Try to access wrong key so a Notice is raised
Try to be idempotent
Try to break stuff
Try to compare long strings.
Try to defeat any possible inlining / constant folding.
Try to detect (and forbid) external dependencies.
Try to fill border
Try to get the deleted keys, should give empty array
Try to include a non-existant file
Try to see if there is a signature
Try to set/get a collation attribute.
Try to set/get collation strength.
Try to sort test data.
Try to specify valid and invalid locale types when getting locale.
Try to unlink file when file handle is still in use
Try to use array key as property
Try to use unserialzied object
Try to use unspecialized handler
Trying different invalid values for 'input' array argument
Trying to copy the links across dir paths given in various notations and dirs having limited access
Trying to create the file in a dir with permissions from 0000 to 0777, Allowable permissions: files are expected to be created in the input dir  Non-allowable permissions: files are expected to be created in '/tmp' dir
Trying to create unique files by passing previously created unique file name as prefix
Trying to do so will result in a RuntimeException being thrown.
Trying to hack around MySQL Server version dependent features 2030 This command is not supported in the prepared statement protocol yet
Trying to pick more elements than there are in the array will result in an E_WARNING level error.
Tuple-like arrays are subtypes of all the special interfaces that arrays are too.
Tuple-like arrays can be used with list(...) statement - usage that should report errors.
Tuple-like arrays can be used with list(...) statement - usage with no errors.
Tuple-like arrays have integer keys
Tuple-like arrays used with list(...) statement check arity
Turn file path into unix:///path/to/sock
Turn off autocommit using a server variable
Turn off strice mode, since it does not allow uninitialized session ID
Turn on code coverage by Eval.RecordCodeCoverage or by using fb_enable_code_coverage and call this function periodically to get results.
Turns encryption on/off on an already connected socket.
Turns off autocommit mode.
Turns off the usual SSL peer certificate and host checks, this is not for production environments.
Turns off verbose request information (off by default).
Turns on searching the include path for class files.
Turns on the usual SSL peer certificate and host checks (enabled by default).
Turns on verbose request information useful for debugging, the debug information is stored in the debugInfo member.
Turns the specified dn, into a more user-friendly form, stripping off type names.
Tweak specific SSL checks for requests.
Two Arguments, second as prefix but without prefix string as third argument
Two arguments, less than expected no.
Two styles of iterators are supported, iterators that map the filename within the tar/zip to the name of a file on disk, and iterators like DirectoryIterator that return SplFileInfo objects.
Type Constants are case sensitive
Type hints are missing as any classes that implements this interface must specify types, meaning that no classes written in PHP can implement this interface if type hints are included.
Type of serialization to use with values stored in redis
Typecheck the currently running endpoint with a given `hh_client`.
Typechecker must consider this nullable
Typechecker should complain about a type mismatch between the typehint and the default value
Typechecker should detect a mismatch here
Typedefs are in the same namespace as classes.
Types array, object and resource are not scalar.
Typical situations lie somewhere between these two extremes.
Typically all the memory allocated for the LDAP result gets freed at the end of the script.
Typically this happens when a function calls another function and expects the return value to be of a certain type or value not including arithmetic or buffer related errors.
Typically you will get 1.
Typically, the message format will come from resources and the arguments will be dynamically set at runtime.
Typically, these expressions will be used to query the database and find matching strings.
UCOL_GREATER
UDP will never cause a connection error, as it is a connection-LESS protocol
UNSAFE_BLOCK
UNSAFE_EXPR
UNSAFE_EXPR -- roflcopter
UNSAFE_EXPR Multiline comments should not cause following line numbers to break.
UNumberFormatAttribute
UNumberFormatPadPosition
UNumberFormatRoundingMode
UNumberFormatStyle constants
UNumberFormatSymbol
UNumberFormatTextAttribute
URI no port
USING VARIABLE VARIABLE
UTF-8  ASCII compatible multi-byte 8-bit Unicode.
UTF-8 ASCII compatible multi-byte 8-bit Unicode.
UTF-8 Note: either convert_encoding or strlen has problem
UTF-8 This works in PHP 5.x currently, but fatals in HHVM right now
UTF-8 assumed
UTF-8 is a standard mechanism used by Unicode for encoding wide character values into a byte stream.
UTF-8 is transparent to plain ASCII characters, is self-synchronized (meaning it is possible for a program to figure out where in the bytestream characters start) and can be used with normal string comparison functions for sorting and such.
UTF-8, UTF-7, ASCII, EUC-JP,SJIS, eucJP-win, SJIS-win, JIS, ISO-2022-JP For ISO-8859-*, mbstring always detects as ISO-8859-*.
Uh oh, we set the member variable to a Foo inside a Foo2
Un-quotes a quoted string.
Unbinds from the LDAP directory.
Uncomment this line if you have libxml 2.6.17 or CVS version after 2005/02/22 earlier versions segfault
Unconditionally defined functions
Undefined data
Undefined offset: 2
Undefined values here allow a benchmark to define behaviour itself.
Under PHP, if omitted, the crypto_type context option on the stream's SSL context will be used instead.
Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.
Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon.
Undocumented behavior but Zend does it and frameworks rely on it, so..
Unexpected values to be passed as arguments
Unfolding inner array tree.
Unfortunately, the MongoCollection::ensureIndex() generates slightly different names than the shell and, due to backwards compatibility issues, MongoCollection::deleteIndex() cannot delete custom-named indexes as well.
Unfortunately, zend_strtod doesn't handle Nan's and Infs
Unicode Security and Spoofing Detection http://icu-project.org/apiref/icu4c/uspoof_8h.html
Unicode is on and we are told that the MySQL column type is a binary type.
Unixified Dir
Unixified Dir Or File
Unixified File
Unknown browser uses defaults.
Unknown option for assert_options()
Unless otherwise noted the functions in this class are tolerant of both formats.
Unless you are writing something that interacts with the sharding internals, stop, go directly to MongoDate, do not pass go, do not collect 200 dollars.
Unlike PDOStatement::bindValue(), the variable is bound as a reference and will only be evaluated at the time that PDOStatement::execute() is called.
Unlike Phar::isWritable(), data-only tar/zip archives can be modified even if phar.readonly is set to 1.
Unlike array_diff() the array keys are used in the comparison.
Unlike array_diff_assoc() an user supplied callback function is used for the indices comparison, not internal function.
Unlike array_diff_key() an user supplied callback function is used for the indices comparison, not internal function.
Unlike loading XML, HTML does not have to be well-formed to load.
Unlike localeconv(), which returns all of the elements, nl_langinfo() allows you to select any specific element.
Unlike many other mechanisms in PHP, variables stored using apc_add() will persist between requests (until the value is removed from the cache).
Unlike many other mechanisms in PHP, variables stored using apc_store() will persist between requests (until the value is removed from the cache).
Unlike mb_strpos(), mb_stripos() is case-insensitive.
Unlike mb_strrchr(), mb_strrichr() is case-insensitive.
Unlike mb_strrpos(), mb_strripos() is case-insensitive.
Unlike mb_strstr(), mb_stristr() is case-insensitive.
Unlike strpos(), stripos() is case-insensitive.
Unlike strrpos(), strripos() is case-insensitive.
Unlike the function date(), idate() accepts just one char in the format parameter.
Unlike the implementing function, doesn't have an arg type
Unlike the strrpos() before PHP 5, this function can take a full string as the needle parameter and the entire string will be used.
Unpacks from a binary string into an array according to the given format.
Unquoted keys
Unregister a function from the spl provided __autoload stack.
Unregisters this instance as an autoloader.
Unserialization can remove static-ness, and we don't try to enforce that it has the same value, which means even if a property is only initialized with a in-class initializer it should not be inferred as a SStr or SArr.
Unserialization does not check values, so property types do not infer specific values.
Unserialization is case-insensitive.
Unserialize a previously fb_compact_serialize()-ed data.
Unserialize previously fb_serialize()-ed data.
Unset first element of an array and test behaviour of reset()
Unsetting array indexes should be fine
Unsigned Integer type variation
Unsubscribe from the specified mailbox.
Until PHP 4.3.0, omitting it would assume 1024 as the line length.
Until we know for sure, let's just create a php symlink to hhvm
Up to nine substrings may be used.
Update an existing old value to a new value.
Update any git hashes in case --latest or --latest-record was used and we changed the hashes currently in frameworks.json.
Update the walkabout strengths and stay flags of all variables downstream of the given constraint.
Updating code according to selected threading model
Upon failure, FALSE is returned.
Upon failure, file() returns FALSE.
Upon successful completion the message queue data structure is updated as follows: msg_lrpid is set to the process-ID of the calling process, msg_qnum is decremented by 1 and msg_rtime is set to the current time.
Upon successful completion the message queue data structure is updated as follows: msg_lspid is set to the process-ID of the calling process, msg_qnum is incremented by 1 and msg_stime is set to the current time.
Upper case columns
Usage of literal syntax for collections has been modified to make use of the syntax within this library.
Use "class::method" for method name.
Use 'arc liberate' to rebuild it.
Use * to return all elements within the element tree.
Use 0 for auto-select.
Use ArrayObject::offsetSet() instead.
Use CALL_TOSTRING to call RecursiveCachingIterator::__toString() for every element (the default), and/or CATCH_GET_CHILD to catch exceptions when trying to get children.
Use PDOStatement::columnCount() to return the number of columns in the result set represented by the PDOStatement object.
Use PHP's maximum integer value as array key then try and push new elements onto the array
Use PharData::compress() to compress an entire tar-based archive.
Use SplFileInfo::getRealPath() to determine the true path on the filesystem.
Use `await` or `join` to get the actual `AsyncMysqlQueryResult` object.
Use `await` or `join` to get the actual `Vector` of `AsyncMysqlQueryResult` objects.
Use a fixed prefix so we can ensure length of o/p id is fixed
Use a largeish timeout in CLI mode, so we can wait for hh_server startup if we need to.
Use a single slash ('/') for all paths on the domain.
Use a submodule/move technique.
Use after and ensure refcounts are still real.
Use array to specify encoding_list
Use as offset
Use bitshifting and masking to access the distinct red, green and blue component values:
Use both in case composer.json has been changed, but the lock file hasn't been updated yet.
Use combination of imagesetstyle() and imageline() instead.
Use each of the above functions as an output buffering callback:
Use extension_loaded() to test whether a given extension is already available or not.
Use func_get_args() for this.
Use isset() to test if a variable is set.
Use it with other heap graph functions to extract the information you want.
Use known values to test
Use logical network address for grouping network I/O by intention, instead of physical addresses.
Use md5 of the original and current maps to see if we are different
Use mysql_num_rows() to find out how many rows were returned for a SELECT statement or mysql_affected_rows() to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.
Use null, false or empty string to unregister a previously registered handler.
Use of class and objects
Use reset() to bring it back to beginning.
Use shtool to find out if there is glibtool present (MacOSX)
Use snapshot mode for the query.
Use the PHP function getcwd() to figure out what the current working directory is.
Use the constants described in the MongoLog section with bitwise operators to check if specific modules are being logged.
Use the constants described in the MongoLog section with bitwise operators to check the level.
Use the constants described in the MongoLog section with bitwise operators to specify levels.
Use the constants described in the MongoLog section with bitwise operators to specify modules.
Use the function posix_getgrgid() to resolve the group name and a list of its members.
Use the gettype() to get the type of regular data and use settype()  to change its type to other types
Use the mysql_tablename() function to traverse this result pointer, or any function for result tables, such as mysql_fetch_array().
Use the ord() function to find the ASCII value for a character.
Use the proxies in case the test needs access to the outside world
Use the set Environment variable
Use the timeout to avoid curl SlowTimer timeouts and problems
Use these parameters to bind any user-input, do not include the user-input directly in the query.
Use this at your own risk as it could open you up for SQL injection.
Use this function in server mode to collect results instead.
Use this function to do any displaying of text, so that things can be over-written as necessary.
Use this function to toggle the number of allowed async connections on the pools connecting to MySQL with this current client.
Use this instead of unlink to avoid warnings
Use this method to ensure your query is safe from, for example, SQL injection.
Use this name, instead of IP address or URL for I/O status reporting.
Use this parameter to specify another file extension.
Use this to asynchronously connect to a MySQL instance.
Used as a sentinel type in 86pinit().
Used as the base class for all closures
Used by closure and internal purposes.
Used by the geometric mean computation.
Used by the stream wrapper to open phar:// files.
Used to crash hphp
Used to represent resources
Used with mysql_multi_query() to check if there are more result sets to be returned.
Used with mysql_multi_query() to move the result set on one.
Used with mysql_multi_query() to return a mysql result for the current iterated query.
Useful for showing progress as a percentage.
Useful for unit tests that want to muck with globals, and then lock them in.
Useful to handle errors occurred in static methods when there's no object to get error code from.
User defined callback functions
User error handler must not modify error context.
User supplied function is used for comparing the keys.
User-level doesn't override implicit native magic props.
User-level, handled
Users may not change the array itself from the callback function.
Uses ICU ucol_getSortKey() to gain more speed on large arrays.
Uses google's cpplint.py to check code.
Uses user-defined currency string.
Using "wrong" default type will be reported when trying to use the result in incompatible way
Using CALL threading by default
Using Class and objects
Using Detect Order
Using Encoding List Array
Using GenericClass without type parameters is okay for now
Using MYSQL_ASSOC (the default), you only get associative indices (as mysql_fetch_assoc() works), using MYSQL_NUM, you only get number indices (as mysql_fetch_row() works).
Using MYSQL_ASSOC, you only get associative indices (as mysql_fetch_assoc() works), using MYSQL_NUM, you only get number indices (as mysql_fetch_row() works).
Using UTF-8 internally allows to encode/decode ALL characters.
Using a dummy node, left and right will always be nodes and we avoid special cases.
Using antialiased primitives with transparent background color can end with some unexpected results.
Using array keys as an argument to the 'callback'
Using array without type parameters is okay for now
Using characters outside of this range in the salt will cause crypt() to return a zero-length string.
Using defaults
Using different control structure keywords  if..else, elseif - T_IF(301), T_ELSEIF(302), T_ELSE(303) while - T_WHILE(318) do...while - T_DO(317) for - T_ENDFOR(320) foreach - T_ENDFOREACH(322) switch...case - T_ENDSWITCH(327), T_CASE(329) break - T_BREAK(331) continue - T_CONTINUE(332)
Using different types of constants in 'source' string to check them for token integer const - T_LNUMBER(305) float/double/real const - T_DNUMBER(306) string cosnt - T_CONSTANT_ESCAPED_STRING(315) bool const (no tokens specified) - T_UNKNOWN(307) null const (no tokens specified) - T_UNKNOWN(307)
Using different types of repeatitive keys as well as values for 'input' array
Using invalid characters in the salt will cause crypt() to fail.
Using named constants is strongly encouraged to ensure compatibility for future versions.
Using old values because in PHP 5.x as soon as the first output happens via var_dump, it throws a warning: PHP Warning: ini_set(): Cannot change zlib.output_compression - headers already sent on the next zlib.output_compression ini_set() call.
Using other data types will produce unexpected results.
Using specialized executor by default
Using these keys, the MessageFormatter class can concatenate the parts of the message, localize them, and display a well-formed string to the end user.
Using this method to fetch large result sets will result in a heavy demand on system and possibly network resources.
Using this parameter is much more efficient than the default action (which is to return all attributes and their associated values).
Using unoptimized zlib build fixes the issue.
Usually, the default `""` is fine.
Usually, there will be only one row block in the vector because the query completed in full in one attempt.
Utilities for storing and retrieving files from the database.
Utility to return a unique base skeleton from a given pattern.
Utility to return a unique skeleton from a given pattern.
Uuencode translates all strings (including binary's ones) into printable characters, making them safe for network transmissions.
Valgrind expectedly complains about this: "sigprocmask: unknown 'how' field 2147483647" Skip
Valid Range for Gregorian Calendar 4714 B.C.
Valid Range for Julian Calendar 4713 B.C.
Valid UTF-8 sequence returns code point count.
Valid args (casting)
Valid attribute names.
Valid attribute values.
Valid characters for the map are R, G, B, A, O, C, Y, M, K, I and P.
Valid languages are "Japanese", "ja","English","en" and "uni" (UTF-8).
Valid locale tag and subtag values
Valid methods are: - STREAM_CRYPTO_SSLv2_CLIENT - STREAM_CRYPTO_SSLv3_CLIENT - STREAM_CRYPTO_SSLv23_CLIENT - STREAM_CRYPTO_TLS_CLIENT The following methods are valid, but not currently implemented in HHVM: - STREAM_CRYPTO_SSLv2_SERVER - STREAM_CRYPTO_SSLv3_SERVER - STREAM_CRYPTO_SSLv23_SERVER - STREAM_CRYPTO_TLS_SERVER  When enabling crypto in HHVM, this parameter is required as the session_stream parameter is not supported.
Valid normalization form values.
Valid types are pipe (the second element is either r to pass the read end of the pipe to the process, or w to pass the write end) and file (the second element is a filename).
Valid with cost the default
Valid with cost the same
Valid with cost the same, additional params
Valid, as it's an unknown algorithm
Validate non-empty values (empty values are accepted)
Validate that we can see the first value
Validate that we can see the second value
Validates a document based on a schema defined in the given string.
Validates a document based on the given schema file.
Validates the document based on its DTD.
Values true, false and null (case-insensitive) are returned as TRUE, FALSE and NULL respectively.
Var name of the base var.
Varadic argument test, equivalent to min()
Variables that should, with some level of preference, stay the same.
Variables will be co-erced to a suitable type for the specifier:
Variants are ok, too.
Variation 1 : Check working of third argument of readfile()
Variation 1 : Creating links across directories where linkname is stored as an object and array member
Variation 2 : Create file Create soft/hard link to it Read link using readfile() Delete file and its link
Variation 2 : Create hard link to non-existent file
Variation 3 : Create file and a soft link to the file Access data of the file through the soft link  Update the file through soft link Check size of file and soft link link
Variation 4 : Create file and a hard link to the file Access data of the file through the hard link  Update the file through hard link Check size of file and hard link
Variation 5 : Creating link, deleting it and checking linkinfo(), is_link() on it
Variation 6 : Change permission of directory and try creating links inside that directory
Variation 7 : Create soft/hard link to itself
Variation 8 : Create soft/hard link to different directory
Various combinations of arrays to be used for the test
Various functions that accept resource arguments have different coerce modes False
Various input arrays for different format types
Various variables definitions used for testing of the function
Vector is a stack-like collection.
Vectors do not have "copy-on-write" semantics.
Vectors do not support iterating while new elements are being added or elements are being removed.
Vectors do not support taking elements by reference.
Vectors only support integer keys.
Vectors/Maps - some basic tests
Verify return type
Verify that keeping accents works.
Verify that our implementation is the same as for the constructor and strtotime
Verify that our implementation works regardless of position
Verify that removing accents works.
Verify that the reference still exists, and that it is of the right class.
Verify that the reserialized data is equal to the original.
Verify that the splay tree has sorted, unique keys.
Verify that the splay tree has the right size.
Verify that the stream constants have been registered correctly by checking some of them
Verify that you can safely access a Zend resource even after its been closed.
Verifying shm_remove_var worked, this is not sure test though.
Version check.
Versions prior to 4.1 have a weak test and will accept this.
Visit the left side first, so push the right side before the left.
WARNING: The values described here are NOT the actual values in PHP code.
WARNING: Unable to initialise parser of type resource
WHERE CURRENT OF.
WUNTRACED Return for children which are stopped, and whose status has not been reported.
WUNTRACED return for children which are stopped, and whose status has not been reported.
Wait for a certain length of time before an async function does any more work.
Wait for a given Awaitable to finish and return its result.
Wait for signal to arrive.
Wait for the expected number of responses.
Warning  If the destination file already exists, it will be overwritten.
Warning  In PHP 4.0.6 and earlier pow() always returned a float, and did not issue warnings.
Warning  It cannot be used to add extra criteria to a query on the fly.
Warning  On exit, the arrays are modified to indicate which socket resource actually changed status.
Warning  Some web servers (e.g. Apache) change the working directory of a script when calling the callback function.
Warning  The parameter must be a string.
Warning  There is no way to return another column from the same row if you use PDOStatement::fetchColumn() to retrieve data.
Warning  This function returns FALSE for files inaccessible due to safe mode restrictions.
Warning  This function will generate a warning if the year is outside of the range for Unix timestamps (i.e. before 1970 or after 2037).
Warning  Throwing exceptions in SplHeap::compare() can corrupt the Heap and place it in a blocked state.
Warning  Using a timeout value of 0 allows you to instantaneously poll the status of the streams, however, it is NOT a good idea to use a 0 timeout value in a loop as it will cause your script to consume too much CPU time.
Warning Never use gettype() to test for a certain type, since the returned string may be subject to change in a future version.
Warning This class has been DEPRECATED as of version 1.3.0.
Warning base_convert() may lose precision on large numbers due to properties related to the internal "double" or "float" type used.
Warning, and doesn't change the value try to redefine a pre-defined constant
Warning: PDOStatement::getColumnMeta() expects exactly 1 parameter, 0 given in
Warning: PDOStatement::getColumnMeta() expects exactly 1 parameter, 2 given in
Warning: PDOStatement::getColumnMeta() expects parameter 1 to be long, array given in
Warning: This function has been DEPRECATED as of PHP 5.3.0.
Warning: This function has been removed from some SAPI's in PHP 5.3.
Warning: This function may return Boolean FALSE, but may also return a non-Boolean value which evaluates to FALSE.
Warning: line numbers are sensitive, do not change
Warning: this will load the file into memory.
WarningThis function may return Boolean FALSE, but may also return a non-Boolean value which evaluates to FALSE, such as 0 or "".
Warnings (E_WARNING level) will be issued if shm_identifier is not a valid SysV shared memory index or if there was not enough shared memory remaining to complete your request.
Warnings are special.
We *couldn't* case on the whole thing if we wanted.
We *want* this to fail and thus not output the watch statement
We _could_ be a tiny bit smarter and consider the following code correct by observing that the is_int and is_float guards are exhaustive.
We also do filename lookups
We also don't want to add --filter to .phpt style tests (e.g. Pear).
We are allowing type hints on variadic function for Hack modes for the type checker, even though we will not check that every element passed into the variadic matches the type hint.
We are not passing a parameter to the closure call.
We are passing multiple parameters to the closure call
We are raising a fatal since we can't access the protected property.
We can make it through typedefs
We can seek forwards using next().
We can use the underlying seek implementation.
We can't actually run this function because we don't have a genva implementation...
We can't check if a parameter isn't passed, we can only check its default value, but that fails if I want to pass the default value.
We can't construct a Map or ImmMap from a Set.
We cannot allow Tany to be created in a strict file.
We cannot implement it because we lack a way to unserialize inline.
We cannot patch until we add it to ignore otherwise git thinks it is uncommited change
We certainly wouldn't want to load that into memory all at once, which is what a cursor is for: allowing the client to access the collection in dribs and drabs.
We check for and disable it explicitly in the code.
We check the general ini settings which affect error handling and than verify if a message is given by a division by zero.
We copy the user certificate and authenticate using that in sandcastle
We count the objects we leave on the stack, and expect the destruct count to be quite close to that.
We do not need to constrain the type parameter for type definitions since they cannot put constraints on their type parameters
We do only the most necessary to test it.
We do some consolidation here because the behavior when testing is really non-deterministic.
We do this substitution here so that this test's expected output is not affected by this bug.
We don't currently do a good job inferring the types of member variables defined in traits.
We don't evaluate default arguments when we don't need them, PHP 7 evaluates them on all calls
We don't give TCP connections a tcp:// prefix
We don't have a MySQL instance running for our test runs, so Database tests won't work
We don't have a cached vendor/, but as --local-source-only wasn't specified, we can try to download it.
We don't test all aspects of the documented behaviour.
We don't test_mysqli_get_client_stats_table_1 the NDB ones.
We don't want to see the current classes again in the next iteration of the loop.
We filtered down to the last element, so we don't need to do anything else.
We generate our own only if necessary.
We got failed Tests, offer the user to send an e-mail to QA team, unless NO_INTERACTION is set
We got failed Tests, offer the user to send and e-mail to QA team, unless NO_INTERACTION is set
We have a fatal after the tests have supposedly started but we really don't have a test to examine.
We have a warning after the tests have supposedly started but we really don't have a test to examine.
We have gotten through the prologue and any blank lines and we should be at tests now.
We have the test.
We have this pattern: Tests: 364, Assertions: 585, Errors: 5.
We have ths pattern: OK (364 tests, 590 assertions) We want the first match of digits
We have to allow whitespace then ending the file before we start the manifest
We intentionally consider null bytes invalid sequences.
We know that our class is in this list.
We maintain a stack of sub-iterators - each of which has a state.
We map those to PHP numeric types - no padding/filling done.
We may get one or more warnings, but then a real test status will come afterwards.
We may however, want to match EXPECT on more than 200 results, so this may need to change later.
We must reset timeout but it must be AFTER we get info
We need this because some collections are not ordered.
We need this hack because the stream wrapper should work even without the __HALT_COMPILER token
We need this little hack to be able to re-run the test
We need to fill in the hole that we created in the middle of the final level.
We need to hide some of these things in functions or hphpc has the same bug for exceptional control flow that this test is intended to catch in hhbbc.
We need to output something every once in a while - if we go quiet, fbmake kills us.
We need to run the emulated version first.
We need to simulate the seek using rewind() and next().
We never care about whatever junk actually called fb_debug_backtrace, or the second-level function which is always some cache wrapper.
We never look at SELF in LEAVES_ONLY
We only catch the first invalid one even if there are more - that matches PHP 7
We pretend that the only thing single-argument array_filter does is remove nullability from it's value type (so vector-like arrays remain vector like).
We recommend the use of imagecreatetruecolor().
We redefine setX, so that it doesn't initialize the parent class properly anymore.
We should never get here
We should solve this eventually by forcing all child class methods / members to have type hints if the corresponding method / member in the parent is hinted.
We should stop it in some time.
We shouldn't crash hhvm when we have a private ctor...
We switch to the shallow clone first so that generated files like vendor/ go into the new checkout, not the original one.
We therefore collect a list of unsatisfied downstream constraints and attempt to satisfy each one in turn.
We treat these tests as no-ops with respect to calculation.
We use an extra test to cover deprecation warning.
We want to be sure that there really is a png file with a reasonable file size.
We want to confirm that all fields are initialized correctly and that the destructor does not segfault.
We will OOM for sure if not for the exit()
We will add label to call it.
We would duplicate the SQL test cases if we have it here and in one of the fetch tests, because the fetch tests would have to call prepare/execute etc.
We'll corrupt the 1024th byte
We'll have to add some more features and options soon.
We're already at the recursion limit, and the current node isn't a leaf
We're expecting a response for the break command, and the command before the break command.
We're going to use a three-stage table (with an extra one for the entities with two code points).
We're pretty close to wasting time with test cases at this point.
We're testing sort order not errors so ignore.
We've tried connecting too recently, don't retry
Weird trait thing
What the test_mysqli_stmt_num_rows_table_1 does is cover an implementation detail of the mysqlnd library.
What we really want to know is that there were a reasonable number of calls to the destructor.
When 0, not core files are created.
When 500 fatal error is about to display, it will invoke this PHP page with all global states right at when the error happens.
When OpenLDAP 2.x.x is used, ldap_connect() will always return a resource as it does not actually connect but just initializes the connecting parameters.
When PHP is being used as a server module, the umask is restored when each request is finished.
When a caller passes a Map to a callee, the callee can modify the Map and the caller will see the changes.
When a caller passes a Set to a callee, the callee can modify the Set and the caller will see the changes.
When a caller passes a Vector to a callee, the callee can modify the Vector and the caller will see the changes.
When a debugger is running, this line of code will break into debugger, if condition is met.
When a hack collection is cast to array, this calls toArray
When a hack collection is cast to boolean, this checks toEmpty
When a new element is added or removed, all iterators that point to the Vector shall be considered invalid.
When a new key is added or an element is removed, all iterators that point to the Map shall be considered invalid.
When a plain instance of SessionHandler is set as the save handler using session_set_save_handler() it will wrap the current save handlers.
When a value is deleted from the hash, it is written to the current output buffer.
When an element is added or removed, all iterators that point to the Set shall be considered invalid.
When an operation (e.g. receive, send, connect, accept, ...) is performed on a blocking socket, the script will pause its execution until it receives a signal or it can perform the operation.
When an operation (e.g. receive, send, connect, accept, ...) is performed on a non-blocking socket, the script not pause its execution until it receives a signal or it can perform the operation.
When another oop_test instance is created it must reuse the statically stored reference oop_value.
When array are refenced
When array are referenced
When called, set_time_limit() restarts the timeout counter from zero.
When comparing an array that has similar elements  but has been created in a different order 2.
When core files are larger than this size, they will be truncated at this size.
When displaying or printing a number it is converted to a locale-specific string.
When doing a strict comparison of string representation
When doing parallel searches an array of search result identifiers is returned, except in case of error, then the entry corresponding to the search will be FALSE.
When field *might* be set, allow indexing into it
When formatting currency, default formatter's currency code is used.
When from_encoding is omitted, detect_order is used.
When given a string it will be cast as an integer when comparing.
When imap_alerts() is called, the alert stack is subsequently cleared.
When imap_errors() is called, the error stack is subsequently cleared.
When implementing an interface which extends Traversable, make sure to list IteratorAggregate or Iterator before its name in the implements clause.
When importing Zend tests there are a lot of them.
When it is not set, the default directory that is used is the one that was compiled into libmcrypt (usually /usr/local/lib/libmcrypt).
When it is not set, the default directory that is used is the one that was compiled-in into libmcrypt (usually /usr/local/lib/libmcrypt).
When iterating over a Map, the key/value pairs appear in the order they were inserted.
When iterating over a Set, the elements appear in the order they were inserted.
When language is omitted, it returns the language name as a string.
When max() is given multiple arrays, the longest array is returned.
When more diffs come, a duplication would be probably a better solution.
When not supplied, all channels are blurred.
When not supplied, default channels are replaced.
When output_callback is called, it will receive the contents of the output buffer as its parameter and is expected to return a new output buffer as a result, which will be sent to the browser.
When parsing currency, default currency definitions are used.
When port is missing (e.g. unix socket) use port of 0
When possible, pipes will be used instead of the TCP/IP protocol.
When specified, the key must be specified.
When stream_select() returns, the arrays read, write and except are modified to indicate which stream resource(s) actually changed status.
When the ArrayObject is constructed from an array all properties are public.
When the ArrayObject refers to an object an array of the public properties of that object will be returned.
When the call returns, this may point to the first byte position past the end of the string.
When the data is unserialized the class is known and the appropriate unserialize() method is called as a constructor instead of calling __construct().
When the offset is equal to the length of this node, the new node has no data.
When the stream times out, the 'timed_out' key of the array returned by stream_get_meta_data() is set to TRUE, although no error/warning is generated.
When the value in array and array1 are both arrays, array_replace_recursive() will replace their respective value recursively.
When the value in array is scalar, it will be replaced by the value in array1, may it be scalar or array.
When this function results in the autoload stack being deactivated, any __autoload function that previously existed will not be reactivated.
When this happens, we should adhere to our existing heuristics for map-like array construction.
When this resource is garbage collected, the curl handle will be saved for reuse later.
When using UPDATE, MySQL will not update columns where the new value is the same as the old value.
When using empty() ArrayAccess::offsetGet() will be called and checked if empty only if ArrayAccess::offsetExists() returns TRUE.
When using the foreach construct, you will also iterate over the subelements.
When using this method (as opposed to Memcache::connect() and Memcache::pconnect()) the network connection is not established until actually needed.
When using this specifier on a string, it acts as a cutoff point, setting a maximum character limit to the string.
When we are out of callee-saved registers, we should still do pre-coloring opt instead of picking a random callee-saved register.
When we invoke setFoo(), this::TFoo will be resolved to static::TFoo, so no error occurs.
When writing unit tests, one may want to stub out a function.
When you call `connect()` with a connection provided by the pool established with `AsyncMysqlConnectionPool`, you are returned this connection object to actual do real work with the MySQL database, with the primary work being querying the database itself.
When you create a connection to the database, the driver will not immediately decide on a secondary to use.
When you define a sequence of characters in the charlist argument make sure that you know what characters come between the characters that you set as the start and end of the range.
When you first do a query with slaveOkay set, at that point the driver will choose a secondary for this connection.
When you set it to an empty string (""), the value set by the mcrypt.algorithms_dir directive is used.
When you set it to an empty string (""), the value set by the mcrypt.modes_dir directive is used.
When you supply a directory name, it is used.
When you use stat(), lstat(), or any of the other functions listed in the affected functions list (below), PHP caches the information those functions return in order to provide faster performance.
When you want to iterate over the same array multiple times you need to instanciate ArrayObject and let it create ArrayIterator instances that refer to it either by using foreach or by calling its getIterator() method manually.
When you want to iterate over the same array multiple times you need to instantiate ArrayObject and let it create ArrayIterator instances that refer to it either by using foreach or by calling its getIterator() method manually.
Where extra functionality is available, the intl extension may expose the ICU break iterator with suitable subclasses, such as IntlRuleBasedBreakIterator or IntlCodePointBreaIterator.
Where possible 'UTF-8' has been entered as a string value
Where the encryption is done, you should free the encryption buffers by calling mcrypt_generic_deinit().
Whereas MySQl 5.5 may not.
Whether it's scoped or not, a static closure cannot have a bound instance.
Whether or not the specified codepoint has the noted boolean property.
Whether pagelet server is enabled or not.
Whether the server is going to stop soon.
While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages.
While MapReduce is powerful, it is often more difficult than necessary for many simple aggregation tasks, such as totaling or averaging field values.
While autocommit mode is turned off, changes made to the database via the PDO object instance are not committed until you end the transaction by calling PDO::commit().
While not required, you can pass a `MySSLContextProvider` to `AsyncMysqlClient::connect()`.
While output buffering is active no output is sent from the script (other than headers), instead the output is stored in an internal buffer.
While pure sequences seem to be nesting just fine, pure mappings and mappings with sequences inside can't go very deep.
While the parameters are of type mixed, going to assume they are SplFileInfos for now.
While there is more than one node left in the priority queue:
White background and blue text
White space char
White space may not appear within an individual locale, but is ignored otherwise.
Why this function may not exist  ftp_ssl_connect() is only available if both the ftp module and the OpenSSL support is built statically into php, this means that on Windows this function will be undefined in the official PHP builds.
Width and height.
Will additionally produce a Warning when called on a non-array.
Will get a warning
Will return a string (e.g. for test path) or an array (e.g., for blacklisted tests)
Will return the current dewey binary unless the `HOWTOEVEN_BUILD` environment variable is set.
Will succeed: Function was declared in strict mode, but that does not matter This file uses weak mode, so the call is weak, and float accepted for int
Will succeed: Function was declared in weak mode, but that does not matter This file uses strict mode, so the call is strict, and float denied for int
Windows uses only the first three characters of prefix.
Wipe the user buffer.
With ( and )
With PHP 4.0.6 through 4.1.x this function always exists if the GD module is loaded, but calling it without GD2 being installed PHP will issue a fatal error and exit.
With PHP 4.2.x this behaviour is different in issuing a warning instead of an error.
With a lazy view, memory is allocated for an element only when needed or used in a calculation like in `map()` or `filter()`.
With an empty prefix, the returned string will be 13 characters long.
With args greater than expected
With args less than expected
With autoload disabled.
With autoload failing to add it.
With autoload, no warning.
With bind_textdomain_codeset(), you can set in which encoding will be messages from domain returned by gettext() and similar functions.
With callback function which returns always false
With callback function which returns always true
With default argument
With default callback function
With default callback function argument, array_filter() removes elements which are interpreted as false  Here Testing all the false array element possibilities
With error reporting off we still get the var
With existing file
With hardlink
With non existent comparison function
With non existent comparison function and extra argument
With non-existing dir path
With non-existing file
With non-existing file or dir
With non-existing source
With one less than the expected number of arguments
With one more than expected number of arguments
With one more than the expected number of arguments
With optional arguments
With partial output on errors.
With standard files and dirs
With symlink
With the XDEBUG_TRACE_NAKED_FILENAME flag set, ".xt" is not added.
With zero arguments
Without QLZ_MEMORY_SAFE this segfaults.
Without a replica set, it will just return an array with one element containing the host that you are connected to.
Without enabling SKIP_PASV_IP flag, the following output will be seen..
Without the catch trace, this test case would randomly crash (but with a fairly high probability) depending on the exact timing of the timeout.
Without the second parameter, ltrim() will strip these characters: " " (ASCII 32 (0x20)), an ordinary space.
Without the second parameter, rtrim() will strip these characters: " " (ASCII 32 (0x20)), an ordinary space.
Without the second parameter, trim() will strip these characters: " " (ASCII 32 (0x20)), an ordinary space.
Without this mask set the error_handler will be called for every error regardless to the setting of the error_reporting setting.
Won't crash if less than 3 zeros here
Works fine:
Works only when objects consist of hack collections and primitive types.
Wrap an `Awaitable` into an `Awaitable` of `ResultOrExceptionWrapper`.
Wrap them up in an array and leak them into C().
Wrapper around ICU ucol_getAttribute().
Wrapper around ICU ucol_getLocaleByType().
Wrapper around ICU ucol_getStrength().
Wrapper around ICU ucol_setAttribute().
Wrapper around ICU ucol_setStrength().
Wrapper around ICU ucol_strcoll().
Wraps a string to a given number of characters.
Writable bits are ignored, and set at runtime based on the phar.readonly INI variable.
Write .cpp files for building libapc_prime.so that can be loaded by an HPHP-compiled server at startup time.
Write a string produced according to format to the stream resource specified by handle.
Write an error in a format recognizable to Emacs or MSVC.
Write initialisation statemenst for all the variables that might be used
Write link it into the existing TARGETS TODO sort these
Write over the last line to avoid random trailing chars on next echo
Write stats to csv file
Write test context information.
Write the data in to the file, verify the write by checking file pointer position,  eof position, and data.
Write the given text to a temporary file, and return the filename.
Write the string at the top left
Write the values to memcache using a raw socket connection to make sure that they are not transformed in any way.
Writes a DTD attribute list.
Writes a full CDATA.
Writes a full DTD element.
Writes a full DTD entity.
Writes a full DTD.
Writes a full attribute.
Writes a full comment.
Writes a full element tag.
Writes a full namespaced attribute.
Writes a full namespaced element tag.
Writes a processing instruction.
Writes a raw xml text.
Writes a single test case to a file
Writes a text.
Writes an end tag even if the element is empty.
Writes the given text into the image using TrueType fonts.
Writes the text and apply a gaussian blur on the image
Writes, commands, and any other operation that sends information to the database and waits for a response can throw a MongoCursorException.
Writing into file
Wrong Parameters
Wrong argument count
Wrong argument types
Wrong array indexes
Wrong encoding
Wrong number of parameters for  assert()
Wrong number of parameters for assert_options()
Wrong parameter count in assert
Wrong parameter count in assert_options
Wrong parameter name in assert_options
Wrong parameter type test.
Wrong value is truncated to 255
Wrote: 72 bytes
X - the argument is treated as an integer and presented as a hexadecimal number (with uppercase letters).
XDEBUG_TRACE_HTML (4) creates a trace file as an HTML table XDEBUG_TRACE_NAKED_FILENAME (8) Normally, Xdebug always adds ".xt" to the end of the filename that you pass in as first argument to this function.
XHP attributes cannot be declared without a type
XML_OPTION_CASE_FOLDING and XML_OPTION_TARGET_ENCODING are available.
XML_OPTION_SKIP_TAGSTART integer Specify how many characters should be skipped in the beginning of a tag name.
XML_OPTION_SKIP_WHITE integer Whether to skip values consisting of whitespace characters.
XML_OPTION_TARGET_ENCODING string Sets which target encoding to use in this XML parser.By default, it is set to the same as the source encoding used by xml_parser_create().
XXX the MySQL client library version isn't exposed with any  constants, the single possibility is to use the PDO::getAttribute().
XXX: should be __Native, not a builtin
XXXjit doesn't do "missing argument" warnings
Xdebug only records whether or not a line has been excuted, this implementation includes the number of times a line was executed.
Yaml emit callback function, referred on yaml_emit call by class name.
Yamlize the array
Year wise time stamps
Yep, really.
Yes, 1 - the asynchronous query should have been processed
Yes, I really want to check if the object property is empty
Yes, this is a fatal error and I want it to fail.
Yes, this is technically okay at runtime, but we've deliberately decided to ban it due to its error suppression properties.
Yes, we need the temporary variable.
Yes, you can fetch a result - the query has been processed
Yet it is still stable
You almost never want this.
You application will either be hard coded to look for certain attributes (such as "surname" or "mail") or you will have to use the ldap_get_attributes() call to work out what attributes exist for a given entry.
You can also read more about modes on Unix systems with 'man 1 chmod' and 'man 2 chmod'.
You can also set the global default scale for all functions by using bcscale().
You can also specify an alternative openssl configuration file by setting the value of the config key to the path of the file you want to use.
You can also specify the data parameter as a single dimension array.
You can also use 1 and 0 instead of TRUE and FALSE.
You can also use Unix timestamp or a number of seconds starting from current time, but in the latter case the number of seconds may not exceed 2592000 (30 days).
You can also use memcache_get_server_status() function.
You can also use the memcache_add_server() function.
You can also use the memcache_get_extended_stats() function.
You can also use the memcache_set_compress_threshold() function.
You can also use the memcache_set_server_params() function.
You can also use the validateOnParse property of DOMDocument to make a DTD validation.
You can change this behaviour by setting preserve_keys to TRUE.
You can check if you have got an error by checking if mysqli_error() doesn't return an empty string, if mysqli_errno() returns a non zero value, or if mysqli_field_count() returns a non zero value.
You can check which server was used for this query by calling MongoCursor::info() after running the query.
You can find a list of these classes in the chapter introduction.
You can get an instance of `AsyncMysqlRowBlock` via the `AsyncMysqlQueryResult::rowBlocks()` call.
You can have a shape as a parameter to a user attribute.
You can have multiple deprecation warnings for PHP 4 style constructors
You can iterate over all the fields (columns) of an `AsyncMysqlBlock` one by one until the iterator is not valid any longer.
You can iterate over all the rows of an `AsyncMysqlRowBlock` one by one until the iterator is not valid any longer.
You can leave it out and use an empty array or NULL instead.
You can make make mysqlnd use malloc() by either using pconnect or mysql_init() - so we should test_bug49442_table_1 pconnect as well..
You can manually set this using the curl_setopt() function.
You can override a private function with a public one in php.
You can override this setting by running:  then restarting Apache.
You can override with the correct type
You can pass array of keys to Memcache::get() to get array of values.
You can pass this constructor an `array` of options to tweak the behavior of your pool.
You can pass two constants there, CASE_UPPER and CASE_LOWER(default).
You can prevent the script from blocking by specifying MSG_IPC_NOWAIT in the flags parameter.
You can set it lower though.
You can specify any combination of the following bitmasks.
You can specify which column you want with the column-index parameter.
You can switch it to non-blocking mode by using stream_set_blocking().
You can think of a row just like you do a database row that might be returned as a result from a query.
You can unblock it by calling SplHeap::recoverFromCorruption().
You can use MEMCACHE_COMPRESSED constant as flag value if you want to use on-the-fly compression (uses zlib).
You can use exceptions or intl_get_error_code() to detect error conditions.
You can use file_get_contents() to return the contents of a file as a string.
You can use this function e.g. to check if the message was written by the owner of the private key.
You can use this function e.g. to decrypt data which were supposed only to you.
You can use this to install CLI utilities globally, all you need is to add the COMPOSER_HOME/vendor/bin dir to your PATH env var.
You can use variables inside of a print statement
You cannot bind multiple values to a single named parameter in, for example, the IN() clause of an SQL statement.
You cannot use a named parameter marker of the same name twice in a prepared statement.
You do not need to pass every array to socket_select().
You do not need to pass every array to stream_select().
You generally should not do this.
You get generally `ResultOrExceptionWrapper` by calling `wrap()`, passing in the `Awaitable`, and a `WrappedResult` or `WrappedException` is returned.
You have to increase it or send smaller chunks of data.
You have to use reset() if you want to traverse the array again using each.
You may be getting outdated dependencies.
You may get the errno parameter by calling posix_get_last_error().
You may need to call SplFileObject::rewind() to reset the file pointer to the beginning of the file if you have already written data to the file.
You may need to call rewind() to reset the file pointer to the beginning of the file if you have already written data to the file.
You may notice that many methods affecting the instace of `Pair` return an `ImmVector` -- `Pair`s are essentially backed by 2-element `ImmVector`s.
You may poll the process (to see if it has stopped yet) by using the proc_get_status() function.
You may use them for sanity-checks that test for conditions that should always be TRUE and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features.
You may want to call `escapeString()` to ensure that any queries out of your direct control are safe.
You must call PDOStatement::errorCode() to return the error code for an operation performed on a particular statement handle.
You must call PDOStatement::errorInfo() to return the error information for an operation performed on a particular statement handle.
You must ensure that the delimiter argument comes before the string argument.
You must have as many values as you do placeholders.
You must include a unique parameter marker for each value you wish to pass in to the statement when you call PDOStatement::execute().
You need to have a valid openssl.cnf installed for this function to operate correctly.
You need to validate your document with DOMDocument::validate or DOMDocument::validateOnParse before using this function.
You probably won't see this because of the "zend_mm_heap corrupted"
You should NOT use idx() as a general replacement for accessing array indices.
You should also note that PHP doesn't cache information about non-existent files.
You should keep this id for later use with wait_for_response().
You should never have to do this under normal circumstances.
You should not throw a PDOException from your own code.
You shouldn't use this value in a script.
You will block until the connection has been adopted to an `AsyncMysqlConnection`.
You will need to have the same IV (think: starting point) both at encryption and decryption stages, otherwise your encryption will fail.
You will see leaks with libmysql
You would most commonly use this to set the PDO::ATTR_CURSOR value to PDO::CURSOR_SCROLL to request a scrollable cursor.
You would use this call for an application which "browses" directory entries and/or where you do not know the structure of the directory entries.
You'll find the classes documented using php code in the file spl.php or in corresponding .inc files in subdirectories examples and internal.
ZEND_FETCH_CONSTANT
ZEND_INIT_FCALL_BY_NAME
ZEND_INIT_STATIC_METHOD_CALL
ZEND_ISSET_ISEMPTY_VAR
ZEND_UNSET_VAR
ZEND_VM_DISPATCH_TO_HELPER
Zend allows the class name to be explicitly set to PDOStatement.
Zend doesn't understand 'string' and 'int' typehints, and will only allow NULL defaults.
Zend drops this set without a notice or fatal.
Zend is in the process of deprecating this behavior.
Zend will cast the NULL to 0
Zend's implementation of call_user_func() and forward_static_call() has a few corner cases where its behavior is strictly incorrect.
Zend's implementation of forward_static_call contains a check for this, implying intent to uphold this invariant.
Zero Argument
Zero Arguments
Zero argument
Zero argument, expected 1 argument
Zero arguments
Zero indicates that no records were updated for an UPDATE statement, no rows matched the WHERE clause in the query or that no query has yet been executed.
Zero indicates that no records where updated for an UPDATE/DELETE statement, no rows matched the WHERE clause in the query or that no query has yet been executed.
Zero is returned if no issues are found with the input string.
Zero means no error occurred.
ZipArchive::ER_EXISTS   File already exists.
ZipArchive::ER_INCONS   Zip archive inconsistent.
ZipArchive::ER_INVAL   Invalid argument.
ZipArchive::ER_MEMORY Malloc failure.
ZipArchive::ER_NOENT   No such file.
ZipArchive::ER_NOZIP   Not a zip archive.
ZipArchive::ER_OPEN Can't open file.
ZipArchive::ER_READ   Read error.
ZipArchive::ER_SEEK   Seek error.
__CLASS__ is the 'use'r class at runtime
__get(), then __set()
__toString()
`AsyncMysqlConnection::multiQuery()` is similar to `AsyncMysqlConnection::query()`, except that you can pass an array of `string` queries to run one after the other.
`AsyncMysqlConnectionPool` provides more flexibility with other available options, etc.
`Pair` is a fixed-size collection with exactly two elements (possibly of different types).
`Pair` keys are always 0 and 1, repsectively.
`Pair`s do not support taking elements by reference.
`Pair`s only support integer keys.
`Typing.expr` is called twice when typechecking an if condition, and this test verifies that we are not double-counting the number of expressions.
`await` or `join` this result to obtain the actual connection.
`fun` is a special function used to create a "pointer" to a function in a typeable way.
`getException()` is the same as `getResult() in this case.
`getResult()` is the same as `getException() in this case.
a built in comparison function 2.
a different type of comment
a float value with more precision points
a gereral class
a language construct
a list of lists
a multichar glue value
a nice binary search :)
a point in filled body
a redirected test never fails
a resource var
a resource variable
a simple example of passing by value and by reference
a simple request class that lets us handle http based tests
a string Call all 3 functions indirectly through table
a sub-array
a two-dimensional array 2.
a var which is defined try to unset the element which is non-existent
a variable that is referenced to an array 2.
a variable which is unset
a warning must be issued if we don't use a IV on a AES cipher, that usually requires an IV
a weak test without unicode etc.
absent property despite containsKey
absolute bad path
absolute bad path (note p8 msgs differ)
absolute paths
absolute test
abstract class
abstract class with public, private, protected members
acceses element with value 3000  /* checkout order of evaluation
acceses element with value 6
access each element's value
access each element's value anf its element number
access individual elements by string key
access non-existant element
access the array after reset
accesses public instance method
accessible, by default
accessing an array within an array
actual argument's value changed
add a comment here to say what the test is supposed to do
add a second text node to title
add body part
add extras from the template dir
add handlers
add hiphop license
add multipart stuff
add our local endpoint
add php license
add portion to test setting stub from resource
add same CURLOPT to the first handle
add some CURLOPT to the second handle
add the content with has csv fields
add the interval to the start date 'n' times
add the re unquoted.
add the test data to the file
add vars to packet
add zend license
adding a string to the input string which is being tokenised
additional argument passed to callback function
additional array to be passed for intersection
additional code coverage
additional configuration items that may be set to provide proxy support for testes: timeout proxy_host proxy_port proxy_user proxy_pass
address The email address is_group TRUE if the recipient is a newsgroup, FALSE otherwise.
adds a few simple methods to all containers that implement iterators, mainly implemented so we can consolidate all the logic dealing with iterators in one place.
affected rows related
after unserialize the property myObjC::attrD is null instead of expected object
again conversion
again normal value
aka TRUNCATE
all args specified
all have read only
all have rw only
all instance properties get serialized
all permisson to sub dir
all text before (parentheses) is put into first element, ( into second, "parentheses" into third and ) into fourth.
all the following are identical, we will convert to utf-8
all versions should at least dump this minimum information
allocate some solors
allow T2a::f to also be seen through alias h don't need qualifier prefix if f is unambiguous
allow connect
allow connect, fix pw
allow empty query_string requests
allow otherwise hidden T2B::f to be seen through alias g
allowed always
allowed to be empty
allowed, but serve no purpose
already in main distro
alternative display function for class bar
always include the config.h file
always strings, like STRINGIFY flag
am invalid mode shoudl result in same o/p as mode 'a'
an array containing integer references
an array containing unsorted hexadecimal values with keys
an array containing unsorted numeric values with indices
an array containing unsorted octal values
an array containing unsorted string values with indices
an array containng unsorted hexadecimal values with keys   There are multiple keys which are duplicate and the later should be picked
an array contains unsorted hexadecimal values
an array contains unsorted hexadecimal values   There are multiple keys which are duplicate and the later should be picked
an array contains unsorted octal values
an array for checking unexpected behavior
an array that contains a referenced array
an error occurred: affected rows should return -1
an ordinary if having 2 actions on TRUE and none on FALSE
analyze the PHP_AUTH_DIGEST variable
and also return them as return values
and default key array
and disconnect
and its stable
and now we try KILL
and now, the same with anonymous placeholders...
and the .lib goes into dev
and the above SSL setup should be always incorrect.
and those for pecl
and value NULL
anonymous callback function
anonymous callback function with argument and null statement
anonymous callback function with null argument
anonymous callback function with reference
anonymous class trait binding
another associative array
another default constructor is OK
any int will work since this::T won't be expression dependent
any other field will fail
any other non-transactional engine pdo_mysql_begin_transaction has more on this, quick check only
append link with data
append the data to the file, starting from current position of the file pointer
applying shuffle() function on the input array
applying shuffle() function on the input array of integers
applying shuffle() function on the input array of strings
arc demands certain permission on its config
are constructor promoted Assume the framework unit tests will be run in parallel until otherwise proven.
are must be decoded on input these are not reencoded on output.
args array  If inside a function, this lists the functions arguments.
args less than expected
args less than min.
args more than expected
args more than expected, expected 1 argument
args more than expected,expected 4
arguments less than expected numbers
arguments more than expected
arity error
around 1 leap year period in years
around 10 leap year periods (4000 years) in days
around 40000 years
array access will be implemented by the time we get to here
array argument
array as an HashTable*
array as return value
array containing all scalar types
array containing different strings with key values
array containing different types of array values for 'var' argument
array containing different types of objects as elements
array containing different types of variables
array containing elements with/without keys
array containing elements with/witout keys
array containing embedded arrays
array containing objects of MyClass
array containing reference variables
array containing sub arrays
array contains combination of capital/small letters
array contains null sub array
array contains sub arrays
array declaration
array for memoizing
array of 3 strings
array of SimpleClass objects having more than one members
array of SimpleClass objects having more than one properties
array of SimpleClass objects with only one member
array of SimpleClass objects with only one property
array of all file access modes
array of arguments
array of array types
array of array values
array of arrays
array of arrays along with some values
array of available hashings to test
array of boolean data
array of boolean type values
array of boolean types
array of boolean values
array of char formats
array of char values
array of chars
array of destination file names
array of different  values for 'num' argument
array of different types of array values for 'val' argument
array of different values for 'input' parameter
array of different values for 'start_key' argument
array of different values for 'val' argument
array of files checked to see if they are executable files using is_executable() function
array of files to be tested if they are readable by using is_readable() function
array of files to be tested to check if they are writable using is_writable() function
array of float type values
array of float values
array of floats
array of hexa formats
array of html strings
array of inputs for 'replace_pairs' argument
array of int type values
array of int values
array of integer objects
array of integer objects with different key values
array of integer values
array of integers
array of object values for 'val' argument
array of objects
array of octal formats
array of operatons
array of possible valid values for 'val' argument
array of private key sizes to test
array of resource types
array of resource values
array of scientific formats
array of string formats
array of string objects
array of string objects with different key values
array of string type values
array of string values
array of strings
array of strings used to test the function
array of unexpected values to iterate over
array of unsigned formats
array of values for 'from'
array of values for 'input' argument
array of values for 'to' argument
array of values to iterate over
array of values with indices to iterate over
array of wouldblocks
array of zero or more elements, 1 per instance property
array or HASH_OF(object)
array or object
array to be passed as arguments
array to be passed to optional argument
array types
array value
array values
array values contains minimum and maximum ranges
array will have the default key values (0-9) and each value is the corresponding key written in words.
array with NULL
array with binary data
array with binary values
array with bool key repeatition
array with bool values
array with bool values as keys
array with default keys
array with default keys - numeric values
array with default keys - string values
array with default keys and boolean values
array with default keys and numeric values
array with default keys and numrice values
array with default keys containing unsorted numeric values
array with default numeric index
array with diff sub arrays to be sorted
array with different values
array with different values as width
array with different values for break arg
array with double quoted strings
array with element as 0
array with float values
array with heredocs associative arrays
array with hexa values
array with hexa values as keys
array with int values
array with integer and float values
array with integer values
array with mixed keys
array with mixed values
array with negative float values
array with negative hexa values
array with negative int values
array with negative octal values
array with null entry
array with null key repeatition
array with null string
array with null values
array with numeric key repeatition
array with numeric keys
array with numeric value repeatition
array with object, unset variable and resource variable
array with octal values as keys
array with one element
array with positive float values
array with positive hexa values
array with positive int values
array with positive octal values
array with repetative keys
array with single and double quoted strings
array with single element
array with single quoted and double quoted strings
array with single quoted strings
array with special chars as keys
array with string key index
array with string key repeatition
array with string keys
array with string value repeatition
array with subarray
array without elements
array without elements 2.
array_args an array containing elements with reference variables
array_count_values() returns an array using the values of the input array as keys and their frequency in input as values.
array_filter preserves keys, so we do the same.
array_flip() returns an array in flip order, i.e. keys from trans become values and values from trans become keys.
array_intersect() returns an array containing all the values of container1 that are present in all the arguments.
array_intersect_key() returns an array containing all the entries of container1 which have keys that are present in all the arguments.
array_intersect_uassoc() returns an array containing all the values of array1 that are present in all the arguments.
array_intersect_ukey() returns an array containing all the values of array1 which have matching keys that are present in all the arguments.
array_key_exists() on an object, it should work on only public member variables
array_key_exists() returns TRUE if the given key is set in the array.
array_keys() returns the keys, numeric and string, from the input array.
array_map() returns an array containing all the elements of arr1 after applying the callback function to each one.
array_merge_recursive() merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one.
array_multisort is weird.
array_multisort() can be used to sort several arrays at once, or a multi-dimensional array by one or more dimensions.
array_pad() returns a copy of the input padded to size specified by pad_size with value pad_value.
array_pop() pops and returns the last value of the array, shortening the array by one element.
array_product() returns the product of values in an array.
array_push() treats array as a stack, and pushes the passed variables onto the end.
array_push() will raise a warning if the first argument is not a suitable container.
array_reduce() applies iteratively the function function to the elements of the array input, so as to reduce the array to a single value.
array_replace() is not recursive : it will replace values in the first array by whatever type is in the second array.
array_replace() replaces the values of the first array with the same values from all the following arrays.
array_replace_recursive() is recursive : it will recurse into arrays and apply the same process to the inner value.
array_replace_recursive() replaces the values of the first array with the same values from all the following arrays.
array_shift() shifts the first value of the array off and returns it, shortening the array by one element and moving everything down.
array_slice() returns the sequence of elements from the array array as specified by the offset and length parameters.
array_sum() returns the sum of values in an array.
array_uintersect()
array_uintersect_assoc()
array_uintersect_uassoc() - by method call
array_uintersect_uassoc() - with ordinary function
array_unique() sorts the values treated as string at first, then will keep the first key encountered for every value, and ignore all following keys.
array_unshift() prepends passed elements to the front of the array.
array_values() returns all the values from the input array and indexes numerically the array.
arrays containing byRefs
arrays to be passed as arguments
arrays to be passed to optional argument
arrays with default keys
arrays with explicit keys
arrays with float keys
arrays with float values
arrays with integer keys
arrays with integer values
arrays with string keys
arrays with string values
arrays with variation in elements
as a private/protected method
as a static method
as an example how to write crc32 tests PHP does not have uint values, you cannot display crc32 like a signed integer.
ascii mixed case, multiple needles
ascii strings
asio checks first unfinished child
assert() callbacks are particularly useful for building automated test suites because they allow you to easily capture the code passed to the assertion, along with information on where the assertion was made.
assert() will check the given assertion and take appropriate action if its result is FALSE.
assign a value to static var
assign class as scalar to var
assign this string to a variable
assigned the value TRUE when called
assignment of an array to another variable resets the internal  pointer of the array.
assoc indices
associative array
associative array containing unsorted string values
associative array with different keys
associative array with duplicate keys
associative array with duplicate keys 3.
associative array with key as integers
associative array with mixed keys and sub-array as element
associative array with numeric keys, which will be re-indexed
associative array with string keys, which will not be re-indexed
associative arrays
associative arrays - key as numeric
associative arrays - key as string
associative arrays to sort
associative arrays with different values
assuming running on a reasonable fast CPU time cannot change on the second sample
assuming the test is run in a plain-vanilla CLI environment
at least 64 patterns required to trigger the WuManberReplacement algorithm
at least 64 patterns required to trigger the WuManberReplacement algorithm One of the pattern needs to be longer than one byte
at least one connection
at least two connections
at pos 0, shift everything up
at the start it should be NULL
attempting to change data by reference
auto-detect
autocommit is on, no rollback possible
autocommit should be on by default
automatic downgrade to normal connections has failed
avoid infinite loop if test is failing
b - the argument is treated as an integer, and presented as a binary number.
bad hostname (connect should work, not bind)
bad pad_type - passing an undefined one
bad reference
bad_style-ish case inside a lambda
bail out on error
base url prefixed to any requests
based on example at http://www.php.net/manual/en/normalizer.normalize.php
based on zend/ext/filter/010.php
be sure the executables ini settings are compatible with the test, or skip
be sure we have the right endpoints for this test result
be sure you have enough memory and stack for PHP.
because php...
before and after any non number so that for example '4.3.2RC1' becomes '4.3.2.RC.1'.
being abstract, it need not implement any of the methods
bigger than int (32-bit)
binary array
binary data
binary input
binary inputs
binary keys
binary representation
binary strings
binary type variations
bindec() converts a binary number to an integer or, if needed for size reasons, float.
bindec() interprets all binary_string values as unsigned integers.
bits 7-8 bits (only single bytes encodings supported )
blah blah multiline method
blank heredoc string
blank line close the file if the mode to be used is read mode  and re-open using read mode
blank line close the file if the mode to be used is read mode  and re-open using read mode else rewind the file pointer to beginning of the file
blank line rewind the file pointer to bof
blank space as file name
blocked (bool) - TRUE if the stream is in blocking IO mode.
bogus result
bool operand
bool value array
bool values
bool(false)
boolean data
boolean false
boolean false as filename
boolean false as linkname
boolean value
boolean values
boolhandler interrno stringerrstr stringerrfile interrline arrayerrcontext    errno   The first parameter, errno, contains the level of the error raised, as an integer.
borrowed from test/slow/ext_stream/ext_stream.php
both should match
braces having no special meaning are used verbatim
brackets in sentence
break cycles
break ends "group" of case 20 statements
break ends "group" of default statements
break is not rejected here until runtime
break left intentionally
break out of the while loop ...
breakpoint is set here
breakpoint will get hit on this call
buf is passed by reference, so it must be specified as a variable in the argument list.
buffer is only relevant with native PS
buffered normal
buffered result set - let's hope we do not run into PHP memory limit...
bug - invokes X::secret() instead of ChildClass::secret()
bug happened during query processing
bug in mb_parse_str not following PHP's
build a predictable string
builtin class
builtin function
bump up ref count to make a MapVariant copy
busy wait, should time out.
busy wait: intended
but "future" changes are seen
but a public destructor is allowed
but changing with an actual calendar should
but not this one
but now I want to see some error...
but they are held in a transaction by the server.
but this will fine, ofcourse
by default PS is unbuffered - no change
by default, the pointer is on the first element
by foreign name
by legolas558
by using replace_pairs array
c - the argument is treated as an integer, and presented as the character with that ASCII value.
cURL handler
caching cannot be well applied to an object's dynamic properties, since they can be added and removed at any time between calls to property methods.
cal_from_jd() converts the Julian day given in jd into a date of the specified calendar.
cal_info() returns information on the specified calendar.
cal_to_jd() calculates the Julian day count for a date in the specified calendar.
calculate the hash and dump it
calculate the hash and dump it reading 1000 bytes within the file max size
calculate the hash and dump it, if data read, expecting here no data was read
calculate totals for this table
calculate two-stage tables
calendar has priority
call EndIteration on last call
call T2a::f
call T2a::f via its alias h confirmed that lookup starts with current class, then trait(s), then base classes
call T2b::f via its alias g
call a function
call a function that might generate disk-related exception
call f1, default return value is NULL
call fgetcsv() to parse csv fields
call fgetcsv() to parse csv fields now file pointer should point to end of the file, try reading again
call fgetcsv() to parse csv fields read the line which is a blank line to see the working of fgetcsv
call fgetcsv() to parse csv fields read the line which is without csv fields, provide delimiter and see the working of fgetcsv
call fgetcsv() to parse csv fields read the next line which is a blank line to see the working of fgetcsv
call fgetcsv() to parse csv fields use different delimiter and enclosure than existing in file
call fgetcsv() to parse csv fields use different delimiter but same enclosure char
call fgetcsv() to parse csv fields use different delimiter than existing in file
call fgetcsv() to parse csv fields use length as 0
call fgetcsv() to parse csv fields use length as less than the actual size of the line
call fgetcsv() to parse csv fields use only default arguments
call fgetcsv() to parse csv fields use the right delimiter and enclosure with max length
call fgetcsv() to parse csv fields use the right delimiter and enclosure with negative length
call imap_close with CL_EXPUNGE explicitly set in case mailbox not empty
call setlocale()
call the functiont
call top, should fail with corrupted heap
call undefined function
call_user_func
call_user_func_array
callback function
callback function always_false
callback function always_true
callback function returning always false
callback function returning always true
callback function with parameter and with return value
callback function with parameter and without return value
callback function without parameter and without return value
callback function without parameters and with return value
callback functions
callback functions are expected to return bool value for array_filter() here testing callback functions for return values other than bool
callback functions int as return value
calling __construct() twice
calling a private function
calling array_fill with negative values for 'num' parameter
calling array_map with different arrays
calling array_map() with null callback
calling array_rand() function with multi-dimensional array
calling array_reverse() with various types of 2-d arrays with default arguments
calling check_printr() to display boolean variables using print_r()
calling check_printr() to display combinations of scalar and  non-scalar variables using print_r()
calling check_printr() to display contents of float variables using print_r()
calling check_printr() to display contents of integer variables using print_r()
calling check_printr() to display contents of strings using print_r()
calling check_printr() to display contents of the objects using print_r()
calling check_printr() to display miscelleneous data using print_r()
calling check_printr() to display the resource content type using print_r()
calling check_vardump() to display boolean variables using var_dump()
calling check_vardump() to display combinations of scalar and non-scalar variables using var_dump()
calling check_vardump() to display contents of an array using var_dump()
calling check_vardump() to display contents of float variables  using var_dump()
calling check_vardump() to display contents of integer variables  using var_dump()
calling check_vardump() to display contents of strings  using var_dump()
calling check_vardump() to display contents of the objects using var_dump()
calling check_vardump() to display miscelleneous data using var_dump()
calling check_vardump() to display the resource content type using var_dump()
calling function dump_globalvar() to check the reference count of local and global variables inside the function
calling reset between executions
calling shuffle() function with multi-dimensional array
calling strcspn() with default arguments
calling strspn() with default arguments
calling the array_fill with all possible valid values for 'val' argument
calling with no parameters
calls /our/ private function
calls Vector::offsetGet(1), retrieving "up"
calls Vector::offsetSet(11, "xxx")
calls __toString
calls back on every new edge in the scan.
calls back on every new node in the scan.
calls f like a static function with class name being the trait name
calls public constructor
calls the PHP 4 style constructor
calls the method filter, which is also the PHP4 style ctor
calls the method mapper, which is also the PHP4 style ctor
calls the private function
calls within that file should stay strict, despite being included by weak file
calls within that file should stay weak, despite being included by strict file
calls within that file should stay weak, despite being included by strict fille
can call cf1 now, as it's been defined
can call ucf1 after its definition is seen Conditionally defined functions
can call ucf1 before its definition is seen
can have arbitrary white space separators
can jump in to a block
can jump out of a block
can only create a hardlink if the file exists.
can only read uncompressed data
can't use ob_gzhandler with zlib.output_compression
candidate safe idiom for determining whether data is serialized
cannot be redeclared
cannot modify cursor after beginning iteration Code: 0  You are calling a method that sets up the query after executing the query.
canonicalized version
capture up to 100 errors
capture, because of inner capture
capturing the return value from fscanf() called without third argument
case from issue
cases which should not yield any output.
cause warning
causes crash
certain all-uppercase Latin sequences can be spoof of Greek
cf2 now exists
chain: Parent record to merge with ipv6 data.
change a CURLOPT in the second handle
change all file's permissions to 777 before deleting
change class name, so a unserialize failure occurs
change dir permission to allow all operation
change internal encoding to UTF-8
change into the PHP source directory.
change mode of file
change the CURLOPT_URL for the second handle
change the dir permisson to test dir on it
change the password for the second DB user and kill the persistent connection
change the value (and type) of an existing element
change this next line to true to use good-old hand-assembled go-pear-bundle from the snapshot template
change to 4.0
changes the global
changing mode of file
changing mode of mkdir to prevent creating sub-directory under it
changing output method to html
changing permissions for each temporary directory to delete them
changing the calendar with a cal type should not change tz
changing the class in the string to simulate deserialization into a PHP with a different implementation of C1
char type variations
charsetnr The character set number for the field.
charsets cannot take any other value but utf8 in unicode mode
check SimpleFunctionCall::outputCPPParamOrderControlled
check a dynamic string
check a static string
check a variety of acceptable default values and type hints: pass
check an xhp element
check array
check behavior
check case insensitive
check color of a point on edge..
check connection
check default values and type hints, implementating abstract methods: pass
check extension exists
check fclose()
check file permission
check fopen()
check for a few core functions
check for duplicate method names
check for error while unserializing.
check for even integer values by inspecting the low-order bit
check for extensions that need special handling and regenerate
check high bit of first character always set
check if a commonly used locale is installed in the system
check if array is still ok
check if changing the fetch mode from unbuffered to buffered will cause any harm to a statement created prior to the change
check if data read is of expected size
check if end of file pointer is set
check if end of file pointer is set close the file
check if eof reached
check if file pointer at eof()
check if link is soft link
check if the link exist
check if the link exists
check if there were any failure of setlocale() function earlier, if any  failure then dump the list of failing locales
check if we can convert that thing
check internal encoding is now set to UTF-8
check is_callable() on static method
check key and value after the loop.
check lexer
check login
check numeric strings
check numerics
check on unset variables
check order of evaluation of arguments in a function call w.r.t side effects
check result
check retrieved data
check return
check runtime operators on just ints
check that CL_EXPUNGE worked
check that alias can't be set manually
check that default alias can be overwritten
check that file pointer points at eof, expected: 1024
check that imap_close was successful, if not call imap_close and explicitly set CL_EXPUNGE
check that new locale setting is effective use localeconv() to get the details of currently set locale
check that user-defined alias can be overwritten
check the current file size
check the file pointer position
check the file pointer position and eof
check the file pointer position and if eof
check the file size, should be 0 delete all files created
check the filesize and display file content
check the first size
check the isset and unset on non existing key
check the new type
check the new type after conversion
check the working of join() when given binary input given
check this and ensure that each returns  the first element after the assignment
check this works and actually returns the boolean value
check upload status
check using isset and empty
check using isset and empty to confirm
check using isset for the element that was unset
check using isset to see if unset, expected: bool(false)
check using isset() and empty()
check values of URL related constants
check when second arg is given other than boolean TRUE
checked (AKmap)
checked lvar
checking behavior of quote
checking currency settings in the new locale to see if the setlocale() was effective
checking file pointer position initially
checking for (int) type resource
checking for Resources
checking for binary safe
checking for element in a sub-array
checking for end() on sub-arrays
checking for objects in array_search()
checking for objects in in_array()
checking for sub-arrays with array_search()
checking for sub-arrays with in_array()
checking for type FALSE in multidimensional array with loose checking, result:false in loose type check
checking for unexpected number of arguments
checking for unexpected type of arguments
checking if given file is soft link
checking if the var is empty, expected: bool(false) on most except "", 0, "0", NULL, FALSE
checking information of link with linkinfo()
checking inodes
checking lstat() and stat() on links
checking normal operation of addcslashes
checking null array
checking on objects
checking on objects type
checking possible variations
checking print_r() on functions
checking stat() on directory
checking stat() on file
checking stat() on file after changing its permission
checking statistics of old and renamed file - both should be same except ctime
checking sub-arrays
checking that an integer can always be used where a float is expected
checking that generics are dissalowed for static values
checking that size of symlink remains same
checking umask() on all the modes
checking var_dump() on functions
checking with isset before unsetting, expected: bool(true)
checking working of end() when array elements are deleted
child class which inherits parent class test1
child class which inherits parent class test2
child class which inherits parent class test3
child class which inherits parent class test4
child class which inherits parent test2
child private property
child protected property
child public property
child public static property
chmod 0777 to enable deletion
chmod file to 0777 to enable deletion
chmod to enable deletion of directory
chmod to enable removing test1 directory
chooses first match with equal value, 30 matches 30.0 before 30
chooses the CLI version of php.
chunk size of 2
circular reference
class  dns_get_record() only returns Internet class records and as such this parameter will always return IN.
class 1 calls parent constructor
class 2 has an own constructor
class 3 has no constructor
class declaration
class declaration for integer objects
class declaration for string objects
class definition
class definition for object data
class definition for object variable
class deriving above abstract class
class deriving the above abstract class
class for object variable
class keyword
class not derived from PDOStatement
class string  The current class name.
class with __get and __set
class with __get but not __set
class with __set but not __get
class with final method
class with member as object of other class
class with no member
class with no members
class with only member functions
class with only members and with out member functions
class with private member, static member, constant and constructor to initialize the private member
class with protected member, static member, constant and consturctor to initialize the protected member
class with public member, static member , constant and consturctor to initialize the public member
class with public, private, protected members, static, constant members and constructor to initialize all the members
class with static members
class without __get or __set
class without a member
class without member
class without members
classname for classes, interfaces, enums, or traits
clean TZ so that it doesn't bypass the ini option
clean pattern represents: OK (364 tests, 590 assertions) error pattern represents: Tests: 364, Assertions: 585, Errors: 5.
clean the temp dir and file
cleanhtml.php  A simple script to clean and repair HTML,XHTML,PHP,ASP,etc.
cleanhtml5.php  A simple script to clean and repair HTML,XHTML,PHP,ASP,etc.
cleaning resource handles
cleans and reads first element
clear bit at index 0
clear error stack
clear previous size value in cache
clear statement cache
clear statement cache checking stat() on directory
clear the 6th bit
clear the cache
clear the error stack
clear the stat
clearstatcache do nothing, but there should no warnnings
client has started fetching rows
clone non-owned object
close and delete the file
close connection
close directory
close resource
close resources
close resourses used
close statement
close the FTP stream
close the dir remove directory and try to open the same(non-existent) directory again
close the directory handle twice using closedir() to test behaviour
close the file
close the file before unlinking
close the file handle
close the file if the mode to be used is read mode  and re-open using read mode else rewind the file pointer to beginning of the file
close the file resouce used
close the file resource used
close the file, get the size and content of the file.
close the files
close the handle so can remove dir in CLEAN section
close the handles
close the resource
close the resource used
close the resources
close the resources used
closed handle
closing resource
closing resource handle
closing resource handle used
closing resource handles
closing resources used
closing the file
closing the file "dummy.txt"
closing the file "dummy1.txt"
closing the file handle
closing the handle
closing the resource
closing the resource handles
closing the resources
closure binding to anonymous class
closure in use param
code blocks
code hasn't been analyzed ...
code to autoload based on directory
combination of associative and non-associative array
combination of numeric and associative arrays
combinition of associative and non-associative array
comment between declarations
comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comm
comment separates tokens like whitespace
comment this out and it works in PHP 5 too..
common field set, unifies
common file used
compact variations - arrays with references
compare all stat fields except access time
compare and leave on success
compare header results
compare self stats
compare the results with what we sent
compare the self stat
compare the stat
compare the stats
compare the two stats
compare the two stats - all except ctime
comparing stats after the deletion of subdir and file
comparison function
comparison function for SimpleClass2 objects which has more than one member
comparison function for SimpleClass2 objects which has more than one members
compile time constants
compile time static lookups
compressed file length does not match incompressed lentgh for an uncompressed file
compressed size
concatenated strings
conditional derive from redec gen
config file or args overwrite env var config settings
configure DOCUMENT_ROOT for web tests this assumes that directories from the base url matches directory depth from the base path
configure test paths from config file or command line
confirm file deleted
confirm file deleted delete deleted file
confirm file doesnt exist
confirm file is deleted
confirm file is deleted now close file handle
confirm file is deleted remove temp dir
confirm file is deleted remove the dir
confirm file pointer is not at eof close the file
confirm link is deleted
confirm link is deleted delete temp file
confirm the closure, using ftell() and feof(), expect, false
confirm the file pointer position
conformance to Unicode 5.2, section 3.9, D92
connect and table inc connect to mysql and create tables
connection function tests
considering case
consistent overflow-behavior - THIS CONTRADICTS ZEND's BEHAVIOR
consistent with reference, but perhaps not particularly useful
const * const
const - const
const - reg
const comment
constants irrelevent for conversion purposes
construct a job definition for each test and add it to the master plan
constructor params
constructors
contain hexadecimal digits 2.
contain hexadecimal digits but do not correspond to 'correct' ints
contains japanese characters, ASCII digits and different, UTF-8 encoded digits
contentLengthB0
contentLengthB1
continue to check if next commonly locale is installed in the system
convert it to new type
convert it to null
convert to int for the test output...
convert_uudecode() decodes a uuencoded string.
convert_uuencode() encodes a string using the uuencode algorithm.
converting stream type to int
copy of input array for next iteration
copy that dir into extras
copy the extensions
copy the handle
copy the sapi
copy to extras
copy to top level
copying the file
correct offset
correct php53 behaviour is to ignore the FILE_USE_INCLUDE_PATH unless the file already exists  in the include path.
correct php53 behaviour is to ingnore the FILE_USE_INCLUDE_PATH unless the file alread exists  in the include path.
correct way of doing above:
correspond to 'correct' integers
correspond to character codes recognised as hexadecimal digits (see variation2) referred to as 'correct' integers below
corrupt heap
cos() returns the cosine of the arg parameter.
could be a brand new node
could be a fast-terminating __Native loop
could be that MySQL/libmysql 5.6.9 had the flag already but it was no stable release
couldn't determine master  No server in a replica set connection was identified as the primary.
couldn't find a response  Code: 9  If the response was cached and now cannot be located.
couldn't find reply, please try again  Code: 11  The driver saves any database responses it cannot immediately match with a request.
couldn't get response header  Code: 4  A common error if the database or network goes down.
count() does not detect infinite recursion.
counts the number of replacements made (5)
cp1252 Windows-1252, 1252 Windows specific charset for Western European.
cp866 ibm866, 866 DOS-specific Cyrillic charset.
cpu The amount of time the process is allowed to use the CPU.
create 1 file with some contents
create a basic stream class
create a blank image
create a child object implementing array access
create a copy of the array
create a dir
create a file
create a file in dir1
create a file in the middle directory
create a file in the script directory
create a file in working directory
create a file stream resource
create a file with 512 bytes size
create a link
create a new cURL resource
create a new iterator of the required type.
create a new mailbox and add two new messages to it
create a new temporary file
create a object of each class defined above
create a prepared statement
create a proxy object implementing array access
create a recursive array
create a reference to a modifiable lvalue
create a temp file
create an arc and fill it with white color
create an arc with white color
create an empty file
create an empty file and write the strings with tags
create an object
create copies and destroy later
create directories
create directories and files
create directory
create directory and files
create directory to be passed as string value where possible
create dom document
create file
create file file
create file of size 12000 bytes
create file with following type of contents
create file, read the file content, delete file
create files
create files within the temporary directory
create global parser and printers
create hard link
create hard link to file
create if it doesn't exist
create image
create in cwd
create link delete the link
create mailbox to test whether options has been set to CL_EXPUNGE
create new class from original scalar assignment
create new phar by mkdir
create new table and select from it
create only the file, as base and subdir is already created
create soft link
create soft link and record stat
create soft link to file
create soft/hard link to  the file  and check linkinfo() and is_link() on the link created
create sub_dir
create sub_sub_dir
create temp dir
create temp directory
create temp file
create temp file and directory
create temp file and insert data into it
create temp file, link
create temp file, link and directory
create temporary array in case rsort() works
create temporary directories - will remove in CLEAN section
create temporary directory for test, removed in CLEAN section
create temporary file
create test table
create the dots pattern
create the file
create the file and add the content with has csv fields
create the file and test read
create the file to test write
create the include directory structure
create the link
create the multiple cURL handle
create the soft links to the file
create the src dir
create the temp dir
create the temp file
create the temporary directories
create the temporary directory
create tmp table
create/set the dynamic property "color"
created by fopen()
created by touch()
creates a copy
creates a new object of the same type.
creating 4 bytes of hole
creating a context
creating a file
creating a file resource
creating a new node (descendant) and getting it as the refnode
creating an array of strings to be compared
creating an array with resource types as elements
creating an array with resources as elements
creating and deleting subdir and files in the dir
creating anonymous function dynamically
creating dir
creating directories and files
creating directories, symbolic links and files
creating directory
creating dumping file
creating file
creating file in write mode
creating file resource
creating hard link
creating hard link to non_existent file
creating hard links
creating hardlink
creating link to a file in different dir with the same name as the file
creating new file
creating new object
creating new object create a file
creating new object error: as wrong datatype for second argument
creating object with members as filename
creating object with members as linkname
creating object with members as numeric and non-numeric filename and directory name
creating parse.ini file
creating soft link
creating sub-directory test1 under mkdir, expected: false
creating symlink
creating temp dir
creating temp directory and file
creating temp directory which will contain temp file and links created
creating temp file
creating the file
creating the file except for x mode
creating the files
creating the files in existing dir
creating the links
creating the sym link
crypt() will return a hashed string using the standard Unix DES-based algorithm or alternative algorithms that may be available on the system.
cstime - system time used by current process and children.
curl handler
current directory
current directory, exp: bool(true)
current element
current file pointer position
current file pointer position after rewind operation
current filesize
current location
current state
currently, we only have maps to single-byte encodings
cursor not found  Code: 2  The driver was trying to fetch more results from the database, but the database did not have a record of the query.
custom implementation
cut as false
cut as true
cutime - user time used by current process and children.
d - the argument is treated as an integer, and presented as a (signed) decimal number.
data The maximum size of the data segment for the process, in bytes.
data consistency
data may be in any pecl/yaml suitable type
data represented in base64 (ascii)
database DNS
date('Y') .
date_default_timezone_set() sets the default timezone used by all date/time functions.
date_sunrise() returns the sunrise time for a given day (specified as a timestamp) and location.
date_sunset() returns the sunset time for a given day (specified as a timestamp) and location.
daylight saving time is in effect
daylight saving time is not in effect
debug output
debugging detail in output.
decimal numeric string
decimal values as permission
declarationn of the interface 'iTemplate'
declare a class
declaring a class
declaring class
declaring field as optional is possible only in type annotation
declaring global variable
decreasing values
decrements twice before incrementing
default action is to make a shallow copy
default args
default arguments
default base
default break and cut value
default calendar is gregorian
default compile time lookup
default constructor
default fetch mode is BOTH, so we see if the ctor can overwrite that
default internal encoding
default invocation
default key
default length
default pad_type
default setting
default to value
default when we don't know how to detect
define a class
define a default un-caught exception handler
define a level-1 namespace
define a level-2 namespace that happens to have a level-1 prefix
define a level-2 namespace who's prefix is not an existing level-1 ns
define a number of classes that should use the same amount of memory as X, so that X will be allocated at a different address on each request
define a simple generator that returns a series of consecutive values
define fL2 inside fL1
define fL3 inside fL2
define it as an enum in this request
define some class with method
define some classes
define the array of mask strings
define the files to go into these directories, create one in dir2
define these once
define two c-constants
define two d-constants
definig array of start values
defining 'from' argument
defining 'str' argument
defining 'to' argument
defining a class
defining a common function
defining a couple of sample classes
defining a resource
defining an array of len values
defining an array of strings
defining an array of various char formats
defining array of char formats
defining array of different heredoc strings
defining array of different hexa formats
defining array of different len values
defining array of different mask strings
defining array of different start values
defining array of float formats
defining array of int formats
defining array of len values
defining array of mask strings
defining array of non-scientific formats
defining array of octal formats
defining array of scientific formats
defining array of start values
defining array of string formats
defining array of unsigned formats
defining array with keys as heredoc strings
defining array with values as heredoc strings
defining arrays for input strings and tokens
defining class
defining class for object variable
defining different heredoc strings
defining the array for start values
defining varous strings with embedded nulls
definite quantifiers 2.
definitely a prime gmp_random -- not implemented gmp_scan0 "0" bit is found at position 3.
definitely not a prime
definition of input args
definition of required variables
definitions of required input variables
definitions of required variables
deflate string
delete all files created
delete an index that does not exist - trigger error
delete as much output buffers as possible
delete file
delete file with name
delete file with name fwrite_variation1.tmp
delete file with name fwrite_variation2.tmp
delete file with name fwrite_variation3.tmp
delete file with name fwrite_variation4.tmp
delete files
delete files created
delete files with different file permission(0000 to 0777)
delete link
delete temp dir
delete temp dir created
delete temp file
delete temp file created here
delete temp files
delete temporary files
delete the file
delete the file created
delete the link
delete the link clear the cache
delete the link created
delete the links
delete the links created
delete the temp file
delete the temporary file
deletes "dummy.txt"
deletes "dummy1.txt"
deleting file
deleting temporary directory
deleting the link
deleting the links
delimiter :
demonstrate that none of these are added
depends on the build - experimental
derive from redec gen
derived.php
despite the indenting that suggests the true path has 2 statements, in the absence of braces, the true path is the first statement only.
destroy the object by a new assignment (segfault)
destroy the variable using unset
determine max program depth starting at statement array
determine test type
different OS order files differently so will store file names into an array so can use sorted in expected output
different arrays
different arrays as input
different arrays used to test he function
different arrays used to test the function
different data types to be iterated over
different file modes
different from substr_count mb_strrchr behaves differently in different versions of libmbfl (https://github.com/facebook/hiphop-php/issues/68)
different heredoc strings
different heredoc strings empty heredoc string
different heredoc strings for 'ending'
different heredoc strings for 'str'
different heredoc strings single line heredoc string
different input string variation
different integer vlaues
different invalid format strings
different magnitude's
different offsets
different offsets, including negative and beyond size
different pad_lengths
different scalar and nonscalar values in place of callback function
different scalar variables which are unset
different scalar/non scalar values for 'input' argument
different scalar/non-scalar values for array input
different scalar/nonscalar values for 'source'
different scalar/nonscalar values to be used in place of an 'input' argument
different scalar/nonscalar values to be used in place of callback function
different servers may do different things on non-200 results for instance, IIS will deliver it's own error pages, so we cannot expect to match up the EXPECT section.
different single quoted string for 'str'
different strings containing regular chars and special chars
different subarrays
different types of 'input' array
different types of arrays
different valid  arrays
different valid  boolean vlaues
different valid  float values
different valid  float vlaues
different valid  integer values
different valid  integer vlaues
different valid  null vlaues
different valid  scalar vlaues
different valid  string
different valid data
different valid float vlaues
different valid numeric  vlaues
different valid strings
different values for 'chunklen'
different values for 'cmp_function'
different values for 'ending'
different values for 'ending' argument
different values for 'input' argument
different values for 'split_length'
different values for 'str'
different values for 'str' argument
different values for chunklen
different values for directory permissions
different variables which are used as elements of 'array_arg'
different variations of associative array
dir This element contains the absolute path to the home directory of the user.
dir resource handle deleted
dir without write permissions
directory as member
directory dir_variation91 with one sub-directory sub_dir11 and sub-sub-directory sub_dir111
directory dir_variation92 with one sub-directory sub_dir21
directory name stored in an object
directory type resource
disallow clone
disallow cloning
disallow cloning once forever
disjoint field sets, does not unify
display emacs/msvc error output
display the file content, check the file size
do as much as we can do in 5 seconds
do like operation in native php.
do not require all sub iterators to be valid in iteration
do not run linter if there are no changes
do not touch these files
do nothing for now.
do nothing, since all variables are defined as constants already
do nothing.
do some folding here, for blocks
do something silly to force existence of bar() frame
doTests go all out.
doc comment
doc_comment compiler global now contains this Foo comment
documents if no file is provided, it reads from standard input.
does not contain any implementation that is potentially mutable.
does not exist
doesn't exist
doesn't exist bcause of DST
doesn't fatal or warn
doesn't fatal, raises strict standards warning
doesn't matter
doesn't work with InnoDB, which is default in 5.5
doesn't wotk anyway
don't allow tests to retrieve files from anywhere but this subdirectory
don't ask, and don't send results to QA if true
don't bail - column type might not be supported by the server, ignore this
don't bail - it might be that the server does not support the data type
don't bail, engine might not support the datatype
don't call parent
don't care about date() strict TZ warnings...
don't error, just silently stop
don't free anything
don't print the message since it can be different
don't print things here, since this tests what accumulates in the output buffer.
double quoted key
double quoted string
double quoted string value
double quoted strings
double_encode false
double_encode true
download the packages into the destination
draw a couple of vertical dashed lines
draw a red polygon
draw the eclipse
draw the polygon
drive letters
driver:decl_type The SQL type used to represent the column value in the database.
drop test table
drop tmp table
dst_image is the destination image, src_image is the source image identifier.
dtor prints here
dummy sope is Closure
dummy sope is Closure should have the same effect
dump and see if its destroyed, expcted: NULL
dump it remove the execute permisson from parent dir, allowing all permission for sub dir
dump the arguments to check that they are passed with proper type
dump the array after element was unset
dump the array to see its unset
dump the array to see that its intact
dump the array to see that that array did not get modified because of using isset, empty and unset on its element
dump the converted data
dump the current locale
dump the handle  try read directory, expected : false
dump the input array to ensure that it wasn't changed
dump the input values to see if they are  passed with correct type
dump the name of the new locale set by setlocale()
dump the objec to check that all variables are unset
dump the object check the object and member that is not set
dump the object to see the effect, none expected
dump the point to see that variable was unset
dump the resource first
dump the resulting array
dump the sorted array
dump the stat returned value
dump the var
dumpit5.php  a command-line script which dumps the given HTML, PHP, ASP, XHTML, etc.
duplicate key
duplicate key (0), duplicate value (b)
duplicate key names
duplicate values
duplicate values 3.
dynamic calls to eval are a fatal
e.g. "hostname:port" or a path to a local socket e.g. ":/path/to/socket" for the localhost.
e.g. Add/delete elements, unset elements, etc.
e.g. PHPUnit 3.7.28 by Sebastian Bergmann.
e.g., Use this after importing Zend tests and you run into an exception during the differential process like:  EXCEPTION: (ConduitClientException) ERR-CONDUIT-CORE: Attempting to construct a query containing characters outside of the Unicode Basic Multilingual Plane.
each of these should "just work" but stresses NewPackedArray logic.
eat up all results
echo "*** Trying Strlen With Float" .
echo "Inside " .
echo "Testing int with default null constant" .
echo "Testing int with null null constant" .
echo "len before rtrim: " .
echo 'Top with line-break: ' .
echo 'Top without line-break: ' .
echo the fields which are common to all platforms
echoMeStringRequest with endpoint NOT header destination, doesn't have to understand
echoMeStringRequest with endpoint NOT header destination, must understand
echoMeStringRequest with endpoint as header destination, must understand
echoMeStringRequest with endpoint header destination, must understand, invalid namespace, should receive a fault
echoMeStructRequest with endpoint NOT header destination, doesn't have to understand
echoMeStructRequest with endpoint NOT header destination, must understand
echoMeStructRequest with endpoint as header destination, must understand
echoMeUnknown with endpoint NOT header destination, doesn't have to understand
echoMeUnknown with endpoint NOT header destination, must understand
echoMeUnknown with endpoint as header destination, must understand
either there is no result (no SELECT) or there is an error
element: UTF-8 string
element: boolean
emit an undefined warning
empty array
empty array test
empty class
empty count
empty filename
empty function without return value
empty heardoc string
empty heredoc string
empty iteration
empty linkname
empty namesapce
empty namespace
empty pathname
empty paths
empty string
empty string as filename
empty string as linkname
empty string prefix
empty to check if empty, expecting bool(true)
emulated...
enable below to get the output in verbose mode.
end HTTPRequest
end creating stream open an SplFileObject using the above test stream
end delete containing large stmt
end expr delete
end multi-stmt delete
end of File content type loop
end of file_content_types loop
end of file_mode loop
end of file_modes loop
end of for - mode_counter
end of for close the file
end of for loop
end of foreach
end of inner for loop
end of inner for loop delete the file created
end of inner for loop delete the file created : fwrite_basic.tmp
end of inner foreach loop
end of innerloop for delete the file
end of mode loop
end of offset loop close the file and check the size
end of offset loop close the file and check the size, the size will have increased by 10 bytes because of holes
end of outer for loop
end of outer foreach loop
end of outerloop for
end of whence loop close the file and check the size
end single line delete
end up at BOF so that randomly generated seek offsets below will know where they are supposed to be
end() advances array's internal pointer to the last element, and returns its value.
endless-loop protection
endpoints to skip
enforce implicit cleaning of the wire and skipping the last row
enforce seperation
enforced immediately with TUnrelated parent
enforced onto C1
enforced onto C1 with A as parent
enough to fool hphpc into leaving the IssetS,EmptyS opcodes
ensure file pointer at end
ensure in ext/standard/tests/file
ensure legacy token name is returned
ensure none of the dir tar files were freed
ensure nothing blows up when attempting to format objects of the wrong type
ensure stub is not overwritten
ensure that  feof() points to eof, expected: true ensure that file content/size didn't change.
ensure that dir doesn't exists
ensure that dir was renamed
ensure that file got renamed to new name
ensure that file pointer is at eof
ensure that file pointer is at eof close the file
ensure that file pointer is at eof now file is at the end try reading with length and allowable tags,expecting false
ensure that file pointer is not at end
ensure that file pointer position is not changed
ensure that internal pointer is moved to last element
ensure that link doesn't exists
ensure that link got renamed
ensure that link was renamed
ensure that rename worked fine
ensure the file pointer position
ensure thta file pointer is at eof
ensure thta file pointer is at eof close file
ensuring that it is only for E_STRICT
enter hook throws the fatal
entire 2-d array
enusre if eof set
enusre if eof set close file
eof (bool) - TRUE if the stream has reached end-of-file.
equivalent to above, just has explicit operand
errcontext   The fifth parameter is optional, errcontext, which is an array that points to the active symbol table at the point the error occurred.
errfile   The third parameter is optional, errfile, which contains the filename that the error was raised in, as a string.
errline The fourth parameter is optional, errline, which contains the line number the error was raised at, as an integer.
error - one of the branches result in a map-like array
error condition, first argument as object
error getting database response: errstr  WSA error getting database response: errstr  "errstr" is an io error reported directly from the C socket subsystem.
error getting socket  Code: 10  The socket was closed or encountered an error.
error messages
error out of scope
error style for editors or IDE's
error, Existing exists
error, Something already exists
error, args is array
error: as wrong datatype for second argument
error: int incompatible with string
error: making a new type name doesn't make it available outside of type expressions (parameter lists, etc).
error: unexpected type
error_get_last() didn't available in handler
errstr The second parameter, errstr, contains the error message, as a string.
escape character
escape characters
escape sequence chars with key values
escape sequences
escapeshellarg() adds single quotes around a string and quotes/escapes any existing single quotes allowing you to pass a string directly to a shell function and having it be treated as a single safe argument.
escapeshellcmd() escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands.
establish a new un-caught exception handler
euro currency symbol in ISO-8859-1
eval fails if no newline
even though we allow unset on *array* indexes, we shouldn't allow it on shapes
every character (including whitespace) is put into an array element
example from HTML5, section 2.4
exceeds 32 bits
exception message
exception must be throwed from error handler.
exclude system traits
excluding some files
exclusive/with comments first child element of doc element is context.
exclusive/without comments first child element of doc element is context.
exclusive/without comments using xpath query.
exec() executes the given command.
executable that will be tested.
execute query
execute stmt
execute the handles
execute() has not been called yet NOTE: no warning
execution is suspended here, so the following never gets run:
exif_imagetype() reads the first bytes of an image and checks its signature.
exif_thumbnail() reads the embedded thumbnail of a TIFF or JPEG image.
existing add server.
existing phar.zip, alias set
existing phar.zip, no alias set
exp: bool(false)
expect cc and dd to be 10 and 30
expect false
expect h to be defined and be 10
expect the inner array to be defined
expect true
expect true New stat values taken after creation of file
expect true compare the two stat values, initial stat and stat recorded after  creating file, also dump the value of stats
expect true compare the two stat values, initial stat and stat recorded after  creating files and link, also dump the value of stats
expect y and z to be undefined
expected 19 chars
expected : 0
expected : 1 char
expected : false
expected : no character should be read
expected : no chars should be read
expected : true
expected array is 10,10
expected false
expected of 2
expected to be TRUE, actually FALSE
expected true
expected: 0
expected: 100 trying to write more than the available data, available 1024 bytes but trying 2048
expected: 1124 fwrite() without length parameter
expected: 22 chars
expected: 400
expected: 50
expected: Missing argument Warning
expected: OK
expected: Warning is suppressed
expected: bool(false)
expected: bool(false) call isset() with two args, both set
expected: bool(false) calling empty, expected bool(true)
expected: bool(false) calling isset with more args
expected: bool(false) empty() to see if the array is empty
expected: bool(false) unset the object and check
expected: bool(false) uset the temp_var
expected: bool(true)
expected: bool(true) call isset() with two args, but one set
expected: bool(true) dump the resource to see using isset() and empty () had no effect on it
expected: bool(true) dump to see that object is unset
expected: bool(true) set the member variable lable and check
expected: bool(true) unset all members and check
expected: bool(ture)
expected: default key 0, value will be replaced by 'bool_key4'   numeric keys
expected: false
expected: false  move the file pointer to end of the file and try fwrite()
expected: false as file handle is still open now close file handle
expected: false as unlink() does not work on dir
expected: false close the file, get the size and content of the file.
expected: false move the file pointer to end of the file and try fwrite()
expected: false reassign write permission to temp file
expected: false remove temp dir
expected: int(0)
expected: true
expected: true check the filesize and content close the file, get the size and content of the file.
expected: true delete hard link
expected: true on linux
expected: true unlink soft link
expected: value will be replaced by 'bool_key3'
expected: value will be replaced by 'null_key2'
expecting "changed"
expecting 10,3
expecting 1024
expecting : bool(false)
expecting : bool(true)
expecting bool(false), except: array(), which is considered empty
expecting false
expecting false rename a existing dir to new name
expecting int(0)
expecting max_length not to be set
expecting max_length not to be set and be 0 in all cases
expecting max_length to _be_ set
expecting true
expecting true delete the link file now
expecting true on file
expecting true remove the file
expecting true remove the new dir
expecting true rename a hard link across dir
expecting true rename a link across dir
expecting true try to rename an non_existing dir
expecting: bool(false)
expecting: bool(true)
expecting: default key 0, value will be replaced by 'FALSE'   numeric keys
expecting: value will be replaced by 'NULL'
expecting: value will be replaced by 'TRUE'
expects arg
expects the keys not to be preserved
expects the keys to be preserved
expire: Maximum length of time (seconds) a secondary DNS server should retain remote copies of the zone data without a successful refresh before discarding.
explicit call to __toString()
explicit close
explicit errors
explicit numeric keys and numeric values
explicit numeric keys, string values
explicitly in current namespace
explicitly in top-level scope
explicitly inconsistent with C1
explicitly requesting default
expm1() returns the equivalent to 'exp(arg) - 1' computed in a way that is accurate even if the value of arg is near zero, a case where 'exp (arg) - 1' would be inaccurate due to subtraction of two numbers that are nearly equal.
exponential value
exptected true
ext/mysqli will not consider it as a 'persistent' connection in a user sense, ext/mysqli will not appy max_persistent etc.
extends keyword
extends string, padding with spaces
extension This doc comment block generated by idl/sysdoc.php
extra code coverage
extra coverage
extra parameter passed to array_walk()
extra parameter passed to array_walk_recursive()
extract all tests from the CI definition
extract details using long  format
extract details using short format
extract information we need from workflow or CLI
extract one file
extract sandcastle URL from the response
extract two files
extracts file descriptor information from a multi handle.
f - the argument is treated as a float, and presented as a floating-point number (locale aware).
f1_soft() does not exist
fL1 definition continues here
fL2 definition continues here
facebook with Cyrillic spoof characters
fails at runtime, but we don't unpack the container's content type because issuing errors for mixed pretty much destroys the feature
fails the requirements of T1
failure, expected Point
failure, expected string
fall through
fallthrough
false (EAGAIN - no warning)
false (EAGAIN, no warning)
false Cleanup.
false as linkname
false in stric mode
false in strict mode
false true if exist
false true if not exist with expiration
fatal error
fb_debug_backtrace - returns the current backtrace minus junk.
fb_handle_error defaults to array() in PHP5
fbcode is a sub-repo.
feel free to add more yourself
feof is not set to true until you try to read past the end of file.
fetch all results from server, but skip on client side
fetch all rows but the last one
fetch from the interop server
fetch only the first rows and let closeCursor() clean up
fetch params passed to zend_parse_params*()
fetch stats
fetch will increment
fetching none, but stats should not be affected - current implementation
fflush and end the output buffering to internal output buffer
fgetc using unset handle
fgetcsv() returns NULL if an invalid handle is supplied or FALSE on other errors, including end of file.
fgets moves the read position.
fgets using unset handle
fgets() on a file handle which is already closed
fgets() on a file handle which is unset
fgetss() on a file handle which is already closed
fgetss() on a file handle which is unset
field redeclaration, error
figure out additional DLL's that are required
file as it is represented in the document model.
file as member
file does not exist
file extension of pages requested via http this allows for php to be configured to parse extensions other than php, useful for multiple configurations under a single webserver
file given to is_link
file input instead of directory
file is modified, get a list of tests that execute this file
file length is too short
file name containing ASCII values
file name containing blank space
file name only with extension
file name starts with blank space
file name starts with numeric and with regular extension
file name stored in an object
file name that is created by create_files
file name with numeric extension
file pointer position
file pointer position after read
file pointer position close the file handle
file pointer to 0
file resource
file resource handle deleted
file should not exist before test
file stream resource
file string  The current file name.
file that's explicitly weak
file that's implicitly weak
file type resource
file_content_type loop
file_get_contents() is the preferred way to read the contents of a file into a string.
file_mode loop
filename Path to the temporary file name created origfilename The original filename, for uuencoded parts only The first filename entry is the message body.
filename as resource
filename as spaces
filename stored in array with single and double slash notation in its path
filename used here
filenames resulting in valid paths
filenames with invalid path
filesize The maximum size of the data segment for the process, in bytes.
filesize should be 1, and is 2
filetype() will also produce an E_NOTICE message if the stat call fails or if the file type is unknown.
fill data into file
fill in the buffer
fill polygon with blue
fill polygon with green
fill the file with some data if mode is append mode
fill the fill with some data if mode is append mode
fill up caller-saved
filling data into the file
filling the file some data if mode is append mode
filling the file with some data if mode is append mode
filtered value (or false)
filters (array) - and array containing the names of any filters that have been stacked onto this stream.
find number of nested statements in statement array
find out TCP port that nobody listens on
find out file position
find the endpoint
finds "Hello, "
finds "This is a test." and "This is another test." (non-greedy) (2 matches)
finds / followed by one or more of a-z, A-Z and 0-9, followed by zero or more .
finds a string starting with http (regardless of case) (matches two)
finds any address ending in .co.uk (matches none)
finds any digit that's not 4 10 digits from the end(1 match)
finds any number that's not 4 and replaces it with a 4
finds any number that's not 4 and replaces it with a 4 ('444444444')
finds dashes with an indefinite amount of whitespace around them and replaces them with a full stop precedeby no spaces and followed by one space
finds http:// (at the beginning of a string) not followed by 3 characters that aren't w's then anything to the end of the sttring (matches one)
finish invalid
first args as array
first args as boolean
first argument as floating point value
first create the dir/subdir and files, record the stat
first element
first get a list of all directories
first insert normal value to force initial send of types
first object in array
first test uncompressing invalid string
first() and last() don't read codepoint and set the last code point var to -1 The pointer is after the last read codepoint if moving forward and before the last read codepoint is moving backwards
fix for windows
fix list item's 2nd lines
fix: round to nearest millisecond  passes for up to .5 milliseconds less, fails for more than .5 milliseconds should be fine since time_sleep_until() on Windows is accurate to the millisecond(.5 rounded up is 1 millisecond)
flag  value as defualt 2.
flag  value as defualt SORT_REGULAR - compare items normally
flag a swap between good and bad
flag value as default SORT_REGULAR - compare items normally SORT_NUMERIC - compare items numerically SORT_STRING - compare items as strings
flag value as defualt 2.
flag value as defualt SORT_REGULAR - compare items normally
flag value as defualt SORT_REGULAR - compare items normally SORT_NUMERIC - compare items numerically SORT_STRING - compare items as strings
flags An integer representing the bit-flags for the field.
flags Any flags set for this column.
flags is also set, which contains a bitmask which can be checked against any of the above constants.
flags, services, regex, and replacement: Parameters as defined by RFC 2915.
float array with duplicate values
float array with scientific notations
float as return value
float const
float key values
float numeric strings
float operand
float type variations
float value
float value array
float value, beyond max negative int
float value, beyond max positive int
float values
floating point representation
flock() allows you to perform a simple reader/writer model which can be used on virtually every platform (including most Unix derivatives and even Windows).
flush image
flush the xml buffer using optional flust argument, default is 1
flush() may not be able to override the buffering scheme of your web server and it has no effect on any client-side buffering in the browser.
fn call with three args
fn call with two args
fnmatch() checks if the passed string would match the given shell wildcard pattern.
followed by zero or more / all more than once.
following operations should not work
following operations should work
foo is foobar You can also use arrays
fopen with interesting windows paths.
fopen() binds a named resource, specified by filename, to a stream.
for arrays, classes
for binary safe
for each handlers in helpers in original order
for each op1.op_type
for each op2.op_type
for functions
for tables with only basic entities, this member is to be accessed directly for better performance:
for test purposes only
for type aliases
for type aliases only
for x in scenarios process(k, v)
for..., foreach( as )
force a fetch of endpoints, this happens irregardless if no endpoints in database
force conversion from tuple-like to vec-like
force conversion of inner stream to STDIO.
force generator
force integration
force passive connection
force stats update
force stats update drive memory up to its highest peak in the script
force translation
forcefully interpret an UTF-8 encoded string as EUC-JP and then convert it back to UTF-8.
foreach API
foreach by ref
formated string for display This doc comment block generated by idl/sysdoc.php
formats the time value as a string.
forward one week, then behaves like above for week days
found a valid element to start on
found element as first elemet in another iterator
found valid element in current inner iterator
found,  key is in member array
found, public member
fputcsv() formats a line (passed as a fields array) as CSV and write it (terminated by a newline) to the specified file handle.
fread() reads up to length bytes from the file pointer referenced by handle.
free resultset after close
free some links but let index 1 remain
free statement after close
from post or get data
from: https://github.com/facebook/hhvm/issues/3336
fromArray() from empty array
fseek() on a file handle which is already closed
fseek() on a file handle which is unset
ftell on a file handle which is already closed
ftell on a file handle which is unset
ftell() gives undefined results for append-only streams (opened with "a" flag).
ftp_close() closes the given link identifier and releases the resource.
ftp_connect() opens an FTP connection to the specified host.
ftp_delete() deletes the file specified by path from the FTP server.
ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer.
ftp_fput() uploads the data from a file pointer to a remote file on the FTP server.
ftp_get() retrieves a remote file from the FTP server, and saves it into a local file.
ftp_mdtm() gets the last modified time for a remote file.
ftp_nb_fget() retrieves a remote file from the FTP server.
ftp_nb_fput() uploads the data from a file pointer to a remote file on the FTP server.
ftp_nb_get() retrieves a remote file from the FTP server, and saves it into a local file.
ftp_nb_put() stores a local file on the FTP server.
ftp_pasv() turns on or off passive mode.
ftp_put() stores a local file on the FTP server.
ftp_rawlist() executes the FTP LIST command, and returns the result as an array.
ftp_rename() renames a file or a directory on the FTP server.
ftp_site() sends the given SITE command to the FTP server.
ftp_size() returns the size of the given file in bytes.
ftp_ssl_connect() is not intended for use with sFTP.
ftp_ssl_connect() opens an explicit SSL-FTP connection to the specified host.
ftruncate on a file handle which is unset
ftruncate on close file handle
ftruncate the current file and check stat() on the file
ftruncate() on a file handle which is already closed/unset
full buffer dumped every time
full stacktrace
function don't allow promotion
function foo ()
function having 2 declared parameters
function name
function name as NULL
function name having boolean value
function name with boolean name
function name with mixed string and integer
function name with simple string
function name with string and special character
function name within double quotes
function name within single quotes
function name without quotes
function to handle catchable errors
function to parse the http auth header
function to remove directory handle before re-using variable name in test and to ensure directory is not in use at CLEAN section so can me removed
functions don't get the var in scope
functions must receive all input arguments in the same order as defined in the WSDL file (They should not receive any output parameters as arguments) and return one or more values.
functions, or FALSE if there are no more entries to read, or an error code if an error occurred.
fwrite on a file handle which is unset
fwrite to fail
fwrite() on a file handle which is already closed
fwrite() returns the number of bytes written or FALSE on error
gather all the locales installed in the system
gecos GECOS is an obsolete term that refers to the finger information field on a Honeywell batch processing system.
general other files
generate a random challenge
generate different failure conditions
generate new private key of specified size to use for tests
generate some random seek offsets
generate the function
generate the function call
generate the valid response
generated by idl-to-hni.php
generator is closed here, without running SWITCH_FREE
get UID for new message
get a class
get a file handle
get a heredoc string
get a reference variable
get a resouce variable
get a resource
get a resource type variable
get a resource variable
get an infinitely recursive array
get an object
get an resource variable
get an unset array variable
get an unset variable
get class methods
get context node and check "a:foo"
get different types of array
get dynamic invisible property
get dynamic property
get endpoints for this test
get first result
get functions
get hdr details
get heredoc
get host name from URL
get int(10) as that is the type/value of the underlying thing
get it back
get last two segments of host name
get methods
get next result
get only the methods from the extension we are querying
get our endpoint
get resource
get resource handle
get resource variable
get the Xenon data then verify that there are no unknown functions and that all of the functions in this file are in the stack
get the contents from the internal output buffer
get the current data type
get the data of size 1024
get the data of size 512
get the dynamic property "color"
get the file pointer to beginning of the file
get the list of installed extensions
get the resource
get the set of included files
get the set of required files
get the thread ids of the two connections...
get two or three function names to play with...
get visible property
getAllKeys doesn't seem to work until after another operation
getDefaultValue() will return the result of FOO*FOO.
get_class_method reports different constructor names
get_html_translation_table() returns only the most common form for them.
get_html_translation_table() will return the translation table that is used internally for htmlspecialchars() and htmlentities() with the default charset.
get_http_request_size() will return the size of the http request.
getenv('TZ') returns 'UTC' here putenv (basic_functions.c) does call tzset() when the env var being put is 'TZ' -adding a call direct to GetEnvironmentVariableA just before tzset() is called to check the value of 'TZ' returns 'UTC' putting a call to date_default_timezone_set() here doesn't help
getimagesize() can also return some more information in imageinfo parameter.
gets applied before constructor runs
getting a sibling as reference node to insert
getting resource
getting resource type for file handle
getting the array element in 'str' variable strtr() call in three args syntax form
getting the parent node as reference node to insert
getting the resource
gid Group ID of the group in numeric form.
gid Group ID, should be the same as the gid parameter used when calling the function, and hence redundant.
gid The group ID of the user.
give nicer values
give the server a second to really kill the thread
giving NULL as the argument
giving a normal string
giving arguments as NULL
giving arguments more than expected
giving long string to check for proper memory re-allocation
glob() with default arguments
gmmktime() internally uses mktime() so only times valid in derived local time can be used.
gmp_divexact
gmp_hamdist
gmp_init (although that's probably tested well by now)
gmp_legendre
gmp_nextprime
gmp_perfect_square
gmp_popcount
gmp_prob_prime
gmp_scan1 "0" bit is found at position 3.
gmp_sqrtrem
gmp_testbit
go through method info array marking this function as tested
go to the end
grab the bootstrap script
grapheme_extract extract_type
greater than
greek in UTF-8 to be converted to iso-8859-7
greek strings in UTF-8
gregoriantojd() can be used to convert such dates to their Julian Day count.
group of escape sequences
group of various arrays
group of various arrays with indices
gzopen can read compressed and uncompressed so we also need to look for the magic number (x1f x8b) to prove it was compressed.
hack to instanciate an object without constructor
hack to make tests work with MS SoapToolkit it's the only one that uses this soapaction, and breaks if it isn't right.
hack to skip reserved words
handle Resource of type curl indicates the handle which it concerns.
handle empty FS
handle empty FV
handle exception
handle file-open failure
handle size
handled exception
hard link name used
has explicit return value, so when included, that value is returned
has no __toString method
has no inputs
has no public property "color"
has sub node statements
hash the output
hash_equals - Compare two strings in constant time  Note that this function is meant to be slower than a standard strcmp which short-circuits the comparison once the result is known.
hash_file() error tests
hash_init() doesn't allow empty keys (for good reason) but hash_hmac() needs to support them.
hash_init() doesn't allow empty keys (for good reason) but hash_hmac_file() needs to support them.
have a negative shift
haystack as needle
headers can be either an associative array keyed by header name, or an indexed array, where each element contains a single header line.
helper for ctor
helpers This doc comment block generated by idl/sysdoc.php
here doc with different whitespaces
here doc with multiline string
here doc with numeric values
here is the problem
here we execute the orders
here you can see the bar member var beeing a string
heredoc array with  unset variable
heredoc array with object, unset variable and resource variable
heredoc array with unset variable
heredoc keys
heredoc string
heredoc string containing embedded 'new line chars'/'new lines' in the string
heredoc string value
heredoc string with NULL
heredoc string with blank line
heredoc string with only numeric values
heredoc string with only numerics
heredoc string with single character
heredoc strings
heredoc with blank line
heredoc with different white space characters
heredoc with different whitespaces
heredoc with empty value
heredoc with multiline
heredoc with multiline string
heredoc with numeric values
heredoc with quoted strings and numeric values
heredoc with quotes and slashes
heredoc with special characters
hex in string
hex integers
hex value as permission
hexa decimal numbers
hexa-decimal integer data
hexadecimal 'digits'
hexadecimal as integer
hexadecimal number
hexadecimal numeric string
hexadecimal representation (lower-case)
hexadecimal representation (upper-case)
hexadecimal type variations
hexadecimal value
hexadecimal values
hexdec() converts a hexadecimal string to a decimal number.
hexdec() will ignore any non-hexadecimal characters it encounters.
hhvm phpunit
hhvm seems inconsistent in how this array is sorted, so...
hi test foo
hide e_warning warning about timezones
hide errors from interrupted syscalls
home dir shortcut char
hopefully we'll never see a file name that's not covered by this regular expression...
however, this shows the old value, 1  /* try to define some constants with non-scalar initial values
hphp output: Hello, 3dude
hphp output: Hello, 5
hphp output: Hello, uh oh
hphp_array_idx() returns the value at the given key in the given array or the given default value if it is not found.
hphp_create_object() - Used by ReflectionClass to create a new instance of an object, including calling the constructor.
hphp_create_object_without_constructor() - Used by ReflectionClass to create a new instance of an object, without calling the constructor.
hphp_get_extension_info() - Internally used for getting extension's information.
hphp_get_property() - Used by ReflectionProperty to get the value of a property on an instance of a class.
hphp_get_static_property() - Used by ReflectionProperty to get the value of a static property on a class.
hphp_invoke() - Used by ReflectionFunction to invoke a function.
hphp_invoke_method() - Used by ReflectionMethod to invoke a method and by ReflectionFunction to invoke a closure.
hphp_set_property() - Used by ReflectionProperty to set the value of a property on an instance of a class.
hphp_set_static_property() - Used by ReflectionProperty to set the value of a static property on a class.
hphpc won't call the autoloader unless there exists a  definition for the class somewhere
hphpc won't call the autoloader unless there exists a definition for the class somewhere
html_entity_decode() is the opposite of htmlentities() in that it converts all HTML entities to their applicable characters from string.
http://3v4l.org/8Peti
http://3v4l.org/FtFt6
http://3v4l.org/S4isH
http://3v4l.org/T1JaE
http://3v4l.org/qa6EP
http://3v4l.org/sbf0s
http://icu-project.org/apiref/icu4c/ucsdet_8h.html
http://www.php.net/manual/en/language.operators.comparison.php
https://github.com/facebook/hhvm/issues/2408
https://github.com/facebook/hhvm/issues/3094
https://github.com/facebook/hhvm/issues/3096
https://github.com/facebook/hhvm/issues/3899
https://github.com/facebook/hhvm/issues/4084
https://github.com/facebook/hhvm/issues/4086
https://github.com/php/php-src/pull/865
huge negative value
hypot() returns the length of the hypotenuse of a right-angle triangle with sides of length x and y, or the distance of the point (x, y) from the origin.
i - add PID of the current process currently PHP is not multi-threaded, so it should be save to test for the PID of this PHP process
i got nothin
i stands for integer with base detection.
iconv.internal_encoding  ISO-8859-1   output-charset string  Specifies the character set to use to compose the MIME header.
iconv.internal_encoding  UTF-8   line-length integer  Specifies the maximum length of the header lines.
id column - skip it
identical to at, implemented for ArrayAccess
identical to containsKey, implemented for ArrayAccess
identifier name contains underscore
identifier name starts with underscore
identifiers for the actual locale, valid locale WARNING: The values described here are NOT the actual values in PHP code.
idx() is for default selection, not a blanket replacement for array access.
idx() is used to look for an index in an array, and return either the value at that index (if it exists) or some default (if it does not).
if (0)      // even if the yield is never executed, can't have return with value
if 0 look into entity
if at some point internal encoding changes, set correct one in INI section or use file 'TranslitFail1.ISO-8859-1'.
if conversion to string is done by echo, for example, an exeption is thrown.
if fewer arguments are passed than there are paramaters declared, a warning is issued and the parameters corresponding to each each omitted argument are undefined
if imap_close was successful test whether CL_EXPUNGE was set by doing a message count
if it errors out, just ignore it and rely on regular methods
if no content, return false
if null or the empty string, the default time zone for the runtime is used.
if running local, calls executeCode, otherwise does an http request
if set, copy phpt files into this directory, which should be accessible via an http server.
if the test uses POST or GET, and it's not the cgi executable, skip
if this is a cgi test, prepare for it
if this is a cgi, remove the headers first
if this is in our skip list, skip it
if this is negative, we have a 32-bit int
if true doesn't run tests, just outputs executable info
if we are skipping the rest of the tests (due to error) note a fault
if we had a simple cast to unsigned char, this would be the same as 0
if we haven't reached our startpoint, skip
if we specify an endpoint, skip until we find it
if we want to manage our own padding
if we're doing web testing, then we wont be able to set ini setting on the command line.
if we're looking for a specific method, skip unless we have it
if..elseif....else
ignore INSERT error, NOTE: command line returns 0, affected_rows returns -1 as documented
ignore exception tested elsewhere
ignore here
ignore it, we might not have sufficient permissions
ignore response Let client run until script quits
ignore some well-known system dlls
ignore stuff in our build dir, but only if it is one of our targets
ignore this error
ill-formed name, but no error.
image2wbmp() outputs or save a WBMP version of the given image.
imagealphablending() allows for two different modes of drawing on truecolor images.
imagearc() draws an arc of circle centered at the given coordinates.
imagechar() draws the first character of c in the image identified by image with its upper-left at x,y (top left is 0, 0) with the color color.
imagecolorallocate() must be called to create each color that is to be used in the image represented by image.
imagecolorallocatealpha() behaves identically to imagecolorallocate() with the addition of the transparency parameter alpha.
imagecopymergegray() copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h.
imagecopyresampled() copies a rectangular portion of one image to another image, smoothly interpolating pixel values so that, in particular, reducing the size of an image still retains a great deal of clarity.
imagecopyresized() copies a rectangular portion of one image to another image.
imagecreate() returns an image identifier representing a blank image of specified size.
imagecreatefromgif() returns an image identifier representing the image obtained from the given filename.
imagecreatefromjpeg() returns an image identifier representing the image obtained from the given filename.
imagecreatefrompng() returns an image identifier representing the image obtained from the given filename.
imagecreatefromstring() returns an image identifier representing the image obtained from the given data.
imagecreatefromwbmp() returns an image identifier representing the image obtained from the given filename.
imagecreatefromxbm() returns an image identifier representing the image obtained from the given filename.
imagecreatefromxpm() returns an image identifier representing the image obtained from the given filename.
imagecreatetruecolor() returns an image identifier representing a black image of the specified size.
imagedestroy() frees any memory associated with image image.
imagefilledpolygon() creates a filled polygon in the given image.
imagefilltoborder() performs a flood fill whose border color is defined by border.
imagefilter() applies the given filter filtertype on the image.
imagegif() creates the GIF file in filename from the image image.
imageinterlace() turns the interlace bit on or off.
imageistruecolor() finds whether the image image is a truecolor image.
imagejpeg() creates a JPEG file from the given image.
imageloadfont() loads a user-defined bitmap and returns its identifier.
imagepalettecopy() copies the palette from the source image to the destination image.
imagepolygon() creates a polygon in the given image.
imagerectangle() creates a rectangle starting at the specified coordinates.
imagesavealpha() sets the flag to attempt to save full alpha channel information (as opposed to single-color transparency) when saving PNG images.
imagescale - Scale an image using the given new width and height.
imagesetbrush() sets the brush image to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special colors IMG_COLOR_BRUSHED or IMG_COLOR_STYLEDBRUSHED.
imagesetpixel() draws a pixel at the specified coordinate.
imagesetstyle() sets the style to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special color IMG_COLOR_STYLED or lines of images with color IMG_COLOR_STYLEDBRUSHED.
imagesetthickness() sets the thickness of the lines drawn when drawing rectangles, polygons, ellipses etc.
imagesettile() sets the tile image to be used by all region filling functions (such as imagefill() and imagefilledpolygon()) when filling with the special color IMG_COLOR_TILED.
imagetruecolortopalette() converts a truecolor image to a palette image.
imagewbmp() outputs or save a WBMP version of the given image.
imap_body() returns the body of the message, numbered msg_number in the current mailbox.
imap_body() will only return a verbatim copy of the message body.
imap_ping() pings the stream to see if it's still active.
implement abstract 'AbstractClass' class
implement abstract 'abstract_class' class
implement abstract class
implement the interface
implement the interface 'iTemplate'
implemented for ArrayAccess
implicit call to __toString()
implicit close
implicit close (called by shutdown function)
implicitly in current namespace
implicitly public
implicitly weak mode code
implode() can, for historical reasons, accept its parameters in either order.
implode(PHP_EOL .
import PHP-Parser
impossible to assign this since we don't return references here
in /home/hartmut/projects/php/dev/head/ext/xml/tests/bug30266.php on line 22
in collections mode, all traits get an additional static method
in collections mode, any class using a trait gets an additional static method
in php, it incorrectly reports problems with iv in ECB mode.
in the future we can store size separately and pad the array
in the version strings and also inserts dots .
in this context, equivalent to using a null statement
inaccessible, by default
include a snapshot identifier
include common file related test functions
include common file test functions
include file for imap_stream
include file for required variables in imap_open()
include file.inc
include file.inc for create_files function
include for create_files/delete_files functions
include the common file related test functions
include the file.inc for Function: function create_files()
include the file.inc for common functions for test
include the file.inc for common test funcitons
include the header for common test function
include the trailing slash
inclusive/with comments first child element of doc element is context.
inclusive/without comments first child element of doc element is context.
incomplete header  Code: 7  Highly unusual.
incomplete response  Code: 8  Highly unusual.
incorrect parameter type
increase max nesting to account for deep scripts
increases array to 4 elements
increases array to 5 elements
increases code coverage by having ufp open
increasing and decreasing values
increasing values
increment by one to create the situation  of accessing beyond array size
increment by one to create the situation of accessing beyond array size
increment the value of the static.
increment with initial value only works with binary protocol
increments twice before decrementing
index starts at 0
index starts at 5
indexed array
infinite loop to simulate long processing
information scripts
inherited constructor
ini_set with values expecting numbers but given an empty string
initial sanity checks for no overflow
initialing required variables
initialing required variables defining different heredoc strings
initialing required variables defining different strings
initialing required variables initialing required variables
initialise 'num_req' variable
initialise associative arrays
initialise different arrays
initialise the first argument
initialise the multi-dimensional array
initialise the second argument
initialise the second array
initialising  heredoc strings
initialising a heredoc string
initialising required variables
initialising the required variables
initialising the string array
initialize all required variables
initialize all required variables get an unset variable
initialize the 2-d array
initialize the array having duplicate keys
initialize the array having duplicate values
initialize the second argument
initializes a global, creating it if necessary
initializing object member value
initializing the args array
initializing the array
initializing the format array
initializing variables
initially giving the locale
initially setting the locale
injection text from some user input
inner iterator
inner ones are redundant grouping parens
input array
input array containing elements as reference variables
input array containing references
input array with different false elements
insert 2 elements to hit our overridden compare
insert a new element with int key -10
insert a new element with int key 5
insert a new element with string key ""
insert a new element with string key "red"
insert new method record into info array
inserted new line
inserted new line in a string
inserts using a key of the next available int value
instanceof constant
instanceof does not change the expression id, though the type changes
instanceof has to make adjustments for the fact that arrays are Traversable
instanceof object
instanceof string variable
int as pieces
int not FooInt
int operand
int(111) is string("o") in octal.
intdiv() Integer division.
integer array
integer array with duplicate values
integer as glue
integer as hexadecimal
integer as octal
integer numeric strings
integer overflow
integer type variations
integer value
integer values
integers, hex and octal
intentionally doing nothing for now
interface class
intval() should not be used on objects, as doing so will emit an E_NOTICE level error and return 1.
invalid (should throw)
invalid args type, valid argument: array
invalid arguments
invalid attribute
invalid because readlink doesn't work with hardlink
invalid date
invalid domain
invalid expression
invalid file handle
invalid filename
invalid first argument
invalid handle
invalid index
invalid input
invalid key
invalid length argument
invalid mode -100
invalid numerics as its prefix with sign or have decimal points
invalid offset
invalid parameters
invalid password to use in this test
invalid pharname
invalid query, another warning
invalid regex  Code: 9  The regex passed to MongoRegex is not of the correct form.
invalid string data
invalid, does nothing
invokes c3::__callStatic
involving variables and other non-basic operators
ipv6: Address for this specific record to merge with chain.
is it eof()
is null or UNKNOWN:0
is_dir() on a directory
is_dir() resolves symlinks
is_file() on a file
is_scalar() does not consider resource type values to be scalar as resources are abstract datatypes which are currently based on integers.
is_soap_fault() checks if the given parameter is a SoapFault object.
is_writeable() is an alias of is_writable()
isset() with two args, one arg only unset, expected: bool(false)
it has to be strictly an integer
it is getting worse.
it is undefined which pooled connection we get - thread ids may differ
it should been clean
it's a post-increment operation as to the codepoint, i.e., it gives the codepoint starting at the initial position and only then moves the pointer forward
it's can't be used since this will encounter error
item: details
iterate over again to get all different key values
iterate through array again to see which values are considered equal
iterate through original array
iterator API
ivs should be ignored in ecb mode
japenese utf-8
jumped to next Sunday
jumped to next Sunday again
just check that there is only one length
just checking it can be default-constructed...
just coverage
just drop the pcre-x.x.tar.xx here and run the script
just for demo
just make sure all the form constants are defined as in the api spec
just to be sure the most basic stuff really works we check it again...
keep f4bogus from fatalling
key 1.9 is truncated to key 1
key and value from array_index swapped
key can be a runtime expression
key can be a variable
key can be any value possible for an array index.
key of the current element
key() returns the index element of the current array position.
key_exists() is the same as array_key_exists().
key_exists() returns TRUE if the given key is set in the array.
keys are cache-unique, so storing a second value with the same key will overwrite the original value.
keys are created from sub iterators associated information
keys are created from sub iterators position
keys of an array that results from array_filter on a Container are mixed
keys upto 128 bits (16 bytes)
kill the headers
l_linger not given
label column, result set charset
lambdas in class bodies
largest decimal
last host specification should be the one used
last row has been implicitly cleaned from the wire by freeing the result set
lcg_value() returns a pseudo random number in the range of (0, 1).
left-facing M not on baseline
left-facing M on baseline
left-facing M on ceiling
left-justification but with a cutoff of 10 characters
left-justification with spaces
len The length of this column.
length The width of the field, as specified in the table definition.
length as Null
length of the file name
length parameter given,not reading entire file
less than expected, 1 arg
less than expected,1 argument
let the OS run the sleep process before sending the signal
let the parent reply...
let y default
let's also generate/update the bundled .reg file
let's hope nobody changes auto_increment_increment while this code executes
let's hope we don't hit a MySQL running on that port...
let's make this mysqlnd only - for libmysql we need debug installation table.inc will create a database connection and run some SQL queries, therefore the debug file should have entries
let's try to play with stored procedures
lets be fair and do the most simple SELECT first
lets go crazy and create a few pconnections...
lets hope this is an invalid attribute code
lets hope we always run this in the same second as we did run the server info request...
lets see if the server agrees to that
lets see what the default is...
libiconv(1.8) doesn't know "UTF8" but "UTF-8".
libmysql and mysqlnd will show the pdo_type entry at a different position in the hash
libmysql gives a less descriptive error message but mysqlnd, we did not unify the error messages but ignore this slight difference silently
libmysql needs this - otherwise we get a 2015 error
libmysql only
libmysql only - needs extra compile flag, no way to check properly in the PHP user land if its compiled in or not
libmysql return value seems to depend on server version
libmysql should return a string here whereas mysqlnd returns a native int
license length
like the f() call above
likely the next iteration will not be within max_execution_time
likewise ...
limit var search to current location
limits to 5 replacements returns 444444789
limits to three replacements
line integer  The current line number.
lines with different whitespace charecter
link doesn't exists as not created, expected false
link doesn't exists as not created, expected false clear the cache
link files even though it original file doesn't exist yet
link name stored in an object
link name stored in side an array  with default numeric key
link name used
link name used here
link() creates a hard link.
linkname as spaces
linkname used to create soft/hard link
linknames resulting in valid paths
linknames with invalid linkpath
links copyright notice
list assignment generates a new expression id
list build-in extensions
list dependencies
list of 3 functions
list of arrays with key and values
list of arrays with/without key values
list of lists with just variable assignments - expect 100,200,300
list of opcode handlers and helpers in original order
literally all of them.
little hack for last parameter
load list of enabled extensions
loads the SOAP request to the Document
log() might only return log(1) in this case due to lack of precision.
looks like we can't change this, or it'd change the original zval instead..
loop over key sizes for test
loop though each element of the array and check the working of krsort() when 'sort_flags' argument is supplied with different values
loop though each element of the array and check the working of ksort() when 'sort_flags' argument is supplied with different values
loop through each element of 'input' with default callback
loop through each element of the 'heredoc_array' for 'str'
loop through each element of the 'needle' array to check the working of stripos()
loop through each element of the 'needle' array to check the working of strrpos()
loop through each element of the 'values' for callback
loop through each element of the array and check the working of stripos()
loop through each element of the array and check the working of strncasecmp()
loop through each element of the array and check the working of strncmp()
loop through each element of the array and check the working of strrchr()
loop through each element of the array and check the working of strrpos()
loop through each element of the array and check the working of strtok() when supplied with different string and token values
loop through each element of the array and check the working of strtok() when supplied with different string values
loop through each element of the array for 'str'
loop through each element of the array for 'val' argument  check the working of array_fill()
loop through each element of the array for ...
loop through each element of the array for allowable_tags
loop through each element of the array for ar1
loop through each element of the array for ar2
loop through each element of the array for arg1
loop through each element of the array for args
loop through each element of the array for arr1
loop through each element of the array for arr2
loop through each element of the array for array_arg
loop through each element of the array for associative_array
loop through each element of the array for atime
loop through each element of the array for autoload
loop through each element of the array for base
loop through each element of the array for blue
loop through each element of the array for cipher
loop through each element of the array for class
loop through each element of the array for class_name
loop through each element of the array for classname
loop through each element of the array for cmp_function
loop through each element of the array for code
loop through each element of the array for context
loop through each element of the array for data
loop through each element of the array for data_comp_func
loop through each element of the array for data_compare_func
loop through each element of the array for day
loop through each element of the array for different heredoc and mask strings
loop through each element of the array for different values for 'num_req' argument
loop through each element of the array for dirname
loop through each element of the array for encoding
loop through each element of the array for errno
loop through each element of the array for filename
loop through each element of the array for flag
loop through each element of the array for flags
loop through each element of the array for format
loop through each element of the array for fp
loop through each element of the array for function_name
loop through each element of the array for get_as_float
loop through each element of the array for gid
loop through each element of the array for gmt_offset
loop through each element of the array for haystack
loop through each element of the array for heredoc str, mask str , start values and len values
loop through each element of the array for heredoc strings, mask strings and start values
loop through each element of the array for hour
loop through each element of the array for im
loop through each element of the array for imagefile
loop through each element of the array for imagetype
loop through each element of the array for info
loop through each element of the array for input
loop through each element of the array for ip_address
loop through each element of the array for iv
loop through each element of the array for key
loop through each element of the array for key_comp_func
loop through each element of the array for key_compare_func
loop through each element of the array for latitude
loop through each element of the array for len argument
loop through each element of the array for longitude
loop through each element of the array for mask
loop through each element of the array for mask argument
loop through each element of the array for maxlen
loop through each element of the array for method
loop through each element of the array for method_name
loop through each element of the array for min
loop through each element of the array for mode
loop through each element of the array for mon
loop through each element of the array for needle
loop through each element of the array for num check the working of array_fill
loop through each element of the array for obj
loop through each element of the array for object
loop through each element of the array for offset
loop through each element of the array for option
loop through each element of the array for options
loop through each element of the array for parameters
loop through each element of the array for parser
loop through each element of the array for part
loop through each element of the array for path
loop through each element of the array for pathname
loop through each element of the array for pattern
loop through each element of the array for pid
loop through each element of the array for preserve_keys
loop through each element of the array for process_sections
loop through each element of the array for proper_address
loop through each element of the array for quote_style
loop through each element of the array for recursive
loop through each element of the array for red
loop through each element of the array for sec
loop through each element of the array for sig
loop through each element of the array for size
loop through each element of the array for start
loop through each element of the array for start_key  check the working of array_fill()
loop through each element of the array for str
loop through each element of the array for str argument
loop through each element of the array for strict argument
loop through each element of the array for string
loop through each element of the array for strval
loop through each element of the array for substchar
loop through each element of the array for suffix
loop through each element of the array for time
loop through each element of the array for timestamp
loop through each element of the array for traitname
loop through each element of the array for uid
loop through each element of the array for url
loop through each element of the array for url_component
loop through each element of the array for use_include_path
loop through each element of the array for value
loop through each element of the array for var
loop through each element of the array for whence
loop through each element of the array for year
loop through each element of the array for zenith
loop through each element of the array to check htmlspecialchars_decode() function with all possible arguments
loop through each element of the array to test array_rand() function  for different values for 'input' argument
loop through each element of the arrays for all arguments
loop through each element of the arrays for str, mask and start argument
loop through each element of the arrays for str, mask and start arguments
loop through each element of the arrays for str,mask and start arguments
loop through each element of the arrays for str,mask,start and len arguments
loop through each element of the arrays for string and mask arguments
loop through each element of the cmp_values for 'cmp_function'
loop through each element of the heredoc_arr for 'str'
loop through each element of the heredoc_arr for str
loop through each element of the values array for 'val' argument  check the working of array_fill()
loop through each element of the values array for 'var' argument  check the working of sizeof()
loop through each element of the values array to check htmlspecialchars_decode() function with all possible arguments
loop through each element of the values for 'chunklen'
loop through each element of values for 'chunklen'
loop through each element of values for 'ending'
loop through each element of values for 'str' and default value of 'chunklen'
loop through each value of input_values
loop through each values for 'ending'
loop through element of values for 'ending'
loop through the array for 'array' argument
loop through the array for size argument
loop through the array to test shuffle() function with each element of the array
loop through the each value of the array for 'var' argument and check the behaviour of sizeof()
loop through the strings array to check if htmlspecialchars_decode() is binary safe
loop through the strings array to check if strip_tags() is binary safe
loop through the various elements of strings array to test strip_tags() functionality
loop through to check possible variations
loop through to check working of each() on different arrays
loop through to compare each string with the other string
loop through to compare the strings
loop through to compare the strings, for various length values
loop through to consider various offsets in getting the position of the needle in haystack string
loop through to find the length of each string
loop through to get all 256 character's equivelent binary value, and check working of strncasecmp()
loop through to get all 256 character's equivelent binary value, and check working of strncmp()
loop through to get the position of the needle in haystack string
loop through to go each and every element in an array  and comparing the elements with one and other
loop through to merge two arrays
loop through to replace the matched elements in the array
loop through to test array_keys() with different arrays
loop through to test array_values() with different arrays given above
loop through to test arsort() with different arrays
loop through to test arsort() with different arrays,  to test the new keys for the elements in the sorted array
loop through to test asort() with different arrays
loop through to test asort() with different arrays,  to test the new keys for the elements in the sorted array
loop through to test each element in the above array
loop through to test each element in the above array  is a readable file
loop through to test each element in the above array  is a writable file
loop through to test each element in the above array  is an executable file
loop through to test each element in the above array is a readable file
loop through to test each element in the above array is a writable file
loop through to test each element in the above array is an executable file
loop through to test each element the above array
loop through to test krsort() with different arrays
loop through to test krsort() with different arrays,
loop through to test ksort() with different arrays
loop through to test ksort() with different arrays,
loop through to test rsort() with different arrays
loop through to test rsort() with different arrays,  to test the new keys for the elements in the sorted array
loop through to test sort() with different arrays
loop through to test sort() with different arrays,  to test the new keys for the elements in the sorted array
loop through to test strrchr() with each needle
loop to check if the file with new mode is executable  using is_executable()
loop to check if the file with new mode is executable using is_executable()
loop to check if the file with new mode is readable using is_readable()
loop to check if the file with new mode is writable using is_writable()
loop to check that doubleval() also recognizes different  float values, expected output:float value for valid floating point number
loop to check that floatval() recognizes different  float values, expected output:float value for valid floating point number
loop to check that intval() recognizes different  integer values, expected output:integer value in decimal notation for valid integer
loop to check that is_array() recognizes different  type of arrays, expected output bool(true)
loop to check that is_bool() recognizes different  bool values, expected output: bool(true)
loop to check that is_int() recognizes different  integer values, expected output: bool(true)
loop to check that is_null() recognizes different  null values, expected output: bool(true)
loop to check that is_numeric() recognizes different  numeric values, expected output: bool(true)
loop to check that is_object() recognizes different  objects, expected output: bool(true)
loop to check that is_string() recognizes different  strings, expected output bool(true)
loop to check that strval() recognizes different  scalar values and retuns the string conversion of same
loop to check the file opened in different read modes
loop to check whether given object/string has valid given method name expected: true if valid callback false otherwise
loop to create and verify results
loop to display the variables and its reference count using debug_zval_dump()
loop to test fclose with different invalid type of args
loop to test fflush() with different invalid type of args
loop to test fgetc() with different invalid type of args
loop to test fgetcsv() with different invalid type of args
loop to test fgets() with different invalid type of args
loop to test fgetss() with different invalid type of args
loop to test fputcsv() with different invalid type of args
loop to test fread() with different invalid type of args
loop to test fseek() with different invalid type of args
loop to test ftell with different invalid type of args
loop to test ftruncate() with different invalid type of args
loop to test fwrite() with different invalid type of args
loop to test rewind with different invalid type of args
loop to test the function with each heredoc string in the array
loop to test working of lcfirst with different values
loop to test working of ucfirst with different values
loopback address
looping to check the behaviour of the function for each string in the array
looping to test array_rand() function with different arrays having different types of keys
looping to test array_rand() with each sub-array in the multi-dimensional array
looping to test shuffle() with each sub-array in the multi-dimensional array
looping to use various invalid formats with fscanf()
loose type checking
lstat of link
lstat() is identical to stat() except it would instead be based off the symlinks status.
main script definition continues here
main test harness
maintain file mtimes so that cvs doesnt get crazy
make RecursiveDirectoryTree::current() return SplFileInfo
make RecursiveDirectoryTree::current() return getPathname()
make RecursiveDirectoryTree::current() return getSelf()
make RecursiveDirectoryTree::key() return getFilename()
make RecursiveDirectoryTree::key() return getPathname()
make default
make invisible to static analysis
make it UTF-8
make it a dynamic string
make it non-static
make it not-inlinable Make hhbbc not prove it's going to throw:
make sure 0b overflows like normal integers and 0x hexadecimal integer
make sure any multibyte output is in base 64
make sure it isn't catching exceptions that weren't thrown...
make sure kind still works
make sure normal strings work
make sure there's no regression in matching
make sure we are allowed to call functions
make sure we don't confuse the function argument for a type hint
make sure we suspend
make sure you can undo the custome serialization
make the 3D effect
manually list of tests we want to run in sandcastle
mark added messages for deletion
mark messages in inbox for deletion
mark the file for upload..
match zend on order of which properties are stored
matched the method name
matcherpattern.php
matchertarget.php
matching "Good" in array(0,"hello"), result:true in loose type check
matching integer 0 in array("this"), result:true in loose type check
matching string "this" in array(0), result:true in loose type check
matching string having integer in beginning, result:true in loose type check
max -ne int value
max negative integer as hexadecimal
max negative integer as octal
max negative integer value
max number of retries exhausted, couldn't send query  Code: 19  The driver will automatically retry "plain" queries (not commands) a couple of times if the first attempt failed for certain reasons.
max positive hexadecimal integer
max positive integer
max positive integer as octal
max positive integer number
max positive integer value
max posotive octal integer
max postive integer as hexadecimal
max2() returns the max of two operands (optimized FCallBuiltin for max).
maximum packet size up to which we test is 10M
maximum packet size up to which we test_mysqli_stmt_send_long_data_table_1 is 10M
maximum subnormal double
may be NULL
mb_convert_variables() assumes all parameters have the same encoding.
mb_convert_variables() join strings in Array or Object to detect encoding, since encoding detection tends to fail for short strings.
mb_ereg 'successfully' matching incorrectly:  Bug now seems to be fixed - error message is now generated when an 'empty' pattern is supplied to mb_ereg.
mb_ereg_search_init() sets string and pattern for a multibyte regular expression.
mb_internal_encoding() should be set to same encoding.
mb_output_handler() converts characters in the output buffer from internal character encoding to HTTP output character encoding.
mb_output_handler() is ob_start() callback function.
mb_send_mail() uses this setting to encode e-mail.
mb_strcut() performs equivalent operation as mb_substr() with different method.
mb_stripos() returns the numeric position of the first occurrence of needle in the haystack string.
mb_stristr() finds the first occurrence of needle in haystack and returns the portion of haystack.
mb_strpos bounds check is byte count rather than a character count: The multibyte string should be returning the same results as the ASCII string.
mb_strrchr behaves differently in different versions of libmbfl (https://github.com/facebook/hiphop-php/issues/68)
mb_strrchr() finds the last occurrence of needle in haystack and returns the portion of haystack.
mb_strrichr() finds the last occurrence of needle in haystack and returns the portion of haystack.
mb_strripos() performs multi-byte safe strripos() operation based on number of characters.
mb_strstr() finds the first occurrence of needle in haystack and returns the portion of haystack.
mbstring currently implements the following encoding detection filters.
members This consists of an array of string's for all the members in the group.
memcmp() sort
memlock The maximum number of bytes of memory that may be locked into RAM.
memory leak only
memory, temp, etc
memsize and perm will be ignored.
message sequences instead of numbers
method b1 demostrates self vs.
method bits
method f1 demostrates self and parent
method record fields
method with a body in an interface
methods irrelevent for conversion purposes
microtime() returns the current Unix timestamp with microseconds.
min negative integer
min range of hexadecimal integer
min range of integer
min range of octal integer
min2() returns the min of two operands (optimized FCallBuiltin for min).
minimum int divided by -1, shouldn't sigfpe
minimum int mod -1, shouldn't sigfpe
minimum is 7.0
minimum program string
minimum statement count
minimum-ttl: Minimum length of time (seconds) a client can continue to use a DNS resolution before it should request a new resolution from the server.
minumum subnormal double
miscelleous input
missing does not exist Test dynamic class, dynamic method name, static call
missing optional field in declared shape, does not unify
misspelled month name
mixed array
mixed assoc.
mixed associative array, containing null/empty/boolean values as key/value
mixed case function
mixed string with float and chars
mixed string with int and chars
mixed strings
mixed types
mixed value array
mixed value array with different key values
mixed value array with different types of keys
mixedbag is intended to run quickly and test a bunch of functionality.
mode (string) - the type of access required for this stream (see Table 1 of the fopen() reference)  seekable (bool) - whether the current stream can be seeked.
mode can be MYSQLI_CURSOR_TYPE_NO_CURSOR (the default) or MYSQLI_CURSOR_TYPE_READ_ONLY.
mode can be in the range from 1 to the maximum value of unsigned long.
mode is ignored on Windows.
mode tells this function which calendar to convert the Julian Day Count to, and what type of month names are to be returned.
money_format() returns a formatted version of number.
more __call testing
more arrays to be intersected
more comment
more doc comment
more important to check that all contents are present than order they are returned in
more pg_lo_unlink() tests
more than expected
more than expected no.
more than expected number of arguments
more than expected numbers
more than the expected number of arguments
more than valid number of arguments ( valid are 2 or 3 )
move 40 bytes
move to next element
move up to ext/standard/tests
msg_ctime The time that the queue was last changed.
msg_get_queue() returns an id that can be used to access the System V message queue with the given key.
msg_lrpid The pid of the process that received the last message from the queue.
msg_lspid The pid of the process that sent the last message to the queue.
msg_perm.gid The gid of the owner of the queue.
msg_perm.mode The file access mode of the queue.
msg_qbytes The maximum number of bytes allowed in one message queue.
msg_qnum The number of messages waiting to be read from the queue.
msg_receive() will receive the first message from the specified queue of the type specified by desiredmsgtype.
msg_remove_queue() destroys the message queue specified by the queue.
msg_rtime The time that the last message was received from the queue.
msg_send() sends a message of type msgtype (which MUST be greater than 0) to the message queue specified by queue.
msg_set_queue() allows you to change the values of the msg_perm.uid, msg_perm.gid, msg_perm.mode and msg_qbytes fields of the underlying message queue data structure.
msg_stat_queue() returns the message queue meta data for the message queue specified by the queue.
msg_stime The time that the last message was sent to the queue.
mtime Checksum in the middle...
multi line heredoc string
multi query
multicodepoint entities
multiline heredoc string
multiple car as glue
multiple elements
multiple existence of needle in haystack
multiple key
multiple layers
multiple separators
multiple spaces
multiplier has to be  greater than or equal to 0.
multiplier has to be greater than or equal to 0.
must be allowed
must not recurse
must not yield anything
must return NULL
must return false
my doc comment
myA has myB, comleting the cycle
myB attaches myC
myC has a referece to myA
mysql_driver.c
mysql_fetch_row() fetches one row of data from the result associated with the specified result identifier.
mysql_list_dbs()  This function should be needed, since PostgreSQL connection  binds database.
mysql_list_fields()  See also pg_meta_data().
mysql_list_tables()
mysql_query() will also fail and return FALSE if the user does not have permission to access the table(s) referenced by the query.
mysqli will use the default 3306
mysqli.default_socket requires non-empty string
mysqli_change_user() is automatically called on connections opened from the connection pool.
mysqli_fetch_lengths() is valid only for the current row of the result set.
mysqli_kill() "trick" does not work for any of the following because of an E_COMMANDS_OUT_OF_SYNC
mysqli_ping() cannot be tested, because one would need to cause an error inside the C function to test it
mysqli_poll() is then used to get results from such queries.
mysqli_real_connect()
mysqli_stmt_free_result() closes any open cursor.
mysqli_stmt_num_rows() - 1).
mysqli_stmt_reset() also closes any open cursor before preparing the statement for re-execution.
mysqli_store_result() and mysqli_use_result() cannot be tested, because one would need to cause an error inside the C function to test it Check that none of the above would have caused any error messages if MYSQL_REPORT_ERROR would not have been set.
mysqli_store_result() returns FALSE in case the query didn't return a result set (if the query was, for example an INSERT statement).
mysqlnd is a bit more verbose than libmysql.
mysqlnd makes a connection created through mysql_init()/mysqli_real_connect() always a 'persistent' one.
mysqlnd only
mysqlnd only option m - trace memory allocations
mysqlnd returns native types
mysqlnd will give 2014 as a follow-up of the fallback logic libmysql will give a little more precise 2030 error code However, you get an error and the big question is what happens to the line
mysqlnd: force seperation - create copies
n stands for number of characters processed so far.
name The name of this column as returned by the database.
name for generics (type variables)
nameLengthB0
namespace HH
namespace keyword
namespaced class name
natcasesort() is a case insensitive version of natsort().
native types - int
need a bigger string, with big output
need to fetch the value twice because under common config settings object are serialized on first store and APCObject (APCCollection) are created on second fetch
needed for PostgreSQL
needle and haystack are examined in a case-insensitive manner.
needle as NULL
needle as a first word of haystack
needle as haystack
needle as haystack needle string containing one existing and one non-existing char
needle as heredoc string
needle as int(ASCII value of "*")
needle as int(ASCII value of '*')
needle as null string
needle as second word of haystack
needle as single char
needle as special char
needle overlaps in haystack
needle position is counted from the beginning of haystack.
needle should be found
negate values
negative  values as permission
negative 'pad_size'
negative 'pad_size' sub array
negative 'pad_value'
negative DateInterval
negative float value
negative init value
negative integer
negative steps
negative value
negative values
negative/posative integer array
negative/posative integer key value array
negative/posative integers array
negative/positive integers array
nested FV's
neutral (UTF-8)
never reached
new file size, should be same as before truncating delete all files created
new flag ON_UPDATE_NOW_FLAG (8192)
new line chars embedded in strings
new line nulls
new line to separate the output between each element
new mandatory arg is not ok
new object created
new self() will do the same thing as new C() above
new stat of the file, after a softlink to this file is created
new static() will produce the expression dependent type `static.
next add plain text part
next prime number greater than -1000
next prime number greater than 10
next() behaves like current(), with one difference.
nice, we have a transactional engine to play with
nl_langinfo() is used to access individual elements of the locale categories.
no __call, we have access
no auto increment column
no auto_increment column
no break (cumulative multiplier)
no break, but then none is really needed either
no break, so control drops into next label's "group"
no catch block(s)
no chance to return int with the current PDO version - we are forced to return strings
no characters in second Argument
no checks on number of args
no compression
no data members
no date was parsed, so no errors
no db response  Code: 5  This may not even be an error, for example, the database command "shutdown" returns no response.
no default value, return NULL
no documents given  Code: 6 You're attempting to batch insert an empty array of documents.
no elements in doc  Code: 4  You're attempting to save a document with no fields.
no entries, never flushed
no functions defined on this file
no hostname, no port
no input variables bound
no inverse, outputs nothing, result is FALSE
no length and allowable tags provided, reads entire file
no longer set
no magic getters
no member functions
no member(s)
no message for any PDO call but...
no need for parens
no need to check the return value, will bail and make EXPECTF fail if need be
no needle should be found
no new message
no parameter
no real parser - any excotic setting can fool us
no result set, just output parameter
no result set, one input parameter, output parameter yes, I really do not want to bind input values...
no result set, one input, one output parameter
no result set, one output parameter
no return statement, so when included, int(1) is returned
no segfault if this is commented out
no substitution
no suffix provided
no toString() method defined
no warning, but refers to different variable
no we must have removed them at some point - for BC, weakening the test
no worries - server might not support it
no, still bails out
no-such-property error handling goes here
no_index_used bad_index_used flushed_normal_sets flushed_ps_sets explicit_close implicit_close disconnect_close in_middle_of_command_close explicit_free_result implicit_free_result explicit_stmt_close implicit_stmt_close
non context resource
non existing dir
non existing file
non existing filename
non freed resultset
non freed stamement
non newtypes can't have constraints
non scalars that are unset
non stream context resource
non trivial tests require a message list for parent-child communication
non-Gregorian calendar that is locale-defined, required by ICU
non-PHP licenses
non-ascii characters
non-empty string prefix
non-existant element going in
non-existant variable going in
non-existent needle in haystack
non-existing file or dir
non-existing filename
non-existing linkname
non-existing needle in haystack
non-integer type of data resource type variable
non-leap year
non-long indexes
non-numeric offsets
non-persistent connection
non-root one
non-strict mode
non_result_set_queries - DDL
non_scalar values, objects, arrays, resources and boolean
none of the interfaces that exist are safe to use since technically any user code could implement them and the lazyiterables in hack do not follow the same rules.
nonexistent abstract class method
nonexistent function
nonexistent instance method
nonexistent interface method
nonexistent static method
nonexisting connect.
nonexistinghost add server.
nope: force explicit cast to int or string
nope: no strings, even numeric
nope: object
nope: string
nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
normal operation
normal sets
normal string
not a FCallAwait
not a doc comment
not all MySQL Server versions and/or engines might support the type
not allowed -- should desugar to X
not an uploaded file
not cgi spec to put query string on command line, but used by a couple tests to catch a security hole in older php versions.
not derived from Exception
not doc comment
not entirely sure why, but this if statement is needed to trigger an error in a naive implementation of the trivial strict equality check
not exactly what the bug is about, but closely related problem:
not following strict standards
not found, its a function
not found, private member
not in plan already and eligible for inclusion
not necessary, just to show the error sooner
not null because inheritance
not reached
not what a human might actually expect.
note -- will always be null as DOMConfiguration is not implemented in PHP
note that a label must always precede a statement
note that gzclose is an alias to fclose.
note that gzeof is an alias to gzeof.
note that gzgets is an alias to fgets.
note that gzpassthru is an alias to fpassthru.
note that gzread is an alias to fread.
note that the data types are different
note that there is no savepoint my...
note the differences in the array keys
nothing created
nothing else.
nothing found
nothing should be escaped, it's a valid gbk character
nothing to do
notice this exceeds 32 bits
now a valid query
now check the size of unset variable when different modes are given
now close the file
now compare the real stream with the user stream
now delete the surdir and file and record the stat
now file pointer at end
now handle a SKIPIF section
now has 5 elements
now new stat of the dir after file is created
now point to 2
now point to 3
now really quit it
now second element
now test redis session handler on that port we expect not able to connect error, but no other warnings or notices
now the first and the last one
now the isset() with both the args as unset
now the property is the only reference
now the same with a class that defines the property itself, that should give the expected strict warning.
now the same with a class that defines the property itself, too.
now the same with emulated PS
now the same with native PS
now try values that don't fit in long, on 32bit, new types should be sent or 0 will be inserted
now unlink file
now we do the test for a fatal error
now we need to find the location of web index file
now we should try mysqli_stmt_reset()
now we will try to unset these variables
now, let's have two columns of different type and do type juggling
now, lets check the server variables
null (because PHP)
null argument
null array test
null as return value
null because no inheritance, so no access to protected member
null heardoc string
null here doc string
null heredoc string
null operand
null prefix
null statement
null test passing not exist and exist at the same time
null test px (millisecond expiration time)
null true if not exist with expiration
null values
null vlaues
null will convert to this and do what we expect
nullable arguments
number of formats in format strings not matching the no of variables
number of remaining entries in the table
numeric array
numeric as string
numeric assoc.
numeric in the form of string
numeric keys
numeric string
numeric value as glue, pieces as array containg sub array
numeric values
numerical assoc indices
numerics in the form of string
o - the argument is treated as an integer, and presented as an octal number.
ob_end_clean(), ob_end_flush(), ob_clean(), ob_flush() and ob_start() may not be called from a callback function.
ob_get_clean() essentially executes both ob_get_contents() and ob_end_clean().
ob_get_flush() flushes the output buffer, return it as a string and turns off output buffering.
ob_get_status() returns status information on either the top level output buffer or all active output buffer levels if full_status is set to TRUE.
ob_gzhandler() determines what type of content encoding the browser will accept and will return its output accordingly.
ob_implicit_flush() will turn implicit flushing on or off.
object data
object declaration
object for 'input' argument
object of given type
object value
object variable
object which is unset
objects have the same resource, but they are not the same object.
objects of different classes
obscene high gid
octal as integer
octal integer data
octal integers
octal number
octal numeric string
octal representation
octal type variations
octal value
octal value of 83
octal values
of  bytes are read.
of args (ie.
of arguments
of arrays than callback function argument
of bytes to be read.
of elements in the input array 3.
of throw clause
official test vectors
offset around 10 years
offset around 25 years (can't do much more reliably with strtotime)
offset around 6 months
offset around 7 days
offset around a day
offset as negative value
offset as string, converts to zero
offset to large
offset value variations with length values
offset value, length value and preserve_key values variation
offsetSet is used for modifying an existing file, or adding a new file to a tar/zip archive.
offsetUnset is used for deleting an existing file, and is called by the unset() language construct.
ok raise a fatal:
ok tests methodIndexLookup and this variety of dynamic calls trying to exhause f_call_user_func_array cases
ok to "override" a trait private function with a visibility expanding *consistent* implementation
ok, 'type' is context sensitive
ok, because we might not be allowed to do this
ok, great we can create a file with a DSN in it
ok: typechecker catches it
ok: typechecker validates it
okay then php
okay to access const via class
okay to access instance property via instance
okay to access static method via class
okay to use a string containing class name
old server is gone
omit 1st and 3rd expressions
omit 2nd operand
omit all 3 expressions
on collision, last entry wins
on directory
on mysqlnd level this would not be allowed
on output this means output encoding fails.
on windows, time_sleep_until has millisecond accuracy while microtime() is accurate to 10th of a second.
one blank line
one can pass classes as arguments
one more than the expected number of arguments
one result set
one valid argument
only base name matters
only builtins set this
only caught by typechecker
only constructors can promote parameters
only if there is a reason
only invalid
only multi-dimensional array
only public, private or protected allowed
only reference to obj is in the closure
only special chars
only the local copy is changed
only-headers
opcode handlers by code
opcode helpers by name
opcode name to code mapping
open existent directory
open file for reading
open file in each access mode and get meta data
open in append mode
open the directory
open the directory with invalid path
open the directory with valid paths
open the file
open the file for reading
open the file in different modes and check the working of fgetc
open the file instead of directory
open the same directory again without closing it
openfiles One more than the maximum number of open file descriptors.
opening a file
opening file again in read mode
opening file for read
opening file in r/w mode
opening file resource type
opening the file "a" mode
opening the file "ab" mode
opening the file "at" mode
opening the file "w" mode
opening the file "wb" mode
opening the file "wt" mode
opening the file for reading
opening the file in "r" mode
opening the file in "rb" mode
opening the file in "rt" mode
opening the file in different modes
opening the file in different read modes
opening the non-existing file in "x" mode, file will be created
opening the non-existing file in "xb" mode, file will be created
opening the non-existing file in "xt" mode, file will be created
openlog() Facilities Constant Description     LOG_AUTH  security/authorization messages (use LOG_AUTHPRIV instead in systems where that constant is defined) LOG_AUTHPRIV security/authorization messages (private)   LOG_CRON clock daemon (cron and at)   LOG_DAEMON other system daemons LOG_KERN kernel messages   LOG_LOCAL0 ...
openlog() Options    Constant Description     LOG_CONS  if there is an error while sending data to the system logger, write directly to the system console    LOG_NDELAY  open the connection to the logger immediately LOG_ODELAY  (default) delay opening the connection until the first message is logged    LOG_PERROR print log message also to standard error   LOG_PID include PID with each message     You can use one or more of this options.
opens a regular connection
openssl 1.0 prepends the string "Full Name:" to the crlDistributionPoints array key.
openssl_csr_export() takes the Certificate Signing Request represented by csr and stores it as ascii-armoured text into out, which is passed by reference.
openssl_csr_export_to_file() takes the Certificate Signing Request represented by csr and saves it as ascii-armoured text into the file named by outfilename.
openssl_csr_new() generates a new CSR (Certificate Signing Request) based on the information provided by dn, which represents the Distinguished Name to be used in the certificate.
openssl_csr_sign() generates an x509 certificate resource from the given CSR.
openssl_error_string() returns the last error from the openSSL library.
openssl_free_key() frees the key associated with the specified key_identifier from memory.
openssl_get_privatekey() parses key and prepares it for use by other functions.
openssl_get_publickey() extracts the public key from certificate and prepares it for use by other functions.
openssl_open() opens (decrypts) sealed_data using the private key associated with the key identifier priv_key_id and the envelope key env_key, and fills open_data with the decrypted data.
openssl_pkcs7_encrypt() takes the contents of the file named infile and encrypts them using an RC2 40-bit cipher so that they can only be read by the intended recipients specified by recipcerts.
openssl_pkcs7_sign() takes the contents of the file named infilename and signs them using the certificate and its matching private key specified by signcert and privkey parameters.
openssl_pkcs7_verify() reads the S/MIME message contained in the given file and examines the digital signature.
openssl_pkey_export() exports key as a PEM encoded string and stores it into out (which is passed by reference).
openssl_pkey_export_to_file() saves an ascii-armoured (PEM encoded) rendition of key into the file named by outfilename.
openssl_pkey_get_details() segfaults when getting the information from openssl_pkey_new() with an empty sub-array arg
openssl_pkey_new() generates a new private and public key pair.
openssl_private_decrypt() decrypts data that was previous encrypted via openssl_public_encrypt() and stores the result into decrypted.
openssl_private_encrypt() encrypts data with private key and stores the result into crypted.
openssl_public_decrypt() decrypts data that was previous encrypted via openssl_private_encrypt() and stores the result into decrypted.
openssl_public_encrypt() encrypts data with public key and stores the result into crypted.
openssl_seal() seals (encrypts) data by using RC4 with a randomly generated secret key.
openssl_sign() computes a signature for the specified data by using SHA1 for hashing followed by encryption using the private key associated with priv_key_id.
openssl_verify() verifies that the signature is correct for the specified data using the public key associated with pub_key_id.
openssl_x509_checkpurpose() examines a certificate to see if it can be used for the specified purpose.
openssl_x509_export() stores x509 into a string named by output in a PEM encoded format.
openssl_x509_export_to_file() stores x509 into a file named by outfilename in a PEM encoded format.
openssl_x509_free() frees the certificate associated with the specified x509cert resource from memory.
openssl_x509_parse() returns information about the supplied x509cert, including fields such as subject name, issuer name, purposes, valid from and valid to dates etc.
openssl_x509_read() parses the certificate supplied by x509certdata and returns a resource identifier for it.
optional arg is ok
optional functions
options for the curl handler
or .., otherwise FALSE
or FALSE if needle is not found.
or simply by using any other node.
order changes per machine
originally based on ext/standard/tests/file/stream_rfc2397_001.phpt
originally based on ext/standard/tests/file/stream_rfc2397_003.phpt
originally based on ext/standard/tests/file/stream_rfc2397_005.phpt
originally based on ext/standard/tests/file/stream_rfc2397_006.phpt
originally came from ext/standard/tests/general_functions/include_path.phpt
os: IANA number designating the Operating System on the machine referenced by this record.
other operators
other php outputs Permission Denied, p8 outputs no suck file or dir
other php.net bug outputs message File Exists
other prefixes
other types in a array
other types in an array
otherwise just use the offset.
our central interop server, where we can get the list of endpoints
our local endpoint, will always get added to the database for all tests
out of boundary integers
out of range
out of range, three warnings
output a table of squares
output is in degrees
output of this goes through 2xml
output the picture to a file
outside of range int data
outside of whence range
overload fn with same visibility
override calendar's timezone
override count to force failure
override heap to force corruption by throwing exception in compare
override message
override message and code
overrides base::b2()
overrides both offsetExists and offsetGet
overrides only offsetExists
overrides only offsetGet
overrides only offsetGet and offsetSet
overrule autocommit
overwrite data in middle of the file
overwrite first 400 bytes in the file
overwrite results and check if the cache magic works
own CharacterData, Comment
owner has read only, group and others have no permission
owner has read only, other and group has rwx
owner has rw only, group and others have no permission
owner has rw only, group has no permission and others have rwx
owner has rw only, other and group has rwx
paddingLength
param missing
param not a ressource
parameter This doc comment block generated by idl/sysdoc.php
parameter checking tests will be the same as fclose
parameter checking tests will be the same as fpassthru
parameter checking tests will be the same as fread
parameter checking tests will be the same as gzeof
parameter checking tests will be the same as gzgets
parameter substitution
parameters of helpers
parens are optional
parent class for preconditions
parent could be non-namespaced or be namespaced So get through all T_NS_SEPARATOR and T_STRING Last T_STRING before T_WHITESPACE will be parent name
parent name
parse all these files
parse error
parse error: expected expression
parse only .c and .cpp files
parse_ini_file() loads in the ini file specified in filename, and returns the settings in it in an associative array.
parse_ini_string() returns the settings in string ini in an associative array.
parses the sources and fetches its vars name, type and if they are initialized or not
parsing __CLASS__, __TRAIT__ and __FUNCTION__ tokens
parsing __FILE__ token
parsing __LINE__ and __METHOD__ tokens
parsing should not get confused by chr(0)
partial.php
partially checked
partially typed array
partially typed return value
partially typed return value used here
pass uid without setting FT_UID option
pass-by-value creates second alias to first point
passed an array of referenced variables 2.
passing NULL has no effect
passing an invalid type to set
passing array_fill() as the 'val' argument in array_fill() function
passing by reference explored further
passing different double quoted strings as 'str' argument to str_split() split_length is set to 7
passing different double quoted strings for 'ending' argument to chunk_split() here 'chunklen' is set to 6.5
passing different heredoc strings as 'ending' argument to chunk_split()  'chunklen' argument is set to 10
passing different integer values for 'chunklen' and heredoc string for 'str' to chunk_split()
passing different integer values for 'split_length' and heredoc string as 'str' argument to str_split()
passing different integer values for 'split_length' argument to str_split()
passing different single quoted strings as 'str' argument to str_split() split_length is set to 5
passing different single quoted strings as 'str' argument to the function 'chunklen' is set to 7 and 'ending' is '):('
passing different single quoted strings for 'ending' arguments to chunk_split() 'chunklen' is set to 9.2 for this testcase
passing different strings for 'ending' and heredoc string as 'str' to chunk_split() 'chunklen' is set to 6E0 for this testcase
passing invalid type arguments
passing long string as 'str' and testing default value of chunklen which is 76
passing more no.
passing more than required no.
passing the above condition may be the result of change in the system time.
passing zero argument
passwd The passwd element contains the group's password in an encrypted format.
passwd The passwd element contains the user's password in an encrypted format.
patched HHVM will issue a warning about double mailheader
path as spaces
path as well as suffix provided,
path containing numeric string
path to the php source tree
path with file extension and trailing slashes
path with only files and trailing slashes
path with spaces
pathinfo() returns an associative array containing information about path.
pathname as NULL
pathname as an array
pathname as boolean
pathname as member of array
pathname as members of object
pathname as object
pathname as spaces
pathname containing numeric string
paths and suffix given as same
paths with basename only suffix, with suffix removal
paths with binary value to check if the function is binary safe
paths with hostname:dir notation, with suffix variation
paths with numeirc strings
paths with numeric strings
paths with shortcut home dir char, with suffix variation
paths with suffix and trailing slashes with suffix removal
paths with suffix removal
paypal with Cyrillic spoof characters
pcntl_getpriority() gets the priority of pid.
pcntl_setpriority() sets the priority of pid.
pdo_transaction_transitions should check this as well...
pdo_type The type of this column as represented by the PDO::PARAM_* constants.
pecl sapi and extensions
perform some cleanup
perform tests
perform the read file at least 6 char and check
performs dfs over the heap graph, starting from the given edges.
performs dfs over the heap graph, starting from the given nodes.
permissions are given as 2's complement of octal equivalent of 7777
permissions will be given as 2's complement form of -0777
permissions will be given as 2's complement form of -07777
permissions will be given as ocatal equivalent value of 0x777
permissions will be given as octal equivalent value of 777
permissions will be given as octal equivalent value of 7777
persistent connections cannot be closed but only be killed
pg_escape_bytea() test
pg_escape_literal/pg_escape_identifier
pg_escape_string() test
pgtextreverse
pgtextshort
php generates permission denied, we generate No such file or dir.
php.ini to use when executing php
php5 has this, we don't use it
php://input is backed by a MemFile
php_uname() returns a description of the operating system PHP is running on.
phpinfo() is also a valuable debugging tool as it contains all EGPCS (Environment, GET, POST, Cookie, Server) data.
pices as associative array (numeric values)
pices as associative array (string/numeric values)
piece together a windows binary distro
pieces as NULL array
pieces as array containing sub array
pieces as array with strings values
pieces as arry with numeric values
please don't shorten this test.
point to a non-existent directory
pointless, but I need more documentation
polyndrome strings
populate array with 'default' keys in reverse order
populate new method record
populate reading material
populate the file with lines of data
port - optional TCP port number, default is the default port for that service flags - optional flags, see following table.
portability-wise, you may only bindColumn()s after execute() has been called at least once
positional args should be typechecked
positive 'pad_size'
positive 'pad_value'
positive DateInterval
positive float value
positive integer
positive value
positive values
posix_access() checks the user's permission of a file.
posix_getrlimit() returns an array of information about the current resource's soft and hard limits.
posix_mkfifo() creates a special FIFO file which exists in the file system and acts as a bidirectional communication endpoint for processes.
posotive steps
pre-fetched
precision The numeric precision of this column.
precision can also be negative or zero (default).
prefix with path separator of a non existing directory
preg_filter() is identical to preg_replace() except it only returns the (possibly transformed) subjects where there was a match.
prepare a holder for the test results
prepare stmt
prepend file:// as git refuses to do a shallow clone of 'local' repos
prepend the "glob://" prefix if it isn't there
pretty dump test, but that is the best way to mimic mysql.c
prev() behaves just like next(), except it rewinds the internal array pointer one place instead of advancing it.
prevent notice
primary key
primitives are ok
print all children
print directly
print file pointer position before read
print results based on info in global variables
print test results
print the ascii character, same as chr() function
print the file contents
print the hearder
print, this is found set the found locale as current locale
print_r() displays information about a variable in a way that's readable by humans.
print_r(), var_dump() and var_export() will also show protected and private properties of objects with PHP 5.
printing the input array before the shuffle operation
printing the input array to check that it is not affected  by above shuffle() function calls
printing the input array with integers before the shuffle operation
printing the input array with strings before the shuffle operation
prints "Hello, hello" in HPHP, but we disallow it because we don't like interpolated nested expressions
prints int(3)
prints int(7)
prints string(8) "Info: 12"
prints the return value from shuffle() function
private constructor
private doesn't matter
private function __destruct()
private property
probably a prime
proc_close() is similar to pclose() except that it only works on processes opened by proc_open().
proc_close() waits for the process to terminate, and returns its exit code.
proc_get_status() fetches data about a process opened using proc_open().
proc_nice() changes the priority of the current process by the amount specified in increment.
proc_nice() is not related to proc_open() and its associated functions in any way.
proc_open() is similar to popen() but provides a much greater degree of control over the program execution.
proc_terminate() allows you terminate the process and continue with other tasks.
proc_terminate() returns immediately and does not wait for the process to terminate.
process all args for that level
process all traceback levels
process command line args
process file
process one traceback level
property This doc comment block generated by idl/sysdoc.php
protect against missing data
protected property
proto bool function_exists(string function_name) Function is implemented in Zend/zend_builtin_functions.c
proto bool ob_end_clean(void) Function is implemented in main/output.c
proto bool ob_get_clean(void) Function is implemented in main/output.c
proto float acos(float number) Function is implemented in ext/standard/math.c
proto float acosh(float number) Function is implemented in ext/standard/math.c
proto float asin(float number) Function is implemented in ext/standard/math.c
proto float asinh(float number) Function is implemented in ext/standard/math.c
proto float atan(float number) Function is implemented in ext/standard/math.c
proto float atanh(float number) Function is implemented in ext/standard/math.c
proto float cos(float number) Function is implemented in ext/standard/math.c
proto float cosh(float number) Function is implemented in ext/standard/math.c
proto float deg2rad(float number) Function is implemented in ext/standard/math.c
proto float log10(float number) Function is implemented in ext/standard/math.c
proto float rad2deg(float number) Function is implemented in ext/standard/math.c
proto float sin(float number) Function is implemented in ext/standard/math.c
proto float sinh(float number) Function is implemented in ext/standard/math.c
proto float sqrt(float number) Function is implemented in ext/standard/math.c
proto float tan(float number) Function is implemented in ext/standard/math.c
proto float tanh(float number) Function is implemented in ext/standard/math.c
proto int ob_get_length(void) Function is implemented in main/output.c
proto int time(void) Function is implemented in ext/date/php_date.c
proto void flush(void) Function is implemented in ext/standard/basic_functions.c.
provoke an error to check if mysql_ping resets it
provoke an error to check if mysqli_ping resets it
public constructor not allowed
public property
public static property
push default reference score
put a side effect in the 1st operand
query with 0 rows
quote a non re portion of the string
raise a warning
re-assign reference variable to different value
read 14 Bytes from the WebP-File, that contains the header
read a char
read again to struck EOF
read all into cache
read an array
read an array with the filename
read an array, fails
read an invalid cert, fails
read cert as a binary string
read cert as a filename string
read cert as a string
read cert from a filename string
read cert from a resource
read charecter from different files which are opened in different modes
read data from the file and check, file pointer position, feof etc
read entire file and strip tags
read entire file and strip tags tags
read file by giving size more than its size
read file by giving the acutal length, check the length and content by calculating the  hash using md5() function
read from closed file
read from fie using fgetc, file opened using different read read modes
read from file
read from file, at least 7 chars
read from file, by giving the file actual size,
read more data than is available
read outstanding data
read rest of the line
read the header
read the line which is without csv fields, provide delimiter and see the working of fgetcsv
read the next 10
read to the end of the file
read with length beyong file size
readfile() on hard link
readfile() on soft link
reading 1000 bytes from file, expecting 1000 bytes
reading 1030 bytes from file, expecting 1024 bytes
reading data from the file after flushing
reading different data from file using different formats
reading file by giving less than its size
reading file when file pointer at end
reading the contents of the file after flushing
reading the data from the file
reading the values from file using different char formats
reading the values from file using different float formats
reading the values from file using different formats formats
reading the values from file using different hexa formats
reading the values from file using different integer formats
reading the values from file using different octal formats
reading the values from file using different scientific formats
reading the values from file using different string formats
reading the values from file using different unsigned formats
reading the values from file using different unsigned int formats
readlink() does the same as the readlink C function.
real_data_* get incremented after mysqli_*fetch*()
realpath() expands all symbolic links and resolves references to '/./', '/../' and extra '/' characters in the input path and return the canonicalized absolute pathname.
realpath() returns FALSE on failure, e.g. if the file does not exist.
rearange the array
reconstruct a script (without open/close tags) from the token array
record the extension that the function belongs to
recursive reference
red dashed lines
redec class gen
reduce visibility to future, derived classes
reduction tests
redundant grouping parens
reenable cloning
reenabling should fail
reference array
reference passing
reference variable
reference variables
refresh msg numbers
refresh: Refresh interval (seconds) secondary name servers should use when updating remote copies of this domain.
reg * const
reg - const
regardless of that, the test always crashes every time.
regular array
regular file name
regular string
regular strings
relative bad path
relative bad path (note p8 msgs differ)
relative paths
relative test
release stringdata
remove all files in directory so can remove directory in CLEAN section
remove all permissions from dir
remove an item
remove comments (but preserve the number of lines)
remove execute permission from 2nd parent and test scandir()
remove existing license
remove file
remove files while going through directory
remove first element from array
remove hashbang
remove it from this instance
remove last element from array, rewind and check end()
remove non-ASCII chars
remove one alias from second point
remove only alias from first point, so destructor runs
remove only alias from point, so destructor runs
remove only alias from second point, so destructor runs
remove only alias from third point, so destructor runs
remove second (and final) alias from second point, so destructor runs
remove temp files
remove the directory structure
remove the execute permission from the parent dir and test scandir() on child dir 1.
remove the execute permisson from parent dir, allowing all permission for sub dir
remove the file
remove the property "color"
remove the temp file
remove the write and execute permisson from sub parent
remove write permission from file
removeKey allows unsetting any key, but it still must be statically known
removed, crash too
rename dirs across directories
rename files across directories
rename the link to a new name in the same dir
rename the src dir to a new dir in dest dir
renaming a directory
renaming a directory to numeric name
renaming a file
renaming a file and check stat
renaming a link
renaming existing file to numeric name
repeat check with full switch
repeat the data a few times so that it grows larger than the default cache chunk size and that we have something to seek around...
replace the string in array
report non-silenced errors
reports an error, according to its level
reproducing a memory leak (3/26/09)
request to unset a declared accessible is OK
request to unset a non-existent is ignored
request to unset an inaccessible is ignored
requestIdB0
requestIdB1
require Circle.inc to get at the Circle class type, which in turn uses the Point type
require a file that has a return statement with a return value
require a file that has a return statement without a return value
require a file that has no return statement
require all sub iterators to be valid in iteration
require an existing file
require an existing file.
require another existing file that has its own namespace
required by most modern LDAP servers, use LDAPv3
reschedule to the lowest priority
reset for printing
reset pointer, start again on step one
reset the internal pointer to first element
reset the status to zero
reset value in case implicit conversion was successful
reset() rewinds array's internal pointer to the first element and returns the value of the first array element.
resize and negative value
resolve from use
resolve from use as
resolve fully qualified
resolve in global namespace
resolve in namespace
resolve runtime lookups
resolve runtime lookups with inheritance
resource  variable
resource data
resource type variable
resource value
resource var
resource variable
resource variable in string form
resource variable(dir and file handle)
responsibility of subclasses
responsibility of using class
responsibility of using class, see chown_privates
restore detect_order to 'auto'
restricting parent directory
result One of the CURLE_* constants.
result set object
result_set_queries statistics
results in 6
results in NULL
results in the int 3 rather than the float 3.333...
retrieve all endpoints now
retrieve data
retrieve endpoints from the endpoint server
retrieve the results and put them into the endpoint info
retrieving htmlentities from the ANSI character table
retrieving htmlspecialchars from the ANSI character table
retry: Length of time (seconds) to wait after a failed refresh before making a second attempt.
return all the locale found in the system
return all the locale found in the system, except for broken one
return by reference protected function __destruct()
return byRef
return length - 1 always, expect false test invalid arguments : non-resources
return mime type ala mimetype extension
return string value
return the count of member variables in the object
return the key and value at index i for this container
return the size of the given container
return type
return type is an array
return undefined variable
return value not used
return without a value, so when included, NULL is returned
returning NULL for closures
returns A2 in WSDL
returns an array containing a record for each defined method.
returns an iterator of the appropriate type
returns current locale,after executing setlocale().
returns current locale,before executing setlocale() .
returns current locale,before executing setlocale().
returns element count in the resulting array after arguments are pushed to  beginning of the given array
returns element count in the resulting array after arguments are pushed to beginning of the given array
returns the key and value at given index
returns the length of a given string
returns the shape containing the full type information for this type constant.
rewind on a file handle which is already closed
rewind on a file handle which is unset
rewind the file and read the file  line by line with allowable tags
rewind the file pointer to beginning of the file
rewind the file pointer to bof
rewind the file so that for every foreach iteration the file pointer starts from bof
right-justification with spaces
rijndael128 is a block cipher of 128 bits (16 bytes)
rname: Email address of the administrative contain for this domain.
root namespace
root privileges are required to raise the msg_qbytes values above the system defined limit.
roundtrip with raw object
rss The maximum number of virtual pages resident in RAM maxproc The maximum number of processes that can be created for the real user ID of the calling process.
rubbish after the 'x:' prefix
run a single set of tests using above options
run all tests, ignore above options
run code on two command lines and look for differences
run diagnostic checks against one var.
run tests on a function.
run the command 'locale -a' to fetch all locales available in the system
run the command application
run the endpoint test
run-tests cannot test for a multiple Vary header
run-tests, I love you for not allowing me to set ini settings dynamically
runtime lookup
s - the argument is treated as and presented as a string.
same as COUNT_NORMAL
same as COUNT_RECURSIVE
same as above
same as above, using integer
same as doing 'a' instead of 0
same as first example but the array created contains everything that is NOT matched but the regex (matches three)
same but OO interface
same id as finally
same test, with no reference to callback
sanity check with a virgin phar.zip
save new endpoints into database
save the wire
saveHTML() should not add a default doctype when LIBXML_HTML_NODEFDTD is passed
scalar argument
scalars that are unset
scientific notation
script name
script to upgrade PCRE.
search for resouce type in the resource array
second args a integer
second args as NULL
second args as boolean
second args as float
second args as string
second argument charlist as null - does not trim any white spaces
second code point
seconds to run any individual test for any framework
see about ...::class
see about :: in interfaces
see also hphp/hack/hhi/stdlib/builtins_tokens.php
see hphp/runtime/vm/bytecode.h:kMaxBuiltinArgs
see if included file can access including file's variables, and if including file can access the included file's functions and variables
see if internal pointer is in same position as referenced array
see if internal pointer is in the same position from when accessing this inner array
see if we're rounding negative numbers right
see mysqli.c for details
see pdo_mysql_stmt_unbuffered_2050.phpt for an explanation
see what happens if I jump into a if statement
seek forwards 20 bytes.
seek to end of the file and try fgetc()
seek to end of the file and try fgets()
seek to start of file
seek to the end which is not sensible of course.
segfault here
segmentation fault
select from dual - pseudo table
select from existing table
self compile time lookup
self::X cannot be resolved
self::class is the 'use'r class at runtime
sem_acquire() blocks (if necessary) until the semaphore can be acquired.
sem_get() returns an id that can be used to access the System V semaphore with the given key.
sem_release() releases the semaphore if it is currently acquired by the calling process, otherwise a warning is generated.
sem_remove() removes the given semaphore.
send row to parent
sentence as ending string
separate testcase for str_ireplace() off-by-one
separate_zval_if_not_ref
separator for optional parameters
sequence point
serialization and not var_dump preserves whether keys are ints or strings
serialization of FS literals
serialization of FV literals
serialize an empty new object
serialize and unserialize
serialize defaults to TRUE which means that the message is serialized using the same mechanism as the session module before being sent to the queue.
serialize result
server and/or engine might not support the data type
server knows about it
server or engine might not support this
server should have the form:    The connection string always starts with mongodb://, to indicate it is a connection string in this form.
session_badconf_emptyprefix from pecl extension
session_badconf_prefix from pecl extension
session_basic.php from pecl extension tests
session_id initialisation
session_id() needs to be called before session_start() for that purpose.
session_save_path() needs to be called before session_start() for that purpose.
set URL and other appropriate options
set after client error
set config into environment, this allows executed tests to find out about the test configurations.
set default for non stored class name
set dynamic invisible property
set dynamic property
set dynamic property to an instance having a destructor
set file pointer to 0
set file pointer to eof
set it twice, checking if memory for the previous one is correctly freed
set locale to en_US.UTF-8
set of currency symbol according to above list of locales
set of locales to be used
set of possible flag values
set some options
set the 6th bit
set the background color to black
set the error handler, this is required as settype() would fail with catachable fatal error
set the file pointer to 0
set the file pointer to EOF
set the file pointer to eof
set the options
set the url we want to use
set the value ot a new one
set to access(creation time of the file) time
set to beginning of file
set to current system time
set to default handler
set to default value, with Invalid timestamps
set to new type
set up directory
set up environment
set up local endpoint
set up temp mailbox with  simple msgs
set up temp mailbox with 1 msg get an unset variable
set up temp mailbox with 1 simple msg
set up temp mailbox with 2 msgs
set up temp mailbox with 3 messages
set up temp mailbox with 3 msgs
set up temporary mailbox with one simple message
set visible property
set/get comparison
setAttribute used to disappear for no good reason.
setOption already throws a warning for bad values
setText resets the pointer
setlocale() to set all available locales in the system and check the success count
sets BG(CurrentLStatFile)
setting de interlace bit to off
setting the interlace bit to on
setting umask
setup for containers
setup temp mailbox
setup temp mailbox with 1 msg
shape with known and unknown fields, does not unify
shapes must have compile-time constant key names
shell The shell element contains the absolute path to the executable of the user's default shell.
shm_attach() returns an id that can be used to access the System V shared memory with the given key, the first call creates the shared memory segment with memsize and the optional perm-bits perm.
shm_detach() disconnects from the shared memory given by the shm_identifier created by shm_attach().
shm_get_var() returns the variable with a given variable_key, in the given shared memory segment.
shm_has_var() checks whether a specific key exists inside a shared memory segment.
shm_put_var() inserts or updates the variable with the given variable_key.
shm_remove() removes the shared memory shm_identifier.
shoud be available
should be an error
should be at the end and no notice
should be empty array, not null
should be equal to closing to my understanding
should be error
should be ignored
should be quivalent to octal 1
should be readonly (PHP compatibility)
should be separated, i.e. not reference anymore.
should be still string(1) "1"
should by unresolved type inside a typevar
should concatenate first and second title text nodes
should conflict
should constant propagate "heh" to here
should convert to (unsigned char)0
should do nothing
should error because parent::open hasn't been called
should error, because it's an array (used like a vector) containing strings
should fail
should fail, foo is missing
should fail, strict mode
should fail.
should fatal
should give error, not be the same as 255
should have no effect
should not error
should not output 'bar'
should not throw syntax errors
should now read dir1 file
should pass
should print 'zero' test static array
should reached the end
should read dir2 file
should read the dir1 file
should read the file in script dir
should read the file in working dir
should read the file in working directory
should read the working dir file
should return a notice that the constant is already defined
should return one value key pair with key being in lowercase
should return one value key pair with key being in uppercase
should return same length
should still read dir1 file
should still work
should succeed, weak mode
should throw
should throw syntax errors
should use Atlantic/Azores
should work
should work if the thread id is correct
should work...
shouldn't be able to do this.
shouldn't be displayed
show body for msg 1
show default value is NULL
show final result
show lengths to help triage in case of failure expected headers since its CGI
show or not
show that attempts to use a non-existent property cause one to be created even in the absence of the __set/__get machinery.
show that when elses are nested, an else matches the lexically nearest preceding if that is allowed by the syntax
shown if system does not have hstrerror
shows 'Hello'
sign specifier on a negative integer
sign specifier on a positive integer
simple array
simple array test
simple case with missing element
simple checks
simple checks with trailing slashes
simple class with a variable and method
simple class with members - variable and method
simple heredoc string
simple metadata check
simple parameter test
simple paths
simple paths (backslashes)
simple paths (forward slashes)
simple paths with trailing slashes
simple paths with trailing slashes (backslashes)
simple paths with trailing slashes (forward slashes)
simplified version of static
simulate __sleep not having a return statement or returning nothing
simulate blocking I/O
simulate phpunit
simulates blocking I/O
sin() returns the sine of the arg parameter.
single argument
single char
single char for needle
single character
single element
single line heredoc string
single quoted key
single quoted string
single quoted string value
single quoted strings
size of base dir
size of destination
size of destination after copy
size of destination before copy
size of file inside subdir
size of soft link fill data into file
size of source
size of source after copy
size of source before copy
size of subdir
size of the file
size of the source
size of the symlink itself
size value is more than the no.
size value is zero 4.
skip API version, phar flags, alias, metadata
skip a pointless test
skip body of the file
skip divide-by-zeros
skip empty blocks
skip results, don't fetch all from server
skip to end
skip two steps
skipping "./"
sleep for 5 seconds
sleep for a while to allow msg to be delivered
so compatible with it for now
so fgets will be called even if we are at the end of the file on last time to set the eof flag but it will fail to read.
so we run on different range of ports every time
socket_close() closes the socket resource given by socket.
socket_create_listen() creates a new socket resource of type AF_INET listening on all local interfaces on the given port waiting for new connections.
socket_create_pair() creates two connected and indistinguishable sockets, and stores them in fd.
socket_getpeername() may also return FALSE if the socket type is not any of AF_INET, AF_INET6, or AF_UNIX, in which case the last socket error code is not updated.
socket_getsockname() may also return FALSE if the socket type is not any of AF_INET, AF_INET6, or AF_UNIX, in which case the last socket error code is not updated.
socket_listen() is applicable only to sockets of type SOCK_STREAM or SOCK_SEQPACKET.
socket_read() returns a zero length string ("") when there is no more data to read.
socket_recv() can be used to gather data from connected sockets.
socket_recvfrom() can be used to gather data from both connected and unconnected sockets.
socket_select() accepts arrays of sockets and waits for them to change status.
socket_strerror() takes as its errno parameter a socket error code as returned by socket_last_error() and returns the corresponding explanatory text.
soft link cannot test hard links unless you are root.
soft link name used
solution: referencing the first element first:
some bogus usage
some builds of php do not support this, silence the warning
some code here
some comment
some cyrillic (utf8) comes here
some default seeks that will cause buffer/cache misses
some initial cases for the simplifier
some keys default, others not
some random tests used for debugging fast method call and various  invoke paths php53 means this feature cannot be tested under php 5.2
some short C-style comments interspersed with tokens
some simple examples
some undefined variable warnings
something found
something was created
sort the array, retain a temp.
sorting array_arg as whole array
sorting different strings: single quoted, double quoted and heredoc strings
sorting not supported for FV yet...
source filename of exception
source line of exception
source string must have fewer bytes then the smallest pattern above
source string must not have fewer bytes then the smallest pattern above
space as filename
space as key bool keys
space as linkname
special characters
special chars
special chars in string
special chars in strings
specify explicit key
specify explicit keys
specify testing
split so diff tool would pick me up
splits files in functions and calls the other functions
sscanf is a builtin that takes all additional args by ref.
sscanf() reads from the string str and interprets it according to the specified format, which is described in the documentation for sprintf().
stack The maximum size of the process stack, in bytes.
standard execution
standard integer representation
standard string output
start in list at this endpoint debug output
start invalid
start output buffering
start testing
start the buffering of next command to internal output buffer
start the test
start value variations with length values
start_element_handler and end_element_handler are strings containing the names of functions that must exist when xml_parse() is called for parser.
stat contains 13 different values stored twice, can be accessed using  numeric and named keys, compare them to see they are same
stat of the dir created
stat of the file created
stat of the link created
statement call  after close
static call
static is class-specific
static method
static not allowed in constants
static properties irrelevent for conversion purposes
static::class is the 'use'r class at runtime
status check
status of daylight saving time unknown
std iterator
stderr is a pipe that the child will write to
stdin is a pipe that the child will read from
stdout is a pipe that the child will write to
step should be given as a positive number.
still AKempty, checked
still messages for everything else
still need to close it, not to leave a zombie behind
still not fine
still present
still set, even though passed in by reference and unset
still shows 'Hello'
still works...
stime - system time used by the current process.
stmt object status test
stop: otherwise hoistability would create an infinite loop
store current directory
store resources in array
store resources in array for comparison
store resources in array for comparison.
store the data in a regular file so that we can compare the results
store the info
stored function
stored proc which returns one result set
stored proc which returns two result sets
storing size of symlink in a local variable
str_rot13 expects 1 param and returns NULL when passed 2 params.
strcoll() uses the current locale for doing the comparisons.
stream wrapper not found
stream_socket_pair() creates a pair of connected, indistinguishable socket streams.
stream_socket_recvfrom() accepts data from a remote socket up to length bytes.
stream_type (string) - a label describing the underlying implementation of the stream.
stream_wrapper_register() will return FALSE if the protocol already has a handler.
strict Bad because duplicate variables on LHS
strict Because of the ordering here, things will fail to load if we don't properly mark A and C as not being hoistable
strict Case not exhaustive, but we're casing on a newtype, so it is fine.
strict Copyright 2004-present Facebook.
strict Correct usage of Shapes::keyExists
strict Hacky replacement XHP base class for testing.
strict If a class is declared abstract final then it cannot contain any abstract type constants
strict Lurrrrrrrrrrrr
strict Make sure we block this trickiness:
strict Make sure we can't instantiate enums
strict Non-literal index
strict Nonexisting field in ad-hoc shape
strict Nonexisting field in declared shape
strict Nonexisting field in intersection of ad-hoc shapes
strict Nonexisting field in intersection of declared shapes
strict Not matching return type of keyExists
strict Reason for shape type should point to the last operation that modified it
strict Removing field from intersection of shapes
strict Removing field from shape
strict Should be fine.
strict Should fail because C2::FOO is really a bool
strict Should fail because FOO is a newtype
strict Should fail because bool
strict Should fail because foo isn't an int or a string
strict Should fail because it doesn't match
strict Should fail because no constraint
strict Should fail because string isn't a supertype of int
strict Should work because foo is an int
strict Since finale class cannot be overridden, that also means their type constants cannot be overridden.
strict Test a bunch of sequencing things that don't cause errors.
strict Test for interface trying to implement
strict Test of expression dependent type of local variable for foreach
strict Test of expression dependent type of local variable for switch/case
strict Test of expression dependent type of local variable for try/catch/finally
strict Test that we check constraints for the 'as' part of newtypes
strict The test proves that it is safe to allow the 'this' type as a public property.
strict This file test is a basic test that new class_id produces a expression dependent type.
strict This file test the expression dependent type associated with local variables
strict This file tests expression dependent types for locals variables when integration occurs
strict This is a more thorough test of the expression dependent type produced by the expression 'new Class()'
strict This is an example of a pattern I see being useful with type constants
strict This test that expression display ids are properly reset All hh_shows should report the same output
strict This tests that using the 'this' type as an argument to a public instance method is safe.
strict Too few arguments
strict Using 'this' as an argument is kind of strange.
strict error: abstract type const
strict error: non-existent class
strict error: non-existent type constant
strict exn stands for extensible
strict mode
strict option OFF
strict option ON
strict type checking
string argument
string array
string as return value
string const
string containing control character
string containing control characters
string containing escape char
string containing non-numbers /* strings containing one alphabetic character
string containing simalr chars
string containing single quote
string data
string key/value
string keys
string not FooString
string representation
string type variations
string values
string with a space
string with backslash characters
string with backslashes
string with double backslashes
string with double quotes
string with hexadecimal number
string with html and php tags
string with newline character
string with nul character
string with nul characters
string with numbers
string with single quotes
string with special characters
string with special chars
string with tab character
string with value "f1"
string without any characters that can be backslashed
string("11") is contained
string(...)
string(1) "b"
string(3) "bar"
string(3) "foo"
string(7) "testing"
string(8) "whatever" Seems returning false will be most appropriate.
string1 and string2 of same "stream" type
strings and concat
strings containing escape chars
strings containing numbers /* whole-numbers
strings containing quotes
strings containing white spaces
strings notation of permission,  wont work properly
strings to pass strtolower()
strings to pass strtoupper()
strings with different white spaces
strings with escape characters
strings with escape chars
strings with hexadecimal NULL
strings with octal NULL
strip all text nodes from this tree
strip off line terminator echo "len after rtrim:  " .
strip out prefix "convert.iconv."
strip white space and any "minus" signs
stripped-down version of overloading.php for inclusion in the spec
strlen currently does it's own hand-rolled type-checking because we emit a bytecode for it.
strlen is used to remove empty strings, but keep values of 0 (zero)
strlen of the string
strnatcmp() sort
strpbrk() searches the haystack string for a char_list.
strptime() returns an array with the date parsed, or FALSE on error.
strtok() splits a string (str) into smaller strings (tokens), with each token being delimited by any character from token.
strtr() call in two args syntax form
sub array dumps the resulting array
sub node should be removed
sublcass of builtin class
submit to sandcastle
submodules end up with a file called .git.
subpatterns in parentheses
substr returns false on empty strings
substr_compare() compares main_str from position offset with str up to length characters.
substr_count() returns the number of times the needle substring occurs in the haystack string.
substr_replace() replaces a copy of string delimited by the start and (optionally) length parameters with the string given in replacement.
subtyping works with tuples
succeeded involving constants
succeeds (the object just isn't used)
succeeds because all refs are closed
successfully close the directory handle so can delete in CLEAN section
suffix removal checks
suffix removal checks with trailing slashes
sum of array containing different float values
suppress date() function strict msgs
suppress errors as is generating a lot of "array to string" notices
suppress errors as won't be able to remove "." and ".." entries
swap two integers
switch warning on and test return value
switch..case, default
symlink to a non-existent path
symlink to a regular file using a relative dest
symlink to a regular file using an absolute path
symlink to a symlink using a relative path
symlink to a symlink using an absolute path
symlink() creates a symbolic link to the existing target with the specified name link.
syntax error
system() is just like the C version of the function in that it executes the given command and outputs the result.
systemlib can't have closures, so we get this...
table The name of this column's table as returned by the database.
table.inc will create a database connection and run some SQL queries, therefore the debug file should have entries
take on NULL by default
taking default args
taking lstat of symlink
taking references
tan() returns the tangent of the arg parameter.
target and port: hostname and port where the requested service can be found.
target: FQDN of the mail exchanger.
targetpattern.php
tcp The Transmission Control Protocol is a reliable, connection based, stream oriented, full duplex protocol.
temp dir created
temp dir created in present working directory
temp dir creating and deleting subdir and files in the dir
temp dir deleted
temp dir is_dir() on a directory
temp dir name used here
temp dir renaming a directory and check stat
temp dir touch a directory and check stat, there should be difference in atime
temp dir used
temp directory used here
temp directory, exp: bool(true)
temp dirname used
temp dirname used here
temp file created
temp file deleted
temp file name used here
temp file used
temp file used here
temp filename used
temp filename used here
temp files created
temp files created with this prefix the content that is filled into the temp files as created
temp link is_link() on a link
temp link name used
temp link touch a link, check stat, there should be difference in atime
temperory array for checking unexpected behavior
temporary addition for Kent's setup, Win32 box
test C::o_invoke, C::o_invoke_few_args, lookup in call_user_func static method call (in G::f4).
test CBC, ECB modes test encrypt decrypt test tripledes, aes test different lengths of key, iv test no iv being passed on CBC, ECB  test upto 32 bytes with unlimited strength
test HHVM_VERSION and HHVM_VERSION_ID matches
test IssetM
test UnsetM
test a successful flush
test a unsuccessful flush
test against non-class/non-interface "types" and even non-types
test all transitions before specified time range
test all transitions when PHP_INT_MIN is supplied and an end before the first transition
test all transitions when PHP_INT_MIN is supplied and an end just after the first transition
test alternate syntax
test begin after end of range equal
test begin and end of range equal
test begin and end of range equal to same transition time
test binary data transfer
test comment
test compression
test conversion to array type
test conversion to null type
test conversion to object type
test conversion to resource type
test conversion to string type
test conversion to these types
test copying of a phar with mounted entries
test doubles around -4e21
test elseif
test end of range equal to transition time
test equality of result
test fflush() with handle of files opened in different modes
test fflush() with handle to a file opened in read-only mode as resource
test fflush() with handle to hard links as resource
test fflush() with handle to symbollic link
test fflush() with handle to the files opened in different modes
test fgetss with all read modes
test for equality
test for invalid values
test for stats of dir/file when their names are stored in an array
test for stats of dir/file when their names are stored in objects
test for stats of link when their names are stored in object and array
test for the correct behavior this time
test for valid values
test fread with file opened in "r" and "rb" mode only Content with numeric and strings with it
test freeing queue in RSHUTDOWN
test fscanf() for its return type
test ftruncate with file opened in different modes
test if (dynamic or not) "color" property exists
test if color exists and is accessible, or is dynamic
test if dummy exists and is accessible, or is dynamic
test if dynamic dummy exists
test if hidden exists and is accesible, or is dynamic
test if x exists and is accessible, or is dynamic
test invalid arguments : non-resources
test invalid values
test is_executable() with file having different filepath notation
test is_executable() with file/dir having different permissions
test is_executable() with invalid arguments
test is_readable() with file having different filepath notation
test join() by giving different pieces values
test join() by passing different glue arguments
test join() by passing different unexpected value for pieces argument
test join() by passing pieces as array containing sub array(s)
test manually created array
test mapping for system function names
test memleaks here
test multi-char delimiter
test mysql_connect localhost
test mysql_connect localhost:port
test mysqli_connect localhost:port
test mysqli_real_connect
test mysqli_real_connect compressed
test mysqli_real_connect with db
test mysqli_real_connect with port
test namespace prefix is also included
test namespace prefix is also included.
test non-existent file request
test only this endpoint
test only this method
test open for write with corrupted phar
test open for write with new phar
test packed array
test passing in the same variable where 1 is by value, the other is a different type and by reference so should be updated to the new type.
test phar_open_url() with quiet stat for code coverage
test portable POSIX characters 0..127
test readfile() by providing an include path, second argument
test readfile() with third argument : context
test relative directories and stream contexts.
test rename() by trying to rename an existing file/dir to the same name and one another
test rename() by trying to rename an existing file/dir/link to the same name and one another
test resource cleanup
test setlocale by specifying a specific locale as input
test shuffle() with array containing heredoc strings as its keys
test shuffle() with array containing heredoc strings as values
test simple function case
test simple text transfer
test single-char delimiter
test standard skipif sections
test start and end of range equal to transition time
test start of range equal to transition time
test that mb_ereg can match correctly when passed different character classes.
test that the logging is appending without newlines
test the effects of is_dir() on stats of a dir
test the effects of is_file() on stats of a file
test the effects of is_link() on stats of hard link
test the effects of is_link() on stats of link
test the effects of rename() on stats of dir
test the effects of rename() on stats of dir/file
test the effects of rename() on stats of file
test the effects of rename() on stats of link
test the effects of touch() on stats of dir
test the effects of touch() on stats of file
test the effects of touch() on stats of link
test the effects of truncate() on stats of a file
test the effects of truncate() on stats of file
test the effects of writing to a file on the stats of the file
test the effects on stats by changing permissions of a dir
test the effects on stats by changing permissions of link
test the effects on stats by deleting file/subdir from a dir
test the effects on stats with changing permissions of file
test the effects on stats with creating file/subdir in a dir
test the effects on stats with writing data into a  file
test the effects on the stats of dir/file for changing permissions of dir/file
test the stats of dir/file when their names are stored in objects
test the stats of file opened in write mode and then same in read mode
test these functions on array which is already unset
test too few and too many parameters
test ucwords() with different string prepared using double quote
test ucwords() with different string prepared using heredoc
test ucwords() with different string prepared using single quote
test use of list
test using a series of classes, some derived
test using a series of interfaces
test using unescaped ", embedded (actual) tab, variable substitution, multiple lines
test using variables that are not instances
test valid values
test validation
test without any error
test wordwrap by passing different values for break argument
test wordwrap by passing different values for width argument
test wordwrap() by supplying different values for cut argument
test wordwrap() with break arguments as single spaces
test1.jpg is a 1*1 image that does not contain any Exif/Comment information test2.jpg is the same image but contains Exif/Comment information and a copy of test1.jpg as a thumbnail.
test4.jpg is a 1*1 image that contains Exif tags written by WindowsXP
testctag A processing instruction
testing RecursiveArrayIterator
testing UDF
testing array changing
testing array_fill() by passing different types of array  values for 'val' argument
testing array_fill() by passing different unexpected value for 'start_key' argument
testing array_fill() by passing different unexpected values for 'num' argument
testing array_fill() by passing different unexpected values for 'val' argument
testing array_fill() by passing various  object values for 'val' argument
testing arsort() by providing different unexpected values for array argument with following flag values.
testing arsort() by providing integer/string object arrays with following flag values  1.
testing arsort() function by supplying different arrays, flag value is default
testing arsort() function by supplying integer object array, flag value is default
testing arsort() function by supplying integer object array, flag value is defualt
testing arsort() function by supplying string object array, flag value is default
testing arsort() function by supplying string object array, flag value is defualt
testing asort() by providing different unexpected values for array argument with following flag values.
testing asort() by providing integer/string object arrays with following flag values  1.
testing asort() function by supplying different arrays, flag value is default
testing asort() function by supplying integer object array, flag value is default
testing asort() function by supplying integer object array, flag value is defualt
testing asort() function by supplying string object array, flag value is default
testing asort() function by supplying string object array, flag value is defualt
testing chmod with a non-existing file
testing empty and isset on arrays
testing empty array, should no notice at all
testing exception scoping
testing join() by passing different unexpected value for glue argument
testing krsort() by providing array of integer/string objects with following flag values: 1.Defualt flag value 2.SORT_REGULAR - compare items normally
testing krsort() by providing different unexpected values for array argument with following flag values: 1.flag value as defualt 2.SORT_REGULAR - compare items normally 3.SORT_NUMERIC - compare items numerically 4.SORT_STRING - compare items as strings
testing krsort() function by supplying integer object array, flag value is defualt
testing krsort() function by supplying string object array, flag value is defualt
testing ksort() by providing array ofinteger/string objects with following flag values:  1.SORT_NUMERIC - compare items numerically 2.SORT_STRING - compare items as strings
testing ksort() by providing different unexpected values for array argument with following flag values: 1.
testing ksort() function by supplying integer object array, flag value is defualt
testing ksort() function by supplying string object array, flag value is defualt
testing loops scoping
testing natcasesort() function by supplying string object array
testing on hard link
testing on soft link
testing prepare() and sqlite3stmt
testing query() and SQLite3Result
testing rsort() function by supplying integer object array, flag value is defualt
testing rsort() function by supplying string object array, flag value is defualt
testing scalar variables
testing sort() by providing different unexpected values for array argument with following flag values.
testing sort() by providing integer/string object arrays with flag values are defualt, SORT_REGULAR
testing sort() function by supplying different arrays, flag value is defualt
testing sort() function by supplying integer object array, flag value is defualt
testing sort() function by supplying string object array, flag value is defualt
testing static access for methods and properties in anon classes
testing sticky bit
testing that names existing on both sides of if is defined
testing traits in anon classes
testing whether htmlspecialchars_decode() is binary safe or not
testing whether strip_tags() is binary safe or not
testing wordwrap() by providing different values for str argument
tests FPushFunc
tests FPushFuncD
thank you Helgi
that runs for several whole lines
the "current" element as seen by the iterator is unmodified
the Phar::startBuffering()/ Phar::stopBuffering() pair of methods is provided for this purpose.
the array is with  three elements in it.
the array is with three elements in it.
the array is with two elements in it.
the code has to be serialized and unserialized to get a deep copy
the config.h needs special care
the core dll
the correct answer is 'Baz'
the default gc root size is 10,000
the end (yes, this is a little hack :P)
the error doesn't show the filename but 'Unknown'
the exception thrown in this test results in a memory leak, which is fine
the first parameter is special
the first part isn't relevant generate the line offsets array
the first time you run this script you will be asked to  associate it with a program.
the following encoded-words are identical and are UTF-8 Japanese.
the following values may be ORed to it.
the important part here are the indexes 1 and 2
the lines below will catch by '__get' magic method since these variables are unavailable anymore
the main recursion function.
the mother of all interop tests
the namespaceURI is "http://www.w3.org/2000/xmlns/" and neither the  qualifiedName nor its prefix is "xmlns".
the next 2 generate java messages so we don't replicate the php messages
the null is successfully unwrapped
the order of the array 2.
the problem does not occur with 1 field only selected.
the qualifiedName has a prefix and the  namespaceURI is null
the qualifiedName or its prefix is "xmlns" and the  namespaceURI is  different from  "http://www.w3.org/2000/xmlns/"
the redirect section allows a set of tests to be reused outside of a given test dir
the reference doesn't persist across the clone
the rest are fine...
the test executables settings, used for web tests
the timezone can be overridden when not specifying a calendar
the used file is actually irrelevant, so just use this file even though it's not an .ini
the way escape string differs from PostgreSQL 9.0
there are 7 sets of args that crash PHP (and other args that don't), each of those 7 is now a separate PHPT test to ensure that each of the 7 args are always tested.
there is no diff and we can't extract username we cannot schedule sandcasstle job
these need parens
these two are from Magnus Holmgren (extracted from a pcre-dev mailing list post)
this bucket will trigger the segfault
this calls __set but not __get
this causes a segmentation fault
this change is in function context
this checks f,g,G conversion for snprintf/spprintf
this comment will be removed
this comment-like thingy really is part of the string literal
this could fail with shorter returns, but it never does...
this cycle echoes all associative array key where value equals "apple"
this definition escapes the clause
this definition escapes the clause, even with terminality
this depends on terminality calculation
this doesn't create the include dirs in this directory we change to this to ensure we are not part of the include paths.
this doesn't go through __set()...
this doesn't work, expected false
this else does NOT go with the outer if
this else does go with the outer if
this fails because the manifest length does not include the other 10 byte manifest data
this file has a wrong crc
this file is not used in the cron job use it to test the gcc regex with the sample data provided
this file may be duplicated to provide testing for multiple php binaries or configurations.
this gives invalid args to shell_exec
this grants you access to protected methods and members
this is a C-style comment ...
this is a token passed to all iterators so it can be invalidated.
this is an Apache Licensed font, see separate LICENSE file
this is an ISO-8859-1 umlaut
this is different from new DateTimeZone('CET'), which gives a Europe/Berlin timezone
this is fine this is fine since it is a subdir of an allowed dir
this is name of the file
this is name of the file created by create_files()
this is not fine any more since the file is not in the allowed dir set now
this is not fine since it is not a subdir of an allowed dir
this is not the same as "dummy"
this is ok:
this is where we actually store elements
this is wrong:
this key is in the sub-array
this line doesn't crash PHP
this line has no impact on test output on Windows
this line will crash CLI
this link won't get created
this makes ob_end_clean raise an error
this may stop working in future versions, but is here for code coverage purposes
this means there can be up to a .9 millisecond difference which will fail this test.
this might cause a warning - no index used
this must be a class, closure does not trigger segfault
this next line is for increased code coverage
this one also generates a java message rather than our own so we don't replicate php message
this one was already deleted from the cache
this returns false since we didn't pass any info to the constructor
this satisfies 1 line of code coverage
this satisfies another line of code coverage
this segfaulted before
this should be a TCP/IP connection and not a Unix Socket (or SHM or Named Pipe)
this should be allowed
this should be an error, since it can never be true
this should be false
this should be flagged as an error
this should die -- Exception class must be abstract...
this should end up using the cufiter (hhas) implementation
this should fail
this should produce an out of sync error
this should raise one more warning
this should repeat the same range
this should show an error, cause results are not buffered
this string is an excerpt of a phar archive that caused an infinite loop
this test ensures that our variance checks don't raise a false positive on `this`, which is implemented as a special `as` type constraint
this test randomly fails on Windows and this is the cause.
this test works fine with Expat but fails with libxml which we now use as default further investigation has shown that not only line count is skippet on CDATA sections but that libxml does also show different column numbers and byte positions depending on context and in opposition to what one would expect to see and what good old Expat reported just fine ...
this tests coverage of the case where the phar exists and has no files
this tests if the cache is working correctly, as the char tables must be rebuilt after the locale change
this throws an exception
this triggers the custom error handler
this variable to use with isset
this will always return null, but it's safe from type checking perspective, so no error
this will crash with libmysql from PHP 5.0.6 (or earlier) to 5.3.0
this will end up OK
this will end up crashing
this will fine
this will fine too
this will make conversion fail.
this works as expected
this works fine delete link
this::T is resolved as C::T, and D::T in case of unresolved type.
throw out any blank lines after these pattern
thrown exception in the callback
throws exception in pseudomain
time zone has priority
timestamp (microseconds)
timestamp (sec)
timestamp has to be some wednesday
to avoid trouble with  numeric ranges, lets pass the numbers as a string
to enable dir deletion
to ensure all elements are displayed get an unset variable
to ensure we include the file in RepoAuthoritative mode
to make sure that max_links is really set to one
to make sure the array's life cycle is correct
to make sure we have at least one working connection...
to thickness pixels.
todo ssl connections
token_get_all() parses the given source string into PHP language tokens using the Zend engine's lexical scanner.
token_name() gets the symbolic name for a PHP token value.
too few arguments
too many arguments
too many parameter
top doesn't take any args, lets see what happens if we give it one
total number of tests run find max nested statement depth
totalmem The maximum size of the memory of the process, in bytes.
touch a file check stat, there should be difference in atime
touch() after renaming the file
tragically these work also
trailing separators
trailing white space is ignored
transitive lambda captures
translating single char
treated as a string
tries to find "hello world" (should be Hello, world)
tries to find "lo, world" at start of string
tries to find 2 digits at the end of a string (0 matches)
trigger a generator
trigger error handler
trigger generator
trigger run
trim out newline since Map doesn't like them in its keys
trim with unset/null/boolean variable - retuns an empty string
tripledes is a block cipher of 64 bits (8 bytes)
tripledes uses keys upto 192 bits (24 bytes)
tripledes uses keys with exactly 192 bits (24 bytes)
true true if not exist
true, similar to 'abstract class'
true, true, false
truncate it
truncate it to half of its current size
truncate it to size 0
truncate the file created earlier in subdir, the size of the file is 12000bytes truncate the same file, in the loop , each time with the decrement in size by 1200 bytes, until -1200bytes size
truncate the file to its current filesize, size should not change
truncate the file to smaller size and display the content
truncate the file when file pointer is positioned at end of the file
try different locale names
try fgetc on files which are opened in non readable modes w, wb, wt, a, ab, at, x, xb, xt
try fgets on files which are opened in non readable modes w, wb, wt, a, ab, at, x, xb, xt
try fread when file pointer at end
try isset/unset/empty on a member function
try n delete the dir create the dir now
try n read a char, none expected
try n read a line, none expected
try not to segv when you have no arguments:
try now with traditional
try protected here
try reading a char using fgetc() using invalid handles - closed file handle - unset file handle
try reading a line using fgets() using invalid handles - closed file handle - unset file handle
try reading from file which is having zero content create the file and then open in read mode and try reading
try reading the file opened in different modes of reading
try renaming a non existing file
try template dir
try the basic options
try to access non-existant elements
try to allocate something in that memory
try to draw a white ellipse
try to duplicate the original bug by running this as a CGI test using ob_start and zlib.output_compression(or ob_gzhandler) so it follows more of the original code-path than just calling gzcompress on CLI or CGI
try to get dir handle
try to open 2 links
try to open 3 links
try to open, expected failure
try to override the context node
try to read
try to respect php.ini but make run time a soft limit
try to set invalid serialize_handler
try to trigger usual "match known text" optimization
try to truncate it and display the file content
try to truncate it to a negative size, size should not change
try to truncate it to size bigger then current
try to truncate it to while file pointer at the end
try to use stmt_affected_rows like stmt_num_rows
try uncompressing empty string
try various case combinations of keywords
ttl  "Time To Live" remaining for this record.
tvCoerceParamToStringInPlace
tv_sec may be zero , causing socket_select() to return immediately.
two arbitrary dates
two blank lines
two fields are needed.
two foreaches
two result sets
two valid multi-byte characters
two-dimensional assoc.
type  String containing the record type.
type The data type used for this field   decimals The number of decimals used (for integer fields)
type The data type used for this field decimals The number of decimals used (for integer fields)
type aliases
type casting operators : (int), (integer), (float), (real), (double), (string), (array), (object), (bool), (boolean),(unset)
type constant
type string  The current call type.
type_structure() should autoload the alias it references
u - the argument is treated as an integer, and presented as an unsigned decimal number.
udp The User Datagram Protocol is a connectionless, unreliable, protocol with fixed record lengths.
ugly trick for ZEND_VM_DEFINE_OP
uid User ID of the user in numeric form.
uid User ID, should be the same as the uid parameter used when calling the function, and hence redundant.
uksort() will sort the keys of an array using a user-supplied comparison function.
umasking directory
umasking file
unallocated index
unbalanced tag, ignore it.
unbind twice
unbuffered result set
unchecked lvar
undefined  variable
undefined and unset vars
undefined attribute
undefined data
undefined object
undefined variable
undefined variable in string form
undefined/unset vars
unexpected argument type
unexpected arguments
unexpected no.
unexpected no.of arguments in array_search()
unexpected no.of arguments in in_array()
unexpected number of arguments
unexpected second argument in array_search()
unexpected second argument in in_array()
unhandled exception
unicode mode
unicode mode should throw a warning
unixifed path
unixtojd() calls php_localtime_r() which for Pacific timezone systems, returns a time -8 hours -this incorrect localtime is passed to the julian date conversion (GregorianToSDN) function which works (probably correctly) but returns -1 day from expected because its input is -1 from expected
unknown class
unknown type
unknown use is defaulted to value
unlink old test results
unlink the file
unlinking directory
unpack() works slightly different from Perl as the unpacked data is stored in an associative array.
unreachable:
unread_bytes (int) - the number of bytes currently contained in the PHP's own internal buffer.
unrechable, but make the typechecker happy.
unrelated parent method
unset a member and check
unset a variable
unset all properties
unset and dump the array containing all the resources to see that unset works correctly
unset bool vars and undefined var
unset data and return value
unset file handle
unset file type resource
unset object
unset the element
unset the file handle
unset the global var
unset the resource
unset the static var
unset the variable
unset the variable passed
unset the vars
unset the whole array
unset them to make it null.
unset variable
unset variables
unset() destroys the variable only in the context of the rest of a function Following calls will restore the previous value of a variable.
unset() variation1: checking unset on static variable inside a function.
unset() variation2: Pass by reference If a variable that is PASSED BY REFERENCE is unset() inside of a function, only the local variable is destroyed.
unset() variation2: unset on a global variable inside a function If a globalized variable is unset() inside of a function, only the local variable is destroyed.
unset/undefined  vars
unset/undefined arrays
unsets global "version"
unsets local "version" in current scope
unsetting data
unsigned int type variation
unsigned integer representation of a negative integer
unsigned integer representation of a positive integer
unsupported tags
until we find something better
unusual data
up to level 5.
upload the file
uploaded file
uri (string) - the URI/filename associated with this stream.
urlencode so that non-ascii shows up parsable in phpt file
use :: notation, as a const is implicitly static
use Booleans for label values
use Booleans for label values /*
use a prefix not used in context
use bin2hex to catch those cases were raw is true
use callee saved
use check_iscallable() to check whether given string is valid function name expected: true as it is valid callback
use check_iscallable() to check whether given variable is valid function name expected: false
use check_iscallable_objects() to check whether given object/string has valid method name
use class properties
use get_class_methods to see effect if any
use groups of expressions
use if with an instance of a class
use isset to see that array is not set
use it like num_rows
use my handler
use recursion to implement a factorial function Note: can call a function prior to its definition
use stat on file created using "w" and "r" mode of fopen
use the context argument with include path
use unset/empty/isset to check the object
used by HACKLIB_iteratable.
used in result table output
used in result table output PRIVATE VARIABLES
used in unserialize() for unknown classes
used to count the number of charsets
used to flag a swap between good and bad 4 bad ones
used to trigger gc_collect_cycles
useful to implement methods like map to operate in a general manner the second optional option returns an ImmVector from a pair when the method warrants it
user Custom Element
user abstract class abstract function
user abstract class non-abstract function
user defined exception code
user exceptions.
user function
user interface method
user private instance method
user private static method
user public instance method
user public static method
user supplied data
username and password are specified, the constructor will attempt to authenticate the connection with the database before returning.
uses RenameFunction to ensure that all arguments are retained
using a collection to break out of hhas implementation
using built-in function 'chr' as 'callback'
using built-in function 'is_int' as 'callback'
using directly the sub_array as pieces
using language construct 'echo' as 'callback'
using language construct 'exit' as 'callback'
using only array_shift:
using other white spaces
using quote chars in sentence
using reasonable numbers for these operators.
using same name
using special chars in sentence
using xpath query with registered namespace.
using zval_dump() to dump out the objects and its reference count
utf8_strlen
utime - user time used by the current process.
valid 4 byte char - smiling face with heart-shaped eyes
valid expression
valid flags
valid html and php tags
valid stream context
valid, but vacuous, as it has no side effect and its value is not used
value defined in common base class
value of Z isn't available to the pre-class
value of l_onoff is not always 1, Darwin returns 128
value stored with string key
valueLengthB0
values stored with numeric index
values that equate to 1 2.
var_export('/' .
variable can have name
variable initialisation
variable value change shall have no impact
variables are binary
variadic arguments
variation of offset and length to point to same element
variation of start and length to point to same element
variations in multiplier as well as string to be repeated.
variations in string and multiplier as an integer
variations of three arguments with use of various extract types
variations of two arguments
variations with four arguments
variations with three arguments
variations with two arguments
various char formats
various combinations of arrays to be used for the test
various float formats
various formats
various hexa formats
various integer formats
various octal formats
various offsets
various read modes
various scientific formats
various string formats
various string inputs
various unsigned int formats
various utility functions
various write only modes
verify clone by calling method on new object
verify doc2 does not depend on doc1
verify that the algorithm works
verifying content stays
verifying private property
verifying protected property
verifying public property
version_compare() compares two "PHP-standardized" version number strings.
very light-weight function to extract a single named file from a gzipped tarball.
very likely a bug, but someone could have done something on the server between the second last insert and the lock, therefore don't stop just bail
very likely we do have both of them...
vfsstream already provides isolation for unit tests, allow it
violate type inference via SetG
virtualmem The maximum size of the virtual memory for the process, in bytes.
visibility and static ordering unimportant
wait a bit to let the process finish
wait while mysql closes connection
warning, not an array
warnings are unhandy, lets go for exceptions for a second
warns and bails returning null
was Locale::VALID_LOCALE Show them.
we also need CURLOPT_VERBOSE to be set to test CURLOPT_STDERR properly
we also need to set CURLOPT_VERBOSE to test CURLOPT_STDERR properly
we are aiming for maximum compression to test MYSQLI_CLIENT_COMPRESS
we are lucky, we can run the test
we assume the above as test_mysqli_get_client_stats_table_1ed and in the following we check only those
we can now properly var_dump() FVs
we can turn it off
we cannot be sure which class this method corresponds to, so mark method as needing to be verified
we compare the results of fgets using differing line lengths to  test the fgets layer also
we do not have spl_autoload_registered yet
we don't need bigger
we eval the section so we can allow dynamic env vars for cgi testing
we expect a different return value than our input value typically the difference is only the type
we get "Catchable fatal error: saying Object of class could not be converted to string" by default when an object is passed instead of string.
we get "Catchable fatal error: saying Object of class could not be converted to string" by default when an object is passed instead of string: The error can be  avoided by choosing the __toString magix method as follows:
we get "Catchable fatal error: saying Object of class could not be converted to string" by default, when an object is passed instead of string.
we get "Catchable fatal error: saying Object of class could not be converted to string" by default, when an object is passed instead of string: The error can be  avoided by choosing the __toString magix method as follows:
we get "Catchable fatal error: saying Object of class needle could not be  converted to string" by default when an object is passed instead of string: The error can be  avoided by choosing the __toString magix method as follows:
we get "Catchable fatal error: saying Object of class needle could not be converted to string" by default when an object is passed instead of string: The error can be avoided by choosing the __toString magix method as follows:
we got this far without problems.
we have found a start tag
we have to trim as AES rounds the blocks and decrypt doesnt detect that
we know the type, position and name of this symbol, but we won't know where it's definition is
we might get the old handle
we need exclusive access for a moment
we need to check, if the server allows anonymous login (empty user)
we need to differentiate serialized(false) and false returned because of a bad string
we need to skip this test_mysqli_get_client_stats_table_1 in unicode - we send set names utf8 during mysql_connect
we only want to know that src directory is in the include path
we really want to skip it...
we should add ruled when to expect them
we should never get here, we use warnings, but never trust a system...
we sohuld have no default link
we sohuld have no default link anymore
we want headers also, so fopen
we will repeat a max of 20 times
we're assuming loopback is 1.
weight: Ranking to weight which of commonly prioritized targets should be chosen at random.
werkt al niet meer
what about long values for a valid option ...
what gets interpreted.
when keys are different in terms of only case
when no offset is given, use read position.
when the chunk size is 1, the read buffer is skipped, but the the writes are made in chunks of size 1 (business as usual) This should probably be revisited
when this task is fixed or o_id on static calls
when using CGI, strip the headers from the output
while not EOF
while this method returns an array containing the names of the two inherited, private properties and adds to that the one private property from the current class, serialize runs in the context o fthe type of the object given it.
while..., do..while, break, continue
white-space only / empty keys are skipped
whole 2-d array dumps the resulting array
whole array
width as -ne and cut as false
width as -ne and cut as true
width as zero and cut as false
width as zero and cut as true
will be initialized upon first access
will cause an error
will overwrite itself
will print "PATH:Array"
will print NULL (which is ok, but execution should never get here if the value is NULL)
will return false as pattern would match half way through string
will return true as pattern matches from start of string
will stay as they are since their character codes are above 127 and they do not have a named entity representaion.
will throw an exception
windows system dlls that should not be bundled
windows, dev and rdev will not match this is expected
with "at" and "dot" (uses backreferences) ('josmessa at uk dot ibm dot com')
with 'callback' argument
with NULL as second Argument
with a different story with respect to unreachable code ...
with all args
with all possible arguments
with always_false callback function
with always_true callback function
with autoload options..
with boolean value as second Argument
with characters range as second Argument
with current handle delete temporary files
with defalut args
with default 'callback' argument
with default and optional arguments
with default args
with default args  check the file pointer position and if eof
with default argument
with default arguments
with default as well as optional arguments
with default callback
with default keys and boolean values
with default keys and numeric values
with default len value
with default length
with default numeric index
with default start and len value
with default start and len values
with different wildcard characters
with double quoted strings
with explicit compression level, length
with heredocs associative arrays
with hotname:dir notation
with incorrect callback function
with invalid PHP tags and invalid tokens
with invalid open tag for testing entire source to be unknown token
with length, delimiter  check the file pointer position and if eof
with more arguments
with multiple escape sequences as second Argument
with numbers range as second Argument
with one argument less than expected
with one more than the expected number of arguments
with only numbers
with optional arguments
with php open/close tags
with previous handle
with repeated needles
with single quoted strings
with single space as second Argument
with some special characters as second Argument
with specific length
with string key
with string key index
with three argument less than expected
with three arguments
with two argument less than expected
with two arguments
with type hints
with valid php tags and invalid tokens
with var args
with white space chars
with zero arguments
without "needle"
without () uses the "default" constructor note that without the default values in the constructor, PHP5 warns "Missing argument n for Point::__construct()" then constructor has undefined parameters, so uses NULL
without a __wakeup method, any instance property present in the string takes on its default value.
without output buffering, the debug messages will cause all manner of warnings
without php open/close tags testing for T_INLINE_HTML
without quotes
without second Argument
without the correct inference of foo as an async generator, this would raise an error about an Awaitable being used dangerously
without wild-card char
works in php, not HHVM
works with/without use clause
would call with not AttrPublic
would call, not attr public
wrapper_data (mixed) - wrapper specific data attached to this stream.
wrapper_type (string) - a label describing the protocol wrapper implementation layered over the stream.
write .diff
write a blank line
write another line of text and a blank line this will be used to test, if the fgetcsv() read more than a line and its working when only a blan line is read
write another line of text and a blank line this will be used to test, if the fgetcsv() read more than a line and its working when only a blank line is read
write at the end of the file
write attribute_ns without start_element first
write data to the file
write header
write line of text
write some data to cause overflow
write some test files to test folder
write to a file in csv format
write to temp file
write-out the first 30 permutations
writes "goodbye", then destructors are called.
writing 100 bytes
writing a blank line
writing data to the file
writing object to the file
writing to an empty file
writing to the file
wrong crc32
wrong parameter count
wrong params
wrong resource type
wrting 6 bytes of data
x - the argument is treated as an integer and presented as a hexadecimal number (with lowercase letters).
x is not defined
x modes require that file does not exist
xml_parse() parses an XML document.
xml_parse_into_struct ..
xml_parser_create() creates a new XML parser and returns a resource handle referencing it to be used by the other XML functions.
xml_parser_create_ns() creates a new XML parser with XML namespace support and returns a resource handle referencing it to be used by the other XML functions.
yaml with some custom tags
yes, I know it goes to the wrong place
yippie - we can create databases etc.
you can add regression tests for your extension here the output of your test code has to be equal to the text in the --EXPECT-- section below for the tests to pass, differences between the output and the expected text are interpreted as failure see php5/tests/README for further information on writing regression tests
you can bind as many values as you want no matter if they can be replaced or not
you can resume using the cursor later, from where it was located, if more data were received.
you can specify a range of characters.
zend 5.5 doesn't warn on this access, but warns on all others
zend_fetch_var_address_helper
zend_vm_opcodes.c
zero argument
zero argument  feof()
zero argument fclose()
zero arguments
zero as argument
zero elements
zero gmp_sqrt
zero means no error occurred.
zero-padding works on strings too
zerovalue for width
zlib default
zlib format
zval** 's', 'p', 'C' handled separately
